MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "12.04 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                28. April 2016
Time:                12.04 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O0FC0B2Z 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl50\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O0FC0B2Z new;
MPRINT(EM_DIAGRAM):   run;
266817     filename emflow
266817   ! "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl50\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl50\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl50: Scoring AUTONEURAL24_TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
266818     *------------------------------------------------------------*;
266819     * Ensmbl50: Scoring AUTONEURAL24_TRAIN data;
266820     *------------------------------------------------------------*;
266821     data EMWS8.Ensmbl50_TRAIN
266822     / view=EMWS8.Ensmbl50_TRAIN
266823     ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl50_TRAIN / view=EMWS8.Ensmbl50_TRAIN ;
266824     set EMWS8.AutoNeural24_TRAIN
266825     ;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural24_TRAIN ;
266826     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl50\EMFLOWSCORE.sas.
266827    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
266828    +* Ensmbl50: Combine model for DepVar;
MPRINT(EM_DIAGRAM):   * Ensmbl50: Combine model for DepVar;
266829    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
266830    +* Ensmbl50: Scoring Code of model 1 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl50: Scoring Code of model 1 of 7;
266831    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
266832    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
266833    +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
266834    +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
266835    +* NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
266836    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
266837    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
266838    +* TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
266839    +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
266840    +* NODE: Stat;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
266841    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
266842    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
266843    +* TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
266844    +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
266845    +* NODE: Filter;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
266846    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
266847    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
266848    +* TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
266849    +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
266850    +* NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
266851    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
266852    +
266853    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
266854    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
266854   !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
266855    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
266856    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
266857    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
266858    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
266859    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
266860    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
266861    +* TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
266862    +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
266863    +* NODE: Trans;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
266864    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
266865    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
266866    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
266867    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
266868    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
266869    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
266870    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
266871    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
266872    +* TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
266873    +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
266874    +* NODE: Part;
MPRINT(EM_DIAGRAM):   * NODE: Part;
266875    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
266876    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
266877    +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
266878    +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
266879    +* NODE: BINNING;
MPRINT(EM_DIAGRAM):   * NODE: BINNING;
266880    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
266881    +length _UFormat $200;
MPRINT(EM_DIAGRAM):   length _UFormat $200;
266882    +drop _UFormat;
MPRINT(EM_DIAGRAM):   drop _UFormat;
266883    +_UFormat='';
MPRINT(EM_DIAGRAM):   _UFormat='';
266884    +
266885    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
266886    +* Variable: AcceptedCmp5;
MPRINT(EM_DIAGRAM):   * Variable: AcceptedCmp5;
266887    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
266888    +LABEL GRP_AcceptedCmp5 =
266889    +'Grouped: AcceptedCmp5';
MPRINT(EM_DIAGRAM):   LABEL GRP_AcceptedCmp5 = 'Grouped: AcceptedCmp5';
266890    +
266891    +_UFormat = put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _UFormat = put(AcceptedCmp5,BEST.);
266892    +%dmnormip(_UFormat);
MPRINT(DMNORMIP):   call dmnorm(_UFormat,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
266893    +if MISSING(_UFORMAT) then do;
MPRINT(EM_DIAGRAM):   if MISSING(_UFORMAT) then do;
266894    +GRP_AcceptedCmp5 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 1;
266895    +end;
MPRINT(EM_DIAGRAM):   end;
266896    +else if NOT MISSING(_UFORMAT) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(_UFORMAT) then do;
266897    +if (_UFORMAT eq '0'
266898    +) then do;
MPRINT(EM_DIAGRAM):   if (_UFORMAT eq '0' ) then do;
266899    +GRP_AcceptedCmp5 = 2;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 2;
266900    +end;
MPRINT(EM_DIAGRAM):   end;
266901    +else
266902    +if (_UFORMAT eq '1'
266903    +) then do;
MPRINT(EM_DIAGRAM):   else if (_UFORMAT eq '1' ) then do;
266904    +GRP_AcceptedCmp5 = 3;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 3;
266905    +end;
MPRINT(EM_DIAGRAM):   end;
266906    +else do;
MPRINT(EM_DIAGRAM):   else do;
266907    +GRP_AcceptedCmp5 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 1;
266908    +end;
MPRINT(EM_DIAGRAM):   end;
266909    +end;
MPRINT(EM_DIAGRAM):   end;
266910    +
266911    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
266912    +* Variable: Frq;
MPRINT(EM_DIAGRAM):   * Variable: Frq;
266913    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
266914    +LABEL GRP_Frq = "Grouped: Frq";
MPRINT(EM_DIAGRAM):   LABEL GRP_Frq = "Grouped: Frq";
266915    +
266916    +if MISSING(Frq) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Frq) then do;
266917    +GRP_Frq = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq = 1;
266918    +end;
MPRINT(EM_DIAGRAM):   end;
266919    +else if NOT MISSING(Frq) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Frq) then do;
266920    +if Frq < 6 then do;
MPRINT(EM_DIAGRAM):   if Frq < 6 then do;
266921    +GRP_Frq = 2;
MPRINT(EM_DIAGRAM):   GRP_Frq = 2;
266922    +end;
MPRINT(EM_DIAGRAM):   end;
266923    +else
266924    +if 6 <= Frq AND Frq < 12 then do;
MPRINT(EM_DIAGRAM):   else if 6 <= Frq AND Frq < 12 then do;
266925    +GRP_Frq = 3;
MPRINT(EM_DIAGRAM):   GRP_Frq = 3;
266926    +end;
MPRINT(EM_DIAGRAM):   end;
266927    +else
266928    +if 12 <= Frq AND Frq < 18 then do;
MPRINT(EM_DIAGRAM):   else if 12 <= Frq AND Frq < 18 then do;
266929    +GRP_Frq = 4;
MPRINT(EM_DIAGRAM):   GRP_Frq = 4;
266930    +end;
MPRINT(EM_DIAGRAM):   end;
266931    +else
266932    +if 18 <= Frq then do;
MPRINT(EM_DIAGRAM):   else if 18 <= Frq then do;
266933    +GRP_Frq = 5;
MPRINT(EM_DIAGRAM):   GRP_Frq = 5;
266934    +end;
MPRINT(EM_DIAGRAM):   end;
266935    +end;
MPRINT(EM_DIAGRAM):   end;
266936    +
266937    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
266938    +* Variable: Income;
MPRINT(EM_DIAGRAM):   * Variable: Income;
266939    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
266940    +LABEL GRP_Income =
266941    +'Grouped: Income';
MPRINT(EM_DIAGRAM):   LABEL GRP_Income = 'Grouped: Income';
266942    +
266943    +if MISSING(Income) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Income) then do;
266944    +GRP_Income = 1;
MPRINT(EM_DIAGRAM):   GRP_Income = 1;
266945    +end;
MPRINT(EM_DIAGRAM):   end;
266946    +else if NOT MISSING(Income) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Income) then do;
266947    +if Income < 35268 then do;
MPRINT(EM_DIAGRAM):   if Income < 35268 then do;
266948    +GRP_Income = 2;
MPRINT(EM_DIAGRAM):   GRP_Income = 2;
266949    +end;
MPRINT(EM_DIAGRAM):   end;
266950    +else
266951    +if 35268 <= Income AND Income < 52157 then do;
MPRINT(EM_DIAGRAM):   else if 35268 <= Income AND Income < 52157 then do;
266952    +GRP_Income = 3;
MPRINT(EM_DIAGRAM):   GRP_Income = 3;
266953    +end;
MPRINT(EM_DIAGRAM):   end;
266954    +else
266955    +if 52157 <= Income AND Income < 69486 then do;
MPRINT(EM_DIAGRAM):   else if 52157 <= Income AND Income < 69486 then do;
266956    +GRP_Income = 4;
MPRINT(EM_DIAGRAM):   GRP_Income = 4;
266957    +end;
MPRINT(EM_DIAGRAM):   end;
266958    +else
266959    +if 69486 <= Income then do;
MPRINT(EM_DIAGRAM):   else if 69486 <= Income then do;
266960    +GRP_Income = 5;
MPRINT(EM_DIAGRAM):   GRP_Income = 5;
266961    +end;
MPRINT(EM_DIAGRAM):   end;
266962    +end;
MPRINT(EM_DIAGRAM):   end;
266963    +
266964    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
266965    +* Variable: Mnt;
MPRINT(EM_DIAGRAM):   * Variable: Mnt;
266966    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
266967    +LABEL GRP_Mnt = "Grouped: Mnt";
MPRINT(EM_DIAGRAM):   LABEL GRP_Mnt = "Grouped: Mnt";
266968    +
266969    +if MISSING(Mnt) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Mnt) then do;
266970    +GRP_Mnt = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 1;
266971    +end;
MPRINT(EM_DIAGRAM):   end;
266972    +else if NOT MISSING(Mnt) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Mnt) then do;
266973    +if Mnt < 72 then do;
MPRINT(EM_DIAGRAM):   if Mnt < 72 then do;
266974    +GRP_Mnt = 2;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 2;
266975    +end;
MPRINT(EM_DIAGRAM):   end;
266976    +else
266977    +if 72 <= Mnt AND Mnt < 405.5 then do;
MPRINT(EM_DIAGRAM):   else if 72 <= Mnt AND Mnt < 405.5 then do;
266978    +GRP_Mnt = 3;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 3;
266979    +end;
MPRINT(EM_DIAGRAM):   end;
266980    +else
266981    +if 405.5 <= Mnt AND Mnt < 1064 then do;
MPRINT(EM_DIAGRAM):   else if 405.5 <= Mnt AND Mnt < 1064 then do;
266982    +GRP_Mnt = 4;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 4;
266983    +end;
MPRINT(EM_DIAGRAM):   end;
266984    +else
266985    +if 1064 <= Mnt then do;
MPRINT(EM_DIAGRAM):   else if 1064 <= Mnt then do;
266986    +GRP_Mnt = 5;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 5;
266987    +end;
MPRINT(EM_DIAGRAM):   end;
266988    +end;
MPRINT(EM_DIAGRAM):   end;
266989    +
266990    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
266991    +* Variable: MntFishProducts;
MPRINT(EM_DIAGRAM):   * Variable: MntFishProducts;
266992    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
266993    +LABEL GRP_MntFishProducts =
266994    +'Grouped: MntFishProducts';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntFishProducts = 'Grouped: MntFishProducts';
266995    +
266996    +if MISSING(MntFishProducts) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntFishProducts) then do;
266997    +GRP_MntFishProducts = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 1;
266998    +end;
MPRINT(EM_DIAGRAM):   end;
266999    +else if NOT MISSING(MntFishProducts) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntFishProducts) then do;
267000    +if MntFishProducts < 3 then do;
MPRINT(EM_DIAGRAM):   if MntFishProducts < 3 then do;
267001    +GRP_MntFishProducts = 2;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 2;
267002    +end;
MPRINT(EM_DIAGRAM):   end;
267003    +else
267004    +if 3 <= MntFishProducts AND MntFishProducts < 13 then do;
MPRINT(EM_DIAGRAM):   else if 3 <= MntFishProducts AND MntFishProducts < 13 then do;
267005    +GRP_MntFishProducts = 3;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 3;
267006    +end;
MPRINT(EM_DIAGRAM):   end;
267007    +else
267008    +if 13 <= MntFishProducts AND MntFishProducts < 47 then do;
MPRINT(EM_DIAGRAM):   else if 13 <= MntFishProducts AND MntFishProducts < 47 then do;
267009    +GRP_MntFishProducts = 4;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 4;
267010    +end;
MPRINT(EM_DIAGRAM):   end;
267011    +else
267012    +if 47 <= MntFishProducts then do;
MPRINT(EM_DIAGRAM):   else if 47 <= MntFishProducts then do;
267013    +GRP_MntFishProducts = 5;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 5;
267014    +end;
MPRINT(EM_DIAGRAM):   end;
267015    +end;
MPRINT(EM_DIAGRAM):   end;
267016    +
267017    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
267018    +* Variable: MntGoldProds;
MPRINT(EM_DIAGRAM):   * Variable: MntGoldProds;
267019    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
267020    +LABEL GRP_MntGoldProds =
267021    +'Grouped: MntGoldProds';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntGoldProds = 'Grouped: MntGoldProds';
267022    +
267023    +if MISSING(MntGoldProds) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntGoldProds) then do;
267024    +GRP_MntGoldProds = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 1;
267025    +end;
MPRINT(EM_DIAGRAM):   end;
267026    +else if NOT MISSING(MntGoldProds) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntGoldProds) then do;
267027    +if MntGoldProds < 9 then do;
MPRINT(EM_DIAGRAM):   if MntGoldProds < 9 then do;
267028    +GRP_MntGoldProds = 2;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 2;
267029    +end;
MPRINT(EM_DIAGRAM):   end;
267030    +else
267031    +if 9 <= MntGoldProds AND MntGoldProds < 25 then do;
MPRINT(EM_DIAGRAM):   else if 9 <= MntGoldProds AND MntGoldProds < 25 then do;
267032    +GRP_MntGoldProds = 3;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 3;
267033    +end;
MPRINT(EM_DIAGRAM):   end;
267034    +else
267035    +if 25 <= MntGoldProds AND MntGoldProds < 59 then do;
MPRINT(EM_DIAGRAM):   else if 25 <= MntGoldProds AND MntGoldProds < 59 then do;
267036    +GRP_MntGoldProds = 4;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 4;
267037    +end;
MPRINT(EM_DIAGRAM):   end;
267038    +else
267039    +if 59 <= MntGoldProds then do;
MPRINT(EM_DIAGRAM):   else if 59 <= MntGoldProds then do;
267040    +GRP_MntGoldProds = 5;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 5;
267041    +end;
MPRINT(EM_DIAGRAM):   end;
267042    +end;
MPRINT(EM_DIAGRAM):   end;
267043    +
267044    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
267045    +* Variable: MntMeatProducts;
MPRINT(EM_DIAGRAM):   * Variable: MntMeatProducts;
267046    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
267047    +LABEL GRP_MntMeatProducts =
267048    +'Grouped: MntMeatProducts';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntMeatProducts = 'Grouped: MntMeatProducts';
267049    +
267050    +if MISSING(MntMeatProducts) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntMeatProducts) then do;
267051    +GRP_MntMeatProducts = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 1;
267052    +end;
MPRINT(EM_DIAGRAM):   end;
267053    +else if NOT MISSING(MntMeatProducts) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntMeatProducts) then do;
267054    +if MntMeatProducts < 17 then do;
MPRINT(EM_DIAGRAM):   if MntMeatProducts < 17 then do;
267055    +GRP_MntMeatProducts = 2;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 2;
267056    +end;
MPRINT(EM_DIAGRAM):   end;
267057    +else
267058    +if 17 <= MntMeatProducts AND MntMeatProducts < 72 then do;
MPRINT(EM_DIAGRAM):   else if 17 <= MntMeatProducts AND MntMeatProducts < 72 then do;
267059    +GRP_MntMeatProducts = 3;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 3;
267060    +end;
MPRINT(EM_DIAGRAM):   end;
267061    +else
267062    +if 72 <= MntMeatProducts AND MntMeatProducts < 246 then do;
MPRINT(EM_DIAGRAM):   else if 72 <= MntMeatProducts AND MntMeatProducts < 246 then do;
267063    +GRP_MntMeatProducts = 4;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 4;
267064    +end;
MPRINT(EM_DIAGRAM):   end;
267065    +else
267066    +if 246 <= MntMeatProducts then do;
MPRINT(EM_DIAGRAM):   else if 246 <= MntMeatProducts then do;
267067    +GRP_MntMeatProducts = 5;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 5;
267068    +end;
MPRINT(EM_DIAGRAM):   end;
267069    +end;
MPRINT(EM_DIAGRAM):   end;
267070    +
267071    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
267072    +* Variable: MntWines;
MPRINT(EM_DIAGRAM):   * Variable: MntWines;
267073    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
267074    +LABEL GRP_MntWines =
267075    +'Grouped: MntWines';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntWines = 'Grouped: MntWines';
267076    +
267077    +if MISSING(MntWines) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntWines) then do;
267078    +GRP_MntWines = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 1;
267079    +end;
MPRINT(EM_DIAGRAM):   end;
267080    +else if NOT MISSING(MntWines) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntWines) then do;
267081    +if MntWines < 24 then do;
MPRINT(EM_DIAGRAM):   if MntWines < 24 then do;
267082    +GRP_MntWines = 2;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 2;
267083    +end;
MPRINT(EM_DIAGRAM):   end;
267084    +else
267085    +if 24 <= MntWines AND MntWines < 183.5 then do;
MPRINT(EM_DIAGRAM):   else if 24 <= MntWines AND MntWines < 183.5 then do;
267086    +GRP_MntWines = 3;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 3;
267087    +end;
MPRINT(EM_DIAGRAM):   end;
267088    +else
267089    +if 183.5 <= MntWines AND MntWines < 508 then do;
MPRINT(EM_DIAGRAM):   else if 183.5 <= MntWines AND MntWines < 508 then do;
267090    +GRP_MntWines = 4;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 4;
267091    +end;
MPRINT(EM_DIAGRAM):   end;
267092    +else
267093    +if 508 <= MntWines then do;
MPRINT(EM_DIAGRAM):   else if 508 <= MntWines then do;
267094    +GRP_MntWines = 5;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 5;
267095    +end;
MPRINT(EM_DIAGRAM):   end;
267096    +end;
MPRINT(EM_DIAGRAM):   end;
267097    +
267098    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
267099    +* Variable: NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumCatalogPurchases;
267100    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
267101    +LABEL GRP_NumCatalogPurchases =
267102    +'Grouped: NumCatalogPurchases';
MPRINT(EM_DIAGRAM):   LABEL GRP_NumCatalogPurchases = 'Grouped: NumCatalogPurchases';
267103    +
267104    +if MISSING(NumCatalogPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumCatalogPurchases) then do;
267105    +GRP_NumCatalogPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 1;
267106    +end;
MPRINT(EM_DIAGRAM):   end;
267107    +else if NOT MISSING(NumCatalogPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumCatalogPurchases) then do;
267108    +if NumCatalogPurchases < 0 then do;
MPRINT(EM_DIAGRAM):   if NumCatalogPurchases < 0 then do;
267109    +GRP_NumCatalogPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 2;
267110    +end;
MPRINT(EM_DIAGRAM):   end;
267111    +else
267112    +if 0 <= NumCatalogPurchases AND NumCatalogPurchases < 2 then do;
MPRINT(EM_DIAGRAM):   else if 0 <= NumCatalogPurchases AND NumCatalogPurchases < 2 then do;
267113    +GRP_NumCatalogPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 3;
267114    +end;
MPRINT(EM_DIAGRAM):   end;
267115    +else
267116    +if 2 <= NumCatalogPurchases AND NumCatalogPurchases < 4 then do;
MPRINT(EM_DIAGRAM):   else if 2 <= NumCatalogPurchases AND NumCatalogPurchases < 4 then do;
267117    +GRP_NumCatalogPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 4;
267118    +end;
MPRINT(EM_DIAGRAM):   end;
267119    +else
267120    +if 4 <= NumCatalogPurchases then do;
MPRINT(EM_DIAGRAM):   else if 4 <= NumCatalogPurchases then do;
267121    +GRP_NumCatalogPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 5;
267122    +end;
MPRINT(EM_DIAGRAM):   end;
267123    +end;
MPRINT(EM_DIAGRAM):   end;
267124    +
267125    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
267126    +* Variable: NumDistPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumDistPurchases;
The SAS System

267127    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
267128    +LABEL GRP_NumDistPurchases = "Grouped: NumDistPurchases";
MPRINT(EM_DIAGRAM):   LABEL GRP_NumDistPurchases = "Grouped: NumDistPurchases";
267129    +
267130    +if MISSING(NumDistPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumDistPurchases) then do;
267131    +GRP_NumDistPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 1;
267132    +end;
MPRINT(EM_DIAGRAM):   end;
267133    +else if NOT MISSING(NumDistPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumDistPurchases) then do;
267134    +if NumDistPurchases < 3 then do;
MPRINT(EM_DIAGRAM):   if NumDistPurchases < 3 then do;
267135    +GRP_NumDistPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 2;
267136    +end;
MPRINT(EM_DIAGRAM):   end;
267137    +else
267138    +if 3 <= NumDistPurchases AND NumDistPurchases < 6 then do;
MPRINT(EM_DIAGRAM):   else if 3 <= NumDistPurchases AND NumDistPurchases < 6 then do;
267139    +GRP_NumDistPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 3;
267140    +end;
MPRINT(EM_DIAGRAM):   end;
267141    +else
267142    +if 6 <= NumDistPurchases AND NumDistPurchases < 10 then do;
MPRINT(EM_DIAGRAM):   else if 6 <= NumDistPurchases AND NumDistPurchases < 10 then do;
267143    +GRP_NumDistPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 4;
267144    +end;
MPRINT(EM_DIAGRAM):   end;
267145    +else
267146    +if 10 <= NumDistPurchases then do;
MPRINT(EM_DIAGRAM):   else if 10 <= NumDistPurchases then do;
267147    +GRP_NumDistPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 5;
267148    +end;
MPRINT(EM_DIAGRAM):   end;
267149    +end;
MPRINT(EM_DIAGRAM):   end;
267150    +
267151    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
267152    +* Variable: NumWebPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumWebPurchases;
267153    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
267154    +LABEL GRP_NumWebPurchases =
267155    +'Grouped: NumWebPurchases';
MPRINT(EM_DIAGRAM):   LABEL GRP_NumWebPurchases = 'Grouped: NumWebPurchases';
267156    +
267157    +if MISSING(NumWebPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumWebPurchases) then do;
267158    +GRP_NumWebPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 1;
267159    +end;
MPRINT(EM_DIAGRAM):   end;
267160    +else if NOT MISSING(NumWebPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumWebPurchases) then do;
267161    +if NumWebPurchases < 2 then do;
MPRINT(EM_DIAGRAM):   if NumWebPurchases < 2 then do;
267162    +GRP_NumWebPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 2;
267163    +end;
MPRINT(EM_DIAGRAM):   end;
267164    +else
267165    +if 2 <= NumWebPurchases AND NumWebPurchases < 4 then do;
MPRINT(EM_DIAGRAM):   else if 2 <= NumWebPurchases AND NumWebPurchases < 4 then do;
267166    +GRP_NumWebPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 3;
267167    +end;
MPRINT(EM_DIAGRAM):   end;
267168    +else
267169    +if 4 <= NumWebPurchases AND NumWebPurchases < 6 then do;
MPRINT(EM_DIAGRAM):   else if 4 <= NumWebPurchases AND NumWebPurchases < 6 then do;
267170    +GRP_NumWebPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 4;
267171    +end;
MPRINT(EM_DIAGRAM):   end;
267172    +else
267173    +if 6 <= NumWebPurchases then do;
MPRINT(EM_DIAGRAM):   else if 6 <= NumWebPurchases then do;
267174    +GRP_NumWebPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 5;
267175    +end;
MPRINT(EM_DIAGRAM):   end;
267176    +end;
MPRINT(EM_DIAGRAM):   end;
267177    +
267178    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
267179    +* Variable: RFMstat;
MPRINT(EM_DIAGRAM):   * Variable: RFMstat;
267180    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
267181    +LABEL GRP_RFMstat = "Grouped: RFMstat";
MPRINT(EM_DIAGRAM):   LABEL GRP_RFMstat = "Grouped: RFMstat";
267182    +
267183    +if MISSING(RFMstat) then do;
MPRINT(EM_DIAGRAM):   if MISSING(RFMstat) then do;
267184    +GRP_RFMstat = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 1;
267185    +end;
MPRINT(EM_DIAGRAM):   end;
267186    +else if NOT MISSING(RFMstat) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(RFMstat) then do;
267187    +if RFMstat < 10.34 then do;
MPRINT(EM_DIAGRAM):   if RFMstat < 10.34 then do;
267188    +GRP_RFMstat = 2;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 2;
267189    +end;
MPRINT(EM_DIAGRAM):   end;
267190    +else
267191    +if 10.34 <= RFMstat AND RFMstat < 128.09 then do;
MPRINT(EM_DIAGRAM):   else if 10.34 <= RFMstat AND RFMstat < 128.09 then do;
267192    +GRP_RFMstat = 3;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 3;
267193    +end;
MPRINT(EM_DIAGRAM):   end;
267194    +else
267195    +if 128.09 <= RFMstat AND RFMstat < 455.22 then do;
MPRINT(EM_DIAGRAM):   else if 128.09 <= RFMstat AND RFMstat < 455.22 then do;
267196    +GRP_RFMstat = 4;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 4;
267197    +end;
MPRINT(EM_DIAGRAM):   end;
267198    +else
267199    +if 455.22 <= RFMstat then do;
MPRINT(EM_DIAGRAM):   else if 455.22 <= RFMstat then do;
267200    +GRP_RFMstat = 5;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 5;
267201    +end;
MPRINT(EM_DIAGRAM):   end;
267202    +end;
MPRINT(EM_DIAGRAM):   end;
267203    +
267204    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
267205    +* Variable: RMntFrq;
MPRINT(EM_DIAGRAM):   * Variable: RMntFrq;
267206    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
267207    +LABEL GRP_RMntFrq = "Grouped: RMntFrq";
MPRINT(EM_DIAGRAM):   LABEL GRP_RMntFrq = "Grouped: RMntFrq";
267208    +
267209    +if MISSING(RMntFrq) then do;
MPRINT(EM_DIAGRAM):   if MISSING(RMntFrq) then do;
267210    +GRP_RMntFrq = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 1;
267211    +end;
MPRINT(EM_DIAGRAM):   end;
267212    +else if NOT MISSING(RMntFrq) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(RMntFrq) then do;
267213    +if RMntFrq < 13.25 then do;
MPRINT(EM_DIAGRAM):   if RMntFrq < 13.25 then do;
267214    +GRP_RMntFrq = 2;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 2;
267215    +end;
MPRINT(EM_DIAGRAM):   end;
267216    +else
267217    +if 13.25 <= RMntFrq AND RMntFrq < 30.4 then do;
MPRINT(EM_DIAGRAM):   else if 13.25 <= RMntFrq AND RMntFrq < 30.4 then do;
267218    +GRP_RMntFrq = 3;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 3;
267219    +end;
MPRINT(EM_DIAGRAM):   end;
267220    +else
267221    +if 30.4 <= RMntFrq AND RMntFrq < 52.86 then do;
MPRINT(EM_DIAGRAM):   else if 30.4 <= RMntFrq AND RMntFrq < 52.86 then do;
267222    +GRP_RMntFrq = 4;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 4;
267223    +end;
MPRINT(EM_DIAGRAM):   end;
267224    +else
267225    +if 52.86 <= RMntFrq then do;
MPRINT(EM_DIAGRAM):   else if 52.86 <= RMntFrq then do;
267226    +GRP_RMntFrq = 5;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 5;
267227    +end;
MPRINT(EM_DIAGRAM):   end;
267228    +end;
MPRINT(EM_DIAGRAM):   end;
267229    +
267230    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
267231    +* Variable: Recency;
MPRINT(EM_DIAGRAM):   * Variable: Recency;
267232    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
267233    +LABEL GRP_Recency =
267234    +'Grouped: Recency';
MPRINT(EM_DIAGRAM):   LABEL GRP_Recency = 'Grouped: Recency';
267235    +
267236    +if MISSING(Recency) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Recency) then do;
267237    +GRP_Recency = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency = 1;
267238    +end;
MPRINT(EM_DIAGRAM):   end;
267239    +else if NOT MISSING(Recency) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Recency) then do;
267240    +if Recency < 24 then do;
MPRINT(EM_DIAGRAM):   if Recency < 24 then do;
267241    +GRP_Recency = 2;
MPRINT(EM_DIAGRAM):   GRP_Recency = 2;
267242    +end;
MPRINT(EM_DIAGRAM):   end;
267243    +else
267244    +if 24 <= Recency AND Recency < 48 then do;
MPRINT(EM_DIAGRAM):   else if 24 <= Recency AND Recency < 48 then do;
267245    +GRP_Recency = 3;
MPRINT(EM_DIAGRAM):   GRP_Recency = 3;
267246    +end;
MPRINT(EM_DIAGRAM):   end;
267247    +else
267248    +if 48 <= Recency AND Recency < 73 then do;
MPRINT(EM_DIAGRAM):   else if 48 <= Recency AND Recency < 73 then do;
267249    +GRP_Recency = 4;
MPRINT(EM_DIAGRAM):   GRP_Recency = 4;
267250    +end;
MPRINT(EM_DIAGRAM):   end;
267251    +else
267252    +if 73 <= Recency then do;
MPRINT(EM_DIAGRAM):   else if 73 <= Recency then do;
267253    +GRP_Recency = 5;
MPRINT(EM_DIAGRAM):   GRP_Recency = 5;
267254    +end;
MPRINT(EM_DIAGRAM):   end;
267255    +end;
MPRINT(EM_DIAGRAM):   end;
267256    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
267257    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
267258    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
267259    +* NODE: AutoNeural24;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural24;
267260    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
267261    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
267262    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
267263    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
267264    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
267265    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
267266    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
267267    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
267268    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
267269    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
267270    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
267271    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
267272    +LENGTH _WARN_ $4
267273    +      F_DepVar  $ 12
267274    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
267275    +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
267276    +
267277    +      label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
MPRINT(EM_DIAGRAM):   label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
267278    +
267279    +      label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
267280    +
267281    +      label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
267282    +
267283    +      label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
267284    +
267285    +      label GRP_Income2 = 'Dummy: GRP_Income=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Income2 = 'Dummy: GRP_Income=2' ;
267286    +
267287    +      label GRP_Income3 = 'Dummy: GRP_Income=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Income3 = 'Dummy: GRP_Income=3' ;
267288    +
267289    +      label GRP_Income4 = 'Dummy: GRP_Income=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Income4 = 'Dummy: GRP_Income=4' ;
267290    +
267291    +      label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
267292    +
267293    +      label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
267294    +
267295    +      label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
267296    +
267297    +      label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
267298    +
267299    +      label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
267300    +
267301    +      label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
267302    +
267303    +      label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
267304    +
267305    +      label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
267306    +
267307    +      label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
267308    +
267309    +      label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
267310    +
267311    +      label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
267312    +
267313    +      label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
267314    +
267315    +      label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
267316    +
267317    +      label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
267318    +
267319    +      label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
267320    +
267321    +      label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
267322    +
267323    +      label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
267324    +
267325    +      label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
267326    +
267327    +      label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
267328    +
267329    +      label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
267330    +
267331    +      label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
267332    +
267333    +      label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
267334    +
267335    +      label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
267336    +
267337    +      label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
267338    +
267339    +      label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
267340    +
267341    +      label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
267342    +
267343    +      label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
267344    +
267345    +      label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
267346    +
267347    +      label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
267348    +
267349    +      label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
267350    +
267351    +      label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
267352    +
267353    +      label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
267354    +
267355    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
267356    +
267357    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
267358    +
267359    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
267360    +
267361    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
267362    +
267363    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
267364    +
267365    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
267366    +
267367    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
267368    +
267369    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
267370    +
267371    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
267372    +
267373    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
267374    +
267375    +*** Generate dummy variables for GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmp5 ;
267376    +drop GRP_AcceptedCmp52 ;
MPRINT(EM_DIAGRAM):   drop GRP_AcceptedCmp52 ;
267377    +if missing( GRP_AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmp5 ) then do;
267378    +   GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
267379    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
267380    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
267381    +end;
MPRINT(EM_DIAGRAM):   end;
267382    +else do;
MPRINT(EM_DIAGRAM):   else do;
267383    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
267384    +   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
267385    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
267386    +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
267387    +      GRP_AcceptedCmp52 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = 1;
267388    +   end;
MPRINT(EM_DIAGRAM):   end;
267389    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
267390    +      GRP_AcceptedCmp52 = -1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = -1;
267391    +   end;
MPRINT(EM_DIAGRAM):   end;
267392    +   else do;
MPRINT(EM_DIAGRAM):   else do;
267393    +      GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
267394    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
267395    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
267396    +   end;
MPRINT(EM_DIAGRAM):   end;
267397    +end;
MPRINT(EM_DIAGRAM):   end;
267398    +
267399    +*** Generate dummy variables for GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Frq ;
267400    +drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
267401    +if missing( GRP_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Frq ) then do;
267402    +   GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
267403    +   GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
267404    +   GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
267405    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
267406    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
267407    +end;
MPRINT(EM_DIAGRAM):   end;
267408    +else do;
MPRINT(EM_DIAGRAM):   else do;
267409    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
267410    +   _dm12 = put( GRP_Frq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Frq , BEST12. );
267411    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
267412    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
267413    +      GRP_Frq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = -1;
267414    +      GRP_Frq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = -1;
267415    +      GRP_Frq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = -1;
267416    +   end;
MPRINT(EM_DIAGRAM):   end;
267417    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
267418    +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
267419    +      GRP_Frq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 1;
267420    +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
267421    +   end;
MPRINT(EM_DIAGRAM):   end;
267422    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
267423    +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
267424    +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
267425    +      GRP_Frq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 1;
267426    +   end;
MPRINT(EM_DIAGRAM):   end;
267427    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
267428    +      GRP_Frq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 1;
267429    +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
267430    +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
267431    +   end;
MPRINT(EM_DIAGRAM):   end;
267432    +   else do;
MPRINT(EM_DIAGRAM):   else do;
267433    +      GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
267434    +      GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
267435    +      GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
267436    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
267437    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
267438    +   end;
MPRINT(EM_DIAGRAM):   end;
267439    +end;
MPRINT(EM_DIAGRAM):   end;
267440    +
267441    +*** Generate dummy variables for GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Income ;
267442    +drop GRP_Income2 GRP_Income3 GRP_Income4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Income2 GRP_Income3 GRP_Income4 ;
267443    +if missing( GRP_Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Income ) then do;
267444    +   GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
267445    +   GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
267446    +   GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
267447    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
267448    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
267449    +end;
MPRINT(EM_DIAGRAM):   end;
267450    +else do;
MPRINT(EM_DIAGRAM):   else do;
267451    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
267452    +   _dm12 = put( GRP_Income , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Income , BEST12. );
267453    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
267454    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
267455    +      GRP_Income2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = -1;
267456    +      GRP_Income3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = -1;
267457    +      GRP_Income4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = -1;
267458    +   end;
MPRINT(EM_DIAGRAM):   end;
267459    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
267460    +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
267461    +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
267462    +      GRP_Income4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 1;
267463    +   end;
MPRINT(EM_DIAGRAM):   end;
267464    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
267465    +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
267466    +      GRP_Income3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 1;
267467    +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
267468    +   end;
MPRINT(EM_DIAGRAM):   end;
267469    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
267470    +      GRP_Income2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 1;
267471    +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
267472    +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
267473    +   end;
MPRINT(EM_DIAGRAM):   end;
267474    +   else do;
MPRINT(EM_DIAGRAM):   else do;
267475    +      GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
267476    +      GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
267477    +      GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
267478    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
267479    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
267480    +   end;
MPRINT(EM_DIAGRAM):   end;
267481    +end;
MPRINT(EM_DIAGRAM):   end;
267482    +
267483    +*** Generate dummy variables for GRP_Mnt ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Mnt ;
267484    +drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
267485    +if missing( GRP_Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Mnt ) then do;
267486    +   GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
267487    +   GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
267488    +   GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
267489    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
267490    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
267491    +end;
MPRINT(EM_DIAGRAM):   end;
267492    +else do;
MPRINT(EM_DIAGRAM):   else do;
267493    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
267494    +   _dm12 = put( GRP_Mnt , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Mnt , BEST12. );
267495    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
267496    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
267497    +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
267498    +      GRP_Mnt3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 1;
267499    +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
267500    +   end;
MPRINT(EM_DIAGRAM):   end;
267501    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
267502    +      GRP_Mnt2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = -1;
267503    +      GRP_Mnt3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = -1;
267504    +      GRP_Mnt4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = -1;
267505    +   end;
MPRINT(EM_DIAGRAM):   end;
267506    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
267507    +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
267508    +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
267509    +      GRP_Mnt4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 1;
267510    +   end;
MPRINT(EM_DIAGRAM):   end;
267511    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
267512    +      GRP_Mnt2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 1;
267513    +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
267514    +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
267515    +   end;
MPRINT(EM_DIAGRAM):   end;
267516    +   else do;
MPRINT(EM_DIAGRAM):   else do;
267517    +      GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
267518    +      GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
267519    +      GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
267520    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
267521    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
267522    +   end;
MPRINT(EM_DIAGRAM):   end;
267523    +end;
MPRINT(EM_DIAGRAM):   end;
267524    +
267525    +*** Generate dummy variables for GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntFishProducts ;
267526    +drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
267527    +if missing( GRP_MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntFishProducts ) then do;
267528    +   GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
267529    +   GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
267530    +   GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
267531    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
267532    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
267533    +end;
MPRINT(EM_DIAGRAM):   end;
267534    +else do;
MPRINT(EM_DIAGRAM):   else do;
267535    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
267536    +   _dm12 = put( GRP_MntFishProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntFishProducts , BEST12. );
267537    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
267538    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
267539    +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
267540    +      GRP_MntFishProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 1;
267541    +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
267542    +   end;
MPRINT(EM_DIAGRAM):   end;
267543    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
267544    +      GRP_MntFishProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = -1;
267545    +      GRP_MntFishProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = -1;
267546    +      GRP_MntFishProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = -1;
267547    +   end;
MPRINT(EM_DIAGRAM):   end;
267548    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
267549    +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
267550    +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
267551    +      GRP_MntFishProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 1;
267552    +   end;
MPRINT(EM_DIAGRAM):   end;
267553    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
267554    +      GRP_MntFishProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 1;
267555    +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
267556    +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
267557    +   end;
MPRINT(EM_DIAGRAM):   end;
267558    +   else do;
MPRINT(EM_DIAGRAM):   else do;
267559    +      GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
267560    +      GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
267561    +      GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
267562    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
267563    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
267564    +   end;
MPRINT(EM_DIAGRAM):   end;
267565    +end;
MPRINT(EM_DIAGRAM):   end;
267566    +
267567    +*** Generate dummy variables for GRP_MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntGoldProds ;
267568    +drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
267569    +if missing( GRP_MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntGoldProds ) then do;
267570    +   GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
267571    +   GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
267572    +   GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
267573    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
267574    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
267575    +end;
MPRINT(EM_DIAGRAM):   end;
267576    +else do;
MPRINT(EM_DIAGRAM):   else do;
267577    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
267578    +   _dm12 = put( GRP_MntGoldProds , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntGoldProds , BEST12. );
267579    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
267580    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
267581    +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
267582    +      GRP_MntGoldProds3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 1;
267583    +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
267584    +   end;
MPRINT(EM_DIAGRAM):   end;
267585    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
267586    +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
267587    +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
267588    +      GRP_MntGoldProds4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 1;
267589    +   end;
MPRINT(EM_DIAGRAM):   end;
267590    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
267591    +      GRP_MntGoldProds2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = -1;
267592    +      GRP_MntGoldProds3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = -1;
267593    +      GRP_MntGoldProds4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = -1;
267594    +   end;
MPRINT(EM_DIAGRAM):   end;
267595    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
267596    +      GRP_MntGoldProds2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 1;
267597    +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
267598    +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
267599    +   end;
MPRINT(EM_DIAGRAM):   end;
267600    +   else do;
MPRINT(EM_DIAGRAM):   else do;
267601    +      GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
267602    +      GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
267603    +      GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
267604    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
267605    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
267606    +   end;
MPRINT(EM_DIAGRAM):   end;
267607    +end;
MPRINT(EM_DIAGRAM):   end;
267608    +
267609    +*** Generate dummy variables for GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntMeatProducts ;
267610    +drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
267611    +if missing( GRP_MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntMeatProducts ) then do;
267612    +   GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
267613    +   GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
267614    +   GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
267615    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
267616    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
267617    +end;
MPRINT(EM_DIAGRAM):   end;
267618    +else do;
MPRINT(EM_DIAGRAM):   else do;
267619    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
267620    +   _dm12 = put( GRP_MntMeatProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntMeatProducts , BEST12. );
267621    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
267622    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
267623    +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
267624    +      GRP_MntMeatProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 1;
267625    +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
267626    +   end;
MPRINT(EM_DIAGRAM):   end;
267627    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
267628    +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
267629    +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
267630    +      GRP_MntMeatProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 1;
267631    +   end;
MPRINT(EM_DIAGRAM):   end;
267632    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
267633    +      GRP_MntMeatProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = -1;
267634    +      GRP_MntMeatProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = -1;
267635    +      GRP_MntMeatProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = -1;
267636    +   end;
MPRINT(EM_DIAGRAM):   end;
267637    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
267638    +      GRP_MntMeatProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 1;
267639    +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
267640    +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
267641    +   end;
MPRINT(EM_DIAGRAM):   end;
267642    +   else do;
MPRINT(EM_DIAGRAM):   else do;
267643    +      GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
267644    +      GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
267645    +      GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
267646    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
267647    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
267648    +   end;
MPRINT(EM_DIAGRAM):   end;
267649    +end;
MPRINT(EM_DIAGRAM):   end;
267650    +
267651    +*** Generate dummy variables for GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntWines ;
267652    +drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
267653    +if missing( GRP_MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntWines ) then do;
267654    +   GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
267655    +   GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
267656    +   GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
267657    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
267658    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
267659    +end;
MPRINT(EM_DIAGRAM):   end;
267660    +else do;
MPRINT(EM_DIAGRAM):   else do;
267661    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
267662    +   _dm12 = put( GRP_MntWines , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntWines , BEST12. );
267663    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
267664    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
267665    +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
267666    +      GRP_MntWines3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 1;
267667    +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
267668    +   end;
MPRINT(EM_DIAGRAM):   end;
267669    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
267670    +      GRP_MntWines2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = -1;
267671    +      GRP_MntWines3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = -1;
267672    +      GRP_MntWines4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = -1;
267673    +   end;
MPRINT(EM_DIAGRAM):   end;
267674    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
267675    +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
267676    +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
267677    +      GRP_MntWines4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 1;
267678    +   end;
MPRINT(EM_DIAGRAM):   end;
267679    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
267680    +      GRP_MntWines2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 1;
267681    +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
267682    +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
267683    +   end;
MPRINT(EM_DIAGRAM):   end;
267684    +   else do;
MPRINT(EM_DIAGRAM):   else do;
267685    +      GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
267686    +      GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
267687    +      GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
267688    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
267689    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
267690    +   end;
MPRINT(EM_DIAGRAM):   end;
267691    +end;
MPRINT(EM_DIAGRAM):   end;
267692    +
267693    +*** Generate dummy variables for GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumCatalogPurchases ;
267694    +drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
267695    +if missing( GRP_NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumCatalogPurchases ) then do;
267696    +   GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
267697    +   GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
267698    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
267699    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
267700    +end;
MPRINT(EM_DIAGRAM):   end;
267701    +else do;
MPRINT(EM_DIAGRAM):   else do;
267702    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
267703    +   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
267704    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
267705    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
267706    +      GRP_NumCatalogPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 1;
267707    +      GRP_NumCatalogPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 0;
267708    +   end;
MPRINT(EM_DIAGRAM):   end;
267709    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
267710    +      GRP_NumCatalogPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = -1;
267711    +      GRP_NumCatalogPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = -1;
267712    +   end;
MPRINT(EM_DIAGRAM):   end;
267713    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
267714    +      GRP_NumCatalogPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 0;
267715    +      GRP_NumCatalogPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 1;
267716    +   end;
MPRINT(EM_DIAGRAM):   end;
267717    +   else do;
MPRINT(EM_DIAGRAM):   else do;
267718    +      GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
267719    +      GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
267720    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
267721    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
267722    +   end;
MPRINT(EM_DIAGRAM):   end;
267723    +end;
MPRINT(EM_DIAGRAM):   end;
267724    +
267725    +*** Generate dummy variables for GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumDistPurchases ;
267726    +drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
267727    +if missing( GRP_NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumDistPurchases ) then do;
267728    +   GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
267729    +   GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
267730    +   GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
267731    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
267732    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
267733    +end;
MPRINT(EM_DIAGRAM):   end;
267734    +else do;
MPRINT(EM_DIAGRAM):   else do;
267735    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
267736    +   _dm12 = put( GRP_NumDistPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumDistPurchases , BEST12. );
267737    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
267738    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
267739    +      GRP_NumDistPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = -1;
267740    +      GRP_NumDistPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = -1;
267741    +      GRP_NumDistPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = -1;
267742    +   end;
MPRINT(EM_DIAGRAM):   end;
267743    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
267744    +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
267745    +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
267746    +      GRP_NumDistPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 1;
267747    +   end;
MPRINT(EM_DIAGRAM):   end;
267748    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
267749    +      GRP_NumDistPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 1;
267750    +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
267751    +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
267752    +   end;
MPRINT(EM_DIAGRAM):   end;
267753    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
267754    +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
267755    +      GRP_NumDistPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 1;
267756    +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
267757    +   end;
MPRINT(EM_DIAGRAM):   end;
267758    +   else do;
MPRINT(EM_DIAGRAM):   else do;
267759    +      GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
267760    +      GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
267761    +      GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
267762    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
267763    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
267764    +   end;
MPRINT(EM_DIAGRAM):   end;
267765    +end;
MPRINT(EM_DIAGRAM):   end;
267766    +
267767    +*** Generate dummy variables for GRP_NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumWebPurchases ;
267768    +drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
267769    +if missing( GRP_NumWebPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumWebPurchases ) then do;
267770    +   GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
267771    +   GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
267772    +   GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
267773    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
267774    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
267775    +end;
MPRINT(EM_DIAGRAM):   end;
267776    +else do;
MPRINT(EM_DIAGRAM):   else do;
267777    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
267778    +   _dm12 = put( GRP_NumWebPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumWebPurchases , BEST12. );
267779    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
267780    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
267781    +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
267782    +      GRP_NumWebPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 1;
267783    +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
267784    +   end;
MPRINT(EM_DIAGRAM):   end;
267785    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
267786    +      GRP_NumWebPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = -1;
267787    +      GRP_NumWebPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = -1;
267788    +      GRP_NumWebPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = -1;
267789    +   end;
MPRINT(EM_DIAGRAM):   end;
267790    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
267791    +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
267792    +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
267793    +      GRP_NumWebPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 1;
267794    +   end;
MPRINT(EM_DIAGRAM):   end;
267795    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
267796    +      GRP_NumWebPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 1;
267797    +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
267798    +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
267799    +   end;
MPRINT(EM_DIAGRAM):   end;
267800    +   else do;
MPRINT(EM_DIAGRAM):   else do;
267801    +      GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
267802    +      GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
267803    +      GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
267804    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
267805    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
267806    +   end;
MPRINT(EM_DIAGRAM):   end;
267807    +end;
MPRINT(EM_DIAGRAM):   end;
267808    +
267809    +*** Generate dummy variables for GRP_RFMstat ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RFMstat ;
267810    +drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
267811    +if missing( GRP_RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RFMstat ) then do;
267812    +   GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
267813    +   GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
267814    +   GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
267815    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
267816    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
267817    +end;
MPRINT(EM_DIAGRAM):   end;
267818    +else do;
MPRINT(EM_DIAGRAM):   else do;
267819    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
267820    +   _dm12 = put( GRP_RFMstat , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RFMstat , BEST12. );
267821    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
267822    +   if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
267823    +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
267824    +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
267825    +      GRP_RFMstat4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 1;
267826    +   end;
MPRINT(EM_DIAGRAM):   end;
267827    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
267828    +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
267829    +      GRP_RFMstat3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 1;
267830    +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
267831    +   end;
MPRINT(EM_DIAGRAM):   end;
267832    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
267833    +      GRP_RFMstat2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = -1;
267834    +      GRP_RFMstat3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = -1;
267835    +      GRP_RFMstat4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = -1;
267836    +   end;
MPRINT(EM_DIAGRAM):   end;
267837    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
267838    +      GRP_RFMstat2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 1;
267839    +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
267840    +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
267841    +   end;
MPRINT(EM_DIAGRAM):   end;
267842    +   else do;
MPRINT(EM_DIAGRAM):   else do;
267843    +      GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
267844    +      GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
267845    +      GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
267846    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
267847    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
267848    +   end;
MPRINT(EM_DIAGRAM):   end;
267849    +end;
MPRINT(EM_DIAGRAM):   end;
267850    +
267851    +*** Generate dummy variables for GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RMntFrq ;
267852    +drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
267853    +if missing( GRP_RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RMntFrq ) then do;
267854    +   GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
267855    +   GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
267856    +   GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
267857    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
267858    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
267859    +end;
MPRINT(EM_DIAGRAM):   end;
267860    +else do;
MPRINT(EM_DIAGRAM):   else do;
267861    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
267862    +   _dm12 = put( GRP_RMntFrq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RMntFrq , BEST12. );
267863    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
267864    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
267865    +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
267866    +      GRP_RMntFrq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 1;
267867    +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
267868    +   end;
MPRINT(EM_DIAGRAM):   end;
267869    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
267870    +      GRP_RMntFrq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = -1;
267871    +      GRP_RMntFrq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = -1;
267872    +      GRP_RMntFrq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = -1;
267873    +   end;
MPRINT(EM_DIAGRAM):   end;
267874    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
267875    +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
267876    +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
267877    +      GRP_RMntFrq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 1;
267878    +   end;
MPRINT(EM_DIAGRAM):   end;
267879    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
267880    +      GRP_RMntFrq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 1;
267881    +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
267882    +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
267883    +   end;
MPRINT(EM_DIAGRAM):   end;
267884    +   else do;
MPRINT(EM_DIAGRAM):   else do;
267885    +      GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
267886    +      GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
267887    +      GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
267888    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
267889    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
267890    +   end;
MPRINT(EM_DIAGRAM):   end;
267891    +end;
MPRINT(EM_DIAGRAM):   end;
267892    +
267893    +*** Generate dummy variables for GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Recency ;
267894    +drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
267895    +if missing( GRP_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Recency ) then do;
267896    +   GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
267897    +   GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
267898    +   GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
267899    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
267900    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
267901    +end;
MPRINT(EM_DIAGRAM):   end;
267902    +else do;
MPRINT(EM_DIAGRAM):   else do;
267903    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
267904    +   _dm12 = put( GRP_Recency , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Recency , BEST12. );
267905    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
267906    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
267907    +      GRP_Recency2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = -1;
267908    +      GRP_Recency3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = -1;
267909    +      GRP_Recency4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = -1;
267910    +   end;
MPRINT(EM_DIAGRAM):   end;
267911    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
267912    +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
267913    +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
267914    +      GRP_Recency4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 1;
267915    +   end;
MPRINT(EM_DIAGRAM):   end;
267916    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
267917    +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
267918    +      GRP_Recency3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 1;
267919    +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
267920    +   end;
MPRINT(EM_DIAGRAM):   end;
267921    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
267922    +      GRP_Recency2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 1;
267923    +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
267924    +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
267925    +   end;
MPRINT(EM_DIAGRAM):   end;
267926    +   else do;
MPRINT(EM_DIAGRAM):   else do;
267927    +      GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
267928    +      GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
267929    +      GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
267930    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
267931    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
267932    +   end;
MPRINT(EM_DIAGRAM):   end;
267933    +end;
MPRINT(EM_DIAGRAM):   end;
267934    +
267935    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
267936    +*** Checking missing input Interval
267937    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
267938    +
267939    +IF NMISS(
267940    +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Year_Birth ) THEN DO;
267941    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
267942    +
267943    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
267944    +END;
MPRINT(EM_DIAGRAM):   END;
267945    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
267946    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
267947    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
267948    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
267949    +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
267950    +END;
MPRINT(EM_DIAGRAM):   END;
267951    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
267952    +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
267953    +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
267954    +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
267955    +END;
MPRINT(EM_DIAGRAM):   END;
267956    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
267957    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
267958    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
267959    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
267960    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
267961    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
267962    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
267963    +   H1x1_1  =    -1.98556205049158 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.98556205049158 * S_Year_Birth ;
267964    +   H1x1_2  =     2.65003203246915 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 2.65003203246915 * S_Year_Birth ;
267965    +   H1x1_1  = H1x1_1  +    -0.05712043872213 * GRP_AcceptedCmp52
267966    +          +     1.04378756398945 * GRP_Frq2  +     1.53971794568749 * GRP_Frq3
267967    +          +     1.46006856973709 * GRP_Frq4  +    -0.56202924907336 *
267968    +        GRP_Income2  +     4.72191701616365 * GRP_Income3
267969    +          +    -2.66170280222507 * GRP_Income4  +     0.01753317277737 *
267970    +        GRP_Mnt2  +    -3.49161842568046 * GRP_Mnt3  +    -2.05166246350112 *
267971    +        GRP_Mnt4  +     3.42363704603021 * GRP_MntFishProducts2
267972    +          +     4.07177263196201 * GRP_MntFishProducts3
267973    +          +    -0.95758193346069 * GRP_MntFishProducts4
267974    +          +     0.27642218349221 * GRP_MntGoldProds2
267975    +          +    -1.85260255304992 * GRP_MntGoldProds3
267976    +          +      0.0084996256166 * GRP_MntGoldProds4
267977    +          +     1.78769069128312 * GRP_MntMeatProducts2
267978    +          +    -5.09868822425716 * GRP_MntMeatProducts3
267979    +          +     -1.2944400003238 * GRP_MntMeatProducts4
267980    +          +     2.16310510520522 * GRP_MntWines2  +    -0.98848869719513 *
267981    +        GRP_MntWines3  +     0.37628412350279 * GRP_MntWines4
267982    +          +    -0.18399160398973 * GRP_NumCatalogPurchases3
267983    +          +     2.78149370347513 * GRP_NumCatalogPurchases4
267984    +          +    -1.92842775798726 * GRP_NumDistPurchases2
267985    +          +     1.36617128431309 * GRP_NumDistPurchases3
267986    +          +    -5.04459399151701 * GRP_NumDistPurchases4
267987    +          +    -3.10131336282255 * GRP_NumWebPurchases2
267988    +          +    -1.70853531086832 * GRP_NumWebPurchases3
267989    +          +    -1.81576465350843 * GRP_NumWebPurchases4
267990    +          +     0.97448188440932 * GRP_RFMstat2  +    -1.74164713551138 *
267991    +        GRP_RFMstat3  +    -1.61869970889612 * GRP_RFMstat4
267992    +          +     0.94148483345045 * GRP_RMntFrq2  +    -4.61928796757469 *
267993    +        GRP_RMntFrq3  +    -0.29552475494224 * GRP_RMntFrq4
267994    +          +     0.59385679636573 * GRP_Recency2  +    -0.70804337284842 *
267995    +        GRP_Recency3  +     2.46935358022796 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.05712043872213 * GRP_AcceptedCmp52 + 
1.04378756398945 * GRP_Frq2 + 1.53971794568749 * GRP_Frq3 + 1.46006856973709 * GRP_Frq4 + 
-0.56202924907336 * GRP_Income2 + 4.72191701616365 * GRP_Income3 + -2.66170280222507 * 
GRP_Income4 + 0.01753317277737 * GRP_Mnt2 + -3.49161842568046 * GRP_Mnt3 + -2.05166246350112 * 
GRP_Mnt4 + 3.42363704603021 * GRP_MntFishProducts2 + 4.07177263196201 * GRP_MntFishProducts3 + 
-0.95758193346069 * GRP_MntFishProducts4 + 0.27642218349221 * GRP_MntGoldProds2 + 
-1.85260255304992 * GRP_MntGoldProds3 + 0.0084996256166 * GRP_MntGoldProds4 + 1.78769069128312 
* GRP_MntMeatProducts2 + -5.09868822425716 * GRP_MntMeatProducts3 + -1.2944400003238 * 
GRP_MntMeatProducts4 + 2.16310510520522 * GRP_MntWines2 + -0.98848869719513 * GRP_MntWines3 + 
0.37628412350279 * GRP_MntWines4 + -0.18399160398973 * GRP_NumCatalogPurchases3 + 
2.78149370347513 * GRP_NumCatalogPurchases4 + -1.92842775798726 * GRP_NumDistPurchases2 + 
1.36617128431309 * GRP_NumDistPurchases3 + -5.04459399151701 * GRP_NumDistPurchases4 + 
-3.10131336282255 * GRP_NumWebPurchases2 + -1.70853531086832 * GRP_NumWebPurchases3 + 
-1.81576465350843 * GRP_NumWebPurchases4 + 0.97448188440932 * GRP_RFMstat2 + -1.74164713551138 
* GRP_RFMstat3 + -1.61869970889612 * GRP_RFMstat4 + 0.94148483345045 * GRP_RMntFrq2 + 
-4.61928796757469 * GRP_RMntFrq3 + -0.29552475494224 * GRP_RMntFrq4 + 0.59385679636573 * 
GRP_Recency2 + -0.70804337284842 * GRP_Recency3 + 2.46935358022796 * GRP_Recency4 ;
267996    +   H1x1_2  = H1x1_2  +    -2.86061192932804 * GRP_AcceptedCmp52
267997    +          +    -2.37847197829836 * GRP_Frq2  +     3.04126084255177 * GRP_Frq3
267998    +          +    -2.25316213708692 * GRP_Frq4  +    -2.15230505920585 *
267999    +        GRP_Income2  +     0.22423161350469 * GRP_Income3
268000    +          +     1.82470653064149 * GRP_Income4  +     0.91426377324604 *
268001    +        GRP_Mnt2  +    -2.52824414988744 * GRP_Mnt3  +     1.25821903076482 *
268002    +        GRP_Mnt4  +     2.48215495303599 * GRP_MntFishProducts2
268003    +          +    -2.53912545896945 * GRP_MntFishProducts3
268004    +          +    -1.24420085467004 * GRP_MntFishProducts4
268005    +          +     0.87589074104426 * GRP_MntGoldProds2
268006    +          +     2.05825939506076 * GRP_MntGoldProds3
268007    +          +     4.54187777951066 * GRP_MntGoldProds4
268008    +          +     1.73194182769876 * GRP_MntMeatProducts2
268009    +          +    -0.50494075731675 * GRP_MntMeatProducts3
268010    +          +    -1.24502732975278 * GRP_MntMeatProducts4
268011    +          +     1.29208460321632 * GRP_MntWines2  +     0.29717301998256 *
268012    +        GRP_MntWines3  +    -0.62672710631427 * GRP_MntWines4
268013    +          +     1.35492499749641 * GRP_NumCatalogPurchases3
268014    +          +    -0.16024517906179 * GRP_NumCatalogPurchases4
268015    +          +     1.86677407552405 * GRP_NumDistPurchases2
268016    +          +     -0.7331940643207 * GRP_NumDistPurchases3
268017    +          +     1.69990326910684 * GRP_NumDistPurchases4
268018    +          +     2.43176299986254 * GRP_NumWebPurchases2
268019    +          +    -2.13772911466858 * GRP_NumWebPurchases3
268020    +          +    -4.73478753166791 * GRP_NumWebPurchases4
268021    +          +     2.64399780173577 * GRP_RFMstat2  +    -3.62336346056054 *
268022    +        GRP_RFMstat3  +    -3.18363324824984 * GRP_RFMstat4
268023    +          +     3.46796006062254 * GRP_RMntFrq2  +    -0.59973905875633 *
268024    +        GRP_RMntFrq3  +    -1.07300094897005 * GRP_RMntFrq4
268025    +          +     1.65131957040649 * GRP_Recency2  +     2.60583794046673 *
268026    +        GRP_Recency3  +    -1.61296974687132 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -2.86061192932804 * GRP_AcceptedCmp52 + 
-2.37847197829836 * GRP_Frq2 + 3.04126084255177 * GRP_Frq3 + -2.25316213708692 * GRP_Frq4 + 
-2.15230505920585 * GRP_Income2 + 0.22423161350469 * GRP_Income3 + 1.82470653064149 * 
GRP_Income4 + 0.91426377324604 * GRP_Mnt2 + -2.52824414988744 * GRP_Mnt3 + 1.25821903076482 * 
GRP_Mnt4 + 2.48215495303599 * GRP_MntFishProducts2 + -2.53912545896945 * GRP_MntFishProducts3 
+ -1.24420085467004 * GRP_MntFishProducts4 + 0.87589074104426 * GRP_MntGoldProds2 + 
2.05825939506076 * GRP_MntGoldProds3 + 4.54187777951066 * GRP_MntGoldProds4 + 1.73194182769876 
* GRP_MntMeatProducts2 + -0.50494075731675 * GRP_MntMeatProducts3 + -1.24502732975278 * 
GRP_MntMeatProducts4 + 1.29208460321632 * GRP_MntWines2 + 0.29717301998256 * GRP_MntWines3 + 
-0.62672710631427 * GRP_MntWines4 + 1.35492499749641 * GRP_NumCatalogPurchases3 + 
-0.16024517906179 * GRP_NumCatalogPurchases4 + 1.86677407552405 * GRP_NumDistPurchases2 + 
-0.7331940643207 * GRP_NumDistPurchases3 + 1.69990326910684 * GRP_NumDistPurchases4 + 
2.43176299986254 * GRP_NumWebPurchases2 + -2.13772911466858 * GRP_NumWebPurchases3 + 
-4.73478753166791 * GRP_NumWebPurchases4 + 2.64399780173577 * GRP_RFMstat2 + -3.62336346056054 
* GRP_RFMstat3 + -3.18363324824984 * GRP_RFMstat4 + 3.46796006062254 * GRP_RMntFrq2 + 
-0.59973905875633 * GRP_RMntFrq3 + -1.07300094897005 * GRP_RMntFrq4 + 1.65131957040649 * 
GRP_Recency2 + 2.60583794046673 * GRP_Recency3 + -1.61296974687132 * GRP_Recency4 ;
268027    +   H1x1_1  =     2.45115906330524 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 2.45115906330524 + H1x1_1 ;
268028    +   H1x1_2  =     4.73081202118604 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 4.73081202118604 + H1x1_2 ;
268029    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
268030    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
268031    +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
268032    +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
268033    +END;
MPRINT(EM_DIAGRAM):   END;
268034    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
268035    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
268036    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
268037    +END;
MPRINT(EM_DIAGRAM):   END;
268038    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
268039    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
268040    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
268041    +
268042    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
268043    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
268044    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
268045    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
268046    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
268047    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
268048    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
268049    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
268050    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
268051    +end;
MPRINT(EM_DIAGRAM):   end;
268052    +else do;
MPRINT(EM_DIAGRAM):   else do;
268053    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
268054    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
268055    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
268056    +   end;
MPRINT(EM_DIAGRAM):   end;
268057    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
268058    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
268059    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
268060    +   end;
MPRINT(EM_DIAGRAM):   end;
268061    +   else do;
MPRINT(EM_DIAGRAM):   else do;
268062    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
268063    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
268064    +   end;
MPRINT(EM_DIAGRAM):   end;
268065    +end;
MPRINT(EM_DIAGRAM):   end;
268066    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
268067    +   P_DepVar1  =      4.0196958449291 * H1x1_1  +    -3.12785763420985 * H1x1_2
268068    +         ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 4.0196958449291 * H1x1_1 + -3.12785763420985 * H1x1_2 ;
268069    +   P_DepVar1  =    -2.56231918790427 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.56231918790427 + P_DepVar1 ;
268070    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
268071    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
268072    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
268073    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
268074    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
268075    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
268076    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
268077    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
268078    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
268079    +END;
MPRINT(EM_DIAGRAM):   END;
268080    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
268081    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
268082    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
268083    +END;
MPRINT(EM_DIAGRAM):   END;
268084    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
268085    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
268086    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
268087    +END;
MPRINT(EM_DIAGRAM):   END;
268088    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
268089    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
268090    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
268091    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
268092    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
268093    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
268094    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
268095    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
268096    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
268097    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
268098    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
268099    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
268100    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
268101    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
268102    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
268103    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
268104    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
268105    +END;
MPRINT(EM_DIAGRAM):   END;
268106    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
268107    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
268108    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
268109    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
268110    +* Renaming variables for AutoNeural24;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural24;
268111    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
268112    +* Renaming Posterior variables for AutoNeural24;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural24;
268113    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
268114    +drop AutoNeural24_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural24_P_DepVar1;
268115    +AutoNeural24_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural24_P_DepVar1 = P_DepVar1;
268116    +drop AutoNeural24_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural24_P_DepVar0;
268117    +AutoNeural24_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural24_P_DepVar0 = P_DepVar0;
268118    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
268119    +* Renaming Into variables for AutoNeural24;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for AutoNeural24;
268120    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
268121    +length AutoNeural24_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length AutoNeural24_I_DepVar $32;
268122    +drop AutoNeural24_I_DepVar;
MPRINT(EM_DIAGRAM):   drop AutoNeural24_I_DepVar;
268123    +AutoNeural24_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   AutoNeural24_I_DepVar = I_DepVar;
268124    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
268125    +* Renaming _WARN_ variable for AutoNeural24;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural24;
268126    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
268127    +length AutoNeural24_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural24_WARN_ $4;
268128    +drop AutoNeural24_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural24_WARN_;
268129    +AutoNeural24_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural24_WARN_ = _WARN_;
268130    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
268131    +* Ensmbl50: Scoring Code of model 2 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl50: Scoring Code of model 2 of 7;
268132    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
268133    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
268134    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
268135    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
268136    +* NODE: AutoNeural22;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural22;
268137    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
268138    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
268139    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
268140    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
268141    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
268142    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
268143    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
268144    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
268145    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
268146    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
268147    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
268148    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
268149    +LENGTH _WARN_ $4
268150    +      F_DepVar  $ 12
268151    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
268152    +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
268153    +
268154    +      label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
MPRINT(EM_DIAGRAM):   label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
268155    +
268156    +      label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
268157    +
268158    +      label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
268159    +
268160    +      label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
268161    +
268162    +      label GRP_Income2 = 'Dummy: GRP_Income=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Income2 = 'Dummy: GRP_Income=2' ;
268163    +
268164    +      label GRP_Income3 = 'Dummy: GRP_Income=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Income3 = 'Dummy: GRP_Income=3' ;
268165    +
268166    +      label GRP_Income4 = 'Dummy: GRP_Income=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Income4 = 'Dummy: GRP_Income=4' ;
268167    +
268168    +      label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
268169    +
268170    +      label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
268171    +
268172    +      label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
268173    +
268174    +      label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
268175    +
268176    +      label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
268177    +
268178    +      label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
268179    +
268180    +      label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
268181    +
268182    +      label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
268183    +
268184    +      label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
268185    +
268186    +      label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
268187    +
268188    +      label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
268189    +
268190    +      label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
268191    +
268192    +      label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
268193    +
268194    +      label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
268195    +
268196    +      label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
268197    +
268198    +      label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
268199    +
268200    +      label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
268201    +
268202    +      label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
268203    +
268204    +      label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
268205    +
268206    +      label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
268207    +
268208    +      label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
268209    +
268210    +      label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
268211    +
268212    +      label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
268213    +
268214    +      label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
268215    +
268216    +      label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
268217    +
268218    +      label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
268219    +
268220    +      label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
268221    +
268222    +      label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
268223    +
268224    +      label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
268225    +
268226    +      label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
268227    +
268228    +      label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
268229    +
268230    +      label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
268231    +
268232    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
268233    +
268234    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
268235    +
268236    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
268237    +
268238    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
268239    +
268240    +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
268241    +
268242    +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
268243    +
268244    +      label H1x1_7 = 'Hidden: H1x1_=7' ;
MPRINT(EM_DIAGRAM):   label H1x1_7 = 'Hidden: H1x1_=7' ;
268245    +
268246    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
268247    +
268248    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
268249    +
268250    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
268251    +
268252    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
268253    +
268254    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
268255    +
268256    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
268257    +
268258    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
268259    +
268260    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
268261    +
268262    +*** Generate dummy variables for GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmp5 ;
268263    +drop GRP_AcceptedCmp52 ;
MPRINT(EM_DIAGRAM):   drop GRP_AcceptedCmp52 ;
268264    +if missing( GRP_AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmp5 ) then do;
268265    +   GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
268266    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
268267    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
268268    +end;
MPRINT(EM_DIAGRAM):   end;
268269    +else do;
MPRINT(EM_DIAGRAM):   else do;
268270    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
268271    +   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
268272    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
268273    +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
268274    +      GRP_AcceptedCmp52 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = 1;
268275    +   end;
MPRINT(EM_DIAGRAM):   end;
268276    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
268277    +      GRP_AcceptedCmp52 = -1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = -1;
268278    +   end;
MPRINT(EM_DIAGRAM):   end;
268279    +   else do;
MPRINT(EM_DIAGRAM):   else do;
268280    +      GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
268281    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
268282    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
268283    +   end;
MPRINT(EM_DIAGRAM):   end;
268284    +end;
MPRINT(EM_DIAGRAM):   end;
268285    +
268286    +*** Generate dummy variables for GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Frq ;
268287    +drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
268288    +if missing( GRP_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Frq ) then do;
268289    +   GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
268290    +   GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
268291    +   GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
268292    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
268293    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
268294    +end;
MPRINT(EM_DIAGRAM):   end;
268295    +else do;
MPRINT(EM_DIAGRAM):   else do;
268296    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
268297    +   _dm12 = put( GRP_Frq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Frq , BEST12. );
268298    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
268299    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
268300    +      GRP_Frq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = -1;
268301    +      GRP_Frq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = -1;
268302    +      GRP_Frq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = -1;
268303    +   end;
MPRINT(EM_DIAGRAM):   end;
268304    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
268305    +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
268306    +      GRP_Frq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 1;
268307    +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
268308    +   end;
MPRINT(EM_DIAGRAM):   end;
268309    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
268310    +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
268311    +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
268312    +      GRP_Frq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 1;
268313    +   end;
MPRINT(EM_DIAGRAM):   end;
268314    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
268315    +      GRP_Frq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 1;
268316    +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
268317    +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
268318    +   end;
MPRINT(EM_DIAGRAM):   end;
268319    +   else do;
MPRINT(EM_DIAGRAM):   else do;
268320    +      GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
268321    +      GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
268322    +      GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
268323    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
268324    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
268325    +   end;
MPRINT(EM_DIAGRAM):   end;
268326    +end;
MPRINT(EM_DIAGRAM):   end;
268327    +
268328    +*** Generate dummy variables for GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Income ;
268329    +drop GRP_Income2 GRP_Income3 GRP_Income4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Income2 GRP_Income3 GRP_Income4 ;
268330    +if missing( GRP_Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Income ) then do;
268331    +   GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
268332    +   GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
268333    +   GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
268334    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
268335    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
268336    +end;
MPRINT(EM_DIAGRAM):   end;
268337    +else do;
MPRINT(EM_DIAGRAM):   else do;
268338    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
268339    +   _dm12 = put( GRP_Income , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Income , BEST12. );
268340    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
268341    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
268342    +      GRP_Income2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = -1;
268343    +      GRP_Income3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = -1;
268344    +      GRP_Income4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = -1;
268345    +   end;
MPRINT(EM_DIAGRAM):   end;
268346    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
268347    +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
268348    +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
268349    +      GRP_Income4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 1;
268350    +   end;
MPRINT(EM_DIAGRAM):   end;
268351    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
268352    +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
268353    +      GRP_Income3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 1;
268354    +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
268355    +   end;
MPRINT(EM_DIAGRAM):   end;
268356    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
268357    +      GRP_Income2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 1;
268358    +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
268359    +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
268360    +   end;
MPRINT(EM_DIAGRAM):   end;
268361    +   else do;
MPRINT(EM_DIAGRAM):   else do;
268362    +      GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
268363    +      GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
268364    +      GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
268365    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
268366    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
268367    +   end;
MPRINT(EM_DIAGRAM):   end;
268368    +end;
MPRINT(EM_DIAGRAM):   end;
268369    +
268370    +*** Generate dummy variables for GRP_Mnt ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Mnt ;
268371    +drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
268372    +if missing( GRP_Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Mnt ) then do;
268373    +   GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
268374    +   GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
268375    +   GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
268376    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
268377    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
268378    +end;
MPRINT(EM_DIAGRAM):   end;
268379    +else do;
MPRINT(EM_DIAGRAM):   else do;
268380    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
268381    +   _dm12 = put( GRP_Mnt , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Mnt , BEST12. );
268382    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
268383    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
268384    +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
268385    +      GRP_Mnt3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 1;
268386    +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
268387    +   end;
MPRINT(EM_DIAGRAM):   end;
268388    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
268389    +      GRP_Mnt2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = -1;
268390    +      GRP_Mnt3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = -1;
268391    +      GRP_Mnt4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = -1;
268392    +   end;
MPRINT(EM_DIAGRAM):   end;
268393    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
268394    +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
268395    +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
268396    +      GRP_Mnt4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 1;
268397    +   end;
MPRINT(EM_DIAGRAM):   end;
268398    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
268399    +      GRP_Mnt2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 1;
268400    +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
268401    +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
268402    +   end;
MPRINT(EM_DIAGRAM):   end;
268403    +   else do;
MPRINT(EM_DIAGRAM):   else do;
268404    +      GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
268405    +      GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
268406    +      GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
268407    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
268408    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
268409    +   end;
MPRINT(EM_DIAGRAM):   end;
268410    +end;
MPRINT(EM_DIAGRAM):   end;
268411    +
268412    +*** Generate dummy variables for GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntFishProducts ;
268413    +drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
268414    +if missing( GRP_MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntFishProducts ) then do;
268415    +   GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
268416    +   GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
268417    +   GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
268418    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
268419    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
268420    +end;
MPRINT(EM_DIAGRAM):   end;
268421    +else do;
MPRINT(EM_DIAGRAM):   else do;
268422    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
268423    +   _dm12 = put( GRP_MntFishProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntFishProducts , BEST12. );
268424    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
268425    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
268426    +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
268427    +      GRP_MntFishProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 1;
268428    +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
268429    +   end;
MPRINT(EM_DIAGRAM):   end;
268430    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
268431    +      GRP_MntFishProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = -1;
268432    +      GRP_MntFishProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = -1;
268433    +      GRP_MntFishProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = -1;
268434    +   end;
MPRINT(EM_DIAGRAM):   end;
268435    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
268436    +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
268437    +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
268438    +      GRP_MntFishProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 1;
268439    +   end;
MPRINT(EM_DIAGRAM):   end;
268440    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
268441    +      GRP_MntFishProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 1;
268442    +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
268443    +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
268444    +   end;
MPRINT(EM_DIAGRAM):   end;
268445    +   else do;
MPRINT(EM_DIAGRAM):   else do;
268446    +      GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
268447    +      GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
268448    +      GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
268449    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
268450    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
268451    +   end;
MPRINT(EM_DIAGRAM):   end;
268452    +end;
MPRINT(EM_DIAGRAM):   end;
268453    +
268454    +*** Generate dummy variables for GRP_MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntGoldProds ;
268455    +drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
268456    +if missing( GRP_MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntGoldProds ) then do;
268457    +   GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
268458    +   GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
268459    +   GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
268460    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
268461    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
268462    +end;
MPRINT(EM_DIAGRAM):   end;
268463    +else do;
MPRINT(EM_DIAGRAM):   else do;
268464    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
268465    +   _dm12 = put( GRP_MntGoldProds , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntGoldProds , BEST12. );
268466    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
268467    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
268468    +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
268469    +      GRP_MntGoldProds3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 1;
268470    +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
268471    +   end;
MPRINT(EM_DIAGRAM):   end;
268472    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
268473    +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
268474    +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
268475    +      GRP_MntGoldProds4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 1;
268476    +   end;
MPRINT(EM_DIAGRAM):   end;
268477    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
268478    +      GRP_MntGoldProds2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = -1;
268479    +      GRP_MntGoldProds3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = -1;
268480    +      GRP_MntGoldProds4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = -1;
268481    +   end;
MPRINT(EM_DIAGRAM):   end;
268482    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
268483    +      GRP_MntGoldProds2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 1;
268484    +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
268485    +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
268486    +   end;
MPRINT(EM_DIAGRAM):   end;
268487    +   else do;
MPRINT(EM_DIAGRAM):   else do;
268488    +      GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
268489    +      GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
268490    +      GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
268491    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
268492    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
268493    +   end;
MPRINT(EM_DIAGRAM):   end;
268494    +end;
MPRINT(EM_DIAGRAM):   end;
268495    +
268496    +*** Generate dummy variables for GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntMeatProducts ;
268497    +drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
268498    +if missing( GRP_MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntMeatProducts ) then do;
268499    +   GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
268500    +   GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
268501    +   GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
268502    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
268503    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
268504    +end;
MPRINT(EM_DIAGRAM):   end;
268505    +else do;
MPRINT(EM_DIAGRAM):   else do;
268506    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
268507    +   _dm12 = put( GRP_MntMeatProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntMeatProducts , BEST12. );
268508    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
268509    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
268510    +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
268511    +      GRP_MntMeatProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 1;
268512    +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
268513    +   end;
MPRINT(EM_DIAGRAM):   end;
268514    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
268515    +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
268516    +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
268517    +      GRP_MntMeatProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 1;
268518    +   end;
MPRINT(EM_DIAGRAM):   end;
268519    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
268520    +      GRP_MntMeatProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = -1;
268521    +      GRP_MntMeatProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = -1;
268522    +      GRP_MntMeatProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = -1;
268523    +   end;
MPRINT(EM_DIAGRAM):   end;
268524    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
268525    +      GRP_MntMeatProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 1;
268526    +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
268527    +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
268528    +   end;
MPRINT(EM_DIAGRAM):   end;
268529    +   else do;
MPRINT(EM_DIAGRAM):   else do;
268530    +      GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
268531    +      GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
268532    +      GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
268533    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
268534    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
268535    +   end;
MPRINT(EM_DIAGRAM):   end;
268536    +end;
MPRINT(EM_DIAGRAM):   end;
268537    +
268538    +*** Generate dummy variables for GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntWines ;
268539    +drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
268540    +if missing( GRP_MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntWines ) then do;
268541    +   GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
268542    +   GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
268543    +   GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
268544    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
268545    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
268546    +end;
MPRINT(EM_DIAGRAM):   end;
268547    +else do;
MPRINT(EM_DIAGRAM):   else do;
268548    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
268549    +   _dm12 = put( GRP_MntWines , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntWines , BEST12. );
268550    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
268551    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
268552    +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
268553    +      GRP_MntWines3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 1;
268554    +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
268555    +   end;
MPRINT(EM_DIAGRAM):   end;
268556    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
268557    +      GRP_MntWines2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = -1;
268558    +      GRP_MntWines3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = -1;
268559    +      GRP_MntWines4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = -1;
268560    +   end;
MPRINT(EM_DIAGRAM):   end;
268561    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
268562    +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
268563    +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
268564    +      GRP_MntWines4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 1;
268565    +   end;
MPRINT(EM_DIAGRAM):   end;
268566    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
268567    +      GRP_MntWines2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 1;
268568    +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
268569    +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
268570    +   end;
MPRINT(EM_DIAGRAM):   end;
268571    +   else do;
MPRINT(EM_DIAGRAM):   else do;
268572    +      GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
268573    +      GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
268574    +      GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
268575    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
268576    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
268577    +   end;
MPRINT(EM_DIAGRAM):   end;
268578    +end;
MPRINT(EM_DIAGRAM):   end;
268579    +
268580    +*** Generate dummy variables for GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumCatalogPurchases ;
268581    +drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
268582    +if missing( GRP_NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumCatalogPurchases ) then do;
268583    +   GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
268584    +   GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
268585    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
268586    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
268587    +end;
MPRINT(EM_DIAGRAM):   end;
268588    +else do;
MPRINT(EM_DIAGRAM):   else do;
268589    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
268590    +   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
268591    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
268592    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
268593    +      GRP_NumCatalogPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 1;
268594    +      GRP_NumCatalogPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 0;
268595    +   end;
MPRINT(EM_DIAGRAM):   end;
268596    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
268597    +      GRP_NumCatalogPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = -1;
268598    +      GRP_NumCatalogPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = -1;
268599    +   end;
MPRINT(EM_DIAGRAM):   end;
268600    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
268601    +      GRP_NumCatalogPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 0;
268602    +      GRP_NumCatalogPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 1;
268603    +   end;
MPRINT(EM_DIAGRAM):   end;
268604    +   else do;
MPRINT(EM_DIAGRAM):   else do;
268605    +      GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
268606    +      GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
268607    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
268608    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
268609    +   end;
MPRINT(EM_DIAGRAM):   end;
268610    +end;
MPRINT(EM_DIAGRAM):   end;
268611    +
268612    +*** Generate dummy variables for GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumDistPurchases ;
268613    +drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
268614    +if missing( GRP_NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumDistPurchases ) then do;
268615    +   GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
268616    +   GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
268617    +   GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
268618    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
268619    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
268620    +end;
MPRINT(EM_DIAGRAM):   end;
268621    +else do;
MPRINT(EM_DIAGRAM):   else do;
268622    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
268623    +   _dm12 = put( GRP_NumDistPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumDistPurchases , BEST12. );
268624    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
268625    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
268626    +      GRP_NumDistPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = -1;
268627    +      GRP_NumDistPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = -1;
268628    +      GRP_NumDistPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = -1;
268629    +   end;
MPRINT(EM_DIAGRAM):   end;
268630    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
268631    +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
268632    +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
268633    +      GRP_NumDistPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 1;
268634    +   end;
MPRINT(EM_DIAGRAM):   end;
268635    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
268636    +      GRP_NumDistPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 1;
268637    +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
268638    +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
268639    +   end;
MPRINT(EM_DIAGRAM):   end;
268640    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
268641    +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
268642    +      GRP_NumDistPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 1;
268643    +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
268644    +   end;
MPRINT(EM_DIAGRAM):   end;
268645    +   else do;
MPRINT(EM_DIAGRAM):   else do;
268646    +      GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
268647    +      GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
268648    +      GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
268649    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
268650    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
268651    +   end;
MPRINT(EM_DIAGRAM):   end;
268652    +end;
MPRINT(EM_DIAGRAM):   end;
268653    +
268654    +*** Generate dummy variables for GRP_NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumWebPurchases ;
268655    +drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
268656    +if missing( GRP_NumWebPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumWebPurchases ) then do;
268657    +   GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
268658    +   GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
268659    +   GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
268660    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
268661    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
268662    +end;
MPRINT(EM_DIAGRAM):   end;
268663    +else do;
MPRINT(EM_DIAGRAM):   else do;
268664    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
268665    +   _dm12 = put( GRP_NumWebPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumWebPurchases , BEST12. );
268666    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
268667    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
268668    +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
268669    +      GRP_NumWebPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 1;
268670    +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
268671    +   end;
MPRINT(EM_DIAGRAM):   end;
268672    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
268673    +      GRP_NumWebPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = -1;
268674    +      GRP_NumWebPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = -1;
268675    +      GRP_NumWebPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = -1;
268676    +   end;
MPRINT(EM_DIAGRAM):   end;
268677    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
268678    +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
268679    +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
268680    +      GRP_NumWebPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 1;
268681    +   end;
MPRINT(EM_DIAGRAM):   end;
268682    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
268683    +      GRP_NumWebPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 1;
268684    +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
268685    +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
268686    +   end;
MPRINT(EM_DIAGRAM):   end;
268687    +   else do;
MPRINT(EM_DIAGRAM):   else do;
268688    +      GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
268689    +      GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
268690    +      GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
268691    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
268692    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
268693    +   end;
MPRINT(EM_DIAGRAM):   end;
268694    +end;
MPRINT(EM_DIAGRAM):   end;
268695    +
268696    +*** Generate dummy variables for GRP_RFMstat ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RFMstat ;
268697    +drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
268698    +if missing( GRP_RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RFMstat ) then do;
268699    +   GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
268700    +   GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
268701    +   GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
268702    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
268703    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
268704    +end;
MPRINT(EM_DIAGRAM):   end;
268705    +else do;
MPRINT(EM_DIAGRAM):   else do;
268706    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
268707    +   _dm12 = put( GRP_RFMstat , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RFMstat , BEST12. );
268708    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
268709    +   if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
268710    +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
268711    +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
268712    +      GRP_RFMstat4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 1;
268713    +   end;
MPRINT(EM_DIAGRAM):   end;
268714    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
268715    +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
268716    +      GRP_RFMstat3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 1;
268717    +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
268718    +   end;
MPRINT(EM_DIAGRAM):   end;
268719    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
268720    +      GRP_RFMstat2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = -1;
268721    +      GRP_RFMstat3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = -1;
268722    +      GRP_RFMstat4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = -1;
268723    +   end;
MPRINT(EM_DIAGRAM):   end;
268724    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
268725    +      GRP_RFMstat2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 1;
268726    +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
268727    +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
268728    +   end;
MPRINT(EM_DIAGRAM):   end;
268729    +   else do;
MPRINT(EM_DIAGRAM):   else do;
268730    +      GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
268731    +      GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
268732    +      GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
268733    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
268734    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
268735    +   end;
MPRINT(EM_DIAGRAM):   end;
268736    +end;
MPRINT(EM_DIAGRAM):   end;
268737    +
268738    +*** Generate dummy variables for GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RMntFrq ;
268739    +drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
268740    +if missing( GRP_RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RMntFrq ) then do;
268741    +   GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
268742    +   GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
268743    +   GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
268744    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
268745    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
268746    +end;
MPRINT(EM_DIAGRAM):   end;
268747    +else do;
MPRINT(EM_DIAGRAM):   else do;
268748    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
268749    +   _dm12 = put( GRP_RMntFrq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RMntFrq , BEST12. );
268750    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
268751    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
268752    +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
268753    +      GRP_RMntFrq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 1;
268754    +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
268755    +   end;
MPRINT(EM_DIAGRAM):   end;
268756    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
268757    +      GRP_RMntFrq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = -1;
268758    +      GRP_RMntFrq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = -1;
268759    +      GRP_RMntFrq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = -1;
268760    +   end;
MPRINT(EM_DIAGRAM):   end;
268761    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
268762    +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
268763    +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
268764    +      GRP_RMntFrq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 1;
268765    +   end;
MPRINT(EM_DIAGRAM):   end;
268766    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
268767    +      GRP_RMntFrq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 1;
268768    +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
268769    +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
268770    +   end;
MPRINT(EM_DIAGRAM):   end;
268771    +   else do;
MPRINT(EM_DIAGRAM):   else do;
268772    +      GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
268773    +      GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
268774    +      GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
268775    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
268776    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
268777    +   end;
MPRINT(EM_DIAGRAM):   end;
268778    +end;
MPRINT(EM_DIAGRAM):   end;
268779    +
268780    +*** Generate dummy variables for GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Recency ;
268781    +drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
268782    +if missing( GRP_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Recency ) then do;
268783    +   GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
268784    +   GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
268785    +   GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
268786    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
268787    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
268788    +end;
MPRINT(EM_DIAGRAM):   end;
268789    +else do;
MPRINT(EM_DIAGRAM):   else do;
268790    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
268791    +   _dm12 = put( GRP_Recency , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Recency , BEST12. );
268792    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
268793    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
268794    +      GRP_Recency2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = -1;
268795    +      GRP_Recency3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = -1;
268796    +      GRP_Recency4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = -1;
268797    +   end;
MPRINT(EM_DIAGRAM):   end;
268798    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
268799    +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
268800    +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
268801    +      GRP_Recency4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 1;
268802    +   end;
MPRINT(EM_DIAGRAM):   end;
268803    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
268804    +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
268805    +      GRP_Recency3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 1;
268806    +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
268807    +   end;
MPRINT(EM_DIAGRAM):   end;
268808    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
268809    +      GRP_Recency2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 1;
268810    +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
268811    +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
268812    +   end;
MPRINT(EM_DIAGRAM):   end;
268813    +   else do;
MPRINT(EM_DIAGRAM):   else do;
268814    +      GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
268815    +      GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
268816    +      GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
268817    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
268818    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
268819    +   end;
MPRINT(EM_DIAGRAM):   end;
268820    +end;
MPRINT(EM_DIAGRAM):   end;
268821    +
268822    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
268823    +*** Checking missing input Interval
268824    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
268825    +
268826    +IF NMISS(
268827    +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Year_Birth ) THEN DO;
268828    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
268829    +
268830    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
268831    +END;
MPRINT(EM_DIAGRAM):   END;
268832    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
268833    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
268834    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
268835    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
268836    +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
268837    +END;
MPRINT(EM_DIAGRAM):   END;
268838    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
268839    +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
268840    +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
268841    +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
268842    +END;
MPRINT(EM_DIAGRAM):   END;
268843    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
268844    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
268845    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
268846    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
268847    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
268848    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
268849    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
268850    +   H1x1_1  =     2.97734663226499 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 2.97734663226499 * S_Year_Birth ;
268851    +   H1x1_2  =    -0.02332673614472 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.02332673614472 * S_Year_Birth ;
268852    +   H1x1_3  =    -0.21203760038885 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.21203760038885 * S_Year_Birth ;
268853    +   H1x1_4  =    -0.93232920235603 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.93232920235603 * S_Year_Birth ;
268854    +   H1x1_5  =     0.52440348943963 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0.52440348943963 * S_Year_Birth ;
268855    +   H1x1_6  =    -2.87318917513282 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -2.87318917513282 * S_Year_Birth ;
268856    +   H1x1_7  =     1.25367568490371 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_7 = 1.25367568490371 * S_Year_Birth ;
268857    +   H1x1_1  = H1x1_1  +     2.80677271834446 * GRP_AcceptedCmp52
268858    +          +    -2.32565230752453 * GRP_Frq2  +     2.22037590877354 * GRP_Frq3
268859    +          +    -3.68499358333843 * GRP_Frq4  +    -2.13081454889876 *
268860    +        GRP_Income2  +    -0.38485085997351 * GRP_Income3
268861    +          +     0.43520727568519 * GRP_Income4  +    -1.67383365803521 *
268862    +        GRP_Mnt2  +    -2.27881933900388 * GRP_Mnt3  +    -0.69213755321586 *
268863    +        GRP_Mnt4  +    -0.04079006532289 * GRP_MntFishProducts2
268864    +          +    -2.14876852259668 * GRP_MntFishProducts3
268865    +          +     1.83260002021024 * GRP_MntFishProducts4
268866    +          +     0.51096990118592 * GRP_MntGoldProds2
268867    +          +     0.50696068122006 * GRP_MntGoldProds3
268868    +          +     0.74230349643824 * GRP_MntGoldProds4
268869    +          +     1.49045716090612 * GRP_MntMeatProducts2
268870    +          +    -0.61254307122158 * GRP_MntMeatProducts3
268871    +          +     1.56999187930143 * GRP_MntMeatProducts4
268872    +          +    -0.31632843892516 * GRP_MntWines2  +    -1.05626215752058 *
268873    +        GRP_MntWines3  +    -0.15924458576467 * GRP_MntWines4
268874    +          +    -1.09346439824911 * GRP_NumCatalogPurchases3
268875    +          +     1.58785113957128 * GRP_NumCatalogPurchases4
268876    +          +    -0.62454988809727 * GRP_NumDistPurchases2
268877    +          +     1.37295312356584 * GRP_NumDistPurchases3
268878    +          +      1.5440119795954 * GRP_NumDistPurchases4
268879    +          +    -0.26547715068585 * GRP_NumWebPurchases2
268880    +          +     2.62305554684179 * GRP_NumWebPurchases3
268881    +          +     0.91247524672275 * GRP_NumWebPurchases4
268882    +          +     0.71467719190546 * GRP_RFMstat2  +     0.44245796416885 *
268883    +        GRP_RFMstat3  +      0.0238006357066 * GRP_RFMstat4
268884    +          +    -2.17145575258416 * GRP_RMntFrq2  +    -3.29596121756931 *
268885    +        GRP_RMntFrq3  +    -0.63464596926142 * GRP_RMntFrq4
268886    +          +      0.2862685045527 * GRP_Recency2  +    -0.77133964406228 *
268887    +        GRP_Recency3  +     0.83634712420156 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 2.80677271834446 * GRP_AcceptedCmp52 + 
-2.32565230752453 * GRP_Frq2 + 2.22037590877354 * GRP_Frq3 + -3.68499358333843 * GRP_Frq4 + 
-2.13081454889876 * GRP_Income2 + -0.38485085997351 * GRP_Income3 + 0.43520727568519 * 
GRP_Income4 + -1.67383365803521 * GRP_Mnt2 + -2.27881933900388 * GRP_Mnt3 + -0.69213755321586 
* GRP_Mnt4 + -0.04079006532289 * GRP_MntFishProducts2 + -2.14876852259668 * 
GRP_MntFishProducts3 + 1.83260002021024 * GRP_MntFishProducts4 + 0.51096990118592 * 
GRP_MntGoldProds2 + 0.50696068122006 * GRP_MntGoldProds3 + 0.74230349643824 * 
GRP_MntGoldProds4 + 1.49045716090612 * GRP_MntMeatProducts2 + -0.61254307122158 * 
GRP_MntMeatProducts3 + 1.56999187930143 * GRP_MntMeatProducts4 + -0.31632843892516 * 
GRP_MntWines2 + -1.05626215752058 * GRP_MntWines3 + -0.15924458576467 * GRP_MntWines4 + 
-1.09346439824911 * GRP_NumCatalogPurchases3 + 1.58785113957128 * GRP_NumCatalogPurchases4 + 
-0.62454988809727 * GRP_NumDistPurchases2 + 1.37295312356584 * GRP_NumDistPurchases3 + 
1.5440119795954 * GRP_NumDistPurchases4 + -0.26547715068585 * GRP_NumWebPurchases2 + 
2.62305554684179 * GRP_NumWebPurchases3 + 0.91247524672275 * GRP_NumWebPurchases4 + 
0.71467719190546 * GRP_RFMstat2 + 0.44245796416885 * GRP_RFMstat3 + 0.0238006357066 * 
GRP_RFMstat4 + -2.17145575258416 * GRP_RMntFrq2 + -3.29596121756931 * GRP_RMntFrq3 + 
-0.63464596926142 * GRP_RMntFrq4 + 0.2862685045527 * GRP_Recency2 + -0.77133964406228 * 
GRP_Recency3 + 0.83634712420156 * GRP_Recency4 ;
268888    +   H1x1_2  = H1x1_2  +    -2.21554077433203 * GRP_AcceptedCmp52
268889    +          +     -1.3297040775516 * GRP_Frq2  +     -1.2691861008704 * GRP_Frq3
268890    +          +    -0.83350069121519 * GRP_Frq4  +    -0.45956269964658 *
268891    +        GRP_Income2  +    -0.23636051304973 * GRP_Income3
268892    +          +    -0.09369458285141 * GRP_Income4  +     0.28408485738252 *
268893    +        GRP_Mnt2  +    -1.43976442737366 * GRP_Mnt3  +    -0.47811534578751 *
268894    +        GRP_Mnt4  +     1.33306738423502 * GRP_MntFishProducts2
268895    +          +    -1.03235983303498 * GRP_MntFishProducts3
268896    +          +     1.43737242782063 * GRP_MntFishProducts4
268897    +          +    -0.10286834037331 * GRP_MntGoldProds2
268898    +          +     0.74054061895326 * GRP_MntGoldProds3
268899    +          +     0.27916388015938 * GRP_MntGoldProds4
268900    +          +     0.12775665160956 * GRP_MntMeatProducts2
268901    +          +     1.94239791535409 * GRP_MntMeatProducts3
268902    +          +      2.8604089986372 * GRP_MntMeatProducts4
268903    +          +     0.18466046439888 * GRP_MntWines2  +     1.56362849954362 *
268904    +        GRP_MntWines3  +    -0.74058839441389 * GRP_MntWines4
268905    +          +     0.80335076525252 * GRP_NumCatalogPurchases3
268906    +          +     -2.1633226572249 * GRP_NumCatalogPurchases4
268907    +          +    -0.87650147959772 * GRP_NumDistPurchases2
268908    +          +     1.12706069993787 * GRP_NumDistPurchases3
268909    +          +    -1.96498929641584 * GRP_NumDistPurchases4
268910    +          +     1.06875251220076 * GRP_NumWebPurchases2
268911    +          +     1.19584362733739 * GRP_NumWebPurchases3
268912    +          +    -0.75462993535725 * GRP_NumWebPurchases4
268913    +          +     0.34313165289913 * GRP_RFMstat2  +    -3.07377616469396 *
268914    +        GRP_RFMstat3  +    -0.30628532882149 * GRP_RFMstat4
268915    +          +     0.90422181954504 * GRP_RMntFrq2  +    -0.82179895308246 *
268916    +        GRP_RMntFrq3  +    -0.01336870072701 * GRP_RMntFrq4
268917    +          +     0.78962138115092 * GRP_Recency2  +     0.35738352585872 *
268918    +        GRP_Recency3  +    -0.83190183219938 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -2.21554077433203 * GRP_AcceptedCmp52 + 
-1.3297040775516 * GRP_Frq2 + -1.2691861008704 * GRP_Frq3 + -0.83350069121519 * GRP_Frq4 + 
-0.45956269964658 * GRP_Income2 + -0.23636051304973 * GRP_Income3 + -0.09369458285141 * 
GRP_Income4 + 0.28408485738252 * GRP_Mnt2 + -1.43976442737366 * GRP_Mnt3 + -0.47811534578751 * 
GRP_Mnt4 + 1.33306738423502 * GRP_MntFishProducts2 + -1.03235983303498 * GRP_MntFishProducts3 
+ 1.43737242782063 * GRP_MntFishProducts4 + -0.10286834037331 * GRP_MntGoldProds2 + 
0.74054061895326 * GRP_MntGoldProds3 + 0.27916388015938 * GRP_MntGoldProds4 + 0.12775665160956 
* GRP_MntMeatProducts2 + 1.94239791535409 * GRP_MntMeatProducts3 + 2.8604089986372 * 
GRP_MntMeatProducts4 + 0.18466046439888 * GRP_MntWines2 + 1.56362849954362 * GRP_MntWines3 + 
-0.74058839441389 * GRP_MntWines4 + 0.80335076525252 * GRP_NumCatalogPurchases3 + 
-2.1633226572249 * GRP_NumCatalogPurchases4 + -0.87650147959772 * GRP_NumDistPurchases2 + 
1.12706069993787 * GRP_NumDistPurchases3 + -1.96498929641584 * GRP_NumDistPurchases4 + 
1.06875251220076 * GRP_NumWebPurchases2 + 1.19584362733739 * GRP_NumWebPurchases3 + 
-0.75462993535725 * GRP_NumWebPurchases4 + 0.34313165289913 * GRP_RFMstat2 + -3.07377616469396 
* GRP_RFMstat3 + -0.30628532882149 * GRP_RFMstat4 + 0.90422181954504 * GRP_RMntFrq2 + 
-0.82179895308246 * GRP_RMntFrq3 + -0.01336870072701 * GRP_RMntFrq4 + 0.78962138115092 * 
GRP_Recency2 + 0.35738352585872 * GRP_Recency3 + -0.83190183219938 * GRP_Recency4 ;
268919    +   H1x1_3  = H1x1_3  +     -0.1278687821469 * GRP_AcceptedCmp52
268920    +          +     1.77838881912744 * GRP_Frq2  +    -0.95209160545855 * GRP_Frq3
268921    +          +     2.40141754421545 * GRP_Frq4  +     0.60378783958273 *
268922    +        GRP_Income2  +    -2.18346600414349 * GRP_Income3
268923    +          +     0.80627498676781 * GRP_Income4  +     0.81141725300118 *
268924    +        GRP_Mnt2  +    -0.20395009454155 * GRP_Mnt3  +     -0.3358053338153 *
268925    +        GRP_Mnt4  +    -0.16819978312641 * GRP_MntFishProducts2
268926    +          +    -0.11485741469493 * GRP_MntFishProducts3
268927    +          +     1.45721315298108 * GRP_MntFishProducts4
268928    +          +     0.26086838482974 * GRP_MntGoldProds2
268929    +          +    -0.13326700912822 * GRP_MntGoldProds3
268930    +          +    -0.31998514458297 * GRP_MntGoldProds4
268931    +          +     0.87003612251325 * GRP_MntMeatProducts2
268932    +          +    -0.25985022264915 * GRP_MntMeatProducts3
268933    +          +    -0.87011310494619 * GRP_MntMeatProducts4
268934    +          +     0.18840026647696 * GRP_MntWines2  +    -0.82430822747103 *
268935    +        GRP_MntWines3  +     -0.1293341794059 * GRP_MntWines4
268936    +          +     1.20111821881337 * GRP_NumCatalogPurchases3
268937    +          +     1.02378241927709 * GRP_NumCatalogPurchases4
268938    +          +      1.0835984835482 * GRP_NumDistPurchases2
268939    +          +     1.45339482543591 * GRP_NumDistPurchases3
268940    +          +     0.28792255375632 * GRP_NumDistPurchases4
268941    +          +     1.88871344284328 * GRP_NumWebPurchases2
268942    +          +     1.61086784930132 * GRP_NumWebPurchases3
268943    +          +     0.49767560191528 * GRP_NumWebPurchases4
268944    +          +    -2.78411910257351 * GRP_RFMstat2  +     0.84118867927224 *
268945    +        GRP_RFMstat3  +    -0.16102328336547 * GRP_RFMstat4
268946    +          +     0.27000998599161 * GRP_RMntFrq2  +     0.90131491180658 *
268947    +        GRP_RMntFrq3  +    -0.16432121563449 * GRP_RMntFrq4
268948    +          +     0.75599465145487 * GRP_Recency2  +     1.38233564862138 *
268949    +        GRP_Recency3  +      0.0905871640358 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.1278687821469 * GRP_AcceptedCmp52 + 
1.77838881912744 * GRP_Frq2 + -0.95209160545855 * GRP_Frq3 + 2.40141754421545 * GRP_Frq4 + 
0.60378783958273 * GRP_Income2 + -2.18346600414349 * GRP_Income3 + 0.80627498676781 * 
GRP_Income4 + 0.81141725300118 * GRP_Mnt2 + -0.20395009454155 * GRP_Mnt3 + -0.3358053338153 * 
GRP_Mnt4 + -0.16819978312641 * GRP_MntFishProducts2 + -0.11485741469493 * GRP_MntFishProducts3 
+ 1.45721315298108 * GRP_MntFishProducts4 + 0.26086838482974 * GRP_MntGoldProds2 + 
-0.13326700912822 * GRP_MntGoldProds3 + -0.31998514458297 * GRP_MntGoldProds4 + 
0.87003612251325 * GRP_MntMeatProducts2 + -0.25985022264915 * GRP_MntMeatProducts3 + 
-0.87011310494619 * GRP_MntMeatProducts4 + 0.18840026647696 * GRP_MntWines2 + 
-0.82430822747103 * GRP_MntWines3 + -0.1293341794059 * GRP_MntWines4 + 1.20111821881337 * 
GRP_NumCatalogPurchases3 + 1.02378241927709 * GRP_NumCatalogPurchases4 + 1.0835984835482 * 
GRP_NumDistPurchases2 + 1.45339482543591 * GRP_NumDistPurchases3 + 0.28792255375632 * 
GRP_NumDistPurchases4 + 1.88871344284328 * GRP_NumWebPurchases2 + 1.61086784930132 * 
GRP_NumWebPurchases3 + 0.49767560191528 * GRP_NumWebPurchases4 + -2.78411910257351 * 
GRP_RFMstat2 + 0.84118867927224 * GRP_RFMstat3 + -0.16102328336547 * GRP_RFMstat4 + 
0.27000998599161 * GRP_RMntFrq2 + 0.90131491180658 * GRP_RMntFrq3 + -0.16432121563449 * 
GRP_RMntFrq4 + 0.75599465145487 * GRP_Recency2 + 1.38233564862138 * GRP_Recency3 + 
0.0905871640358 * GRP_Recency4 ;
268950    +   H1x1_4  = H1x1_4  +     0.63304456551117 * GRP_AcceptedCmp52
268951    +          +    -0.14901142536344 * GRP_Frq2  +    -1.08381199299565 * GRP_Frq3
268952    +          +    -0.85011511275423 * GRP_Frq4  +    -0.08287353061518 *
268953    +        GRP_Income2  +    -0.58867333501692 * GRP_Income3
268954    +          +      2.7097455309793 * GRP_Income4  +    -0.69224144793047 *
268955    +        GRP_Mnt2  +    -0.68026366312168 * GRP_Mnt3  +     1.66551851821907 *
268956    +        GRP_Mnt4  +    -1.22509209613269 * GRP_MntFishProducts2
268957    +          +    -0.00259407262353 * GRP_MntFishProducts3
268958    +          +     0.26637234051452 * GRP_MntFishProducts4
268959    +          +     1.23072457246487 * GRP_MntGoldProds2
268960    +          +     0.27789879553199 * GRP_MntGoldProds3
268961    +          +    -1.84318316043809 * GRP_MntGoldProds4
268962    +          +    -0.37980618439099 * GRP_MntMeatProducts2
268963    +          +    -0.29547725841338 * GRP_MntMeatProducts3
268964    +          +      1.3351420752995 * GRP_MntMeatProducts4
268965    +          +    -0.69084339698082 * GRP_MntWines2  +    -2.20092193594928 *
268966    +        GRP_MntWines3  +     1.01263725926364 * GRP_MntWines4
268967    +          +     1.64715242240489 * GRP_NumCatalogPurchases3
268968    +          +     0.01013329918753 * GRP_NumCatalogPurchases4
268969    +          +      0.0553124072484 * GRP_NumDistPurchases2
268970    +          +     0.76354979572241 * GRP_NumDistPurchases3
268971    +          +     0.88878742575161 * GRP_NumDistPurchases4
268972    +          +    -0.02629928898859 * GRP_NumWebPurchases2
268973    +          +     1.58583162640849 * GRP_NumWebPurchases3
268974    +          +    -0.90266287490405 * GRP_NumWebPurchases4
268975    +          +    -1.30674857203711 * GRP_RFMstat2  +    -1.17342096545194 *
268976    +        GRP_RFMstat3  +    -0.30126794428155 * GRP_RFMstat4
268977    +          +     -0.8659792150521 * GRP_RMntFrq2  +    -1.44590383236006 *
268978    +        GRP_RMntFrq3  +    -0.80966415705314 * GRP_RMntFrq4
268979    +          +     0.87489420639261 * GRP_Recency2  +    -1.40960165096221 *
268980    +        GRP_Recency3  +    -0.53680151949787 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.63304456551117 * GRP_AcceptedCmp52 + 
-0.14901142536344 * GRP_Frq2 + -1.08381199299565 * GRP_Frq3 + -0.85011511275423 * GRP_Frq4 + 
-0.08287353061518 * GRP_Income2 + -0.58867333501692 * GRP_Income3 + 2.7097455309793 * 
GRP_Income4 + -0.69224144793047 * GRP_Mnt2 + -0.68026366312168 * GRP_Mnt3 + 1.66551851821907 * 
GRP_Mnt4 + -1.22509209613269 * GRP_MntFishProducts2 + -0.00259407262353 * GRP_MntFishProducts3 
+ 0.26637234051452 * GRP_MntFishProducts4 + 1.23072457246487 * GRP_MntGoldProds2 + 
0.27789879553199 * GRP_MntGoldProds3 + -1.84318316043809 * GRP_MntGoldProds4 + 
-0.37980618439099 * GRP_MntMeatProducts2 + -0.29547725841338 * GRP_MntMeatProducts3 + 
1.3351420752995 * GRP_MntMeatProducts4 + -0.69084339698082 * GRP_MntWines2 + -2.20092193594928 
* GRP_MntWines3 + 1.01263725926364 * GRP_MntWines4 + 1.64715242240489 * 
GRP_NumCatalogPurchases3 + 0.01013329918753 * GRP_NumCatalogPurchases4 + 0.0553124072484 * 
GRP_NumDistPurchases2 + 0.76354979572241 * GRP_NumDistPurchases3 + 0.88878742575161 * 
GRP_NumDistPurchases4 + -0.02629928898859 * GRP_NumWebPurchases2 + 1.58583162640849 * 
GRP_NumWebPurchases3 + -0.90266287490405 * GRP_NumWebPurchases4 + -1.30674857203711 * 
GRP_RFMstat2 + -1.17342096545194 * GRP_RFMstat3 + -0.30126794428155 * GRP_RFMstat4 + 
-0.8659792150521 * GRP_RMntFrq2 + -1.44590383236006 * GRP_RMntFrq3 + -0.80966415705314 * 
GRP_RMntFrq4 + 0.87489420639261 * GRP_Recency2 + -1.40960165096221 * GRP_Recency3 + 
-0.53680151949787 * GRP_Recency4 ;
268981    +   H1x1_5  = H1x1_5  +    -0.21941115903739 * GRP_AcceptedCmp52
268982    +          +     0.45333751914711 * GRP_Frq2  +     -3.0539111804593 * GRP_Frq3
268983    +          +     0.04419455266766 * GRP_Frq4  +     0.43424963383962 *
268984    +        GRP_Income2  +     2.20143802199151 * GRP_Income3
268985    +          +    -0.28702964858037 * GRP_Income4  +    -1.13156956520544 *
268986    +        GRP_Mnt2  +     1.50720291442363 * GRP_Mnt3  +    -1.22848161283033 *
268987    +        GRP_Mnt4  +     -0.7725131971727 * GRP_MntFishProducts2
268988    +          +    -1.66553508839843 * GRP_MntFishProducts3
268989    +          +     3.34099127472134 * GRP_MntFishProducts4
268990    +          +    -3.77620930649926 * GRP_MntGoldProds2
268991    +          +     2.75980592823208 * GRP_MntGoldProds3
268992    +          +    -0.90664928399655 * GRP_MntGoldProds4
268993    +          +    -1.27778215433985 * GRP_MntMeatProducts2
268994    +          +    -0.38584098789626 * GRP_MntMeatProducts3
268995    +          +      0.8642940393434 * GRP_MntMeatProducts4
268996    +          +     -1.9800576470315 * GRP_MntWines2  +    -0.84678624865719 *
268997    +        GRP_MntWines3  +    -0.71867792060605 * GRP_MntWines4
268998    +          +     0.54374663319998 * GRP_NumCatalogPurchases3
268999    +          +     0.84217480467185 * GRP_NumCatalogPurchases4
269000    +          +    -0.04373645189331 * GRP_NumDistPurchases2
269001    +          +    -3.26167594790936 * GRP_NumDistPurchases3
269002    +          +    -1.17302893253955 * GRP_NumDistPurchases4
269003    +          +     1.08907656354379 * GRP_NumWebPurchases2
269004    +          +    -1.23512651413063 * GRP_NumWebPurchases3
269005    +          +     1.21540059785356 * GRP_NumWebPurchases4
269006    +          +     1.38488146196728 * GRP_RFMstat2  +     0.90046251067185 *
269007    +        GRP_RFMstat3  +     1.44622088949053 * GRP_RFMstat4
269008    +          +     0.24358390082829 * GRP_RMntFrq2  +    -1.52588683776436 *
269009    +        GRP_RMntFrq3  +    -1.28643658389964 * GRP_RMntFrq4
269010    +          +    -0.57567006875063 * GRP_Recency2  +    -1.38736001754893 *
269011    +        GRP_Recency3  +    -0.14702610320846 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.21941115903739 * GRP_AcceptedCmp52 + 
0.45333751914711 * GRP_Frq2 + -3.0539111804593 * GRP_Frq3 + 0.04419455266766 * GRP_Frq4 + 
0.43424963383962 * GRP_Income2 + 2.20143802199151 * GRP_Income3 + -0.28702964858037 * 
GRP_Income4 + -1.13156956520544 * GRP_Mnt2 + 1.50720291442363 * GRP_Mnt3 + -1.22848161283033 * 
GRP_Mnt4 + -0.7725131971727 * GRP_MntFishProducts2 + -1.66553508839843 * GRP_MntFishProducts3 
+ 3.34099127472134 * GRP_MntFishProducts4 + -3.77620930649926 * GRP_MntGoldProds2 + 
2.75980592823208 * GRP_MntGoldProds3 + -0.90664928399655 * GRP_MntGoldProds4 + 
-1.27778215433985 * GRP_MntMeatProducts2 + -0.38584098789626 * GRP_MntMeatProducts3 + 
0.8642940393434 * GRP_MntMeatProducts4 + -1.9800576470315 * GRP_MntWines2 + -0.84678624865719 
* GRP_MntWines3 + -0.71867792060605 * GRP_MntWines4 + 0.54374663319998 * 
GRP_NumCatalogPurchases3 + 0.84217480467185 * GRP_NumCatalogPurchases4 + -0.04373645189331 * 
GRP_NumDistPurchases2 + -3.26167594790936 * GRP_NumDistPurchases3 + -1.17302893253955 * 
GRP_NumDistPurchases4 + 1.08907656354379 * GRP_NumWebPurchases2 + -1.23512651413063 * 
GRP_NumWebPurchases3 + 1.21540059785356 * GRP_NumWebPurchases4 + 1.38488146196728 * 
GRP_RFMstat2 + 0.90046251067185 * GRP_RFMstat3 + 1.44622088949053 * GRP_RFMstat4 + 
0.24358390082829 * GRP_RMntFrq2 + -1.52588683776436 * GRP_RMntFrq3 + -1.28643658389964 * 
GRP_RMntFrq4 + -0.57567006875063 * GRP_Recency2 + -1.38736001754893 * GRP_Recency3 + 
-0.14702610320846 * GRP_Recency4 ;
269012    +   H1x1_6  = H1x1_6  +     0.08036802334337 * GRP_AcceptedCmp52
269013    +          +    -2.51458257290705 * GRP_Frq2  +     0.74528046172987 * GRP_Frq3
269014    +          +    -0.77535820763324 * GRP_Frq4  +    -2.00398370232748 *
269015    +        GRP_Income2  +     2.31528209254516 * GRP_Income3
269016    +          +     0.31630780664757 * GRP_Income4  +    -0.52394275421685 *
269017    +        GRP_Mnt2  +    -0.11778857296632 * GRP_Mnt3  +     0.54634621990664 *
269018    +        GRP_Mnt4  +    -1.83414469533751 * GRP_MntFishProducts2
269019    +          +    -2.67281939906452 * GRP_MntFishProducts3
269020    +          +     0.40242786465667 * GRP_MntFishProducts4
269021    +          +     1.21530608953831 * GRP_MntGoldProds2
269022    +          +      1.3503878333604 * GRP_MntGoldProds3
269023    +          +    -0.90580344196397 * GRP_MntGoldProds4
269024    +          +    -1.45763540546851 * GRP_MntMeatProducts2
269025    +          +     -1.1437696213546 * GRP_MntMeatProducts3
269026    +          +    -0.95836970043212 * GRP_MntMeatProducts4
269027    +          +     0.05665970127644 * GRP_MntWines2  +     0.73760441066896 *
269028    +        GRP_MntWines3  +    -0.66251833030334 * GRP_MntWines4
269029    +          +    -0.66756860309452 * GRP_NumCatalogPurchases3
269030    +          +    -1.77302756421253 * GRP_NumCatalogPurchases4
269031    +          +     0.41629563300233 * GRP_NumDistPurchases2
269032    +          +     2.64707563295858 * GRP_NumDistPurchases3
269033    +          +    -2.61014123917694 * GRP_NumDistPurchases4
269034    +          +     1.31436489534812 * GRP_NumWebPurchases2
269035    +          +    -0.44152222308186 * GRP_NumWebPurchases3
269036    +          +     1.72168992115176 * GRP_NumWebPurchases4
269037    +          +    -0.60634873547541 * GRP_RFMstat2  +      0.5143401306027 *
269038    +        GRP_RFMstat3  +      0.4037230104052 * GRP_RFMstat4
269039    +          +     1.85795667721847 * GRP_RMntFrq2  +    -1.13313695958964 *
269040    +        GRP_RMntFrq3  +     1.21816928983774 * GRP_RMntFrq4
269041    +          +     0.28142803075343 * GRP_Recency2  +    -0.43031870131445 *
269042    +        GRP_Recency3  +    -0.98956301213704 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + 0.08036802334337 * GRP_AcceptedCmp52 + 
-2.51458257290705 * GRP_Frq2 + 0.74528046172987 * GRP_Frq3 + -0.77535820763324 * GRP_Frq4 + 
-2.00398370232748 * GRP_Income2 + 2.31528209254516 * GRP_Income3 + 0.31630780664757 * 
GRP_Income4 + -0.52394275421685 * GRP_Mnt2 + -0.11778857296632 * GRP_Mnt3 + 0.54634621990664 * 
GRP_Mnt4 + -1.83414469533751 * GRP_MntFishProducts2 + -2.67281939906452 * GRP_MntFishProducts3 
+ 0.40242786465667 * GRP_MntFishProducts4 + 1.21530608953831 * GRP_MntGoldProds2 + 
1.3503878333604 * GRP_MntGoldProds3 + -0.90580344196397 * GRP_MntGoldProds4 + 
-1.45763540546851 * GRP_MntMeatProducts2 + -1.1437696213546 * GRP_MntMeatProducts3 + 
-0.95836970043212 * GRP_MntMeatProducts4 + 0.05665970127644 * GRP_MntWines2 + 0.73760441066896 
* GRP_MntWines3 + -0.66251833030334 * GRP_MntWines4 + -0.66756860309452 * 
GRP_NumCatalogPurchases3 + -1.77302756421253 * GRP_NumCatalogPurchases4 + 0.41629563300233 * 
GRP_NumDistPurchases2 + 2.64707563295858 * GRP_NumDistPurchases3 + -2.61014123917694 * 
GRP_NumDistPurchases4 + 1.31436489534812 * GRP_NumWebPurchases2 + -0.44152222308186 * 
GRP_NumWebPurchases3 + 1.72168992115176 * GRP_NumWebPurchases4 + -0.60634873547541 * 
GRP_RFMstat2 + 0.5143401306027 * GRP_RFMstat3 + 0.4037230104052 * GRP_RFMstat4 + 
1.85795667721847 * GRP_RMntFrq2 + -1.13313695958964 * GRP_RMntFrq3 + 1.21816928983774 * 
GRP_RMntFrq4 + 0.28142803075343 * GRP_Recency2 + -0.43031870131445 * GRP_Recency3 + 
-0.98956301213704 * GRP_Recency4 ;
269043    +   H1x1_7  = H1x1_7  +     0.68410670134149 * GRP_AcceptedCmp52
269044    +          +     0.10121806405455 * GRP_Frq2  +     -1.8375798445876 * GRP_Frq3
269045    +          +     -2.3304704350487 * GRP_Frq4  +     -0.4064720818222 *
269046    +        GRP_Income2  +     1.14246001493098 * GRP_Income3
269047    +          +     0.30563934221376 * GRP_Income4  +    -1.03456782830408 *
269048    +        GRP_Mnt2  +     0.68732316665899 * GRP_Mnt3  +     0.12193839917197 *
269049    +        GRP_Mnt4  +     1.78947230945337 * GRP_MntFishProducts2
269050    +          +      -0.152562533802 * GRP_MntFishProducts3
269051    +          +     0.16800852501402 * GRP_MntFishProducts4
269052    +          +    -0.43436913890783 * GRP_MntGoldProds2
269053    +          +    -0.36427695823088 * GRP_MntGoldProds3
269054    +          +    -0.70562605444874 * GRP_MntGoldProds4
269055    +          +      1.1896868399991 * GRP_MntMeatProducts2
269056    +          +    -3.25683109762258 * GRP_MntMeatProducts3
269057    +          +     1.07082922763777 * GRP_MntMeatProducts4
269058    +          +     0.20781058114233 * GRP_MntWines2  +     0.58933954589501 *
269059    +        GRP_MntWines3  +    -0.47329387352048 * GRP_MntWines4
269060    +          +     2.86401269707592 * GRP_NumCatalogPurchases3
269061    +          +    -0.42660183421871 * GRP_NumCatalogPurchases4
269062    +          +     1.70072621341351 * GRP_NumDistPurchases2
269063    +          +    -0.01744947613595 * GRP_NumDistPurchases3
269064    +          +    -2.08742260039568 * GRP_NumDistPurchases4
269065    +          +    -1.04444309037822 * GRP_NumWebPurchases2
269066    +          +    -3.12746125340209 * GRP_NumWebPurchases3
269067    +          +    -0.71369198142362 * GRP_NumWebPurchases4
269068    +          +    -0.49060046002682 * GRP_RFMstat2  +     0.31117459893753 *
269069    +        GRP_RFMstat3  +     1.58479219562748 * GRP_RFMstat4
269070    +          +     0.16070553135537 * GRP_RMntFrq2  +    -1.17007677743781 *
269071    +        GRP_RMntFrq3  +    -0.89420472751582 * GRP_RMntFrq4
269072    +          +    -0.18368088096716 * GRP_Recency2  +    -0.51910607139607 *
269073    +        GRP_Recency3  +     0.01857782231504 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x1_7 = H1x1_7 + 0.68410670134149 * GRP_AcceptedCmp52 + 
0.10121806405455 * GRP_Frq2 + -1.8375798445876 * GRP_Frq3 + -2.3304704350487 * GRP_Frq4 + 
-0.4064720818222 * GRP_Income2 + 1.14246001493098 * GRP_Income3 + 0.30563934221376 * 
GRP_Income4 + -1.03456782830408 * GRP_Mnt2 + 0.68732316665899 * GRP_Mnt3 + 0.12193839917197 * 
GRP_Mnt4 + 1.78947230945337 * GRP_MntFishProducts2 + -0.152562533802 * GRP_MntFishProducts3 + 
0.16800852501402 * GRP_MntFishProducts4 + -0.43436913890783 * GRP_MntGoldProds2 + 
-0.36427695823088 * GRP_MntGoldProds3 + -0.70562605444874 * GRP_MntGoldProds4 + 
1.1896868399991 * GRP_MntMeatProducts2 + -3.25683109762258 * GRP_MntMeatProducts3 + 
1.07082922763777 * GRP_MntMeatProducts4 + 0.20781058114233 * GRP_MntWines2 + 0.58933954589501 
* GRP_MntWines3 + -0.47329387352048 * GRP_MntWines4 + 2.86401269707592 * 
GRP_NumCatalogPurchases3 + -0.42660183421871 * GRP_NumCatalogPurchases4 + 1.70072621341351 * 
GRP_NumDistPurchases2 + -0.01744947613595 * GRP_NumDistPurchases3 + -2.08742260039568 * 
GRP_NumDistPurchases4 + -1.04444309037822 * GRP_NumWebPurchases2 + -3.12746125340209 * 
GRP_NumWebPurchases3 + -0.71369198142362 * GRP_NumWebPurchases4 + -0.49060046002682 * 
GRP_RFMstat2 + 0.31117459893753 * GRP_RFMstat3 + 1.58479219562748 * GRP_RFMstat4 + 
0.16070553135537 * GRP_RMntFrq2 + -1.17007677743781 * GRP_RMntFrq3 + -0.89420472751582 * 
GRP_RMntFrq4 + -0.18368088096716 * GRP_Recency2 + -0.51910607139607 * GRP_Recency3 + 
0.01857782231504 * GRP_Recency4 ;
269074    +   H1x1_1  =     1.05791912072896 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.05791912072896 + H1x1_1 ;
269075    +   H1x1_2  =    -3.78026109193218 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -3.78026109193218 + H1x1_2 ;
269076    +   H1x1_3  =    -0.67855740578745 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.67855740578745 + H1x1_3 ;
269077    +   H1x1_4  =     1.43165665437202 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.43165665437202 + H1x1_4 ;
269078    +   H1x1_5  =     0.38366959591805 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0.38366959591805 + H1x1_5 ;
269079    +   H1x1_6  =     3.31752226761072 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = 3.31752226761072 + H1x1_6 ;
269080    +   H1x1_7  =    -0.85163584413854 + H1x1_7 ;
MPRINT(EM_DIAGRAM):   H1x1_7 = -0.85163584413854 + H1x1_7 ;
269081    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
269082    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
269083    +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
269084    +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
269085    +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
269086    +   H1x1_4  = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
269087    +   H1x1_5  = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_5 = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
269088    +   H1x1_6  = 1.0 / (1.0 + EXP(MIN( - H1x1_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_6 = 1.0 / (1.0 + EXP(MIN( - H1x1_6 , _EXP_BAR)));
269089    +   H1x1_7  = 1.0 / (1.0 + EXP(MIN( - H1x1_7 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_7 = 1.0 / (1.0 + EXP(MIN( - H1x1_7 , _EXP_BAR)));
269090    +END;
MPRINT(EM_DIAGRAM):   END;
269091    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
269092    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
269093    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
269094    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
269095    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
269096    +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
269097    +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
269098    +   H1x1_7  = .;
MPRINT(EM_DIAGRAM):   H1x1_7 = .;
269099    +END;
MPRINT(EM_DIAGRAM):   END;
269100    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
269101    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
269102    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
269103    +
269104    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
269105    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
269106    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
269107    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
269108    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
269109    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
269110    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
269111    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
269112    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
269113    +end;
MPRINT(EM_DIAGRAM):   end;
269114    +else do;
MPRINT(EM_DIAGRAM):   else do;
269115    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
269116    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
269117    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
269118    +   end;
MPRINT(EM_DIAGRAM):   end;
269119    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
269120    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
269121    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
269122    +   end;
MPRINT(EM_DIAGRAM):   end;
269123    +   else do;
MPRINT(EM_DIAGRAM):   else do;
269124    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
269125    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
269126    +   end;
MPRINT(EM_DIAGRAM):   end;
269127    +end;
MPRINT(EM_DIAGRAM):   end;
269128    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
269129    +   P_DepVar1  =    -4.35435611850415 * H1x1_1  +     3.06316051292344 * H1x1_2
269130    +          +     1.44284980602333 * H1x1_3  +    -3.32913686535523 * H1x1_4
269131    +          +     4.44336056081802 * H1x1_5  +    -4.57997435146105 * H1x1_6
269132    +          +      3.7324549254653 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -4.35435611850415 * H1x1_1 + 3.06316051292344 * H1x1_2 + 
1.44284980602333 * H1x1_3 + -3.32913686535523 * H1x1_4 + 4.44336056081802 * H1x1_5 + 
-4.57997435146105 * H1x1_6 + 3.7324549254653 * H1x1_7 ;
269133    +   P_DepVar1  =    -0.50604500485068 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.50604500485068 + P_DepVar1 ;
269134    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
269135    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
269136    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
269137    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
269138    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
269139    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
269140    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
269141    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
269142    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
269143    +END;
MPRINT(EM_DIAGRAM):   END;
269144    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
269145    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
269146    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
269147    +END;
MPRINT(EM_DIAGRAM):   END;
269148    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
269149    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
269150    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
269151    +END;
MPRINT(EM_DIAGRAM):   END;
269152    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
269153    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
269154    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
269155    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
269156    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
269157    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
269158    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
269159    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
269160    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
269161    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
269162    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
269163    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
269164    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
269165    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
269166    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
269167    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
269168    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
269169    +END;
MPRINT(EM_DIAGRAM):   END;
269170    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
269171    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
269172    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
269173    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
269174    +* Renaming variables for AutoNeural22;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural22;
269175    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
269176    +* Renaming Posterior variables for AutoNeural22;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural22;
269177    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
269178    +drop AutoNeural22_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural22_P_DepVar1;
269179    +AutoNeural22_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural22_P_DepVar1 = P_DepVar1;
269180    +drop AutoNeural22_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural22_P_DepVar0;
269181    +AutoNeural22_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural22_P_DepVar0 = P_DepVar0;
269182    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
269183    +* Renaming Into variables for AutoNeural22;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for AutoNeural22;
269184    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
269185    +length AutoNeural22_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length AutoNeural22_I_DepVar $32;
269186    +drop AutoNeural22_I_DepVar;
MPRINT(EM_DIAGRAM):   drop AutoNeural22_I_DepVar;
269187    +AutoNeural22_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   AutoNeural22_I_DepVar = I_DepVar;
269188    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
269189    +* Renaming _WARN_ variable for AutoNeural22;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural22;
269190    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
269191    +length AutoNeural22_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural22_WARN_ $4;
269192    +drop AutoNeural22_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural22_WARN_;
269193    +AutoNeural22_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural22_WARN_ = _WARN_;
269194    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
269195    +* Ensmbl50: Scoring Code of model 3 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl50: Scoring Code of model 3 of 7;
269196    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
269197    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
269198    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
269199    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
269200    +* NODE: AutoNeural21;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural21;
269201    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
269202    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
269203    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
269204    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
269205    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
269206    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
269207    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
269208    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
269209    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
269210    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
269211    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
269212    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
269213    +LENGTH _WARN_ $4
269214    +      F_DepVar  $ 12
269215    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
269216    +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
269217    +
269218    +      label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
MPRINT(EM_DIAGRAM):   label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
269219    +
269220    +      label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
269221    +
269222    +      label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
269223    +
269224    +      label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
269225    +
269226    +      label GRP_Income2 = 'Dummy: GRP_Income=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Income2 = 'Dummy: GRP_Income=2' ;
269227    +
269228    +      label GRP_Income3 = 'Dummy: GRP_Income=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Income3 = 'Dummy: GRP_Income=3' ;
269229    +
269230    +      label GRP_Income4 = 'Dummy: GRP_Income=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Income4 = 'Dummy: GRP_Income=4' ;
269231    +
269232    +      label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
269233    +
269234    +      label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
269235    +
269236    +      label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
269237    +
269238    +      label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
269239    +
269240    +      label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
269241    +
269242    +      label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
269243    +
269244    +      label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
269245    +
269246    +      label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
269247    +
269248    +      label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
269249    +
269250    +      label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
269251    +
269252    +      label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
269253    +
269254    +      label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
269255    +
269256    +      label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
269257    +
269258    +      label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
269259    +
269260    +      label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
269261    +
269262    +      label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
269263    +
269264    +      label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
269265    +
269266    +      label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
269267    +
269268    +      label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
269269    +
269270    +      label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
269271    +
269272    +      label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
269273    +
269274    +      label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
269275    +
269276    +      label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
269277    +
269278    +      label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
269279    +
269280    +      label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
269281    +
269282    +      label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
269283    +
269284    +      label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
269285    +
269286    +      label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
269287    +
269288    +      label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
269289    +
269290    +      label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
269291    +
269292    +      label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
269293    +
269294    +      label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
269295    +
269296    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
269297    +
269298    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
269299    +
269300    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
269301    +
269302    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
269303    +
269304    +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
269305    +
269306    +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
269307    +
269308    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
269309    +
269310    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
269311    +
269312    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
269313    +
269314    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
269315    +
269316    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
269317    +
269318    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
269319    +
269320    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
269321    +
269322    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
269323    +
269324    +*** Generate dummy variables for GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmp5 ;
269325    +drop GRP_AcceptedCmp52 ;
MPRINT(EM_DIAGRAM):   drop GRP_AcceptedCmp52 ;
269326    +if missing( GRP_AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmp5 ) then do;
269327    +   GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
269328    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
269329    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
269330    +end;
MPRINT(EM_DIAGRAM):   end;
269331    +else do;
MPRINT(EM_DIAGRAM):   else do;
269332    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
269333    +   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
269334    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
269335    +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
269336    +      GRP_AcceptedCmp52 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = 1;
269337    +   end;
MPRINT(EM_DIAGRAM):   end;
269338    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
269339    +      GRP_AcceptedCmp52 = -1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = -1;
269340    +   end;
MPRINT(EM_DIAGRAM):   end;
269341    +   else do;
MPRINT(EM_DIAGRAM):   else do;
269342    +      GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
269343    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
269344    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
269345    +   end;
MPRINT(EM_DIAGRAM):   end;
269346    +end;
MPRINT(EM_DIAGRAM):   end;
269347    +
269348    +*** Generate dummy variables for GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Frq ;
269349    +drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
269350    +if missing( GRP_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Frq ) then do;
269351    +   GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
269352    +   GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
269353    +   GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
269354    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
269355    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
269356    +end;
MPRINT(EM_DIAGRAM):   end;
269357    +else do;
MPRINT(EM_DIAGRAM):   else do;
269358    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
269359    +   _dm12 = put( GRP_Frq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Frq , BEST12. );
269360    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
269361    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
269362    +      GRP_Frq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = -1;
269363    +      GRP_Frq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = -1;
269364    +      GRP_Frq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = -1;
269365    +   end;
MPRINT(EM_DIAGRAM):   end;
269366    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
269367    +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
269368    +      GRP_Frq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 1;
269369    +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
269370    +   end;
MPRINT(EM_DIAGRAM):   end;
269371    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
269372    +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
269373    +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
269374    +      GRP_Frq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 1;
269375    +   end;
MPRINT(EM_DIAGRAM):   end;
269376    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
269377    +      GRP_Frq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 1;
269378    +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
269379    +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
269380    +   end;
MPRINT(EM_DIAGRAM):   end;
269381    +   else do;
MPRINT(EM_DIAGRAM):   else do;
269382    +      GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
269383    +      GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
269384    +      GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
269385    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
269386    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
269387    +   end;
MPRINT(EM_DIAGRAM):   end;
269388    +end;
MPRINT(EM_DIAGRAM):   end;
269389    +
269390    +*** Generate dummy variables for GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Income ;
269391    +drop GRP_Income2 GRP_Income3 GRP_Income4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Income2 GRP_Income3 GRP_Income4 ;
269392    +if missing( GRP_Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Income ) then do;
269393    +   GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
269394    +   GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
269395    +   GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
269396    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
269397    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
269398    +end;
MPRINT(EM_DIAGRAM):   end;
269399    +else do;
MPRINT(EM_DIAGRAM):   else do;
269400    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
269401    +   _dm12 = put( GRP_Income , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Income , BEST12. );
269402    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
269403    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
269404    +      GRP_Income2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = -1;
269405    +      GRP_Income3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = -1;
269406    +      GRP_Income4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = -1;
269407    +   end;
MPRINT(EM_DIAGRAM):   end;
269408    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
269409    +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
269410    +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
269411    +      GRP_Income4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 1;
269412    +   end;
MPRINT(EM_DIAGRAM):   end;
269413    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
269414    +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
269415    +      GRP_Income3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 1;
269416    +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
269417    +   end;
MPRINT(EM_DIAGRAM):   end;
269418    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
269419    +      GRP_Income2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 1;
269420    +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
269421    +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
269422    +   end;
MPRINT(EM_DIAGRAM):   end;
269423    +   else do;
MPRINT(EM_DIAGRAM):   else do;
269424    +      GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
269425    +      GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
269426    +      GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
269427    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
269428    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
269429    +   end;
MPRINT(EM_DIAGRAM):   end;
269430    +end;
MPRINT(EM_DIAGRAM):   end;
269431    +
269432    +*** Generate dummy variables for GRP_Mnt ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Mnt ;
269433    +drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
269434    +if missing( GRP_Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Mnt ) then do;
269435    +   GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
269436    +   GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
269437    +   GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
269438    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
269439    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
269440    +end;
MPRINT(EM_DIAGRAM):   end;
269441    +else do;
MPRINT(EM_DIAGRAM):   else do;
269442    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
269443    +   _dm12 = put( GRP_Mnt , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Mnt , BEST12. );
269444    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
269445    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
269446    +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
269447    +      GRP_Mnt3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 1;
269448    +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
269449    +   end;
MPRINT(EM_DIAGRAM):   end;
269450    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
269451    +      GRP_Mnt2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = -1;
269452    +      GRP_Mnt3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = -1;
269453    +      GRP_Mnt4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = -1;
269454    +   end;
MPRINT(EM_DIAGRAM):   end;
269455    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
269456    +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
269457    +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
269458    +      GRP_Mnt4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 1;
269459    +   end;
MPRINT(EM_DIAGRAM):   end;
269460    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
269461    +      GRP_Mnt2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 1;
269462    +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
269463    +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
269464    +   end;
MPRINT(EM_DIAGRAM):   end;
269465    +   else do;
MPRINT(EM_DIAGRAM):   else do;
269466    +      GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
269467    +      GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
269468    +      GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
269469    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
269470    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
269471    +   end;
MPRINT(EM_DIAGRAM):   end;
269472    +end;
MPRINT(EM_DIAGRAM):   end;
269473    +
269474    +*** Generate dummy variables for GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntFishProducts ;
269475    +drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
269476    +if missing( GRP_MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntFishProducts ) then do;
269477    +   GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
269478    +   GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
269479    +   GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
269480    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
269481    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
269482    +end;
MPRINT(EM_DIAGRAM):   end;
269483    +else do;
MPRINT(EM_DIAGRAM):   else do;
269484    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
269485    +   _dm12 = put( GRP_MntFishProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntFishProducts , BEST12. );
269486    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
269487    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
269488    +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
269489    +      GRP_MntFishProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 1;
269490    +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
269491    +   end;
MPRINT(EM_DIAGRAM):   end;
269492    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
269493    +      GRP_MntFishProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = -1;
269494    +      GRP_MntFishProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = -1;
269495    +      GRP_MntFishProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = -1;
269496    +   end;
MPRINT(EM_DIAGRAM):   end;
269497    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
269498    +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
269499    +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
269500    +      GRP_MntFishProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 1;
269501    +   end;
MPRINT(EM_DIAGRAM):   end;
269502    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
269503    +      GRP_MntFishProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 1;
269504    +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
269505    +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
269506    +   end;
MPRINT(EM_DIAGRAM):   end;
269507    +   else do;
MPRINT(EM_DIAGRAM):   else do;
269508    +      GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
269509    +      GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
269510    +      GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
269511    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
269512    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
269513    +   end;
MPRINT(EM_DIAGRAM):   end;
269514    +end;
MPRINT(EM_DIAGRAM):   end;
269515    +
269516    +*** Generate dummy variables for GRP_MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntGoldProds ;
269517    +drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
269518    +if missing( GRP_MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntGoldProds ) then do;
269519    +   GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
269520    +   GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
269521    +   GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
269522    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
269523    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
269524    +end;
MPRINT(EM_DIAGRAM):   end;
269525    +else do;
MPRINT(EM_DIAGRAM):   else do;
269526    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
269527    +   _dm12 = put( GRP_MntGoldProds , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntGoldProds , BEST12. );
269528    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
269529    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
269530    +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
269531    +      GRP_MntGoldProds3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 1;
269532    +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
269533    +   end;
MPRINT(EM_DIAGRAM):   end;
269534    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
269535    +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
269536    +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
269537    +      GRP_MntGoldProds4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 1;
269538    +   end;
MPRINT(EM_DIAGRAM):   end;
269539    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
269540    +      GRP_MntGoldProds2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = -1;
269541    +      GRP_MntGoldProds3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = -1;
269542    +      GRP_MntGoldProds4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = -1;
269543    +   end;
MPRINT(EM_DIAGRAM):   end;
269544    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
269545    +      GRP_MntGoldProds2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 1;
269546    +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
269547    +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
269548    +   end;
MPRINT(EM_DIAGRAM):   end;
269549    +   else do;
MPRINT(EM_DIAGRAM):   else do;
269550    +      GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
269551    +      GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
269552    +      GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
269553    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
269554    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
269555    +   end;
MPRINT(EM_DIAGRAM):   end;
269556    +end;
MPRINT(EM_DIAGRAM):   end;
269557    +
269558    +*** Generate dummy variables for GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntMeatProducts ;
269559    +drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
269560    +if missing( GRP_MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntMeatProducts ) then do;
269561    +   GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
269562    +   GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
269563    +   GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
269564    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
269565    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
269566    +end;
MPRINT(EM_DIAGRAM):   end;
269567    +else do;
MPRINT(EM_DIAGRAM):   else do;
269568    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
269569    +   _dm12 = put( GRP_MntMeatProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntMeatProducts , BEST12. );
269570    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
269571    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
269572    +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
269573    +      GRP_MntMeatProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 1;
269574    +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
269575    +   end;
MPRINT(EM_DIAGRAM):   end;
269576    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
269577    +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
269578    +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
269579    +      GRP_MntMeatProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 1;
269580    +   end;
MPRINT(EM_DIAGRAM):   end;
269581    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
269582    +      GRP_MntMeatProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = -1;
269583    +      GRP_MntMeatProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = -1;
269584    +      GRP_MntMeatProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = -1;
269585    +   end;
MPRINT(EM_DIAGRAM):   end;
269586    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
269587    +      GRP_MntMeatProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 1;
269588    +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
269589    +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
269590    +   end;
MPRINT(EM_DIAGRAM):   end;
269591    +   else do;
MPRINT(EM_DIAGRAM):   else do;
269592    +      GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
269593    +      GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
269594    +      GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
269595    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
269596    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
269597    +   end;
MPRINT(EM_DIAGRAM):   end;
269598    +end;
MPRINT(EM_DIAGRAM):   end;
269599    +
269600    +*** Generate dummy variables for GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntWines ;
269601    +drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
269602    +if missing( GRP_MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntWines ) then do;
269603    +   GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
269604    +   GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
269605    +   GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
269606    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
269607    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
269608    +end;
MPRINT(EM_DIAGRAM):   end;
269609    +else do;
MPRINT(EM_DIAGRAM):   else do;
269610    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
269611    +   _dm12 = put( GRP_MntWines , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntWines , BEST12. );
269612    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
269613    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
269614    +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
269615    +      GRP_MntWines3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 1;
269616    +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
269617    +   end;
MPRINT(EM_DIAGRAM):   end;
269618    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
269619    +      GRP_MntWines2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = -1;
269620    +      GRP_MntWines3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = -1;
269621    +      GRP_MntWines4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = -1;
269622    +   end;
MPRINT(EM_DIAGRAM):   end;
269623    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
269624    +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
269625    +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
269626    +      GRP_MntWines4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 1;
269627    +   end;
MPRINT(EM_DIAGRAM):   end;
269628    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
269629    +      GRP_MntWines2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 1;
269630    +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
269631    +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
269632    +   end;
MPRINT(EM_DIAGRAM):   end;
269633    +   else do;
MPRINT(EM_DIAGRAM):   else do;
269634    +      GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
269635    +      GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
269636    +      GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
269637    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
269638    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
269639    +   end;
MPRINT(EM_DIAGRAM):   end;
269640    +end;
MPRINT(EM_DIAGRAM):   end;
269641    +
269642    +*** Generate dummy variables for GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumCatalogPurchases ;
269643    +drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
269644    +if missing( GRP_NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumCatalogPurchases ) then do;
269645    +   GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
269646    +   GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
269647    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
269648    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
269649    +end;
MPRINT(EM_DIAGRAM):   end;
269650    +else do;
MPRINT(EM_DIAGRAM):   else do;
269651    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
269652    +   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
269653    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
269654    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
269655    +      GRP_NumCatalogPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 1;
269656    +      GRP_NumCatalogPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 0;
269657    +   end;
MPRINT(EM_DIAGRAM):   end;
269658    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
269659    +      GRP_NumCatalogPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = -1;
269660    +      GRP_NumCatalogPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = -1;
269661    +   end;
MPRINT(EM_DIAGRAM):   end;
269662    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
269663    +      GRP_NumCatalogPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 0;
269664    +      GRP_NumCatalogPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 1;
269665    +   end;
MPRINT(EM_DIAGRAM):   end;
269666    +   else do;
MPRINT(EM_DIAGRAM):   else do;
269667    +      GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
269668    +      GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
269669    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
269670    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
269671    +   end;
MPRINT(EM_DIAGRAM):   end;
269672    +end;
MPRINT(EM_DIAGRAM):   end;
269673    +
269674    +*** Generate dummy variables for GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumDistPurchases ;
269675    +drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
269676    +if missing( GRP_NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumDistPurchases ) then do;
269677    +   GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
269678    +   GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
269679    +   GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
269680    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
269681    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
269682    +end;
MPRINT(EM_DIAGRAM):   end;
269683    +else do;
MPRINT(EM_DIAGRAM):   else do;
269684    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
269685    +   _dm12 = put( GRP_NumDistPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumDistPurchases , BEST12. );
269686    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
269687    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
269688    +      GRP_NumDistPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = -1;
269689    +      GRP_NumDistPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = -1;
269690    +      GRP_NumDistPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = -1;
269691    +   end;
MPRINT(EM_DIAGRAM):   end;
269692    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
269693    +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
269694    +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
269695    +      GRP_NumDistPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 1;
269696    +   end;
MPRINT(EM_DIAGRAM):   end;
269697    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
269698    +      GRP_NumDistPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 1;
269699    +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
269700    +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
269701    +   end;
MPRINT(EM_DIAGRAM):   end;
269702    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
269703    +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
269704    +      GRP_NumDistPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 1;
269705    +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
269706    +   end;
MPRINT(EM_DIAGRAM):   end;
269707    +   else do;
MPRINT(EM_DIAGRAM):   else do;
269708    +      GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
269709    +      GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
269710    +      GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
269711    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
269712    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
269713    +   end;
MPRINT(EM_DIAGRAM):   end;
269714    +end;
MPRINT(EM_DIAGRAM):   end;
269715    +
269716    +*** Generate dummy variables for GRP_NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumWebPurchases ;
269717    +drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
269718    +if missing( GRP_NumWebPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumWebPurchases ) then do;
269719    +   GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
269720    +   GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
269721    +   GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
269722    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
269723    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
269724    +end;
MPRINT(EM_DIAGRAM):   end;
269725    +else do;
MPRINT(EM_DIAGRAM):   else do;
269726    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
269727    +   _dm12 = put( GRP_NumWebPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumWebPurchases , BEST12. );
269728    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
269729    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
269730    +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
269731    +      GRP_NumWebPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 1;
269732    +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
269733    +   end;
MPRINT(EM_DIAGRAM):   end;
269734    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
269735    +      GRP_NumWebPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = -1;
269736    +      GRP_NumWebPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = -1;
269737    +      GRP_NumWebPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = -1;
269738    +   end;
MPRINT(EM_DIAGRAM):   end;
269739    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
269740    +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
269741    +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
269742    +      GRP_NumWebPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 1;
269743    +   end;
MPRINT(EM_DIAGRAM):   end;
269744    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
269745    +      GRP_NumWebPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 1;
269746    +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
269747    +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
269748    +   end;
MPRINT(EM_DIAGRAM):   end;
269749    +   else do;
MPRINT(EM_DIAGRAM):   else do;
269750    +      GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
269751    +      GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
269752    +      GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
269753    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
269754    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
269755    +   end;
MPRINT(EM_DIAGRAM):   end;
269756    +end;
MPRINT(EM_DIAGRAM):   end;
269757    +
269758    +*** Generate dummy variables for GRP_RFMstat ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RFMstat ;
269759    +drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
269760    +if missing( GRP_RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RFMstat ) then do;
269761    +   GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
269762    +   GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
269763    +   GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
269764    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
269765    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
269766    +end;
MPRINT(EM_DIAGRAM):   end;
269767    +else do;
MPRINT(EM_DIAGRAM):   else do;
269768    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
269769    +   _dm12 = put( GRP_RFMstat , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RFMstat , BEST12. );
269770    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
269771    +   if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
269772    +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
269773    +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
269774    +      GRP_RFMstat4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 1;
269775    +   end;
MPRINT(EM_DIAGRAM):   end;
269776    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
269777    +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
269778    +      GRP_RFMstat3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 1;
269779    +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
269780    +   end;
MPRINT(EM_DIAGRAM):   end;
269781    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
269782    +      GRP_RFMstat2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = -1;
269783    +      GRP_RFMstat3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = -1;
269784    +      GRP_RFMstat4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = -1;
269785    +   end;
MPRINT(EM_DIAGRAM):   end;
269786    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
269787    +      GRP_RFMstat2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 1;
269788    +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
269789    +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
269790    +   end;
MPRINT(EM_DIAGRAM):   end;
269791    +   else do;
MPRINT(EM_DIAGRAM):   else do;
269792    +      GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
269793    +      GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
269794    +      GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
269795    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
269796    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
269797    +   end;
MPRINT(EM_DIAGRAM):   end;
269798    +end;
MPRINT(EM_DIAGRAM):   end;
269799    +
269800    +*** Generate dummy variables for GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RMntFrq ;
269801    +drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
269802    +if missing( GRP_RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RMntFrq ) then do;
269803    +   GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
269804    +   GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
269805    +   GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
269806    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
269807    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
269808    +end;
MPRINT(EM_DIAGRAM):   end;
269809    +else do;
MPRINT(EM_DIAGRAM):   else do;
269810    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
269811    +   _dm12 = put( GRP_RMntFrq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RMntFrq , BEST12. );
269812    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
269813    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
269814    +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
269815    +      GRP_RMntFrq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 1;
269816    +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
269817    +   end;
MPRINT(EM_DIAGRAM):   end;
269818    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
269819    +      GRP_RMntFrq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = -1;
269820    +      GRP_RMntFrq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = -1;
269821    +      GRP_RMntFrq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = -1;
269822    +   end;
MPRINT(EM_DIAGRAM):   end;
269823    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
269824    +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
269825    +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
269826    +      GRP_RMntFrq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 1;
269827    +   end;
MPRINT(EM_DIAGRAM):   end;
269828    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
269829    +      GRP_RMntFrq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 1;
269830    +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
269831    +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
269832    +   end;
MPRINT(EM_DIAGRAM):   end;
269833    +   else do;
MPRINT(EM_DIAGRAM):   else do;
269834    +      GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
269835    +      GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
269836    +      GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
269837    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
269838    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
269839    +   end;
MPRINT(EM_DIAGRAM):   end;
269840    +end;
MPRINT(EM_DIAGRAM):   end;
269841    +
269842    +*** Generate dummy variables for GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Recency ;
269843    +drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
269844    +if missing( GRP_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Recency ) then do;
269845    +   GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
269846    +   GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
269847    +   GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
269848    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
269849    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
269850    +end;
MPRINT(EM_DIAGRAM):   end;
269851    +else do;
MPRINT(EM_DIAGRAM):   else do;
269852    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
269853    +   _dm12 = put( GRP_Recency , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Recency , BEST12. );
269854    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
269855    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
269856    +      GRP_Recency2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = -1;
269857    +      GRP_Recency3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = -1;
269858    +      GRP_Recency4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = -1;
269859    +   end;
MPRINT(EM_DIAGRAM):   end;
269860    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
269861    +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
269862    +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
269863    +      GRP_Recency4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 1;
269864    +   end;
MPRINT(EM_DIAGRAM):   end;
269865    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
269866    +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
269867    +      GRP_Recency3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 1;
269868    +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
269869    +   end;
MPRINT(EM_DIAGRAM):   end;
269870    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
269871    +      GRP_Recency2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 1;
269872    +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
269873    +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
269874    +   end;
MPRINT(EM_DIAGRAM):   end;
269875    +   else do;
MPRINT(EM_DIAGRAM):   else do;
269876    +      GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
269877    +      GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
269878    +      GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
269879    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
269880    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
269881    +   end;
MPRINT(EM_DIAGRAM):   end;
269882    +end;
MPRINT(EM_DIAGRAM):   end;
269883    +
269884    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
269885    +*** Checking missing input Interval
269886    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
269887    +
269888    +IF NMISS(
269889    +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Year_Birth ) THEN DO;
269890    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
269891    +
269892    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
269893    +END;
MPRINT(EM_DIAGRAM):   END;
269894    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
269895    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
269896    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
269897    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
269898    +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
269899    +END;
MPRINT(EM_DIAGRAM):   END;
269900    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
269901    +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
269902    +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
269903    +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
269904    +END;
MPRINT(EM_DIAGRAM):   END;
269905    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
269906    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
269907    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
269908    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
269909    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
269910    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
269911    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
269912    +   H1x1_1  =     1.28407338963657 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.28407338963657 * S_Year_Birth ;
269913    +   H1x1_2  =     2.38810822597472 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 2.38810822597472 * S_Year_Birth ;
269914    +   H1x1_3  =     -0.7204801808304 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.7204801808304 * S_Year_Birth ;
269915    +   H1x1_4  =    -0.06539124294592 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.06539124294592 * S_Year_Birth ;
269916    +   H1x1_5  =     0.03236440118268 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0.03236440118268 * S_Year_Birth ;
269917    +   H1x1_1  = H1x1_1  +     2.33808165856563 * GRP_AcceptedCmp52
269918    +          +    -0.22986949765805 * GRP_Frq2  +     0.35082837363653 * GRP_Frq3
269919    +          +    -0.81539338849938 * GRP_Frq4  +     0.02220909701196 *
269920    +        GRP_Income2  +    -0.13099501713971 * GRP_Income3
269921    +          +     -0.0804536656406 * GRP_Income4  +    -1.59663744670427 *
269922    +        GRP_Mnt2  +    -0.75210072607852 * GRP_Mnt3  +     2.54348518711375 *
269923    +        GRP_Mnt4  +    -1.10495982071076 * GRP_MntFishProducts2
269924    +          +     0.01777635572399 * GRP_MntFishProducts3
269925    +          +     0.64964482065317 * GRP_MntFishProducts4
269926    +          +    -1.04611988857835 * GRP_MntGoldProds2
269927    +          +    -0.78605743432786 * GRP_MntGoldProds3
269928    +          +    -0.66472335544579 * GRP_MntGoldProds4
269929    +          +     1.30740864871492 * GRP_MntMeatProducts2
269930    +          +     2.64958489779167 * GRP_MntMeatProducts3
269931    +          +    -0.07163049651484 * GRP_MntMeatProducts4
269932    +          +     0.25422937257394 * GRP_MntWines2  +     4.96131673300801 *
269933    +        GRP_MntWines3  +     1.19639467926964 * GRP_MntWines4
269934    +          +     1.95336043181706 * GRP_NumCatalogPurchases3
269935    +          +    -1.04651597352668 * GRP_NumCatalogPurchases4
269936    +          +     2.10673800243141 * GRP_NumDistPurchases2
269937    +          +     1.49840431617564 * GRP_NumDistPurchases3
269938    +          +     2.97897302921808 * GRP_NumDistPurchases4
269939    +          +    -0.06881799061639 * GRP_NumWebPurchases2
269940    +          +     2.06509459645382 * GRP_NumWebPurchases3
269941    +          +     2.82361840359249 * GRP_NumWebPurchases4
269942    +          +    -0.22785891000012 * GRP_RFMstat2  +     0.11731067369321 *
269943    +        GRP_RFMstat3  +      2.1473773933678 * GRP_RFMstat4
269944    +          +    -0.84256952222829 * GRP_RMntFrq2  +     0.14220513090593 *
269945    +        GRP_RMntFrq3  +    -0.12372171572674 * GRP_RMntFrq4
269946    +          +    -0.31743815181215 * GRP_Recency2  +    -1.98918978493071 *
269947    +        GRP_Recency3  +    -0.65545972977238 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 2.33808165856563 * GRP_AcceptedCmp52 + 
-0.22986949765805 * GRP_Frq2 + 0.35082837363653 * GRP_Frq3 + -0.81539338849938 * GRP_Frq4 + 
0.02220909701196 * GRP_Income2 + -0.13099501713971 * GRP_Income3 + -0.0804536656406 * 
GRP_Income4 + -1.59663744670427 * GRP_Mnt2 + -0.75210072607852 * GRP_Mnt3 + 2.54348518711375 * 
GRP_Mnt4 + -1.10495982071076 * GRP_MntFishProducts2 + 0.01777635572399 * GRP_MntFishProducts3 
+ 0.64964482065317 * GRP_MntFishProducts4 + -1.04611988857835 * GRP_MntGoldProds2 + 
-0.78605743432786 * GRP_MntGoldProds3 + -0.66472335544579 * GRP_MntGoldProds4 + 
1.30740864871492 * GRP_MntMeatProducts2 + 2.64958489779167 * GRP_MntMeatProducts3 + 
-0.07163049651484 * GRP_MntMeatProducts4 + 0.25422937257394 * GRP_MntWines2 + 4.96131673300801 
* GRP_MntWines3 + 1.19639467926964 * GRP_MntWines4 + 1.95336043181706 * 
GRP_NumCatalogPurchases3 + -1.04651597352668 * GRP_NumCatalogPurchases4 + 2.10673800243141 * 
GRP_NumDistPurchases2 + 1.49840431617564 * GRP_NumDistPurchases3 + 2.97897302921808 * 
GRP_NumDistPurchases4 + -0.06881799061639 * GRP_NumWebPurchases2 + 2.06509459645382 * 
GRP_NumWebPurchases3 + 2.82361840359249 * GRP_NumWebPurchases4 + -0.22785891000012 * 
GRP_RFMstat2 + 0.11731067369321 * GRP_RFMstat3 + 2.1473773933678 * GRP_RFMstat4 + 
-0.84256952222829 * GRP_RMntFrq2 + 0.14220513090593 * GRP_RMntFrq3 + -0.12372171572674 * 
GRP_RMntFrq4 + -0.31743815181215 * GRP_Recency2 + -1.98918978493071 * GRP_Recency3 + 
-0.65545972977238 * GRP_Recency4 ;
269948    +   H1x1_2  = H1x1_2  +     0.33200444555787 * GRP_AcceptedCmp52
269949    +          +     -0.8934566312976 * GRP_Frq2  +    -0.00243983936395 * GRP_Frq3
269950    +          +     0.63648993363629 * GRP_Frq4  +     0.05197343322571 *
269951    +        GRP_Income2  +     0.68177129296873 * GRP_Income3
269952    +          +     1.16889856198675 * GRP_Income4  +     0.52345733778819 *
269953    +        GRP_Mnt2  +     0.86891568330214 * GRP_Mnt3  +    -1.01013818778187 *
269954    +        GRP_Mnt4  +     0.01260306109505 * GRP_MntFishProducts2
269955    +          +     0.36267476732712 * GRP_MntFishProducts3
269956    +          +     -0.0117944700646 * GRP_MntFishProducts4
269957    +          +    -2.60247007794362 * GRP_MntGoldProds2
269958    +          +     1.49175629619075 * GRP_MntGoldProds3
269959    +          +     1.15735621033648 * GRP_MntGoldProds4
269960    +          +     -0.8857925625722 * GRP_MntMeatProducts2
269961    +          +    -1.11977905267757 * GRP_MntMeatProducts3
269962    +          +     0.89317411392862 * GRP_MntMeatProducts4
269963    +          +     1.08362434913444 * GRP_MntWines2  +    -2.34573154102981 *
269964    +        GRP_MntWines3  +    -1.04821908065864 * GRP_MntWines4
269965    +          +    -1.24280966967211 * GRP_NumCatalogPurchases3
269966    +          +      3.0326089053041 * GRP_NumCatalogPurchases4
269967    +          +     0.04779959574354 * GRP_NumDistPurchases2
269968    +          +     1.71017115843439 * GRP_NumDistPurchases3
269969    +          +     0.53628643929359 * GRP_NumDistPurchases4
269970    +          +     0.89950827667194 * GRP_NumWebPurchases2
269971    +          +    -0.92684592689592 * GRP_NumWebPurchases3
269972    +          +     2.96876986636503 * GRP_NumWebPurchases4
269973    +          +     0.63124526160033 * GRP_RFMstat2  +     1.50566150377083 *
269974    +        GRP_RFMstat3  +     1.62201671855053 * GRP_RFMstat4
269975    +          +     1.20404881746786 * GRP_RMntFrq2  +    -0.61586201148662 *
269976    +        GRP_RMntFrq3  +    -1.45102172370413 * GRP_RMntFrq4
269977    +          +     0.89969425569035 * GRP_Recency2  +     0.72245574147873 *
269978    +        GRP_Recency3  +     2.83083807801553 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.33200444555787 * GRP_AcceptedCmp52 + 
-0.8934566312976 * GRP_Frq2 + -0.00243983936395 * GRP_Frq3 + 0.63648993363629 * GRP_Frq4 + 
0.05197343322571 * GRP_Income2 + 0.68177129296873 * GRP_Income3 + 1.16889856198675 * 
GRP_Income4 + 0.52345733778819 * GRP_Mnt2 + 0.86891568330214 * GRP_Mnt3 + -1.01013818778187 * 
GRP_Mnt4 + 0.01260306109505 * GRP_MntFishProducts2 + 0.36267476732712 * GRP_MntFishProducts3 + 
-0.0117944700646 * GRP_MntFishProducts4 + -2.60247007794362 * GRP_MntGoldProds2 + 
1.49175629619075 * GRP_MntGoldProds3 + 1.15735621033648 * GRP_MntGoldProds4 + -0.8857925625722 
* GRP_MntMeatProducts2 + -1.11977905267757 * GRP_MntMeatProducts3 + 0.89317411392862 * 
GRP_MntMeatProducts4 + 1.08362434913444 * GRP_MntWines2 + -2.34573154102981 * GRP_MntWines3 + 
-1.04821908065864 * GRP_MntWines4 + -1.24280966967211 * GRP_NumCatalogPurchases3 + 
3.0326089053041 * GRP_NumCatalogPurchases4 + 0.04779959574354 * GRP_NumDistPurchases2 + 
1.71017115843439 * GRP_NumDistPurchases3 + 0.53628643929359 * GRP_NumDistPurchases4 + 
0.89950827667194 * GRP_NumWebPurchases2 + -0.92684592689592 * GRP_NumWebPurchases3 + 
2.96876986636503 * GRP_NumWebPurchases4 + 0.63124526160033 * GRP_RFMstat2 + 1.50566150377083 * 
GRP_RFMstat3 + 1.62201671855053 * GRP_RFMstat4 + 1.20404881746786 * GRP_RMntFrq2 + 
-0.61586201148662 * GRP_RMntFrq3 + -1.45102172370413 * GRP_RMntFrq4 + 0.89969425569035 * 
GRP_Recency2 + 0.72245574147873 * GRP_Recency3 + 2.83083807801553 * GRP_Recency4 ;
269979    +   H1x1_3  = H1x1_3  +    -0.49052681984122 * GRP_AcceptedCmp52
269980    +          +     0.05710791956099 * GRP_Frq2  +     1.88983418164026 * GRP_Frq3
269981    +          +     0.23283788572694 * GRP_Frq4  +    -0.80169095220425 *
269982    +        GRP_Income2  +    -1.74093887199998 * GRP_Income3
269983    +          +    -0.35184466623661 * GRP_Income4  +     0.02791690171447 *
269984    +        GRP_Mnt2  +    -2.20424160961867 * GRP_Mnt3  +     0.50765331628654 *
269985    +        GRP_Mnt4  +     0.29403246554661 * GRP_MntFishProducts2
269986    +          +    -0.83380418052364 * GRP_MntFishProducts3
269987    +          +    -1.82543627661138 * GRP_MntFishProducts4
269988    +          +     0.39365380396703 * GRP_MntGoldProds2
269989    +          +     0.03998618589682 * GRP_MntGoldProds3
269990    +          +    -1.56455277750616 * GRP_MntGoldProds4
269991    +          +     0.07220994129439 * GRP_MntMeatProducts2
269992    +          +     1.10999034367361 * GRP_MntMeatProducts3
269993    +          +     0.63528886514116 * GRP_MntMeatProducts4
269994    +          +    -1.82455352991516 * GRP_MntWines2  +    -0.37467219689144 *
269995    +        GRP_MntWines3  +     0.51071844252207 * GRP_MntWines4
269996    +          +    -0.21422031720258 * GRP_NumCatalogPurchases3
269997    +          +    -3.11364867963994 * GRP_NumCatalogPurchases4
269998    +          +    -0.08758432252505 * GRP_NumDistPurchases2
269999    +          +    -0.24735131829279 * GRP_NumDistPurchases3
270000    +          +     1.22135970166178 * GRP_NumDistPurchases4
270001    +          +     0.57769775812299 * GRP_NumWebPurchases2
270002    +          +     4.20512829375782 * GRP_NumWebPurchases3
270003    +          +    -0.77892811708123 * GRP_NumWebPurchases4
270004    +          +    -1.48591575907258 * GRP_RFMstat2  +    -0.02715745890283 *
270005    +        GRP_RFMstat3  +    -1.82753253216976 * GRP_RFMstat4
270006    +          +     0.63517164755033 * GRP_RMntFrq2  +     3.41625861410136 *
270007    +        GRP_RMntFrq3  +    -1.06016238729643 * GRP_RMntFrq4
270008    +          +     0.96560069161334 * GRP_Recency2  +     2.60413272119793 *
270009    +        GRP_Recency3  +    -1.02278922860839 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.49052681984122 * GRP_AcceptedCmp52 + 
0.05710791956099 * GRP_Frq2 + 1.88983418164026 * GRP_Frq3 + 0.23283788572694 * GRP_Frq4 + 
-0.80169095220425 * GRP_Income2 + -1.74093887199998 * GRP_Income3 + -0.35184466623661 * 
GRP_Income4 + 0.02791690171447 * GRP_Mnt2 + -2.20424160961867 * GRP_Mnt3 + 0.50765331628654 * 
GRP_Mnt4 + 0.29403246554661 * GRP_MntFishProducts2 + -0.83380418052364 * GRP_MntFishProducts3 
+ -1.82543627661138 * GRP_MntFishProducts4 + 0.39365380396703 * GRP_MntGoldProds2 + 
0.03998618589682 * GRP_MntGoldProds3 + -1.56455277750616 * GRP_MntGoldProds4 + 
0.07220994129439 * GRP_MntMeatProducts2 + 1.10999034367361 * GRP_MntMeatProducts3 + 
0.63528886514116 * GRP_MntMeatProducts4 + -1.82455352991516 * GRP_MntWines2 + 
-0.37467219689144 * GRP_MntWines3 + 0.51071844252207 * GRP_MntWines4 + -0.21422031720258 * 
GRP_NumCatalogPurchases3 + -3.11364867963994 * GRP_NumCatalogPurchases4 + -0.08758432252505 * 
GRP_NumDistPurchases2 + -0.24735131829279 * GRP_NumDistPurchases3 + 1.22135970166178 * 
GRP_NumDistPurchases4 + 0.57769775812299 * GRP_NumWebPurchases2 + 4.20512829375782 * 
GRP_NumWebPurchases3 + -0.77892811708123 * GRP_NumWebPurchases4 + -1.48591575907258 * 
GRP_RFMstat2 + -0.02715745890283 * GRP_RFMstat3 + -1.82753253216976 * GRP_RFMstat4 + 
0.63517164755033 * GRP_RMntFrq2 + 3.41625861410136 * GRP_RMntFrq3 + -1.06016238729643 * 
GRP_RMntFrq4 + 0.96560069161334 * GRP_Recency2 + 2.60413272119793 * GRP_Recency3 + 
-1.02278922860839 * GRP_Recency4 ;
270010    +   H1x1_4  = H1x1_4  +    -3.02372554661072 * GRP_AcceptedCmp52
270011    +          +     1.03599850000215 * GRP_Frq2  +     2.24242470356718 * GRP_Frq3
270012    +          +      3.4718187916521 * GRP_Frq4  +     1.28707236613409 *
270013    +        GRP_Income2  +    -1.54838965127225 * GRP_Income3
270014    +          +     2.52665199719571 * GRP_Income4  +    -2.14598289769275 *
270015    +        GRP_Mnt2  +    -1.04082723723167 * GRP_Mnt3  +    -1.68747662808983 *
270016    +        GRP_Mnt4  +     -0.8736100922486 * GRP_MntFishProducts2
270017    +          +     0.12779836724514 * GRP_MntFishProducts3
270018    +          +     0.60216313416651 * GRP_MntFishProducts4
270019    +          +     0.68165487174749 * GRP_MntGoldProds2
270020    +          +    -0.89672475622939 * GRP_MntGoldProds3
270021    +          +    -1.77795912962804 * GRP_MntGoldProds4
270022    +          +    -0.74193637631708 * GRP_MntMeatProducts2
270023    +          +    -3.00981763564253 * GRP_MntMeatProducts3
270024    +          +    -0.98818439514034 * GRP_MntMeatProducts4
270025    +          +    -0.81552449599254 * GRP_MntWines2  +    -1.24481835102021 *
270026    +        GRP_MntWines3  +     0.58877118654504 * GRP_MntWines4
270027    +          +    -0.10424789545355 * GRP_NumCatalogPurchases3
270028    +          +    -1.76322947168567 * GRP_NumCatalogPurchases4
270029    +          +     0.28024987640988 * GRP_NumDistPurchases2
270030    +          +    -0.26195842187994 * GRP_NumDistPurchases3
270031    +          +     1.27465783090106 * GRP_NumDistPurchases4
270032    +          +     0.56044035795721 * GRP_NumWebPurchases2
270033    +          +     -1.0019608410124 * GRP_NumWebPurchases3
270034    +          +    -1.00438490557229 * GRP_NumWebPurchases4
270035    +          +      0.1961165620509 * GRP_RFMstat2  +    -0.64166582924081 *
270036    +        GRP_RFMstat3  +     1.80597898183848 * GRP_RFMstat4
270037    +          +       0.012135091764 * GRP_RMntFrq2  +     -1.6713653901367 *
270038    +        GRP_RMntFrq3  +    -0.99155260811599 * GRP_RMntFrq4
270039    +          +    -1.41207701933445 * GRP_Recency2  +    -1.44162495285758 *
270040    +        GRP_Recency3  +    -1.33328278459656 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -3.02372554661072 * GRP_AcceptedCmp52 + 
1.03599850000215 * GRP_Frq2 + 2.24242470356718 * GRP_Frq3 + 3.4718187916521 * GRP_Frq4 + 
1.28707236613409 * GRP_Income2 + -1.54838965127225 * GRP_Income3 + 2.52665199719571 * 
GRP_Income4 + -2.14598289769275 * GRP_Mnt2 + -1.04082723723167 * GRP_Mnt3 + -1.68747662808983 
* GRP_Mnt4 + -0.8736100922486 * GRP_MntFishProducts2 + 0.12779836724514 * GRP_MntFishProducts3 
+ 0.60216313416651 * GRP_MntFishProducts4 + 0.68165487174749 * GRP_MntGoldProds2 + 
-0.89672475622939 * GRP_MntGoldProds3 + -1.77795912962804 * GRP_MntGoldProds4 + 
-0.74193637631708 * GRP_MntMeatProducts2 + -3.00981763564253 * GRP_MntMeatProducts3 + 
-0.98818439514034 * GRP_MntMeatProducts4 + -0.81552449599254 * GRP_MntWines2 + 
-1.24481835102021 * GRP_MntWines3 + 0.58877118654504 * GRP_MntWines4 + -0.10424789545355 * 
GRP_NumCatalogPurchases3 + -1.76322947168567 * GRP_NumCatalogPurchases4 + 0.28024987640988 * 
GRP_NumDistPurchases2 + -0.26195842187994 * GRP_NumDistPurchases3 + 1.27465783090106 * 
GRP_NumDistPurchases4 + 0.56044035795721 * GRP_NumWebPurchases2 + -1.0019608410124 * 
GRP_NumWebPurchases3 + -1.00438490557229 * GRP_NumWebPurchases4 + 0.1961165620509 * 
GRP_RFMstat2 + -0.64166582924081 * GRP_RFMstat3 + 1.80597898183848 * GRP_RFMstat4 + 
0.012135091764 * GRP_RMntFrq2 + -1.6713653901367 * GRP_RMntFrq3 + -0.99155260811599 * 
GRP_RMntFrq4 + -1.41207701933445 * GRP_Recency2 + -1.44162495285758 * GRP_Recency3 + 
-1.33328278459656 * GRP_Recency4 ;
270041    +   H1x1_5  = H1x1_5  +    -2.91353005427803 * GRP_AcceptedCmp52
270042    +          +    -0.01308096407334 * GRP_Frq2  +    -0.45559322170718 * GRP_Frq3
270043    +          +    -0.49751279425547 * GRP_Frq4  +     0.02860594561374 *
270044    +        GRP_Income2  +     1.41758925806391 * GRP_Income3
270045    +          +     0.03726548596251 * GRP_Income4  +    -1.57900147909252 *
270046    +        GRP_Mnt2  +      2.3511697752438 * GRP_Mnt3  +     0.88048248424859 *
270047    +        GRP_Mnt4  +    -0.56545409501904 * GRP_MntFishProducts2
270048    +          +    -3.10608760567335 * GRP_MntFishProducts3
270049    +          +     1.06400320622897 * GRP_MntFishProducts4
270050    +          +     2.68670541844486 * GRP_MntGoldProds2
270051    +          +     0.07232195736653 * GRP_MntGoldProds3
270052    +          +     1.85531703888295 * GRP_MntGoldProds4
270053    +          +    -1.87162230531925 * GRP_MntMeatProducts2
270054    +          +    -1.13875662802599 * GRP_MntMeatProducts3
270055    +          +    -0.24099135606782 * GRP_MntMeatProducts4
270056    +          +    -0.13235213570702 * GRP_MntWines2  +    -0.50193070898101 *
270057    +        GRP_MntWines3  +     -0.1999771853027 * GRP_MntWines4
270058    +          +    -1.59837823433046 * GRP_NumCatalogPurchases3
270059    +          +    -3.92043146311091 * GRP_NumCatalogPurchases4
270060    +          +    -0.99805577329855 * GRP_NumDistPurchases2
270061    +          +     -2.4067364238872 * GRP_NumDistPurchases3
270062    +          +     0.25924131471222 * GRP_NumDistPurchases4
270063    +          +     0.70743157783391 * GRP_NumWebPurchases2
270064    +          +    -2.55740259562506 * GRP_NumWebPurchases3
270065    +          +     1.49837454147543 * GRP_NumWebPurchases4
270066    +          +     0.02282459900932 * GRP_RFMstat2  +     2.49823188893146 *
270067    +        GRP_RFMstat3  +      0.0125770688182 * GRP_RFMstat4
270068    +          +    -0.52646059416986 * GRP_RMntFrq2  +     0.48734306173312 *
270069    +        GRP_RMntFrq3  +     1.20982084491791 * GRP_RMntFrq4
270070    +          +     1.46024730556461 * GRP_Recency2  +     1.39328521843098 *
270071    +        GRP_Recency3  +     0.07072877455933 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -2.91353005427803 * GRP_AcceptedCmp52 + 
-0.01308096407334 * GRP_Frq2 + -0.45559322170718 * GRP_Frq3 + -0.49751279425547 * GRP_Frq4 + 
0.02860594561374 * GRP_Income2 + 1.41758925806391 * GRP_Income3 + 0.03726548596251 * 
GRP_Income4 + -1.57900147909252 * GRP_Mnt2 + 2.3511697752438 * GRP_Mnt3 + 0.88048248424859 * 
GRP_Mnt4 + -0.56545409501904 * GRP_MntFishProducts2 + -3.10608760567335 * GRP_MntFishProducts3 
+ 1.06400320622897 * GRP_MntFishProducts4 + 2.68670541844486 * GRP_MntGoldProds2 + 
0.07232195736653 * GRP_MntGoldProds3 + 1.85531703888295 * GRP_MntGoldProds4 + 
-1.87162230531925 * GRP_MntMeatProducts2 + -1.13875662802599 * GRP_MntMeatProducts3 + 
-0.24099135606782 * GRP_MntMeatProducts4 + -0.13235213570702 * GRP_MntWines2 + 
-0.50193070898101 * GRP_MntWines3 + -0.1999771853027 * GRP_MntWines4 + -1.59837823433046 * 
GRP_NumCatalogPurchases3 + -3.92043146311091 * GRP_NumCatalogPurchases4 + -0.99805577329855 * 
GRP_NumDistPurchases2 + -2.4067364238872 * GRP_NumDistPurchases3 + 0.25924131471222 * 
GRP_NumDistPurchases4 + 0.70743157783391 * GRP_NumWebPurchases2 + -2.55740259562506 * 
GRP_NumWebPurchases3 + 1.49837454147543 * GRP_NumWebPurchases4 + 0.02282459900932 * 
GRP_RFMstat2 + 2.49823188893146 * GRP_RFMstat3 + 0.0125770688182 * GRP_RFMstat4 + 
-0.52646059416986 * GRP_RMntFrq2 + 0.48734306173312 * GRP_RMntFrq3 + 1.20982084491791 * 
GRP_RMntFrq4 + 1.46024730556461 * GRP_Recency2 + 1.39328521843098 * GRP_Recency3 + 
0.07072877455933 * GRP_Recency4 ;
270072    +   H1x1_1  =     2.28517939702199 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 2.28517939702199 + H1x1_1 ;
270073    +   H1x1_2  =      0.8100923065727 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.8100923065727 + H1x1_2 ;
270074    +   H1x1_3  =    -1.33120225377486 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -1.33120225377486 + H1x1_3 ;
270075    +   H1x1_4  =    -0.45230391783078 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.45230391783078 + H1x1_4 ;
270076    +   H1x1_5  =    -0.40460344381081 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.40460344381081 + H1x1_5 ;
270077    +   H1x1_6  = 0;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0;
270078    +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
270079    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
270080    +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
270081    +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
270082    +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
270083    +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
270084    +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
270085    +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
270086    +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
270087    +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
270088    +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
270089    +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
270090    +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
270091    +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
270092    +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
270093    +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
270094    +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
270095    +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
270096    +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
270097    +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
270098    +END;
MPRINT(EM_DIAGRAM):   END;
270099    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
270100    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
270101    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
270102    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
270103    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
270104    +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
270105    +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
270106    +END;
MPRINT(EM_DIAGRAM):   END;
270107    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
270108    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
270109    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
270110    +
270111    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
270112    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
270113    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
270114    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
270115    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
270116    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
270117    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
270118    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
270119    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
270120    +end;
MPRINT(EM_DIAGRAM):   end;
270121    +else do;
MPRINT(EM_DIAGRAM):   else do;
270122    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
270123    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
270124    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
270125    +   end;
MPRINT(EM_DIAGRAM):   end;
270126    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
270127    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
270128    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
270129    +   end;
MPRINT(EM_DIAGRAM):   end;
270130    +   else do;
MPRINT(EM_DIAGRAM):   else do;
270131    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
270132    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
270133    +   end;
MPRINT(EM_DIAGRAM):   end;
270134    +end;
MPRINT(EM_DIAGRAM):   end;
270135    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
270136    +   P_DepVar1  =    -2.81431269255211 * H1x1_1  +       3.440967475001 * H1x1_2
270137    +          +     0.80588527631153 * H1x1_3  +    -2.86385782353564 * H1x1_4
270138    +          +     4.10205776026281 * H1x1_5  +    -2.89048426961502 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.81431269255211 * H1x1_1 + 3.440967475001 * H1x1_2 + 
0.80588527631153 * H1x1_3 + -2.86385782353564 * H1x1_4 + 4.10205776026281 * H1x1_5 + 
-2.89048426961502 * H1x1_6 ;
270139    +   P_DepVar1  =    -1.38440437244113 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.38440437244113 + P_DepVar1 ;
270140    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
270141    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
270142    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
270143    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
270144    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
270145    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
270146    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
270147    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
270148    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
270149    +END;
MPRINT(EM_DIAGRAM):   END;
270150    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
270151    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
270152    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
270153    +END;
MPRINT(EM_DIAGRAM):   END;
270154    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
270155    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
270156    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
270157    +END;
MPRINT(EM_DIAGRAM):   END;
270158    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
270159    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
270160    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
270161    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
270162    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
270163    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
270164    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
270165    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
270166    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
270167    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
270168    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
270169    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
270170    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
270171    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
270172    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
270173    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
270174    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
270175    +END;
MPRINT(EM_DIAGRAM):   END;
270176    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
270177    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
270178    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
270179    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
270180    +* Renaming variables for AutoNeural21;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural21;
270181    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
270182    +* Renaming Posterior variables for AutoNeural21;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural21;
270183    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
270184    +drop AutoNeural21_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural21_P_DepVar1;
270185    +AutoNeural21_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural21_P_DepVar1 = P_DepVar1;
270186    +drop AutoNeural21_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural21_P_DepVar0;
270187    +AutoNeural21_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural21_P_DepVar0 = P_DepVar0;
270188    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
270189    +* Renaming Into variables for AutoNeural21;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for AutoNeural21;
270190    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
270191    +length AutoNeural21_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length AutoNeural21_I_DepVar $32;
270192    +drop AutoNeural21_I_DepVar;
MPRINT(EM_DIAGRAM):   drop AutoNeural21_I_DepVar;
270193    +AutoNeural21_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   AutoNeural21_I_DepVar = I_DepVar;
270194    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
270195    +* Renaming _WARN_ variable for AutoNeural21;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural21;
270196    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
270197    +length AutoNeural21_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural21_WARN_ $4;
270198    +drop AutoNeural21_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural21_WARN_;
270199    +AutoNeural21_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural21_WARN_ = _WARN_;
270200    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
270201    +* Ensmbl50: Scoring Code of model 4 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl50: Scoring Code of model 4 of 7;
270202    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
270203    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
270204    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
270205    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
270206    +* NODE: AutoNeural20;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural20;
270207    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
270208    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
270209    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
270210    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
270211    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
270212    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
270213    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
270214    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
270215    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
270216    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
270217    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
270218    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
270219    +LENGTH _WARN_ $4
270220    +      F_DepVar  $ 12
270221    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
270222    +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
270223    +
270224    +      label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
MPRINT(EM_DIAGRAM):   label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
270225    +
270226    +      label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
270227    +
270228    +      label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
270229    +
270230    +      label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
270231    +
270232    +      label GRP_Income2 = 'Dummy: GRP_Income=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Income2 = 'Dummy: GRP_Income=2' ;
270233    +
270234    +      label GRP_Income3 = 'Dummy: GRP_Income=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Income3 = 'Dummy: GRP_Income=3' ;
270235    +
270236    +      label GRP_Income4 = 'Dummy: GRP_Income=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Income4 = 'Dummy: GRP_Income=4' ;
270237    +
270238    +      label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
270239    +
270240    +      label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
270241    +
270242    +      label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
270243    +
270244    +      label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
270245    +
270246    +      label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
270247    +
270248    +      label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
270249    +
270250    +      label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
270251    +
270252    +      label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
270253    +
270254    +      label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
270255    +
270256    +      label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
270257    +
270258    +      label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
270259    +
270260    +      label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
270261    +
270262    +      label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
270263    +
270264    +      label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
270265    +
270266    +      label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
270267    +
270268    +      label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
270269    +
270270    +      label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
270271    +
270272    +      label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
270273    +
270274    +      label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
270275    +
270276    +      label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
270277    +
270278    +      label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
270279    +
270280    +      label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
270281    +
270282    +      label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
270283    +
270284    +      label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
270285    +
270286    +      label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
270287    +
270288    +      label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
270289    +
270290    +      label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
270291    +
270292    +      label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
270293    +
270294    +      label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
270295    +
270296    +      label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
270297    +
270298    +      label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
270299    +
270300    +      label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
270301    +
270302    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
270303    +
270304    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
270305    +
270306    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
270307    +
270308    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
270309    +
270310    +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
270311    +
270312    +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
270313    +
270314    +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
270315    +
270316    +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
270317    +
270318    +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
270319    +
270320    +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
270321    +
270322    +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
270323    +
270324    +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
270325    +
270326    +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
270327    +
270328    +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
270329    +
270330    +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
270331    +
270332    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
270333    +
270334    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
270335    +
270336    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
270337    +
270338    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
270339    +
270340    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
270341    +
270342    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
270343    +
270344    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
270345    +
270346    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
270347    +
270348    +*** Generate dummy variables for GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmp5 ;
270349    +drop GRP_AcceptedCmp52 ;
MPRINT(EM_DIAGRAM):   drop GRP_AcceptedCmp52 ;
270350    +if missing( GRP_AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmp5 ) then do;
270351    +   GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
270352    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
270353    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
270354    +end;
MPRINT(EM_DIAGRAM):   end;
270355    +else do;
MPRINT(EM_DIAGRAM):   else do;
270356    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
270357    +   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
270358    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
270359    +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
270360    +      GRP_AcceptedCmp52 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = 1;
270361    +   end;
MPRINT(EM_DIAGRAM):   end;
270362    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
270363    +      GRP_AcceptedCmp52 = -1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = -1;
270364    +   end;
MPRINT(EM_DIAGRAM):   end;
270365    +   else do;
MPRINT(EM_DIAGRAM):   else do;
270366    +      GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
270367    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
270368    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
270369    +   end;
MPRINT(EM_DIAGRAM):   end;
270370    +end;
MPRINT(EM_DIAGRAM):   end;
270371    +
270372    +*** Generate dummy variables for GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Frq ;
270373    +drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
270374    +if missing( GRP_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Frq ) then do;
270375    +   GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
270376    +   GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
270377    +   GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
270378    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
270379    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
270380    +end;
MPRINT(EM_DIAGRAM):   end;
270381    +else do;
MPRINT(EM_DIAGRAM):   else do;
270382    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
270383    +   _dm12 = put( GRP_Frq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Frq , BEST12. );
270384    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
270385    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
270386    +      GRP_Frq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = -1;
270387    +      GRP_Frq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = -1;
270388    +      GRP_Frq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = -1;
270389    +   end;
MPRINT(EM_DIAGRAM):   end;
270390    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
270391    +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
270392    +      GRP_Frq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 1;
270393    +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
270394    +   end;
MPRINT(EM_DIAGRAM):   end;
270395    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
270396    +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
270397    +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
270398    +      GRP_Frq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 1;
270399    +   end;
MPRINT(EM_DIAGRAM):   end;
270400    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
270401    +      GRP_Frq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 1;
270402    +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
270403    +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
270404    +   end;
MPRINT(EM_DIAGRAM):   end;
270405    +   else do;
MPRINT(EM_DIAGRAM):   else do;
270406    +      GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
270407    +      GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
270408    +      GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
270409    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
270410    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
270411    +   end;
MPRINT(EM_DIAGRAM):   end;
270412    +end;
MPRINT(EM_DIAGRAM):   end;
270413    +
270414    +*** Generate dummy variables for GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Income ;
270415    +drop GRP_Income2 GRP_Income3 GRP_Income4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Income2 GRP_Income3 GRP_Income4 ;
270416    +if missing( GRP_Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Income ) then do;
270417    +   GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
270418    +   GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
270419    +   GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
270420    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
270421    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
270422    +end;
MPRINT(EM_DIAGRAM):   end;
270423    +else do;
MPRINT(EM_DIAGRAM):   else do;
270424    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
270425    +   _dm12 = put( GRP_Income , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Income , BEST12. );
270426    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
270427    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
270428    +      GRP_Income2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = -1;
270429    +      GRP_Income3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = -1;
270430    +      GRP_Income4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = -1;
270431    +   end;
MPRINT(EM_DIAGRAM):   end;
270432    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
270433    +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
270434    +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
270435    +      GRP_Income4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 1;
270436    +   end;
MPRINT(EM_DIAGRAM):   end;
270437    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
270438    +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
270439    +      GRP_Income3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 1;
270440    +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
270441    +   end;
MPRINT(EM_DIAGRAM):   end;
270442    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
270443    +      GRP_Income2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 1;
270444    +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
270445    +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
270446    +   end;
MPRINT(EM_DIAGRAM):   end;
270447    +   else do;
MPRINT(EM_DIAGRAM):   else do;
270448    +      GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
270449    +      GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
270450    +      GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
270451    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
270452    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
270453    +   end;
MPRINT(EM_DIAGRAM):   end;
270454    +end;
MPRINT(EM_DIAGRAM):   end;
270455    +
270456    +*** Generate dummy variables for GRP_Mnt ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Mnt ;
270457    +drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
270458    +if missing( GRP_Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Mnt ) then do;
270459    +   GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
270460    +   GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
270461    +   GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
270462    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
270463    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
270464    +end;
MPRINT(EM_DIAGRAM):   end;
270465    +else do;
MPRINT(EM_DIAGRAM):   else do;
270466    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
270467    +   _dm12 = put( GRP_Mnt , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Mnt , BEST12. );
270468    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
270469    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
270470    +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
270471    +      GRP_Mnt3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 1;
270472    +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
270473    +   end;
MPRINT(EM_DIAGRAM):   end;
270474    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
270475    +      GRP_Mnt2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = -1;
270476    +      GRP_Mnt3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = -1;
270477    +      GRP_Mnt4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = -1;
270478    +   end;
MPRINT(EM_DIAGRAM):   end;
270479    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
270480    +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
270481    +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
270482    +      GRP_Mnt4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 1;
270483    +   end;
MPRINT(EM_DIAGRAM):   end;
270484    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
270485    +      GRP_Mnt2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 1;
270486    +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
270487    +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
270488    +   end;
MPRINT(EM_DIAGRAM):   end;
270489    +   else do;
MPRINT(EM_DIAGRAM):   else do;
270490    +      GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
270491    +      GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
270492    +      GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
270493    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
270494    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
270495    +   end;
MPRINT(EM_DIAGRAM):   end;
270496    +end;
MPRINT(EM_DIAGRAM):   end;
270497    +
270498    +*** Generate dummy variables for GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntFishProducts ;
270499    +drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
270500    +if missing( GRP_MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntFishProducts ) then do;
270501    +   GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
270502    +   GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
270503    +   GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
270504    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
270505    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
270506    +end;
MPRINT(EM_DIAGRAM):   end;
270507    +else do;
MPRINT(EM_DIAGRAM):   else do;
270508    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
270509    +   _dm12 = put( GRP_MntFishProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntFishProducts , BEST12. );
270510    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
270511    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
270512    +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
270513    +      GRP_MntFishProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 1;
270514    +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
270515    +   end;
MPRINT(EM_DIAGRAM):   end;
270516    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
270517    +      GRP_MntFishProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = -1;
270518    +      GRP_MntFishProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = -1;
270519    +      GRP_MntFishProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = -1;
270520    +   end;
MPRINT(EM_DIAGRAM):   end;
270521    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
270522    +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
270523    +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
270524    +      GRP_MntFishProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 1;
270525    +   end;
MPRINT(EM_DIAGRAM):   end;
270526    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
270527    +      GRP_MntFishProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 1;
270528    +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
270529    +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
270530    +   end;
MPRINT(EM_DIAGRAM):   end;
270531    +   else do;
MPRINT(EM_DIAGRAM):   else do;
270532    +      GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
270533    +      GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
270534    +      GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
270535    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
270536    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
270537    +   end;
MPRINT(EM_DIAGRAM):   end;
270538    +end;
MPRINT(EM_DIAGRAM):   end;
270539    +
270540    +*** Generate dummy variables for GRP_MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntGoldProds ;
270541    +drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
270542    +if missing( GRP_MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntGoldProds ) then do;
270543    +   GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
270544    +   GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
270545    +   GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
270546    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
270547    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
270548    +end;
MPRINT(EM_DIAGRAM):   end;
270549    +else do;
MPRINT(EM_DIAGRAM):   else do;
270550    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
270551    +   _dm12 = put( GRP_MntGoldProds , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntGoldProds , BEST12. );
270552    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
270553    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
270554    +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
270555    +      GRP_MntGoldProds3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 1;
270556    +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
270557    +   end;
MPRINT(EM_DIAGRAM):   end;
270558    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
270559    +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
270560    +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
270561    +      GRP_MntGoldProds4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 1;
270562    +   end;
MPRINT(EM_DIAGRAM):   end;
270563    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
270564    +      GRP_MntGoldProds2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = -1;
270565    +      GRP_MntGoldProds3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = -1;
270566    +      GRP_MntGoldProds4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = -1;
270567    +   end;
MPRINT(EM_DIAGRAM):   end;
270568    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
270569    +      GRP_MntGoldProds2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 1;
270570    +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
270571    +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
270572    +   end;
MPRINT(EM_DIAGRAM):   end;
270573    +   else do;
MPRINT(EM_DIAGRAM):   else do;
270574    +      GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
270575    +      GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
270576    +      GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
270577    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
270578    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
270579    +   end;
MPRINT(EM_DIAGRAM):   end;
270580    +end;
MPRINT(EM_DIAGRAM):   end;
270581    +
270582    +*** Generate dummy variables for GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntMeatProducts ;
270583    +drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
270584    +if missing( GRP_MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntMeatProducts ) then do;
270585    +   GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
270586    +   GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
270587    +   GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
270588    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
270589    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
270590    +end;
MPRINT(EM_DIAGRAM):   end;
270591    +else do;
MPRINT(EM_DIAGRAM):   else do;
270592    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
270593    +   _dm12 = put( GRP_MntMeatProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntMeatProducts , BEST12. );
270594    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
270595    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
270596    +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
270597    +      GRP_MntMeatProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 1;
270598    +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
270599    +   end;
MPRINT(EM_DIAGRAM):   end;
270600    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
270601    +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
270602    +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
270603    +      GRP_MntMeatProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 1;
270604    +   end;
MPRINT(EM_DIAGRAM):   end;
270605    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
270606    +      GRP_MntMeatProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = -1;
270607    +      GRP_MntMeatProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = -1;
270608    +      GRP_MntMeatProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = -1;
270609    +   end;
MPRINT(EM_DIAGRAM):   end;
270610    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
270611    +      GRP_MntMeatProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 1;
270612    +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
270613    +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
270614    +   end;
MPRINT(EM_DIAGRAM):   end;
270615    +   else do;
MPRINT(EM_DIAGRAM):   else do;
270616    +      GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
270617    +      GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
270618    +      GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
270619    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
270620    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
270621    +   end;
MPRINT(EM_DIAGRAM):   end;
270622    +end;
MPRINT(EM_DIAGRAM):   end;
270623    +
270624    +*** Generate dummy variables for GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntWines ;
270625    +drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
270626    +if missing( GRP_MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntWines ) then do;
270627    +   GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
270628    +   GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
270629    +   GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
270630    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
270631    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
270632    +end;
MPRINT(EM_DIAGRAM):   end;
270633    +else do;
MPRINT(EM_DIAGRAM):   else do;
270634    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
270635    +   _dm12 = put( GRP_MntWines , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntWines , BEST12. );
270636    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
270637    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
270638    +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
270639    +      GRP_MntWines3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 1;
270640    +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
270641    +   end;
MPRINT(EM_DIAGRAM):   end;
270642    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
270643    +      GRP_MntWines2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = -1;
270644    +      GRP_MntWines3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = -1;
270645    +      GRP_MntWines4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = -1;
270646    +   end;
MPRINT(EM_DIAGRAM):   end;
270647    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
270648    +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
270649    +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
270650    +      GRP_MntWines4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 1;
270651    +   end;
MPRINT(EM_DIAGRAM):   end;
270652    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
270653    +      GRP_MntWines2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 1;
270654    +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
270655    +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
270656    +   end;
MPRINT(EM_DIAGRAM):   end;
270657    +   else do;
MPRINT(EM_DIAGRAM):   else do;
270658    +      GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
270659    +      GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
270660    +      GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
270661    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
270662    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
270663    +   end;
MPRINT(EM_DIAGRAM):   end;
270664    +end;
MPRINT(EM_DIAGRAM):   end;
270665    +
270666    +*** Generate dummy variables for GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumCatalogPurchases ;
270667    +drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
270668    +if missing( GRP_NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumCatalogPurchases ) then do;
270669    +   GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
270670    +   GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
270671    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
270672    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
270673    +end;
MPRINT(EM_DIAGRAM):   end;
270674    +else do;
MPRINT(EM_DIAGRAM):   else do;
270675    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
270676    +   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
270677    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
270678    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
270679    +      GRP_NumCatalogPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 1;
270680    +      GRP_NumCatalogPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 0;
270681    +   end;
MPRINT(EM_DIAGRAM):   end;
270682    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
270683    +      GRP_NumCatalogPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = -1;
270684    +      GRP_NumCatalogPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = -1;
270685    +   end;
MPRINT(EM_DIAGRAM):   end;
270686    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
270687    +      GRP_NumCatalogPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 0;
270688    +      GRP_NumCatalogPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 1;
270689    +   end;
MPRINT(EM_DIAGRAM):   end;
270690    +   else do;
MPRINT(EM_DIAGRAM):   else do;
270691    +      GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
270692    +      GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
270693    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
270694    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
270695    +   end;
MPRINT(EM_DIAGRAM):   end;
270696    +end;
MPRINT(EM_DIAGRAM):   end;
270697    +
270698    +*** Generate dummy variables for GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumDistPurchases ;
270699    +drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
270700    +if missing( GRP_NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumDistPurchases ) then do;
270701    +   GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
270702    +   GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
270703    +   GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
270704    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
270705    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
270706    +end;
MPRINT(EM_DIAGRAM):   end;
270707    +else do;
MPRINT(EM_DIAGRAM):   else do;
270708    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
270709    +   _dm12 = put( GRP_NumDistPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumDistPurchases , BEST12. );
270710    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
270711    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
270712    +      GRP_NumDistPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = -1;
270713    +      GRP_NumDistPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = -1;
270714    +      GRP_NumDistPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = -1;
270715    +   end;
MPRINT(EM_DIAGRAM):   end;
270716    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
270717    +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
270718    +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
270719    +      GRP_NumDistPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 1;
270720    +   end;
MPRINT(EM_DIAGRAM):   end;
270721    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
270722    +      GRP_NumDistPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 1;
270723    +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
270724    +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
270725    +   end;
MPRINT(EM_DIAGRAM):   end;
270726    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
270727    +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
270728    +      GRP_NumDistPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 1;
270729    +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
270730    +   end;
MPRINT(EM_DIAGRAM):   end;
270731    +   else do;
MPRINT(EM_DIAGRAM):   else do;
270732    +      GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
270733    +      GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
270734    +      GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
270735    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
270736    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
270737    +   end;
MPRINT(EM_DIAGRAM):   end;
270738    +end;
MPRINT(EM_DIAGRAM):   end;
270739    +
270740    +*** Generate dummy variables for GRP_NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumWebPurchases ;
270741    +drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
270742    +if missing( GRP_NumWebPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumWebPurchases ) then do;
270743    +   GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
270744    +   GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
270745    +   GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
270746    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
270747    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
270748    +end;
MPRINT(EM_DIAGRAM):   end;
270749    +else do;
MPRINT(EM_DIAGRAM):   else do;
270750    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
270751    +   _dm12 = put( GRP_NumWebPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumWebPurchases , BEST12. );
270752    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
270753    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
270754    +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
270755    +      GRP_NumWebPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 1;
270756    +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
270757    +   end;
MPRINT(EM_DIAGRAM):   end;
270758    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
270759    +      GRP_NumWebPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = -1;
270760    +      GRP_NumWebPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = -1;
270761    +      GRP_NumWebPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = -1;
270762    +   end;
MPRINT(EM_DIAGRAM):   end;
270763    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
270764    +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
270765    +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
270766    +      GRP_NumWebPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 1;
270767    +   end;
MPRINT(EM_DIAGRAM):   end;
270768    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
270769    +      GRP_NumWebPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 1;
270770    +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
270771    +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
270772    +   end;
MPRINT(EM_DIAGRAM):   end;
270773    +   else do;
MPRINT(EM_DIAGRAM):   else do;
270774    +      GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
270775    +      GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
270776    +      GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
270777    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
270778    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
270779    +   end;
MPRINT(EM_DIAGRAM):   end;
270780    +end;
MPRINT(EM_DIAGRAM):   end;
270781    +
270782    +*** Generate dummy variables for GRP_RFMstat ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RFMstat ;
270783    +drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
270784    +if missing( GRP_RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RFMstat ) then do;
270785    +   GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
270786    +   GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
270787    +   GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
270788    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
270789    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
270790    +end;
MPRINT(EM_DIAGRAM):   end;
270791    +else do;
MPRINT(EM_DIAGRAM):   else do;
270792    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
270793    +   _dm12 = put( GRP_RFMstat , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RFMstat , BEST12. );
270794    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
270795    +   if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
270796    +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
270797    +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
270798    +      GRP_RFMstat4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 1;
270799    +   end;
MPRINT(EM_DIAGRAM):   end;
270800    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
270801    +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
270802    +      GRP_RFMstat3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 1;
270803    +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
270804    +   end;
MPRINT(EM_DIAGRAM):   end;
270805    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
270806    +      GRP_RFMstat2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = -1;
270807    +      GRP_RFMstat3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = -1;
270808    +      GRP_RFMstat4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = -1;
270809    +   end;
MPRINT(EM_DIAGRAM):   end;
270810    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
270811    +      GRP_RFMstat2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 1;
270812    +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
270813    +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
270814    +   end;
MPRINT(EM_DIAGRAM):   end;
270815    +   else do;
MPRINT(EM_DIAGRAM):   else do;
270816    +      GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
270817    +      GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
270818    +      GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
270819    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
270820    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
270821    +   end;
MPRINT(EM_DIAGRAM):   end;
270822    +end;
MPRINT(EM_DIAGRAM):   end;
270823    +
270824    +*** Generate dummy variables for GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RMntFrq ;
270825    +drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
270826    +if missing( GRP_RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RMntFrq ) then do;
270827    +   GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
270828    +   GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
270829    +   GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
270830    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
270831    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
270832    +end;
MPRINT(EM_DIAGRAM):   end;
270833    +else do;
MPRINT(EM_DIAGRAM):   else do;
270834    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
270835    +   _dm12 = put( GRP_RMntFrq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RMntFrq , BEST12. );
270836    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
270837    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
270838    +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
270839    +      GRP_RMntFrq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 1;
270840    +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
270841    +   end;
MPRINT(EM_DIAGRAM):   end;
270842    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
270843    +      GRP_RMntFrq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = -1;
270844    +      GRP_RMntFrq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = -1;
270845    +      GRP_RMntFrq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = -1;
270846    +   end;
MPRINT(EM_DIAGRAM):   end;
270847    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
270848    +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
270849    +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
270850    +      GRP_RMntFrq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 1;
270851    +   end;
MPRINT(EM_DIAGRAM):   end;
270852    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
270853    +      GRP_RMntFrq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 1;
270854    +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
270855    +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
270856    +   end;
MPRINT(EM_DIAGRAM):   end;
270857    +   else do;
MPRINT(EM_DIAGRAM):   else do;
270858    +      GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
270859    +      GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
270860    +      GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
270861    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
270862    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
270863    +   end;
MPRINT(EM_DIAGRAM):   end;
270864    +end;
MPRINT(EM_DIAGRAM):   end;
270865    +
270866    +*** Generate dummy variables for GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Recency ;
270867    +drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
270868    +if missing( GRP_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Recency ) then do;
270869    +   GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
270870    +   GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
270871    +   GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
270872    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
270873    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
270874    +end;
MPRINT(EM_DIAGRAM):   end;
270875    +else do;
MPRINT(EM_DIAGRAM):   else do;
270876    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
270877    +   _dm12 = put( GRP_Recency , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Recency , BEST12. );
270878    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
270879    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
270880    +      GRP_Recency2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = -1;
270881    +      GRP_Recency3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = -1;
270882    +      GRP_Recency4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = -1;
270883    +   end;
MPRINT(EM_DIAGRAM):   end;
270884    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
270885    +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
270886    +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
270887    +      GRP_Recency4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 1;
270888    +   end;
MPRINT(EM_DIAGRAM):   end;
270889    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
270890    +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
270891    +      GRP_Recency3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 1;
270892    +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
270893    +   end;
MPRINT(EM_DIAGRAM):   end;
270894    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
270895    +      GRP_Recency2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 1;
270896    +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
270897    +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
270898    +   end;
MPRINT(EM_DIAGRAM):   end;
270899    +   else do;
MPRINT(EM_DIAGRAM):   else do;
270900    +      GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
270901    +      GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
270902    +      GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
270903    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
270904    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
270905    +   end;
MPRINT(EM_DIAGRAM):   end;
270906    +end;
MPRINT(EM_DIAGRAM):   end;
270907    +
270908    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
270909    +*** Checking missing input Interval
270910    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
270911    +
270912    +IF NMISS(
270913    +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Year_Birth ) THEN DO;
270914    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
270915    +
270916    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
270917    +END;
MPRINT(EM_DIAGRAM):   END;
270918    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
270919    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
270920    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
270921    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
270922    +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
270923    +END;
MPRINT(EM_DIAGRAM):   END;
270924    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
270925    +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
270926    +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
270927    +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
270928    +END;
MPRINT(EM_DIAGRAM):   END;
270929    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
270930    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
270931    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
270932    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
270933    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
270934    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
270935    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
270936    +   H1x1_1  =      1.0311746583126 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0311746583126 * S_Year_Birth ;
270937    +   H1x1_2  =     1.67119181587557 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.67119181587557 * S_Year_Birth ;
270938    +   H1x1_3  =    -2.17540349820814 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -2.17540349820814 * S_Year_Birth ;
270939    +   H1x1_4  =    -2.56679893298362 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -2.56679893298362 * S_Year_Birth ;
270940    +   H1x1_5  =    -0.60932306642258 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.60932306642258 * S_Year_Birth ;
270941    +   H1x1_1  = H1x1_1  +     0.72534982243417 * GRP_AcceptedCmp52
270942    +          +     0.33166960090157 * GRP_Frq2  +     1.71697127611163 * GRP_Frq3
270943    +          +     0.81002020807326 * GRP_Frq4  +     0.48027973945372 *
270944    +        GRP_Income2  +    -1.09550149543369 * GRP_Income3
270945    +          +    -0.22235642667559 * GRP_Income4  +    -0.00978473434282 *
270946    +        GRP_Mnt2  +    -0.11796310741854 * GRP_Mnt3  +    -0.42227802637743 *
270947    +        GRP_Mnt4  +    -0.60021395849859 * GRP_MntFishProducts2
270948    +          +    -1.92253913417034 * GRP_MntFishProducts3
270949    +          +     0.11236967036572 * GRP_MntFishProducts4
270950    +          +     1.55117451498964 * GRP_MntGoldProds2
270951    +          +    -2.17638819155912 * GRP_MntGoldProds3
270952    +          +     1.12471370225173 * GRP_MntGoldProds4
270953    +          +     0.73773441156548 * GRP_MntMeatProducts2
270954    +          +     2.07738910661633 * GRP_MntMeatProducts3
270955    +          +    -0.64280630173292 * GRP_MntMeatProducts4
270956    +          +     0.77316083192112 * GRP_MntWines2  +     2.15867403144607 *
270957    +        GRP_MntWines3  +     2.47891578910494 * GRP_MntWines4
270958    +          +     0.27137671258246 * GRP_NumCatalogPurchases3
270959    +          +     1.17769351442984 * GRP_NumCatalogPurchases4
270960    +          +     1.22104662684375 * GRP_NumDistPurchases2
270961    +          +      3.4956187335148 * GRP_NumDistPurchases3
270962    +          +     1.44110988448724 * GRP_NumDistPurchases4
270963    +          +    -0.15910531424988 * GRP_NumWebPurchases2
270964    +          +      2.0651216353476 * GRP_NumWebPurchases3
270965    +          +     1.88264340284474 * GRP_NumWebPurchases4
270966    +          +    -0.51356035467324 * GRP_RFMstat2  +    -0.97145618762825 *
270967    +        GRP_RFMstat3  +     1.44865956224608 * GRP_RFMstat4
270968    +          +    -0.02171623156521 * GRP_RMntFrq2  +     2.25871822244977 *
270969    +        GRP_RMntFrq3  +    -0.95854946562766 * GRP_RMntFrq4
270970    +          +    -0.19279939282854 * GRP_Recency2  +    -0.59440462375689 *
270971    +        GRP_Recency3  +     -2.1494171625282 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.72534982243417 * GRP_AcceptedCmp52 + 
0.33166960090157 * GRP_Frq2 + 1.71697127611163 * GRP_Frq3 + 0.81002020807326 * GRP_Frq4 + 
0.48027973945372 * GRP_Income2 + -1.09550149543369 * GRP_Income3 + -0.22235642667559 * 
GRP_Income4 + -0.00978473434282 * GRP_Mnt2 + -0.11796310741854 * GRP_Mnt3 + -0.42227802637743 
* GRP_Mnt4 + -0.60021395849859 * GRP_MntFishProducts2 + -1.92253913417034 * 
GRP_MntFishProducts3 + 0.11236967036572 * GRP_MntFishProducts4 + 1.55117451498964 * 
GRP_MntGoldProds2 + -2.17638819155912 * GRP_MntGoldProds3 + 1.12471370225173 * 
GRP_MntGoldProds4 + 0.73773441156548 * GRP_MntMeatProducts2 + 2.07738910661633 * 
GRP_MntMeatProducts3 + -0.64280630173292 * GRP_MntMeatProducts4 + 0.77316083192112 * 
GRP_MntWines2 + 2.15867403144607 * GRP_MntWines3 + 2.47891578910494 * GRP_MntWines4 + 
0.27137671258246 * GRP_NumCatalogPurchases3 + 1.17769351442984 * GRP_NumCatalogPurchases4 + 
1.22104662684375 * GRP_NumDistPurchases2 + 3.4956187335148 * GRP_NumDistPurchases3 + 
1.44110988448724 * GRP_NumDistPurchases4 + -0.15910531424988 * GRP_NumWebPurchases2 + 
2.0651216353476 * GRP_NumWebPurchases3 + 1.88264340284474 * GRP_NumWebPurchases4 + 
-0.51356035467324 * GRP_RFMstat2 + -0.97145618762825 * GRP_RFMstat3 + 1.44865956224608 * 
GRP_RFMstat4 + -0.02171623156521 * GRP_RMntFrq2 + 2.25871822244977 * GRP_RMntFrq3 + 
-0.95854946562766 * GRP_RMntFrq4 + -0.19279939282854 * GRP_Recency2 + -0.59440462375689 * 
GRP_Recency3 + -2.1494171625282 * GRP_Recency4 ;
270972    +   H1x1_2  = H1x1_2  +    -1.10416749938295 * GRP_AcceptedCmp52
270973    +          +     2.11163264556083 * GRP_Frq2  +    -0.30443521786246 * GRP_Frq3
270974    +          +     2.19401599825923 * GRP_Frq4  +    -0.38326784930815 *
270975    +        GRP_Income2  +    -0.07594895187003 * GRP_Income3
270976    +          +     0.98207007879144 * GRP_Income4  +    -1.92634732130472 *
270977    +        GRP_Mnt2  +     0.64603066612326 * GRP_Mnt3  +     0.62922821521966 *
270978    +        GRP_Mnt4  +     -0.4161962895106 * GRP_MntFishProducts2
270979    +          +     0.69185352158005 * GRP_MntFishProducts3
270980    +          +    -0.03493178084029 * GRP_MntFishProducts4
270981    +          +     1.51100187776315 * GRP_MntGoldProds2
270982    +          +     0.06501688279193 * GRP_MntGoldProds3
270983    +          +    -0.39137744731231 * GRP_MntGoldProds4
270984    +          +    -1.71718837423104 * GRP_MntMeatProducts2
270985    +          +    -2.21915390243757 * GRP_MntMeatProducts3
270986    +          +    -0.56748587906854 * GRP_MntMeatProducts4
270987    +          +     0.62307046604402 * GRP_MntWines2  +     0.47352126999194 *
270988    +        GRP_MntWines3  +      0.2191426110263 * GRP_MntWines4
270989    +          +     1.48903401021544 * GRP_NumCatalogPurchases3
270990    +          +     1.17263293507207 * GRP_NumCatalogPurchases4
270991    +          +     1.51105230747578 * GRP_NumDistPurchases2
270992    +          +     0.77634340058478 * GRP_NumDistPurchases3
270993    +          +    -0.03088809375301 * GRP_NumDistPurchases4
270994    +          +    -0.96601789395554 * GRP_NumWebPurchases2
270995    +          +     0.85040977160083 * GRP_NumWebPurchases3
270996    +          +     2.40308918299781 * GRP_NumWebPurchases4
270997    +          +     0.12282845458333 * GRP_RFMstat2  +    -0.98545061581559 *
270998    +        GRP_RFMstat3  +     1.25668440586033 * GRP_RFMstat4
270999    +          +     0.46767962398497 * GRP_RMntFrq2  +    -0.80481923203399 *
271000    +        GRP_RMntFrq3  +    -1.57392798605208 * GRP_RMntFrq4
271001    +          +     0.85109569398847 * GRP_Recency2  +     0.29456403684394 *
271002    +        GRP_Recency3  +     2.66867988462295 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -1.10416749938295 * GRP_AcceptedCmp52 + 
2.11163264556083 * GRP_Frq2 + -0.30443521786246 * GRP_Frq3 + 2.19401599825923 * GRP_Frq4 + 
-0.38326784930815 * GRP_Income2 + -0.07594895187003 * GRP_Income3 + 0.98207007879144 * 
GRP_Income4 + -1.92634732130472 * GRP_Mnt2 + 0.64603066612326 * GRP_Mnt3 + 0.62922821521966 * 
GRP_Mnt4 + -0.4161962895106 * GRP_MntFishProducts2 + 0.69185352158005 * GRP_MntFishProducts3 + 
-0.03493178084029 * GRP_MntFishProducts4 + 1.51100187776315 * GRP_MntGoldProds2 + 
0.06501688279193 * GRP_MntGoldProds3 + -0.39137744731231 * GRP_MntGoldProds4 + 
-1.71718837423104 * GRP_MntMeatProducts2 + -2.21915390243757 * GRP_MntMeatProducts3 + 
-0.56748587906854 * GRP_MntMeatProducts4 + 0.62307046604402 * GRP_MntWines2 + 0.47352126999194 
* GRP_MntWines3 + 0.2191426110263 * GRP_MntWines4 + 1.48903401021544 * 
GRP_NumCatalogPurchases3 + 1.17263293507207 * GRP_NumCatalogPurchases4 + 1.51105230747578 * 
GRP_NumDistPurchases2 + 0.77634340058478 * GRP_NumDistPurchases3 + -0.03088809375301 * 
GRP_NumDistPurchases4 + -0.96601789395554 * GRP_NumWebPurchases2 + 0.85040977160083 * 
GRP_NumWebPurchases3 + 2.40308918299781 * GRP_NumWebPurchases4 + 0.12282845458333 * 
GRP_RFMstat2 + -0.98545061581559 * GRP_RFMstat3 + 1.25668440586033 * GRP_RFMstat4 + 
0.46767962398497 * GRP_RMntFrq2 + -0.80481923203399 * GRP_RMntFrq3 + -1.57392798605208 * 
GRP_RMntFrq4 + 0.85109569398847 * GRP_Recency2 + 0.29456403684394 * GRP_Recency3 + 
2.66867988462295 * GRP_Recency4 ;
271003    +   H1x1_3  = H1x1_3  +    -3.01879385716191 * GRP_AcceptedCmp52
271004    +          +    -0.13662280353682 * GRP_Frq2  +     2.51930889376721 * GRP_Frq3
271005    +          +     1.76895510412356 * GRP_Frq4  +     -0.5692048618965 *
271006    +        GRP_Income2  +     1.18033291239845 * GRP_Income3
271007    +          +    -0.64679354804447 * GRP_Income4  +    -1.28802047381892 *
271008    +        GRP_Mnt2  +    -2.46267752020506 * GRP_Mnt3  +     0.17133913926957 *
271009    +        GRP_Mnt4  +     1.27283832451603 * GRP_MntFishProducts2
271010    +          +    -0.25133476006515 * GRP_MntFishProducts3
271011    +          +     1.43382012526151 * GRP_MntFishProducts4
271012    +          +      0.6587510367878 * GRP_MntGoldProds2
271013    +          +    -2.29815972364167 * GRP_MntGoldProds3
271014    +          +    -1.17878838514109 * GRP_MntGoldProds4
271015    +          +    -1.45630165039671 * GRP_MntMeatProducts2
271016    +          +    -0.11970663820977 * GRP_MntMeatProducts3
271017    +          +    -0.76333182688138 * GRP_MntMeatProducts4
271018    +          +    -2.52565926826767 * GRP_MntWines2  +     0.00775439635111 *
271019    +        GRP_MntWines3  +    -1.79940008598217 * GRP_MntWines4
271020    +          +    -1.25235345037614 * GRP_NumCatalogPurchases3
271021    +          +    -3.32950963282576 * GRP_NumCatalogPurchases4
271022    +          +    -0.83062872942088 * GRP_NumDistPurchases2
271023    +          +      1.2644984519337 * GRP_NumDistPurchases3
271024    +          +     0.62516412515385 * GRP_NumDistPurchases4
271025    +          +    -0.91932392687811 * GRP_NumWebPurchases2
271026    +          +     0.63985001179952 * GRP_NumWebPurchases3
271027    +          +     0.11379774354586 * GRP_NumWebPurchases4
271028    +          +    -0.83336515651784 * GRP_RFMstat2  +    -0.76327708518862 *
271029    +        GRP_RFMstat3  +    -1.65882578353771 * GRP_RFMstat4
271030    +          +     0.96912805482142 * GRP_RMntFrq2  +     0.89830852536378 *
271031    +        GRP_RMntFrq3  +    -0.80853907149434 * GRP_RMntFrq4
271032    +          +    -1.09357609598677 * GRP_Recency2  +    -0.36348291669233 *
271033    +        GRP_Recency3  +    -1.63045870617841 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -3.01879385716191 * GRP_AcceptedCmp52 + 
-0.13662280353682 * GRP_Frq2 + 2.51930889376721 * GRP_Frq3 + 1.76895510412356 * GRP_Frq4 + 
-0.5692048618965 * GRP_Income2 + 1.18033291239845 * GRP_Income3 + -0.64679354804447 * 
GRP_Income4 + -1.28802047381892 * GRP_Mnt2 + -2.46267752020506 * GRP_Mnt3 + 0.17133913926957 * 
GRP_Mnt4 + 1.27283832451603 * GRP_MntFishProducts2 + -0.25133476006515 * GRP_MntFishProducts3 
+ 1.43382012526151 * GRP_MntFishProducts4 + 0.6587510367878 * GRP_MntGoldProds2 + 
-2.29815972364167 * GRP_MntGoldProds3 + -1.17878838514109 * GRP_MntGoldProds4 + 
-1.45630165039671 * GRP_MntMeatProducts2 + -0.11970663820977 * GRP_MntMeatProducts3 + 
-0.76333182688138 * GRP_MntMeatProducts4 + -2.52565926826767 * GRP_MntWines2 + 
0.00775439635111 * GRP_MntWines3 + -1.79940008598217 * GRP_MntWines4 + -1.25235345037614 * 
GRP_NumCatalogPurchases3 + -3.32950963282576 * GRP_NumCatalogPurchases4 + -0.83062872942088 * 
GRP_NumDistPurchases2 + 1.2644984519337 * GRP_NumDistPurchases3 + 0.62516412515385 * 
GRP_NumDistPurchases4 + -0.91932392687811 * GRP_NumWebPurchases2 + 0.63985001179952 * 
GRP_NumWebPurchases3 + 0.11379774354586 * GRP_NumWebPurchases4 + -0.83336515651784 * 
GRP_RFMstat2 + -0.76327708518862 * GRP_RFMstat3 + -1.65882578353771 * GRP_RFMstat4 + 
0.96912805482142 * GRP_RMntFrq2 + 0.89830852536378 * GRP_RMntFrq3 + -0.80853907149434 * 
GRP_RMntFrq4 + -1.09357609598677 * GRP_Recency2 + -0.36348291669233 * GRP_Recency3 + 
-1.63045870617841 * GRP_Recency4 ;
271034    +   H1x1_4  = H1x1_4  +    -0.22003392209515 * GRP_AcceptedCmp52
271035    +          +    -0.37446340795406 * GRP_Frq2  +    -0.00569020240777 * GRP_Frq3
271036    +          +     0.38116150545111 * GRP_Frq4  +    -0.36688806155078 *
271037    +        GRP_Income2  +     -4.2575032053121 * GRP_Income3
271038    +          +     1.51798546961788 * GRP_Income4  +    -0.88579848196414 *
271039    +        GRP_Mnt2  +     1.84159465073955 * GRP_Mnt3  +     0.11670514600746 *
271040    +        GRP_Mnt4  +    -3.46232646407418 * GRP_MntFishProducts2
271041    +          +     0.25005234850524 * GRP_MntFishProducts3
271042    +          +    -0.07970714752313 * GRP_MntFishProducts4
271043    +          +     -0.7495440064059 * GRP_MntGoldProds2
271044    +          +     -0.0659148563739 * GRP_MntGoldProds3
271045    +          +    -1.42445075896946 * GRP_MntGoldProds4
271046    +          +      0.1738975461322 * GRP_MntMeatProducts2
271047    +          +    -2.24799164386156 * GRP_MntMeatProducts3
271048    +          +    -1.67754357341899 * GRP_MntMeatProducts4
271049    +          +    -0.05307351478942 * GRP_MntWines2  +     -2.2168800511889 *
271050    +        GRP_MntWines3  +    -1.48732327222777 * GRP_MntWines4
271051    +          +    -0.36761319556449 * GRP_NumCatalogPurchases3
271052    +          +    -2.89167685306869 * GRP_NumCatalogPurchases4
271053    +          +    -0.48267351716569 * GRP_NumDistPurchases2
271054    +          +     0.93211719554417 * GRP_NumDistPurchases3
271055    +          +      1.1708430486506 * GRP_NumDistPurchases4
271056    +          +     0.03811902892169 * GRP_NumWebPurchases2
271057    +          +    -1.51477371309928 * GRP_NumWebPurchases3
271058    +          +     1.07378297590898 * GRP_NumWebPurchases4
271059    +          +     1.68393431629797 * GRP_RFMstat2  +     1.58685880164611 *
271060    +        GRP_RFMstat3  +     0.80759821340467 * GRP_RFMstat4
271061    +          +     1.66879117439255 * GRP_RMntFrq2  +     0.80834322412036 *
271062    +        GRP_RMntFrq3  +     0.23086766354714 * GRP_RMntFrq4
271063    +          +      1.3218682104263 * GRP_Recency2  +    -1.73155287312103 *
271064    +        GRP_Recency3  +     0.90108611111458 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.22003392209515 * GRP_AcceptedCmp52 + 
-0.37446340795406 * GRP_Frq2 + -0.00569020240777 * GRP_Frq3 + 0.38116150545111 * GRP_Frq4 + 
-0.36688806155078 * GRP_Income2 + -4.2575032053121 * GRP_Income3 + 1.51798546961788 * 
GRP_Income4 + -0.88579848196414 * GRP_Mnt2 + 1.84159465073955 * GRP_Mnt3 + 0.11670514600746 * 
GRP_Mnt4 + -3.46232646407418 * GRP_MntFishProducts2 + 0.25005234850524 * GRP_MntFishProducts3 
+ -0.07970714752313 * GRP_MntFishProducts4 + -0.7495440064059 * GRP_MntGoldProds2 + 
-0.0659148563739 * GRP_MntGoldProds3 + -1.42445075896946 * GRP_MntGoldProds4 + 0.1738975461322 
* GRP_MntMeatProducts2 + -2.24799164386156 * GRP_MntMeatProducts3 + -1.67754357341899 * 
GRP_MntMeatProducts4 + -0.05307351478942 * GRP_MntWines2 + -2.2168800511889 * GRP_MntWines3 + 
-1.48732327222777 * GRP_MntWines4 + -0.36761319556449 * GRP_NumCatalogPurchases3 + 
-2.89167685306869 * GRP_NumCatalogPurchases4 + -0.48267351716569 * GRP_NumDistPurchases2 + 
0.93211719554417 * GRP_NumDistPurchases3 + 1.1708430486506 * GRP_NumDistPurchases4 + 
0.03811902892169 * GRP_NumWebPurchases2 + -1.51477371309928 * GRP_NumWebPurchases3 + 
1.07378297590898 * GRP_NumWebPurchases4 + 1.68393431629797 * GRP_RFMstat2 + 1.58685880164611 * 
GRP_RFMstat3 + 0.80759821340467 * GRP_RFMstat4 + 1.66879117439255 * GRP_RMntFrq2 + 
0.80834322412036 * GRP_RMntFrq3 + 0.23086766354714 * GRP_RMntFrq4 + 1.3218682104263 * 
GRP_Recency2 + -1.73155287312103 * GRP_Recency3 + 0.90108611111458 * GRP_Recency4 ;
271065    +   H1x1_5  = H1x1_5  +    -2.25400715952368 * GRP_AcceptedCmp52
271066    +          +    -0.68951263089678 * GRP_Frq2  +    -1.06579468283295 * GRP_Frq3
271067    +          +    -2.03202371442661 * GRP_Frq4  +      0.1036760802752 *
271068    +        GRP_Income2  +    -0.92046251438792 * GRP_Income3
271069    +          +     1.24075371479112 * GRP_Income4  +    -2.19069916142209 *
271070    +        GRP_Mnt2  +     1.76084360929533 * GRP_Mnt3  +     0.20732134279897 *
271071    +        GRP_Mnt4  +    -1.25213582301524 * GRP_MntFishProducts2
271072    +          +    -1.49559041774587 * GRP_MntFishProducts3
271073    +          +     1.29292270443546 * GRP_MntFishProducts4
271074    +          +     3.28109415592287 * GRP_MntGoldProds2
271075    +          +     0.40523569115651 * GRP_MntGoldProds3
271076    +          +        0.70305704265 * GRP_MntGoldProds4
271077    +          +    -1.85351989681271 * GRP_MntMeatProducts2
271078    +          +    -0.63625311683955 * GRP_MntMeatProducts3
271079    +          +     0.27320544681113 * GRP_MntMeatProducts4
271080    +          +     1.96095600251535 * GRP_MntWines2  +     2.24427494885455 *
271081    +        GRP_MntWines3  +    -0.88569250661863 * GRP_MntWines4
271082    +          +    -0.42794019910524 * GRP_NumCatalogPurchases3
271083    +          +    -2.32852367141603 * GRP_NumCatalogPurchases4
271084    +          +    -1.40970961318877 * GRP_NumDistPurchases2
271085    +          +     -2.5780841761751 * GRP_NumDistPurchases3
271086    +          +    -0.35557998232484 * GRP_NumDistPurchases4
271087    +          +     1.27746944985248 * GRP_NumWebPurchases2
271088    +          +     0.69463977283169 * GRP_NumWebPurchases3
271089    +          +    -0.54397813851169 * GRP_NumWebPurchases4
271090    +          +    -0.31669101358561 * GRP_RFMstat2  +     2.18799717857163 *
271091    +        GRP_RFMstat3  +    -0.42571916720282 * GRP_RFMstat4
271092    +          +     -0.8273646010144 * GRP_RMntFrq2  +     0.34575371088075 *
271093    +        GRP_RMntFrq3  +    -0.85751874647054 * GRP_RMntFrq4
271094    +          +    -1.53759054703623 * GRP_Recency2  +      0.1907268514387 *
271095    +        GRP_Recency3  +    -0.73522914565387 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -2.25400715952368 * GRP_AcceptedCmp52 + 
-0.68951263089678 * GRP_Frq2 + -1.06579468283295 * GRP_Frq3 + -2.03202371442661 * GRP_Frq4 + 
0.1036760802752 * GRP_Income2 + -0.92046251438792 * GRP_Income3 + 1.24075371479112 * 
GRP_Income4 + -2.19069916142209 * GRP_Mnt2 + 1.76084360929533 * GRP_Mnt3 + 0.20732134279897 * 
GRP_Mnt4 + -1.25213582301524 * GRP_MntFishProducts2 + -1.49559041774587 * GRP_MntFishProducts3 
+ 1.29292270443546 * GRP_MntFishProducts4 + 3.28109415592287 * GRP_MntGoldProds2 + 
0.40523569115651 * GRP_MntGoldProds3 + 0.70305704265 * GRP_MntGoldProds4 + -1.85351989681271 * 
GRP_MntMeatProducts2 + -0.63625311683955 * GRP_MntMeatProducts3 + 0.27320544681113 * 
GRP_MntMeatProducts4 + 1.96095600251535 * GRP_MntWines2 + 2.24427494885455 * GRP_MntWines3 + 
-0.88569250661863 * GRP_MntWines4 + -0.42794019910524 * GRP_NumCatalogPurchases3 + 
-2.32852367141603 * GRP_NumCatalogPurchases4 + -1.40970961318877 * GRP_NumDistPurchases2 + 
-2.5780841761751 * GRP_NumDistPurchases3 + -0.35557998232484 * GRP_NumDistPurchases4 + 
1.27746944985248 * GRP_NumWebPurchases2 + 0.69463977283169 * GRP_NumWebPurchases3 + 
-0.54397813851169 * GRP_NumWebPurchases4 + -0.31669101358561 * GRP_RFMstat2 + 2.18799717857163 
* GRP_RFMstat3 + -0.42571916720282 * GRP_RFMstat4 + -0.8273646010144 * GRP_RMntFrq2 + 
0.34575371088075 * GRP_RMntFrq3 + -0.85751874647054 * GRP_RMntFrq4 + -1.53759054703623 * 
GRP_Recency2 + 0.1907268514387 * GRP_Recency3 + -0.73522914565387 * GRP_Recency4 ;
271096    +   H1x1_1  =     0.19335754651259 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.19335754651259 + H1x1_1 ;
271097    +   H1x1_2  =     2.09010164778105 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 2.09010164778105 + H1x1_2 ;
271098    +   H1x1_3  =    -0.06489378657176 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.06489378657176 + H1x1_3 ;
271099    +   H1x1_4  =    -0.14814564965512 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.14814564965512 + H1x1_4 ;
271100    +   H1x1_5  =      1.2298003293092 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 1.2298003293092 + H1x1_5 ;
271101    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
271102    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
271103    +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
271104    +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
271105    +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
271106    +   H1x1_4  = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
271107    +   H1x1_5  = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_5 = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
271108    +END;
MPRINT(EM_DIAGRAM):   END;
271109    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
271110    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
271111    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
271112    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
271113    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
271114    +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
271115    +END;
MPRINT(EM_DIAGRAM):   END;
271116    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
271117    +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
271118    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
271119    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
271120    +   H1x2_1  =    -1.88709734442083 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -1.88709734442083 * S_Year_Birth ;
271121    +   H1x2_2  =     0.39337522313841 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.39337522313841 * S_Year_Birth ;
271122    +   H1x2_3  =    -0.80137600943997 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.80137600943997 * S_Year_Birth ;
271123    +   H1x2_4  =     0.56552045600061 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.56552045600061 * S_Year_Birth ;
271124    +   H1x2_5  =     0.08757939638091 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 0.08757939638091 * S_Year_Birth ;
271125    +   H1x2_1  = H1x2_1  +    -0.80297380803583 * GRP_AcceptedCmp52
271126    +          +     0.77171658129897 * GRP_Frq2  +    -1.90373500999925 * GRP_Frq3
271127    +          +     0.34067508173447 * GRP_Frq4  +    -3.40546398001194 *
271128    +        GRP_Income2  +      2.4308303101124 * GRP_Income3
271129    +          +      1.7371902933386 * GRP_Income4  +    -1.19436336479656 *
271130    +        GRP_Mnt2  +    -0.40996866110225 * GRP_Mnt3  +     1.04801669037568 *
271131    +        GRP_Mnt4  +     1.95500373096914 * GRP_MntFishProducts2
271132    +          +     2.51364109656281 * GRP_MntFishProducts3
271133    +          +    -1.42490007484769 * GRP_MntFishProducts4
271134    +          +    -0.45125943648795 * GRP_MntGoldProds2
271135    +          +     2.47102254724134 * GRP_MntGoldProds3
271136    +          +     -1.9039173262792 * GRP_MntGoldProds4
271137    +          +     0.19349291706995 * GRP_MntMeatProducts2
271138    +          +     1.13475826324844 * GRP_MntMeatProducts3
271139    +          +    -0.33642288502432 * GRP_MntMeatProducts4
271140    +          +     1.11286337512828 * GRP_MntWines2  +    -1.73349392468621 *
271141    +        GRP_MntWines3  +     0.82891272252224 * GRP_MntWines4
271142    +          +     0.15659125827236 * GRP_NumCatalogPurchases3
271143    +          +     0.32817066335176 * GRP_NumCatalogPurchases4
271144    +          +    -0.67313821415044 * GRP_NumDistPurchases2
271145    +          +    -0.96239937857546 * GRP_NumDistPurchases3
271146    +          +     0.32058507897383 * GRP_NumDistPurchases4
271147    +          +     0.02503658374779 * GRP_NumWebPurchases2
271148    +          +    -2.42182777667863 * GRP_NumWebPurchases3
271149    +          +     1.09934791830799 * GRP_NumWebPurchases4
271150    +          +     0.99647285457344 * GRP_RFMstat2  +    -1.81285090299632 *
271151    +        GRP_RFMstat3  +      0.6907946914019 * GRP_RFMstat4
271152    +          +    -0.96741541040827 * GRP_RMntFrq2  +     1.54078374992995 *
271153    +        GRP_RMntFrq3  +     -0.5606172121429 * GRP_RMntFrq4
271154    +          +     1.09972681443966 * GRP_Recency2  +     0.40240053086114 *
271155    +        GRP_Recency3  +     3.54622644138557 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.80297380803583 * GRP_AcceptedCmp52 + 
0.77171658129897 * GRP_Frq2 + -1.90373500999925 * GRP_Frq3 + 0.34067508173447 * GRP_Frq4 + 
-3.40546398001194 * GRP_Income2 + 2.4308303101124 * GRP_Income3 + 1.7371902933386 * 
GRP_Income4 + -1.19436336479656 * GRP_Mnt2 + -0.40996866110225 * GRP_Mnt3 + 1.04801669037568 * 
GRP_Mnt4 + 1.95500373096914 * GRP_MntFishProducts2 + 2.51364109656281 * GRP_MntFishProducts3 + 
-1.42490007484769 * GRP_MntFishProducts4 + -0.45125943648795 * GRP_MntGoldProds2 + 
2.47102254724134 * GRP_MntGoldProds3 + -1.9039173262792 * GRP_MntGoldProds4 + 0.19349291706995 
* GRP_MntMeatProducts2 + 1.13475826324844 * GRP_MntMeatProducts3 + -0.33642288502432 * 
GRP_MntMeatProducts4 + 1.11286337512828 * GRP_MntWines2 + -1.73349392468621 * GRP_MntWines3 + 
0.82891272252224 * GRP_MntWines4 + 0.15659125827236 * GRP_NumCatalogPurchases3 + 
0.32817066335176 * GRP_NumCatalogPurchases4 + -0.67313821415044 * GRP_NumDistPurchases2 + 
-0.96239937857546 * GRP_NumDistPurchases3 + 0.32058507897383 * GRP_NumDistPurchases4 + 
0.02503658374779 * GRP_NumWebPurchases2 + -2.42182777667863 * GRP_NumWebPurchases3 + 
1.09934791830799 * GRP_NumWebPurchases4 + 0.99647285457344 * GRP_RFMstat2 + -1.81285090299632 
* GRP_RFMstat3 + 0.6907946914019 * GRP_RFMstat4 + -0.96741541040827 * GRP_RMntFrq2 + 
1.54078374992995 * GRP_RMntFrq3 + -0.5606172121429 * GRP_RMntFrq4 + 1.09972681443966 * 
GRP_Recency2 + 0.40240053086114 * GRP_Recency3 + 3.54622644138557 * GRP_Recency4 ;
271156    +   H1x2_2  = H1x2_2  +    -0.84257803770334 * GRP_AcceptedCmp52
271157    +          +    -1.76147524199782 * GRP_Frq2  +     0.76968937743693 * GRP_Frq3
271158    +          +     1.10861276861184 * GRP_Frq4  +    -2.23247622323833 *
271159    +        GRP_Income2  +    -0.30655302009971 * GRP_Income3
271160    +          +    -0.67421319601147 * GRP_Income4  +    -0.41833926468843 *
271161    +        GRP_Mnt2  +     0.52496961087688 * GRP_Mnt3  +     2.22224381605808 *
271162    +        GRP_Mnt4  +     1.90603665409631 * GRP_MntFishProducts2
271163    +          +    -0.68769529687639 * GRP_MntFishProducts3
271164    +          +     0.91046416847697 * GRP_MntFishProducts4
271165    +          +     1.93581182421904 * GRP_MntGoldProds2
271166    +          +     0.00795466624941 * GRP_MntGoldProds3
271167    +          +    -0.22854189252742 * GRP_MntGoldProds4
271168    +          +     0.51645804440055 * GRP_MntMeatProducts2
271169    +          +    -0.73677565057958 * GRP_MntMeatProducts3
271170    +          +    -3.38222954402665 * GRP_MntMeatProducts4
271171    +          +    -0.52703533326761 * GRP_MntWines2  +     2.68998648323277 *
271172    +        GRP_MntWines3  +    -1.01553943004578 * GRP_MntWines4
271173    +          +    -0.25257542492254 * GRP_NumCatalogPurchases3
271174    +          +     0.92868654767551 * GRP_NumCatalogPurchases4
271175    +          +    -0.18642581919214 * GRP_NumDistPurchases2
271176    +          +     0.32117397006136 * GRP_NumDistPurchases3
271177    +          +    -0.59059080451748 * GRP_NumDistPurchases4
271178    +          +    -1.05057528699441 * GRP_NumWebPurchases2
271179    +          +    -0.84936431958655 * GRP_NumWebPurchases3
271180    +          +     0.43322339989668 * GRP_NumWebPurchases4
271181    +          +    -0.27462600263662 * GRP_RFMstat2  +    -2.25150384807365 *
271182    +        GRP_RFMstat3  +    -0.00267009939433 * GRP_RFMstat4
271183    +          +     1.27314966261257 * GRP_RMntFrq2  +     0.27127797709217 *
271184    +        GRP_RMntFrq3  +     1.12101959838801 * GRP_RMntFrq4
271185    +          +     0.79686140512362 * GRP_Recency2  +      -3.204314799241 *
271186    +        GRP_Recency3  +    -0.17063922919112 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.84257803770334 * GRP_AcceptedCmp52 + 
-1.76147524199782 * GRP_Frq2 + 0.76968937743693 * GRP_Frq3 + 1.10861276861184 * GRP_Frq4 + 
-2.23247622323833 * GRP_Income2 + -0.30655302009971 * GRP_Income3 + -0.67421319601147 * 
GRP_Income4 + -0.41833926468843 * GRP_Mnt2 + 0.52496961087688 * GRP_Mnt3 + 2.22224381605808 * 
GRP_Mnt4 + 1.90603665409631 * GRP_MntFishProducts2 + -0.68769529687639 * GRP_MntFishProducts3 
+ 0.91046416847697 * GRP_MntFishProducts4 + 1.93581182421904 * GRP_MntGoldProds2 + 
0.00795466624941 * GRP_MntGoldProds3 + -0.22854189252742 * GRP_MntGoldProds4 + 
0.51645804440055 * GRP_MntMeatProducts2 + -0.73677565057958 * GRP_MntMeatProducts3 + 
-3.38222954402665 * GRP_MntMeatProducts4 + -0.52703533326761 * GRP_MntWines2 + 
2.68998648323277 * GRP_MntWines3 + -1.01553943004578 * GRP_MntWines4 + -0.25257542492254 * 
GRP_NumCatalogPurchases3 + 0.92868654767551 * GRP_NumCatalogPurchases4 + -0.18642581919214 * 
GRP_NumDistPurchases2 + 0.32117397006136 * GRP_NumDistPurchases3 + -0.59059080451748 * 
GRP_NumDistPurchases4 + -1.05057528699441 * GRP_NumWebPurchases2 + -0.84936431958655 * 
GRP_NumWebPurchases3 + 0.43322339989668 * GRP_NumWebPurchases4 + -0.27462600263662 * 
GRP_RFMstat2 + -2.25150384807365 * GRP_RFMstat3 + -0.00267009939433 * GRP_RFMstat4 + 
1.27314966261257 * GRP_RMntFrq2 + 0.27127797709217 * GRP_RMntFrq3 + 1.12101959838801 * 
GRP_RMntFrq4 + 0.79686140512362 * GRP_Recency2 + -3.204314799241 * GRP_Recency3 + 
-0.17063922919112 * GRP_Recency4 ;
271187    +   H1x2_3  = H1x2_3  +     0.61950412844712 * GRP_AcceptedCmp52
271188    +          +     0.65265389665714 * GRP_Frq2  +     0.12876759740294 * GRP_Frq3
271189    +          +    -0.38017417695108 * GRP_Frq4  +    -0.54457623826836 *
271190    +        GRP_Income2  +     2.06545795697617 * GRP_Income3
271191    +          +     -0.2725653040132 * GRP_Income4  +     0.59334688450758 *
271192    +        GRP_Mnt2  +    -2.75668429292834 * GRP_Mnt3  +    -0.19086776143213 *
271193    +        GRP_Mnt4  +     -3.7490211951959 * GRP_MntFishProducts2
271194    +          +     -0.2747383185488 * GRP_MntFishProducts3
271195    +          +     0.05699547232616 * GRP_MntFishProducts4
271196    +          +     1.78340082221807 * GRP_MntGoldProds2
271197    +          +    -0.21272258173805 * GRP_MntGoldProds3
271198    +          +    -0.63881612523162 * GRP_MntGoldProds4
271199    +          +     0.35743242018534 * GRP_MntMeatProducts2
271200    +          +     0.39288166088974 * GRP_MntMeatProducts3
271201    +          +     0.68623350973697 * GRP_MntMeatProducts4
271202    +          +    -1.04284335042439 * GRP_MntWines2  +    -0.97636647224011 *
271203    +        GRP_MntWines3  +    -1.75436887389742 * GRP_MntWines4
271204    +          +     0.38349558810511 * GRP_NumCatalogPurchases3
271205    +          +     0.94944817324412 * GRP_NumCatalogPurchases4
271206    +          +     0.87924710032772 * GRP_NumDistPurchases2
271207    +          +     0.54658799433949 * GRP_NumDistPurchases3
271208    +          +     1.85594529989185 * GRP_NumDistPurchases4
271209    +          +    -0.66471569231333 * GRP_NumWebPurchases2
271210    +          +    -0.59461900037355 * GRP_NumWebPurchases3
271211    +          +     0.12806083458682 * GRP_NumWebPurchases4
271212    +          +    -0.75799558259662 * GRP_RFMstat2  +     1.03472328046295 *
271213    +        GRP_RFMstat3  +     0.35460394964665 * GRP_RFMstat4
271214    +          +     2.35757770027854 * GRP_RMntFrq2  +    -1.60760048151685 *
271215    +        GRP_RMntFrq3  +       1.734911990241 * GRP_RMntFrq4
271216    +          +    -0.50983934759213 * GRP_Recency2  +     1.22056684902473 *
271217    +        GRP_Recency3  +    -0.53617918353506 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.61950412844712 * GRP_AcceptedCmp52 + 
0.65265389665714 * GRP_Frq2 + 0.12876759740294 * GRP_Frq3 + -0.38017417695108 * GRP_Frq4 + 
-0.54457623826836 * GRP_Income2 + 2.06545795697617 * GRP_Income3 + -0.2725653040132 * 
GRP_Income4 + 0.59334688450758 * GRP_Mnt2 + -2.75668429292834 * GRP_Mnt3 + -0.19086776143213 * 
GRP_Mnt4 + -3.7490211951959 * GRP_MntFishProducts2 + -0.2747383185488 * GRP_MntFishProducts3 + 
0.05699547232616 * GRP_MntFishProducts4 + 1.78340082221807 * GRP_MntGoldProds2 + 
-0.21272258173805 * GRP_MntGoldProds3 + -0.63881612523162 * GRP_MntGoldProds4 + 
0.35743242018534 * GRP_MntMeatProducts2 + 0.39288166088974 * GRP_MntMeatProducts3 + 
0.68623350973697 * GRP_MntMeatProducts4 + -1.04284335042439 * GRP_MntWines2 + 
-0.97636647224011 * GRP_MntWines3 + -1.75436887389742 * GRP_MntWines4 + 0.38349558810511 * 
GRP_NumCatalogPurchases3 + 0.94944817324412 * GRP_NumCatalogPurchases4 + 0.87924710032772 * 
GRP_NumDistPurchases2 + 0.54658799433949 * GRP_NumDistPurchases3 + 1.85594529989185 * 
GRP_NumDistPurchases4 + -0.66471569231333 * GRP_NumWebPurchases2 + -0.59461900037355 * 
GRP_NumWebPurchases3 + 0.12806083458682 * GRP_NumWebPurchases4 + -0.75799558259662 * 
GRP_RFMstat2 + 1.03472328046295 * GRP_RFMstat3 + 0.35460394964665 * GRP_RFMstat4 + 
2.35757770027854 * GRP_RMntFrq2 + -1.60760048151685 * GRP_RMntFrq3 + 1.734911990241 * 
GRP_RMntFrq4 + -0.50983934759213 * GRP_Recency2 + 1.22056684902473 * GRP_Recency3 + 
-0.53617918353506 * GRP_Recency4 ;
271218    +   H1x2_4  = H1x2_4  +     1.26170976978884 * GRP_AcceptedCmp52
271219    +          +    -0.32711952545891 * GRP_Frq2  +    -1.19397195692697 * GRP_Frq3
271220    +          +    -1.91237681986457 * GRP_Frq4  +    -0.79449068445985 *
271221    +        GRP_Income2  +    -1.22812902448096 * GRP_Income3
271222    +          +     0.34997306488077 * GRP_Income4  +     0.97887573619442 *
271223    +        GRP_Mnt2  +    -0.47207479147139 * GRP_Mnt3  +    -0.72610866749196 *
271224    +        GRP_Mnt4  +    -1.02568945709262 * GRP_MntFishProducts2
271225    +          +    -0.50962348735329 * GRP_MntFishProducts3
271226    +          +    -1.75841654964734 * GRP_MntFishProducts4
271227    +          +     2.14839745385174 * GRP_MntGoldProds2
271228    +          +      2.4716387157729 * GRP_MntGoldProds3
271229    +          +     0.61286996367418 * GRP_MntGoldProds4
271230    +          +     1.45427097683349 * GRP_MntMeatProducts2
271231    +          +    -0.34990206215878 * GRP_MntMeatProducts3
271232    +          +     2.25284175811484 * GRP_MntMeatProducts4
271233    +          +      0.9855268124051 * GRP_MntWines2  +    -0.12203915234087 *
271234    +        GRP_MntWines3  +     0.25102207151836 * GRP_MntWines4
271235    +          +     1.02272173939472 * GRP_NumCatalogPurchases3
271236    +          +    -0.86507841983648 * GRP_NumCatalogPurchases4
271237    +          +    -0.44080685652484 * GRP_NumDistPurchases2
271238    +          +     2.40613428385819 * GRP_NumDistPurchases3
271239    +          +     0.26317801067025 * GRP_NumDistPurchases4
271240    +          +     2.34961138802546 * GRP_NumWebPurchases2
271241    +          +     2.35826990005342 * GRP_NumWebPurchases3
271242    +          +     0.18496434892584 * GRP_NumWebPurchases4
271243    +          +     1.79795147677472 * GRP_RFMstat2  +     0.58420175726653 *
271244    +        GRP_RFMstat3  +    -1.31222644039147 * GRP_RFMstat4
271245    +          +    -0.47605088519028 * GRP_RMntFrq2  +    -1.93444600786423 *
271246    +        GRP_RMntFrq3  +    -1.73270719079454 * GRP_RMntFrq4
271247    +          +    -0.07465628796168 * GRP_Recency2  +     0.39933484299815 *
271248    +        GRP_Recency3  +     1.24718444803263 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 1.26170976978884 * GRP_AcceptedCmp52 + 
-0.32711952545891 * GRP_Frq2 + -1.19397195692697 * GRP_Frq3 + -1.91237681986457 * GRP_Frq4 + 
-0.79449068445985 * GRP_Income2 + -1.22812902448096 * GRP_Income3 + 0.34997306488077 * 
GRP_Income4 + 0.97887573619442 * GRP_Mnt2 + -0.47207479147139 * GRP_Mnt3 + -0.72610866749196 * 
GRP_Mnt4 + -1.02568945709262 * GRP_MntFishProducts2 + -0.50962348735329 * GRP_MntFishProducts3 
+ -1.75841654964734 * GRP_MntFishProducts4 + 2.14839745385174 * GRP_MntGoldProds2 + 
2.4716387157729 * GRP_MntGoldProds3 + 0.61286996367418 * GRP_MntGoldProds4 + 1.45427097683349 
* GRP_MntMeatProducts2 + -0.34990206215878 * GRP_MntMeatProducts3 + 2.25284175811484 * 
GRP_MntMeatProducts4 + 0.9855268124051 * GRP_MntWines2 + -0.12203915234087 * GRP_MntWines3 + 
0.25102207151836 * GRP_MntWines4 + 1.02272173939472 * GRP_NumCatalogPurchases3 + 
-0.86507841983648 * GRP_NumCatalogPurchases4 + -0.44080685652484 * GRP_NumDistPurchases2 + 
2.40613428385819 * GRP_NumDistPurchases3 + 0.26317801067025 * GRP_NumDistPurchases4 + 
2.34961138802546 * GRP_NumWebPurchases2 + 2.35826990005342 * GRP_NumWebPurchases3 + 
0.18496434892584 * GRP_NumWebPurchases4 + 1.79795147677472 * GRP_RFMstat2 + 0.58420175726653 * 
GRP_RFMstat3 + -1.31222644039147 * GRP_RFMstat4 + -0.47605088519028 * GRP_RMntFrq2 + 
-1.93444600786423 * GRP_RMntFrq3 + -1.73270719079454 * GRP_RMntFrq4 + -0.07465628796168 * 
GRP_Recency2 + 0.39933484299815 * GRP_Recency3 + 1.24718444803263 * GRP_Recency4 ;
271249    +   H1x2_5  = H1x2_5  +     0.87459488954875 * GRP_AcceptedCmp52
271250    +          +    -0.84011640362753 * GRP_Frq2  +     0.77937376717729 * GRP_Frq3
271251    +          +    -1.82978666358622 * GRP_Frq4  +    -0.03003575117499 *
271252    +        GRP_Income2  +    -0.09211385255865 * GRP_Income3
271253    +          +    -1.94207051248492 * GRP_Income4  +     0.73641935783417 *
271254    +        GRP_Mnt2  +      -0.495669562808 * GRP_Mnt3  +    -0.04058774225968 *
271255    +        GRP_Mnt4  +     1.81606017533935 * GRP_MntFishProducts2
271256    +          +     -2.3817205567109 * GRP_MntFishProducts3
271257    +          +      1.4356293091772 * GRP_MntFishProducts4
271258    +          +    -1.03209023546079 * GRP_MntGoldProds2
271259    +          +     1.93949728331263 * GRP_MntGoldProds3
271260    +          +     0.44849194130528 * GRP_MntGoldProds4
271261    +          +     1.34973896956794 * GRP_MntMeatProducts2
271262    +          +     1.40989126474294 * GRP_MntMeatProducts3
271263    +          +     0.74435387703611 * GRP_MntMeatProducts4
271264    +          +     0.94293940682329 * GRP_MntWines2  +     0.71988830572011 *
271265    +        GRP_MntWines3  +     0.43603082498929 * GRP_MntWines4
271266    +          +     1.65449574071289 * GRP_NumCatalogPurchases3
271267    +          +    -0.66380394478337 * GRP_NumCatalogPurchases4
271268    +          +    -0.76749528874396 * GRP_NumDistPurchases2
271269    +          +     1.83370965910825 * GRP_NumDistPurchases3
271270    +          +    -0.73709156569506 * GRP_NumDistPurchases4
271271    +          +     0.09215124428658 * GRP_NumWebPurchases2
271272    +          +      1.0403096068891 * GRP_NumWebPurchases3
271273    +          +     0.59317560741224 * GRP_NumWebPurchases4
271274    +          +     1.75844403152209 * GRP_RFMstat2  +     -0.8733964014922 *
271275    +        GRP_RFMstat3  +    -0.76258024821499 * GRP_RFMstat4
271276    +          +    -1.62335267331435 * GRP_RMntFrq2  +     0.16774877520829 *
271277    +        GRP_RMntFrq3  +    -0.59672894733807 * GRP_RMntFrq4
271278    +          +     -0.1207352636629 * GRP_Recency2  +    -3.91419195768202 *
271279    +        GRP_Recency3  +    -1.81688897411428 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.87459488954875 * GRP_AcceptedCmp52 + 
-0.84011640362753 * GRP_Frq2 + 0.77937376717729 * GRP_Frq3 + -1.82978666358622 * GRP_Frq4 + 
-0.03003575117499 * GRP_Income2 + -0.09211385255865 * GRP_Income3 + -1.94207051248492 * 
GRP_Income4 + 0.73641935783417 * GRP_Mnt2 + -0.495669562808 * GRP_Mnt3 + -0.04058774225968 * 
GRP_Mnt4 + 1.81606017533935 * GRP_MntFishProducts2 + -2.3817205567109 * GRP_MntFishProducts3 + 
1.4356293091772 * GRP_MntFishProducts4 + -1.03209023546079 * GRP_MntGoldProds2 + 
1.93949728331263 * GRP_MntGoldProds3 + 0.44849194130528 * GRP_MntGoldProds4 + 1.34973896956794 
* GRP_MntMeatProducts2 + 1.40989126474294 * GRP_MntMeatProducts3 + 0.74435387703611 * 
GRP_MntMeatProducts4 + 0.94293940682329 * GRP_MntWines2 + 0.71988830572011 * GRP_MntWines3 + 
0.43603082498929 * GRP_MntWines4 + 1.65449574071289 * GRP_NumCatalogPurchases3 + 
-0.66380394478337 * GRP_NumCatalogPurchases4 + -0.76749528874396 * GRP_NumDistPurchases2 + 
1.83370965910825 * GRP_NumDistPurchases3 + -0.73709156569506 * GRP_NumDistPurchases4 + 
0.09215124428658 * GRP_NumWebPurchases2 + 1.0403096068891 * GRP_NumWebPurchases3 + 
0.59317560741224 * GRP_NumWebPurchases4 + 1.75844403152209 * GRP_RFMstat2 + -0.8733964014922 * 
GRP_RFMstat3 + -0.76258024821499 * GRP_RFMstat4 + -1.62335267331435 * GRP_RMntFrq2 + 
0.16774877520829 * GRP_RMntFrq3 + -0.59672894733807 * GRP_RMntFrq4 + -0.1207352636629 * 
GRP_Recency2 + -3.91419195768202 * GRP_Recency3 + -1.81688897411428 * GRP_Recency4 ;
271280    +   H1x2_1  =     0.53421261957097 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.53421261957097 + H1x2_1 ;
271281    +   H1x2_2  =     0.61690490910033 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.61690490910033 + H1x2_2 ;
271282    +   H1x2_3  =    -1.82311183459857 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -1.82311183459857 + H1x2_3 ;
271283    +   H1x2_4  =    -0.21816223161936 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.21816223161936 + H1x2_4 ;
271284    +   H1x2_5  =     -0.4592254459549 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.4592254459549 + H1x2_5 ;
271285    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
271286    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
271287    +   H1x2_1  = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
271288    +   H1x2_2  = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_2 = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
271289    +   H1x2_3  = 1.0 / (1.0 + EXP(MIN( - H1x2_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_3 = 1.0 / (1.0 + EXP(MIN( - H1x2_3 , _EXP_BAR)));
271290    +   H1x2_4  = 1.0 / (1.0 + EXP(MIN( - H1x2_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_4 = 1.0 / (1.0 + EXP(MIN( - H1x2_4 , _EXP_BAR)));
271291    +   H1x2_5  = 1.0 / (1.0 + EXP(MIN( - H1x2_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.0 / (1.0 + EXP(MIN( - H1x2_5 , _EXP_BAR)));
271292    +END;
MPRINT(EM_DIAGRAM):   END;
271293    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
271294    +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
271295    +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
271296    +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
271297    +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
271298    +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
271299    +END;
MPRINT(EM_DIAGRAM):   END;
271300    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
271301    +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
271302    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
271303    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
271304    +   H2x1_1  =    -0.10131311732967 * H1x1_1  +     2.09604760546585 * H1x1_2
271305    +          +     0.75964449684316 * H1x1_3  +    -3.05899403391852 * H1x1_4
271306    +          +    -2.64491525760726 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -0.10131311732967 * H1x1_1 + 2.09604760546585 * H1x1_2 + 
0.75964449684316 * H1x1_3 + -3.05899403391852 * H1x1_4 + -2.64491525760726 * H1x1_5 ;
271307    +   H2x1_2  =     2.09816176126174 * H1x1_1  +     -2.7170504295107 * H1x1_2
271308    +          +    -4.28573382707654 * H1x1_3  +     -0.4124455577826 * H1x1_4
271309    +          +    -1.74219234169061 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 2.09816176126174 * H1x1_1 + -2.7170504295107 * H1x1_2 + 
-4.28573382707654 * H1x1_3 + -0.4124455577826 * H1x1_4 + -1.74219234169061 * H1x1_5 ;
271310    +   H2x1_3  =     -0.0908396989213 * H1x1_1  +    -2.13315935484498 * H1x1_2
271311    +          +      -0.041102734605 * H1x1_3  +     0.44906302354183 * H1x1_4
271312    +          +     2.22045400368613 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -0.0908396989213 * H1x1_1 + -2.13315935484498 * H1x1_2 + 
-0.041102734605 * H1x1_3 + 0.44906302354183 * H1x1_4 + 2.22045400368613 * H1x1_5 ;
271313    +   H2x1_4  =    -3.59138952025597 * H1x1_1  +     1.29340469653348 * H1x1_2
271314    +          +       1.689672422487 * H1x1_3  +    -2.31797692991787 * H1x1_4
271315    +          +    -2.53540958111863 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -3.59138952025597 * H1x1_1 + 1.29340469653348 * H1x1_2 + 
1.689672422487 * H1x1_3 + -2.31797692991787 * H1x1_4 + -2.53540958111863 * H1x1_5 ;
271316    +   H2x1_5  =    -1.20648019467275 * H1x1_1  +      1.9669218225267 * H1x1_2
271317    +          +     2.04494536709697 * H1x1_3  +    -2.33648894116384 * H1x1_4
271318    +          +    -1.60853492956388 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -1.20648019467275 * H1x1_1 + 1.9669218225267 * H1x1_2 + 
2.04494536709697 * H1x1_3 + -2.33648894116384 * H1x1_4 + -1.60853492956388 * H1x1_5 ;
271319    +   H2x1_1  = H2x1_1  +    -1.45345171601353 * H1x2_1
271320    +          +    -0.03179259597665 * H1x2_2  +     -2.9887894366399 * H1x2_3
271321    +          +     0.68029332905711 * H1x2_4  +     0.76926185571867 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -1.45345171601353 * H1x2_1 + -0.03179259597665 * 
H1x2_2 + -2.9887894366399 * H1x2_3 + 0.68029332905711 * H1x2_4 + 0.76926185571867 * H1x2_5 ;
271322    +   H2x1_2  = H2x1_2  +    -1.21280301577117 * H1x2_1
271323    +          +      2.9525914680029 * H1x2_2  +    -0.55393861346072 * H1x2_3
271324    +          +     1.77793175958897 * H1x2_4  +     2.51042321881699 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -1.21280301577117 * H1x2_1 + 2.9525914680029 * H1x2_2 
+ -0.55393861346072 * H1x2_3 + 1.77793175958897 * H1x2_4 + 2.51042321881699 * H1x2_5 ;
271325    +   H2x1_3  = H2x1_3  +     1.57047941405239 * H1x2_1
271326    +          +    -1.31134127121564 * H1x2_2  +      2.1322025881706 * H1x2_3
271327    +          +    -0.61230583564273 * H1x2_4  +     0.14627232119209 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + 1.57047941405239 * H1x2_1 + -1.31134127121564 * H1x2_2 
+ 2.1322025881706 * H1x2_3 + -0.61230583564273 * H1x2_4 + 0.14627232119209 * H1x2_5 ;
271328    +   H2x1_4  = H2x1_4  +    -1.29890984989779 * H1x2_1
271329    +          +    -1.37863865683621 * H1x2_2  +    -0.15093392936569 * H1x2_3
271330    +          +     2.15628991822961 * H1x2_4  +    -0.04564203403522 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + -1.29890984989779 * H1x2_1 + -1.37863865683621 * 
H1x2_2 + -0.15093392936569 * H1x2_3 + 2.15628991822961 * H1x2_4 + -0.04564203403522 * H1x2_5 ;
271331    +   H2x1_5  = H2x1_5  +    -1.82286870874677 * H1x2_1
271332    +          +    -1.06116903038863 * H1x2_2  +    -1.77472301413445 * H1x2_3
271333    +          +     0.17320934910404 * H1x2_4  +    -0.96172965375973 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + -1.82286870874677 * H1x2_1 + -1.06116903038863 * 
H1x2_2 + -1.77472301413445 * H1x2_3 + 0.17320934910404 * H1x2_4 + -0.96172965375973 * H1x2_5 ;
271334    +   H2x1_1  =     0.61260716175728 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 0.61260716175728 + H2x1_1 ;
271335    +   H2x1_2  =    -1.78716565467594 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -1.78716565467594 + H2x1_2 ;
271336    +   H2x1_3  =    -0.88082814085488 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -0.88082814085488 + H2x1_3 ;
271337    +   H2x1_4  =     0.33869525080862 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 0.33869525080862 + H2x1_4 ;
271338    +   H2x1_5  =      2.0506883431914 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = 2.0506883431914 + H2x1_5 ;
271339    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
271340    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
271341    +   H2x1_1  = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
271342    +   H2x1_2  = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
271343    +   H2x1_3  = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
271344    +   H2x1_4  = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
271345    +   H2x1_5  = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_5 = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
271346    +END;
MPRINT(EM_DIAGRAM):   END;
271347    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
271348    +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
271349    +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
271350    +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
271351    +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
271352    +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
271353    +END;
MPRINT(EM_DIAGRAM):   END;
271354    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
271355    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
271356    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
271357    +
271358    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
271359    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
271360    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
271361    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
271362    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
271363    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
271364    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
271365    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
271366    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
271367    +end;
MPRINT(EM_DIAGRAM):   end;
271368    +else do;
MPRINT(EM_DIAGRAM):   else do;
271369    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
271370    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
271371    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
271372    +   end;
MPRINT(EM_DIAGRAM):   end;
271373    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
271374    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
271375    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
271376    +   end;
MPRINT(EM_DIAGRAM):   end;
271377    +   else do;
MPRINT(EM_DIAGRAM):   else do;
271378    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
271379    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
271380    +   end;
MPRINT(EM_DIAGRAM):   end;
271381    +end;
MPRINT(EM_DIAGRAM):   end;
271382    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
271383    +   P_DepVar1  =     5.44508928953974 * H2x1_1  +    -7.80342156600058 * H2x1_2
271384    +          +    -4.34349012782915 * H2x1_3  +     6.80870509597821 * H2x1_4
271385    +          +     5.61199728345116 * H2x1_5 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 5.44508928953974 * H2x1_1 + -7.80342156600058 * H2x1_2 + 
-4.34349012782915 * H2x1_3 + 6.80870509597821 * H2x1_4 + 5.61199728345116 * H2x1_5 ;
271386    +   P_DepVar1  =    -3.84280322129048 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.84280322129048 + P_DepVar1 ;
271387    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
271388    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
271389    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
271390    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
271391    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
271392    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
271393    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
271394    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
271395    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
271396    +END;
MPRINT(EM_DIAGRAM):   END;
271397    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
271398    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
271399    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
271400    +END;
MPRINT(EM_DIAGRAM):   END;
271401    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
271402    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
271403    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
271404    +END;
MPRINT(EM_DIAGRAM):   END;
271405    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
271406    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
271407    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
271408    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
271409    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
271410    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
271411    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
271412    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
271413    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
271414    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
271415    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
271416    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
271417    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
271418    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
271419    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
271420    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
271421    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
271422    +END;
MPRINT(EM_DIAGRAM):   END;
271423    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
271424    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
271425    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
271426    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
271427    +* Renaming variables for AutoNeural20;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural20;
271428    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
271429    +* Renaming Posterior variables for AutoNeural20;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural20;
271430    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
271431    +drop AutoNeural20_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural20_P_DepVar1;
271432    +AutoNeural20_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural20_P_DepVar1 = P_DepVar1;
271433    +drop AutoNeural20_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural20_P_DepVar0;
271434    +AutoNeural20_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural20_P_DepVar0 = P_DepVar0;
271435    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
271436    +* Renaming Into variables for AutoNeural20;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for AutoNeural20;
271437    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
271438    +length AutoNeural20_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length AutoNeural20_I_DepVar $32;
271439    +drop AutoNeural20_I_DepVar;
MPRINT(EM_DIAGRAM):   drop AutoNeural20_I_DepVar;
271440    +AutoNeural20_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   AutoNeural20_I_DepVar = I_DepVar;
271441    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
271442    +* Renaming _WARN_ variable for AutoNeural20;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural20;
271443    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
271444    +length AutoNeural20_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural20_WARN_ $4;
271445    +drop AutoNeural20_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural20_WARN_;
271446    +AutoNeural20_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural20_WARN_ = _WARN_;
271447    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
271448    +* Ensmbl50: Scoring Code of model 5 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl50: Scoring Code of model 5 of 7;
271449    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
271450    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
271451    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
271452    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
271453    +* NODE: AutoNeural26;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural26;
271454    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
271455    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
271456    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
271457    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
271458    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
271459    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
271460    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
271461    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
271462    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
271463    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
271464    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
271465    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
271466    +LENGTH _WARN_ $4
271467    +      F_DepVar  $ 12
271468    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
271469    +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
271470    +
271471    +      label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
MPRINT(EM_DIAGRAM):   label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
271472    +
271473    +      label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
271474    +
271475    +      label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
271476    +
271477    +      label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
271478    +
271479    +      label GRP_Income2 = 'Dummy: GRP_Income=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Income2 = 'Dummy: GRP_Income=2' ;
271480    +
271481    +      label GRP_Income3 = 'Dummy: GRP_Income=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Income3 = 'Dummy: GRP_Income=3' ;
271482    +
271483    +      label GRP_Income4 = 'Dummy: GRP_Income=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Income4 = 'Dummy: GRP_Income=4' ;
271484    +
271485    +      label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
271486    +
271487    +      label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
271488    +
271489    +      label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
271490    +
271491    +      label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
271492    +
271493    +      label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
271494    +
271495    +      label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
271496    +
271497    +      label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
271498    +
271499    +      label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
271500    +
271501    +      label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
271502    +
271503    +      label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
271504    +
271505    +      label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
271506    +
271507    +      label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
271508    +
271509    +      label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
271510    +
271511    +      label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
271512    +
271513    +      label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
271514    +
271515    +      label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
271516    +
271517    +      label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
271518    +
271519    +      label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
271520    +
271521    +      label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
271522    +
271523    +      label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
271524    +
271525    +      label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
271526    +
271527    +      label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
271528    +
271529    +      label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
271530    +
271531    +      label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
271532    +
271533    +      label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
271534    +
271535    +      label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
271536    +
271537    +      label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
271538    +
271539    +      label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
271540    +
271541    +      label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
271542    +
271543    +      label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
271544    +
271545    +      label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
271546    +
271547    +      label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
271548    +
271549    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
271550    +
271551    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
271552    +
271553    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
271554    +
271555    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
271556    +
271557    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
271558    +
271559    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
271560    +
271561    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
271562    +
271563    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
271564    +
271565    +*** Generate dummy variables for GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmp5 ;
271566    +drop GRP_AcceptedCmp52 ;
MPRINT(EM_DIAGRAM):   drop GRP_AcceptedCmp52 ;
271567    +if missing( GRP_AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmp5 ) then do;
271568    +   GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
271569    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
271570    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
271571    +end;
MPRINT(EM_DIAGRAM):   end;
271572    +else do;
MPRINT(EM_DIAGRAM):   else do;
271573    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
271574    +   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
271575    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
271576    +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
271577    +      GRP_AcceptedCmp52 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = 1;
271578    +   end;
MPRINT(EM_DIAGRAM):   end;
271579    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
271580    +      GRP_AcceptedCmp52 = -1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = -1;
271581    +   end;
MPRINT(EM_DIAGRAM):   end;
271582    +   else do;
MPRINT(EM_DIAGRAM):   else do;
271583    +      GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
271584    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
271585    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
271586    +   end;
MPRINT(EM_DIAGRAM):   end;
271587    +end;
MPRINT(EM_DIAGRAM):   end;
271588    +
271589    +*** Generate dummy variables for GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Frq ;
271590    +drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
271591    +if missing( GRP_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Frq ) then do;
271592    +   GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
271593    +   GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
271594    +   GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
271595    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
271596    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
271597    +end;
MPRINT(EM_DIAGRAM):   end;
271598    +else do;
MPRINT(EM_DIAGRAM):   else do;
271599    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
271600    +   _dm12 = put( GRP_Frq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Frq , BEST12. );
271601    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
271602    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
271603    +      GRP_Frq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = -1;
271604    +      GRP_Frq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = -1;
271605    +      GRP_Frq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = -1;
271606    +   end;
MPRINT(EM_DIAGRAM):   end;
271607    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
271608    +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
271609    +      GRP_Frq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 1;
271610    +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
271611    +   end;
MPRINT(EM_DIAGRAM):   end;
271612    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
271613    +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
271614    +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
271615    +      GRP_Frq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 1;
271616    +   end;
MPRINT(EM_DIAGRAM):   end;
271617    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
271618    +      GRP_Frq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 1;
271619    +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
271620    +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
271621    +   end;
MPRINT(EM_DIAGRAM):   end;
271622    +   else do;
MPRINT(EM_DIAGRAM):   else do;
271623    +      GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
271624    +      GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
271625    +      GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
271626    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
271627    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
271628    +   end;
MPRINT(EM_DIAGRAM):   end;
271629    +end;
MPRINT(EM_DIAGRAM):   end;
271630    +
271631    +*** Generate dummy variables for GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Income ;
271632    +drop GRP_Income2 GRP_Income3 GRP_Income4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Income2 GRP_Income3 GRP_Income4 ;
271633    +if missing( GRP_Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Income ) then do;
271634    +   GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
271635    +   GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
271636    +   GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
271637    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
271638    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
271639    +end;
MPRINT(EM_DIAGRAM):   end;
271640    +else do;
MPRINT(EM_DIAGRAM):   else do;
271641    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
271642    +   _dm12 = put( GRP_Income , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Income , BEST12. );
271643    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
271644    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
271645    +      GRP_Income2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = -1;
271646    +      GRP_Income3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = -1;
271647    +      GRP_Income4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = -1;
271648    +   end;
MPRINT(EM_DIAGRAM):   end;
271649    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
271650    +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
271651    +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
271652    +      GRP_Income4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 1;
271653    +   end;
MPRINT(EM_DIAGRAM):   end;
271654    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
271655    +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
271656    +      GRP_Income3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 1;
271657    +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
271658    +   end;
MPRINT(EM_DIAGRAM):   end;
271659    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
271660    +      GRP_Income2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 1;
271661    +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
271662    +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
271663    +   end;
MPRINT(EM_DIAGRAM):   end;
271664    +   else do;
MPRINT(EM_DIAGRAM):   else do;
271665    +      GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
271666    +      GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
271667    +      GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
271668    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
271669    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
271670    +   end;
MPRINT(EM_DIAGRAM):   end;
271671    +end;
MPRINT(EM_DIAGRAM):   end;
271672    +
271673    +*** Generate dummy variables for GRP_Mnt ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Mnt ;
271674    +drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
271675    +if missing( GRP_Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Mnt ) then do;
271676    +   GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
271677    +   GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
271678    +   GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
271679    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
271680    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
271681    +end;
MPRINT(EM_DIAGRAM):   end;
271682    +else do;
MPRINT(EM_DIAGRAM):   else do;
271683    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
271684    +   _dm12 = put( GRP_Mnt , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Mnt , BEST12. );
271685    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
271686    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
271687    +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
271688    +      GRP_Mnt3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 1;
271689    +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
271690    +   end;
MPRINT(EM_DIAGRAM):   end;
271691    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
271692    +      GRP_Mnt2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = -1;
271693    +      GRP_Mnt3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = -1;
271694    +      GRP_Mnt4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = -1;
271695    +   end;
MPRINT(EM_DIAGRAM):   end;
271696    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
271697    +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
271698    +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
271699    +      GRP_Mnt4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 1;
271700    +   end;
MPRINT(EM_DIAGRAM):   end;
271701    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
271702    +      GRP_Mnt2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 1;
271703    +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
271704    +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
271705    +   end;
MPRINT(EM_DIAGRAM):   end;
271706    +   else do;
MPRINT(EM_DIAGRAM):   else do;
271707    +      GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
271708    +      GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
271709    +      GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
271710    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
271711    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
271712    +   end;
MPRINT(EM_DIAGRAM):   end;
271713    +end;
MPRINT(EM_DIAGRAM):   end;
271714    +
271715    +*** Generate dummy variables for GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntFishProducts ;
271716    +drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
271717    +if missing( GRP_MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntFishProducts ) then do;
271718    +   GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
271719    +   GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
271720    +   GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
271721    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
271722    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
271723    +end;
MPRINT(EM_DIAGRAM):   end;
271724    +else do;
MPRINT(EM_DIAGRAM):   else do;
271725    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
271726    +   _dm12 = put( GRP_MntFishProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntFishProducts , BEST12. );
271727    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
271728    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
271729    +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
271730    +      GRP_MntFishProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 1;
271731    +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
271732    +   end;
MPRINT(EM_DIAGRAM):   end;
271733    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
271734    +      GRP_MntFishProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = -1;
271735    +      GRP_MntFishProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = -1;
271736    +      GRP_MntFishProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = -1;
271737    +   end;
MPRINT(EM_DIAGRAM):   end;
271738    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
271739    +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
271740    +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
271741    +      GRP_MntFishProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 1;
271742    +   end;
MPRINT(EM_DIAGRAM):   end;
271743    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
271744    +      GRP_MntFishProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 1;
271745    +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
271746    +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
271747    +   end;
MPRINT(EM_DIAGRAM):   end;
271748    +   else do;
MPRINT(EM_DIAGRAM):   else do;
271749    +      GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
271750    +      GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
271751    +      GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
271752    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
271753    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
271754    +   end;
MPRINT(EM_DIAGRAM):   end;
271755    +end;
MPRINT(EM_DIAGRAM):   end;
271756    +
271757    +*** Generate dummy variables for GRP_MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntGoldProds ;
271758    +drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
271759    +if missing( GRP_MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntGoldProds ) then do;
271760    +   GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
271761    +   GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
271762    +   GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
271763    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
271764    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
271765    +end;
MPRINT(EM_DIAGRAM):   end;
271766    +else do;
MPRINT(EM_DIAGRAM):   else do;
271767    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
271768    +   _dm12 = put( GRP_MntGoldProds , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntGoldProds , BEST12. );
271769    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
271770    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
271771    +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
271772    +      GRP_MntGoldProds3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 1;
271773    +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
271774    +   end;
MPRINT(EM_DIAGRAM):   end;
271775    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
271776    +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
271777    +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
271778    +      GRP_MntGoldProds4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 1;
271779    +   end;
MPRINT(EM_DIAGRAM):   end;
271780    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
271781    +      GRP_MntGoldProds2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = -1;
271782    +      GRP_MntGoldProds3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = -1;
271783    +      GRP_MntGoldProds4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = -1;
271784    +   end;
MPRINT(EM_DIAGRAM):   end;
271785    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
271786    +      GRP_MntGoldProds2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 1;
271787    +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
271788    +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
271789    +   end;
MPRINT(EM_DIAGRAM):   end;
271790    +   else do;
MPRINT(EM_DIAGRAM):   else do;
271791    +      GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
271792    +      GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
271793    +      GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
271794    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
271795    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
271796    +   end;
MPRINT(EM_DIAGRAM):   end;
271797    +end;
MPRINT(EM_DIAGRAM):   end;
271798    +
271799    +*** Generate dummy variables for GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntMeatProducts ;
271800    +drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
271801    +if missing( GRP_MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntMeatProducts ) then do;
271802    +   GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
271803    +   GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
271804    +   GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
271805    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
271806    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
271807    +end;
MPRINT(EM_DIAGRAM):   end;
271808    +else do;
MPRINT(EM_DIAGRAM):   else do;
271809    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
271810    +   _dm12 = put( GRP_MntMeatProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntMeatProducts , BEST12. );
271811    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
271812    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
271813    +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
271814    +      GRP_MntMeatProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 1;
271815    +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
271816    +   end;
MPRINT(EM_DIAGRAM):   end;
271817    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
271818    +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
271819    +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
271820    +      GRP_MntMeatProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 1;
271821    +   end;
MPRINT(EM_DIAGRAM):   end;
271822    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
271823    +      GRP_MntMeatProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = -1;
271824    +      GRP_MntMeatProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = -1;
271825    +      GRP_MntMeatProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = -1;
271826    +   end;
MPRINT(EM_DIAGRAM):   end;
271827    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
271828    +      GRP_MntMeatProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 1;
271829    +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
271830    +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
271831    +   end;
MPRINT(EM_DIAGRAM):   end;
271832    +   else do;
MPRINT(EM_DIAGRAM):   else do;
271833    +      GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
271834    +      GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
271835    +      GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
271836    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
271837    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
271838    +   end;
MPRINT(EM_DIAGRAM):   end;
271839    +end;
MPRINT(EM_DIAGRAM):   end;
271840    +
271841    +*** Generate dummy variables for GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntWines ;
271842    +drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
271843    +if missing( GRP_MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntWines ) then do;
271844    +   GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
271845    +   GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
271846    +   GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
271847    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
271848    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
271849    +end;
MPRINT(EM_DIAGRAM):   end;
271850    +else do;
MPRINT(EM_DIAGRAM):   else do;
271851    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
271852    +   _dm12 = put( GRP_MntWines , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntWines , BEST12. );
271853    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
271854    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
271855    +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
271856    +      GRP_MntWines3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 1;
271857    +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
271858    +   end;
MPRINT(EM_DIAGRAM):   end;
271859    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
271860    +      GRP_MntWines2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = -1;
271861    +      GRP_MntWines3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = -1;
271862    +      GRP_MntWines4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = -1;
271863    +   end;
MPRINT(EM_DIAGRAM):   end;
271864    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
271865    +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
271866    +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
271867    +      GRP_MntWines4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 1;
271868    +   end;
MPRINT(EM_DIAGRAM):   end;
271869    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
271870    +      GRP_MntWines2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 1;
271871    +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
271872    +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
271873    +   end;
MPRINT(EM_DIAGRAM):   end;
271874    +   else do;
MPRINT(EM_DIAGRAM):   else do;
271875    +      GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
271876    +      GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
271877    +      GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
271878    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
271879    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
271880    +   end;
MPRINT(EM_DIAGRAM):   end;
271881    +end;
MPRINT(EM_DIAGRAM):   end;
271882    +
271883    +*** Generate dummy variables for GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumCatalogPurchases ;
271884    +drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
271885    +if missing( GRP_NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumCatalogPurchases ) then do;
271886    +   GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
271887    +   GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
271888    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
271889    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
271890    +end;
MPRINT(EM_DIAGRAM):   end;
271891    +else do;
MPRINT(EM_DIAGRAM):   else do;
271892    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
271893    +   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
271894    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
271895    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
271896    +      GRP_NumCatalogPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 1;
271897    +      GRP_NumCatalogPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 0;
271898    +   end;
MPRINT(EM_DIAGRAM):   end;
271899    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
271900    +      GRP_NumCatalogPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = -1;
271901    +      GRP_NumCatalogPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = -1;
271902    +   end;
MPRINT(EM_DIAGRAM):   end;
271903    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
271904    +      GRP_NumCatalogPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 0;
271905    +      GRP_NumCatalogPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 1;
271906    +   end;
MPRINT(EM_DIAGRAM):   end;
271907    +   else do;
MPRINT(EM_DIAGRAM):   else do;
271908    +      GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
271909    +      GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
271910    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
271911    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
271912    +   end;
MPRINT(EM_DIAGRAM):   end;
271913    +end;
MPRINT(EM_DIAGRAM):   end;
271914    +
271915    +*** Generate dummy variables for GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumDistPurchases ;
271916    +drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
271917    +if missing( GRP_NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumDistPurchases ) then do;
271918    +   GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
271919    +   GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
271920    +   GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
271921    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
271922    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
271923    +end;
MPRINT(EM_DIAGRAM):   end;
271924    +else do;
MPRINT(EM_DIAGRAM):   else do;
271925    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
271926    +   _dm12 = put( GRP_NumDistPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumDistPurchases , BEST12. );
271927    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
271928    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
271929    +      GRP_NumDistPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = -1;
271930    +      GRP_NumDistPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = -1;
271931    +      GRP_NumDistPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = -1;
271932    +   end;
MPRINT(EM_DIAGRAM):   end;
271933    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
271934    +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
271935    +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
271936    +      GRP_NumDistPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 1;
271937    +   end;
MPRINT(EM_DIAGRAM):   end;
271938    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
271939    +      GRP_NumDistPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 1;
271940    +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
271941    +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
271942    +   end;
MPRINT(EM_DIAGRAM):   end;
271943    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
271944    +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
271945    +      GRP_NumDistPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 1;
271946    +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
271947    +   end;
MPRINT(EM_DIAGRAM):   end;
271948    +   else do;
MPRINT(EM_DIAGRAM):   else do;
271949    +      GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
271950    +      GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
271951    +      GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
271952    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
271953    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
271954    +   end;
MPRINT(EM_DIAGRAM):   end;
271955    +end;
MPRINT(EM_DIAGRAM):   end;
271956    +
271957    +*** Generate dummy variables for GRP_NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumWebPurchases ;
271958    +drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
271959    +if missing( GRP_NumWebPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumWebPurchases ) then do;
271960    +   GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
271961    +   GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
271962    +   GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
271963    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
271964    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
271965    +end;
MPRINT(EM_DIAGRAM):   end;
271966    +else do;
MPRINT(EM_DIAGRAM):   else do;
271967    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
271968    +   _dm12 = put( GRP_NumWebPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumWebPurchases , BEST12. );
271969    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
271970    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
271971    +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
271972    +      GRP_NumWebPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 1;
271973    +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
271974    +   end;
MPRINT(EM_DIAGRAM):   end;
271975    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
271976    +      GRP_NumWebPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = -1;
271977    +      GRP_NumWebPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = -1;
271978    +      GRP_NumWebPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = -1;
271979    +   end;
MPRINT(EM_DIAGRAM):   end;
271980    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
271981    +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
271982    +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
271983    +      GRP_NumWebPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 1;
271984    +   end;
MPRINT(EM_DIAGRAM):   end;
271985    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
271986    +      GRP_NumWebPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 1;
271987    +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
271988    +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
271989    +   end;
MPRINT(EM_DIAGRAM):   end;
271990    +   else do;
MPRINT(EM_DIAGRAM):   else do;
271991    +      GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
271992    +      GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
271993    +      GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
271994    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
271995    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
271996    +   end;
MPRINT(EM_DIAGRAM):   end;
271997    +end;
MPRINT(EM_DIAGRAM):   end;
271998    +
271999    +*** Generate dummy variables for GRP_RFMstat ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RFMstat ;
272000    +drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
272001    +if missing( GRP_RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RFMstat ) then do;
272002    +   GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
272003    +   GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
272004    +   GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
272005    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
272006    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
272007    +end;
MPRINT(EM_DIAGRAM):   end;
272008    +else do;
MPRINT(EM_DIAGRAM):   else do;
272009    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
272010    +   _dm12 = put( GRP_RFMstat , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RFMstat , BEST12. );
272011    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
272012    +   if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
272013    +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
272014    +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
272015    +      GRP_RFMstat4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 1;
272016    +   end;
MPRINT(EM_DIAGRAM):   end;
272017    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
272018    +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
272019    +      GRP_RFMstat3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 1;
272020    +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
272021    +   end;
MPRINT(EM_DIAGRAM):   end;
272022    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
272023    +      GRP_RFMstat2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = -1;
272024    +      GRP_RFMstat3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = -1;
272025    +      GRP_RFMstat4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = -1;
272026    +   end;
MPRINT(EM_DIAGRAM):   end;
272027    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
272028    +      GRP_RFMstat2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 1;
272029    +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
272030    +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
272031    +   end;
MPRINT(EM_DIAGRAM):   end;
272032    +   else do;
MPRINT(EM_DIAGRAM):   else do;
272033    +      GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
272034    +      GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
272035    +      GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
272036    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
272037    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
272038    +   end;
MPRINT(EM_DIAGRAM):   end;
272039    +end;
MPRINT(EM_DIAGRAM):   end;
272040    +
272041    +*** Generate dummy variables for GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RMntFrq ;
272042    +drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
272043    +if missing( GRP_RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RMntFrq ) then do;
272044    +   GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
272045    +   GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
272046    +   GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
272047    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
272048    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
272049    +end;
MPRINT(EM_DIAGRAM):   end;
272050    +else do;
MPRINT(EM_DIAGRAM):   else do;
272051    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
272052    +   _dm12 = put( GRP_RMntFrq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RMntFrq , BEST12. );
272053    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
272054    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
272055    +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
272056    +      GRP_RMntFrq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 1;
272057    +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
272058    +   end;
MPRINT(EM_DIAGRAM):   end;
272059    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
272060    +      GRP_RMntFrq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = -1;
272061    +      GRP_RMntFrq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = -1;
272062    +      GRP_RMntFrq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = -1;
272063    +   end;
MPRINT(EM_DIAGRAM):   end;
272064    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
272065    +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
272066    +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
272067    +      GRP_RMntFrq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 1;
272068    +   end;
MPRINT(EM_DIAGRAM):   end;
272069    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
272070    +      GRP_RMntFrq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 1;
272071    +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
272072    +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
272073    +   end;
MPRINT(EM_DIAGRAM):   end;
272074    +   else do;
MPRINT(EM_DIAGRAM):   else do;
272075    +      GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
272076    +      GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
272077    +      GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
272078    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
272079    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
272080    +   end;
MPRINT(EM_DIAGRAM):   end;
272081    +end;
MPRINT(EM_DIAGRAM):   end;
272082    +
272083    +*** Generate dummy variables for GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Recency ;
272084    +drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
272085    +if missing( GRP_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Recency ) then do;
272086    +   GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
272087    +   GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
272088    +   GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
272089    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
272090    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
272091    +end;
MPRINT(EM_DIAGRAM):   end;
272092    +else do;
MPRINT(EM_DIAGRAM):   else do;
272093    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
272094    +   _dm12 = put( GRP_Recency , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Recency , BEST12. );
272095    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
272096    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
272097    +      GRP_Recency2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = -1;
272098    +      GRP_Recency3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = -1;
272099    +      GRP_Recency4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = -1;
272100    +   end;
MPRINT(EM_DIAGRAM):   end;
272101    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
272102    +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
272103    +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
272104    +      GRP_Recency4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 1;
272105    +   end;
MPRINT(EM_DIAGRAM):   end;
272106    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
272107    +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
272108    +      GRP_Recency3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 1;
272109    +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
272110    +   end;
MPRINT(EM_DIAGRAM):   end;
272111    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
272112    +      GRP_Recency2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 1;
272113    +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
272114    +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
272115    +   end;
MPRINT(EM_DIAGRAM):   end;
272116    +   else do;
MPRINT(EM_DIAGRAM):   else do;
272117    +      GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
272118    +      GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
272119    +      GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
272120    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
272121    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
272122    +   end;
MPRINT(EM_DIAGRAM):   end;
272123    +end;
MPRINT(EM_DIAGRAM):   end;
272124    +
272125    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
272126    +*** Checking missing input Interval
272127    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
272128    +
272129    +IF NMISS(
272130    +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Year_Birth ) THEN DO;
272131    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
272132    +
272133    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
272134    +END;
MPRINT(EM_DIAGRAM):   END;
272135    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
272136    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
272137    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
272138    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
272139    +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
272140    +END;
MPRINT(EM_DIAGRAM):   END;
272141    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
272142    +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
272143    +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
272144    +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
272145    +END;
MPRINT(EM_DIAGRAM):   END;
272146    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
272147    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
272148    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
272149    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
272150    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
272151    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
272152    +
272153    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
272154    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
272155    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
272156    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
272157    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
272158    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
272159    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
272160    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
272161    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
272162    +end;
MPRINT(EM_DIAGRAM):   end;
272163    +else do;
MPRINT(EM_DIAGRAM):   else do;
272164    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
272165    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
272166    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
272167    +   end;
MPRINT(EM_DIAGRAM):   end;
272168    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
272169    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
272170    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
272171    +   end;
MPRINT(EM_DIAGRAM):   end;
272172    +   else do;
MPRINT(EM_DIAGRAM):   else do;
272173    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
272174    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
272175    +   end;
MPRINT(EM_DIAGRAM):   end;
272176    +end;
MPRINT(EM_DIAGRAM):   end;
272177    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
272178    +   P_DepVar1  =     0.19741981116929 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.19741981116929 * S_Year_Birth ;
272179    +   P_DepVar1  = P_DepVar1  +    -1.04029441471903 * GRP_AcceptedCmp52
272180    +          +     1.55639377678382 * GRP_Frq2  +     0.31938212279872 * GRP_Frq3
272181    +          +    -0.51953925921981 * GRP_Frq4  +     0.69747847384334 *
272182    +        GRP_Income2  +     0.68377449690467 * GRP_Income3
272183    +          +    -0.69559233910784 * GRP_Income4  +    -0.33403886861179 *
272184    +        GRP_Mnt2  +    -0.23948445463576 * GRP_Mnt3  +     0.22705363969173 *
272185    +        GRP_Mnt4  +      0.5581826092154 * GRP_MntFishProducts2
272186    +          +     0.11895902038445 * GRP_MntFishProducts3
272187    +          +     -0.0194508409368 * GRP_MntFishProducts4
272188    +          +    -0.27172158371684 * GRP_MntGoldProds2
272189    +          +    -0.06617094209943 * GRP_MntGoldProds3
272190    +          +     0.04665050332743 * GRP_MntGoldProds4
272191    +          +    -0.97879858925028 * GRP_MntMeatProducts2
272192    +          +    -0.16953024357929 * GRP_MntMeatProducts3
272193    +          +     0.36702521764699 * GRP_MntMeatProducts4
272194    +          +     0.66896729653839 * GRP_MntWines2  +     0.41828147331708 *
272195    +        GRP_MntWines3  +    -0.39747979825201 * GRP_MntWines4
272196    +          +    -0.78725283014847 * GRP_NumCatalogPurchases3
272197    +          +     0.03702534142798 * GRP_NumCatalogPurchases4
272198    +          +    -1.86131730329435 * GRP_NumDistPurchases2
272199    +          +     -0.1744815262149 * GRP_NumDistPurchases3
272200    +          +     0.29974863559738 * GRP_NumDistPurchases4
272201    +          +     0.08237783693138 * GRP_NumWebPurchases2
272202    +          +     0.08904902237334 * GRP_NumWebPurchases3
272203    +          +     0.01729681908858 * GRP_NumWebPurchases4
272204    +          +    -0.55907537974858 * GRP_RFMstat2  +    -0.19529268587261 *
272205    +        GRP_RFMstat3  +     0.03932842736914 * GRP_RFMstat4
272206    +          +     0.24491355758464 * GRP_RMntFrq2  +     0.27364945694495 *
272207    +        GRP_RMntFrq3  +    -0.64678260362233 * GRP_RMntFrq4
272208    +          +     1.49706726643373 * GRP_Recency2  +     0.20083168709986 *
272209    +        GRP_Recency3  +    -0.57834308365674 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 + -1.04029441471903 * GRP_AcceptedCmp52 + 
1.55639377678382 * GRP_Frq2 + 0.31938212279872 * GRP_Frq3 + -0.51953925921981 * GRP_Frq4 + 
0.69747847384334 * GRP_Income2 + 0.68377449690467 * GRP_Income3 + -0.69559233910784 * 
GRP_Income4 + -0.33403886861179 * GRP_Mnt2 + -0.23948445463576 * GRP_Mnt3 + 0.22705363969173 * 
GRP_Mnt4 + 0.5581826092154 * GRP_MntFishProducts2 + 0.11895902038445 * GRP_MntFishProducts3 + 
-0.0194508409368 * GRP_MntFishProducts4 + -0.27172158371684 * GRP_MntGoldProds2 + 
-0.06617094209943 * GRP_MntGoldProds3 + 0.04665050332743 * GRP_MntGoldProds4 + 
-0.97879858925028 * GRP_MntMeatProducts2 + -0.16953024357929 * GRP_MntMeatProducts3 + 
0.36702521764699 * GRP_MntMeatProducts4 + 0.66896729653839 * GRP_MntWines2 + 0.41828147331708 
* GRP_MntWines3 + -0.39747979825201 * GRP_MntWines4 + -0.78725283014847 * 
GRP_NumCatalogPurchases3 + 0.03702534142798 * GRP_NumCatalogPurchases4 + -1.86131730329435 * 
GRP_NumDistPurchases2 + -0.1744815262149 * GRP_NumDistPurchases3 + 0.29974863559738 * 
GRP_NumDistPurchases4 + 0.08237783693138 * GRP_NumWebPurchases2 + 0.08904902237334 * 
GRP_NumWebPurchases3 + 0.01729681908858 * GRP_NumWebPurchases4 + -0.55907537974858 * 
GRP_RFMstat2 + -0.19529268587261 * GRP_RFMstat3 + 0.03932842736914 * GRP_RFMstat4 + 
0.24491355758464 * GRP_RMntFrq2 + 0.27364945694495 * GRP_RMntFrq3 + -0.64678260362233 * 
GRP_RMntFrq4 + 1.49706726643373 * GRP_Recency2 + 0.20083168709986 * GRP_Recency3 + 
-0.57834308365674 * GRP_Recency4 ;
272210    +   P_DepVar1  =    -1.16466009831369 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.16466009831369 + P_DepVar1 ;
272211    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
272212    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
272213    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
272214    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
272215    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
272216    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
272217    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
272218    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
272219    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
272220    +END;
MPRINT(EM_DIAGRAM):   END;
272221    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
272222    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
272223    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
272224    +END;
MPRINT(EM_DIAGRAM):   END;
272225    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
272226    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
272227    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
272228    +END;
MPRINT(EM_DIAGRAM):   END;
272229    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
272230    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
272231    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
272232    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
272233    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
272234    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
272235    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
272236    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
272237    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
272238    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
272239    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
272240    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
272241    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
272242    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
272243    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
272244    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
272245    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
272246    +END;
MPRINT(EM_DIAGRAM):   END;
272247    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
272248    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
272249    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
272250    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
272251    +* Renaming variables for AutoNeural26;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural26;
272252    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
272253    +* Renaming Posterior variables for AutoNeural26;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural26;
272254    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
272255    +drop AutoNeural26_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural26_P_DepVar1;
272256    +AutoNeural26_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural26_P_DepVar1 = P_DepVar1;
272257    +drop AutoNeural26_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural26_P_DepVar0;
272258    +AutoNeural26_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural26_P_DepVar0 = P_DepVar0;
272259    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
272260    +* Renaming Into variables for AutoNeural26;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for AutoNeural26;
272261    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
272262    +length AutoNeural26_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length AutoNeural26_I_DepVar $32;
272263    +drop AutoNeural26_I_DepVar;
MPRINT(EM_DIAGRAM):   drop AutoNeural26_I_DepVar;
272264    +AutoNeural26_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   AutoNeural26_I_DepVar = I_DepVar;
272265    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
272266    +* Renaming _WARN_ variable for AutoNeural26;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural26;
272267    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
272268    +length AutoNeural26_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural26_WARN_ $4;
272269    +drop AutoNeural26_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural26_WARN_;
272270    +AutoNeural26_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural26_WARN_ = _WARN_;
272271    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
272272    +* Ensmbl50: Scoring Code of model 6 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl50: Scoring Code of model 6 of 7;
272273    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
272274    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
272275    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
272276    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
272277    +* NODE: AutoNeural25;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural25;
272278    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
272279    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
272280    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
272281    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
272282    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
272283    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
272284    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
272285    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
272286    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
272287    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
272288    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
272289    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
272290    +LENGTH _WARN_ $4
272291    +      F_DepVar  $ 12
272292    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
272293    +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
272294    +
272295    +      label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
MPRINT(EM_DIAGRAM):   label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
272296    +
272297    +      label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
272298    +
272299    +      label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
272300    +
272301    +      label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
272302    +
272303    +      label GRP_Income2 = 'Dummy: GRP_Income=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Income2 = 'Dummy: GRP_Income=2' ;
272304    +
272305    +      label GRP_Income3 = 'Dummy: GRP_Income=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Income3 = 'Dummy: GRP_Income=3' ;
272306    +
272307    +      label GRP_Income4 = 'Dummy: GRP_Income=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Income4 = 'Dummy: GRP_Income=4' ;
272308    +
272309    +      label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
272310    +
272311    +      label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
272312    +
272313    +      label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
272314    +
272315    +      label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
272316    +
272317    +      label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
272318    +
272319    +      label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
272320    +
272321    +      label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
272322    +
272323    +      label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
272324    +
272325    +      label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
272326    +
272327    +      label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
272328    +
272329    +      label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
272330    +
272331    +      label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
272332    +
272333    +      label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
272334    +
272335    +      label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
272336    +
272337    +      label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
272338    +
272339    +      label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
272340    +
272341    +      label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
272342    +
272343    +      label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
272344    +
272345    +      label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
272346    +
272347    +      label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
272348    +
272349    +      label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
272350    +
272351    +      label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
272352    +
272353    +      label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
272354    +
272355    +      label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
272356    +
272357    +      label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
272358    +
272359    +      label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
272360    +
272361    +      label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
272362    +
272363    +      label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
272364    +
272365    +      label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
272366    +
272367    +      label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
272368    +
272369    +      label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
272370    +
272371    +      label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
272372    +
272373    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
272374    +
272375    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
272376    +
272377    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
272378    +
272379    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
272380    +
272381    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
272382    +
272383    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
272384    +
272385    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
272386    +
272387    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
272388    +
272389    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
272390    +
272391    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
272392    +
272393    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
272394    +
272395    +*** Generate dummy variables for GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmp5 ;
272396    +drop GRP_AcceptedCmp52 ;
MPRINT(EM_DIAGRAM):   drop GRP_AcceptedCmp52 ;
272397    +if missing( GRP_AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmp5 ) then do;
272398    +   GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
272399    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
272400    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
272401    +end;
MPRINT(EM_DIAGRAM):   end;
272402    +else do;
MPRINT(EM_DIAGRAM):   else do;
272403    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
272404    +   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
272405    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
272406    +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
272407    +      GRP_AcceptedCmp52 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = 1;
272408    +   end;
MPRINT(EM_DIAGRAM):   end;
272409    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
272410    +      GRP_AcceptedCmp52 = -1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = -1;
272411    +   end;
MPRINT(EM_DIAGRAM):   end;
272412    +   else do;
MPRINT(EM_DIAGRAM):   else do;
272413    +      GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
272414    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
272415    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
272416    +   end;
MPRINT(EM_DIAGRAM):   end;
272417    +end;
The SAS System

MPRINT(EM_DIAGRAM):   end;
272418    +
272419    +*** Generate dummy variables for GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Frq ;
272420    +drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
272421    +if missing( GRP_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Frq ) then do;
272422    +   GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
272423    +   GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
272424    +   GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
272425    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
272426    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
272427    +end;
MPRINT(EM_DIAGRAM):   end;
272428    +else do;
MPRINT(EM_DIAGRAM):   else do;
272429    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
272430    +   _dm12 = put( GRP_Frq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Frq , BEST12. );
272431    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
272432    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
272433    +      GRP_Frq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = -1;
272434    +      GRP_Frq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = -1;
272435    +      GRP_Frq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = -1;
272436    +   end;
MPRINT(EM_DIAGRAM):   end;
272437    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
272438    +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
272439    +      GRP_Frq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 1;
272440    +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
272441    +   end;
MPRINT(EM_DIAGRAM):   end;
272442    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
272443    +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
272444    +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
272445    +      GRP_Frq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 1;
272446    +   end;
MPRINT(EM_DIAGRAM):   end;
272447    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
272448    +      GRP_Frq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 1;
272449    +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
272450    +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
272451    +   end;
MPRINT(EM_DIAGRAM):   end;
272452    +   else do;
MPRINT(EM_DIAGRAM):   else do;
272453    +      GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
272454    +      GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
272455    +      GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
272456    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
272457    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
272458    +   end;
MPRINT(EM_DIAGRAM):   end;
272459    +end;
MPRINT(EM_DIAGRAM):   end;
272460    +
272461    +*** Generate dummy variables for GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Income ;
272462    +drop GRP_Income2 GRP_Income3 GRP_Income4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Income2 GRP_Income3 GRP_Income4 ;
272463    +if missing( GRP_Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Income ) then do;
272464    +   GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
272465    +   GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
272466    +   GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
272467    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
272468    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
272469    +end;
MPRINT(EM_DIAGRAM):   end;
272470    +else do;
MPRINT(EM_DIAGRAM):   else do;
272471    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
272472    +   _dm12 = put( GRP_Income , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Income , BEST12. );
272473    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
272474    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
272475    +      GRP_Income2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = -1;
272476    +      GRP_Income3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = -1;
272477    +      GRP_Income4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = -1;
272478    +   end;
MPRINT(EM_DIAGRAM):   end;
272479    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
272480    +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
272481    +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
272482    +      GRP_Income4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 1;
272483    +   end;
MPRINT(EM_DIAGRAM):   end;
272484    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
272485    +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
272486    +      GRP_Income3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 1;
272487    +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
272488    +   end;
MPRINT(EM_DIAGRAM):   end;
272489    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
272490    +      GRP_Income2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 1;
272491    +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
272492    +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
272493    +   end;
MPRINT(EM_DIAGRAM):   end;
272494    +   else do;
MPRINT(EM_DIAGRAM):   else do;
272495    +      GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
272496    +      GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
272497    +      GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
272498    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
272499    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
272500    +   end;
MPRINT(EM_DIAGRAM):   end;
272501    +end;
MPRINT(EM_DIAGRAM):   end;
272502    +
272503    +*** Generate dummy variables for GRP_Mnt ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Mnt ;
272504    +drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
272505    +if missing( GRP_Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Mnt ) then do;
272506    +   GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
272507    +   GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
272508    +   GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
272509    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
272510    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
272511    +end;
MPRINT(EM_DIAGRAM):   end;
272512    +else do;
MPRINT(EM_DIAGRAM):   else do;
272513    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
272514    +   _dm12 = put( GRP_Mnt , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Mnt , BEST12. );
272515    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
272516    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
272517    +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
272518    +      GRP_Mnt3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 1;
272519    +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
272520    +   end;
MPRINT(EM_DIAGRAM):   end;
272521    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
272522    +      GRP_Mnt2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = -1;
272523    +      GRP_Mnt3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = -1;
272524    +      GRP_Mnt4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = -1;
272525    +   end;
MPRINT(EM_DIAGRAM):   end;
272526    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
272527    +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
272528    +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
272529    +      GRP_Mnt4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 1;
272530    +   end;
MPRINT(EM_DIAGRAM):   end;
272531    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
272532    +      GRP_Mnt2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 1;
272533    +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
272534    +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
272535    +   end;
MPRINT(EM_DIAGRAM):   end;
272536    +   else do;
MPRINT(EM_DIAGRAM):   else do;
272537    +      GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
272538    +      GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
272539    +      GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
272540    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
272541    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
272542    +   end;
MPRINT(EM_DIAGRAM):   end;
272543    +end;
MPRINT(EM_DIAGRAM):   end;
272544    +
272545    +*** Generate dummy variables for GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntFishProducts ;
272546    +drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
272547    +if missing( GRP_MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntFishProducts ) then do;
272548    +   GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
272549    +   GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
272550    +   GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
272551    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
272552    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
272553    +end;
MPRINT(EM_DIAGRAM):   end;
272554    +else do;
MPRINT(EM_DIAGRAM):   else do;
272555    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
272556    +   _dm12 = put( GRP_MntFishProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntFishProducts , BEST12. );
272557    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
272558    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
272559    +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
272560    +      GRP_MntFishProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 1;
272561    +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
272562    +   end;
MPRINT(EM_DIAGRAM):   end;
272563    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
272564    +      GRP_MntFishProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = -1;
272565    +      GRP_MntFishProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = -1;
272566    +      GRP_MntFishProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = -1;
272567    +   end;
MPRINT(EM_DIAGRAM):   end;
272568    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
272569    +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
272570    +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
272571    +      GRP_MntFishProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 1;
272572    +   end;
MPRINT(EM_DIAGRAM):   end;
272573    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
272574    +      GRP_MntFishProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 1;
272575    +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
272576    +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
272577    +   end;
MPRINT(EM_DIAGRAM):   end;
272578    +   else do;
MPRINT(EM_DIAGRAM):   else do;
272579    +      GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
272580    +      GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
272581    +      GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
272582    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
272583    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
272584    +   end;
MPRINT(EM_DIAGRAM):   end;
272585    +end;
MPRINT(EM_DIAGRAM):   end;
272586    +
272587    +*** Generate dummy variables for GRP_MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntGoldProds ;
272588    +drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
272589    +if missing( GRP_MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntGoldProds ) then do;
272590    +   GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
272591    +   GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
272592    +   GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
272593    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
272594    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
272595    +end;
MPRINT(EM_DIAGRAM):   end;
272596    +else do;
MPRINT(EM_DIAGRAM):   else do;
272597    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
272598    +   _dm12 = put( GRP_MntGoldProds , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntGoldProds , BEST12. );
272599    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
272600    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
272601    +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
272602    +      GRP_MntGoldProds3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 1;
272603    +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
272604    +   end;
MPRINT(EM_DIAGRAM):   end;
272605    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
272606    +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
272607    +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
272608    +      GRP_MntGoldProds4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 1;
272609    +   end;
MPRINT(EM_DIAGRAM):   end;
272610    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
272611    +      GRP_MntGoldProds2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = -1;
272612    +      GRP_MntGoldProds3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = -1;
272613    +      GRP_MntGoldProds4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = -1;
272614    +   end;
MPRINT(EM_DIAGRAM):   end;
272615    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
272616    +      GRP_MntGoldProds2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 1;
272617    +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
272618    +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
272619    +   end;
MPRINT(EM_DIAGRAM):   end;
272620    +   else do;
MPRINT(EM_DIAGRAM):   else do;
272621    +      GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
272622    +      GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
272623    +      GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
272624    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
272625    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
272626    +   end;
MPRINT(EM_DIAGRAM):   end;
272627    +end;
MPRINT(EM_DIAGRAM):   end;
272628    +
272629    +*** Generate dummy variables for GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntMeatProducts ;
272630    +drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
272631    +if missing( GRP_MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntMeatProducts ) then do;
272632    +   GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
272633    +   GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
272634    +   GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
272635    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
272636    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
272637    +end;
MPRINT(EM_DIAGRAM):   end;
272638    +else do;
MPRINT(EM_DIAGRAM):   else do;
272639    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
272640    +   _dm12 = put( GRP_MntMeatProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntMeatProducts , BEST12. );
272641    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
272642    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
272643    +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
272644    +      GRP_MntMeatProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 1;
272645    +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
272646    +   end;
MPRINT(EM_DIAGRAM):   end;
272647    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
272648    +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
272649    +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
272650    +      GRP_MntMeatProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 1;
272651    +   end;
MPRINT(EM_DIAGRAM):   end;
272652    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
272653    +      GRP_MntMeatProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = -1;
272654    +      GRP_MntMeatProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = -1;
272655    +      GRP_MntMeatProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = -1;
272656    +   end;
MPRINT(EM_DIAGRAM):   end;
272657    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
272658    +      GRP_MntMeatProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 1;
272659    +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
272660    +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
272661    +   end;
MPRINT(EM_DIAGRAM):   end;
272662    +   else do;
MPRINT(EM_DIAGRAM):   else do;
272663    +      GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
272664    +      GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
272665    +      GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
272666    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
272667    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
272668    +   end;
MPRINT(EM_DIAGRAM):   end;
272669    +end;
MPRINT(EM_DIAGRAM):   end;
272670    +
272671    +*** Generate dummy variables for GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntWines ;
272672    +drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
272673    +if missing( GRP_MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntWines ) then do;
272674    +   GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
272675    +   GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
272676    +   GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
272677    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
272678    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
272679    +end;
MPRINT(EM_DIAGRAM):   end;
272680    +else do;
MPRINT(EM_DIAGRAM):   else do;
272681    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
272682    +   _dm12 = put( GRP_MntWines , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntWines , BEST12. );
272683    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
272684    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
272685    +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
272686    +      GRP_MntWines3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 1;
272687    +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
272688    +   end;
MPRINT(EM_DIAGRAM):   end;
272689    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
272690    +      GRP_MntWines2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = -1;
272691    +      GRP_MntWines3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = -1;
272692    +      GRP_MntWines4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = -1;
272693    +   end;
MPRINT(EM_DIAGRAM):   end;
272694    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
272695    +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
272696    +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
272697    +      GRP_MntWines4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 1;
272698    +   end;
MPRINT(EM_DIAGRAM):   end;
272699    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
272700    +      GRP_MntWines2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 1;
272701    +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
272702    +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
272703    +   end;
MPRINT(EM_DIAGRAM):   end;
272704    +   else do;
MPRINT(EM_DIAGRAM):   else do;
272705    +      GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
272706    +      GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
272707    +      GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
272708    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
272709    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
272710    +   end;
MPRINT(EM_DIAGRAM):   end;
272711    +end;
MPRINT(EM_DIAGRAM):   end;
272712    +
272713    +*** Generate dummy variables for GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumCatalogPurchases ;
272714    +drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
272715    +if missing( GRP_NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumCatalogPurchases ) then do;
272716    +   GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
272717    +   GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
272718    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
272719    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
272720    +end;
MPRINT(EM_DIAGRAM):   end;
272721    +else do;
MPRINT(EM_DIAGRAM):   else do;
272722    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
272723    +   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
272724    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
272725    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
272726    +      GRP_NumCatalogPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 1;
272727    +      GRP_NumCatalogPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 0;
272728    +   end;
MPRINT(EM_DIAGRAM):   end;
272729    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
272730    +      GRP_NumCatalogPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = -1;
272731    +      GRP_NumCatalogPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = -1;
272732    +   end;
MPRINT(EM_DIAGRAM):   end;
272733    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
272734    +      GRP_NumCatalogPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 0;
272735    +      GRP_NumCatalogPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 1;
272736    +   end;
MPRINT(EM_DIAGRAM):   end;
272737    +   else do;
MPRINT(EM_DIAGRAM):   else do;
272738    +      GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
272739    +      GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
272740    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
272741    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
272742    +   end;
MPRINT(EM_DIAGRAM):   end;
272743    +end;
MPRINT(EM_DIAGRAM):   end;
272744    +
272745    +*** Generate dummy variables for GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumDistPurchases ;
272746    +drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
272747    +if missing( GRP_NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumDistPurchases ) then do;
272748    +   GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
272749    +   GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
272750    +   GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
272751    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
272752    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
272753    +end;
MPRINT(EM_DIAGRAM):   end;
272754    +else do;
MPRINT(EM_DIAGRAM):   else do;
272755    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
272756    +   _dm12 = put( GRP_NumDistPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumDistPurchases , BEST12. );
272757    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
272758    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
272759    +      GRP_NumDistPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = -1;
272760    +      GRP_NumDistPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = -1;
272761    +      GRP_NumDistPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = -1;
272762    +   end;
MPRINT(EM_DIAGRAM):   end;
272763    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
272764    +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
272765    +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
272766    +      GRP_NumDistPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 1;
272767    +   end;
MPRINT(EM_DIAGRAM):   end;
272768    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
272769    +      GRP_NumDistPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 1;
272770    +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
272771    +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
272772    +   end;
MPRINT(EM_DIAGRAM):   end;
272773    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
272774    +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
272775    +      GRP_NumDistPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 1;
272776    +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
272777    +   end;
MPRINT(EM_DIAGRAM):   end;
272778    +   else do;
MPRINT(EM_DIAGRAM):   else do;
272779    +      GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
272780    +      GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
272781    +      GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
272782    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
272783    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
272784    +   end;
MPRINT(EM_DIAGRAM):   end;
272785    +end;
MPRINT(EM_DIAGRAM):   end;
272786    +
272787    +*** Generate dummy variables for GRP_NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumWebPurchases ;
272788    +drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
272789    +if missing( GRP_NumWebPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumWebPurchases ) then do;
272790    +   GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
272791    +   GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
272792    +   GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
272793    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
272794    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
272795    +end;
MPRINT(EM_DIAGRAM):   end;
272796    +else do;
MPRINT(EM_DIAGRAM):   else do;
272797    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
272798    +   _dm12 = put( GRP_NumWebPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumWebPurchases , BEST12. );
272799    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
272800    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
272801    +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
272802    +      GRP_NumWebPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 1;
272803    +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
272804    +   end;
MPRINT(EM_DIAGRAM):   end;
272805    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
272806    +      GRP_NumWebPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = -1;
272807    +      GRP_NumWebPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = -1;
272808    +      GRP_NumWebPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = -1;
272809    +   end;
MPRINT(EM_DIAGRAM):   end;
272810    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
272811    +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
272812    +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
272813    +      GRP_NumWebPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 1;
272814    +   end;
MPRINT(EM_DIAGRAM):   end;
272815    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
272816    +      GRP_NumWebPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 1;
272817    +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
272818    +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
272819    +   end;
MPRINT(EM_DIAGRAM):   end;
272820    +   else do;
MPRINT(EM_DIAGRAM):   else do;
272821    +      GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
272822    +      GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
272823    +      GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
272824    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
272825    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
272826    +   end;
MPRINT(EM_DIAGRAM):   end;
272827    +end;
MPRINT(EM_DIAGRAM):   end;
272828    +
272829    +*** Generate dummy variables for GRP_RFMstat ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RFMstat ;
272830    +drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
272831    +if missing( GRP_RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RFMstat ) then do;
272832    +   GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
272833    +   GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
272834    +   GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
272835    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
272836    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
272837    +end;
MPRINT(EM_DIAGRAM):   end;
272838    +else do;
MPRINT(EM_DIAGRAM):   else do;
272839    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
272840    +   _dm12 = put( GRP_RFMstat , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RFMstat , BEST12. );
272841    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
272842    +   if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
272843    +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
272844    +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
272845    +      GRP_RFMstat4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 1;
272846    +   end;
MPRINT(EM_DIAGRAM):   end;
272847    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
272848    +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
272849    +      GRP_RFMstat3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 1;
272850    +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
272851    +   end;
MPRINT(EM_DIAGRAM):   end;
272852    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
272853    +      GRP_RFMstat2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = -1;
272854    +      GRP_RFMstat3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = -1;
272855    +      GRP_RFMstat4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = -1;
272856    +   end;
MPRINT(EM_DIAGRAM):   end;
272857    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
272858    +      GRP_RFMstat2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 1;
272859    +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
272860    +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
272861    +   end;
MPRINT(EM_DIAGRAM):   end;
272862    +   else do;
MPRINT(EM_DIAGRAM):   else do;
272863    +      GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
272864    +      GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
272865    +      GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
272866    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
272867    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
272868    +   end;
MPRINT(EM_DIAGRAM):   end;
272869    +end;
MPRINT(EM_DIAGRAM):   end;
272870    +
272871    +*** Generate dummy variables for GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RMntFrq ;
272872    +drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
272873    +if missing( GRP_RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RMntFrq ) then do;
272874    +   GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
272875    +   GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
272876    +   GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
272877    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
272878    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
272879    +end;
MPRINT(EM_DIAGRAM):   end;
272880    +else do;
MPRINT(EM_DIAGRAM):   else do;
272881    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
272882    +   _dm12 = put( GRP_RMntFrq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RMntFrq , BEST12. );
272883    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
272884    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
272885    +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
272886    +      GRP_RMntFrq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 1;
272887    +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
272888    +   end;
MPRINT(EM_DIAGRAM):   end;
272889    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
272890    +      GRP_RMntFrq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = -1;
272891    +      GRP_RMntFrq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = -1;
272892    +      GRP_RMntFrq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = -1;
272893    +   end;
MPRINT(EM_DIAGRAM):   end;
272894    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
272895    +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
272896    +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
272897    +      GRP_RMntFrq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 1;
272898    +   end;
MPRINT(EM_DIAGRAM):   end;
272899    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
272900    +      GRP_RMntFrq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 1;
272901    +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
272902    +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
272903    +   end;
MPRINT(EM_DIAGRAM):   end;
272904    +   else do;
MPRINT(EM_DIAGRAM):   else do;
272905    +      GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
272906    +      GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
272907    +      GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
272908    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
272909    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
272910    +   end;
MPRINT(EM_DIAGRAM):   end;
272911    +end;
MPRINT(EM_DIAGRAM):   end;
272912    +
272913    +*** Generate dummy variables for GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Recency ;
272914    +drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
272915    +if missing( GRP_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Recency ) then do;
272916    +   GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
272917    +   GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
272918    +   GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
272919    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
272920    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
272921    +end;
MPRINT(EM_DIAGRAM):   end;
272922    +else do;
MPRINT(EM_DIAGRAM):   else do;
272923    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
272924    +   _dm12 = put( GRP_Recency , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Recency , BEST12. );
272925    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
272926    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
272927    +      GRP_Recency2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = -1;
272928    +      GRP_Recency3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = -1;
272929    +      GRP_Recency4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = -1;
272930    +   end;
MPRINT(EM_DIAGRAM):   end;
272931    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
272932    +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
272933    +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
272934    +      GRP_Recency4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 1;
272935    +   end;
MPRINT(EM_DIAGRAM):   end;
272936    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
272937    +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
272938    +      GRP_Recency3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 1;
272939    +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
272940    +   end;
MPRINT(EM_DIAGRAM):   end;
272941    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
272942    +      GRP_Recency2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 1;
272943    +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
272944    +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
272945    +   end;
MPRINT(EM_DIAGRAM):   end;
272946    +   else do;
MPRINT(EM_DIAGRAM):   else do;
272947    +      GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
272948    +      GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
272949    +      GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
272950    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
272951    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
272952    +   end;
MPRINT(EM_DIAGRAM):   end;
272953    +end;
MPRINT(EM_DIAGRAM):   end;
272954    +
272955    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
272956    +*** Checking missing input Interval
272957    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
272958    +
272959    +IF NMISS(
272960    +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Year_Birth ) THEN DO;
272961    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
272962    +
272963    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
272964    +END;
MPRINT(EM_DIAGRAM):   END;
272965    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
272966    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
272967    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
272968    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
272969    +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
272970    +END;
MPRINT(EM_DIAGRAM):   END;
272971    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
272972    +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
272973    +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
272974    +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
272975    +END;
MPRINT(EM_DIAGRAM):   END;
272976    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
272977    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
272978    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
272979    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
272980    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
272981    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
272982    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
272983    +   H1x1_1  =     0.38021638611764 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.38021638611764 * S_Year_Birth ;
272984    +   H1x1_2  =      -1.088276895346 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -1.088276895346 * S_Year_Birth ;
272985    +   H1x1_3  =    -0.21044864474556 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.21044864474556 * S_Year_Birth ;
272986    +   H1x1_1  = H1x1_1  +    -1.19598236721657 * GRP_AcceptedCmp52
272987    +          +     0.89556920543007 * GRP_Frq2  +    -1.28633632438875 * GRP_Frq3
272988    +          +     1.09957277812081 * GRP_Frq4  +     1.66129248688789 *
272989    +        GRP_Income2  +    -0.02208859809261 * GRP_Income3
272990    +          +     0.13742442233856 * GRP_Income4  +     -0.8762617114278 *
272991    +        GRP_Mnt2  +     0.14483268386758 * GRP_Mnt3  +     1.46115917633769 *
272992    +        GRP_Mnt4  +     -0.6421408902491 * GRP_MntFishProducts2
272993    +          +      0.1128138472044 * GRP_MntFishProducts3
272994    +          +     1.21562636748698 * GRP_MntFishProducts4
272995    +          +     0.97422300880066 * GRP_MntGoldProds2
272996    +          +    -0.78007036389535 * GRP_MntGoldProds3
272997    +          +    -0.13814365615145 * GRP_MntGoldProds4
272998    +          +     1.35693955555286 * GRP_MntMeatProducts2
272999    +          +    -0.27598973191035 * GRP_MntMeatProducts3
273000    +          +     0.24526165671667 * GRP_MntMeatProducts4
273001    +          +    -2.07253692193163 * GRP_MntWines2  +    -0.82406684176795 *
273002    +        GRP_MntWines3  +     1.33606527822464 * GRP_MntWines4
273003    +          +    -1.54679770016919 * GRP_NumCatalogPurchases3
273004    +          +    -2.28037541698712 * GRP_NumCatalogPurchases4
273005    +          +     0.40979012613952 * GRP_NumDistPurchases2
273006    +          +     0.01840169060266 * GRP_NumDistPurchases3
273007    +          +     0.45490355508206 * GRP_NumDistPurchases4
273008    +          +     -2.5216795172343 * GRP_NumWebPurchases2
273009    +          +    -1.84801006282457 * GRP_NumWebPurchases3
273010    +          +    -1.97644985842889 * GRP_NumWebPurchases4
273011    +          +     1.42008839453911 * GRP_RFMstat2  +    -1.47553685202484 *
273012    +        GRP_RFMstat3  +     0.87098855427631 * GRP_RFMstat4
273013    +          +     1.05400168422125 * GRP_RMntFrq2  +    -0.41630002795032 *
273014    +        GRP_RMntFrq3  +     0.32151577305352 * GRP_RMntFrq4
273015    +          +    -0.40892574480582 * GRP_Recency2  +    -0.38760854674907 *
273016    +        GRP_Recency3  +    -1.01062906861757 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -1.19598236721657 * GRP_AcceptedCmp52 + 
0.89556920543007 * GRP_Frq2 + -1.28633632438875 * GRP_Frq3 + 1.09957277812081 * GRP_Frq4 + 
1.66129248688789 * GRP_Income2 + -0.02208859809261 * GRP_Income3 + 0.13742442233856 * 
GRP_Income4 + -0.8762617114278 * GRP_Mnt2 + 0.14483268386758 * GRP_Mnt3 + 1.46115917633769 * 
GRP_Mnt4 + -0.6421408902491 * GRP_MntFishProducts2 + 0.1128138472044 * GRP_MntFishProducts3 + 
1.21562636748698 * GRP_MntFishProducts4 + 0.97422300880066 * GRP_MntGoldProds2 + 
-0.78007036389535 * GRP_MntGoldProds3 + -0.13814365615145 * GRP_MntGoldProds4 + 
1.35693955555286 * GRP_MntMeatProducts2 + -0.27598973191035 * GRP_MntMeatProducts3 + 
0.24526165671667 * GRP_MntMeatProducts4 + -2.07253692193163 * GRP_MntWines2 + 
-0.82406684176795 * GRP_MntWines3 + 1.33606527822464 * GRP_MntWines4 + -1.54679770016919 * 
GRP_NumCatalogPurchases3 + -2.28037541698712 * GRP_NumCatalogPurchases4 + 0.40979012613952 * 
GRP_NumDistPurchases2 + 0.01840169060266 * GRP_NumDistPurchases3 + 0.45490355508206 * 
GRP_NumDistPurchases4 + -2.5216795172343 * GRP_NumWebPurchases2 + -1.84801006282457 * 
GRP_NumWebPurchases3 + -1.97644985842889 * GRP_NumWebPurchases4 + 1.42008839453911 * 
GRP_RFMstat2 + -1.47553685202484 * GRP_RFMstat3 + 0.87098855427631 * GRP_RFMstat4 + 
1.05400168422125 * GRP_RMntFrq2 + -0.41630002795032 * GRP_RMntFrq3 + 0.32151577305352 * 
GRP_RMntFrq4 + -0.40892574480582 * GRP_Recency2 + -0.38760854674907 * GRP_Recency3 + 
-1.01062906861757 * GRP_Recency4 ;
273017    +   H1x1_2  = H1x1_2  +    -0.22087092765683 * GRP_AcceptedCmp52
273018    +          +     0.86410922322484 * GRP_Frq2  +     1.63807214492524 * GRP_Frq3
273019    +          +    -1.25641751320277 * GRP_Frq4  +    -2.06319605492297 *
273020    +        GRP_Income2  +    -0.19570512199776 * GRP_Income3
273021    +          +    -1.02783445665559 * GRP_Income4  +     0.15804947667697 *
273022    +        GRP_Mnt2  +    -1.89927129454089 * GRP_Mnt3  +    -2.03683593435912 *
273023    +        GRP_Mnt4  +    -1.52161150732597 * GRP_MntFishProducts2
273024    +          +     1.31452667544583 * GRP_MntFishProducts3
273025    +          +     -1.7257971559668 * GRP_MntFishProducts4
273026    +          +     2.35872511454228 * GRP_MntGoldProds2
273027    +          +    -2.18519280701813 * GRP_MntGoldProds3
273028    +          +     2.11958828863486 * GRP_MntGoldProds4
273029    +          +     0.96289877666679 * GRP_MntMeatProducts2
273030    +          +     0.23432155256273 * GRP_MntMeatProducts3
273031    +          +     1.73039772995976 * GRP_MntMeatProducts4
273032    +          +    -0.42501510787424 * GRP_MntWines2  +    -1.52486822377888 *
273033    +        GRP_MntWines3  +      1.6227654564975 * GRP_MntWines4
273034    +          +    -1.89995561867666 * GRP_NumCatalogPurchases3
273035    +          +     0.67482053398184 * GRP_NumCatalogPurchases4
273036    +          +     0.66331524792021 * GRP_NumDistPurchases2
273037    +          +    -3.51633711874744 * GRP_NumDistPurchases3
273038    +          +    -2.78868266001809 * GRP_NumDistPurchases4
273039    +          +     0.48911700629841 * GRP_NumWebPurchases2
273040    +          +    -2.04233990579849 * GRP_NumWebPurchases3
273041    +          +     0.61493436153841 * GRP_NumWebPurchases4
273042    +          +    -0.04998034532745 * GRP_RFMstat2  +     0.70675221202708 *
273043    +        GRP_RFMstat3  +      1.1835788842441 * GRP_RFMstat4
273044    +          +    -1.59293821911804 * GRP_RMntFrq2  +    -2.00649847294694 *
273045    +        GRP_RMntFrq3  +     1.51867097620424 * GRP_RMntFrq4
273046    +          +     0.80524037758297 * GRP_Recency2  +     0.46947615167497 *
273047    +        GRP_Recency3  +    -0.02984024000355 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.22087092765683 * GRP_AcceptedCmp52 + 
0.86410922322484 * GRP_Frq2 + 1.63807214492524 * GRP_Frq3 + -1.25641751320277 * GRP_Frq4 + 
-2.06319605492297 * GRP_Income2 + -0.19570512199776 * GRP_Income3 + -1.02783445665559 * 
GRP_Income4 + 0.15804947667697 * GRP_Mnt2 + -1.89927129454089 * GRP_Mnt3 + -2.03683593435912 * 
GRP_Mnt4 + -1.52161150732597 * GRP_MntFishProducts2 + 1.31452667544583 * GRP_MntFishProducts3 
+ -1.7257971559668 * GRP_MntFishProducts4 + 2.35872511454228 * GRP_MntGoldProds2 + 
-2.18519280701813 * GRP_MntGoldProds3 + 2.11958828863486 * GRP_MntGoldProds4 + 
0.96289877666679 * GRP_MntMeatProducts2 + 0.23432155256273 * GRP_MntMeatProducts3 + 
1.73039772995976 * GRP_MntMeatProducts4 + -0.42501510787424 * GRP_MntWines2 + 
-1.52486822377888 * GRP_MntWines3 + 1.6227654564975 * GRP_MntWines4 + -1.89995561867666 * 
GRP_NumCatalogPurchases3 + 0.67482053398184 * GRP_NumCatalogPurchases4 + 0.66331524792021 * 
GRP_NumDistPurchases2 + -3.51633711874744 * GRP_NumDistPurchases3 + -2.78868266001809 * 
GRP_NumDistPurchases4 + 0.48911700629841 * GRP_NumWebPurchases2 + -2.04233990579849 * 
GRP_NumWebPurchases3 + 0.61493436153841 * GRP_NumWebPurchases4 + -0.04998034532745 * 
GRP_RFMstat2 + 0.70675221202708 * GRP_RFMstat3 + 1.1835788842441 * GRP_RFMstat4 + 
-1.59293821911804 * GRP_RMntFrq2 + -2.00649847294694 * GRP_RMntFrq3 + 1.51867097620424 * 
GRP_RMntFrq4 + 0.80524037758297 * GRP_Recency2 + 0.46947615167497 * GRP_Recency3 + 
-0.02984024000355 * GRP_Recency4 ;
273048    +   H1x1_3  = H1x1_3  +     0.63511799928422 * GRP_AcceptedCmp52
273049    +          +      -2.298606068807 * GRP_Frq2  +     3.16864487857804 * GRP_Frq3
273050    +          +     3.03519261062887 * GRP_Frq4  +    -1.85162718986086 *
273051    +        GRP_Income2  +     0.41526825199627 * GRP_Income3
273052    +          +    -0.80593312350255 * GRP_Income4  +     1.66777476102634 *
273053    +        GRP_Mnt2  +     2.08848488119875 * GRP_Mnt3  +     0.65051244257971 *
273054    +        GRP_Mnt4  +     0.71847095407349 * GRP_MntFishProducts2
273055    +          +    -1.10257815890641 * GRP_MntFishProducts3
273056    +          +     2.17792588671141 * GRP_MntFishProducts4
273057    +          +     2.50223152259939 * GRP_MntGoldProds2
273058    +          +    -1.72156085851201 * GRP_MntGoldProds3
273059    +          +    -3.91709431063923 * GRP_MntGoldProds4
273060    +          +     -1.0779971381482 * GRP_MntMeatProducts2
273061    +          +    -1.47970774146601 * GRP_MntMeatProducts3
273062    +          +     1.27022891132009 * GRP_MntMeatProducts4
273063    +          +     0.48048593774493 * GRP_MntWines2  +     2.90436921022208 *
273064    +        GRP_MntWines3  +    -3.52082955604777 * GRP_MntWines4
273065    +          +    -0.04446993636304 * GRP_NumCatalogPurchases3
273066    +          +     0.63669224655802 * GRP_NumCatalogPurchases4
273067    +          +    -3.14645279004965 * GRP_NumDistPurchases2
273068    +          +    -2.33190469508132 * GRP_NumDistPurchases3
273069    +          +    -0.62827451633899 * GRP_NumDistPurchases4
273070    +          +    -1.01851610127648 * GRP_NumWebPurchases2
273071    +          +    -1.48934390537683 * GRP_NumWebPurchases3
273072    +          +    -0.53741548796796 * GRP_NumWebPurchases4
273073    +          +    -0.75492549718573 * GRP_RFMstat2  +     -0.7937620334965 *
273074    +        GRP_RFMstat3  +     1.16856250505521 * GRP_RFMstat4
273075    +          +     2.45700945744116 * GRP_RMntFrq2  +      2.6192187092108 *
273076    +        GRP_RMntFrq3  +    -0.99545519667238 * GRP_RMntFrq4
273077    +          +     -0.8178492657671 * GRP_Recency2  +     0.13605490470692 *
273078    +        GRP_Recency3  +    -0.93901422840588 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.63511799928422 * GRP_AcceptedCmp52 + -2.298606068807 
* GRP_Frq2 + 3.16864487857804 * GRP_Frq3 + 3.03519261062887 * GRP_Frq4 + -1.85162718986086 * 
GRP_Income2 + 0.41526825199627 * GRP_Income3 + -0.80593312350255 * GRP_Income4 + 
1.66777476102634 * GRP_Mnt2 + 2.08848488119875 * GRP_Mnt3 + 0.65051244257971 * GRP_Mnt4 + 
0.71847095407349 * GRP_MntFishProducts2 + -1.10257815890641 * GRP_MntFishProducts3 + 
2.17792588671141 * GRP_MntFishProducts4 + 2.50223152259939 * GRP_MntGoldProds2 + 
-1.72156085851201 * GRP_MntGoldProds3 + -3.91709431063923 * GRP_MntGoldProds4 + 
-1.0779971381482 * GRP_MntMeatProducts2 + -1.47970774146601 * GRP_MntMeatProducts3 + 
1.27022891132009 * GRP_MntMeatProducts4 + 0.48048593774493 * GRP_MntWines2 + 2.90436921022208 
* GRP_MntWines3 + -3.52082955604777 * GRP_MntWines4 + -0.04446993636304 * 
GRP_NumCatalogPurchases3 + 0.63669224655802 * GRP_NumCatalogPurchases4 + -3.14645279004965 * 
GRP_NumDistPurchases2 + -2.33190469508132 * GRP_NumDistPurchases3 + -0.62827451633899 * 
GRP_NumDistPurchases4 + -1.01851610127648 * GRP_NumWebPurchases2 + -1.48934390537683 * 
GRP_NumWebPurchases3 + -0.53741548796796 * GRP_NumWebPurchases4 + -0.75492549718573 * 
GRP_RFMstat2 + -0.7937620334965 * GRP_RFMstat3 + 1.16856250505521 * GRP_RFMstat4 + 
2.45700945744116 * GRP_RMntFrq2 + 2.6192187092108 * GRP_RMntFrq3 + -0.99545519667238 * 
GRP_RMntFrq4 + -0.8178492657671 * GRP_Recency2 + 0.13605490470692 * GRP_Recency3 + 
-0.93901422840588 * GRP_Recency4 ;
273079    +   H1x1_1  =      1.8884999595718 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.8884999595718 + H1x1_1 ;
273080    +   H1x1_2  =    -0.51989390923325 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.51989390923325 + H1x1_2 ;
273081    +   H1x1_3  =     2.10213347257206 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 2.10213347257206 + H1x1_3 ;
273082    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
273083    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
273084    +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
273085    +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
273086    +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
273087    +END;
MPRINT(EM_DIAGRAM):   END;
273088    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
273089    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
273090    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
273091    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
273092    +END;
MPRINT(EM_DIAGRAM):   END;
273093    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
273094    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
273095    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
273096    +
273097    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
273098    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
273099    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
273100    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
273101    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
273102    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
273103    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
273104    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
273105    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
273106    +end;
MPRINT(EM_DIAGRAM):   end;
273107    +else do;
MPRINT(EM_DIAGRAM):   else do;
273108    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
273109    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
273110    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
273111    +   end;
MPRINT(EM_DIAGRAM):   end;
273112    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
273113    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
273114    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
273115    +   end;
MPRINT(EM_DIAGRAM):   end;
273116    +   else do;
MPRINT(EM_DIAGRAM):   else do;
273117    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
273118    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
273119    +   end;
MPRINT(EM_DIAGRAM):   end;
273120    +end;
MPRINT(EM_DIAGRAM):   end;
273121    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
273122    +   P_DepVar1  =    -2.62984121710329 * H1x1_1  +    -2.65642038715706 * H1x1_2
273123    +          +    -4.24846513249504 * H1x1_3 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.62984121710329 * H1x1_1 + -2.65642038715706 * H1x1_2 + 
-4.24846513249504 * H1x1_3 ;
273124    +   P_DepVar1  =     3.19982150134729 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 3.19982150134729 + P_DepVar1 ;
273125    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
273126    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
273127    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
273128    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
273129    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
273130    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
273131    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
273132    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
273133    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
273134    +END;
MPRINT(EM_DIAGRAM):   END;
273135    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
273136    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
273137    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
273138    +END;
MPRINT(EM_DIAGRAM):   END;
273139    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
273140    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
273141    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
273142    +END;
MPRINT(EM_DIAGRAM):   END;
273143    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
273144    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
273145    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
273146    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
273147    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
273148    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
273149    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
273150    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
273151    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
273152    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
273153    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
273154    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
273155    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
273156    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
273157    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
273158    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
273159    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
273160    +END;
MPRINT(EM_DIAGRAM):   END;
273161    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
273162    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
273163    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
273164    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
273165    +* Renaming variables for AutoNeural25;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural25;
273166    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
273167    +* Renaming Posterior variables for AutoNeural25;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural25;
273168    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
273169    +drop AutoNeural25_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural25_P_DepVar1;
273170    +AutoNeural25_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural25_P_DepVar1 = P_DepVar1;
273171    +drop AutoNeural25_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural25_P_DepVar0;
273172    +AutoNeural25_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural25_P_DepVar0 = P_DepVar0;
273173    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
273174    +* Renaming Into variables for AutoNeural25;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for AutoNeural25;
273175    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
273176    +length AutoNeural25_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length AutoNeural25_I_DepVar $32;
273177    +drop AutoNeural25_I_DepVar;
MPRINT(EM_DIAGRAM):   drop AutoNeural25_I_DepVar;
273178    +AutoNeural25_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   AutoNeural25_I_DepVar = I_DepVar;
273179    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
273180    +* Renaming _WARN_ variable for AutoNeural25;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural25;
273181    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
273182    +length AutoNeural25_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural25_WARN_ $4;
273183    +drop AutoNeural25_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural25_WARN_;
273184    +AutoNeural25_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural25_WARN_ = _WARN_;
273185    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
273186    +* Ensmbl50: Scoring Code of model 7 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl50: Scoring Code of model 7 of 7;
273187    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
273188    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
273189    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
273190    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
273191    +* NODE: AutoNeural23;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural23;
273192    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
273193    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
273194    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
273195    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
273196    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
273197    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
273198    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
273199    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
273200    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
273201    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
273202    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
273203    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
273204    +LENGTH _WARN_ $4
273205    +      F_DepVar  $ 12
273206    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
273207    +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
273208    +
273209    +      label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
MPRINT(EM_DIAGRAM):   label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
273210    +
273211    +      label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
273212    +
273213    +      label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
273214    +
273215    +      label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
273216    +
273217    +      label GRP_Income2 = 'Dummy: GRP_Income=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Income2 = 'Dummy: GRP_Income=2' ;
273218    +
273219    +      label GRP_Income3 = 'Dummy: GRP_Income=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Income3 = 'Dummy: GRP_Income=3' ;
273220    +
273221    +      label GRP_Income4 = 'Dummy: GRP_Income=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Income4 = 'Dummy: GRP_Income=4' ;
273222    +
273223    +      label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
273224    +
273225    +      label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
273226    +
273227    +      label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
273228    +
273229    +      label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
273230    +
273231    +      label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
273232    +
273233    +      label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
273234    +
273235    +      label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
273236    +
273237    +      label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
273238    +
273239    +      label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
273240    +
273241    +      label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
273242    +
273243    +      label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
273244    +
273245    +      label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
273246    +
273247    +      label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
273248    +
273249    +      label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
273250    +
273251    +      label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
273252    +
273253    +      label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
273254    +
273255    +      label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
273256    +
273257    +      label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
273258    +
273259    +      label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
273260    +
273261    +      label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
273262    +
273263    +      label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
273264    +
273265    +      label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
273266    +
273267    +      label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
273268    +
273269    +      label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
273270    +
273271    +      label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
273272    +
273273    +      label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
273274    +
273275    +      label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
273276    +
273277    +      label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
273278    +
273279    +      label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
273280    +
273281    +      label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
273282    +
273283    +      label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
273284    +
273285    +      label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
273286    +
273287    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
273288    +
273289    +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
273290    +
273291    +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
273292    +
273293    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
273294    +
273295    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
273296    +
273297    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
273298    +
273299    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
273300    +
273301    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
273302    +
273303    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
273304    +
273305    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
273306    +
273307    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
273308    +
273309    +*** Generate dummy variables for GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmp5 ;
273310    +drop GRP_AcceptedCmp52 ;
MPRINT(EM_DIAGRAM):   drop GRP_AcceptedCmp52 ;
273311    +if missing( GRP_AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmp5 ) then do;
273312    +   GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
273313    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
273314    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
273315    +end;
MPRINT(EM_DIAGRAM):   end;
273316    +else do;
MPRINT(EM_DIAGRAM):   else do;
273317    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
273318    +   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
273319    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
273320    +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
273321    +      GRP_AcceptedCmp52 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = 1;
273322    +   end;
MPRINT(EM_DIAGRAM):   end;
273323    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
273324    +      GRP_AcceptedCmp52 = -1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = -1;
273325    +   end;
MPRINT(EM_DIAGRAM):   end;
273326    +   else do;
MPRINT(EM_DIAGRAM):   else do;
273327    +      GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
273328    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
273329    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
273330    +   end;
MPRINT(EM_DIAGRAM):   end;
273331    +end;
MPRINT(EM_DIAGRAM):   end;
273332    +
273333    +*** Generate dummy variables for GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Frq ;
273334    +drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
273335    +if missing( GRP_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Frq ) then do;
273336    +   GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
273337    +   GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
273338    +   GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
273339    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
273340    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
273341    +end;
MPRINT(EM_DIAGRAM):   end;
273342    +else do;
MPRINT(EM_DIAGRAM):   else do;
273343    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
273344    +   _dm12 = put( GRP_Frq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Frq , BEST12. );
273345    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
273346    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
273347    +      GRP_Frq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = -1;
273348    +      GRP_Frq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = -1;
273349    +      GRP_Frq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = -1;
273350    +   end;
MPRINT(EM_DIAGRAM):   end;
273351    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
273352    +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
273353    +      GRP_Frq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 1;
273354    +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
273355    +   end;
MPRINT(EM_DIAGRAM):   end;
273356    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
273357    +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
273358    +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
273359    +      GRP_Frq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 1;
273360    +   end;
MPRINT(EM_DIAGRAM):   end;
273361    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
273362    +      GRP_Frq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 1;
273363    +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
273364    +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
273365    +   end;
MPRINT(EM_DIAGRAM):   end;
273366    +   else do;
MPRINT(EM_DIAGRAM):   else do;
273367    +      GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
273368    +      GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
273369    +      GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
273370    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
273371    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
273372    +   end;
MPRINT(EM_DIAGRAM):   end;
273373    +end;
MPRINT(EM_DIAGRAM):   end;
273374    +
273375    +*** Generate dummy variables for GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Income ;
273376    +drop GRP_Income2 GRP_Income3 GRP_Income4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Income2 GRP_Income3 GRP_Income4 ;
273377    +if missing( GRP_Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Income ) then do;
273378    +   GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
273379    +   GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
273380    +   GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
273381    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
273382    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
273383    +end;
MPRINT(EM_DIAGRAM):   end;
273384    +else do;
MPRINT(EM_DIAGRAM):   else do;
273385    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
273386    +   _dm12 = put( GRP_Income , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Income , BEST12. );
273387    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
273388    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
273389    +      GRP_Income2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = -1;
273390    +      GRP_Income3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = -1;
273391    +      GRP_Income4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = -1;
273392    +   end;
MPRINT(EM_DIAGRAM):   end;
273393    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
273394    +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
273395    +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
273396    +      GRP_Income4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 1;
273397    +   end;
MPRINT(EM_DIAGRAM):   end;
273398    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
273399    +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
273400    +      GRP_Income3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 1;
273401    +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
273402    +   end;
MPRINT(EM_DIAGRAM):   end;
273403    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
273404    +      GRP_Income2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 1;
273405    +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
273406    +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
273407    +   end;
MPRINT(EM_DIAGRAM):   end;
273408    +   else do;
MPRINT(EM_DIAGRAM):   else do;
273409    +      GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
273410    +      GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
273411    +      GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
273412    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
273413    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
273414    +   end;
MPRINT(EM_DIAGRAM):   end;
273415    +end;
MPRINT(EM_DIAGRAM):   end;
273416    +
273417    +*** Generate dummy variables for GRP_Mnt ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Mnt ;
273418    +drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
273419    +if missing( GRP_Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Mnt ) then do;
273420    +   GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
273421    +   GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
273422    +   GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
273423    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
273424    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
273425    +end;
MPRINT(EM_DIAGRAM):   end;
273426    +else do;
MPRINT(EM_DIAGRAM):   else do;
273427    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
273428    +   _dm12 = put( GRP_Mnt , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Mnt , BEST12. );
273429    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
273430    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
273431    +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
273432    +      GRP_Mnt3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 1;
273433    +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
273434    +   end;
MPRINT(EM_DIAGRAM):   end;
273435    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
273436    +      GRP_Mnt2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = -1;
273437    +      GRP_Mnt3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = -1;
273438    +      GRP_Mnt4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = -1;
273439    +   end;
MPRINT(EM_DIAGRAM):   end;
273440    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
273441    +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
273442    +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
273443    +      GRP_Mnt4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 1;
273444    +   end;
MPRINT(EM_DIAGRAM):   end;
273445    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
273446    +      GRP_Mnt2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 1;
273447    +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
273448    +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
273449    +   end;
MPRINT(EM_DIAGRAM):   end;
273450    +   else do;
MPRINT(EM_DIAGRAM):   else do;
273451    +      GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
273452    +      GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
273453    +      GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
273454    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
273455    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
273456    +   end;
MPRINT(EM_DIAGRAM):   end;
273457    +end;
MPRINT(EM_DIAGRAM):   end;
273458    +
273459    +*** Generate dummy variables for GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntFishProducts ;
273460    +drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
273461    +if missing( GRP_MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntFishProducts ) then do;
273462    +   GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
273463    +   GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
273464    +   GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
273465    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
273466    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
273467    +end;
MPRINT(EM_DIAGRAM):   end;
273468    +else do;
MPRINT(EM_DIAGRAM):   else do;
273469    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
273470    +   _dm12 = put( GRP_MntFishProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntFishProducts , BEST12. );
273471    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
273472    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
273473    +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
273474    +      GRP_MntFishProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 1;
273475    +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
273476    +   end;
MPRINT(EM_DIAGRAM):   end;
273477    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
273478    +      GRP_MntFishProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = -1;
273479    +      GRP_MntFishProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = -1;
273480    +      GRP_MntFishProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = -1;
273481    +   end;
MPRINT(EM_DIAGRAM):   end;
273482    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
273483    +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
273484    +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
273485    +      GRP_MntFishProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 1;
273486    +   end;
MPRINT(EM_DIAGRAM):   end;
273487    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
273488    +      GRP_MntFishProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 1;
273489    +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
273490    +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
273491    +   end;
MPRINT(EM_DIAGRAM):   end;
273492    +   else do;
MPRINT(EM_DIAGRAM):   else do;
273493    +      GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
273494    +      GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
273495    +      GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
273496    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
273497    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
273498    +   end;
MPRINT(EM_DIAGRAM):   end;
273499    +end;
MPRINT(EM_DIAGRAM):   end;
273500    +
273501    +*** Generate dummy variables for GRP_MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntGoldProds ;
273502    +drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
273503    +if missing( GRP_MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntGoldProds ) then do;
273504    +   GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
273505    +   GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
273506    +   GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
273507    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
273508    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
273509    +end;
MPRINT(EM_DIAGRAM):   end;
273510    +else do;
MPRINT(EM_DIAGRAM):   else do;
273511    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
273512    +   _dm12 = put( GRP_MntGoldProds , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntGoldProds , BEST12. );
273513    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
273514    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
273515    +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
273516    +      GRP_MntGoldProds3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 1;
273517    +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
273518    +   end;
MPRINT(EM_DIAGRAM):   end;
273519    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
273520    +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
273521    +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
273522    +      GRP_MntGoldProds4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 1;
273523    +   end;
MPRINT(EM_DIAGRAM):   end;
273524    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
273525    +      GRP_MntGoldProds2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = -1;
273526    +      GRP_MntGoldProds3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = -1;
273527    +      GRP_MntGoldProds4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = -1;
273528    +   end;
MPRINT(EM_DIAGRAM):   end;
273529    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
273530    +      GRP_MntGoldProds2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 1;
273531    +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
273532    +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
273533    +   end;
MPRINT(EM_DIAGRAM):   end;
273534    +   else do;
MPRINT(EM_DIAGRAM):   else do;
273535    +      GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
273536    +      GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
273537    +      GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
273538    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
273539    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
273540    +   end;
MPRINT(EM_DIAGRAM):   end;
273541    +end;
MPRINT(EM_DIAGRAM):   end;
273542    +
273543    +*** Generate dummy variables for GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntMeatProducts ;
273544    +drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
273545    +if missing( GRP_MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntMeatProducts ) then do;
273546    +   GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
273547    +   GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
273548    +   GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
273549    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
273550    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
273551    +end;
MPRINT(EM_DIAGRAM):   end;
273552    +else do;
MPRINT(EM_DIAGRAM):   else do;
273553    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
273554    +   _dm12 = put( GRP_MntMeatProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntMeatProducts , BEST12. );
273555    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
273556    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
273557    +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
273558    +      GRP_MntMeatProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 1;
273559    +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
273560    +   end;
MPRINT(EM_DIAGRAM):   end;
273561    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
273562    +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
273563    +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
273564    +      GRP_MntMeatProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 1;
273565    +   end;
MPRINT(EM_DIAGRAM):   end;
273566    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
273567    +      GRP_MntMeatProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = -1;
273568    +      GRP_MntMeatProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = -1;
273569    +      GRP_MntMeatProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = -1;
273570    +   end;
MPRINT(EM_DIAGRAM):   end;
273571    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
273572    +      GRP_MntMeatProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 1;
273573    +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
273574    +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
273575    +   end;
MPRINT(EM_DIAGRAM):   end;
273576    +   else do;
MPRINT(EM_DIAGRAM):   else do;
273577    +      GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
273578    +      GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
273579    +      GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
273580    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
273581    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
273582    +   end;
MPRINT(EM_DIAGRAM):   end;
273583    +end;
MPRINT(EM_DIAGRAM):   end;
273584    +
273585    +*** Generate dummy variables for GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntWines ;
273586    +drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
273587    +if missing( GRP_MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntWines ) then do;
273588    +   GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
273589    +   GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
273590    +   GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
273591    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
273592    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
273593    +end;
MPRINT(EM_DIAGRAM):   end;
273594    +else do;
MPRINT(EM_DIAGRAM):   else do;
273595    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
273596    +   _dm12 = put( GRP_MntWines , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntWines , BEST12. );
273597    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
273598    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
273599    +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
273600    +      GRP_MntWines3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 1;
273601    +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
273602    +   end;
MPRINT(EM_DIAGRAM):   end;
273603    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
273604    +      GRP_MntWines2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = -1;
273605    +      GRP_MntWines3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = -1;
273606    +      GRP_MntWines4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = -1;
273607    +   end;
MPRINT(EM_DIAGRAM):   end;
273608    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
273609    +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
273610    +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
273611    +      GRP_MntWines4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 1;
273612    +   end;
MPRINT(EM_DIAGRAM):   end;
273613    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
273614    +      GRP_MntWines2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 1;
273615    +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
273616    +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
273617    +   end;
MPRINT(EM_DIAGRAM):   end;
273618    +   else do;
MPRINT(EM_DIAGRAM):   else do;
273619    +      GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
273620    +      GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
273621    +      GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
273622    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
273623    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
273624    +   end;
MPRINT(EM_DIAGRAM):   end;
273625    +end;
MPRINT(EM_DIAGRAM):   end;
273626    +
273627    +*** Generate dummy variables for GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumCatalogPurchases ;
273628    +drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
273629    +if missing( GRP_NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumCatalogPurchases ) then do;
273630    +   GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
273631    +   GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
273632    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
273633    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
273634    +end;
MPRINT(EM_DIAGRAM):   end;
273635    +else do;
MPRINT(EM_DIAGRAM):   else do;
273636    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
273637    +   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
273638    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
273639    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
273640    +      GRP_NumCatalogPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 1;
273641    +      GRP_NumCatalogPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 0;
273642    +   end;
MPRINT(EM_DIAGRAM):   end;
273643    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
273644    +      GRP_NumCatalogPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = -1;
273645    +      GRP_NumCatalogPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = -1;
273646    +   end;
MPRINT(EM_DIAGRAM):   end;
273647    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
273648    +      GRP_NumCatalogPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 0;
273649    +      GRP_NumCatalogPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 1;
273650    +   end;
MPRINT(EM_DIAGRAM):   end;
273651    +   else do;
MPRINT(EM_DIAGRAM):   else do;
273652    +      GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
273653    +      GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
273654    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
273655    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
273656    +   end;
MPRINT(EM_DIAGRAM):   end;
273657    +end;
MPRINT(EM_DIAGRAM):   end;
273658    +
273659    +*** Generate dummy variables for GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumDistPurchases ;
273660    +drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
273661    +if missing( GRP_NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumDistPurchases ) then do;
273662    +   GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
273663    +   GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
273664    +   GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
273665    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
273666    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
273667    +end;
MPRINT(EM_DIAGRAM):   end;
273668    +else do;
MPRINT(EM_DIAGRAM):   else do;
273669    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
273670    +   _dm12 = put( GRP_NumDistPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumDistPurchases , BEST12. );
273671    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
273672    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
273673    +      GRP_NumDistPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = -1;
273674    +      GRP_NumDistPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = -1;
273675    +      GRP_NumDistPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = -1;
273676    +   end;
MPRINT(EM_DIAGRAM):   end;
273677    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
273678    +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
273679    +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
273680    +      GRP_NumDistPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 1;
273681    +   end;
MPRINT(EM_DIAGRAM):   end;
273682    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
273683    +      GRP_NumDistPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 1;
273684    +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
273685    +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
273686    +   end;
MPRINT(EM_DIAGRAM):   end;
273687    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
273688    +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
273689    +      GRP_NumDistPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 1;
273690    +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
273691    +   end;
MPRINT(EM_DIAGRAM):   end;
273692    +   else do;
MPRINT(EM_DIAGRAM):   else do;
273693    +      GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
273694    +      GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
273695    +      GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
273696    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
273697    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
273698    +   end;
MPRINT(EM_DIAGRAM):   end;
273699    +end;
MPRINT(EM_DIAGRAM):   end;
273700    +
273701    +*** Generate dummy variables for GRP_NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumWebPurchases ;
273702    +drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
273703    +if missing( GRP_NumWebPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumWebPurchases ) then do;
273704    +   GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
273705    +   GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
273706    +   GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
273707    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
273708    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
273709    +end;
MPRINT(EM_DIAGRAM):   end;
273710    +else do;
MPRINT(EM_DIAGRAM):   else do;
273711    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
273712    +   _dm12 = put( GRP_NumWebPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumWebPurchases , BEST12. );
273713    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
273714    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
273715    +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
273716    +      GRP_NumWebPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 1;
273717    +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
273718    +   end;
MPRINT(EM_DIAGRAM):   end;
273719    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
273720    +      GRP_NumWebPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = -1;
273721    +      GRP_NumWebPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = -1;
273722    +      GRP_NumWebPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = -1;
273723    +   end;
MPRINT(EM_DIAGRAM):   end;
273724    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
273725    +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
273726    +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
273727    +      GRP_NumWebPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 1;
273728    +   end;
MPRINT(EM_DIAGRAM):   end;
273729    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
273730    +      GRP_NumWebPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 1;
273731    +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
273732    +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
273733    +   end;
MPRINT(EM_DIAGRAM):   end;
273734    +   else do;
MPRINT(EM_DIAGRAM):   else do;
273735    +      GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
273736    +      GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
273737    +      GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
273738    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
273739    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
273740    +   end;
MPRINT(EM_DIAGRAM):   end;
273741    +end;
MPRINT(EM_DIAGRAM):   end;
273742    +
273743    +*** Generate dummy variables for GRP_RFMstat ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RFMstat ;
273744    +drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
273745    +if missing( GRP_RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RFMstat ) then do;
273746    +   GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
273747    +   GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
273748    +   GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
273749    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
273750    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
273751    +end;
MPRINT(EM_DIAGRAM):   end;
273752    +else do;
MPRINT(EM_DIAGRAM):   else do;
273753    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
273754    +   _dm12 = put( GRP_RFMstat , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RFMstat , BEST12. );
273755    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
273756    +   if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
273757    +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
273758    +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
273759    +      GRP_RFMstat4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 1;
273760    +   end;
MPRINT(EM_DIAGRAM):   end;
273761    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
273762    +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
273763    +      GRP_RFMstat3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 1;
273764    +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
273765    +   end;
MPRINT(EM_DIAGRAM):   end;
273766    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
273767    +      GRP_RFMstat2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = -1;
273768    +      GRP_RFMstat3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = -1;
273769    +      GRP_RFMstat4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = -1;
273770    +   end;
MPRINT(EM_DIAGRAM):   end;
273771    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
273772    +      GRP_RFMstat2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 1;
273773    +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
273774    +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
273775    +   end;
MPRINT(EM_DIAGRAM):   end;
273776    +   else do;
MPRINT(EM_DIAGRAM):   else do;
273777    +      GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
273778    +      GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
273779    +      GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
273780    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
273781    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
273782    +   end;
MPRINT(EM_DIAGRAM):   end;
273783    +end;
MPRINT(EM_DIAGRAM):   end;
273784    +
273785    +*** Generate dummy variables for GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RMntFrq ;
273786    +drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
273787    +if missing( GRP_RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RMntFrq ) then do;
273788    +   GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
273789    +   GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
273790    +   GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
273791    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
273792    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
273793    +end;
MPRINT(EM_DIAGRAM):   end;
273794    +else do;
MPRINT(EM_DIAGRAM):   else do;
273795    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
273796    +   _dm12 = put( GRP_RMntFrq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RMntFrq , BEST12. );
273797    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
273798    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
273799    +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
273800    +      GRP_RMntFrq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 1;
273801    +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
273802    +   end;
MPRINT(EM_DIAGRAM):   end;
273803    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
273804    +      GRP_RMntFrq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = -1;
273805    +      GRP_RMntFrq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = -1;
273806    +      GRP_RMntFrq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = -1;
273807    +   end;
MPRINT(EM_DIAGRAM):   end;
273808    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
273809    +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
273810    +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
273811    +      GRP_RMntFrq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 1;
273812    +   end;
MPRINT(EM_DIAGRAM):   end;
273813    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
273814    +      GRP_RMntFrq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 1;
273815    +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
273816    +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
273817    +   end;
MPRINT(EM_DIAGRAM):   end;
273818    +   else do;
MPRINT(EM_DIAGRAM):   else do;
273819    +      GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
273820    +      GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
273821    +      GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
273822    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
273823    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
273824    +   end;
MPRINT(EM_DIAGRAM):   end;
273825    +end;
MPRINT(EM_DIAGRAM):   end;
273826    +
273827    +*** Generate dummy variables for GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Recency ;
273828    +drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
273829    +if missing( GRP_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Recency ) then do;
273830    +   GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
273831    +   GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
273832    +   GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
273833    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
273834    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
273835    +end;
MPRINT(EM_DIAGRAM):   end;
273836    +else do;
MPRINT(EM_DIAGRAM):   else do;
273837    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
273838    +   _dm12 = put( GRP_Recency , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Recency , BEST12. );
273839    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
273840    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
273841    +      GRP_Recency2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = -1;
273842    +      GRP_Recency3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = -1;
273843    +      GRP_Recency4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = -1;
273844    +   end;
MPRINT(EM_DIAGRAM):   end;
273845    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
273846    +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
273847    +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
273848    +      GRP_Recency4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 1;
273849    +   end;
MPRINT(EM_DIAGRAM):   end;
273850    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
273851    +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
273852    +      GRP_Recency3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 1;
273853    +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
273854    +   end;
MPRINT(EM_DIAGRAM):   end;
273855    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
273856    +      GRP_Recency2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 1;
273857    +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
273858    +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
273859    +   end;
MPRINT(EM_DIAGRAM):   end;
273860    +   else do;
MPRINT(EM_DIAGRAM):   else do;
273861    +      GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
273862    +      GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
273863    +      GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
273864    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
273865    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
273866    +   end;
MPRINT(EM_DIAGRAM):   end;
273867    +end;
MPRINT(EM_DIAGRAM):   end;
273868    +
273869    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
273870    +*** Checking missing input Interval
273871    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
273872    +
273873    +IF NMISS(
273874    +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Year_Birth ) THEN DO;
273875    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
273876    +
273877    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
273878    +END;
MPRINT(EM_DIAGRAM):   END;
273879    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
273880    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
273881    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
273882    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
273883    +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
273884    +END;
MPRINT(EM_DIAGRAM):   END;
273885    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
273886    +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
273887    +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
273888    +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
273889    +END;
MPRINT(EM_DIAGRAM):   END;
273890    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
273891    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
273892    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
273893    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
273894    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
273895    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
273896    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
273897    +   H1x1_1  =     1.95381025032439 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.95381025032439 * S_Year_Birth ;
273898    +   H1x1_1  = H1x1_1  +     1.14916728016472 * GRP_AcceptedCmp52
273899    +          +    -5.96780006482557 * GRP_Frq2  +     4.49682337069914 * GRP_Frq3
273900    +          +    -1.00084168387427 * GRP_Frq4  +    -4.56848186498493 *
273901    +        GRP_Income2  +    -6.08290839556081 * GRP_Income3
273902    +          +        -1.9523756063 * GRP_Income4  +     2.25453632912582 *
273903    +        GRP_Mnt2  +     0.79226665009331 * GRP_Mnt3  +     4.62693684609359 *
273904    +        GRP_Mnt4  +     4.80720961994346 * GRP_MntFishProducts2
273905    +          +     5.98129040124117 * GRP_MntFishProducts3
273906    +          +    -7.67060692838644 * GRP_MntFishProducts4
273907    +          +    -2.17396725012949 * GRP_MntGoldProds2
273908    +          +     0.85597521158935 * GRP_MntGoldProds3
273909    +          +      2.1173332536462 * GRP_MntGoldProds4
273910    +          +     7.10141475402441 * GRP_MntMeatProducts2
273911    +          +     -4.9090455486088 * GRP_MntMeatProducts3
273912    +          +     2.83142638000959 * GRP_MntMeatProducts4
273913    +          +     3.69328975873193 * GRP_MntWines2  +      2.1695090110711 *
273914    +        GRP_MntWines3  +    -5.30256986722649 * GRP_MntWines4
273915    +          +     0.29736312872725 * GRP_NumCatalogPurchases3
273916    +          +     4.11382044060245 * GRP_NumCatalogPurchases4
273917    +          +    -6.25823764999595 * GRP_NumDistPurchases2
273918    +          +    -0.67901515881598 * GRP_NumDistPurchases3
273919    +          +     7.85932256128371 * GRP_NumDistPurchases4
273920    +          +     3.53767704202566 * GRP_NumWebPurchases2
273921    +          +    -6.48408913826017 * GRP_NumWebPurchases3
273922    +          +     4.25220646709256 * GRP_NumWebPurchases4
273923    +          +     1.52518398177008 * GRP_RFMstat2  +    -8.45537513058681 *
273924    +        GRP_RFMstat3  +      1.7628190243685 * GRP_RFMstat4
273925    +          +    -2.26342656707522 * GRP_RMntFrq2  +     0.15141321171269 *
273926    +        GRP_RMntFrq3  +     4.77478604851781 * GRP_RMntFrq4
273927    +          +     7.94049700164507 * GRP_Recency2  +     6.59302318386937 *
273928    +        GRP_Recency3  +    -1.94583979914797 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 1.14916728016472 * GRP_AcceptedCmp52 + 
-5.96780006482557 * GRP_Frq2 + 4.49682337069914 * GRP_Frq3 + -1.00084168387427 * GRP_Frq4 + 
-4.56848186498493 * GRP_Income2 + -6.08290839556081 * GRP_Income3 + -1.9523756063 * 
GRP_Income4 + 2.25453632912582 * GRP_Mnt2 + 0.79226665009331 * GRP_Mnt3 + 4.62693684609359 * 
GRP_Mnt4 + 4.80720961994346 * GRP_MntFishProducts2 + 5.98129040124117 * GRP_MntFishProducts3 + 
-7.67060692838644 * GRP_MntFishProducts4 + -2.17396725012949 * GRP_MntGoldProds2 + 
0.85597521158935 * GRP_MntGoldProds3 + 2.1173332536462 * GRP_MntGoldProds4 + 7.10141475402441 
* GRP_MntMeatProducts2 + -4.9090455486088 * GRP_MntMeatProducts3 + 2.83142638000959 * 
GRP_MntMeatProducts4 + 3.69328975873193 * GRP_MntWines2 + 2.1695090110711 * GRP_MntWines3 + 
-5.30256986722649 * GRP_MntWines4 + 0.29736312872725 * GRP_NumCatalogPurchases3 + 
4.11382044060245 * GRP_NumCatalogPurchases4 + -6.25823764999595 * GRP_NumDistPurchases2 + 
-0.67901515881598 * GRP_NumDistPurchases3 + 7.85932256128371 * GRP_NumDistPurchases4 + 
3.53767704202566 * GRP_NumWebPurchases2 + -6.48408913826017 * GRP_NumWebPurchases3 + 
4.25220646709256 * GRP_NumWebPurchases4 + 1.52518398177008 * GRP_RFMstat2 + -8.45537513058681 
* GRP_RFMstat3 + 1.7628190243685 * GRP_RFMstat4 + -2.26342656707522 * GRP_RMntFrq2 + 
0.15141321171269 * GRP_RMntFrq3 + 4.77478604851781 * GRP_RMntFrq4 + 7.94049700164507 * 
GRP_Recency2 + 6.59302318386937 * GRP_Recency3 + -1.94583979914797 * GRP_Recency4 ;
273929    +   H1x1_1  =     0.17797650232548 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.17797650232548 + H1x1_1 ;
273930    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
273931    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
273932    +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
273933    +END;
MPRINT(EM_DIAGRAM):   END;
273934    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
273935    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
273936    +END;
MPRINT(EM_DIAGRAM):   END;
273937    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
273938    +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
273939    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
273940    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
273941    +   H1x2_1  =     -0.4803749248586 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.4803749248586 * S_Year_Birth ;
273942    +   H1x2_1  = H1x2_1  +      -2.709334396045 * GRP_AcceptedCmp52
273943    +          +    -0.72996008627086 * GRP_Frq2  +     1.18917091356785 * GRP_Frq3
273944    +          +    -0.84357839249772 * GRP_Frq4  +    -1.34210240870748 *
273945    +        GRP_Income2  +    -2.49305097670051 * GRP_Income3
273946    +          +     0.47903160451188 * GRP_Income4  +    -0.21389782834045 *
273947    +        GRP_Mnt2  +    -2.96981107340783 * GRP_Mnt3  +     0.25136923781697 *
273948    +        GRP_Mnt4  +    -1.77015468345115 * GRP_MntFishProducts2
273949    +          +    -2.01927730228967 * GRP_MntFishProducts3
273950    +          +    -1.75480602447555 * GRP_MntFishProducts4
273951    +          +     0.42274303160257 * GRP_MntGoldProds2
273952    +          +     1.56137884413542 * GRP_MntGoldProds3
273953    +          +     0.84731732911707 * GRP_MntGoldProds4
273954    +          +     0.81025189254107 * GRP_MntMeatProducts2
273955    +          +     1.96319534444801 * GRP_MntMeatProducts3
273956    +          +     0.96127142865074 * GRP_MntMeatProducts4
273957    +          +    -0.93806166213097 * GRP_MntWines2  +     0.05312243237158 *
273958    +        GRP_MntWines3  +     0.84972126175769 * GRP_MntWines4
273959    +          +    -1.06178615974842 * GRP_NumCatalogPurchases3
273960    +          +     0.40580399494511 * GRP_NumCatalogPurchases4
273961    +          +      0.0678513615184 * GRP_NumDistPurchases2
273962    +          +     0.02437151967393 * GRP_NumDistPurchases3
273963    +          +     0.69402606373719 * GRP_NumDistPurchases4
273964    +          +       0.411121097653 * GRP_NumWebPurchases2
273965    +          +     0.82481677575773 * GRP_NumWebPurchases3
273966    +          +     1.41988866790215 * GRP_NumWebPurchases4
273967    +          +     0.85026610914091 * GRP_RFMstat2  +    -2.24707947369438 *
273968    +        GRP_RFMstat3  +     -1.1790000875996 * GRP_RFMstat4
273969    +          +     0.87106199482984 * GRP_RMntFrq2  +    -0.83130886232946 *
273970    +        GRP_RMntFrq3  +    -0.14994298443333 * GRP_RMntFrq4
273971    +          +      0.4148069318585 * GRP_Recency2  +     1.81524210481359 *
273972    +        GRP_Recency3  +    -0.14279288009067 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -2.709334396045 * GRP_AcceptedCmp52 + 
-0.72996008627086 * GRP_Frq2 + 1.18917091356785 * GRP_Frq3 + -0.84357839249772 * GRP_Frq4 + 
-1.34210240870748 * GRP_Income2 + -2.49305097670051 * GRP_Income3 + 0.47903160451188 * 
GRP_Income4 + -0.21389782834045 * GRP_Mnt2 + -2.96981107340783 * GRP_Mnt3 + 0.25136923781697 * 
GRP_Mnt4 + -1.77015468345115 * GRP_MntFishProducts2 + -2.01927730228967 * GRP_MntFishProducts3 
+ -1.75480602447555 * GRP_MntFishProducts4 + 0.42274303160257 * GRP_MntGoldProds2 + 
1.56137884413542 * GRP_MntGoldProds3 + 0.84731732911707 * GRP_MntGoldProds4 + 0.81025189254107 
* GRP_MntMeatProducts2 + 1.96319534444801 * GRP_MntMeatProducts3 + 0.96127142865074 * 
GRP_MntMeatProducts4 + -0.93806166213097 * GRP_MntWines2 + 0.05312243237158 * GRP_MntWines3 + 
0.84972126175769 * GRP_MntWines4 + -1.06178615974842 * GRP_NumCatalogPurchases3 + 
0.40580399494511 * GRP_NumCatalogPurchases4 + 0.0678513615184 * GRP_NumDistPurchases2 + 
0.02437151967393 * GRP_NumDistPurchases3 + 0.69402606373719 * GRP_NumDistPurchases4 + 
0.411121097653 * GRP_NumWebPurchases2 + 0.82481677575773 * GRP_NumWebPurchases3 + 
1.41988866790215 * GRP_NumWebPurchases4 + 0.85026610914091 * GRP_RFMstat2 + -2.24707947369438 
* GRP_RFMstat3 + -1.1790000875996 * GRP_RFMstat4 + 0.87106199482984 * GRP_RMntFrq2 + 
-0.83130886232946 * GRP_RMntFrq3 + -0.14994298443333 * GRP_RMntFrq4 + 0.4148069318585 * 
GRP_Recency2 + 1.81524210481359 * GRP_Recency3 + -0.14279288009067 * GRP_Recency4 ;
273973    +   H1x2_1  =    -1.10844381917328 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -1.10844381917328 + H1x2_1 ;
273974    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
273975    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
273976    +   H1x2_1  = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
273977    +END;
MPRINT(EM_DIAGRAM):   END;
273978    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
273979    +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
273980    +END;
MPRINT(EM_DIAGRAM):   END;
273981    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
273982    +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
273983    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
273984    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
273985    +   H2x1_1  =    -4.35637031258639 * H1x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -4.35637031258639 * H1x1_1 ;
273986    +   H2x1_1  = H2x1_1  +    -3.33687841316643 * H1x2_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -3.33687841316643 * H1x2_1 ;
273987    +   H2x1_1  =     3.05963926783565 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 3.05963926783565 + H2x1_1 ;
273988    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
273989    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
273990    +   H2x1_1  = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
273991    +END;
MPRINT(EM_DIAGRAM):   END;
273992    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
273993    +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
273994    +END;
MPRINT(EM_DIAGRAM):   END;
273995    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
273996    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
273997    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
273998    +
273999    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
274000    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
274001    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
274002    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
274003    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
274004    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
274005    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
274006    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
274007    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
274008    +end;
MPRINT(EM_DIAGRAM):   end;
274009    +else do;
MPRINT(EM_DIAGRAM):   else do;
274010    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
274011    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
274012    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
274013    +   end;
MPRINT(EM_DIAGRAM):   end;
274014    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
274015    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
274016    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
274017    +   end;
MPRINT(EM_DIAGRAM):   end;
274018    +   else do;
MPRINT(EM_DIAGRAM):   else do;
274019    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
274020    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
274021    +   end;
MPRINT(EM_DIAGRAM):   end;
274022    +end;
MPRINT(EM_DIAGRAM):   end;
274023    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
274024    +   P_DepVar1  =    -6.02136211154727 * H2x1_1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -6.02136211154727 * H2x1_1 ;
274025    +   P_DepVar1  =     0.37595575621801 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.37595575621801 + P_DepVar1 ;
274026    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
274027    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
274028    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
274029    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
274030    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
274031    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
274032    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
274033    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
274034    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
274035    +END;
MPRINT(EM_DIAGRAM):   END;
274036    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
274037    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
274038    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
274039    +END;
MPRINT(EM_DIAGRAM):   END;
274040    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
274041    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
274042    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
274043    +END;
MPRINT(EM_DIAGRAM):   END;
274044    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
274045    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
274046    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
274047    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
274048    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
274049    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
274050    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
274051    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
274052    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
274053    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
274054    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
274055    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
274056    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
274057    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
274058    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
274059    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
274060    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
274061    +END;
MPRINT(EM_DIAGRAM):   END;
274062    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
274063    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
274064    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
274065    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
274066    +* Renaming variables for AutoNeural23;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural23;
274067    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
274068    +* Renaming Posterior variables for AutoNeural23;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural23;
274069    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
274070    +drop AutoNeural23_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural23_P_DepVar1;
274071    +AutoNeural23_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural23_P_DepVar1 = P_DepVar1;
274072    +drop AutoNeural23_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural23_P_DepVar0;
274073    +AutoNeural23_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural23_P_DepVar0 = P_DepVar0;
274074    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
274075    +* Renaming Into variables for AutoNeural23;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for AutoNeural23;
274076    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
274077    +length AutoNeural23_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length AutoNeural23_I_DepVar $32;
274078    +drop AutoNeural23_I_DepVar;
MPRINT(EM_DIAGRAM):   drop AutoNeural23_I_DepVar;
274079    +AutoNeural23_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   AutoNeural23_I_DepVar = I_DepVar;
274080    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
274081    +* Renaming _WARN_ variable for AutoNeural23;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural23;
274082    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
274083    +length AutoNeural23_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural23_WARN_ $4;
274084    +drop AutoNeural23_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural23_WARN_;
274085    +AutoNeural23_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural23_WARN_ = _WARN_;
274086    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
274087    +* Ensmbl50: Voting to produce predicted target;
MPRINT(EM_DIAGRAM):   * Ensmbl50: Voting to produce predicted target;
274088    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
274089    +array Ensmbl50_post{2} _temporary_;
MPRINT(EM_DIAGRAM):   array Ensmbl50_post{2} _temporary_;
274090    +array Ensmbl50_count{2} _temporary_;
MPRINT(EM_DIAGRAM):   array Ensmbl50_count{2} _temporary_;
274091    +array Ensmbl50_level{2} $32 _temporary_ (
274092    +"1"
274093    +"0"
274094    +);
MPRINT(EM_DIAGRAM):   array Ensmbl50_level{2} $32 _temporary_ ( "1" "0" );
274095    +do i=1 to 2;
MPRINT(EM_DIAGRAM):   do i=1 to 2;
274096    +Ensmbl50_post{i} = 0;
MPRINT(EM_DIAGRAM):   Ensmbl50_post{i} = 0;
274097    +Ensmbl50_count{i} = 0;
MPRINT(EM_DIAGRAM):   Ensmbl50_count{i} = 0;
274098    +end;
MPRINT(EM_DIAGRAM):   end;
274099    +if AutoNeural24_I_DepVar = Ensmbl50_level{1} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural24_I_DepVar = Ensmbl50_level{1} then do;
274100    +Ensmbl50_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl50_count{1} + 1;
274101    +Ensmbl50_post{1}=Ensmbl50_post{1}+ AutoNeural24_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl50_post{1}=Ensmbl50_post{1}+ AutoNeural24_P_DepVar1;
274102    +end;
MPRINT(EM_DIAGRAM):   end;
274103    +if AutoNeural22_I_DepVar = Ensmbl50_level{1} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural22_I_DepVar = Ensmbl50_level{1} then do;
274104    +Ensmbl50_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl50_count{1} + 1;
274105    +Ensmbl50_post{1}=Ensmbl50_post{1}+ AutoNeural22_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl50_post{1}=Ensmbl50_post{1}+ AutoNeural22_P_DepVar1;
274106    +end;
MPRINT(EM_DIAGRAM):   end;
274107    +if AutoNeural21_I_DepVar = Ensmbl50_level{1} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural21_I_DepVar = Ensmbl50_level{1} then do;
274108    +Ensmbl50_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl50_count{1} + 1;
274109    +Ensmbl50_post{1}=Ensmbl50_post{1}+ AutoNeural21_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl50_post{1}=Ensmbl50_post{1}+ AutoNeural21_P_DepVar1;
274110    +end;
MPRINT(EM_DIAGRAM):   end;
274111    +if AutoNeural20_I_DepVar = Ensmbl50_level{1} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural20_I_DepVar = Ensmbl50_level{1} then do;
274112    +Ensmbl50_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl50_count{1} + 1;
274113    +Ensmbl50_post{1}=Ensmbl50_post{1}+ AutoNeural20_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl50_post{1}=Ensmbl50_post{1}+ AutoNeural20_P_DepVar1;
274114    +end;
MPRINT(EM_DIAGRAM):   end;
274115    +if AutoNeural26_I_DepVar = Ensmbl50_level{1} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural26_I_DepVar = Ensmbl50_level{1} then do;
274116    +Ensmbl50_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl50_count{1} + 1;
274117    +Ensmbl50_post{1}=Ensmbl50_post{1}+ AutoNeural26_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl50_post{1}=Ensmbl50_post{1}+ AutoNeural26_P_DepVar1;
274118    +end;
MPRINT(EM_DIAGRAM):   end;
274119    +if AutoNeural25_I_DepVar = Ensmbl50_level{1} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural25_I_DepVar = Ensmbl50_level{1} then do;
274120    +Ensmbl50_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl50_count{1} + 1;
274121    +Ensmbl50_post{1}=Ensmbl50_post{1}+ AutoNeural25_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl50_post{1}=Ensmbl50_post{1}+ AutoNeural25_P_DepVar1;
274122    +end;
MPRINT(EM_DIAGRAM):   end;
274123    +if AutoNeural23_I_DepVar = Ensmbl50_level{1} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural23_I_DepVar = Ensmbl50_level{1} then do;
274124    +Ensmbl50_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl50_count{1} + 1;
274125    +Ensmbl50_post{1}=Ensmbl50_post{1}+ AutoNeural23_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl50_post{1}=Ensmbl50_post{1}+ AutoNeural23_P_DepVar1;
274126    +end;
MPRINT(EM_DIAGRAM):   end;
274127    +if AutoNeural24_I_DepVar = Ensmbl50_level{2} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural24_I_DepVar = Ensmbl50_level{2} then do;
274128    +Ensmbl50_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl50_count{2} + 1;
274129    +Ensmbl50_post{2}=Ensmbl50_post{2}+ AutoNeural24_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl50_post{2}=Ensmbl50_post{2}+ AutoNeural24_P_DepVar0;
274130    +end;
MPRINT(EM_DIAGRAM):   end;
274131    +if AutoNeural22_I_DepVar = Ensmbl50_level{2} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural22_I_DepVar = Ensmbl50_level{2} then do;
274132    +Ensmbl50_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl50_count{2} + 1;
274133    +Ensmbl50_post{2}=Ensmbl50_post{2}+ AutoNeural22_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl50_post{2}=Ensmbl50_post{2}+ AutoNeural22_P_DepVar0;
274134    +end;
MPRINT(EM_DIAGRAM):   end;
274135    +if AutoNeural21_I_DepVar = Ensmbl50_level{2} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural21_I_DepVar = Ensmbl50_level{2} then do;
274136    +Ensmbl50_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl50_count{2} + 1;
274137    +Ensmbl50_post{2}=Ensmbl50_post{2}+ AutoNeural21_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl50_post{2}=Ensmbl50_post{2}+ AutoNeural21_P_DepVar0;
274138    +end;
MPRINT(EM_DIAGRAM):   end;
274139    +if AutoNeural20_I_DepVar = Ensmbl50_level{2} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural20_I_DepVar = Ensmbl50_level{2} then do;
274140    +Ensmbl50_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl50_count{2} + 1;
274141    +Ensmbl50_post{2}=Ensmbl50_post{2}+ AutoNeural20_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl50_post{2}=Ensmbl50_post{2}+ AutoNeural20_P_DepVar0;
274142    +end;
MPRINT(EM_DIAGRAM):   end;
274143    +if AutoNeural26_I_DepVar = Ensmbl50_level{2} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural26_I_DepVar = Ensmbl50_level{2} then do;
274144    +Ensmbl50_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl50_count{2} + 1;
274145    +Ensmbl50_post{2}=Ensmbl50_post{2}+ AutoNeural26_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl50_post{2}=Ensmbl50_post{2}+ AutoNeural26_P_DepVar0;
274146    +end;
MPRINT(EM_DIAGRAM):   end;
274147    +if AutoNeural25_I_DepVar = Ensmbl50_level{2} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural25_I_DepVar = Ensmbl50_level{2} then do;
274148    +Ensmbl50_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl50_count{2} + 1;
274149    +Ensmbl50_post{2}=Ensmbl50_post{2}+ AutoNeural25_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl50_post{2}=Ensmbl50_post{2}+ AutoNeural25_P_DepVar0;
274150    +end;
MPRINT(EM_DIAGRAM):   end;
274151    +if AutoNeural23_I_DepVar = Ensmbl50_level{2} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural23_I_DepVar = Ensmbl50_level{2} then do;
274152    +Ensmbl50_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl50_count{2} + 1;
274153    +Ensmbl50_post{2}=Ensmbl50_post{2}+ AutoNeural23_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl50_post{2}=Ensmbl50_post{2}+ AutoNeural23_P_DepVar0;
274154    +end;
MPRINT(EM_DIAGRAM):   end;
274155    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
274156    +* Ensmbl50: Determine Into Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl50: Determine Into Variable;
274157    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
274158    +length I_DepVar $32;
MPRINT(EM_DIAGRAM):   length I_DepVar $32;
WARNING: Length of character variable I_DepVar has already been set. 
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the 
         length of a character variable.
274159    +drop i vote_count vote_post;
MPRINT(EM_DIAGRAM):   drop i vote_count vote_post;
274160    +vote_count = max(
274161    +Ensmbl50_count{1} ,
274162    +Ensmbl50_count{2}
274163    +);
MPRINT(EM_DIAGRAM):   vote_count = max( Ensmbl50_count{1} , Ensmbl50_count{2} );
274164    +do i=1 to 2;
MPRINT(EM_DIAGRAM):   do i=1 to 2;
274165    +if Ensmbl50_count{i}=vote_count and Ensmbl50_post{i}>vote_post then do;
MPRINT(EM_DIAGRAM):   if Ensmbl50_count{i}=vote_count and Ensmbl50_post{i}>vote_post then do;
274166    +I_DepVar = Ensmbl50_level{i};
MPRINT(EM_DIAGRAM):   I_DepVar = Ensmbl50_level{i};
274167    +vote_post = Ensmbl50_count{i};
MPRINT(EM_DIAGRAM):   vote_post = Ensmbl50_count{i};
274168    +end;
MPRINT(EM_DIAGRAM):   end;
274169    +end;
MPRINT(EM_DIAGRAM):   end;
274170    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
274171    +* Ensmbl50: Compute posterior vars using models predicting the chosen level;
MPRINT(EM_DIAGRAM):   * Ensmbl50: Compute posterior vars using models predicting the chosen 
level;
274172    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
274173    +P_DepVar1 = 0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0;
274174    +P_DepVar0 = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
274175    +if I_DepVar = AutoNeural24_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = AutoNeural24_I_DepVar then do;
274176    +P_DEPVAR1 = P_DEPVAR1 + AutoNeural24_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + AutoNeural24_P_DepVar1;
274177    +P_DEPVAR0 = P_DEPVAR0 + AutoNeural24_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + AutoNeural24_P_DepVar0;
274178    +end;
MPRINT(EM_DIAGRAM):   end;
274179    +if I_DepVar = AutoNeural22_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = AutoNeural22_I_DepVar then do;
274180    +P_DEPVAR1 = P_DEPVAR1 + AutoNeural22_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + AutoNeural22_P_DepVar1;
274181    +P_DEPVAR0 = P_DEPVAR0 + AutoNeural22_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + AutoNeural22_P_DepVar0;
274182    +end;
MPRINT(EM_DIAGRAM):   end;
274183    +if I_DepVar = AutoNeural21_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = AutoNeural21_I_DepVar then do;
274184    +P_DEPVAR1 = P_DEPVAR1 + AutoNeural21_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + AutoNeural21_P_DepVar1;
274185    +P_DEPVAR0 = P_DEPVAR0 + AutoNeural21_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + AutoNeural21_P_DepVar0;
274186    +end;
MPRINT(EM_DIAGRAM):   end;
274187    +if I_DepVar = AutoNeural20_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = AutoNeural20_I_DepVar then do;
274188    +P_DEPVAR1 = P_DEPVAR1 + AutoNeural20_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + AutoNeural20_P_DepVar1;
274189    +P_DEPVAR0 = P_DEPVAR0 + AutoNeural20_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + AutoNeural20_P_DepVar0;
274190    +end;
MPRINT(EM_DIAGRAM):   end;
274191    +if I_DepVar = AutoNeural26_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = AutoNeural26_I_DepVar then do;
274192    +P_DEPVAR1 = P_DEPVAR1 + AutoNeural26_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + AutoNeural26_P_DepVar1;
274193    +P_DEPVAR0 = P_DEPVAR0 + AutoNeural26_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + AutoNeural26_P_DepVar0;
274194    +end;
MPRINT(EM_DIAGRAM):   end;
274195    +if I_DepVar = AutoNeural25_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = AutoNeural25_I_DepVar then do;
274196    +P_DEPVAR1 = P_DEPVAR1 + AutoNeural25_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + AutoNeural25_P_DepVar1;
274197    +P_DEPVAR0 = P_DEPVAR0 + AutoNeural25_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + AutoNeural25_P_DepVar0;
274198    +end;
MPRINT(EM_DIAGRAM):   end;
274199    +if I_DepVar = AutoNeural23_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = AutoNeural23_I_DepVar then do;
274200    +P_DEPVAR1 = P_DEPVAR1 + AutoNeural23_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + AutoNeural23_P_DepVar1;
274201    +P_DEPVAR0 = P_DEPVAR0 + AutoNeural23_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + AutoNeural23_P_DepVar0;
274202    +end;
MPRINT(EM_DIAGRAM):   end;
274203    +* Ensmbl50: Averaging posterior;
MPRINT(EM_DIAGRAM):   * Ensmbl50: Averaging posterior;
274204    +P_DepVar1 = P_DepVar1/vote_count;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1/vote_count;
274205    +P_DepVar0 = P_DepVar0/vote_count;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0/vote_count;
274206    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
274207    +* Ensmbl50: Producing Unformatted variable;
MPRINT(EM_DIAGRAM):   * Ensmbl50: Producing Unformatted variable;
274208    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
274209    +label U_DepVar = "Unnormalized Into: DepVar";
MPRINT(EM_DIAGRAM):   label U_DepVar = "Unnormalized Into: DepVar";
274210    +if I_DepVar = '1' then U_DepVar = 1;
MPRINT(EM_DIAGRAM):   if I_DepVar = '1' then U_DepVar = 1;
274211    +else
274212    +if I_DepVar = '0' then U_DepVar = 0;
MPRINT(EM_DIAGRAM):   else if I_DepVar = '0' then U_DepVar = 0;
274213    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
274214    +* Ensmbl50: Computing _WARN_ Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl50: Computing _WARN_ Variable;
274215    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
274216    +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
274217    +label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
274218    +_WARN_ = '';
MPRINT(EM_DIAGRAM):   _WARN_ = '';
274219    +if index(AUTONEURAL24_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
274219   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL24_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
274220    +if index(AUTONEURAL24_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
274220   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL24_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
274221    +if index(AUTONEURAL24_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
274221   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL24_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
274222    +if index(AUTONEURAL24_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
274222   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL24_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
274223    +if index(AUTONEURAL22_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
274223   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL22_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
274224    +if index(AUTONEURAL22_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
274224   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL22_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
274225    +if index(AUTONEURAL22_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
274225   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL22_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
274226    +if index(AUTONEURAL22_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
274226   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL22_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
274227    +if index(AUTONEURAL21_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
274227   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL21_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
274228    +if index(AUTONEURAL21_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
274228   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL21_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
274229    +if index(AUTONEURAL21_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
274229   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL21_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
274230    +if index(AUTONEURAL21_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
274230   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL21_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
274231    +if index(AUTONEURAL20_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
274231   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL20_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
274232    +if index(AUTONEURAL20_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
274232   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL20_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
274233    +if index(AUTONEURAL20_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
274233   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL20_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
274234    +if index(AUTONEURAL20_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
274234   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL20_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
274235    +if index(AUTONEURAL26_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
274235   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL26_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
274236    +if index(AUTONEURAL26_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
274236   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL26_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
274237    +if index(AUTONEURAL26_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
274237   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL26_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
274238    +if index(AUTONEURAL26_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
274238   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL26_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
274239    +if index(AUTONEURAL25_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
274239   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL25_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
274240    +if index(AUTONEURAL25_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
274240   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL25_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
274241    +if index(AUTONEURAL25_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
274241   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL25_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
274242    +if index(AUTONEURAL25_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
274242   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL25_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
274243    +if index(AUTONEURAL23_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
274243   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL23_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
274244    +if index(AUTONEURAL23_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
274244   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL23_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
274245    +if index(AUTONEURAL23_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
274245   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL23_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
274246    +if index(AUTONEURAL23_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
274246   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL23_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
274247    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
274248    +* Ensmbl50: Computing Residual Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl50: Computing Residual Vars;
274249    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
274250    +if
274251    +F_DepVar NE '1'
274252    +AND F_DepVar NE '0'
274253    +then do;
MPRINT(EM_DIAGRAM):   if F_DepVar NE '1' AND F_DepVar NE '0' then do;
274254    +R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
274255    +R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
274256    +end;
MPRINT(EM_DIAGRAM):   end;
274257    +else do;
MPRINT(EM_DIAGRAM):   else do;
274258    +R_DepVar1 = -P_DepVar1;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1;
274259    +R_DepVar0 = -P_DepVar0;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0;
274260    +SELECT(F_DepVar);
MPRINT(EM_DIAGRAM):   SELECT(F_DepVar);
274261    +WHEN('1') R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   WHEN('1') R_DepVar1 = R_DepVar1 +1;
274262    +WHEN('0') R_DepVar0 = R_DepVar0 +1;
MPRINT(EM_DIAGRAM):   WHEN('0') R_DepVar0 = R_DepVar0 +1;
274263    +OTHERWISE;
MPRINT(EM_DIAGRAM):   OTHERWISE;
274264    +END;
MPRINT(EM_DIAGRAM):   END;
274265    +END;
MPRINT(EM_DIAGRAM):   END;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
274266     run;

NOTE: DATA STEP view saved on file EMWS8.ENSMBL50_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.AUTONEURAL24_TRAIN.VIEW used (Total process time):
      real time           0.25 seconds
      cpu time            0.24 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.26 seconds
      cpu time            0.26 seconds
      

MPRINT(EM_DIAGRAM):   quit;
274267     quit;
274268     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
274269     filename emflow
274269   ! "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl50\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl50\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl50: Scoring AUTONEURAL24_VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
274270     *------------------------------------------------------------*;
274271     * Ensmbl50: Scoring AUTONEURAL24_VALIDATE data;
274272     *------------------------------------------------------------*;
274273     data EMWS8.Ensmbl50_VALIDATE
274274     / view=EMWS8.Ensmbl50_VALIDATE
274275     ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl50_VALIDATE / view=EMWS8.Ensmbl50_VALIDATE ;
274276     set EMWS8.AutoNeural24_VALIDATE
274277     ;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural24_VALIDATE ;
274278     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl50\EMFLOWSCORE.sas.
274279    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
274280    +* Ensmbl50: Combine model for DepVar;
MPRINT(EM_DIAGRAM):   * Ensmbl50: Combine model for DepVar;
274281    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
274282    +* Ensmbl50: Scoring Code of model 1 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl50: Scoring Code of model 1 of 7;
274283    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
274284    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
274285    +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
274286    +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
274287    +* NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
274288    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
274289    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
274290    +* TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
274291    +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
274292    +* NODE: Stat;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
274293    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
274294    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
274295    +* TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
274296    +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
274297    +* NODE: Filter;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
274298    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
274299    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
274300    +* TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
274301    +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
274302    +* NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
274303    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
274304    +
274305    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
274306    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
274306   !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
274307    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
274308    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
274309    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
274310    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
274311    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
274312    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
274313    +* TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
274314    +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
274315    +* NODE: Trans;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
274316    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
274317    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
274318    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
274319    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
274320    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
274321    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
274322    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
274323    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
274324    +* TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
274325    +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
274326    +* NODE: Part;
MPRINT(EM_DIAGRAM):   * NODE: Part;
274327    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
274328    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
274329    +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
274330    +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
274331    +* NODE: BINNING;
MPRINT(EM_DIAGRAM):   * NODE: BINNING;
274332    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
274333    +length _UFormat $200;
MPRINT(EM_DIAGRAM):   length _UFormat $200;
274334    +drop _UFormat;
MPRINT(EM_DIAGRAM):   drop _UFormat;
274335    +_UFormat='';
MPRINT(EM_DIAGRAM):   _UFormat='';
274336    +
274337    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
274338    +* Variable: AcceptedCmp5;
MPRINT(EM_DIAGRAM):   * Variable: AcceptedCmp5;
274339    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
274340    +LABEL GRP_AcceptedCmp5 =
274341    +'Grouped: AcceptedCmp5';
MPRINT(EM_DIAGRAM):   LABEL GRP_AcceptedCmp5 = 'Grouped: AcceptedCmp5';
274342    +
274343    +_UFormat = put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _UFormat = put(AcceptedCmp5,BEST.);
274344    +%dmnormip(_UFormat);
MPRINT(DMNORMIP):   call dmnorm(_UFormat,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
274345    +if MISSING(_UFORMAT) then do;
MPRINT(EM_DIAGRAM):   if MISSING(_UFORMAT) then do;
274346    +GRP_AcceptedCmp5 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 1;
274347    +end;
MPRINT(EM_DIAGRAM):   end;
274348    +else if NOT MISSING(_UFORMAT) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(_UFORMAT) then do;
274349    +if (_UFORMAT eq '0'
274350    +) then do;
MPRINT(EM_DIAGRAM):   if (_UFORMAT eq '0' ) then do;
274351    +GRP_AcceptedCmp5 = 2;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 2;
274352    +end;
MPRINT(EM_DIAGRAM):   end;
274353    +else
274354    +if (_UFORMAT eq '1'
274355    +) then do;
MPRINT(EM_DIAGRAM):   else if (_UFORMAT eq '1' ) then do;
274356    +GRP_AcceptedCmp5 = 3;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 3;
274357    +end;
MPRINT(EM_DIAGRAM):   end;
274358    +else do;
MPRINT(EM_DIAGRAM):   else do;
274359    +GRP_AcceptedCmp5 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 1;
274360    +end;
MPRINT(EM_DIAGRAM):   end;
274361    +end;
MPRINT(EM_DIAGRAM):   end;
274362    +
274363    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
274364    +* Variable: Frq;
MPRINT(EM_DIAGRAM):   * Variable: Frq;
274365    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
274366    +LABEL GRP_Frq = "Grouped: Frq";
MPRINT(EM_DIAGRAM):   LABEL GRP_Frq = "Grouped: Frq";
274367    +
274368    +if MISSING(Frq) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Frq) then do;
274369    +GRP_Frq = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq = 1;
274370    +end;
MPRINT(EM_DIAGRAM):   end;
274371    +else if NOT MISSING(Frq) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Frq) then do;
274372    +if Frq < 6 then do;
MPRINT(EM_DIAGRAM):   if Frq < 6 then do;
274373    +GRP_Frq = 2;
MPRINT(EM_DIAGRAM):   GRP_Frq = 2;
274374    +end;
MPRINT(EM_DIAGRAM):   end;
274375    +else
274376    +if 6 <= Frq AND Frq < 12 then do;
MPRINT(EM_DIAGRAM):   else if 6 <= Frq AND Frq < 12 then do;
274377    +GRP_Frq = 3;
MPRINT(EM_DIAGRAM):   GRP_Frq = 3;
274378    +end;
MPRINT(EM_DIAGRAM):   end;
274379    +else
274380    +if 12 <= Frq AND Frq < 18 then do;
MPRINT(EM_DIAGRAM):   else if 12 <= Frq AND Frq < 18 then do;
274381    +GRP_Frq = 4;
MPRINT(EM_DIAGRAM):   GRP_Frq = 4;
274382    +end;
MPRINT(EM_DIAGRAM):   end;
274383    +else
274384    +if 18 <= Frq then do;
MPRINT(EM_DIAGRAM):   else if 18 <= Frq then do;
274385    +GRP_Frq = 5;
MPRINT(EM_DIAGRAM):   GRP_Frq = 5;
274386    +end;
MPRINT(EM_DIAGRAM):   end;
274387    +end;
MPRINT(EM_DIAGRAM):   end;
274388    +
274389    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
274390    +* Variable: Income;
MPRINT(EM_DIAGRAM):   * Variable: Income;
274391    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
274392    +LABEL GRP_Income =
274393    +'Grouped: Income';
MPRINT(EM_DIAGRAM):   LABEL GRP_Income = 'Grouped: Income';
274394    +
274395    +if MISSING(Income) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Income) then do;
274396    +GRP_Income = 1;
MPRINT(EM_DIAGRAM):   GRP_Income = 1;
274397    +end;
MPRINT(EM_DIAGRAM):   end;
274398    +else if NOT MISSING(Income) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Income) then do;
274399    +if Income < 35268 then do;
MPRINT(EM_DIAGRAM):   if Income < 35268 then do;
274400    +GRP_Income = 2;
MPRINT(EM_DIAGRAM):   GRP_Income = 2;
274401    +end;
MPRINT(EM_DIAGRAM):   end;
274402    +else
274403    +if 35268 <= Income AND Income < 52157 then do;
MPRINT(EM_DIAGRAM):   else if 35268 <= Income AND Income < 52157 then do;
274404    +GRP_Income = 3;
MPRINT(EM_DIAGRAM):   GRP_Income = 3;
274405    +end;
MPRINT(EM_DIAGRAM):   end;
274406    +else
274407    +if 52157 <= Income AND Income < 69486 then do;
MPRINT(EM_DIAGRAM):   else if 52157 <= Income AND Income < 69486 then do;
274408    +GRP_Income = 4;
MPRINT(EM_DIAGRAM):   GRP_Income = 4;
274409    +end;
MPRINT(EM_DIAGRAM):   end;
274410    +else
274411    +if 69486 <= Income then do;
MPRINT(EM_DIAGRAM):   else if 69486 <= Income then do;
274412    +GRP_Income = 5;
MPRINT(EM_DIAGRAM):   GRP_Income = 5;
274413    +end;
MPRINT(EM_DIAGRAM):   end;
274414    +end;
MPRINT(EM_DIAGRAM):   end;
274415    +
274416    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
274417    +* Variable: Mnt;
MPRINT(EM_DIAGRAM):   * Variable: Mnt;
274418    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
274419    +LABEL GRP_Mnt = "Grouped: Mnt";
MPRINT(EM_DIAGRAM):   LABEL GRP_Mnt = "Grouped: Mnt";
274420    +
274421    +if MISSING(Mnt) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Mnt) then do;
274422    +GRP_Mnt = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 1;
274423    +end;
MPRINT(EM_DIAGRAM):   end;
274424    +else if NOT MISSING(Mnt) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Mnt) then do;
274425    +if Mnt < 72 then do;
MPRINT(EM_DIAGRAM):   if Mnt < 72 then do;
274426    +GRP_Mnt = 2;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 2;
274427    +end;
MPRINT(EM_DIAGRAM):   end;
274428    +else
274429    +if 72 <= Mnt AND Mnt < 405.5 then do;
MPRINT(EM_DIAGRAM):   else if 72 <= Mnt AND Mnt < 405.5 then do;
274430    +GRP_Mnt = 3;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 3;
274431    +end;
MPRINT(EM_DIAGRAM):   end;
274432    +else
274433    +if 405.5 <= Mnt AND Mnt < 1064 then do;
MPRINT(EM_DIAGRAM):   else if 405.5 <= Mnt AND Mnt < 1064 then do;
274434    +GRP_Mnt = 4;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 4;
274435    +end;
MPRINT(EM_DIAGRAM):   end;
274436    +else
274437    +if 1064 <= Mnt then do;
MPRINT(EM_DIAGRAM):   else if 1064 <= Mnt then do;
274438    +GRP_Mnt = 5;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 5;
274439    +end;
MPRINT(EM_DIAGRAM):   end;
274440    +end;
MPRINT(EM_DIAGRAM):   end;
274441    +
274442    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
274443    +* Variable: MntFishProducts;
MPRINT(EM_DIAGRAM):   * Variable: MntFishProducts;
274444    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
274445    +LABEL GRP_MntFishProducts =
274446    +'Grouped: MntFishProducts';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntFishProducts = 'Grouped: MntFishProducts';
274447    +
274448    +if MISSING(MntFishProducts) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntFishProducts) then do;
274449    +GRP_MntFishProducts = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 1;
274450    +end;
MPRINT(EM_DIAGRAM):   end;
274451    +else if NOT MISSING(MntFishProducts) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntFishProducts) then do;
274452    +if MntFishProducts < 3 then do;
MPRINT(EM_DIAGRAM):   if MntFishProducts < 3 then do;
274453    +GRP_MntFishProducts = 2;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 2;
274454    +end;
MPRINT(EM_DIAGRAM):   end;
274455    +else
274456    +if 3 <= MntFishProducts AND MntFishProducts < 13 then do;
MPRINT(EM_DIAGRAM):   else if 3 <= MntFishProducts AND MntFishProducts < 13 then do;
274457    +GRP_MntFishProducts = 3;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 3;
274458    +end;
MPRINT(EM_DIAGRAM):   end;
274459    +else
274460    +if 13 <= MntFishProducts AND MntFishProducts < 47 then do;
MPRINT(EM_DIAGRAM):   else if 13 <= MntFishProducts AND MntFishProducts < 47 then do;
274461    +GRP_MntFishProducts = 4;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 4;
274462    +end;
MPRINT(EM_DIAGRAM):   end;
274463    +else
274464    +if 47 <= MntFishProducts then do;
MPRINT(EM_DIAGRAM):   else if 47 <= MntFishProducts then do;
274465    +GRP_MntFishProducts = 5;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 5;
274466    +end;
MPRINT(EM_DIAGRAM):   end;
274467    +end;
MPRINT(EM_DIAGRAM):   end;
274468    +
274469    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
274470    +* Variable: MntGoldProds;
MPRINT(EM_DIAGRAM):   * Variable: MntGoldProds;
274471    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
274472    +LABEL GRP_MntGoldProds =
274473    +'Grouped: MntGoldProds';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntGoldProds = 'Grouped: MntGoldProds';
274474    +
274475    +if MISSING(MntGoldProds) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntGoldProds) then do;
274476    +GRP_MntGoldProds = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 1;
274477    +end;
MPRINT(EM_DIAGRAM):   end;
274478    +else if NOT MISSING(MntGoldProds) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntGoldProds) then do;
274479    +if MntGoldProds < 9 then do;
MPRINT(EM_DIAGRAM):   if MntGoldProds < 9 then do;
274480    +GRP_MntGoldProds = 2;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 2;
274481    +end;
MPRINT(EM_DIAGRAM):   end;
274482    +else
274483    +if 9 <= MntGoldProds AND MntGoldProds < 25 then do;
MPRINT(EM_DIAGRAM):   else if 9 <= MntGoldProds AND MntGoldProds < 25 then do;
274484    +GRP_MntGoldProds = 3;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 3;
274485    +end;
MPRINT(EM_DIAGRAM):   end;
274486    +else
274487    +if 25 <= MntGoldProds AND MntGoldProds < 59 then do;
MPRINT(EM_DIAGRAM):   else if 25 <= MntGoldProds AND MntGoldProds < 59 then do;
274488    +GRP_MntGoldProds = 4;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 4;
274489    +end;
MPRINT(EM_DIAGRAM):   end;
274490    +else
274491    +if 59 <= MntGoldProds then do;
MPRINT(EM_DIAGRAM):   else if 59 <= MntGoldProds then do;
274492    +GRP_MntGoldProds = 5;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 5;
274493    +end;
MPRINT(EM_DIAGRAM):   end;
274494    +end;
MPRINT(EM_DIAGRAM):   end;
274495    +
274496    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
274497    +* Variable: MntMeatProducts;
MPRINT(EM_DIAGRAM):   * Variable: MntMeatProducts;
274498    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
274499    +LABEL GRP_MntMeatProducts =
274500    +'Grouped: MntMeatProducts';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntMeatProducts = 'Grouped: MntMeatProducts';
274501    +
274502    +if MISSING(MntMeatProducts) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntMeatProducts) then do;
274503    +GRP_MntMeatProducts = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 1;
274504    +end;
MPRINT(EM_DIAGRAM):   end;
274505    +else if NOT MISSING(MntMeatProducts) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntMeatProducts) then do;
274506    +if MntMeatProducts < 17 then do;
MPRINT(EM_DIAGRAM):   if MntMeatProducts < 17 then do;
274507    +GRP_MntMeatProducts = 2;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 2;
274508    +end;
MPRINT(EM_DIAGRAM):   end;
274509    +else
274510    +if 17 <= MntMeatProducts AND MntMeatProducts < 72 then do;
MPRINT(EM_DIAGRAM):   else if 17 <= MntMeatProducts AND MntMeatProducts < 72 then do;
274511    +GRP_MntMeatProducts = 3;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 3;
274512    +end;
MPRINT(EM_DIAGRAM):   end;
274513    +else
274514    +if 72 <= MntMeatProducts AND MntMeatProducts < 246 then do;
MPRINT(EM_DIAGRAM):   else if 72 <= MntMeatProducts AND MntMeatProducts < 246 then do;
274515    +GRP_MntMeatProducts = 4;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 4;
274516    +end;
MPRINT(EM_DIAGRAM):   end;
274517    +else
274518    +if 246 <= MntMeatProducts then do;
MPRINT(EM_DIAGRAM):   else if 246 <= MntMeatProducts then do;
274519    +GRP_MntMeatProducts = 5;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 5;
274520    +end;
MPRINT(EM_DIAGRAM):   end;
274521    +end;
MPRINT(EM_DIAGRAM):   end;
274522    +
274523    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
274524    +* Variable: MntWines;
MPRINT(EM_DIAGRAM):   * Variable: MntWines;
274525    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
274526    +LABEL GRP_MntWines =
274527    +'Grouped: MntWines';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntWines = 'Grouped: MntWines';
274528    +
274529    +if MISSING(MntWines) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntWines) then do;
274530    +GRP_MntWines = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 1;
274531    +end;
MPRINT(EM_DIAGRAM):   end;
274532    +else if NOT MISSING(MntWines) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntWines) then do;
274533    +if MntWines < 24 then do;
MPRINT(EM_DIAGRAM):   if MntWines < 24 then do;
274534    +GRP_MntWines = 2;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 2;
274535    +end;
MPRINT(EM_DIAGRAM):   end;
274536    +else
274537    +if 24 <= MntWines AND MntWines < 183.5 then do;
MPRINT(EM_DIAGRAM):   else if 24 <= MntWines AND MntWines < 183.5 then do;
274538    +GRP_MntWines = 3;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 3;
274539    +end;
MPRINT(EM_DIAGRAM):   end;
274540    +else
274541    +if 183.5 <= MntWines AND MntWines < 508 then do;
MPRINT(EM_DIAGRAM):   else if 183.5 <= MntWines AND MntWines < 508 then do;
274542    +GRP_MntWines = 4;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 4;
274543    +end;
MPRINT(EM_DIAGRAM):   end;
274544    +else
274545    +if 508 <= MntWines then do;
MPRINT(EM_DIAGRAM):   else if 508 <= MntWines then do;
274546    +GRP_MntWines = 5;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 5;
274547    +end;
MPRINT(EM_DIAGRAM):   end;
274548    +end;
MPRINT(EM_DIAGRAM):   end;
274549    +
274550    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
274551    +* Variable: NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumCatalogPurchases;
274552    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
274553    +LABEL GRP_NumCatalogPurchases =
274554    +'Grouped: NumCatalogPurchases';
MPRINT(EM_DIAGRAM):   LABEL GRP_NumCatalogPurchases = 'Grouped: NumCatalogPurchases';
274555    +
274556    +if MISSING(NumCatalogPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumCatalogPurchases) then do;
274557    +GRP_NumCatalogPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 1;
274558    +end;
MPRINT(EM_DIAGRAM):   end;
274559    +else if NOT MISSING(NumCatalogPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumCatalogPurchases) then do;
274560    +if NumCatalogPurchases < 0 then do;
MPRINT(EM_DIAGRAM):   if NumCatalogPurchases < 0 then do;
274561    +GRP_NumCatalogPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 2;
274562    +end;
MPRINT(EM_DIAGRAM):   end;
274563    +else
274564    +if 0 <= NumCatalogPurchases AND NumCatalogPurchases < 2 then do;
MPRINT(EM_DIAGRAM):   else if 0 <= NumCatalogPurchases AND NumCatalogPurchases < 2 then do;
274565    +GRP_NumCatalogPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 3;
274566    +end;
MPRINT(EM_DIAGRAM):   end;
274567    +else
274568    +if 2 <= NumCatalogPurchases AND NumCatalogPurchases < 4 then do;
MPRINT(EM_DIAGRAM):   else if 2 <= NumCatalogPurchases AND NumCatalogPurchases < 4 then do;
274569    +GRP_NumCatalogPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 4;
274570    +end;
MPRINT(EM_DIAGRAM):   end;
274571    +else
274572    +if 4 <= NumCatalogPurchases then do;
MPRINT(EM_DIAGRAM):   else if 4 <= NumCatalogPurchases then do;
274573    +GRP_NumCatalogPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 5;
274574    +end;
MPRINT(EM_DIAGRAM):   end;
274575    +end;
MPRINT(EM_DIAGRAM):   end;
274576    +
274577    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
274578    +* Variable: NumDistPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumDistPurchases;
274579    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
274580    +LABEL GRP_NumDistPurchases = "Grouped: NumDistPurchases";
MPRINT(EM_DIAGRAM):   LABEL GRP_NumDistPurchases = "Grouped: NumDistPurchases";
274581    +
274582    +if MISSING(NumDistPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumDistPurchases) then do;
274583    +GRP_NumDistPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 1;
274584    +end;
MPRINT(EM_DIAGRAM):   end;
274585    +else if NOT MISSING(NumDistPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumDistPurchases) then do;
274586    +if NumDistPurchases < 3 then do;
MPRINT(EM_DIAGRAM):   if NumDistPurchases < 3 then do;
274587    +GRP_NumDistPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 2;
274588    +end;
MPRINT(EM_DIAGRAM):   end;
274589    +else
274590    +if 3 <= NumDistPurchases AND NumDistPurchases < 6 then do;
MPRINT(EM_DIAGRAM):   else if 3 <= NumDistPurchases AND NumDistPurchases < 6 then do;
274591    +GRP_NumDistPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 3;
274592    +end;
MPRINT(EM_DIAGRAM):   end;
274593    +else
274594    +if 6 <= NumDistPurchases AND NumDistPurchases < 10 then do;
MPRINT(EM_DIAGRAM):   else if 6 <= NumDistPurchases AND NumDistPurchases < 10 then do;
274595    +GRP_NumDistPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 4;
274596    +end;
MPRINT(EM_DIAGRAM):   end;
274597    +else
274598    +if 10 <= NumDistPurchases then do;
MPRINT(EM_DIAGRAM):   else if 10 <= NumDistPurchases then do;
274599    +GRP_NumDistPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 5;
274600    +end;
MPRINT(EM_DIAGRAM):   end;
274601    +end;
MPRINT(EM_DIAGRAM):   end;
274602    +
274603    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
274604    +* Variable: NumWebPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumWebPurchases;
274605    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
274606    +LABEL GRP_NumWebPurchases =
274607    +'Grouped: NumWebPurchases';
MPRINT(EM_DIAGRAM):   LABEL GRP_NumWebPurchases = 'Grouped: NumWebPurchases';
274608    +
274609    +if MISSING(NumWebPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumWebPurchases) then do;
274610    +GRP_NumWebPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 1;
274611    +end;
MPRINT(EM_DIAGRAM):   end;
274612    +else if NOT MISSING(NumWebPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumWebPurchases) then do;
274613    +if NumWebPurchases < 2 then do;
MPRINT(EM_DIAGRAM):   if NumWebPurchases < 2 then do;
274614    +GRP_NumWebPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 2;
274615    +end;
MPRINT(EM_DIAGRAM):   end;
274616    +else
274617    +if 2 <= NumWebPurchases AND NumWebPurchases < 4 then do;
MPRINT(EM_DIAGRAM):   else if 2 <= NumWebPurchases AND NumWebPurchases < 4 then do;
274618    +GRP_NumWebPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 3;
274619    +end;
MPRINT(EM_DIAGRAM):   end;
274620    +else
274621    +if 4 <= NumWebPurchases AND NumWebPurchases < 6 then do;
MPRINT(EM_DIAGRAM):   else if 4 <= NumWebPurchases AND NumWebPurchases < 6 then do;
274622    +GRP_NumWebPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 4;
274623    +end;
MPRINT(EM_DIAGRAM):   end;
274624    +else
274625    +if 6 <= NumWebPurchases then do;
MPRINT(EM_DIAGRAM):   else if 6 <= NumWebPurchases then do;
274626    +GRP_NumWebPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 5;
274627    +end;
MPRINT(EM_DIAGRAM):   end;
274628    +end;
MPRINT(EM_DIAGRAM):   end;
274629    +
274630    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
274631    +* Variable: RFMstat;
MPRINT(EM_DIAGRAM):   * Variable: RFMstat;
274632    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
274633    +LABEL GRP_RFMstat = "Grouped: RFMstat";
MPRINT(EM_DIAGRAM):   LABEL GRP_RFMstat = "Grouped: RFMstat";
274634    +
274635    +if MISSING(RFMstat) then do;
MPRINT(EM_DIAGRAM):   if MISSING(RFMstat) then do;
274636    +GRP_RFMstat = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 1;
274637    +end;
MPRINT(EM_DIAGRAM):   end;
274638    +else if NOT MISSING(RFMstat) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(RFMstat) then do;
274639    +if RFMstat < 10.34 then do;
MPRINT(EM_DIAGRAM):   if RFMstat < 10.34 then do;
274640    +GRP_RFMstat = 2;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 2;
274641    +end;
MPRINT(EM_DIAGRAM):   end;
274642    +else
274643    +if 10.34 <= RFMstat AND RFMstat < 128.09 then do;
MPRINT(EM_DIAGRAM):   else if 10.34 <= RFMstat AND RFMstat < 128.09 then do;
274644    +GRP_RFMstat = 3;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 3;
274645    +end;
MPRINT(EM_DIAGRAM):   end;
274646    +else
274647    +if 128.09 <= RFMstat AND RFMstat < 455.22 then do;
MPRINT(EM_DIAGRAM):   else if 128.09 <= RFMstat AND RFMstat < 455.22 then do;
274648    +GRP_RFMstat = 4;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 4;
274649    +end;
MPRINT(EM_DIAGRAM):   end;
274650    +else
274651    +if 455.22 <= RFMstat then do;
MPRINT(EM_DIAGRAM):   else if 455.22 <= RFMstat then do;
274652    +GRP_RFMstat = 5;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 5;
274653    +end;
MPRINT(EM_DIAGRAM):   end;
274654    +end;
MPRINT(EM_DIAGRAM):   end;
274655    +
274656    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
274657    +* Variable: RMntFrq;
MPRINT(EM_DIAGRAM):   * Variable: RMntFrq;
274658    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
274659    +LABEL GRP_RMntFrq = "Grouped: RMntFrq";
MPRINT(EM_DIAGRAM):   LABEL GRP_RMntFrq = "Grouped: RMntFrq";
274660    +
274661    +if MISSING(RMntFrq) then do;
MPRINT(EM_DIAGRAM):   if MISSING(RMntFrq) then do;
274662    +GRP_RMntFrq = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 1;
274663    +end;
MPRINT(EM_DIAGRAM):   end;
274664    +else if NOT MISSING(RMntFrq) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(RMntFrq) then do;
274665    +if RMntFrq < 13.25 then do;
MPRINT(EM_DIAGRAM):   if RMntFrq < 13.25 then do;
274666    +GRP_RMntFrq = 2;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 2;
274667    +end;
MPRINT(EM_DIAGRAM):   end;
274668    +else
274669    +if 13.25 <= RMntFrq AND RMntFrq < 30.4 then do;
MPRINT(EM_DIAGRAM):   else if 13.25 <= RMntFrq AND RMntFrq < 30.4 then do;
274670    +GRP_RMntFrq = 3;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 3;
274671    +end;
MPRINT(EM_DIAGRAM):   end;
274672    +else
274673    +if 30.4 <= RMntFrq AND RMntFrq < 52.86 then do;
MPRINT(EM_DIAGRAM):   else if 30.4 <= RMntFrq AND RMntFrq < 52.86 then do;
274674    +GRP_RMntFrq = 4;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 4;
274675    +end;
MPRINT(EM_DIAGRAM):   end;
274676    +else
274677    +if 52.86 <= RMntFrq then do;
MPRINT(EM_DIAGRAM):   else if 52.86 <= RMntFrq then do;
274678    +GRP_RMntFrq = 5;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 5;
274679    +end;
MPRINT(EM_DIAGRAM):   end;
274680    +end;
MPRINT(EM_DIAGRAM):   end;
274681    +
274682    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
274683    +* Variable: Recency;
MPRINT(EM_DIAGRAM):   * Variable: Recency;
274684    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
274685    +LABEL GRP_Recency =
274686    +'Grouped: Recency';
MPRINT(EM_DIAGRAM):   LABEL GRP_Recency = 'Grouped: Recency';
274687    +
274688    +if MISSING(Recency) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Recency) then do;
274689    +GRP_Recency = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency = 1;
274690    +end;
MPRINT(EM_DIAGRAM):   end;
274691    +else if NOT MISSING(Recency) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Recency) then do;
274692    +if Recency < 24 then do;
MPRINT(EM_DIAGRAM):   if Recency < 24 then do;
274693    +GRP_Recency = 2;
MPRINT(EM_DIAGRAM):   GRP_Recency = 2;
274694    +end;
MPRINT(EM_DIAGRAM):   end;
274695    +else
274696    +if 24 <= Recency AND Recency < 48 then do;
MPRINT(EM_DIAGRAM):   else if 24 <= Recency AND Recency < 48 then do;
274697    +GRP_Recency = 3;
MPRINT(EM_DIAGRAM):   GRP_Recency = 3;
274698    +end;
MPRINT(EM_DIAGRAM):   end;
274699    +else
274700    +if 48 <= Recency AND Recency < 73 then do;
MPRINT(EM_DIAGRAM):   else if 48 <= Recency AND Recency < 73 then do;
274701    +GRP_Recency = 4;
MPRINT(EM_DIAGRAM):   GRP_Recency = 4;
274702    +end;
MPRINT(EM_DIAGRAM):   end;
274703    +else
274704    +if 73 <= Recency then do;
MPRINT(EM_DIAGRAM):   else if 73 <= Recency then do;
274705    +GRP_Recency = 5;
MPRINT(EM_DIAGRAM):   GRP_Recency = 5;
274706    +end;
MPRINT(EM_DIAGRAM):   end;
274707    +end;
MPRINT(EM_DIAGRAM):   end;
274708    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
274709    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
274710    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
274711    +* NODE: AutoNeural24;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural24;
274712    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
274713    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
274714    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
274715    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
274716    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
274717    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
274718    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
274719    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
274720    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
274721    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
274722    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
274723    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
274724    +LENGTH _WARN_ $4
274725    +      F_DepVar  $ 12
274726    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
274727    +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
274728    +
274729    +      label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
MPRINT(EM_DIAGRAM):   label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
274730    +
274731    +      label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
274732    +
274733    +      label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
274734    +
274735    +      label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
274736    +
274737    +      label GRP_Income2 = 'Dummy: GRP_Income=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Income2 = 'Dummy: GRP_Income=2' ;
274738    +
274739    +      label GRP_Income3 = 'Dummy: GRP_Income=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Income3 = 'Dummy: GRP_Income=3' ;
274740    +
274741    +      label GRP_Income4 = 'Dummy: GRP_Income=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Income4 = 'Dummy: GRP_Income=4' ;
274742    +
274743    +      label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
274744    +
274745    +      label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
274746    +
274747    +      label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
274748    +
274749    +      label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
274750    +
274751    +      label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
274752    +
274753    +      label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
274754    +
274755    +      label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
274756    +
274757    +      label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
274758    +
274759    +      label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
274760    +
274761    +      label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
274762    +
274763    +      label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
274764    +
274765    +      label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
274766    +
274767    +      label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
274768    +
274769    +      label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
274770    +
274771    +      label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
274772    +
274773    +      label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
274774    +
274775    +      label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
274776    +
274777    +      label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
274778    +
274779    +      label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
274780    +
274781    +      label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
274782    +
274783    +      label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
274784    +
274785    +      label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
274786    +
274787    +      label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
274788    +
274789    +      label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
274790    +
274791    +      label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
274792    +
274793    +      label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
274794    +
274795    +      label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
274796    +
274797    +      label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
274798    +
274799    +      label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
274800    +
274801    +      label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
274802    +
274803    +      label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
274804    +
274805    +      label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
274806    +
274807    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
274808    +
274809    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
274810    +
274811    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
274812    +
274813    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
274814    +
274815    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
274816    +
274817    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
274818    +
274819    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
274820    +
274821    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
274822    +
274823    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
274824    +
274825    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
274826    +
274827    +*** Generate dummy variables for GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmp5 ;
274828    +drop GRP_AcceptedCmp52 ;
MPRINT(EM_DIAGRAM):   drop GRP_AcceptedCmp52 ;
274829    +if missing( GRP_AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmp5 ) then do;
274830    +   GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
274831    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
274832    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
274833    +end;
MPRINT(EM_DIAGRAM):   end;
274834    +else do;
MPRINT(EM_DIAGRAM):   else do;
274835    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
274836    +   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
274837    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
274838    +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
274839    +      GRP_AcceptedCmp52 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = 1;
274840    +   end;
MPRINT(EM_DIAGRAM):   end;
274841    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
274842    +      GRP_AcceptedCmp52 = -1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = -1;
274843    +   end;
MPRINT(EM_DIAGRAM):   end;
274844    +   else do;
MPRINT(EM_DIAGRAM):   else do;
274845    +      GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
274846    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
274847    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
274848    +   end;
MPRINT(EM_DIAGRAM):   end;
274849    +end;
MPRINT(EM_DIAGRAM):   end;
274850    +
274851    +*** Generate dummy variables for GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Frq ;
274852    +drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
274853    +if missing( GRP_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Frq ) then do;
274854    +   GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
274855    +   GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
274856    +   GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
274857    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
274858    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
274859    +end;
MPRINT(EM_DIAGRAM):   end;
274860    +else do;
MPRINT(EM_DIAGRAM):   else do;
274861    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
274862    +   _dm12 = put( GRP_Frq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Frq , BEST12. );
274863    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
274864    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
274865    +      GRP_Frq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = -1;
274866    +      GRP_Frq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = -1;
274867    +      GRP_Frq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = -1;
274868    +   end;
MPRINT(EM_DIAGRAM):   end;
274869    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
274870    +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
274871    +      GRP_Frq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 1;
274872    +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
274873    +   end;
MPRINT(EM_DIAGRAM):   end;
274874    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
274875    +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
274876    +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
274877    +      GRP_Frq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 1;
274878    +   end;
MPRINT(EM_DIAGRAM):   end;
274879    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
274880    +      GRP_Frq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 1;
274881    +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
274882    +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
274883    +   end;
MPRINT(EM_DIAGRAM):   end;
274884    +   else do;
MPRINT(EM_DIAGRAM):   else do;
274885    +      GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
274886    +      GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
274887    +      GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
274888    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
274889    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
274890    +   end;
MPRINT(EM_DIAGRAM):   end;
274891    +end;
MPRINT(EM_DIAGRAM):   end;
274892    +
274893    +*** Generate dummy variables for GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Income ;
274894    +drop GRP_Income2 GRP_Income3 GRP_Income4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Income2 GRP_Income3 GRP_Income4 ;
274895    +if missing( GRP_Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Income ) then do;
274896    +   GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
274897    +   GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
274898    +   GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
274899    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
274900    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
274901    +end;
MPRINT(EM_DIAGRAM):   end;
274902    +else do;
MPRINT(EM_DIAGRAM):   else do;
274903    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
274904    +   _dm12 = put( GRP_Income , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Income , BEST12. );
274905    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
274906    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
274907    +      GRP_Income2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = -1;
274908    +      GRP_Income3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = -1;
274909    +      GRP_Income4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = -1;
274910    +   end;
MPRINT(EM_DIAGRAM):   end;
274911    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
274912    +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
274913    +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
274914    +      GRP_Income4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 1;
274915    +   end;
MPRINT(EM_DIAGRAM):   end;
274916    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
274917    +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
274918    +      GRP_Income3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 1;
274919    +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
274920    +   end;
MPRINT(EM_DIAGRAM):   end;
274921    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
274922    +      GRP_Income2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 1;
274923    +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
274924    +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
274925    +   end;
MPRINT(EM_DIAGRAM):   end;
274926    +   else do;
MPRINT(EM_DIAGRAM):   else do;
274927    +      GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
274928    +      GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
274929    +      GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
274930    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
274931    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
274932    +   end;
MPRINT(EM_DIAGRAM):   end;
274933    +end;
MPRINT(EM_DIAGRAM):   end;
274934    +
274935    +*** Generate dummy variables for GRP_Mnt ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Mnt ;
274936    +drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
274937    +if missing( GRP_Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Mnt ) then do;
274938    +   GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
274939    +   GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
274940    +   GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
274941    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
274942    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
274943    +end;
MPRINT(EM_DIAGRAM):   end;
274944    +else do;
MPRINT(EM_DIAGRAM):   else do;
274945    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
274946    +   _dm12 = put( GRP_Mnt , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Mnt , BEST12. );
274947    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
274948    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
274949    +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
274950    +      GRP_Mnt3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 1;
274951    +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
274952    +   end;
MPRINT(EM_DIAGRAM):   end;
274953    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
274954    +      GRP_Mnt2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = -1;
274955    +      GRP_Mnt3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = -1;
274956    +      GRP_Mnt4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = -1;
274957    +   end;
MPRINT(EM_DIAGRAM):   end;
274958    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
274959    +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
274960    +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
274961    +      GRP_Mnt4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 1;
274962    +   end;
MPRINT(EM_DIAGRAM):   end;
274963    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
274964    +      GRP_Mnt2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 1;
274965    +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
274966    +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
274967    +   end;
MPRINT(EM_DIAGRAM):   end;
274968    +   else do;
MPRINT(EM_DIAGRAM):   else do;
274969    +      GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
274970    +      GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
274971    +      GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
274972    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
274973    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
274974    +   end;
MPRINT(EM_DIAGRAM):   end;
274975    +end;
MPRINT(EM_DIAGRAM):   end;
274976    +
274977    +*** Generate dummy variables for GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntFishProducts ;
274978    +drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
274979    +if missing( GRP_MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntFishProducts ) then do;
274980    +   GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
274981    +   GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
274982    +   GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
274983    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
274984    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
274985    +end;
MPRINT(EM_DIAGRAM):   end;
274986    +else do;
MPRINT(EM_DIAGRAM):   else do;
274987    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
274988    +   _dm12 = put( GRP_MntFishProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntFishProducts , BEST12. );
274989    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
274990    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
274991    +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
274992    +      GRP_MntFishProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 1;
274993    +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
274994    +   end;
MPRINT(EM_DIAGRAM):   end;
274995    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
274996    +      GRP_MntFishProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = -1;
274997    +      GRP_MntFishProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = -1;
274998    +      GRP_MntFishProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = -1;
274999    +   end;
MPRINT(EM_DIAGRAM):   end;
275000    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
275001    +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
275002    +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
275003    +      GRP_MntFishProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 1;
275004    +   end;
MPRINT(EM_DIAGRAM):   end;
275005    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
275006    +      GRP_MntFishProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 1;
275007    +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
275008    +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
275009    +   end;
MPRINT(EM_DIAGRAM):   end;
275010    +   else do;
MPRINT(EM_DIAGRAM):   else do;
275011    +      GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
275012    +      GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
275013    +      GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
275014    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
275015    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
275016    +   end;
MPRINT(EM_DIAGRAM):   end;
275017    +end;
MPRINT(EM_DIAGRAM):   end;
275018    +
275019    +*** Generate dummy variables for GRP_MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntGoldProds ;
275020    +drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
275021    +if missing( GRP_MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntGoldProds ) then do;
275022    +   GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
275023    +   GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
275024    +   GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
275025    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
275026    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
275027    +end;
MPRINT(EM_DIAGRAM):   end;
275028    +else do;
MPRINT(EM_DIAGRAM):   else do;
275029    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
275030    +   _dm12 = put( GRP_MntGoldProds , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntGoldProds , BEST12. );
275031    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
275032    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
275033    +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
275034    +      GRP_MntGoldProds3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 1;
275035    +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
275036    +   end;
MPRINT(EM_DIAGRAM):   end;
275037    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
275038    +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
275039    +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
275040    +      GRP_MntGoldProds4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 1;
275041    +   end;
MPRINT(EM_DIAGRAM):   end;
275042    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
275043    +      GRP_MntGoldProds2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = -1;
275044    +      GRP_MntGoldProds3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = -1;
275045    +      GRP_MntGoldProds4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = -1;
275046    +   end;
MPRINT(EM_DIAGRAM):   end;
275047    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
275048    +      GRP_MntGoldProds2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 1;
275049    +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
275050    +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
275051    +   end;
MPRINT(EM_DIAGRAM):   end;
275052    +   else do;
MPRINT(EM_DIAGRAM):   else do;
275053    +      GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
275054    +      GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
275055    +      GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
275056    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
275057    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
275058    +   end;
MPRINT(EM_DIAGRAM):   end;
275059    +end;
MPRINT(EM_DIAGRAM):   end;
275060    +
275061    +*** Generate dummy variables for GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntMeatProducts ;
275062    +drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
275063    +if missing( GRP_MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntMeatProducts ) then do;
275064    +   GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
275065    +   GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
275066    +   GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
275067    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
275068    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
275069    +end;
MPRINT(EM_DIAGRAM):   end;
275070    +else do;
MPRINT(EM_DIAGRAM):   else do;
275071    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
275072    +   _dm12 = put( GRP_MntMeatProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntMeatProducts , BEST12. );
275073    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
275074    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
275075    +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
275076    +      GRP_MntMeatProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 1;
275077    +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
275078    +   end;
MPRINT(EM_DIAGRAM):   end;
275079    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
275080    +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
275081    +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
275082    +      GRP_MntMeatProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 1;
275083    +   end;
MPRINT(EM_DIAGRAM):   end;
275084    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
275085    +      GRP_MntMeatProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = -1;
275086    +      GRP_MntMeatProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = -1;
275087    +      GRP_MntMeatProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = -1;
275088    +   end;
MPRINT(EM_DIAGRAM):   end;
275089    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
275090    +      GRP_MntMeatProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 1;
275091    +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
275092    +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
275093    +   end;
MPRINT(EM_DIAGRAM):   end;
275094    +   else do;
MPRINT(EM_DIAGRAM):   else do;
275095    +      GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
275096    +      GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
275097    +      GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
275098    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
275099    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
275100    +   end;
MPRINT(EM_DIAGRAM):   end;
275101    +end;
MPRINT(EM_DIAGRAM):   end;
275102    +
275103    +*** Generate dummy variables for GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntWines ;
275104    +drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
275105    +if missing( GRP_MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntWines ) then do;
275106    +   GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
275107    +   GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
275108    +   GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
275109    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
275110    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
275111    +end;
MPRINT(EM_DIAGRAM):   end;
275112    +else do;
MPRINT(EM_DIAGRAM):   else do;
275113    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
275114    +   _dm12 = put( GRP_MntWines , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntWines , BEST12. );
275115    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
275116    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
275117    +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
275118    +      GRP_MntWines3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 1;
275119    +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
275120    +   end;
MPRINT(EM_DIAGRAM):   end;
275121    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
275122    +      GRP_MntWines2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = -1;
275123    +      GRP_MntWines3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = -1;
275124    +      GRP_MntWines4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = -1;
275125    +   end;
MPRINT(EM_DIAGRAM):   end;
275126    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
275127    +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
275128    +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
275129    +      GRP_MntWines4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 1;
275130    +   end;
MPRINT(EM_DIAGRAM):   end;
275131    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
275132    +      GRP_MntWines2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 1;
275133    +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
275134    +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
275135    +   end;
MPRINT(EM_DIAGRAM):   end;
275136    +   else do;
MPRINT(EM_DIAGRAM):   else do;
275137    +      GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
275138    +      GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
275139    +      GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
275140    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
275141    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
275142    +   end;
MPRINT(EM_DIAGRAM):   end;
275143    +end;
MPRINT(EM_DIAGRAM):   end;
275144    +
275145    +*** Generate dummy variables for GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumCatalogPurchases ;
275146    +drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
275147    +if missing( GRP_NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumCatalogPurchases ) then do;
275148    +   GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
275149    +   GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
275150    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
275151    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
275152    +end;
MPRINT(EM_DIAGRAM):   end;
275153    +else do;
MPRINT(EM_DIAGRAM):   else do;
275154    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
275155    +   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
275156    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
275157    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
275158    +      GRP_NumCatalogPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 1;
275159    +      GRP_NumCatalogPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 0;
275160    +   end;
MPRINT(EM_DIAGRAM):   end;
275161    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
275162    +      GRP_NumCatalogPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = -1;
275163    +      GRP_NumCatalogPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = -1;
275164    +   end;
MPRINT(EM_DIAGRAM):   end;
275165    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
275166    +      GRP_NumCatalogPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 0;
275167    +      GRP_NumCatalogPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 1;
275168    +   end;
MPRINT(EM_DIAGRAM):   end;
275169    +   else do;
MPRINT(EM_DIAGRAM):   else do;
275170    +      GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
275171    +      GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
275172    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
275173    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
275174    +   end;
MPRINT(EM_DIAGRAM):   end;
275175    +end;
MPRINT(EM_DIAGRAM):   end;
275176    +
275177    +*** Generate dummy variables for GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumDistPurchases ;
275178    +drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
275179    +if missing( GRP_NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumDistPurchases ) then do;
275180    +   GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
275181    +   GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
275182    +   GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
275183    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
275184    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
275185    +end;
MPRINT(EM_DIAGRAM):   end;
275186    +else do;
MPRINT(EM_DIAGRAM):   else do;
275187    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
275188    +   _dm12 = put( GRP_NumDistPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumDistPurchases , BEST12. );
275189    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
275190    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
275191    +      GRP_NumDistPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = -1;
275192    +      GRP_NumDistPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = -1;
275193    +      GRP_NumDistPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = -1;
275194    +   end;
MPRINT(EM_DIAGRAM):   end;
275195    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
275196    +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
275197    +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
275198    +      GRP_NumDistPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 1;
275199    +   end;
MPRINT(EM_DIAGRAM):   end;
275200    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
275201    +      GRP_NumDistPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 1;
275202    +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
275203    +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
275204    +   end;
MPRINT(EM_DIAGRAM):   end;
275205    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
275206    +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
275207    +      GRP_NumDistPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 1;
275208    +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
275209    +   end;
MPRINT(EM_DIAGRAM):   end;
275210    +   else do;
MPRINT(EM_DIAGRAM):   else do;
275211    +      GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
275212    +      GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
275213    +      GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
275214    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
275215    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
275216    +   end;
MPRINT(EM_DIAGRAM):   end;
275217    +end;
MPRINT(EM_DIAGRAM):   end;
275218    +
275219    +*** Generate dummy variables for GRP_NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumWebPurchases ;
275220    +drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
275221    +if missing( GRP_NumWebPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumWebPurchases ) then do;
275222    +   GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
275223    +   GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
275224    +   GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
275225    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
275226    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
275227    +end;
MPRINT(EM_DIAGRAM):   end;
275228    +else do;
MPRINT(EM_DIAGRAM):   else do;
275229    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
275230    +   _dm12 = put( GRP_NumWebPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumWebPurchases , BEST12. );
275231    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
275232    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
275233    +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
275234    +      GRP_NumWebPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 1;
275235    +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
275236    +   end;
MPRINT(EM_DIAGRAM):   end;
275237    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
275238    +      GRP_NumWebPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = -1;
275239    +      GRP_NumWebPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = -1;
275240    +      GRP_NumWebPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = -1;
275241    +   end;
MPRINT(EM_DIAGRAM):   end;
275242    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
275243    +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
275244    +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
275245    +      GRP_NumWebPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 1;
275246    +   end;
MPRINT(EM_DIAGRAM):   end;
275247    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
275248    +      GRP_NumWebPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 1;
275249    +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
275250    +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
275251    +   end;
MPRINT(EM_DIAGRAM):   end;
275252    +   else do;
MPRINT(EM_DIAGRAM):   else do;
275253    +      GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
275254    +      GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
275255    +      GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
275256    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
275257    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
275258    +   end;
MPRINT(EM_DIAGRAM):   end;
275259    +end;
MPRINT(EM_DIAGRAM):   end;
275260    +
275261    +*** Generate dummy variables for GRP_RFMstat ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RFMstat ;
275262    +drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
275263    +if missing( GRP_RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RFMstat ) then do;
275264    +   GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
275265    +   GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
275266    +   GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
275267    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
275268    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
275269    +end;
MPRINT(EM_DIAGRAM):   end;
275270    +else do;
MPRINT(EM_DIAGRAM):   else do;
275271    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
275272    +   _dm12 = put( GRP_RFMstat , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RFMstat , BEST12. );
275273    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
275274    +   if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
275275    +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
275276    +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
275277    +      GRP_RFMstat4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 1;
275278    +   end;
MPRINT(EM_DIAGRAM):   end;
275279    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
275280    +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
275281    +      GRP_RFMstat3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 1;
275282    +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
275283    +   end;
MPRINT(EM_DIAGRAM):   end;
275284    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
275285    +      GRP_RFMstat2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = -1;
275286    +      GRP_RFMstat3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = -1;
275287    +      GRP_RFMstat4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = -1;
275288    +   end;
MPRINT(EM_DIAGRAM):   end;
275289    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
275290    +      GRP_RFMstat2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 1;
275291    +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
275292    +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
275293    +   end;
MPRINT(EM_DIAGRAM):   end;
275294    +   else do;
MPRINT(EM_DIAGRAM):   else do;
275295    +      GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
275296    +      GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
275297    +      GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
275298    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
275299    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
275300    +   end;
MPRINT(EM_DIAGRAM):   end;
275301    +end;
MPRINT(EM_DIAGRAM):   end;
275302    +
275303    +*** Generate dummy variables for GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RMntFrq ;
275304    +drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
275305    +if missing( GRP_RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RMntFrq ) then do;
275306    +   GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
275307    +   GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
275308    +   GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
275309    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
275310    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
275311    +end;
MPRINT(EM_DIAGRAM):   end;
275312    +else do;
MPRINT(EM_DIAGRAM):   else do;
275313    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
275314    +   _dm12 = put( GRP_RMntFrq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RMntFrq , BEST12. );
275315    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
275316    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
275317    +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
275318    +      GRP_RMntFrq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 1;
275319    +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
275320    +   end;
MPRINT(EM_DIAGRAM):   end;
275321    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
275322    +      GRP_RMntFrq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = -1;
275323    +      GRP_RMntFrq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = -1;
275324    +      GRP_RMntFrq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = -1;
275325    +   end;
MPRINT(EM_DIAGRAM):   end;
275326    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
275327    +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
275328    +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
275329    +      GRP_RMntFrq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 1;
275330    +   end;
MPRINT(EM_DIAGRAM):   end;
275331    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
275332    +      GRP_RMntFrq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 1;
275333    +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
275334    +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
275335    +   end;
MPRINT(EM_DIAGRAM):   end;
275336    +   else do;
MPRINT(EM_DIAGRAM):   else do;
275337    +      GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
275338    +      GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
275339    +      GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
275340    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
275341    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
275342    +   end;
MPRINT(EM_DIAGRAM):   end;
275343    +end;
MPRINT(EM_DIAGRAM):   end;
275344    +
275345    +*** Generate dummy variables for GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Recency ;
275346    +drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
275347    +if missing( GRP_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Recency ) then do;
275348    +   GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
275349    +   GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
275350    +   GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
275351    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
275352    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
275353    +end;
MPRINT(EM_DIAGRAM):   end;
275354    +else do;
MPRINT(EM_DIAGRAM):   else do;
275355    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
275356    +   _dm12 = put( GRP_Recency , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Recency , BEST12. );
275357    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
275358    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
275359    +      GRP_Recency2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = -1;
275360    +      GRP_Recency3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = -1;
275361    +      GRP_Recency4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = -1;
275362    +   end;
MPRINT(EM_DIAGRAM):   end;
275363    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
275364    +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
275365    +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
275366    +      GRP_Recency4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 1;
275367    +   end;
MPRINT(EM_DIAGRAM):   end;
275368    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
275369    +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
275370    +      GRP_Recency3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 1;
275371    +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
275372    +   end;
MPRINT(EM_DIAGRAM):   end;
275373    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
275374    +      GRP_Recency2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 1;
275375    +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
275376    +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
275377    +   end;
MPRINT(EM_DIAGRAM):   end;
275378    +   else do;
MPRINT(EM_DIAGRAM):   else do;
275379    +      GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
275380    +      GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
275381    +      GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
275382    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
275383    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
275384    +   end;
MPRINT(EM_DIAGRAM):   end;
275385    +end;
MPRINT(EM_DIAGRAM):   end;
275386    +
275387    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
275388    +*** Checking missing input Interval
275389    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
275390    +
275391    +IF NMISS(
275392    +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Year_Birth ) THEN DO;
275393    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
275394    +
275395    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
275396    +END;
MPRINT(EM_DIAGRAM):   END;
275397    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
275398    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
275399    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
275400    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
275401    +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
275402    +END;
MPRINT(EM_DIAGRAM):   END;
275403    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
275404    +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
275405    +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
275406    +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
275407    +END;
MPRINT(EM_DIAGRAM):   END;
275408    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
275409    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
275410    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
275411    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
275412    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
275413    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
275414    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
275415    +   H1x1_1  =    -1.98556205049158 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.98556205049158 * S_Year_Birth ;
275416    +   H1x1_2  =     2.65003203246915 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 2.65003203246915 * S_Year_Birth ;
275417    +   H1x1_1  = H1x1_1  +    -0.05712043872213 * GRP_AcceptedCmp52
275418    +          +     1.04378756398945 * GRP_Frq2  +     1.53971794568749 * GRP_Frq3
275419    +          +     1.46006856973709 * GRP_Frq4  +    -0.56202924907336 *
275420    +        GRP_Income2  +     4.72191701616365 * GRP_Income3
275421    +          +    -2.66170280222507 * GRP_Income4  +     0.01753317277737 *
275422    +        GRP_Mnt2  +    -3.49161842568046 * GRP_Mnt3  +    -2.05166246350112 *
275423    +        GRP_Mnt4  +     3.42363704603021 * GRP_MntFishProducts2
275424    +          +     4.07177263196201 * GRP_MntFishProducts3
275425    +          +    -0.95758193346069 * GRP_MntFishProducts4
275426    +          +     0.27642218349221 * GRP_MntGoldProds2
275427    +          +    -1.85260255304992 * GRP_MntGoldProds3
275428    +          +      0.0084996256166 * GRP_MntGoldProds4
275429    +          +     1.78769069128312 * GRP_MntMeatProducts2
275430    +          +    -5.09868822425716 * GRP_MntMeatProducts3
275431    +          +     -1.2944400003238 * GRP_MntMeatProducts4
275432    +          +     2.16310510520522 * GRP_MntWines2  +    -0.98848869719513 *
275433    +        GRP_MntWines3  +     0.37628412350279 * GRP_MntWines4
275434    +          +    -0.18399160398973 * GRP_NumCatalogPurchases3
275435    +          +     2.78149370347513 * GRP_NumCatalogPurchases4
275436    +          +    -1.92842775798726 * GRP_NumDistPurchases2
275437    +          +     1.36617128431309 * GRP_NumDistPurchases3
275438    +          +    -5.04459399151701 * GRP_NumDistPurchases4
275439    +          +    -3.10131336282255 * GRP_NumWebPurchases2
275440    +          +    -1.70853531086832 * GRP_NumWebPurchases3
275441    +          +    -1.81576465350843 * GRP_NumWebPurchases4
275442    +          +     0.97448188440932 * GRP_RFMstat2  +    -1.74164713551138 *
275443    +        GRP_RFMstat3  +    -1.61869970889612 * GRP_RFMstat4
275444    +          +     0.94148483345045 * GRP_RMntFrq2  +    -4.61928796757469 *
275445    +        GRP_RMntFrq3  +    -0.29552475494224 * GRP_RMntFrq4
275446    +          +     0.59385679636573 * GRP_Recency2  +    -0.70804337284842 *
275447    +        GRP_Recency3  +     2.46935358022796 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.05712043872213 * GRP_AcceptedCmp52 + 
1.04378756398945 * GRP_Frq2 + 1.53971794568749 * GRP_Frq3 + 1.46006856973709 * GRP_Frq4 + 
-0.56202924907336 * GRP_Income2 + 4.72191701616365 * GRP_Income3 + -2.66170280222507 * 
GRP_Income4 + 0.01753317277737 * GRP_Mnt2 + -3.49161842568046 * GRP_Mnt3 + -2.05166246350112 * 
GRP_Mnt4 + 3.42363704603021 * GRP_MntFishProducts2 + 4.07177263196201 * GRP_MntFishProducts3 + 
-0.95758193346069 * GRP_MntFishProducts4 + 0.27642218349221 * GRP_MntGoldProds2 + 
-1.85260255304992 * GRP_MntGoldProds3 + 0.0084996256166 * GRP_MntGoldProds4 + 1.78769069128312 
* GRP_MntMeatProducts2 + -5.09868822425716 * GRP_MntMeatProducts3 + -1.2944400003238 * 
GRP_MntMeatProducts4 + 2.16310510520522 * GRP_MntWines2 + -0.98848869719513 * GRP_MntWines3 + 
0.37628412350279 * GRP_MntWines4 + -0.18399160398973 * GRP_NumCatalogPurchases3 + 
2.78149370347513 * GRP_NumCatalogPurchases4 + -1.92842775798726 * GRP_NumDistPurchases2 + 
1.36617128431309 * GRP_NumDistPurchases3 + -5.04459399151701 * GRP_NumDistPurchases4 + 
-3.10131336282255 * GRP_NumWebPurchases2 + -1.70853531086832 * GRP_NumWebPurchases3 + 
-1.81576465350843 * GRP_NumWebPurchases4 + 0.97448188440932 * GRP_RFMstat2 + -1.74164713551138 
* GRP_RFMstat3 + -1.61869970889612 * GRP_RFMstat4 + 0.94148483345045 * GRP_RMntFrq2 + 
-4.61928796757469 * GRP_RMntFrq3 + -0.29552475494224 * GRP_RMntFrq4 + 0.59385679636573 * 
GRP_Recency2 + -0.70804337284842 * GRP_Recency3 + 2.46935358022796 * GRP_Recency4 ;
275448    +   H1x1_2  = H1x1_2  +    -2.86061192932804 * GRP_AcceptedCmp52
275449    +          +    -2.37847197829836 * GRP_Frq2  +     3.04126084255177 * GRP_Frq3
275450    +          +    -2.25316213708692 * GRP_Frq4  +    -2.15230505920585 *
275451    +        GRP_Income2  +     0.22423161350469 * GRP_Income3
275452    +          +     1.82470653064149 * GRP_Income4  +     0.91426377324604 *
275453    +        GRP_Mnt2  +    -2.52824414988744 * GRP_Mnt3  +     1.25821903076482 *
275454    +        GRP_Mnt4  +     2.48215495303599 * GRP_MntFishProducts2
275455    +          +    -2.53912545896945 * GRP_MntFishProducts3
275456    +          +    -1.24420085467004 * GRP_MntFishProducts4
275457    +          +     0.87589074104426 * GRP_MntGoldProds2
275458    +          +     2.05825939506076 * GRP_MntGoldProds3
275459    +          +     4.54187777951066 * GRP_MntGoldProds4
275460    +          +     1.73194182769876 * GRP_MntMeatProducts2
275461    +          +    -0.50494075731675 * GRP_MntMeatProducts3
275462    +          +    -1.24502732975278 * GRP_MntMeatProducts4
275463    +          +     1.29208460321632 * GRP_MntWines2  +     0.29717301998256 *
275464    +        GRP_MntWines3  +    -0.62672710631427 * GRP_MntWines4
275465    +          +     1.35492499749641 * GRP_NumCatalogPurchases3
275466    +          +    -0.16024517906179 * GRP_NumCatalogPurchases4
275467    +          +     1.86677407552405 * GRP_NumDistPurchases2
275468    +          +     -0.7331940643207 * GRP_NumDistPurchases3
275469    +          +     1.69990326910684 * GRP_NumDistPurchases4
275470    +          +     2.43176299986254 * GRP_NumWebPurchases2
275471    +          +    -2.13772911466858 * GRP_NumWebPurchases3
275472    +          +    -4.73478753166791 * GRP_NumWebPurchases4
275473    +          +     2.64399780173577 * GRP_RFMstat2  +    -3.62336346056054 *
275474    +        GRP_RFMstat3  +    -3.18363324824984 * GRP_RFMstat4
275475    +          +     3.46796006062254 * GRP_RMntFrq2  +    -0.59973905875633 *
275476    +        GRP_RMntFrq3  +    -1.07300094897005 * GRP_RMntFrq4
275477    +          +     1.65131957040649 * GRP_Recency2  +     2.60583794046673 *
275478    +        GRP_Recency3  +    -1.61296974687132 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -2.86061192932804 * GRP_AcceptedCmp52 + 
-2.37847197829836 * GRP_Frq2 + 3.04126084255177 * GRP_Frq3 + -2.25316213708692 * GRP_Frq4 + 
-2.15230505920585 * GRP_Income2 + 0.22423161350469 * GRP_Income3 + 1.82470653064149 * 
GRP_Income4 + 0.91426377324604 * GRP_Mnt2 + -2.52824414988744 * GRP_Mnt3 + 1.25821903076482 * 
GRP_Mnt4 + 2.48215495303599 * GRP_MntFishProducts2 + -2.53912545896945 * GRP_MntFishProducts3 
+ -1.24420085467004 * GRP_MntFishProducts4 + 0.87589074104426 * GRP_MntGoldProds2 + 
2.05825939506076 * GRP_MntGoldProds3 + 4.54187777951066 * GRP_MntGoldProds4 + 1.73194182769876 
* GRP_MntMeatProducts2 + -0.50494075731675 * GRP_MntMeatProducts3 + -1.24502732975278 * 
GRP_MntMeatProducts4 + 1.29208460321632 * GRP_MntWines2 + 0.29717301998256 * GRP_MntWines3 + 
-0.62672710631427 * GRP_MntWines4 + 1.35492499749641 * GRP_NumCatalogPurchases3 + 
-0.16024517906179 * GRP_NumCatalogPurchases4 + 1.86677407552405 * GRP_NumDistPurchases2 + 
-0.7331940643207 * GRP_NumDistPurchases3 + 1.69990326910684 * GRP_NumDistPurchases4 + 
2.43176299986254 * GRP_NumWebPurchases2 + -2.13772911466858 * GRP_NumWebPurchases3 + 
-4.73478753166791 * GRP_NumWebPurchases4 + 2.64399780173577 * GRP_RFMstat2 + -3.62336346056054 
* GRP_RFMstat3 + -3.18363324824984 * GRP_RFMstat4 + 3.46796006062254 * GRP_RMntFrq2 + 
-0.59973905875633 * GRP_RMntFrq3 + -1.07300094897005 * GRP_RMntFrq4 + 1.65131957040649 * 
GRP_Recency2 + 2.60583794046673 * GRP_Recency3 + -1.61296974687132 * GRP_Recency4 ;
275479    +   H1x1_1  =     2.45115906330524 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 2.45115906330524 + H1x1_1 ;
275480    +   H1x1_2  =     4.73081202118604 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 4.73081202118604 + H1x1_2 ;
275481    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
275482    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
275483    +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
275484    +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
275485    +END;
MPRINT(EM_DIAGRAM):   END;
275486    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
275487    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
275488    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
275489    +END;
MPRINT(EM_DIAGRAM):   END;
275490    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
275491    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
275492    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
275493    +
275494    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
275495    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
275496    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
275497    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
275498    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
275499    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
275500    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
275501    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
275502    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
275503    +end;
MPRINT(EM_DIAGRAM):   end;
275504    +else do;
MPRINT(EM_DIAGRAM):   else do;
275505    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
275506    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
275507    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
275508    +   end;
MPRINT(EM_DIAGRAM):   end;
275509    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
275510    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
275511    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
275512    +   end;
MPRINT(EM_DIAGRAM):   end;
275513    +   else do;
MPRINT(EM_DIAGRAM):   else do;
275514    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
275515    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
275516    +   end;
MPRINT(EM_DIAGRAM):   end;
275517    +end;
MPRINT(EM_DIAGRAM):   end;
275518    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
275519    +   P_DepVar1  =      4.0196958449291 * H1x1_1  +    -3.12785763420985 * H1x1_2
275520    +         ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 4.0196958449291 * H1x1_1 + -3.12785763420985 * H1x1_2 ;
275521    +   P_DepVar1  =    -2.56231918790427 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.56231918790427 + P_DepVar1 ;
275522    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
275523    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
275524    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
275525    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
275526    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
275527    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
275528    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
275529    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
275530    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
275531    +END;
MPRINT(EM_DIAGRAM):   END;
275532    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
275533    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
275534    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
275535    +END;
MPRINT(EM_DIAGRAM):   END;
275536    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
275537    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
275538    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
275539    +END;
MPRINT(EM_DIAGRAM):   END;
275540    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
275541    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
275542    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
275543    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
275544    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
275545    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
275546    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
275547    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
275548    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
275549    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
275550    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
275551    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
275552    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
275553    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
275554    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
275555    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
275556    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
275557    +END;
MPRINT(EM_DIAGRAM):   END;
275558    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
275559    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
275560    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
275561    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
275562    +* Renaming variables for AutoNeural24;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural24;
275563    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
275564    +* Renaming Posterior variables for AutoNeural24;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural24;
275565    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
275566    +drop AutoNeural24_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural24_P_DepVar1;
275567    +AutoNeural24_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural24_P_DepVar1 = P_DepVar1;
275568    +drop AutoNeural24_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural24_P_DepVar0;
275569    +AutoNeural24_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural24_P_DepVar0 = P_DepVar0;
275570    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
275571    +* Renaming Into variables for AutoNeural24;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for AutoNeural24;
275572    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
275573    +length AutoNeural24_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length AutoNeural24_I_DepVar $32;
275574    +drop AutoNeural24_I_DepVar;
MPRINT(EM_DIAGRAM):   drop AutoNeural24_I_DepVar;
275575    +AutoNeural24_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   AutoNeural24_I_DepVar = I_DepVar;
275576    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
275577    +* Renaming _WARN_ variable for AutoNeural24;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural24;
275578    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
275579    +length AutoNeural24_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural24_WARN_ $4;
275580    +drop AutoNeural24_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural24_WARN_;
275581    +AutoNeural24_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural24_WARN_ = _WARN_;
275582    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
275583    +* Ensmbl50: Scoring Code of model 2 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl50: Scoring Code of model 2 of 7;
275584    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
275585    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
275586    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
275587    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
275588    +* NODE: AutoNeural22;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural22;
275589    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
275590    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
275591    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
275592    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
275593    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
275594    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
275595    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
275596    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
275597    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
275598    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
275599    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
275600    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
275601    +LENGTH _WARN_ $4
275602    +      F_DepVar  $ 12
275603    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
275604    +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
275605    +
275606    +      label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
MPRINT(EM_DIAGRAM):   label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
275607    +
275608    +      label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
275609    +
275610    +      label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
275611    +
275612    +      label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
275613    +
275614    +      label GRP_Income2 = 'Dummy: GRP_Income=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Income2 = 'Dummy: GRP_Income=2' ;
275615    +
275616    +      label GRP_Income3 = 'Dummy: GRP_Income=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Income3 = 'Dummy: GRP_Income=3' ;
275617    +
275618    +      label GRP_Income4 = 'Dummy: GRP_Income=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Income4 = 'Dummy: GRP_Income=4' ;
275619    +
275620    +      label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
275621    +
275622    +      label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
275623    +
275624    +      label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
275625    +
275626    +      label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
275627    +
275628    +      label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
275629    +
275630    +      label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
275631    +
275632    +      label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
275633    +
275634    +      label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
275635    +
275636    +      label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
275637    +
275638    +      label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
275639    +
275640    +      label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
275641    +
275642    +      label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
275643    +
275644    +      label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
275645    +
275646    +      label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
275647    +
275648    +      label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
275649    +
275650    +      label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
275651    +
275652    +      label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
275653    +
275654    +      label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
275655    +
275656    +      label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
275657    +
275658    +      label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
275659    +
275660    +      label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
275661    +
275662    +      label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
275663    +
275664    +      label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
275665    +
275666    +      label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
275667    +
275668    +      label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
275669    +
275670    +      label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
275671    +
275672    +      label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
275673    +
275674    +      label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
275675    +
275676    +      label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
275677    +
275678    +      label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
275679    +
275680    +      label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
275681    +
275682    +      label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
275683    +
275684    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
275685    +
275686    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
275687    +
275688    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
275689    +
275690    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
275691    +
275692    +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
275693    +
275694    +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
275695    +
275696    +      label H1x1_7 = 'Hidden: H1x1_=7' ;
MPRINT(EM_DIAGRAM):   label H1x1_7 = 'Hidden: H1x1_=7' ;
275697    +
275698    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
275699    +
275700    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
275701    +
275702    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
275703    +
275704    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
275705    +
275706    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
275707    +
275708    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
275709    +
275710    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
275711    +
275712    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
275713    +
275714    +*** Generate dummy variables for GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmp5 ;
275715    +drop GRP_AcceptedCmp52 ;
MPRINT(EM_DIAGRAM):   drop GRP_AcceptedCmp52 ;
275716    +if missing( GRP_AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmp5 ) then do;
275717    +   GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
275718    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
275719    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
275720    +end;
MPRINT(EM_DIAGRAM):   end;
275721    +else do;
MPRINT(EM_DIAGRAM):   else do;
275722    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
275723    +   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
275724    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
275725    +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
275726    +      GRP_AcceptedCmp52 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = 1;
275727    +   end;
MPRINT(EM_DIAGRAM):   end;
275728    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
275729    +      GRP_AcceptedCmp52 = -1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = -1;
275730    +   end;
MPRINT(EM_DIAGRAM):   end;
275731    +   else do;
MPRINT(EM_DIAGRAM):   else do;
275732    +      GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
275733    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
275734    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
275735    +   end;
MPRINT(EM_DIAGRAM):   end;
275736    +end;
MPRINT(EM_DIAGRAM):   end;
275737    +
275738    +*** Generate dummy variables for GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Frq ;
275739    +drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
275740    +if missing( GRP_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Frq ) then do;
275741    +   GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
275742    +   GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
275743    +   GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
275744    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
275745    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
275746    +end;
MPRINT(EM_DIAGRAM):   end;
275747    +else do;
MPRINT(EM_DIAGRAM):   else do;
275748    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
275749    +   _dm12 = put( GRP_Frq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Frq , BEST12. );
275750    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
275751    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
275752    +      GRP_Frq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = -1;
275753    +      GRP_Frq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = -1;
275754    +      GRP_Frq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = -1;
275755    +   end;
MPRINT(EM_DIAGRAM):   end;
275756    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
275757    +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
275758    +      GRP_Frq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 1;
275759    +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
275760    +   end;
MPRINT(EM_DIAGRAM):   end;
275761    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
275762    +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
275763    +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
275764    +      GRP_Frq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 1;
275765    +   end;
MPRINT(EM_DIAGRAM):   end;
275766    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
275767    +      GRP_Frq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 1;
275768    +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
275769    +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
275770    +   end;
MPRINT(EM_DIAGRAM):   end;
275771    +   else do;
MPRINT(EM_DIAGRAM):   else do;
275772    +      GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
275773    +      GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
275774    +      GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
275775    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
275776    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
275777    +   end;
MPRINT(EM_DIAGRAM):   end;
275778    +end;
MPRINT(EM_DIAGRAM):   end;
275779    +
275780    +*** Generate dummy variables for GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Income ;
275781    +drop GRP_Income2 GRP_Income3 GRP_Income4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Income2 GRP_Income3 GRP_Income4 ;
275782    +if missing( GRP_Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Income ) then do;
275783    +   GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
275784    +   GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
275785    +   GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
275786    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
275787    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
275788    +end;
MPRINT(EM_DIAGRAM):   end;
275789    +else do;
MPRINT(EM_DIAGRAM):   else do;
275790    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
275791    +   _dm12 = put( GRP_Income , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Income , BEST12. );
275792    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
275793    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
275794    +      GRP_Income2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = -1;
275795    +      GRP_Income3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = -1;
275796    +      GRP_Income4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = -1;
275797    +   end;
MPRINT(EM_DIAGRAM):   end;
275798    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
275799    +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
275800    +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
275801    +      GRP_Income4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 1;
275802    +   end;
MPRINT(EM_DIAGRAM):   end;
275803    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
275804    +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
275805    +      GRP_Income3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 1;
275806    +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
275807    +   end;
MPRINT(EM_DIAGRAM):   end;
275808    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
275809    +      GRP_Income2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 1;
275810    +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
275811    +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
275812    +   end;
MPRINT(EM_DIAGRAM):   end;
275813    +   else do;
MPRINT(EM_DIAGRAM):   else do;
275814    +      GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
275815    +      GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
275816    +      GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
275817    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
275818    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
275819    +   end;
MPRINT(EM_DIAGRAM):   end;
275820    +end;
MPRINT(EM_DIAGRAM):   end;
275821    +
275822    +*** Generate dummy variables for GRP_Mnt ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Mnt ;
275823    +drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
275824    +if missing( GRP_Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Mnt ) then do;
275825    +   GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
275826    +   GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
275827    +   GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
275828    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
275829    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
275830    +end;
MPRINT(EM_DIAGRAM):   end;
275831    +else do;
MPRINT(EM_DIAGRAM):   else do;
275832    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
275833    +   _dm12 = put( GRP_Mnt , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Mnt , BEST12. );
275834    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
275835    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
275836    +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
275837    +      GRP_Mnt3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 1;
275838    +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
275839    +   end;
MPRINT(EM_DIAGRAM):   end;
275840    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
275841    +      GRP_Mnt2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = -1;
275842    +      GRP_Mnt3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = -1;
275843    +      GRP_Mnt4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = -1;
275844    +   end;
MPRINT(EM_DIAGRAM):   end;
275845    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
275846    +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
275847    +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
275848    +      GRP_Mnt4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 1;
275849    +   end;
MPRINT(EM_DIAGRAM):   end;
275850    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
275851    +      GRP_Mnt2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 1;
275852    +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
275853    +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
275854    +   end;
MPRINT(EM_DIAGRAM):   end;
275855    +   else do;
MPRINT(EM_DIAGRAM):   else do;
275856    +      GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
275857    +      GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
275858    +      GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
275859    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
275860    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
275861    +   end;
MPRINT(EM_DIAGRAM):   end;
275862    +end;
MPRINT(EM_DIAGRAM):   end;
275863    +
275864    +*** Generate dummy variables for GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntFishProducts ;
275865    +drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
275866    +if missing( GRP_MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntFishProducts ) then do;
275867    +   GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
275868    +   GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
275869    +   GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
275870    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
275871    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
275872    +end;
MPRINT(EM_DIAGRAM):   end;
275873    +else do;
MPRINT(EM_DIAGRAM):   else do;
275874    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
275875    +   _dm12 = put( GRP_MntFishProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntFishProducts , BEST12. );
275876    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
275877    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
275878    +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
275879    +      GRP_MntFishProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 1;
275880    +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
275881    +   end;
MPRINT(EM_DIAGRAM):   end;
275882    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
275883    +      GRP_MntFishProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = -1;
275884    +      GRP_MntFishProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = -1;
275885    +      GRP_MntFishProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = -1;
275886    +   end;
MPRINT(EM_DIAGRAM):   end;
275887    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
275888    +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
275889    +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
275890    +      GRP_MntFishProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 1;
275891    +   end;
MPRINT(EM_DIAGRAM):   end;
275892    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
275893    +      GRP_MntFishProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 1;
275894    +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
275895    +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
275896    +   end;
MPRINT(EM_DIAGRAM):   end;
275897    +   else do;
MPRINT(EM_DIAGRAM):   else do;
275898    +      GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
275899    +      GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
275900    +      GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
275901    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
275902    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
275903    +   end;
MPRINT(EM_DIAGRAM):   end;
275904    +end;
MPRINT(EM_DIAGRAM):   end;
275905    +
275906    +*** Generate dummy variables for GRP_MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntGoldProds ;
275907    +drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
275908    +if missing( GRP_MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntGoldProds ) then do;
275909    +   GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
275910    +   GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
275911    +   GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
275912    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
275913    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
275914    +end;
MPRINT(EM_DIAGRAM):   end;
275915    +else do;
MPRINT(EM_DIAGRAM):   else do;
275916    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
275917    +   _dm12 = put( GRP_MntGoldProds , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntGoldProds , BEST12. );
275918    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
275919    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
275920    +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
275921    +      GRP_MntGoldProds3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 1;
275922    +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
275923    +   end;
MPRINT(EM_DIAGRAM):   end;
275924    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
275925    +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
275926    +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
275927    +      GRP_MntGoldProds4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 1;
275928    +   end;
MPRINT(EM_DIAGRAM):   end;
275929    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
275930    +      GRP_MntGoldProds2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = -1;
275931    +      GRP_MntGoldProds3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = -1;
275932    +      GRP_MntGoldProds4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = -1;
275933    +   end;
MPRINT(EM_DIAGRAM):   end;
275934    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
275935    +      GRP_MntGoldProds2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 1;
275936    +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
275937    +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
275938    +   end;
MPRINT(EM_DIAGRAM):   end;
275939    +   else do;
MPRINT(EM_DIAGRAM):   else do;
275940    +      GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
275941    +      GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
275942    +      GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
275943    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
275944    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
275945    +   end;
MPRINT(EM_DIAGRAM):   end;
275946    +end;
MPRINT(EM_DIAGRAM):   end;
275947    +
275948    +*** Generate dummy variables for GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntMeatProducts ;
275949    +drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
275950    +if missing( GRP_MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntMeatProducts ) then do;
275951    +   GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
275952    +   GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
275953    +   GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
275954    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
275955    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
275956    +end;
MPRINT(EM_DIAGRAM):   end;
275957    +else do;
MPRINT(EM_DIAGRAM):   else do;
275958    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
275959    +   _dm12 = put( GRP_MntMeatProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntMeatProducts , BEST12. );
275960    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
275961    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
275962    +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
275963    +      GRP_MntMeatProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 1;
275964    +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
275965    +   end;
MPRINT(EM_DIAGRAM):   end;
275966    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
275967    +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
275968    +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
275969    +      GRP_MntMeatProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 1;
275970    +   end;
MPRINT(EM_DIAGRAM):   end;
275971    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
275972    +      GRP_MntMeatProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = -1;
275973    +      GRP_MntMeatProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = -1;
275974    +      GRP_MntMeatProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = -1;
275975    +   end;
MPRINT(EM_DIAGRAM):   end;
275976    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
275977    +      GRP_MntMeatProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 1;
275978    +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
275979    +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
275980    +   end;
MPRINT(EM_DIAGRAM):   end;
275981    +   else do;
MPRINT(EM_DIAGRAM):   else do;
275982    +      GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
275983    +      GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
275984    +      GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
275985    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
275986    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
275987    +   end;
MPRINT(EM_DIAGRAM):   end;
275988    +end;
MPRINT(EM_DIAGRAM):   end;
275989    +
275990    +*** Generate dummy variables for GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntWines ;
275991    +drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
275992    +if missing( GRP_MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntWines ) then do;
275993    +   GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
275994    +   GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
275995    +   GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
275996    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
275997    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
275998    +end;
MPRINT(EM_DIAGRAM):   end;
275999    +else do;
MPRINT(EM_DIAGRAM):   else do;
276000    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
276001    +   _dm12 = put( GRP_MntWines , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntWines , BEST12. );
276002    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
276003    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
276004    +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
276005    +      GRP_MntWines3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 1;
276006    +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
276007    +   end;
MPRINT(EM_DIAGRAM):   end;
276008    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
276009    +      GRP_MntWines2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = -1;
276010    +      GRP_MntWines3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = -1;
276011    +      GRP_MntWines4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = -1;
276012    +   end;
MPRINT(EM_DIAGRAM):   end;
276013    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
276014    +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
276015    +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
276016    +      GRP_MntWines4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 1;
276017    +   end;
MPRINT(EM_DIAGRAM):   end;
276018    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
276019    +      GRP_MntWines2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 1;
276020    +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
276021    +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
276022    +   end;
MPRINT(EM_DIAGRAM):   end;
276023    +   else do;
MPRINT(EM_DIAGRAM):   else do;
276024    +      GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
276025    +      GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
276026    +      GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
276027    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
276028    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
276029    +   end;
MPRINT(EM_DIAGRAM):   end;
276030    +end;
MPRINT(EM_DIAGRAM):   end;
276031    +
276032    +*** Generate dummy variables for GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumCatalogPurchases ;
276033    +drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
276034    +if missing( GRP_NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumCatalogPurchases ) then do;
276035    +   GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
276036    +   GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
276037    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
276038    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
276039    +end;
MPRINT(EM_DIAGRAM):   end;
276040    +else do;
MPRINT(EM_DIAGRAM):   else do;
276041    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
276042    +   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
276043    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
276044    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
276045    +      GRP_NumCatalogPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 1;
276046    +      GRP_NumCatalogPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 0;
276047    +   end;
MPRINT(EM_DIAGRAM):   end;
276048    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
276049    +      GRP_NumCatalogPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = -1;
276050    +      GRP_NumCatalogPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = -1;
276051    +   end;
MPRINT(EM_DIAGRAM):   end;
276052    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
276053    +      GRP_NumCatalogPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 0;
276054    +      GRP_NumCatalogPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 1;
276055    +   end;
MPRINT(EM_DIAGRAM):   end;
276056    +   else do;
MPRINT(EM_DIAGRAM):   else do;
276057    +      GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
276058    +      GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
276059    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
276060    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
276061    +   end;
MPRINT(EM_DIAGRAM):   end;
276062    +end;
MPRINT(EM_DIAGRAM):   end;
276063    +
276064    +*** Generate dummy variables for GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumDistPurchases ;
276065    +drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
276066    +if missing( GRP_NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumDistPurchases ) then do;
276067    +   GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
276068    +   GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
276069    +   GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
276070    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
276071    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
276072    +end;
MPRINT(EM_DIAGRAM):   end;
276073    +else do;
MPRINT(EM_DIAGRAM):   else do;
276074    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
276075    +   _dm12 = put( GRP_NumDistPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumDistPurchases , BEST12. );
276076    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
276077    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
276078    +      GRP_NumDistPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = -1;
276079    +      GRP_NumDistPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = -1;
276080    +      GRP_NumDistPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = -1;
276081    +   end;
MPRINT(EM_DIAGRAM):   end;
276082    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
276083    +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
276084    +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
276085    +      GRP_NumDistPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 1;
276086    +   end;
MPRINT(EM_DIAGRAM):   end;
276087    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
276088    +      GRP_NumDistPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 1;
276089    +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
276090    +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
276091    +   end;
MPRINT(EM_DIAGRAM):   end;
276092    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
276093    +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
276094    +      GRP_NumDistPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 1;
276095    +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
276096    +   end;
MPRINT(EM_DIAGRAM):   end;
276097    +   else do;
MPRINT(EM_DIAGRAM):   else do;
276098    +      GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
276099    +      GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
276100    +      GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
276101    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
276102    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
276103    +   end;
MPRINT(EM_DIAGRAM):   end;
276104    +end;
MPRINT(EM_DIAGRAM):   end;
276105    +
276106    +*** Generate dummy variables for GRP_NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumWebPurchases ;
276107    +drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
276108    +if missing( GRP_NumWebPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumWebPurchases ) then do;
276109    +   GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
276110    +   GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
276111    +   GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
276112    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
276113    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
276114    +end;
MPRINT(EM_DIAGRAM):   end;
276115    +else do;
MPRINT(EM_DIAGRAM):   else do;
276116    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
276117    +   _dm12 = put( GRP_NumWebPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumWebPurchases , BEST12. );
276118    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
276119    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
276120    +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
276121    +      GRP_NumWebPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 1;
276122    +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
276123    +   end;
MPRINT(EM_DIAGRAM):   end;
276124    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
276125    +      GRP_NumWebPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = -1;
276126    +      GRP_NumWebPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = -1;
276127    +      GRP_NumWebPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = -1;
276128    +   end;
MPRINT(EM_DIAGRAM):   end;
276129    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
276130    +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
276131    +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
276132    +      GRP_NumWebPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 1;
276133    +   end;
MPRINT(EM_DIAGRAM):   end;
276134    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
276135    +      GRP_NumWebPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 1;
276136    +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
276137    +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
276138    +   end;
MPRINT(EM_DIAGRAM):   end;
276139    +   else do;
MPRINT(EM_DIAGRAM):   else do;
276140    +      GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
276141    +      GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
276142    +      GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
276143    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
276144    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
276145    +   end;
MPRINT(EM_DIAGRAM):   end;
276146    +end;
MPRINT(EM_DIAGRAM):   end;
276147    +
276148    +*** Generate dummy variables for GRP_RFMstat ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RFMstat ;
276149    +drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
276150    +if missing( GRP_RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RFMstat ) then do;
276151    +   GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
276152    +   GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
276153    +   GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
276154    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
276155    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
276156    +end;
MPRINT(EM_DIAGRAM):   end;
276157    +else do;
MPRINT(EM_DIAGRAM):   else do;
276158    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
276159    +   _dm12 = put( GRP_RFMstat , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RFMstat , BEST12. );
276160    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
276161    +   if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
276162    +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
276163    +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
276164    +      GRP_RFMstat4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 1;
276165    +   end;
MPRINT(EM_DIAGRAM):   end;
276166    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
276167    +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
276168    +      GRP_RFMstat3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 1;
276169    +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
276170    +   end;
MPRINT(EM_DIAGRAM):   end;
276171    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
276172    +      GRP_RFMstat2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = -1;
276173    +      GRP_RFMstat3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = -1;
276174    +      GRP_RFMstat4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = -1;
276175    +   end;
MPRINT(EM_DIAGRAM):   end;
276176    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
276177    +      GRP_RFMstat2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 1;
276178    +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
276179    +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
276180    +   end;
MPRINT(EM_DIAGRAM):   end;
276181    +   else do;
MPRINT(EM_DIAGRAM):   else do;
276182    +      GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
276183    +      GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
276184    +      GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
276185    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
276186    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
276187    +   end;
MPRINT(EM_DIAGRAM):   end;
276188    +end;
MPRINT(EM_DIAGRAM):   end;
276189    +
276190    +*** Generate dummy variables for GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RMntFrq ;
276191    +drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
276192    +if missing( GRP_RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RMntFrq ) then do;
276193    +   GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
276194    +   GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
276195    +   GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
276196    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
276197    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
276198    +end;
MPRINT(EM_DIAGRAM):   end;
276199    +else do;
MPRINT(EM_DIAGRAM):   else do;
276200    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
276201    +   _dm12 = put( GRP_RMntFrq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RMntFrq , BEST12. );
276202    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
276203    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
276204    +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
276205    +      GRP_RMntFrq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 1;
276206    +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
276207    +   end;
MPRINT(EM_DIAGRAM):   end;
276208    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
276209    +      GRP_RMntFrq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = -1;
276210    +      GRP_RMntFrq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = -1;
276211    +      GRP_RMntFrq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = -1;
276212    +   end;
MPRINT(EM_DIAGRAM):   end;
276213    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
276214    +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
276215    +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
276216    +      GRP_RMntFrq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 1;
276217    +   end;
MPRINT(EM_DIAGRAM):   end;
276218    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
276219    +      GRP_RMntFrq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 1;
276220    +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
276221    +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
276222    +   end;
MPRINT(EM_DIAGRAM):   end;
276223    +   else do;
MPRINT(EM_DIAGRAM):   else do;
276224    +      GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
276225    +      GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
276226    +      GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
276227    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
276228    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
276229    +   end;
MPRINT(EM_DIAGRAM):   end;
276230    +end;
MPRINT(EM_DIAGRAM):   end;
276231    +
276232    +*** Generate dummy variables for GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Recency ;
276233    +drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
276234    +if missing( GRP_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Recency ) then do;
276235    +   GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
276236    +   GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
276237    +   GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
276238    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
276239    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
276240    +end;
MPRINT(EM_DIAGRAM):   end;
276241    +else do;
MPRINT(EM_DIAGRAM):   else do;
276242    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
276243    +   _dm12 = put( GRP_Recency , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Recency , BEST12. );
276244    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
276245    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
276246    +      GRP_Recency2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = -1;
276247    +      GRP_Recency3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = -1;
276248    +      GRP_Recency4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = -1;
276249    +   end;
MPRINT(EM_DIAGRAM):   end;
276250    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
276251    +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
276252    +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
276253    +      GRP_Recency4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 1;
276254    +   end;
MPRINT(EM_DIAGRAM):   end;
276255    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
276256    +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
276257    +      GRP_Recency3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 1;
276258    +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
276259    +   end;
MPRINT(EM_DIAGRAM):   end;
276260    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
276261    +      GRP_Recency2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 1;
276262    +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
276263    +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
276264    +   end;
MPRINT(EM_DIAGRAM):   end;
276265    +   else do;
MPRINT(EM_DIAGRAM):   else do;
276266    +      GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
276267    +      GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
276268    +      GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
276269    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
276270    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
276271    +   end;
MPRINT(EM_DIAGRAM):   end;
276272    +end;
MPRINT(EM_DIAGRAM):   end;
276273    +
276274    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
276275    +*** Checking missing input Interval
276276    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
276277    +
276278    +IF NMISS(
276279    +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Year_Birth ) THEN DO;
276280    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
276281    +
276282    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
276283    +END;
MPRINT(EM_DIAGRAM):   END;
276284    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
276285    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
276286    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
276287    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
276288    +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
276289    +END;
MPRINT(EM_DIAGRAM):   END;
276290    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
276291    +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
276292    +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
276293    +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
276294    +END;
MPRINT(EM_DIAGRAM):   END;
276295    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
276296    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
276297    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
276298    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
276299    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
276300    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
276301    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
276302    +   H1x1_1  =     2.97734663226499 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 2.97734663226499 * S_Year_Birth ;
276303    +   H1x1_2  =    -0.02332673614472 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.02332673614472 * S_Year_Birth ;
276304    +   H1x1_3  =    -0.21203760038885 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.21203760038885 * S_Year_Birth ;
276305    +   H1x1_4  =    -0.93232920235603 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.93232920235603 * S_Year_Birth ;
276306    +   H1x1_5  =     0.52440348943963 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0.52440348943963 * S_Year_Birth ;
276307    +   H1x1_6  =    -2.87318917513282 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -2.87318917513282 * S_Year_Birth ;
276308    +   H1x1_7  =     1.25367568490371 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_7 = 1.25367568490371 * S_Year_Birth ;
276309    +   H1x1_1  = H1x1_1  +     2.80677271834446 * GRP_AcceptedCmp52
276310    +          +    -2.32565230752453 * GRP_Frq2  +     2.22037590877354 * GRP_Frq3
276311    +          +    -3.68499358333843 * GRP_Frq4  +    -2.13081454889876 *
276312    +        GRP_Income2  +    -0.38485085997351 * GRP_Income3
276313    +          +     0.43520727568519 * GRP_Income4  +    -1.67383365803521 *
276314    +        GRP_Mnt2  +    -2.27881933900388 * GRP_Mnt3  +    -0.69213755321586 *
276315    +        GRP_Mnt4  +    -0.04079006532289 * GRP_MntFishProducts2
276316    +          +    -2.14876852259668 * GRP_MntFishProducts3
276317    +          +     1.83260002021024 * GRP_MntFishProducts4
276318    +          +     0.51096990118592 * GRP_MntGoldProds2
276319    +          +     0.50696068122006 * GRP_MntGoldProds3
276320    +          +     0.74230349643824 * GRP_MntGoldProds4
276321    +          +     1.49045716090612 * GRP_MntMeatProducts2
276322    +          +    -0.61254307122158 * GRP_MntMeatProducts3
276323    +          +     1.56999187930143 * GRP_MntMeatProducts4
276324    +          +    -0.31632843892516 * GRP_MntWines2  +    -1.05626215752058 *
276325    +        GRP_MntWines3  +    -0.15924458576467 * GRP_MntWines4
276326    +          +    -1.09346439824911 * GRP_NumCatalogPurchases3
276327    +          +     1.58785113957128 * GRP_NumCatalogPurchases4
276328    +          +    -0.62454988809727 * GRP_NumDistPurchases2
276329    +          +     1.37295312356584 * GRP_NumDistPurchases3
276330    +          +      1.5440119795954 * GRP_NumDistPurchases4
276331    +          +    -0.26547715068585 * GRP_NumWebPurchases2
276332    +          +     2.62305554684179 * GRP_NumWebPurchases3
276333    +          +     0.91247524672275 * GRP_NumWebPurchases4
276334    +          +     0.71467719190546 * GRP_RFMstat2  +     0.44245796416885 *
276335    +        GRP_RFMstat3  +      0.0238006357066 * GRP_RFMstat4
276336    +          +    -2.17145575258416 * GRP_RMntFrq2  +    -3.29596121756931 *
276337    +        GRP_RMntFrq3  +    -0.63464596926142 * GRP_RMntFrq4
276338    +          +      0.2862685045527 * GRP_Recency2  +    -0.77133964406228 *
276339    +        GRP_Recency3  +     0.83634712420156 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 2.80677271834446 * GRP_AcceptedCmp52 + 
-2.32565230752453 * GRP_Frq2 + 2.22037590877354 * GRP_Frq3 + -3.68499358333843 * GRP_Frq4 + 
-2.13081454889876 * GRP_Income2 + -0.38485085997351 * GRP_Income3 + 0.43520727568519 * 
GRP_Income4 + -1.67383365803521 * GRP_Mnt2 + -2.27881933900388 * GRP_Mnt3 + -0.69213755321586 
* GRP_Mnt4 + -0.04079006532289 * GRP_MntFishProducts2 + -2.14876852259668 * 
GRP_MntFishProducts3 + 1.83260002021024 * GRP_MntFishProducts4 + 0.51096990118592 * 
GRP_MntGoldProds2 + 0.50696068122006 * GRP_MntGoldProds3 + 0.74230349643824 * 
GRP_MntGoldProds4 + 1.49045716090612 * GRP_MntMeatProducts2 + -0.61254307122158 * 
GRP_MntMeatProducts3 + 1.56999187930143 * GRP_MntMeatProducts4 + -0.31632843892516 * 
GRP_MntWines2 + -1.05626215752058 * GRP_MntWines3 + -0.15924458576467 * GRP_MntWines4 + 
-1.09346439824911 * GRP_NumCatalogPurchases3 + 1.58785113957128 * GRP_NumCatalogPurchases4 + 
-0.62454988809727 * GRP_NumDistPurchases2 + 1.37295312356584 * GRP_NumDistPurchases3 + 
1.5440119795954 * GRP_NumDistPurchases4 + -0.26547715068585 * GRP_NumWebPurchases2 + 
2.62305554684179 * GRP_NumWebPurchases3 + 0.91247524672275 * GRP_NumWebPurchases4 + 
0.71467719190546 * GRP_RFMstat2 + 0.44245796416885 * GRP_RFMstat3 + 0.0238006357066 * 
GRP_RFMstat4 + -2.17145575258416 * GRP_RMntFrq2 + -3.29596121756931 * GRP_RMntFrq3 + 
-0.63464596926142 * GRP_RMntFrq4 + 0.2862685045527 * GRP_Recency2 + -0.77133964406228 * 
GRP_Recency3 + 0.83634712420156 * GRP_Recency4 ;
276340    +   H1x1_2  = H1x1_2  +    -2.21554077433203 * GRP_AcceptedCmp52
276341    +          +     -1.3297040775516 * GRP_Frq2  +     -1.2691861008704 * GRP_Frq3
276342    +          +    -0.83350069121519 * GRP_Frq4  +    -0.45956269964658 *
276343    +        GRP_Income2  +    -0.23636051304973 * GRP_Income3
276344    +          +    -0.09369458285141 * GRP_Income4  +     0.28408485738252 *
276345    +        GRP_Mnt2  +    -1.43976442737366 * GRP_Mnt3  +    -0.47811534578751 *
276346    +        GRP_Mnt4  +     1.33306738423502 * GRP_MntFishProducts2
276347    +          +    -1.03235983303498 * GRP_MntFishProducts3
276348    +          +     1.43737242782063 * GRP_MntFishProducts4
276349    +          +    -0.10286834037331 * GRP_MntGoldProds2
276350    +          +     0.74054061895326 * GRP_MntGoldProds3
276351    +          +     0.27916388015938 * GRP_MntGoldProds4
276352    +          +     0.12775665160956 * GRP_MntMeatProducts2
276353    +          +     1.94239791535409 * GRP_MntMeatProducts3
276354    +          +      2.8604089986372 * GRP_MntMeatProducts4
276355    +          +     0.18466046439888 * GRP_MntWines2  +     1.56362849954362 *
276356    +        GRP_MntWines3  +    -0.74058839441389 * GRP_MntWines4
276357    +          +     0.80335076525252 * GRP_NumCatalogPurchases3
276358    +          +     -2.1633226572249 * GRP_NumCatalogPurchases4
276359    +          +    -0.87650147959772 * GRP_NumDistPurchases2
276360    +          +     1.12706069993787 * GRP_NumDistPurchases3
276361    +          +    -1.96498929641584 * GRP_NumDistPurchases4
276362    +          +     1.06875251220076 * GRP_NumWebPurchases2
276363    +          +     1.19584362733739 * GRP_NumWebPurchases3
276364    +          +    -0.75462993535725 * GRP_NumWebPurchases4
276365    +          +     0.34313165289913 * GRP_RFMstat2  +    -3.07377616469396 *
276366    +        GRP_RFMstat3  +    -0.30628532882149 * GRP_RFMstat4
276367    +          +     0.90422181954504 * GRP_RMntFrq2  +    -0.82179895308246 *
276368    +        GRP_RMntFrq3  +    -0.01336870072701 * GRP_RMntFrq4
276369    +          +     0.78962138115092 * GRP_Recency2  +     0.35738352585872 *
276370    +        GRP_Recency3  +    -0.83190183219938 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -2.21554077433203 * GRP_AcceptedCmp52 + 
-1.3297040775516 * GRP_Frq2 + -1.2691861008704 * GRP_Frq3 + -0.83350069121519 * GRP_Frq4 + 
-0.45956269964658 * GRP_Income2 + -0.23636051304973 * GRP_Income3 + -0.09369458285141 * 
GRP_Income4 + 0.28408485738252 * GRP_Mnt2 + -1.43976442737366 * GRP_Mnt3 + -0.47811534578751 * 
GRP_Mnt4 + 1.33306738423502 * GRP_MntFishProducts2 + -1.03235983303498 * GRP_MntFishProducts3 
+ 1.43737242782063 * GRP_MntFishProducts4 + -0.10286834037331 * GRP_MntGoldProds2 + 
0.74054061895326 * GRP_MntGoldProds3 + 0.27916388015938 * GRP_MntGoldProds4 + 0.12775665160956 
* GRP_MntMeatProducts2 + 1.94239791535409 * GRP_MntMeatProducts3 + 2.8604089986372 * 
GRP_MntMeatProducts4 + 0.18466046439888 * GRP_MntWines2 + 1.56362849954362 * GRP_MntWines3 + 
-0.74058839441389 * GRP_MntWines4 + 0.80335076525252 * GRP_NumCatalogPurchases3 + 
-2.1633226572249 * GRP_NumCatalogPurchases4 + -0.87650147959772 * GRP_NumDistPurchases2 + 
1.12706069993787 * GRP_NumDistPurchases3 + -1.96498929641584 * GRP_NumDistPurchases4 + 
1.06875251220076 * GRP_NumWebPurchases2 + 1.19584362733739 * GRP_NumWebPurchases3 + 
-0.75462993535725 * GRP_NumWebPurchases4 + 0.34313165289913 * GRP_RFMstat2 + -3.07377616469396 
* GRP_RFMstat3 + -0.30628532882149 * GRP_RFMstat4 + 0.90422181954504 * GRP_RMntFrq2 + 
-0.82179895308246 * GRP_RMntFrq3 + -0.01336870072701 * GRP_RMntFrq4 + 0.78962138115092 * 
GRP_Recency2 + 0.35738352585872 * GRP_Recency3 + -0.83190183219938 * GRP_Recency4 ;
276371    +   H1x1_3  = H1x1_3  +     -0.1278687821469 * GRP_AcceptedCmp52
276372    +          +     1.77838881912744 * GRP_Frq2  +    -0.95209160545855 * GRP_Frq3
276373    +          +     2.40141754421545 * GRP_Frq4  +     0.60378783958273 *
276374    +        GRP_Income2  +    -2.18346600414349 * GRP_Income3
276375    +          +     0.80627498676781 * GRP_Income4  +     0.81141725300118 *
276376    +        GRP_Mnt2  +    -0.20395009454155 * GRP_Mnt3  +     -0.3358053338153 *
276377    +        GRP_Mnt4  +    -0.16819978312641 * GRP_MntFishProducts2
276378    +          +    -0.11485741469493 * GRP_MntFishProducts3
276379    +          +     1.45721315298108 * GRP_MntFishProducts4
276380    +          +     0.26086838482974 * GRP_MntGoldProds2
276381    +          +    -0.13326700912822 * GRP_MntGoldProds3
276382    +          +    -0.31998514458297 * GRP_MntGoldProds4
276383    +          +     0.87003612251325 * GRP_MntMeatProducts2
276384    +          +    -0.25985022264915 * GRP_MntMeatProducts3
276385    +          +    -0.87011310494619 * GRP_MntMeatProducts4
276386    +          +     0.18840026647696 * GRP_MntWines2  +    -0.82430822747103 *
276387    +        GRP_MntWines3  +     -0.1293341794059 * GRP_MntWines4
276388    +          +     1.20111821881337 * GRP_NumCatalogPurchases3
276389    +          +     1.02378241927709 * GRP_NumCatalogPurchases4
276390    +          +      1.0835984835482 * GRP_NumDistPurchases2
276391    +          +     1.45339482543591 * GRP_NumDistPurchases3
276392    +          +     0.28792255375632 * GRP_NumDistPurchases4
276393    +          +     1.88871344284328 * GRP_NumWebPurchases2
276394    +          +     1.61086784930132 * GRP_NumWebPurchases3
276395    +          +     0.49767560191528 * GRP_NumWebPurchases4
276396    +          +    -2.78411910257351 * GRP_RFMstat2  +     0.84118867927224 *
276397    +        GRP_RFMstat3  +    -0.16102328336547 * GRP_RFMstat4
276398    +          +     0.27000998599161 * GRP_RMntFrq2  +     0.90131491180658 *
276399    +        GRP_RMntFrq3  +    -0.16432121563449 * GRP_RMntFrq4
276400    +          +     0.75599465145487 * GRP_Recency2  +     1.38233564862138 *
276401    +        GRP_Recency3  +      0.0905871640358 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.1278687821469 * GRP_AcceptedCmp52 + 
1.77838881912744 * GRP_Frq2 + -0.95209160545855 * GRP_Frq3 + 2.40141754421545 * GRP_Frq4 + 
0.60378783958273 * GRP_Income2 + -2.18346600414349 * GRP_Income3 + 0.80627498676781 * 
GRP_Income4 + 0.81141725300118 * GRP_Mnt2 + -0.20395009454155 * GRP_Mnt3 + -0.3358053338153 * 
GRP_Mnt4 + -0.16819978312641 * GRP_MntFishProducts2 + -0.11485741469493 * GRP_MntFishProducts3 
+ 1.45721315298108 * GRP_MntFishProducts4 + 0.26086838482974 * GRP_MntGoldProds2 + 
-0.13326700912822 * GRP_MntGoldProds3 + -0.31998514458297 * GRP_MntGoldProds4 + 
0.87003612251325 * GRP_MntMeatProducts2 + -0.25985022264915 * GRP_MntMeatProducts3 + 
-0.87011310494619 * GRP_MntMeatProducts4 + 0.18840026647696 * GRP_MntWines2 + 
-0.82430822747103 * GRP_MntWines3 + -0.1293341794059 * GRP_MntWines4 + 1.20111821881337 * 
GRP_NumCatalogPurchases3 + 1.02378241927709 * GRP_NumCatalogPurchases4 + 1.0835984835482 * 
GRP_NumDistPurchases2 + 1.45339482543591 * GRP_NumDistPurchases3 + 0.28792255375632 * 
GRP_NumDistPurchases4 + 1.88871344284328 * GRP_NumWebPurchases2 + 1.61086784930132 * 
GRP_NumWebPurchases3 + 0.49767560191528 * GRP_NumWebPurchases4 + -2.78411910257351 * 
GRP_RFMstat2 + 0.84118867927224 * GRP_RFMstat3 + -0.16102328336547 * GRP_RFMstat4 + 
0.27000998599161 * GRP_RMntFrq2 + 0.90131491180658 * GRP_RMntFrq3 + -0.16432121563449 * 
GRP_RMntFrq4 + 0.75599465145487 * GRP_Recency2 + 1.38233564862138 * GRP_Recency3 + 
0.0905871640358 * GRP_Recency4 ;
276402    +   H1x1_4  = H1x1_4  +     0.63304456551117 * GRP_AcceptedCmp52
276403    +          +    -0.14901142536344 * GRP_Frq2  +    -1.08381199299565 * GRP_Frq3
276404    +          +    -0.85011511275423 * GRP_Frq4  +    -0.08287353061518 *
276405    +        GRP_Income2  +    -0.58867333501692 * GRP_Income3
276406    +          +      2.7097455309793 * GRP_Income4  +    -0.69224144793047 *
276407    +        GRP_Mnt2  +    -0.68026366312168 * GRP_Mnt3  +     1.66551851821907 *
276408    +        GRP_Mnt4  +    -1.22509209613269 * GRP_MntFishProducts2
276409    +          +    -0.00259407262353 * GRP_MntFishProducts3
276410    +          +     0.26637234051452 * GRP_MntFishProducts4
276411    +          +     1.23072457246487 * GRP_MntGoldProds2
276412    +          +     0.27789879553199 * GRP_MntGoldProds3
276413    +          +    -1.84318316043809 * GRP_MntGoldProds4
276414    +          +    -0.37980618439099 * GRP_MntMeatProducts2
276415    +          +    -0.29547725841338 * GRP_MntMeatProducts3
276416    +          +      1.3351420752995 * GRP_MntMeatProducts4
276417    +          +    -0.69084339698082 * GRP_MntWines2  +    -2.20092193594928 *
276418    +        GRP_MntWines3  +     1.01263725926364 * GRP_MntWines4
276419    +          +     1.64715242240489 * GRP_NumCatalogPurchases3
276420    +          +     0.01013329918753 * GRP_NumCatalogPurchases4
276421    +          +      0.0553124072484 * GRP_NumDistPurchases2
276422    +          +     0.76354979572241 * GRP_NumDistPurchases3
276423    +          +     0.88878742575161 * GRP_NumDistPurchases4
276424    +          +    -0.02629928898859 * GRP_NumWebPurchases2
276425    +          +     1.58583162640849 * GRP_NumWebPurchases3
276426    +          +    -0.90266287490405 * GRP_NumWebPurchases4
276427    +          +    -1.30674857203711 * GRP_RFMstat2  +    -1.17342096545194 *
276428    +        GRP_RFMstat3  +    -0.30126794428155 * GRP_RFMstat4
276429    +          +     -0.8659792150521 * GRP_RMntFrq2  +    -1.44590383236006 *
276430    +        GRP_RMntFrq3  +    -0.80966415705314 * GRP_RMntFrq4
276431    +          +     0.87489420639261 * GRP_Recency2  +    -1.40960165096221 *
276432    +        GRP_Recency3  +    -0.53680151949787 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.63304456551117 * GRP_AcceptedCmp52 + 
-0.14901142536344 * GRP_Frq2 + -1.08381199299565 * GRP_Frq3 + -0.85011511275423 * GRP_Frq4 + 
-0.08287353061518 * GRP_Income2 + -0.58867333501692 * GRP_Income3 + 2.7097455309793 * 
GRP_Income4 + -0.69224144793047 * GRP_Mnt2 + -0.68026366312168 * GRP_Mnt3 + 1.66551851821907 * 
GRP_Mnt4 + -1.22509209613269 * GRP_MntFishProducts2 + -0.00259407262353 * GRP_MntFishProducts3 
+ 0.26637234051452 * GRP_MntFishProducts4 + 1.23072457246487 * GRP_MntGoldProds2 + 
0.27789879553199 * GRP_MntGoldProds3 + -1.84318316043809 * GRP_MntGoldProds4 + 
-0.37980618439099 * GRP_MntMeatProducts2 + -0.29547725841338 * GRP_MntMeatProducts3 + 
1.3351420752995 * GRP_MntMeatProducts4 + -0.69084339698082 * GRP_MntWines2 + -2.20092193594928 
* GRP_MntWines3 + 1.01263725926364 * GRP_MntWines4 + 1.64715242240489 * 
GRP_NumCatalogPurchases3 + 0.01013329918753 * GRP_NumCatalogPurchases4 + 0.0553124072484 * 
GRP_NumDistPurchases2 + 0.76354979572241 * GRP_NumDistPurchases3 + 0.88878742575161 * 
GRP_NumDistPurchases4 + -0.02629928898859 * GRP_NumWebPurchases2 + 1.58583162640849 * 
GRP_NumWebPurchases3 + -0.90266287490405 * GRP_NumWebPurchases4 + -1.30674857203711 * 
GRP_RFMstat2 + -1.17342096545194 * GRP_RFMstat3 + -0.30126794428155 * GRP_RFMstat4 + 
-0.8659792150521 * GRP_RMntFrq2 + -1.44590383236006 * GRP_RMntFrq3 + -0.80966415705314 * 
GRP_RMntFrq4 + 0.87489420639261 * GRP_Recency2 + -1.40960165096221 * GRP_Recency3 + 
-0.53680151949787 * GRP_Recency4 ;
276433    +   H1x1_5  = H1x1_5  +    -0.21941115903739 * GRP_AcceptedCmp52
276434    +          +     0.45333751914711 * GRP_Frq2  +     -3.0539111804593 * GRP_Frq3
276435    +          +     0.04419455266766 * GRP_Frq4  +     0.43424963383962 *
276436    +        GRP_Income2  +     2.20143802199151 * GRP_Income3
276437    +          +    -0.28702964858037 * GRP_Income4  +    -1.13156956520544 *
276438    +        GRP_Mnt2  +     1.50720291442363 * GRP_Mnt3  +    -1.22848161283033 *
276439    +        GRP_Mnt4  +     -0.7725131971727 * GRP_MntFishProducts2
276440    +          +    -1.66553508839843 * GRP_MntFishProducts3
276441    +          +     3.34099127472134 * GRP_MntFishProducts4
276442    +          +    -3.77620930649926 * GRP_MntGoldProds2
276443    +          +     2.75980592823208 * GRP_MntGoldProds3
276444    +          +    -0.90664928399655 * GRP_MntGoldProds4
276445    +          +    -1.27778215433985 * GRP_MntMeatProducts2
276446    +          +    -0.38584098789626 * GRP_MntMeatProducts3
276447    +          +      0.8642940393434 * GRP_MntMeatProducts4
276448    +          +     -1.9800576470315 * GRP_MntWines2  +    -0.84678624865719 *
276449    +        GRP_MntWines3  +    -0.71867792060605 * GRP_MntWines4
276450    +          +     0.54374663319998 * GRP_NumCatalogPurchases3
276451    +          +     0.84217480467185 * GRP_NumCatalogPurchases4
276452    +          +    -0.04373645189331 * GRP_NumDistPurchases2
276453    +          +    -3.26167594790936 * GRP_NumDistPurchases3
276454    +          +    -1.17302893253955 * GRP_NumDistPurchases4
276455    +          +     1.08907656354379 * GRP_NumWebPurchases2
276456    +          +    -1.23512651413063 * GRP_NumWebPurchases3
276457    +          +     1.21540059785356 * GRP_NumWebPurchases4
276458    +          +     1.38488146196728 * GRP_RFMstat2  +     0.90046251067185 *
276459    +        GRP_RFMstat3  +     1.44622088949053 * GRP_RFMstat4
276460    +          +     0.24358390082829 * GRP_RMntFrq2  +    -1.52588683776436 *
276461    +        GRP_RMntFrq3  +    -1.28643658389964 * GRP_RMntFrq4
276462    +          +    -0.57567006875063 * GRP_Recency2  +    -1.38736001754893 *
276463    +        GRP_Recency3  +    -0.14702610320846 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.21941115903739 * GRP_AcceptedCmp52 + 
0.45333751914711 * GRP_Frq2 + -3.0539111804593 * GRP_Frq3 + 0.04419455266766 * GRP_Frq4 + 
0.43424963383962 * GRP_Income2 + 2.20143802199151 * GRP_Income3 + -0.28702964858037 * 
GRP_Income4 + -1.13156956520544 * GRP_Mnt2 + 1.50720291442363 * GRP_Mnt3 + -1.22848161283033 * 
GRP_Mnt4 + -0.7725131971727 * GRP_MntFishProducts2 + -1.66553508839843 * GRP_MntFishProducts3 
+ 3.34099127472134 * GRP_MntFishProducts4 + -3.77620930649926 * GRP_MntGoldProds2 + 
2.75980592823208 * GRP_MntGoldProds3 + -0.90664928399655 * GRP_MntGoldProds4 + 
-1.27778215433985 * GRP_MntMeatProducts2 + -0.38584098789626 * GRP_MntMeatProducts3 + 
0.8642940393434 * GRP_MntMeatProducts4 + -1.9800576470315 * GRP_MntWines2 + -0.84678624865719 
* GRP_MntWines3 + -0.71867792060605 * GRP_MntWines4 + 0.54374663319998 * 
GRP_NumCatalogPurchases3 + 0.84217480467185 * GRP_NumCatalogPurchases4 + -0.04373645189331 * 
GRP_NumDistPurchases2 + -3.26167594790936 * GRP_NumDistPurchases3 + -1.17302893253955 * 
GRP_NumDistPurchases4 + 1.08907656354379 * GRP_NumWebPurchases2 + -1.23512651413063 * 
GRP_NumWebPurchases3 + 1.21540059785356 * GRP_NumWebPurchases4 + 1.38488146196728 * 
GRP_RFMstat2 + 0.90046251067185 * GRP_RFMstat3 + 1.44622088949053 * GRP_RFMstat4 + 
0.24358390082829 * GRP_RMntFrq2 + -1.52588683776436 * GRP_RMntFrq3 + -1.28643658389964 * 
GRP_RMntFrq4 + -0.57567006875063 * GRP_Recency2 + -1.38736001754893 * GRP_Recency3 + 
-0.14702610320846 * GRP_Recency4 ;
276464    +   H1x1_6  = H1x1_6  +     0.08036802334337 * GRP_AcceptedCmp52
276465    +          +    -2.51458257290705 * GRP_Frq2  +     0.74528046172987 * GRP_Frq3
276466    +          +    -0.77535820763324 * GRP_Frq4  +    -2.00398370232748 *
276467    +        GRP_Income2  +     2.31528209254516 * GRP_Income3
276468    +          +     0.31630780664757 * GRP_Income4  +    -0.52394275421685 *
276469    +        GRP_Mnt2  +    -0.11778857296632 * GRP_Mnt3  +     0.54634621990664 *
276470    +        GRP_Mnt4  +    -1.83414469533751 * GRP_MntFishProducts2
276471    +          +    -2.67281939906452 * GRP_MntFishProducts3
276472    +          +     0.40242786465667 * GRP_MntFishProducts4
276473    +          +     1.21530608953831 * GRP_MntGoldProds2
276474    +          +      1.3503878333604 * GRP_MntGoldProds3
276475    +          +    -0.90580344196397 * GRP_MntGoldProds4
276476    +          +    -1.45763540546851 * GRP_MntMeatProducts2
276477    +          +     -1.1437696213546 * GRP_MntMeatProducts3
276478    +          +    -0.95836970043212 * GRP_MntMeatProducts4
276479    +          +     0.05665970127644 * GRP_MntWines2  +     0.73760441066896 *
276480    +        GRP_MntWines3  +    -0.66251833030334 * GRP_MntWines4
276481    +          +    -0.66756860309452 * GRP_NumCatalogPurchases3
276482    +          +    -1.77302756421253 * GRP_NumCatalogPurchases4
276483    +          +     0.41629563300233 * GRP_NumDistPurchases2
276484    +          +     2.64707563295858 * GRP_NumDistPurchases3
276485    +          +    -2.61014123917694 * GRP_NumDistPurchases4
276486    +          +     1.31436489534812 * GRP_NumWebPurchases2
276487    +          +    -0.44152222308186 * GRP_NumWebPurchases3
276488    +          +     1.72168992115176 * GRP_NumWebPurchases4
276489    +          +    -0.60634873547541 * GRP_RFMstat2  +      0.5143401306027 *
276490    +        GRP_RFMstat3  +      0.4037230104052 * GRP_RFMstat4
276491    +          +     1.85795667721847 * GRP_RMntFrq2  +    -1.13313695958964 *
276492    +        GRP_RMntFrq3  +     1.21816928983774 * GRP_RMntFrq4
276493    +          +     0.28142803075343 * GRP_Recency2  +    -0.43031870131445 *
276494    +        GRP_Recency3  +    -0.98956301213704 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + 0.08036802334337 * GRP_AcceptedCmp52 + 
-2.51458257290705 * GRP_Frq2 + 0.74528046172987 * GRP_Frq3 + -0.77535820763324 * GRP_Frq4 + 
-2.00398370232748 * GRP_Income2 + 2.31528209254516 * GRP_Income3 + 0.31630780664757 * 
GRP_Income4 + -0.52394275421685 * GRP_Mnt2 + -0.11778857296632 * GRP_Mnt3 + 0.54634621990664 * 
GRP_Mnt4 + -1.83414469533751 * GRP_MntFishProducts2 + -2.67281939906452 * GRP_MntFishProducts3 
+ 0.40242786465667 * GRP_MntFishProducts4 + 1.21530608953831 * GRP_MntGoldProds2 + 
1.3503878333604 * GRP_MntGoldProds3 + -0.90580344196397 * GRP_MntGoldProds4 + 
-1.45763540546851 * GRP_MntMeatProducts2 + -1.1437696213546 * GRP_MntMeatProducts3 + 
-0.95836970043212 * GRP_MntMeatProducts4 + 0.05665970127644 * GRP_MntWines2 + 0.73760441066896 
* GRP_MntWines3 + -0.66251833030334 * GRP_MntWines4 + -0.66756860309452 * 
GRP_NumCatalogPurchases3 + -1.77302756421253 * GRP_NumCatalogPurchases4 + 0.41629563300233 * 
GRP_NumDistPurchases2 + 2.64707563295858 * GRP_NumDistPurchases3 + -2.61014123917694 * 
GRP_NumDistPurchases4 + 1.31436489534812 * GRP_NumWebPurchases2 + -0.44152222308186 * 
GRP_NumWebPurchases3 + 1.72168992115176 * GRP_NumWebPurchases4 + -0.60634873547541 * 
GRP_RFMstat2 + 0.5143401306027 * GRP_RFMstat3 + 0.4037230104052 * GRP_RFMstat4 + 
1.85795667721847 * GRP_RMntFrq2 + -1.13313695958964 * GRP_RMntFrq3 + 1.21816928983774 * 
GRP_RMntFrq4 + 0.28142803075343 * GRP_Recency2 + -0.43031870131445 * GRP_Recency3 + 
-0.98956301213704 * GRP_Recency4 ;
276495    +   H1x1_7  = H1x1_7  +     0.68410670134149 * GRP_AcceptedCmp52
276496    +          +     0.10121806405455 * GRP_Frq2  +     -1.8375798445876 * GRP_Frq3
276497    +          +     -2.3304704350487 * GRP_Frq4  +     -0.4064720818222 *
276498    +        GRP_Income2  +     1.14246001493098 * GRP_Income3
276499    +          +     0.30563934221376 * GRP_Income4  +    -1.03456782830408 *
276500    +        GRP_Mnt2  +     0.68732316665899 * GRP_Mnt3  +     0.12193839917197 *
276501    +        GRP_Mnt4  +     1.78947230945337 * GRP_MntFishProducts2
276502    +          +      -0.152562533802 * GRP_MntFishProducts3
276503    +          +     0.16800852501402 * GRP_MntFishProducts4
276504    +          +    -0.43436913890783 * GRP_MntGoldProds2
276505    +          +    -0.36427695823088 * GRP_MntGoldProds3
276506    +          +    -0.70562605444874 * GRP_MntGoldProds4
276507    +          +      1.1896868399991 * GRP_MntMeatProducts2
276508    +          +    -3.25683109762258 * GRP_MntMeatProducts3
276509    +          +     1.07082922763777 * GRP_MntMeatProducts4
276510    +          +     0.20781058114233 * GRP_MntWines2  +     0.58933954589501 *
276511    +        GRP_MntWines3  +    -0.47329387352048 * GRP_MntWines4
276512    +          +     2.86401269707592 * GRP_NumCatalogPurchases3
276513    +          +    -0.42660183421871 * GRP_NumCatalogPurchases4
276514    +          +     1.70072621341351 * GRP_NumDistPurchases2
276515    +          +    -0.01744947613595 * GRP_NumDistPurchases3
276516    +          +    -2.08742260039568 * GRP_NumDistPurchases4
276517    +          +    -1.04444309037822 * GRP_NumWebPurchases2
276518    +          +    -3.12746125340209 * GRP_NumWebPurchases3
276519    +          +    -0.71369198142362 * GRP_NumWebPurchases4
276520    +          +    -0.49060046002682 * GRP_RFMstat2  +     0.31117459893753 *
276521    +        GRP_RFMstat3  +     1.58479219562748 * GRP_RFMstat4
276522    +          +     0.16070553135537 * GRP_RMntFrq2  +    -1.17007677743781 *
276523    +        GRP_RMntFrq3  +    -0.89420472751582 * GRP_RMntFrq4
276524    +          +    -0.18368088096716 * GRP_Recency2  +    -0.51910607139607 *
276525    +        GRP_Recency3  +     0.01857782231504 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x1_7 = H1x1_7 + 0.68410670134149 * GRP_AcceptedCmp52 + 
0.10121806405455 * GRP_Frq2 + -1.8375798445876 * GRP_Frq3 + -2.3304704350487 * GRP_Frq4 + 
-0.4064720818222 * GRP_Income2 + 1.14246001493098 * GRP_Income3 + 0.30563934221376 * 
GRP_Income4 + -1.03456782830408 * GRP_Mnt2 + 0.68732316665899 * GRP_Mnt3 + 0.12193839917197 * 
GRP_Mnt4 + 1.78947230945337 * GRP_MntFishProducts2 + -0.152562533802 * GRP_MntFishProducts3 + 
0.16800852501402 * GRP_MntFishProducts4 + -0.43436913890783 * GRP_MntGoldProds2 + 
-0.36427695823088 * GRP_MntGoldProds3 + -0.70562605444874 * GRP_MntGoldProds4 + 
1.1896868399991 * GRP_MntMeatProducts2 + -3.25683109762258 * GRP_MntMeatProducts3 + 
1.07082922763777 * GRP_MntMeatProducts4 + 0.20781058114233 * GRP_MntWines2 + 0.58933954589501 
* GRP_MntWines3 + -0.47329387352048 * GRP_MntWines4 + 2.86401269707592 * 
GRP_NumCatalogPurchases3 + -0.42660183421871 * GRP_NumCatalogPurchases4 + 1.70072621341351 * 
GRP_NumDistPurchases2 + -0.01744947613595 * GRP_NumDistPurchases3 + -2.08742260039568 * 
GRP_NumDistPurchases4 + -1.04444309037822 * GRP_NumWebPurchases2 + -3.12746125340209 * 
GRP_NumWebPurchases3 + -0.71369198142362 * GRP_NumWebPurchases4 + -0.49060046002682 * 
GRP_RFMstat2 + 0.31117459893753 * GRP_RFMstat3 + 1.58479219562748 * GRP_RFMstat4 + 
0.16070553135537 * GRP_RMntFrq2 + -1.17007677743781 * GRP_RMntFrq3 + -0.89420472751582 * 
GRP_RMntFrq4 + -0.18368088096716 * GRP_Recency2 + -0.51910607139607 * GRP_Recency3 + 
0.01857782231504 * GRP_Recency4 ;
276526    +   H1x1_1  =     1.05791912072896 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.05791912072896 + H1x1_1 ;
276527    +   H1x1_2  =    -3.78026109193218 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -3.78026109193218 + H1x1_2 ;
276528    +   H1x1_3  =    -0.67855740578745 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.67855740578745 + H1x1_3 ;
276529    +   H1x1_4  =     1.43165665437202 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.43165665437202 + H1x1_4 ;
276530    +   H1x1_5  =     0.38366959591805 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0.38366959591805 + H1x1_5 ;
276531    +   H1x1_6  =     3.31752226761072 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = 3.31752226761072 + H1x1_6 ;
276532    +   H1x1_7  =    -0.85163584413854 + H1x1_7 ;
MPRINT(EM_DIAGRAM):   H1x1_7 = -0.85163584413854 + H1x1_7 ;
276533    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
276534    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
276535    +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
276536    +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
276537    +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
276538    +   H1x1_4  = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
276539    +   H1x1_5  = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_5 = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
276540    +   H1x1_6  = 1.0 / (1.0 + EXP(MIN( - H1x1_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_6 = 1.0 / (1.0 + EXP(MIN( - H1x1_6 , _EXP_BAR)));
276541    +   H1x1_7  = 1.0 / (1.0 + EXP(MIN( - H1x1_7 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_7 = 1.0 / (1.0 + EXP(MIN( - H1x1_7 , _EXP_BAR)));
276542    +END;
MPRINT(EM_DIAGRAM):   END;
276543    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
276544    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
276545    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
276546    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
276547    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
276548    +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
276549    +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
276550    +   H1x1_7  = .;
MPRINT(EM_DIAGRAM):   H1x1_7 = .;
276551    +END;
MPRINT(EM_DIAGRAM):   END;
276552    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
276553    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
276554    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
276555    +
276556    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
276557    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
276558    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
276559    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
276560    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
276561    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
276562    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
276563    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
276564    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
276565    +end;
MPRINT(EM_DIAGRAM):   end;
276566    +else do;
MPRINT(EM_DIAGRAM):   else do;
276567    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
276568    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
276569    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
276570    +   end;
MPRINT(EM_DIAGRAM):   end;
276571    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
276572    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
276573    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
276574    +   end;
MPRINT(EM_DIAGRAM):   end;
276575    +   else do;
MPRINT(EM_DIAGRAM):   else do;
276576    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
276577    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
276578    +   end;
MPRINT(EM_DIAGRAM):   end;
276579    +end;
MPRINT(EM_DIAGRAM):   end;
276580    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
276581    +   P_DepVar1  =    -4.35435611850415 * H1x1_1  +     3.06316051292344 * H1x1_2
276582    +          +     1.44284980602333 * H1x1_3  +    -3.32913686535523 * H1x1_4
276583    +          +     4.44336056081802 * H1x1_5  +    -4.57997435146105 * H1x1_6
276584    +          +      3.7324549254653 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -4.35435611850415 * H1x1_1 + 3.06316051292344 * H1x1_2 + 
1.44284980602333 * H1x1_3 + -3.32913686535523 * H1x1_4 + 4.44336056081802 * H1x1_5 + 
-4.57997435146105 * H1x1_6 + 3.7324549254653 * H1x1_7 ;
276585    +   P_DepVar1  =    -0.50604500485068 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.50604500485068 + P_DepVar1 ;
276586    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
276587    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
276588    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
276589    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
276590    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
276591    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
276592    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
276593    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
276594    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
276595    +END;
MPRINT(EM_DIAGRAM):   END;
276596    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
276597    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
276598    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
276599    +END;
MPRINT(EM_DIAGRAM):   END;
276600    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
276601    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
276602    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
276603    +END;
MPRINT(EM_DIAGRAM):   END;
276604    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
276605    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
276606    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
276607    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
276608    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
276609    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
276610    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
276611    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
276612    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
276613    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
276614    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
276615    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
276616    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
276617    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
276618    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
276619    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
276620    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
276621    +END;
MPRINT(EM_DIAGRAM):   END;
276622    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
276623    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
276624    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
276625    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
276626    +* Renaming variables for AutoNeural22;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural22;
276627    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
276628    +* Renaming Posterior variables for AutoNeural22;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural22;
276629    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
276630    +drop AutoNeural22_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural22_P_DepVar1;
276631    +AutoNeural22_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural22_P_DepVar1 = P_DepVar1;
276632    +drop AutoNeural22_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural22_P_DepVar0;
276633    +AutoNeural22_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural22_P_DepVar0 = P_DepVar0;
276634    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
276635    +* Renaming Into variables for AutoNeural22;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for AutoNeural22;
276636    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
276637    +length AutoNeural22_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length AutoNeural22_I_DepVar $32;
276638    +drop AutoNeural22_I_DepVar;
MPRINT(EM_DIAGRAM):   drop AutoNeural22_I_DepVar;
276639    +AutoNeural22_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   AutoNeural22_I_DepVar = I_DepVar;
276640    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
276641    +* Renaming _WARN_ variable for AutoNeural22;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural22;
276642    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
276643    +length AutoNeural22_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural22_WARN_ $4;
276644    +drop AutoNeural22_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural22_WARN_;
276645    +AutoNeural22_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural22_WARN_ = _WARN_;
276646    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
276647    +* Ensmbl50: Scoring Code of model 3 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl50: Scoring Code of model 3 of 7;
276648    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
276649    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
276650    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
276651    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
276652    +* NODE: AutoNeural21;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural21;
276653    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
276654    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
276655    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
276656    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
276657    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
276658    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
276659    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
276660    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
276661    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
276662    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
276663    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
276664    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
276665    +LENGTH _WARN_ $4
276666    +      F_DepVar  $ 12
276667    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
276668    +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
276669    +
276670    +      label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
MPRINT(EM_DIAGRAM):   label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
276671    +
276672    +      label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
276673    +
276674    +      label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
276675    +
276676    +      label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
276677    +
276678    +      label GRP_Income2 = 'Dummy: GRP_Income=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Income2 = 'Dummy: GRP_Income=2' ;
276679    +
276680    +      label GRP_Income3 = 'Dummy: GRP_Income=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Income3 = 'Dummy: GRP_Income=3' ;
276681    +
276682    +      label GRP_Income4 = 'Dummy: GRP_Income=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Income4 = 'Dummy: GRP_Income=4' ;
276683    +
276684    +      label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
276685    +
276686    +      label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
276687    +
276688    +      label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
276689    +
276690    +      label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
276691    +
276692    +      label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
276693    +
276694    +      label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
276695    +
276696    +      label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
276697    +
276698    +      label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
276699    +
276700    +      label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
276701    +
276702    +      label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
276703    +
276704    +      label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
276705    +
276706    +      label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
276707    +
276708    +      label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
276709    +
276710    +      label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
276711    +
276712    +      label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
276713    +
276714    +      label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
276715    +
276716    +      label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
276717    +
276718    +      label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
276719    +
276720    +      label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
276721    +
276722    +      label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
276723    +
276724    +      label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
276725    +
276726    +      label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
276727    +
276728    +      label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
276729    +
276730    +      label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
276731    +
276732    +      label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
276733    +
276734    +      label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
276735    +
276736    +      label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
276737    +
276738    +      label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
276739    +
276740    +      label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
276741    +
276742    +      label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
276743    +
276744    +      label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
276745    +
276746    +      label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
276747    +
276748    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
276749    +
276750    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
276751    +
276752    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
276753    +
276754    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
276755    +
276756    +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
276757    +
276758    +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
276759    +
276760    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
276761    +
276762    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
276763    +
276764    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
276765    +
276766    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
276767    +
276768    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
276769    +
276770    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
276771    +
276772    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
276773    +
276774    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
276775    +
276776    +*** Generate dummy variables for GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmp5 ;
276777    +drop GRP_AcceptedCmp52 ;
MPRINT(EM_DIAGRAM):   drop GRP_AcceptedCmp52 ;
276778    +if missing( GRP_AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmp5 ) then do;
276779    +   GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
276780    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
276781    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
276782    +end;
MPRINT(EM_DIAGRAM):   end;
276783    +else do;
MPRINT(EM_DIAGRAM):   else do;
276784    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
276785    +   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
276786    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
276787    +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
276788    +      GRP_AcceptedCmp52 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = 1;
276789    +   end;
MPRINT(EM_DIAGRAM):   end;
276790    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
276791    +      GRP_AcceptedCmp52 = -1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = -1;
276792    +   end;
MPRINT(EM_DIAGRAM):   end;
276793    +   else do;
MPRINT(EM_DIAGRAM):   else do;
276794    +      GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
276795    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
276796    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
276797    +   end;
MPRINT(EM_DIAGRAM):   end;
276798    +end;
MPRINT(EM_DIAGRAM):   end;
276799    +
276800    +*** Generate dummy variables for GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Frq ;
276801    +drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
276802    +if missing( GRP_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Frq ) then do;
276803    +   GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
276804    +   GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
276805    +   GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
276806    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
276807    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
276808    +end;
MPRINT(EM_DIAGRAM):   end;
276809    +else do;
MPRINT(EM_DIAGRAM):   else do;
276810    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
276811    +   _dm12 = put( GRP_Frq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Frq , BEST12. );
276812    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
276813    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
276814    +      GRP_Frq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = -1;
276815    +      GRP_Frq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = -1;
276816    +      GRP_Frq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = -1;
276817    +   end;
MPRINT(EM_DIAGRAM):   end;
276818    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
276819    +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
276820    +      GRP_Frq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 1;
276821    +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
276822    +   end;
MPRINT(EM_DIAGRAM):   end;
276823    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
276824    +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
276825    +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
276826    +      GRP_Frq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 1;
276827    +   end;
MPRINT(EM_DIAGRAM):   end;
276828    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
276829    +      GRP_Frq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 1;
276830    +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
276831    +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
276832    +   end;
MPRINT(EM_DIAGRAM):   end;
276833    +   else do;
MPRINT(EM_DIAGRAM):   else do;
276834    +      GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
276835    +      GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
276836    +      GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
276837    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
276838    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
276839    +   end;
MPRINT(EM_DIAGRAM):   end;
276840    +end;
MPRINT(EM_DIAGRAM):   end;
276841    +
276842    +*** Generate dummy variables for GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Income ;
276843    +drop GRP_Income2 GRP_Income3 GRP_Income4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Income2 GRP_Income3 GRP_Income4 ;
276844    +if missing( GRP_Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Income ) then do;
276845    +   GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
276846    +   GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
276847    +   GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
276848    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
276849    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
276850    +end;
MPRINT(EM_DIAGRAM):   end;
276851    +else do;
MPRINT(EM_DIAGRAM):   else do;
276852    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
276853    +   _dm12 = put( GRP_Income , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Income , BEST12. );
276854    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
276855    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
276856    +      GRP_Income2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = -1;
276857    +      GRP_Income3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = -1;
276858    +      GRP_Income4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = -1;
276859    +   end;
MPRINT(EM_DIAGRAM):   end;
276860    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
276861    +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
276862    +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
276863    +      GRP_Income4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 1;
276864    +   end;
MPRINT(EM_DIAGRAM):   end;
276865    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
276866    +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
276867    +      GRP_Income3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 1;
276868    +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
276869    +   end;
MPRINT(EM_DIAGRAM):   end;
276870    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
276871    +      GRP_Income2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 1;
276872    +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
276873    +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
276874    +   end;
MPRINT(EM_DIAGRAM):   end;
276875    +   else do;
MPRINT(EM_DIAGRAM):   else do;
276876    +      GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
276877    +      GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
276878    +      GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
276879    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
276880    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
276881    +   end;
MPRINT(EM_DIAGRAM):   end;
276882    +end;
MPRINT(EM_DIAGRAM):   end;
276883    +
276884    +*** Generate dummy variables for GRP_Mnt ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Mnt ;
276885    +drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
276886    +if missing( GRP_Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Mnt ) then do;
276887    +   GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
276888    +   GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
276889    +   GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
276890    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
276891    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
276892    +end;
MPRINT(EM_DIAGRAM):   end;
276893    +else do;
MPRINT(EM_DIAGRAM):   else do;
276894    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
276895    +   _dm12 = put( GRP_Mnt , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Mnt , BEST12. );
276896    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
276897    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
276898    +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
276899    +      GRP_Mnt3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 1;
276900    +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
276901    +   end;
MPRINT(EM_DIAGRAM):   end;
276902    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
276903    +      GRP_Mnt2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = -1;
276904    +      GRP_Mnt3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = -1;
276905    +      GRP_Mnt4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = -1;
276906    +   end;
MPRINT(EM_DIAGRAM):   end;
276907    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
276908    +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
276909    +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
276910    +      GRP_Mnt4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 1;
276911    +   end;
MPRINT(EM_DIAGRAM):   end;
276912    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
276913    +      GRP_Mnt2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 1;
276914    +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
276915    +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
276916    +   end;
MPRINT(EM_DIAGRAM):   end;
276917    +   else do;
MPRINT(EM_DIAGRAM):   else do;
276918    +      GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
276919    +      GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
276920    +      GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
276921    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
276922    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
276923    +   end;
MPRINT(EM_DIAGRAM):   end;
276924    +end;
MPRINT(EM_DIAGRAM):   end;
276925    +
276926    +*** Generate dummy variables for GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntFishProducts ;
276927    +drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
276928    +if missing( GRP_MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntFishProducts ) then do;
276929    +   GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
276930    +   GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
276931    +   GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
276932    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
276933    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
276934    +end;
MPRINT(EM_DIAGRAM):   end;
276935    +else do;
MPRINT(EM_DIAGRAM):   else do;
276936    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
276937    +   _dm12 = put( GRP_MntFishProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntFishProducts , BEST12. );
276938    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
276939    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
276940    +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
276941    +      GRP_MntFishProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 1;
276942    +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
276943    +   end;
MPRINT(EM_DIAGRAM):   end;
276944    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
276945    +      GRP_MntFishProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = -1;
276946    +      GRP_MntFishProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = -1;
276947    +      GRP_MntFishProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = -1;
276948    +   end;
MPRINT(EM_DIAGRAM):   end;
276949    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
276950    +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
276951    +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
276952    +      GRP_MntFishProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 1;
276953    +   end;
MPRINT(EM_DIAGRAM):   end;
276954    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
276955    +      GRP_MntFishProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 1;
276956    +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
276957    +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
276958    +   end;
MPRINT(EM_DIAGRAM):   end;
276959    +   else do;
MPRINT(EM_DIAGRAM):   else do;
276960    +      GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
276961    +      GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
276962    +      GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
276963    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
276964    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
276965    +   end;
MPRINT(EM_DIAGRAM):   end;
276966    +end;
MPRINT(EM_DIAGRAM):   end;
276967    +
276968    +*** Generate dummy variables for GRP_MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntGoldProds ;
276969    +drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
276970    +if missing( GRP_MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntGoldProds ) then do;
276971    +   GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
276972    +   GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
276973    +   GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
276974    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
276975    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
276976    +end;
MPRINT(EM_DIAGRAM):   end;
276977    +else do;
MPRINT(EM_DIAGRAM):   else do;
276978    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
276979    +   _dm12 = put( GRP_MntGoldProds , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntGoldProds , BEST12. );
276980    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
276981    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
276982    +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
276983    +      GRP_MntGoldProds3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 1;
276984    +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
276985    +   end;
MPRINT(EM_DIAGRAM):   end;
276986    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
276987    +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
276988    +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
276989    +      GRP_MntGoldProds4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 1;
276990    +   end;
MPRINT(EM_DIAGRAM):   end;
276991    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
276992    +      GRP_MntGoldProds2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = -1;
276993    +      GRP_MntGoldProds3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = -1;
276994    +      GRP_MntGoldProds4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = -1;
276995    +   end;
MPRINT(EM_DIAGRAM):   end;
276996    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
276997    +      GRP_MntGoldProds2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 1;
276998    +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
276999    +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
277000    +   end;
MPRINT(EM_DIAGRAM):   end;
277001    +   else do;
MPRINT(EM_DIAGRAM):   else do;
277002    +      GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
277003    +      GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
277004    +      GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
277005    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
277006    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
277007    +   end;
MPRINT(EM_DIAGRAM):   end;
277008    +end;
MPRINT(EM_DIAGRAM):   end;
277009    +
277010    +*** Generate dummy variables for GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntMeatProducts ;
277011    +drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
277012    +if missing( GRP_MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntMeatProducts ) then do;
277013    +   GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
277014    +   GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
277015    +   GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
277016    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
277017    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
277018    +end;
MPRINT(EM_DIAGRAM):   end;
277019    +else do;
MPRINT(EM_DIAGRAM):   else do;
277020    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
277021    +   _dm12 = put( GRP_MntMeatProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntMeatProducts , BEST12. );
277022    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
277023    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
277024    +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
277025    +      GRP_MntMeatProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 1;
277026    +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
277027    +   end;
MPRINT(EM_DIAGRAM):   end;
277028    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
277029    +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
277030    +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
277031    +      GRP_MntMeatProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 1;
277032    +   end;
MPRINT(EM_DIAGRAM):   end;
277033    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
277034    +      GRP_MntMeatProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = -1;
277035    +      GRP_MntMeatProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = -1;
277036    +      GRP_MntMeatProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = -1;
277037    +   end;
MPRINT(EM_DIAGRAM):   end;
277038    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
277039    +      GRP_MntMeatProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 1;
277040    +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
277041    +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
277042    +   end;
MPRINT(EM_DIAGRAM):   end;
277043    +   else do;
MPRINT(EM_DIAGRAM):   else do;
277044    +      GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
277045    +      GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
277046    +      GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
277047    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
277048    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
277049    +   end;
MPRINT(EM_DIAGRAM):   end;
277050    +end;
MPRINT(EM_DIAGRAM):   end;
277051    +
277052    +*** Generate dummy variables for GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntWines ;
277053    +drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
277054    +if missing( GRP_MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntWines ) then do;
277055    +   GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
277056    +   GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
277057    +   GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
277058    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
277059    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
277060    +end;
MPRINT(EM_DIAGRAM):   end;
277061    +else do;
MPRINT(EM_DIAGRAM):   else do;
277062    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
277063    +   _dm12 = put( GRP_MntWines , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntWines , BEST12. );
277064    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
277065    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
277066    +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
277067    +      GRP_MntWines3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 1;
277068    +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
277069    +   end;
MPRINT(EM_DIAGRAM):   end;
277070    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
277071    +      GRP_MntWines2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = -1;
277072    +      GRP_MntWines3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = -1;
277073    +      GRP_MntWines4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = -1;
277074    +   end;
MPRINT(EM_DIAGRAM):   end;
277075    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
277076    +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
277077    +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
277078    +      GRP_MntWines4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 1;
277079    +   end;
MPRINT(EM_DIAGRAM):   end;
277080    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
277081    +      GRP_MntWines2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 1;
277082    +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
277083    +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
277084    +   end;
MPRINT(EM_DIAGRAM):   end;
277085    +   else do;
MPRINT(EM_DIAGRAM):   else do;
277086    +      GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
277087    +      GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
277088    +      GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
277089    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
277090    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
277091    +   end;
MPRINT(EM_DIAGRAM):   end;
277092    +end;
MPRINT(EM_DIAGRAM):   end;
277093    +
277094    +*** Generate dummy variables for GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumCatalogPurchases ;
277095    +drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
277096    +if missing( GRP_NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumCatalogPurchases ) then do;
277097    +   GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
277098    +   GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
277099    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
277100    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
277101    +end;
MPRINT(EM_DIAGRAM):   end;
277102    +else do;
MPRINT(EM_DIAGRAM):   else do;
277103    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
277104    +   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
277105    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
277106    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
277107    +      GRP_NumCatalogPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 1;
277108    +      GRP_NumCatalogPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 0;
277109    +   end;
MPRINT(EM_DIAGRAM):   end;
277110    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
277111    +      GRP_NumCatalogPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = -1;
277112    +      GRP_NumCatalogPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = -1;
277113    +   end;
MPRINT(EM_DIAGRAM):   end;
277114    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
277115    +      GRP_NumCatalogPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 0;
277116    +      GRP_NumCatalogPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 1;
277117    +   end;
MPRINT(EM_DIAGRAM):   end;
277118    +   else do;
MPRINT(EM_DIAGRAM):   else do;
277119    +      GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
277120    +      GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
277121    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
277122    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
277123    +   end;
MPRINT(EM_DIAGRAM):   end;
277124    +end;
MPRINT(EM_DIAGRAM):   end;
277125    +
277126    +*** Generate dummy variables for GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumDistPurchases ;
277127    +drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
277128    +if missing( GRP_NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumDistPurchases ) then do;
277129    +   GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
277130    +   GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
277131    +   GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
277132    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
277133    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
277134    +end;
MPRINT(EM_DIAGRAM):   end;
277135    +else do;
MPRINT(EM_DIAGRAM):   else do;
277136    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
277137    +   _dm12 = put( GRP_NumDistPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumDistPurchases , BEST12. );
277138    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
277139    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
277140    +      GRP_NumDistPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = -1;
277141    +      GRP_NumDistPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = -1;
277142    +      GRP_NumDistPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = -1;
277143    +   end;
MPRINT(EM_DIAGRAM):   end;
277144    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
277145    +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
277146    +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
277147    +      GRP_NumDistPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 1;
277148    +   end;
MPRINT(EM_DIAGRAM):   end;
277149    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
277150    +      GRP_NumDistPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 1;
277151    +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
277152    +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
277153    +   end;
MPRINT(EM_DIAGRAM):   end;
277154    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
277155    +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
277156    +      GRP_NumDistPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 1;
277157    +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
277158    +   end;
MPRINT(EM_DIAGRAM):   end;
277159    +   else do;
MPRINT(EM_DIAGRAM):   else do;
277160    +      GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
277161    +      GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
277162    +      GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
277163    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
277164    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
277165    +   end;
MPRINT(EM_DIAGRAM):   end;
277166    +end;
MPRINT(EM_DIAGRAM):   end;
277167    +
277168    +*** Generate dummy variables for GRP_NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumWebPurchases ;
277169    +drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
277170    +if missing( GRP_NumWebPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumWebPurchases ) then do;
277171    +   GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
277172    +   GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
277173    +   GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
277174    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
277175    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
277176    +end;
MPRINT(EM_DIAGRAM):   end;
277177    +else do;
MPRINT(EM_DIAGRAM):   else do;
277178    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
277179    +   _dm12 = put( GRP_NumWebPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumWebPurchases , BEST12. );
277180    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
277181    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
277182    +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
277183    +      GRP_NumWebPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 1;
277184    +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
277185    +   end;
MPRINT(EM_DIAGRAM):   end;
277186    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
277187    +      GRP_NumWebPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = -1;
277188    +      GRP_NumWebPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = -1;
277189    +      GRP_NumWebPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = -1;
277190    +   end;
MPRINT(EM_DIAGRAM):   end;
277191    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
277192    +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
277193    +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
277194    +      GRP_NumWebPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 1;
277195    +   end;
MPRINT(EM_DIAGRAM):   end;
277196    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
277197    +      GRP_NumWebPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 1;
277198    +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
277199    +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
277200    +   end;
MPRINT(EM_DIAGRAM):   end;
277201    +   else do;
MPRINT(EM_DIAGRAM):   else do;
277202    +      GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
277203    +      GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
277204    +      GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
277205    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
277206    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
277207    +   end;
MPRINT(EM_DIAGRAM):   end;
277208    +end;
MPRINT(EM_DIAGRAM):   end;
277209    +
277210    +*** Generate dummy variables for GRP_RFMstat ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RFMstat ;
277211    +drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
277212    +if missing( GRP_RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RFMstat ) then do;
277213    +   GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
277214    +   GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
277215    +   GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
277216    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
277217    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
277218    +end;
MPRINT(EM_DIAGRAM):   end;
277219    +else do;
MPRINT(EM_DIAGRAM):   else do;
277220    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
277221    +   _dm12 = put( GRP_RFMstat , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RFMstat , BEST12. );
277222    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
277223    +   if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
277224    +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
277225    +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
277226    +      GRP_RFMstat4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 1;
277227    +   end;
MPRINT(EM_DIAGRAM):   end;
277228    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
277229    +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
277230    +      GRP_RFMstat3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 1;
277231    +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
277232    +   end;
MPRINT(EM_DIAGRAM):   end;
277233    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
277234    +      GRP_RFMstat2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = -1;
277235    +      GRP_RFMstat3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = -1;
277236    +      GRP_RFMstat4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = -1;
277237    +   end;
MPRINT(EM_DIAGRAM):   end;
277238    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
277239    +      GRP_RFMstat2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 1;
277240    +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
277241    +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
277242    +   end;
MPRINT(EM_DIAGRAM):   end;
277243    +   else do;
MPRINT(EM_DIAGRAM):   else do;
277244    +      GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
277245    +      GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
277246    +      GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
277247    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
277248    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
277249    +   end;
MPRINT(EM_DIAGRAM):   end;
277250    +end;
MPRINT(EM_DIAGRAM):   end;
277251    +
277252    +*** Generate dummy variables for GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RMntFrq ;
277253    +drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
277254    +if missing( GRP_RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RMntFrq ) then do;
277255    +   GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
277256    +   GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
277257    +   GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
277258    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
277259    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
277260    +end;
MPRINT(EM_DIAGRAM):   end;
277261    +else do;
MPRINT(EM_DIAGRAM):   else do;
277262    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
277263    +   _dm12 = put( GRP_RMntFrq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RMntFrq , BEST12. );
277264    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
277265    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
277266    +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
277267    +      GRP_RMntFrq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 1;
277268    +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
277269    +   end;
MPRINT(EM_DIAGRAM):   end;
277270    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
277271    +      GRP_RMntFrq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = -1;
277272    +      GRP_RMntFrq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = -1;
277273    +      GRP_RMntFrq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = -1;
277274    +   end;
MPRINT(EM_DIAGRAM):   end;
277275    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
277276    +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
277277    +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
277278    +      GRP_RMntFrq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 1;
277279    +   end;
MPRINT(EM_DIAGRAM):   end;
277280    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
277281    +      GRP_RMntFrq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 1;
277282    +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
277283    +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
277284    +   end;
MPRINT(EM_DIAGRAM):   end;
277285    +   else do;
MPRINT(EM_DIAGRAM):   else do;
277286    +      GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
277287    +      GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
277288    +      GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
277289    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
277290    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
277291    +   end;
MPRINT(EM_DIAGRAM):   end;
277292    +end;
MPRINT(EM_DIAGRAM):   end;
277293    +
277294    +*** Generate dummy variables for GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Recency ;
277295    +drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
277296    +if missing( GRP_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Recency ) then do;
277297    +   GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
277298    +   GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
277299    +   GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
277300    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
277301    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
277302    +end;
MPRINT(EM_DIAGRAM):   end;
277303    +else do;
MPRINT(EM_DIAGRAM):   else do;
277304    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
277305    +   _dm12 = put( GRP_Recency , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Recency , BEST12. );
277306    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
277307    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
277308    +      GRP_Recency2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = -1;
277309    +      GRP_Recency3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = -1;
277310    +      GRP_Recency4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = -1;
277311    +   end;
MPRINT(EM_DIAGRAM):   end;
277312    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
277313    +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
277314    +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
277315    +      GRP_Recency4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 1;
277316    +   end;
MPRINT(EM_DIAGRAM):   end;
277317    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
277318    +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
277319    +      GRP_Recency3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 1;
277320    +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
277321    +   end;
MPRINT(EM_DIAGRAM):   end;
277322    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
277323    +      GRP_Recency2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 1;
277324    +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
277325    +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
277326    +   end;
MPRINT(EM_DIAGRAM):   end;
277327    +   else do;
MPRINT(EM_DIAGRAM):   else do;
277328    +      GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
277329    +      GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
277330    +      GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
277331    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
277332    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
277333    +   end;
MPRINT(EM_DIAGRAM):   end;
277334    +end;
MPRINT(EM_DIAGRAM):   end;
277335    +
277336    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
277337    +*** Checking missing input Interval
277338    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
277339    +
277340    +IF NMISS(
277341    +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Year_Birth ) THEN DO;
277342    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
277343    +
277344    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
277345    +END;
MPRINT(EM_DIAGRAM):   END;
277346    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
277347    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
277348    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
277349    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
277350    +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
277351    +END;
MPRINT(EM_DIAGRAM):   END;
277352    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
277353    +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
277354    +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
277355    +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
277356    +END;
MPRINT(EM_DIAGRAM):   END;
277357    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
277358    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
277359    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
277360    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
277361    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
277362    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
277363    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
277364    +   H1x1_1  =     1.28407338963657 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.28407338963657 * S_Year_Birth ;
277365    +   H1x1_2  =     2.38810822597472 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 2.38810822597472 * S_Year_Birth ;
277366    +   H1x1_3  =     -0.7204801808304 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.7204801808304 * S_Year_Birth ;
277367    +   H1x1_4  =    -0.06539124294592 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.06539124294592 * S_Year_Birth ;
277368    +   H1x1_5  =     0.03236440118268 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0.03236440118268 * S_Year_Birth ;
277369    +   H1x1_1  = H1x1_1  +     2.33808165856563 * GRP_AcceptedCmp52
277370    +          +    -0.22986949765805 * GRP_Frq2  +     0.35082837363653 * GRP_Frq3
277371    +          +    -0.81539338849938 * GRP_Frq4  +     0.02220909701196 *
277372    +        GRP_Income2  +    -0.13099501713971 * GRP_Income3
277373    +          +     -0.0804536656406 * GRP_Income4  +    -1.59663744670427 *
277374    +        GRP_Mnt2  +    -0.75210072607852 * GRP_Mnt3  +     2.54348518711375 *
277375    +        GRP_Mnt4  +    -1.10495982071076 * GRP_MntFishProducts2
277376    +          +     0.01777635572399 * GRP_MntFishProducts3
277377    +          +     0.64964482065317 * GRP_MntFishProducts4
277378    +          +    -1.04611988857835 * GRP_MntGoldProds2
277379    +          +    -0.78605743432786 * GRP_MntGoldProds3
277380    +          +    -0.66472335544579 * GRP_MntGoldProds4
277381    +          +     1.30740864871492 * GRP_MntMeatProducts2
277382    +          +     2.64958489779167 * GRP_MntMeatProducts3
277383    +          +    -0.07163049651484 * GRP_MntMeatProducts4
277384    +          +     0.25422937257394 * GRP_MntWines2  +     4.96131673300801 *
277385    +        GRP_MntWines3  +     1.19639467926964 * GRP_MntWines4
277386    +          +     1.95336043181706 * GRP_NumCatalogPurchases3
277387    +          +    -1.04651597352668 * GRP_NumCatalogPurchases4
277388    +          +     2.10673800243141 * GRP_NumDistPurchases2
277389    +          +     1.49840431617564 * GRP_NumDistPurchases3
277390    +          +     2.97897302921808 * GRP_NumDistPurchases4
277391    +          +    -0.06881799061639 * GRP_NumWebPurchases2
277392    +          +     2.06509459645382 * GRP_NumWebPurchases3
277393    +          +     2.82361840359249 * GRP_NumWebPurchases4
277394    +          +    -0.22785891000012 * GRP_RFMstat2  +     0.11731067369321 *
277395    +        GRP_RFMstat3  +      2.1473773933678 * GRP_RFMstat4
277396    +          +    -0.84256952222829 * GRP_RMntFrq2  +     0.14220513090593 *
277397    +        GRP_RMntFrq3  +    -0.12372171572674 * GRP_RMntFrq4
277398    +          +    -0.31743815181215 * GRP_Recency2  +    -1.98918978493071 *
277399    +        GRP_Recency3  +    -0.65545972977238 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 2.33808165856563 * GRP_AcceptedCmp52 + 
-0.22986949765805 * GRP_Frq2 + 0.35082837363653 * GRP_Frq3 + -0.81539338849938 * GRP_Frq4 + 
0.02220909701196 * GRP_Income2 + -0.13099501713971 * GRP_Income3 + -0.0804536656406 * 
GRP_Income4 + -1.59663744670427 * GRP_Mnt2 + -0.75210072607852 * GRP_Mnt3 + 2.54348518711375 * 
GRP_Mnt4 + -1.10495982071076 * GRP_MntFishProducts2 + 0.01777635572399 * GRP_MntFishProducts3 
+ 0.64964482065317 * GRP_MntFishProducts4 + -1.04611988857835 * GRP_MntGoldProds2 + 
-0.78605743432786 * GRP_MntGoldProds3 + -0.66472335544579 * GRP_MntGoldProds4 + 
1.30740864871492 * GRP_MntMeatProducts2 + 2.64958489779167 * GRP_MntMeatProducts3 + 
-0.07163049651484 * GRP_MntMeatProducts4 + 0.25422937257394 * GRP_MntWines2 + 4.96131673300801 
* GRP_MntWines3 + 1.19639467926964 * GRP_MntWines4 + 1.95336043181706 * 
GRP_NumCatalogPurchases3 + -1.04651597352668 * GRP_NumCatalogPurchases4 + 2.10673800243141 * 
GRP_NumDistPurchases2 + 1.49840431617564 * GRP_NumDistPurchases3 + 2.97897302921808 * 
GRP_NumDistPurchases4 + -0.06881799061639 * GRP_NumWebPurchases2 + 2.06509459645382 * 
GRP_NumWebPurchases3 + 2.82361840359249 * GRP_NumWebPurchases4 + -0.22785891000012 * 
GRP_RFMstat2 + 0.11731067369321 * GRP_RFMstat3 + 2.1473773933678 * GRP_RFMstat4 + 
-0.84256952222829 * GRP_RMntFrq2 + 0.14220513090593 * GRP_RMntFrq3 + -0.12372171572674 * 
GRP_RMntFrq4 + -0.31743815181215 * GRP_Recency2 + -1.98918978493071 * GRP_Recency3 + 
-0.65545972977238 * GRP_Recency4 ;
277400    +   H1x1_2  = H1x1_2  +     0.33200444555787 * GRP_AcceptedCmp52
277401    +          +     -0.8934566312976 * GRP_Frq2  +    -0.00243983936395 * GRP_Frq3
277402    +          +     0.63648993363629 * GRP_Frq4  +     0.05197343322571 *
277403    +        GRP_Income2  +     0.68177129296873 * GRP_Income3
277404    +          +     1.16889856198675 * GRP_Income4  +     0.52345733778819 *
277405    +        GRP_Mnt2  +     0.86891568330214 * GRP_Mnt3  +    -1.01013818778187 *
277406    +        GRP_Mnt4  +     0.01260306109505 * GRP_MntFishProducts2
277407    +          +     0.36267476732712 * GRP_MntFishProducts3
277408    +          +     -0.0117944700646 * GRP_MntFishProducts4
277409    +          +    -2.60247007794362 * GRP_MntGoldProds2
277410    +          +     1.49175629619075 * GRP_MntGoldProds3
277411    +          +     1.15735621033648 * GRP_MntGoldProds4
277412    +          +     -0.8857925625722 * GRP_MntMeatProducts2
277413    +          +    -1.11977905267757 * GRP_MntMeatProducts3
277414    +          +     0.89317411392862 * GRP_MntMeatProducts4
277415    +          +     1.08362434913444 * GRP_MntWines2  +    -2.34573154102981 *
277416    +        GRP_MntWines3  +    -1.04821908065864 * GRP_MntWines4
277417    +          +    -1.24280966967211 * GRP_NumCatalogPurchases3
277418    +          +      3.0326089053041 * GRP_NumCatalogPurchases4
277419    +          +     0.04779959574354 * GRP_NumDistPurchases2
277420    +          +     1.71017115843439 * GRP_NumDistPurchases3
277421    +          +     0.53628643929359 * GRP_NumDistPurchases4
277422    +          +     0.89950827667194 * GRP_NumWebPurchases2
277423    +          +    -0.92684592689592 * GRP_NumWebPurchases3
277424    +          +     2.96876986636503 * GRP_NumWebPurchases4
277425    +          +     0.63124526160033 * GRP_RFMstat2  +     1.50566150377083 *
277426    +        GRP_RFMstat3  +     1.62201671855053 * GRP_RFMstat4
277427    +          +     1.20404881746786 * GRP_RMntFrq2  +    -0.61586201148662 *
277428    +        GRP_RMntFrq3  +    -1.45102172370413 * GRP_RMntFrq4
277429    +          +     0.89969425569035 * GRP_Recency2  +     0.72245574147873 *
277430    +        GRP_Recency3  +     2.83083807801553 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.33200444555787 * GRP_AcceptedCmp52 + 
-0.8934566312976 * GRP_Frq2 + -0.00243983936395 * GRP_Frq3 + 0.63648993363629 * GRP_Frq4 + 
0.05197343322571 * GRP_Income2 + 0.68177129296873 * GRP_Income3 + 1.16889856198675 * 
GRP_Income4 + 0.52345733778819 * GRP_Mnt2 + 0.86891568330214 * GRP_Mnt3 + -1.01013818778187 * 
GRP_Mnt4 + 0.01260306109505 * GRP_MntFishProducts2 + 0.36267476732712 * GRP_MntFishProducts3 + 
-0.0117944700646 * GRP_MntFishProducts4 + -2.60247007794362 * GRP_MntGoldProds2 + 
1.49175629619075 * GRP_MntGoldProds3 + 1.15735621033648 * GRP_MntGoldProds4 + -0.8857925625722 
* GRP_MntMeatProducts2 + -1.11977905267757 * GRP_MntMeatProducts3 + 0.89317411392862 * 
GRP_MntMeatProducts4 + 1.08362434913444 * GRP_MntWines2 + -2.34573154102981 * GRP_MntWines3 + 
-1.04821908065864 * GRP_MntWines4 + -1.24280966967211 * GRP_NumCatalogPurchases3 + 
3.0326089053041 * GRP_NumCatalogPurchases4 + 0.04779959574354 * GRP_NumDistPurchases2 + 
1.71017115843439 * GRP_NumDistPurchases3 + 0.53628643929359 * GRP_NumDistPurchases4 + 
0.89950827667194 * GRP_NumWebPurchases2 + -0.92684592689592 * GRP_NumWebPurchases3 + 
2.96876986636503 * GRP_NumWebPurchases4 + 0.63124526160033 * GRP_RFMstat2 + 1.50566150377083 * 
GRP_RFMstat3 + 1.62201671855053 * GRP_RFMstat4 + 1.20404881746786 * GRP_RMntFrq2 + 
-0.61586201148662 * GRP_RMntFrq3 + -1.45102172370413 * GRP_RMntFrq4 + 0.89969425569035 * 
GRP_Recency2 + 0.72245574147873 * GRP_Recency3 + 2.83083807801553 * GRP_Recency4 ;
277431    +   H1x1_3  = H1x1_3  +    -0.49052681984122 * GRP_AcceptedCmp52
277432    +          +     0.05710791956099 * GRP_Frq2  +     1.88983418164026 * GRP_Frq3
277433    +          +     0.23283788572694 * GRP_Frq4  +    -0.80169095220425 *
277434    +        GRP_Income2  +    -1.74093887199998 * GRP_Income3
277435    +          +    -0.35184466623661 * GRP_Income4  +     0.02791690171447 *
277436    +        GRP_Mnt2  +    -2.20424160961867 * GRP_Mnt3  +     0.50765331628654 *
277437    +        GRP_Mnt4  +     0.29403246554661 * GRP_MntFishProducts2
277438    +          +    -0.83380418052364 * GRP_MntFishProducts3
277439    +          +    -1.82543627661138 * GRP_MntFishProducts4
277440    +          +     0.39365380396703 * GRP_MntGoldProds2
277441    +          +     0.03998618589682 * GRP_MntGoldProds3
277442    +          +    -1.56455277750616 * GRP_MntGoldProds4
277443    +          +     0.07220994129439 * GRP_MntMeatProducts2
277444    +          +     1.10999034367361 * GRP_MntMeatProducts3
277445    +          +     0.63528886514116 * GRP_MntMeatProducts4
277446    +          +    -1.82455352991516 * GRP_MntWines2  +    -0.37467219689144 *
277447    +        GRP_MntWines3  +     0.51071844252207 * GRP_MntWines4
277448    +          +    -0.21422031720258 * GRP_NumCatalogPurchases3
277449    +          +    -3.11364867963994 * GRP_NumCatalogPurchases4
277450    +          +    -0.08758432252505 * GRP_NumDistPurchases2
277451    +          +    -0.24735131829279 * GRP_NumDistPurchases3
277452    +          +     1.22135970166178 * GRP_NumDistPurchases4
277453    +          +     0.57769775812299 * GRP_NumWebPurchases2
277454    +          +     4.20512829375782 * GRP_NumWebPurchases3
277455    +          +    -0.77892811708123 * GRP_NumWebPurchases4
277456    +          +    -1.48591575907258 * GRP_RFMstat2  +    -0.02715745890283 *
277457    +        GRP_RFMstat3  +    -1.82753253216976 * GRP_RFMstat4
277458    +          +     0.63517164755033 * GRP_RMntFrq2  +     3.41625861410136 *
277459    +        GRP_RMntFrq3  +    -1.06016238729643 * GRP_RMntFrq4
277460    +          +     0.96560069161334 * GRP_Recency2  +     2.60413272119793 *
277461    +        GRP_Recency3  +    -1.02278922860839 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.49052681984122 * GRP_AcceptedCmp52 + 
0.05710791956099 * GRP_Frq2 + 1.88983418164026 * GRP_Frq3 + 0.23283788572694 * GRP_Frq4 + 
-0.80169095220425 * GRP_Income2 + -1.74093887199998 * GRP_Income3 + -0.35184466623661 * 
GRP_Income4 + 0.02791690171447 * GRP_Mnt2 + -2.20424160961867 * GRP_Mnt3 + 0.50765331628654 * 
GRP_Mnt4 + 0.29403246554661 * GRP_MntFishProducts2 + -0.83380418052364 * GRP_MntFishProducts3 
+ -1.82543627661138 * GRP_MntFishProducts4 + 0.39365380396703 * GRP_MntGoldProds2 + 
0.03998618589682 * GRP_MntGoldProds3 + -1.56455277750616 * GRP_MntGoldProds4 + 
0.07220994129439 * GRP_MntMeatProducts2 + 1.10999034367361 * GRP_MntMeatProducts3 + 
0.63528886514116 * GRP_MntMeatProducts4 + -1.82455352991516 * GRP_MntWines2 + 
-0.37467219689144 * GRP_MntWines3 + 0.51071844252207 * GRP_MntWines4 + -0.21422031720258 * 
GRP_NumCatalogPurchases3 + -3.11364867963994 * GRP_NumCatalogPurchases4 + -0.08758432252505 * 
GRP_NumDistPurchases2 + -0.24735131829279 * GRP_NumDistPurchases3 + 1.22135970166178 * 
GRP_NumDistPurchases4 + 0.57769775812299 * GRP_NumWebPurchases2 + 4.20512829375782 * 
GRP_NumWebPurchases3 + -0.77892811708123 * GRP_NumWebPurchases4 + -1.48591575907258 * 
GRP_RFMstat2 + -0.02715745890283 * GRP_RFMstat3 + -1.82753253216976 * GRP_RFMstat4 + 
0.63517164755033 * GRP_RMntFrq2 + 3.41625861410136 * GRP_RMntFrq3 + -1.06016238729643 * 
GRP_RMntFrq4 + 0.96560069161334 * GRP_Recency2 + 2.60413272119793 * GRP_Recency3 + 
-1.02278922860839 * GRP_Recency4 ;
277462    +   H1x1_4  = H1x1_4  +    -3.02372554661072 * GRP_AcceptedCmp52
277463    +          +     1.03599850000215 * GRP_Frq2  +     2.24242470356718 * GRP_Frq3
277464    +          +      3.4718187916521 * GRP_Frq4  +     1.28707236613409 *
277465    +        GRP_Income2  +    -1.54838965127225 * GRP_Income3
277466    +          +     2.52665199719571 * GRP_Income4  +    -2.14598289769275 *
277467    +        GRP_Mnt2  +    -1.04082723723167 * GRP_Mnt3  +    -1.68747662808983 *
277468    +        GRP_Mnt4  +     -0.8736100922486 * GRP_MntFishProducts2
277469    +          +     0.12779836724514 * GRP_MntFishProducts3
277470    +          +     0.60216313416651 * GRP_MntFishProducts4
277471    +          +     0.68165487174749 * GRP_MntGoldProds2
277472    +          +    -0.89672475622939 * GRP_MntGoldProds3
277473    +          +    -1.77795912962804 * GRP_MntGoldProds4
277474    +          +    -0.74193637631708 * GRP_MntMeatProducts2
277475    +          +    -3.00981763564253 * GRP_MntMeatProducts3
277476    +          +    -0.98818439514034 * GRP_MntMeatProducts4
277477    +          +    -0.81552449599254 * GRP_MntWines2  +    -1.24481835102021 *
277478    +        GRP_MntWines3  +     0.58877118654504 * GRP_MntWines4
277479    +          +    -0.10424789545355 * GRP_NumCatalogPurchases3
277480    +          +    -1.76322947168567 * GRP_NumCatalogPurchases4
277481    +          +     0.28024987640988 * GRP_NumDistPurchases2
277482    +          +    -0.26195842187994 * GRP_NumDistPurchases3
277483    +          +     1.27465783090106 * GRP_NumDistPurchases4
277484    +          +     0.56044035795721 * GRP_NumWebPurchases2
277485    +          +     -1.0019608410124 * GRP_NumWebPurchases3
277486    +          +    -1.00438490557229 * GRP_NumWebPurchases4
277487    +          +      0.1961165620509 * GRP_RFMstat2  +    -0.64166582924081 *
277488    +        GRP_RFMstat3  +     1.80597898183848 * GRP_RFMstat4
277489    +          +       0.012135091764 * GRP_RMntFrq2  +     -1.6713653901367 *
277490    +        GRP_RMntFrq3  +    -0.99155260811599 * GRP_RMntFrq4
277491    +          +    -1.41207701933445 * GRP_Recency2  +    -1.44162495285758 *
277492    +        GRP_Recency3  +    -1.33328278459656 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -3.02372554661072 * GRP_AcceptedCmp52 + 
1.03599850000215 * GRP_Frq2 + 2.24242470356718 * GRP_Frq3 + 3.4718187916521 * GRP_Frq4 + 
1.28707236613409 * GRP_Income2 + -1.54838965127225 * GRP_Income3 + 2.52665199719571 * 
GRP_Income4 + -2.14598289769275 * GRP_Mnt2 + -1.04082723723167 * GRP_Mnt3 + -1.68747662808983 
* GRP_Mnt4 + -0.8736100922486 * GRP_MntFishProducts2 + 0.12779836724514 * GRP_MntFishProducts3 
+ 0.60216313416651 * GRP_MntFishProducts4 + 0.68165487174749 * GRP_MntGoldProds2 + 
-0.89672475622939 * GRP_MntGoldProds3 + -1.77795912962804 * GRP_MntGoldProds4 + 
-0.74193637631708 * GRP_MntMeatProducts2 + -3.00981763564253 * GRP_MntMeatProducts3 + 
-0.98818439514034 * GRP_MntMeatProducts4 + -0.81552449599254 * GRP_MntWines2 + 
-1.24481835102021 * GRP_MntWines3 + 0.58877118654504 * GRP_MntWines4 + -0.10424789545355 * 
GRP_NumCatalogPurchases3 + -1.76322947168567 * GRP_NumCatalogPurchases4 + 0.28024987640988 * 
GRP_NumDistPurchases2 + -0.26195842187994 * GRP_NumDistPurchases3 + 1.27465783090106 * 
GRP_NumDistPurchases4 + 0.56044035795721 * GRP_NumWebPurchases2 + -1.0019608410124 * 
GRP_NumWebPurchases3 + -1.00438490557229 * GRP_NumWebPurchases4 + 0.1961165620509 * 
GRP_RFMstat2 + -0.64166582924081 * GRP_RFMstat3 + 1.80597898183848 * GRP_RFMstat4 + 
0.012135091764 * GRP_RMntFrq2 + -1.6713653901367 * GRP_RMntFrq3 + -0.99155260811599 * 
GRP_RMntFrq4 + -1.41207701933445 * GRP_Recency2 + -1.44162495285758 * GRP_Recency3 + 
-1.33328278459656 * GRP_Recency4 ;
277493    +   H1x1_5  = H1x1_5  +    -2.91353005427803 * GRP_AcceptedCmp52
277494    +          +    -0.01308096407334 * GRP_Frq2  +    -0.45559322170718 * GRP_Frq3
277495    +          +    -0.49751279425547 * GRP_Frq4  +     0.02860594561374 *
277496    +        GRP_Income2  +     1.41758925806391 * GRP_Income3
277497    +          +     0.03726548596251 * GRP_Income4  +    -1.57900147909252 *
277498    +        GRP_Mnt2  +      2.3511697752438 * GRP_Mnt3  +     0.88048248424859 *
277499    +        GRP_Mnt4  +    -0.56545409501904 * GRP_MntFishProducts2
277500    +          +    -3.10608760567335 * GRP_MntFishProducts3
277501    +          +     1.06400320622897 * GRP_MntFishProducts4
277502    +          +     2.68670541844486 * GRP_MntGoldProds2
277503    +          +     0.07232195736653 * GRP_MntGoldProds3
277504    +          +     1.85531703888295 * GRP_MntGoldProds4
277505    +          +    -1.87162230531925 * GRP_MntMeatProducts2
277506    +          +    -1.13875662802599 * GRP_MntMeatProducts3
277507    +          +    -0.24099135606782 * GRP_MntMeatProducts4
277508    +          +    -0.13235213570702 * GRP_MntWines2  +    -0.50193070898101 *
277509    +        GRP_MntWines3  +     -0.1999771853027 * GRP_MntWines4
277510    +          +    -1.59837823433046 * GRP_NumCatalogPurchases3
277511    +          +    -3.92043146311091 * GRP_NumCatalogPurchases4
277512    +          +    -0.99805577329855 * GRP_NumDistPurchases2
277513    +          +     -2.4067364238872 * GRP_NumDistPurchases3
277514    +          +     0.25924131471222 * GRP_NumDistPurchases4
277515    +          +     0.70743157783391 * GRP_NumWebPurchases2
277516    +          +    -2.55740259562506 * GRP_NumWebPurchases3
277517    +          +     1.49837454147543 * GRP_NumWebPurchases4
277518    +          +     0.02282459900932 * GRP_RFMstat2  +     2.49823188893146 *
277519    +        GRP_RFMstat3  +      0.0125770688182 * GRP_RFMstat4
277520    +          +    -0.52646059416986 * GRP_RMntFrq2  +     0.48734306173312 *
277521    +        GRP_RMntFrq3  +     1.20982084491791 * GRP_RMntFrq4
277522    +          +     1.46024730556461 * GRP_Recency2  +     1.39328521843098 *
277523    +        GRP_Recency3  +     0.07072877455933 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -2.91353005427803 * GRP_AcceptedCmp52 + 
-0.01308096407334 * GRP_Frq2 + -0.45559322170718 * GRP_Frq3 + -0.49751279425547 * GRP_Frq4 + 
0.02860594561374 * GRP_Income2 + 1.41758925806391 * GRP_Income3 + 0.03726548596251 * 
GRP_Income4 + -1.57900147909252 * GRP_Mnt2 + 2.3511697752438 * GRP_Mnt3 + 0.88048248424859 * 
GRP_Mnt4 + -0.56545409501904 * GRP_MntFishProducts2 + -3.10608760567335 * GRP_MntFishProducts3 
+ 1.06400320622897 * GRP_MntFishProducts4 + 2.68670541844486 * GRP_MntGoldProds2 + 
0.07232195736653 * GRP_MntGoldProds3 + 1.85531703888295 * GRP_MntGoldProds4 + 
-1.87162230531925 * GRP_MntMeatProducts2 + -1.13875662802599 * GRP_MntMeatProducts3 + 
-0.24099135606782 * GRP_MntMeatProducts4 + -0.13235213570702 * GRP_MntWines2 + 
-0.50193070898101 * GRP_MntWines3 + -0.1999771853027 * GRP_MntWines4 + -1.59837823433046 * 
GRP_NumCatalogPurchases3 + -3.92043146311091 * GRP_NumCatalogPurchases4 + -0.99805577329855 * 
GRP_NumDistPurchases2 + -2.4067364238872 * GRP_NumDistPurchases3 + 0.25924131471222 * 
GRP_NumDistPurchases4 + 0.70743157783391 * GRP_NumWebPurchases2 + -2.55740259562506 * 
GRP_NumWebPurchases3 + 1.49837454147543 * GRP_NumWebPurchases4 + 0.02282459900932 * 
GRP_RFMstat2 + 2.49823188893146 * GRP_RFMstat3 + 0.0125770688182 * GRP_RFMstat4 + 
-0.52646059416986 * GRP_RMntFrq2 + 0.48734306173312 * GRP_RMntFrq3 + 1.20982084491791 * 
GRP_RMntFrq4 + 1.46024730556461 * GRP_Recency2 + 1.39328521843098 * GRP_Recency3 + 
0.07072877455933 * GRP_Recency4 ;
277524    +   H1x1_1  =     2.28517939702199 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 2.28517939702199 + H1x1_1 ;
277525    +   H1x1_2  =      0.8100923065727 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.8100923065727 + H1x1_2 ;
277526    +   H1x1_3  =    -1.33120225377486 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -1.33120225377486 + H1x1_3 ;
277527    +   H1x1_4  =    -0.45230391783078 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.45230391783078 + H1x1_4 ;
277528    +   H1x1_5  =    -0.40460344381081 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.40460344381081 + H1x1_5 ;
277529    +   H1x1_6  = 0;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0;
277530    +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
277531    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
277532    +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
277533    +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
277534    +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
277535    +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
277536    +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
277537    +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
277538    +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
277539    +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
277540    +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
277541    +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
277542    +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
277543    +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
277544    +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
277545    +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
277546    +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
277547    +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
277548    +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
277549    +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
277550    +END;
MPRINT(EM_DIAGRAM):   END;
277551    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
277552    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
277553    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
277554    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
277555    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
277556    +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
277557    +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
277558    +END;
MPRINT(EM_DIAGRAM):   END;
277559    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
277560    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
277561    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
277562    +
277563    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
277564    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
277565    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
277566    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
277567    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
277568    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
277569    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
277570    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
277571    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
277572    +end;
MPRINT(EM_DIAGRAM):   end;
277573    +else do;
MPRINT(EM_DIAGRAM):   else do;
277574    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
277575    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
277576    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
277577    +   end;
MPRINT(EM_DIAGRAM):   end;
277578    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
277579    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
277580    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
277581    +   end;
MPRINT(EM_DIAGRAM):   end;
277582    +   else do;
MPRINT(EM_DIAGRAM):   else do;
277583    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
277584    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
277585    +   end;
MPRINT(EM_DIAGRAM):   end;
277586    +end;
MPRINT(EM_DIAGRAM):   end;
277587    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
277588    +   P_DepVar1  =    -2.81431269255211 * H1x1_1  +       3.440967475001 * H1x1_2
277589    +          +     0.80588527631153 * H1x1_3  +    -2.86385782353564 * H1x1_4
277590    +          +     4.10205776026281 * H1x1_5  +    -2.89048426961502 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.81431269255211 * H1x1_1 + 3.440967475001 * H1x1_2 + 
0.80588527631153 * H1x1_3 + -2.86385782353564 * H1x1_4 + 4.10205776026281 * H1x1_5 + 
-2.89048426961502 * H1x1_6 ;
277591    +   P_DepVar1  =    -1.38440437244113 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.38440437244113 + P_DepVar1 ;
277592    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
277593    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
277594    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
277595    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
277596    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
277597    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
277598    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
277599    +   P_DepVar1  = P_DepVar1  / _SUM_;
The SAS System

MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
277600    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
277601    +END;
MPRINT(EM_DIAGRAM):   END;
277602    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
277603    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
277604    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
277605    +END;
MPRINT(EM_DIAGRAM):   END;
277606    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
277607    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
277608    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
277609    +END;
MPRINT(EM_DIAGRAM):   END;
277610    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
277611    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
277612    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
277613    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
277614    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
277615    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
277616    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
277617    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
277618    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
277619    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
277620    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
277621    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
277622    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
277623    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
277624    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
277625    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
277626    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
277627    +END;
MPRINT(EM_DIAGRAM):   END;
277628    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
277629    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
277630    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
277631    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
277632    +* Renaming variables for AutoNeural21;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural21;
277633    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
277634    +* Renaming Posterior variables for AutoNeural21;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural21;
277635    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
277636    +drop AutoNeural21_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural21_P_DepVar1;
277637    +AutoNeural21_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural21_P_DepVar1 = P_DepVar1;
277638    +drop AutoNeural21_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural21_P_DepVar0;
277639    +AutoNeural21_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural21_P_DepVar0 = P_DepVar0;
277640    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
277641    +* Renaming Into variables for AutoNeural21;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for AutoNeural21;
277642    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
277643    +length AutoNeural21_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length AutoNeural21_I_DepVar $32;
277644    +drop AutoNeural21_I_DepVar;
MPRINT(EM_DIAGRAM):   drop AutoNeural21_I_DepVar;
277645    +AutoNeural21_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   AutoNeural21_I_DepVar = I_DepVar;
277646    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
277647    +* Renaming _WARN_ variable for AutoNeural21;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural21;
277648    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
277649    +length AutoNeural21_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural21_WARN_ $4;
277650    +drop AutoNeural21_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural21_WARN_;
277651    +AutoNeural21_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural21_WARN_ = _WARN_;
277652    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
277653    +* Ensmbl50: Scoring Code of model 4 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl50: Scoring Code of model 4 of 7;
277654    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
277655    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
277656    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
277657    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
277658    +* NODE: AutoNeural20;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural20;
277659    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
277660    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
277661    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
277662    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
277663    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
277664    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
277665    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
277666    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
277667    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
277668    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
277669    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
277670    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
277671    +LENGTH _WARN_ $4
277672    +      F_DepVar  $ 12
277673    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
277674    +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
277675    +
277676    +      label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
MPRINT(EM_DIAGRAM):   label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
277677    +
277678    +      label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
277679    +
277680    +      label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
277681    +
277682    +      label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
277683    +
277684    +      label GRP_Income2 = 'Dummy: GRP_Income=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Income2 = 'Dummy: GRP_Income=2' ;
277685    +
277686    +      label GRP_Income3 = 'Dummy: GRP_Income=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Income3 = 'Dummy: GRP_Income=3' ;
277687    +
277688    +      label GRP_Income4 = 'Dummy: GRP_Income=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Income4 = 'Dummy: GRP_Income=4' ;
277689    +
277690    +      label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
277691    +
277692    +      label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
277693    +
277694    +      label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
277695    +
277696    +      label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
277697    +
277698    +      label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
277699    +
277700    +      label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
277701    +
277702    +      label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
277703    +
277704    +      label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
277705    +
277706    +      label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
277707    +
277708    +      label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
277709    +
277710    +      label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
277711    +
277712    +      label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
277713    +
277714    +      label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
277715    +
277716    +      label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
277717    +
277718    +      label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
277719    +
277720    +      label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
277721    +
277722    +      label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
277723    +
277724    +      label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
277725    +
277726    +      label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
277727    +
277728    +      label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
277729    +
277730    +      label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
277731    +
277732    +      label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
277733    +
277734    +      label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
277735    +
277736    +      label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
277737    +
277738    +      label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
277739    +
277740    +      label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
277741    +
277742    +      label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
277743    +
277744    +      label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
277745    +
277746    +      label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
277747    +
277748    +      label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
277749    +
277750    +      label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
277751    +
277752    +      label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
277753    +
277754    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
277755    +
277756    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
277757    +
277758    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
277759    +
277760    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
277761    +
277762    +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
277763    +
277764    +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
277765    +
277766    +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
277767    +
277768    +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
277769    +
277770    +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
277771    +
277772    +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
277773    +
277774    +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
277775    +
277776    +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
277777    +
277778    +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
277779    +
277780    +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
277781    +
277782    +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
277783    +
277784    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
277785    +
277786    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
277787    +
277788    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
277789    +
277790    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
277791    +
277792    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
277793    +
277794    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
277795    +
277796    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
277797    +
277798    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
277799    +
277800    +*** Generate dummy variables for GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmp5 ;
277801    +drop GRP_AcceptedCmp52 ;
MPRINT(EM_DIAGRAM):   drop GRP_AcceptedCmp52 ;
277802    +if missing( GRP_AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmp5 ) then do;
277803    +   GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
277804    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
277805    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
277806    +end;
MPRINT(EM_DIAGRAM):   end;
277807    +else do;
MPRINT(EM_DIAGRAM):   else do;
277808    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
277809    +   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
277810    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
277811    +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
277812    +      GRP_AcceptedCmp52 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = 1;
277813    +   end;
MPRINT(EM_DIAGRAM):   end;
277814    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
277815    +      GRP_AcceptedCmp52 = -1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = -1;
277816    +   end;
MPRINT(EM_DIAGRAM):   end;
277817    +   else do;
MPRINT(EM_DIAGRAM):   else do;
277818    +      GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
277819    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
277820    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
277821    +   end;
MPRINT(EM_DIAGRAM):   end;
277822    +end;
MPRINT(EM_DIAGRAM):   end;
277823    +
277824    +*** Generate dummy variables for GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Frq ;
277825    +drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
277826    +if missing( GRP_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Frq ) then do;
277827    +   GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
277828    +   GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
277829    +   GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
277830    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
277831    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
277832    +end;
MPRINT(EM_DIAGRAM):   end;
277833    +else do;
MPRINT(EM_DIAGRAM):   else do;
277834    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
277835    +   _dm12 = put( GRP_Frq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Frq , BEST12. );
277836    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
277837    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
277838    +      GRP_Frq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = -1;
277839    +      GRP_Frq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = -1;
277840    +      GRP_Frq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = -1;
277841    +   end;
MPRINT(EM_DIAGRAM):   end;
277842    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
277843    +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
277844    +      GRP_Frq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 1;
277845    +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
277846    +   end;
MPRINT(EM_DIAGRAM):   end;
277847    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
277848    +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
277849    +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
277850    +      GRP_Frq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 1;
277851    +   end;
MPRINT(EM_DIAGRAM):   end;
277852    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
277853    +      GRP_Frq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 1;
277854    +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
277855    +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
277856    +   end;
MPRINT(EM_DIAGRAM):   end;
277857    +   else do;
MPRINT(EM_DIAGRAM):   else do;
277858    +      GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
277859    +      GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
277860    +      GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
277861    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
277862    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
277863    +   end;
MPRINT(EM_DIAGRAM):   end;
277864    +end;
MPRINT(EM_DIAGRAM):   end;
277865    +
277866    +*** Generate dummy variables for GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Income ;
277867    +drop GRP_Income2 GRP_Income3 GRP_Income4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Income2 GRP_Income3 GRP_Income4 ;
277868    +if missing( GRP_Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Income ) then do;
277869    +   GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
277870    +   GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
277871    +   GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
277872    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
277873    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
277874    +end;
MPRINT(EM_DIAGRAM):   end;
277875    +else do;
MPRINT(EM_DIAGRAM):   else do;
277876    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
277877    +   _dm12 = put( GRP_Income , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Income , BEST12. );
277878    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
277879    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
277880    +      GRP_Income2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = -1;
277881    +      GRP_Income3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = -1;
277882    +      GRP_Income4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = -1;
277883    +   end;
MPRINT(EM_DIAGRAM):   end;
277884    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
277885    +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
277886    +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
277887    +      GRP_Income4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 1;
277888    +   end;
MPRINT(EM_DIAGRAM):   end;
277889    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
277890    +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
277891    +      GRP_Income3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 1;
277892    +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
277893    +   end;
MPRINT(EM_DIAGRAM):   end;
277894    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
277895    +      GRP_Income2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 1;
277896    +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
277897    +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
277898    +   end;
MPRINT(EM_DIAGRAM):   end;
277899    +   else do;
MPRINT(EM_DIAGRAM):   else do;
277900    +      GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
277901    +      GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
277902    +      GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
277903    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
277904    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
277905    +   end;
MPRINT(EM_DIAGRAM):   end;
277906    +end;
MPRINT(EM_DIAGRAM):   end;
277907    +
277908    +*** Generate dummy variables for GRP_Mnt ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Mnt ;
277909    +drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
277910    +if missing( GRP_Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Mnt ) then do;
277911    +   GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
277912    +   GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
277913    +   GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
277914    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
277915    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
277916    +end;
MPRINT(EM_DIAGRAM):   end;
277917    +else do;
MPRINT(EM_DIAGRAM):   else do;
277918    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
277919    +   _dm12 = put( GRP_Mnt , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Mnt , BEST12. );
277920    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
277921    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
277922    +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
277923    +      GRP_Mnt3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 1;
277924    +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
277925    +   end;
MPRINT(EM_DIAGRAM):   end;
277926    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
277927    +      GRP_Mnt2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = -1;
277928    +      GRP_Mnt3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = -1;
277929    +      GRP_Mnt4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = -1;
277930    +   end;
MPRINT(EM_DIAGRAM):   end;
277931    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
277932    +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
277933    +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
277934    +      GRP_Mnt4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 1;
277935    +   end;
MPRINT(EM_DIAGRAM):   end;
277936    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
277937    +      GRP_Mnt2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 1;
277938    +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
277939    +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
277940    +   end;
MPRINT(EM_DIAGRAM):   end;
277941    +   else do;
MPRINT(EM_DIAGRAM):   else do;
277942    +      GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
277943    +      GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
277944    +      GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
277945    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
277946    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
277947    +   end;
MPRINT(EM_DIAGRAM):   end;
277948    +end;
MPRINT(EM_DIAGRAM):   end;
277949    +
277950    +*** Generate dummy variables for GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntFishProducts ;
277951    +drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
277952    +if missing( GRP_MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntFishProducts ) then do;
277953    +   GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
277954    +   GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
277955    +   GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
277956    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
277957    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
277958    +end;
MPRINT(EM_DIAGRAM):   end;
277959    +else do;
MPRINT(EM_DIAGRAM):   else do;
277960    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
277961    +   _dm12 = put( GRP_MntFishProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntFishProducts , BEST12. );
277962    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
277963    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
277964    +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
277965    +      GRP_MntFishProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 1;
277966    +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
277967    +   end;
MPRINT(EM_DIAGRAM):   end;
277968    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
277969    +      GRP_MntFishProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = -1;
277970    +      GRP_MntFishProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = -1;
277971    +      GRP_MntFishProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = -1;
277972    +   end;
MPRINT(EM_DIAGRAM):   end;
277973    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
277974    +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
277975    +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
277976    +      GRP_MntFishProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 1;
277977    +   end;
MPRINT(EM_DIAGRAM):   end;
277978    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
277979    +      GRP_MntFishProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 1;
277980    +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
277981    +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
277982    +   end;
MPRINT(EM_DIAGRAM):   end;
277983    +   else do;
MPRINT(EM_DIAGRAM):   else do;
277984    +      GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
277985    +      GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
277986    +      GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
277987    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
277988    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
277989    +   end;
MPRINT(EM_DIAGRAM):   end;
277990    +end;
MPRINT(EM_DIAGRAM):   end;
277991    +
277992    +*** Generate dummy variables for GRP_MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntGoldProds ;
277993    +drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
277994    +if missing( GRP_MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntGoldProds ) then do;
277995    +   GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
277996    +   GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
277997    +   GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
277998    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
277999    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
278000    +end;
MPRINT(EM_DIAGRAM):   end;
278001    +else do;
MPRINT(EM_DIAGRAM):   else do;
278002    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
278003    +   _dm12 = put( GRP_MntGoldProds , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntGoldProds , BEST12. );
278004    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
278005    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
278006    +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
278007    +      GRP_MntGoldProds3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 1;
278008    +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
278009    +   end;
MPRINT(EM_DIAGRAM):   end;
278010    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
278011    +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
278012    +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
278013    +      GRP_MntGoldProds4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 1;
278014    +   end;
MPRINT(EM_DIAGRAM):   end;
278015    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
278016    +      GRP_MntGoldProds2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = -1;
278017    +      GRP_MntGoldProds3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = -1;
278018    +      GRP_MntGoldProds4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = -1;
278019    +   end;
MPRINT(EM_DIAGRAM):   end;
278020    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
278021    +      GRP_MntGoldProds2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 1;
278022    +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
278023    +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
278024    +   end;
MPRINT(EM_DIAGRAM):   end;
278025    +   else do;
MPRINT(EM_DIAGRAM):   else do;
278026    +      GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
278027    +      GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
278028    +      GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
278029    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
278030    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
278031    +   end;
MPRINT(EM_DIAGRAM):   end;
278032    +end;
MPRINT(EM_DIAGRAM):   end;
278033    +
278034    +*** Generate dummy variables for GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntMeatProducts ;
278035    +drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
278036    +if missing( GRP_MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntMeatProducts ) then do;
278037    +   GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
278038    +   GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
278039    +   GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
278040    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
278041    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
278042    +end;
MPRINT(EM_DIAGRAM):   end;
278043    +else do;
MPRINT(EM_DIAGRAM):   else do;
278044    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
278045    +   _dm12 = put( GRP_MntMeatProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntMeatProducts , BEST12. );
278046    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
278047    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
278048    +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
278049    +      GRP_MntMeatProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 1;
278050    +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
278051    +   end;
MPRINT(EM_DIAGRAM):   end;
278052    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
278053    +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
278054    +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
278055    +      GRP_MntMeatProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 1;
278056    +   end;
MPRINT(EM_DIAGRAM):   end;
278057    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
278058    +      GRP_MntMeatProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = -1;
278059    +      GRP_MntMeatProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = -1;
278060    +      GRP_MntMeatProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = -1;
278061    +   end;
MPRINT(EM_DIAGRAM):   end;
278062    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
278063    +      GRP_MntMeatProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 1;
278064    +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
278065    +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
278066    +   end;
MPRINT(EM_DIAGRAM):   end;
278067    +   else do;
MPRINT(EM_DIAGRAM):   else do;
278068    +      GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
278069    +      GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
278070    +      GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
278071    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
278072    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
278073    +   end;
MPRINT(EM_DIAGRAM):   end;
278074    +end;
MPRINT(EM_DIAGRAM):   end;
278075    +
278076    +*** Generate dummy variables for GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntWines ;
278077    +drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
278078    +if missing( GRP_MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntWines ) then do;
278079    +   GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
278080    +   GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
278081    +   GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
278082    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
278083    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
278084    +end;
MPRINT(EM_DIAGRAM):   end;
278085    +else do;
MPRINT(EM_DIAGRAM):   else do;
278086    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
278087    +   _dm12 = put( GRP_MntWines , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntWines , BEST12. );
278088    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
278089    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
278090    +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
278091    +      GRP_MntWines3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 1;
278092    +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
278093    +   end;
MPRINT(EM_DIAGRAM):   end;
278094    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
278095    +      GRP_MntWines2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = -1;
278096    +      GRP_MntWines3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = -1;
278097    +      GRP_MntWines4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = -1;
278098    +   end;
MPRINT(EM_DIAGRAM):   end;
278099    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
278100    +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
278101    +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
278102    +      GRP_MntWines4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 1;
278103    +   end;
MPRINT(EM_DIAGRAM):   end;
278104    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
278105    +      GRP_MntWines2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 1;
278106    +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
278107    +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
278108    +   end;
MPRINT(EM_DIAGRAM):   end;
278109    +   else do;
MPRINT(EM_DIAGRAM):   else do;
278110    +      GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
278111    +      GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
278112    +      GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
278113    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
278114    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
278115    +   end;
MPRINT(EM_DIAGRAM):   end;
278116    +end;
MPRINT(EM_DIAGRAM):   end;
278117    +
278118    +*** Generate dummy variables for GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumCatalogPurchases ;
278119    +drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
278120    +if missing( GRP_NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumCatalogPurchases ) then do;
278121    +   GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
278122    +   GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
278123    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
278124    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
278125    +end;
MPRINT(EM_DIAGRAM):   end;
278126    +else do;
MPRINT(EM_DIAGRAM):   else do;
278127    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
278128    +   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
278129    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
278130    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
278131    +      GRP_NumCatalogPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 1;
278132    +      GRP_NumCatalogPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 0;
278133    +   end;
MPRINT(EM_DIAGRAM):   end;
278134    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
278135    +      GRP_NumCatalogPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = -1;
278136    +      GRP_NumCatalogPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = -1;
278137    +   end;
MPRINT(EM_DIAGRAM):   end;
278138    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
278139    +      GRP_NumCatalogPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 0;
278140    +      GRP_NumCatalogPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 1;
278141    +   end;
MPRINT(EM_DIAGRAM):   end;
278142    +   else do;
MPRINT(EM_DIAGRAM):   else do;
278143    +      GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
278144    +      GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
278145    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
278146    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
278147    +   end;
MPRINT(EM_DIAGRAM):   end;
278148    +end;
MPRINT(EM_DIAGRAM):   end;
278149    +
278150    +*** Generate dummy variables for GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumDistPurchases ;
278151    +drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
278152    +if missing( GRP_NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumDistPurchases ) then do;
278153    +   GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
278154    +   GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
278155    +   GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
278156    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
278157    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
278158    +end;
MPRINT(EM_DIAGRAM):   end;
278159    +else do;
MPRINT(EM_DIAGRAM):   else do;
278160    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
278161    +   _dm12 = put( GRP_NumDistPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumDistPurchases , BEST12. );
278162    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
278163    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
278164    +      GRP_NumDistPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = -1;
278165    +      GRP_NumDistPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = -1;
278166    +      GRP_NumDistPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = -1;
278167    +   end;
MPRINT(EM_DIAGRAM):   end;
278168    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
278169    +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
278170    +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
278171    +      GRP_NumDistPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 1;
278172    +   end;
MPRINT(EM_DIAGRAM):   end;
278173    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
278174    +      GRP_NumDistPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 1;
278175    +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
278176    +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
278177    +   end;
MPRINT(EM_DIAGRAM):   end;
278178    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
278179    +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
278180    +      GRP_NumDistPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 1;
278181    +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
278182    +   end;
MPRINT(EM_DIAGRAM):   end;
278183    +   else do;
MPRINT(EM_DIAGRAM):   else do;
278184    +      GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
278185    +      GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
278186    +      GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
278187    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
278188    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
278189    +   end;
MPRINT(EM_DIAGRAM):   end;
278190    +end;
MPRINT(EM_DIAGRAM):   end;
278191    +
278192    +*** Generate dummy variables for GRP_NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumWebPurchases ;
278193    +drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
278194    +if missing( GRP_NumWebPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumWebPurchases ) then do;
278195    +   GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
278196    +   GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
278197    +   GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
278198    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
278199    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
278200    +end;
MPRINT(EM_DIAGRAM):   end;
278201    +else do;
MPRINT(EM_DIAGRAM):   else do;
278202    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
278203    +   _dm12 = put( GRP_NumWebPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumWebPurchases , BEST12. );
278204    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
278205    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
278206    +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
278207    +      GRP_NumWebPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 1;
278208    +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
278209    +   end;
MPRINT(EM_DIAGRAM):   end;
278210    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
278211    +      GRP_NumWebPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = -1;
278212    +      GRP_NumWebPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = -1;
278213    +      GRP_NumWebPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = -1;
278214    +   end;
MPRINT(EM_DIAGRAM):   end;
278215    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
278216    +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
278217    +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
278218    +      GRP_NumWebPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 1;
278219    +   end;
MPRINT(EM_DIAGRAM):   end;
278220    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
278221    +      GRP_NumWebPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 1;
278222    +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
278223    +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
278224    +   end;
MPRINT(EM_DIAGRAM):   end;
278225    +   else do;
MPRINT(EM_DIAGRAM):   else do;
278226    +      GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
278227    +      GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
278228    +      GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
278229    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
278230    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
278231    +   end;
MPRINT(EM_DIAGRAM):   end;
278232    +end;
MPRINT(EM_DIAGRAM):   end;
278233    +
278234    +*** Generate dummy variables for GRP_RFMstat ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RFMstat ;
278235    +drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
278236    +if missing( GRP_RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RFMstat ) then do;
278237    +   GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
278238    +   GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
278239    +   GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
278240    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
278241    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
278242    +end;
MPRINT(EM_DIAGRAM):   end;
278243    +else do;
MPRINT(EM_DIAGRAM):   else do;
278244    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
278245    +   _dm12 = put( GRP_RFMstat , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RFMstat , BEST12. );
278246    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
278247    +   if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
278248    +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
278249    +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
278250    +      GRP_RFMstat4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 1;
278251    +   end;
MPRINT(EM_DIAGRAM):   end;
278252    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
278253    +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
278254    +      GRP_RFMstat3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 1;
278255    +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
278256    +   end;
MPRINT(EM_DIAGRAM):   end;
278257    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
278258    +      GRP_RFMstat2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = -1;
278259    +      GRP_RFMstat3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = -1;
278260    +      GRP_RFMstat4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = -1;
278261    +   end;
MPRINT(EM_DIAGRAM):   end;
278262    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
278263    +      GRP_RFMstat2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 1;
278264    +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
278265    +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
278266    +   end;
MPRINT(EM_DIAGRAM):   end;
278267    +   else do;
MPRINT(EM_DIAGRAM):   else do;
278268    +      GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
278269    +      GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
278270    +      GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
278271    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
278272    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
278273    +   end;
MPRINT(EM_DIAGRAM):   end;
278274    +end;
MPRINT(EM_DIAGRAM):   end;
278275    +
278276    +*** Generate dummy variables for GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RMntFrq ;
278277    +drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
278278    +if missing( GRP_RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RMntFrq ) then do;
278279    +   GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
278280    +   GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
278281    +   GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
278282    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
278283    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
278284    +end;
MPRINT(EM_DIAGRAM):   end;
278285    +else do;
MPRINT(EM_DIAGRAM):   else do;
278286    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
278287    +   _dm12 = put( GRP_RMntFrq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RMntFrq , BEST12. );
278288    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
278289    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
278290    +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
278291    +      GRP_RMntFrq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 1;
278292    +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
278293    +   end;
MPRINT(EM_DIAGRAM):   end;
278294    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
278295    +      GRP_RMntFrq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = -1;
278296    +      GRP_RMntFrq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = -1;
278297    +      GRP_RMntFrq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = -1;
278298    +   end;
MPRINT(EM_DIAGRAM):   end;
278299    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
278300    +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
278301    +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
278302    +      GRP_RMntFrq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 1;
278303    +   end;
MPRINT(EM_DIAGRAM):   end;
278304    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
278305    +      GRP_RMntFrq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 1;
278306    +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
278307    +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
278308    +   end;
MPRINT(EM_DIAGRAM):   end;
278309    +   else do;
MPRINT(EM_DIAGRAM):   else do;
278310    +      GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
278311    +      GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
278312    +      GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
278313    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
278314    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
278315    +   end;
MPRINT(EM_DIAGRAM):   end;
278316    +end;
MPRINT(EM_DIAGRAM):   end;
278317    +
278318    +*** Generate dummy variables for GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Recency ;
278319    +drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
278320    +if missing( GRP_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Recency ) then do;
278321    +   GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
278322    +   GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
278323    +   GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
278324    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
278325    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
278326    +end;
MPRINT(EM_DIAGRAM):   end;
278327    +else do;
MPRINT(EM_DIAGRAM):   else do;
278328    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
278329    +   _dm12 = put( GRP_Recency , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Recency , BEST12. );
278330    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
278331    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
278332    +      GRP_Recency2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = -1;
278333    +      GRP_Recency3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = -1;
278334    +      GRP_Recency4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = -1;
278335    +   end;
MPRINT(EM_DIAGRAM):   end;
278336    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
278337    +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
278338    +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
278339    +      GRP_Recency4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 1;
278340    +   end;
MPRINT(EM_DIAGRAM):   end;
278341    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
278342    +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
278343    +      GRP_Recency3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 1;
278344    +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
278345    +   end;
MPRINT(EM_DIAGRAM):   end;
278346    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
278347    +      GRP_Recency2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 1;
278348    +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
278349    +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
278350    +   end;
MPRINT(EM_DIAGRAM):   end;
278351    +   else do;
MPRINT(EM_DIAGRAM):   else do;
278352    +      GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
278353    +      GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
278354    +      GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
278355    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
278356    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
278357    +   end;
MPRINT(EM_DIAGRAM):   end;
278358    +end;
MPRINT(EM_DIAGRAM):   end;
278359    +
278360    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
278361    +*** Checking missing input Interval
278362    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
278363    +
278364    +IF NMISS(
278365    +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Year_Birth ) THEN DO;
278366    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
278367    +
278368    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
278369    +END;
MPRINT(EM_DIAGRAM):   END;
278370    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
278371    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
278372    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
278373    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
278374    +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
278375    +END;
MPRINT(EM_DIAGRAM):   END;
278376    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
278377    +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
278378    +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
278379    +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
278380    +END;
MPRINT(EM_DIAGRAM):   END;
278381    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
278382    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
278383    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
278384    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
278385    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
278386    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
278387    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
278388    +   H1x1_1  =      1.0311746583126 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0311746583126 * S_Year_Birth ;
278389    +   H1x1_2  =     1.67119181587557 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.67119181587557 * S_Year_Birth ;
278390    +   H1x1_3  =    -2.17540349820814 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -2.17540349820814 * S_Year_Birth ;
278391    +   H1x1_4  =    -2.56679893298362 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -2.56679893298362 * S_Year_Birth ;
278392    +   H1x1_5  =    -0.60932306642258 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.60932306642258 * S_Year_Birth ;
278393    +   H1x1_1  = H1x1_1  +     0.72534982243417 * GRP_AcceptedCmp52
278394    +          +     0.33166960090157 * GRP_Frq2  +     1.71697127611163 * GRP_Frq3
278395    +          +     0.81002020807326 * GRP_Frq4  +     0.48027973945372 *
278396    +        GRP_Income2  +    -1.09550149543369 * GRP_Income3
278397    +          +    -0.22235642667559 * GRP_Income4  +    -0.00978473434282 *
278398    +        GRP_Mnt2  +    -0.11796310741854 * GRP_Mnt3  +    -0.42227802637743 *
278399    +        GRP_Mnt4  +    -0.60021395849859 * GRP_MntFishProducts2
278400    +          +    -1.92253913417034 * GRP_MntFishProducts3
278401    +          +     0.11236967036572 * GRP_MntFishProducts4
278402    +          +     1.55117451498964 * GRP_MntGoldProds2
278403    +          +    -2.17638819155912 * GRP_MntGoldProds3
278404    +          +     1.12471370225173 * GRP_MntGoldProds4
278405    +          +     0.73773441156548 * GRP_MntMeatProducts2
278406    +          +     2.07738910661633 * GRP_MntMeatProducts3
278407    +          +    -0.64280630173292 * GRP_MntMeatProducts4
278408    +          +     0.77316083192112 * GRP_MntWines2  +     2.15867403144607 *
278409    +        GRP_MntWines3  +     2.47891578910494 * GRP_MntWines4
278410    +          +     0.27137671258246 * GRP_NumCatalogPurchases3
278411    +          +     1.17769351442984 * GRP_NumCatalogPurchases4
278412    +          +     1.22104662684375 * GRP_NumDistPurchases2
278413    +          +      3.4956187335148 * GRP_NumDistPurchases3
278414    +          +     1.44110988448724 * GRP_NumDistPurchases4
278415    +          +    -0.15910531424988 * GRP_NumWebPurchases2
278416    +          +      2.0651216353476 * GRP_NumWebPurchases3
278417    +          +     1.88264340284474 * GRP_NumWebPurchases4
278418    +          +    -0.51356035467324 * GRP_RFMstat2  +    -0.97145618762825 *
278419    +        GRP_RFMstat3  +     1.44865956224608 * GRP_RFMstat4
278420    +          +    -0.02171623156521 * GRP_RMntFrq2  +     2.25871822244977 *
278421    +        GRP_RMntFrq3  +    -0.95854946562766 * GRP_RMntFrq4
278422    +          +    -0.19279939282854 * GRP_Recency2  +    -0.59440462375689 *
278423    +        GRP_Recency3  +     -2.1494171625282 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.72534982243417 * GRP_AcceptedCmp52 + 
0.33166960090157 * GRP_Frq2 + 1.71697127611163 * GRP_Frq3 + 0.81002020807326 * GRP_Frq4 + 
0.48027973945372 * GRP_Income2 + -1.09550149543369 * GRP_Income3 + -0.22235642667559 * 
GRP_Income4 + -0.00978473434282 * GRP_Mnt2 + -0.11796310741854 * GRP_Mnt3 + -0.42227802637743 
* GRP_Mnt4 + -0.60021395849859 * GRP_MntFishProducts2 + -1.92253913417034 * 
GRP_MntFishProducts3 + 0.11236967036572 * GRP_MntFishProducts4 + 1.55117451498964 * 
GRP_MntGoldProds2 + -2.17638819155912 * GRP_MntGoldProds3 + 1.12471370225173 * 
GRP_MntGoldProds4 + 0.73773441156548 * GRP_MntMeatProducts2 + 2.07738910661633 * 
GRP_MntMeatProducts3 + -0.64280630173292 * GRP_MntMeatProducts4 + 0.77316083192112 * 
GRP_MntWines2 + 2.15867403144607 * GRP_MntWines3 + 2.47891578910494 * GRP_MntWines4 + 
0.27137671258246 * GRP_NumCatalogPurchases3 + 1.17769351442984 * GRP_NumCatalogPurchases4 + 
1.22104662684375 * GRP_NumDistPurchases2 + 3.4956187335148 * GRP_NumDistPurchases3 + 
1.44110988448724 * GRP_NumDistPurchases4 + -0.15910531424988 * GRP_NumWebPurchases2 + 
2.0651216353476 * GRP_NumWebPurchases3 + 1.88264340284474 * GRP_NumWebPurchases4 + 
-0.51356035467324 * GRP_RFMstat2 + -0.97145618762825 * GRP_RFMstat3 + 1.44865956224608 * 
GRP_RFMstat4 + -0.02171623156521 * GRP_RMntFrq2 + 2.25871822244977 * GRP_RMntFrq3 + 
-0.95854946562766 * GRP_RMntFrq4 + -0.19279939282854 * GRP_Recency2 + -0.59440462375689 * 
GRP_Recency3 + -2.1494171625282 * GRP_Recency4 ;
278424    +   H1x1_2  = H1x1_2  +    -1.10416749938295 * GRP_AcceptedCmp52
278425    +          +     2.11163264556083 * GRP_Frq2  +    -0.30443521786246 * GRP_Frq3
278426    +          +     2.19401599825923 * GRP_Frq4  +    -0.38326784930815 *
278427    +        GRP_Income2  +    -0.07594895187003 * GRP_Income3
278428    +          +     0.98207007879144 * GRP_Income4  +    -1.92634732130472 *
278429    +        GRP_Mnt2  +     0.64603066612326 * GRP_Mnt3  +     0.62922821521966 *
278430    +        GRP_Mnt4  +     -0.4161962895106 * GRP_MntFishProducts2
278431    +          +     0.69185352158005 * GRP_MntFishProducts3
278432    +          +    -0.03493178084029 * GRP_MntFishProducts4
278433    +          +     1.51100187776315 * GRP_MntGoldProds2
278434    +          +     0.06501688279193 * GRP_MntGoldProds3
278435    +          +    -0.39137744731231 * GRP_MntGoldProds4
278436    +          +    -1.71718837423104 * GRP_MntMeatProducts2
278437    +          +    -2.21915390243757 * GRP_MntMeatProducts3
278438    +          +    -0.56748587906854 * GRP_MntMeatProducts4
278439    +          +     0.62307046604402 * GRP_MntWines2  +     0.47352126999194 *
278440    +        GRP_MntWines3  +      0.2191426110263 * GRP_MntWines4
278441    +          +     1.48903401021544 * GRP_NumCatalogPurchases3
278442    +          +     1.17263293507207 * GRP_NumCatalogPurchases4
278443    +          +     1.51105230747578 * GRP_NumDistPurchases2
278444    +          +     0.77634340058478 * GRP_NumDistPurchases3
278445    +          +    -0.03088809375301 * GRP_NumDistPurchases4
278446    +          +    -0.96601789395554 * GRP_NumWebPurchases2
278447    +          +     0.85040977160083 * GRP_NumWebPurchases3
278448    +          +     2.40308918299781 * GRP_NumWebPurchases4
278449    +          +     0.12282845458333 * GRP_RFMstat2  +    -0.98545061581559 *
278450    +        GRP_RFMstat3  +     1.25668440586033 * GRP_RFMstat4
278451    +          +     0.46767962398497 * GRP_RMntFrq2  +    -0.80481923203399 *
278452    +        GRP_RMntFrq3  +    -1.57392798605208 * GRP_RMntFrq4
278453    +          +     0.85109569398847 * GRP_Recency2  +     0.29456403684394 *
278454    +        GRP_Recency3  +     2.66867988462295 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -1.10416749938295 * GRP_AcceptedCmp52 + 
2.11163264556083 * GRP_Frq2 + -0.30443521786246 * GRP_Frq3 + 2.19401599825923 * GRP_Frq4 + 
-0.38326784930815 * GRP_Income2 + -0.07594895187003 * GRP_Income3 + 0.98207007879144 * 
GRP_Income4 + -1.92634732130472 * GRP_Mnt2 + 0.64603066612326 * GRP_Mnt3 + 0.62922821521966 * 
GRP_Mnt4 + -0.4161962895106 * GRP_MntFishProducts2 + 0.69185352158005 * GRP_MntFishProducts3 + 
-0.03493178084029 * GRP_MntFishProducts4 + 1.51100187776315 * GRP_MntGoldProds2 + 
0.06501688279193 * GRP_MntGoldProds3 + -0.39137744731231 * GRP_MntGoldProds4 + 
-1.71718837423104 * GRP_MntMeatProducts2 + -2.21915390243757 * GRP_MntMeatProducts3 + 
-0.56748587906854 * GRP_MntMeatProducts4 + 0.62307046604402 * GRP_MntWines2 + 0.47352126999194 
* GRP_MntWines3 + 0.2191426110263 * GRP_MntWines4 + 1.48903401021544 * 
GRP_NumCatalogPurchases3 + 1.17263293507207 * GRP_NumCatalogPurchases4 + 1.51105230747578 * 
GRP_NumDistPurchases2 + 0.77634340058478 * GRP_NumDistPurchases3 + -0.03088809375301 * 
GRP_NumDistPurchases4 + -0.96601789395554 * GRP_NumWebPurchases2 + 0.85040977160083 * 
GRP_NumWebPurchases3 + 2.40308918299781 * GRP_NumWebPurchases4 + 0.12282845458333 * 
GRP_RFMstat2 + -0.98545061581559 * GRP_RFMstat3 + 1.25668440586033 * GRP_RFMstat4 + 
0.46767962398497 * GRP_RMntFrq2 + -0.80481923203399 * GRP_RMntFrq3 + -1.57392798605208 * 
GRP_RMntFrq4 + 0.85109569398847 * GRP_Recency2 + 0.29456403684394 * GRP_Recency3 + 
2.66867988462295 * GRP_Recency4 ;
278455    +   H1x1_3  = H1x1_3  +    -3.01879385716191 * GRP_AcceptedCmp52
278456    +          +    -0.13662280353682 * GRP_Frq2  +     2.51930889376721 * GRP_Frq3
278457    +          +     1.76895510412356 * GRP_Frq4  +     -0.5692048618965 *
278458    +        GRP_Income2  +     1.18033291239845 * GRP_Income3
278459    +          +    -0.64679354804447 * GRP_Income4  +    -1.28802047381892 *
278460    +        GRP_Mnt2  +    -2.46267752020506 * GRP_Mnt3  +     0.17133913926957 *
278461    +        GRP_Mnt4  +     1.27283832451603 * GRP_MntFishProducts2
278462    +          +    -0.25133476006515 * GRP_MntFishProducts3
278463    +          +     1.43382012526151 * GRP_MntFishProducts4
278464    +          +      0.6587510367878 * GRP_MntGoldProds2
278465    +          +    -2.29815972364167 * GRP_MntGoldProds3
278466    +          +    -1.17878838514109 * GRP_MntGoldProds4
278467    +          +    -1.45630165039671 * GRP_MntMeatProducts2
278468    +          +    -0.11970663820977 * GRP_MntMeatProducts3
278469    +          +    -0.76333182688138 * GRP_MntMeatProducts4
278470    +          +    -2.52565926826767 * GRP_MntWines2  +     0.00775439635111 *
278471    +        GRP_MntWines3  +    -1.79940008598217 * GRP_MntWines4
278472    +          +    -1.25235345037614 * GRP_NumCatalogPurchases3
278473    +          +    -3.32950963282576 * GRP_NumCatalogPurchases4
278474    +          +    -0.83062872942088 * GRP_NumDistPurchases2
278475    +          +      1.2644984519337 * GRP_NumDistPurchases3
278476    +          +     0.62516412515385 * GRP_NumDistPurchases4
278477    +          +    -0.91932392687811 * GRP_NumWebPurchases2
278478    +          +     0.63985001179952 * GRP_NumWebPurchases3
278479    +          +     0.11379774354586 * GRP_NumWebPurchases4
278480    +          +    -0.83336515651784 * GRP_RFMstat2  +    -0.76327708518862 *
278481    +        GRP_RFMstat3  +    -1.65882578353771 * GRP_RFMstat4
278482    +          +     0.96912805482142 * GRP_RMntFrq2  +     0.89830852536378 *
278483    +        GRP_RMntFrq3  +    -0.80853907149434 * GRP_RMntFrq4
278484    +          +    -1.09357609598677 * GRP_Recency2  +    -0.36348291669233 *
278485    +        GRP_Recency3  +    -1.63045870617841 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -3.01879385716191 * GRP_AcceptedCmp52 + 
-0.13662280353682 * GRP_Frq2 + 2.51930889376721 * GRP_Frq3 + 1.76895510412356 * GRP_Frq4 + 
-0.5692048618965 * GRP_Income2 + 1.18033291239845 * GRP_Income3 + -0.64679354804447 * 
GRP_Income4 + -1.28802047381892 * GRP_Mnt2 + -2.46267752020506 * GRP_Mnt3 + 0.17133913926957 * 
GRP_Mnt4 + 1.27283832451603 * GRP_MntFishProducts2 + -0.25133476006515 * GRP_MntFishProducts3 
+ 1.43382012526151 * GRP_MntFishProducts4 + 0.6587510367878 * GRP_MntGoldProds2 + 
-2.29815972364167 * GRP_MntGoldProds3 + -1.17878838514109 * GRP_MntGoldProds4 + 
-1.45630165039671 * GRP_MntMeatProducts2 + -0.11970663820977 * GRP_MntMeatProducts3 + 
-0.76333182688138 * GRP_MntMeatProducts4 + -2.52565926826767 * GRP_MntWines2 + 
0.00775439635111 * GRP_MntWines3 + -1.79940008598217 * GRP_MntWines4 + -1.25235345037614 * 
GRP_NumCatalogPurchases3 + -3.32950963282576 * GRP_NumCatalogPurchases4 + -0.83062872942088 * 
GRP_NumDistPurchases2 + 1.2644984519337 * GRP_NumDistPurchases3 + 0.62516412515385 * 
GRP_NumDistPurchases4 + -0.91932392687811 * GRP_NumWebPurchases2 + 0.63985001179952 * 
GRP_NumWebPurchases3 + 0.11379774354586 * GRP_NumWebPurchases4 + -0.83336515651784 * 
GRP_RFMstat2 + -0.76327708518862 * GRP_RFMstat3 + -1.65882578353771 * GRP_RFMstat4 + 
0.96912805482142 * GRP_RMntFrq2 + 0.89830852536378 * GRP_RMntFrq3 + -0.80853907149434 * 
GRP_RMntFrq4 + -1.09357609598677 * GRP_Recency2 + -0.36348291669233 * GRP_Recency3 + 
-1.63045870617841 * GRP_Recency4 ;
278486    +   H1x1_4  = H1x1_4  +    -0.22003392209515 * GRP_AcceptedCmp52
278487    +          +    -0.37446340795406 * GRP_Frq2  +    -0.00569020240777 * GRP_Frq3
278488    +          +     0.38116150545111 * GRP_Frq4  +    -0.36688806155078 *
278489    +        GRP_Income2  +     -4.2575032053121 * GRP_Income3
278490    +          +     1.51798546961788 * GRP_Income4  +    -0.88579848196414 *
278491    +        GRP_Mnt2  +     1.84159465073955 * GRP_Mnt3  +     0.11670514600746 *
278492    +        GRP_Mnt4  +    -3.46232646407418 * GRP_MntFishProducts2
278493    +          +     0.25005234850524 * GRP_MntFishProducts3
278494    +          +    -0.07970714752313 * GRP_MntFishProducts4
278495    +          +     -0.7495440064059 * GRP_MntGoldProds2
278496    +          +     -0.0659148563739 * GRP_MntGoldProds3
278497    +          +    -1.42445075896946 * GRP_MntGoldProds4
278498    +          +      0.1738975461322 * GRP_MntMeatProducts2
278499    +          +    -2.24799164386156 * GRP_MntMeatProducts3
278500    +          +    -1.67754357341899 * GRP_MntMeatProducts4
278501    +          +    -0.05307351478942 * GRP_MntWines2  +     -2.2168800511889 *
278502    +        GRP_MntWines3  +    -1.48732327222777 * GRP_MntWines4
278503    +          +    -0.36761319556449 * GRP_NumCatalogPurchases3
278504    +          +    -2.89167685306869 * GRP_NumCatalogPurchases4
278505    +          +    -0.48267351716569 * GRP_NumDistPurchases2
278506    +          +     0.93211719554417 * GRP_NumDistPurchases3
278507    +          +      1.1708430486506 * GRP_NumDistPurchases4
278508    +          +     0.03811902892169 * GRP_NumWebPurchases2
278509    +          +    -1.51477371309928 * GRP_NumWebPurchases3
278510    +          +     1.07378297590898 * GRP_NumWebPurchases4
278511    +          +     1.68393431629797 * GRP_RFMstat2  +     1.58685880164611 *
278512    +        GRP_RFMstat3  +     0.80759821340467 * GRP_RFMstat4
278513    +          +     1.66879117439255 * GRP_RMntFrq2  +     0.80834322412036 *
278514    +        GRP_RMntFrq3  +     0.23086766354714 * GRP_RMntFrq4
278515    +          +      1.3218682104263 * GRP_Recency2  +    -1.73155287312103 *
278516    +        GRP_Recency3  +     0.90108611111458 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.22003392209515 * GRP_AcceptedCmp52 + 
-0.37446340795406 * GRP_Frq2 + -0.00569020240777 * GRP_Frq3 + 0.38116150545111 * GRP_Frq4 + 
-0.36688806155078 * GRP_Income2 + -4.2575032053121 * GRP_Income3 + 1.51798546961788 * 
GRP_Income4 + -0.88579848196414 * GRP_Mnt2 + 1.84159465073955 * GRP_Mnt3 + 0.11670514600746 * 
GRP_Mnt4 + -3.46232646407418 * GRP_MntFishProducts2 + 0.25005234850524 * GRP_MntFishProducts3 
+ -0.07970714752313 * GRP_MntFishProducts4 + -0.7495440064059 * GRP_MntGoldProds2 + 
-0.0659148563739 * GRP_MntGoldProds3 + -1.42445075896946 * GRP_MntGoldProds4 + 0.1738975461322 
* GRP_MntMeatProducts2 + -2.24799164386156 * GRP_MntMeatProducts3 + -1.67754357341899 * 
GRP_MntMeatProducts4 + -0.05307351478942 * GRP_MntWines2 + -2.2168800511889 * GRP_MntWines3 + 
-1.48732327222777 * GRP_MntWines4 + -0.36761319556449 * GRP_NumCatalogPurchases3 + 
-2.89167685306869 * GRP_NumCatalogPurchases4 + -0.48267351716569 * GRP_NumDistPurchases2 + 
0.93211719554417 * GRP_NumDistPurchases3 + 1.1708430486506 * GRP_NumDistPurchases4 + 
0.03811902892169 * GRP_NumWebPurchases2 + -1.51477371309928 * GRP_NumWebPurchases3 + 
1.07378297590898 * GRP_NumWebPurchases4 + 1.68393431629797 * GRP_RFMstat2 + 1.58685880164611 * 
GRP_RFMstat3 + 0.80759821340467 * GRP_RFMstat4 + 1.66879117439255 * GRP_RMntFrq2 + 
0.80834322412036 * GRP_RMntFrq3 + 0.23086766354714 * GRP_RMntFrq4 + 1.3218682104263 * 
GRP_Recency2 + -1.73155287312103 * GRP_Recency3 + 0.90108611111458 * GRP_Recency4 ;
278517    +   H1x1_5  = H1x1_5  +    -2.25400715952368 * GRP_AcceptedCmp52
278518    +          +    -0.68951263089678 * GRP_Frq2  +    -1.06579468283295 * GRP_Frq3
278519    +          +    -2.03202371442661 * GRP_Frq4  +      0.1036760802752 *
278520    +        GRP_Income2  +    -0.92046251438792 * GRP_Income3
278521    +          +     1.24075371479112 * GRP_Income4  +    -2.19069916142209 *
278522    +        GRP_Mnt2  +     1.76084360929533 * GRP_Mnt3  +     0.20732134279897 *
278523    +        GRP_Mnt4  +    -1.25213582301524 * GRP_MntFishProducts2
278524    +          +    -1.49559041774587 * GRP_MntFishProducts3
278525    +          +     1.29292270443546 * GRP_MntFishProducts4
278526    +          +     3.28109415592287 * GRP_MntGoldProds2
278527    +          +     0.40523569115651 * GRP_MntGoldProds3
278528    +          +        0.70305704265 * GRP_MntGoldProds4
278529    +          +    -1.85351989681271 * GRP_MntMeatProducts2
278530    +          +    -0.63625311683955 * GRP_MntMeatProducts3
278531    +          +     0.27320544681113 * GRP_MntMeatProducts4
278532    +          +     1.96095600251535 * GRP_MntWines2  +     2.24427494885455 *
278533    +        GRP_MntWines3  +    -0.88569250661863 * GRP_MntWines4
278534    +          +    -0.42794019910524 * GRP_NumCatalogPurchases3
278535    +          +    -2.32852367141603 * GRP_NumCatalogPurchases4
278536    +          +    -1.40970961318877 * GRP_NumDistPurchases2
278537    +          +     -2.5780841761751 * GRP_NumDistPurchases3
278538    +          +    -0.35557998232484 * GRP_NumDistPurchases4
278539    +          +     1.27746944985248 * GRP_NumWebPurchases2
278540    +          +     0.69463977283169 * GRP_NumWebPurchases3
278541    +          +    -0.54397813851169 * GRP_NumWebPurchases4
278542    +          +    -0.31669101358561 * GRP_RFMstat2  +     2.18799717857163 *
278543    +        GRP_RFMstat3  +    -0.42571916720282 * GRP_RFMstat4
278544    +          +     -0.8273646010144 * GRP_RMntFrq2  +     0.34575371088075 *
278545    +        GRP_RMntFrq3  +    -0.85751874647054 * GRP_RMntFrq4
278546    +          +    -1.53759054703623 * GRP_Recency2  +      0.1907268514387 *
278547    +        GRP_Recency3  +    -0.73522914565387 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -2.25400715952368 * GRP_AcceptedCmp52 + 
-0.68951263089678 * GRP_Frq2 + -1.06579468283295 * GRP_Frq3 + -2.03202371442661 * GRP_Frq4 + 
0.1036760802752 * GRP_Income2 + -0.92046251438792 * GRP_Income3 + 1.24075371479112 * 
GRP_Income4 + -2.19069916142209 * GRP_Mnt2 + 1.76084360929533 * GRP_Mnt3 + 0.20732134279897 * 
GRP_Mnt4 + -1.25213582301524 * GRP_MntFishProducts2 + -1.49559041774587 * GRP_MntFishProducts3 
+ 1.29292270443546 * GRP_MntFishProducts4 + 3.28109415592287 * GRP_MntGoldProds2 + 
0.40523569115651 * GRP_MntGoldProds3 + 0.70305704265 * GRP_MntGoldProds4 + -1.85351989681271 * 
GRP_MntMeatProducts2 + -0.63625311683955 * GRP_MntMeatProducts3 + 0.27320544681113 * 
GRP_MntMeatProducts4 + 1.96095600251535 * GRP_MntWines2 + 2.24427494885455 * GRP_MntWines3 + 
-0.88569250661863 * GRP_MntWines4 + -0.42794019910524 * GRP_NumCatalogPurchases3 + 
-2.32852367141603 * GRP_NumCatalogPurchases4 + -1.40970961318877 * GRP_NumDistPurchases2 + 
-2.5780841761751 * GRP_NumDistPurchases3 + -0.35557998232484 * GRP_NumDistPurchases4 + 
1.27746944985248 * GRP_NumWebPurchases2 + 0.69463977283169 * GRP_NumWebPurchases3 + 
-0.54397813851169 * GRP_NumWebPurchases4 + -0.31669101358561 * GRP_RFMstat2 + 2.18799717857163 
* GRP_RFMstat3 + -0.42571916720282 * GRP_RFMstat4 + -0.8273646010144 * GRP_RMntFrq2 + 
0.34575371088075 * GRP_RMntFrq3 + -0.85751874647054 * GRP_RMntFrq4 + -1.53759054703623 * 
GRP_Recency2 + 0.1907268514387 * GRP_Recency3 + -0.73522914565387 * GRP_Recency4 ;
278548    +   H1x1_1  =     0.19335754651259 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.19335754651259 + H1x1_1 ;
278549    +   H1x1_2  =     2.09010164778105 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 2.09010164778105 + H1x1_2 ;
278550    +   H1x1_3  =    -0.06489378657176 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.06489378657176 + H1x1_3 ;
278551    +   H1x1_4  =    -0.14814564965512 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.14814564965512 + H1x1_4 ;
278552    +   H1x1_5  =      1.2298003293092 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 1.2298003293092 + H1x1_5 ;
278553    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
278554    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
278555    +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
278556    +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
278557    +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
278558    +   H1x1_4  = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
278559    +   H1x1_5  = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_5 = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
278560    +END;
MPRINT(EM_DIAGRAM):   END;
278561    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
278562    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
278563    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
278564    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
278565    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
278566    +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
278567    +END;
MPRINT(EM_DIAGRAM):   END;
278568    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
278569    +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
278570    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
278571    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
278572    +   H1x2_1  =    -1.88709734442083 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -1.88709734442083 * S_Year_Birth ;
278573    +   H1x2_2  =     0.39337522313841 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.39337522313841 * S_Year_Birth ;
278574    +   H1x2_3  =    -0.80137600943997 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.80137600943997 * S_Year_Birth ;
278575    +   H1x2_4  =     0.56552045600061 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.56552045600061 * S_Year_Birth ;
278576    +   H1x2_5  =     0.08757939638091 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 0.08757939638091 * S_Year_Birth ;
278577    +   H1x2_1  = H1x2_1  +    -0.80297380803583 * GRP_AcceptedCmp52
278578    +          +     0.77171658129897 * GRP_Frq2  +    -1.90373500999925 * GRP_Frq3
278579    +          +     0.34067508173447 * GRP_Frq4  +    -3.40546398001194 *
278580    +        GRP_Income2  +      2.4308303101124 * GRP_Income3
278581    +          +      1.7371902933386 * GRP_Income4  +    -1.19436336479656 *
278582    +        GRP_Mnt2  +    -0.40996866110225 * GRP_Mnt3  +     1.04801669037568 *
278583    +        GRP_Mnt4  +     1.95500373096914 * GRP_MntFishProducts2
278584    +          +     2.51364109656281 * GRP_MntFishProducts3
278585    +          +    -1.42490007484769 * GRP_MntFishProducts4
278586    +          +    -0.45125943648795 * GRP_MntGoldProds2
278587    +          +     2.47102254724134 * GRP_MntGoldProds3
278588    +          +     -1.9039173262792 * GRP_MntGoldProds4
278589    +          +     0.19349291706995 * GRP_MntMeatProducts2
278590    +          +     1.13475826324844 * GRP_MntMeatProducts3
278591    +          +    -0.33642288502432 * GRP_MntMeatProducts4
278592    +          +     1.11286337512828 * GRP_MntWines2  +    -1.73349392468621 *
278593    +        GRP_MntWines3  +     0.82891272252224 * GRP_MntWines4
278594    +          +     0.15659125827236 * GRP_NumCatalogPurchases3
278595    +          +     0.32817066335176 * GRP_NumCatalogPurchases4
278596    +          +    -0.67313821415044 * GRP_NumDistPurchases2
278597    +          +    -0.96239937857546 * GRP_NumDistPurchases3
278598    +          +     0.32058507897383 * GRP_NumDistPurchases4
278599    +          +     0.02503658374779 * GRP_NumWebPurchases2
278600    +          +    -2.42182777667863 * GRP_NumWebPurchases3
278601    +          +     1.09934791830799 * GRP_NumWebPurchases4
278602    +          +     0.99647285457344 * GRP_RFMstat2  +    -1.81285090299632 *
278603    +        GRP_RFMstat3  +      0.6907946914019 * GRP_RFMstat4
278604    +          +    -0.96741541040827 * GRP_RMntFrq2  +     1.54078374992995 *
278605    +        GRP_RMntFrq3  +     -0.5606172121429 * GRP_RMntFrq4
278606    +          +     1.09972681443966 * GRP_Recency2  +     0.40240053086114 *
278607    +        GRP_Recency3  +     3.54622644138557 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.80297380803583 * GRP_AcceptedCmp52 + 
0.77171658129897 * GRP_Frq2 + -1.90373500999925 * GRP_Frq3 + 0.34067508173447 * GRP_Frq4 + 
-3.40546398001194 * GRP_Income2 + 2.4308303101124 * GRP_Income3 + 1.7371902933386 * 
GRP_Income4 + -1.19436336479656 * GRP_Mnt2 + -0.40996866110225 * GRP_Mnt3 + 1.04801669037568 * 
GRP_Mnt4 + 1.95500373096914 * GRP_MntFishProducts2 + 2.51364109656281 * GRP_MntFishProducts3 + 
-1.42490007484769 * GRP_MntFishProducts4 + -0.45125943648795 * GRP_MntGoldProds2 + 
2.47102254724134 * GRP_MntGoldProds3 + -1.9039173262792 * GRP_MntGoldProds4 + 0.19349291706995 
* GRP_MntMeatProducts2 + 1.13475826324844 * GRP_MntMeatProducts3 + -0.33642288502432 * 
GRP_MntMeatProducts4 + 1.11286337512828 * GRP_MntWines2 + -1.73349392468621 * GRP_MntWines3 + 
0.82891272252224 * GRP_MntWines4 + 0.15659125827236 * GRP_NumCatalogPurchases3 + 
0.32817066335176 * GRP_NumCatalogPurchases4 + -0.67313821415044 * GRP_NumDistPurchases2 + 
-0.96239937857546 * GRP_NumDistPurchases3 + 0.32058507897383 * GRP_NumDistPurchases4 + 
0.02503658374779 * GRP_NumWebPurchases2 + -2.42182777667863 * GRP_NumWebPurchases3 + 
1.09934791830799 * GRP_NumWebPurchases4 + 0.99647285457344 * GRP_RFMstat2 + -1.81285090299632 
* GRP_RFMstat3 + 0.6907946914019 * GRP_RFMstat4 + -0.96741541040827 * GRP_RMntFrq2 + 
1.54078374992995 * GRP_RMntFrq3 + -0.5606172121429 * GRP_RMntFrq4 + 1.09972681443966 * 
GRP_Recency2 + 0.40240053086114 * GRP_Recency3 + 3.54622644138557 * GRP_Recency4 ;
278608    +   H1x2_2  = H1x2_2  +    -0.84257803770334 * GRP_AcceptedCmp52
278609    +          +    -1.76147524199782 * GRP_Frq2  +     0.76968937743693 * GRP_Frq3
278610    +          +     1.10861276861184 * GRP_Frq4  +    -2.23247622323833 *
278611    +        GRP_Income2  +    -0.30655302009971 * GRP_Income3
278612    +          +    -0.67421319601147 * GRP_Income4  +    -0.41833926468843 *
278613    +        GRP_Mnt2  +     0.52496961087688 * GRP_Mnt3  +     2.22224381605808 *
278614    +        GRP_Mnt4  +     1.90603665409631 * GRP_MntFishProducts2
278615    +          +    -0.68769529687639 * GRP_MntFishProducts3
278616    +          +     0.91046416847697 * GRP_MntFishProducts4
278617    +          +     1.93581182421904 * GRP_MntGoldProds2
278618    +          +     0.00795466624941 * GRP_MntGoldProds3
278619    +          +    -0.22854189252742 * GRP_MntGoldProds4
278620    +          +     0.51645804440055 * GRP_MntMeatProducts2
278621    +          +    -0.73677565057958 * GRP_MntMeatProducts3
278622    +          +    -3.38222954402665 * GRP_MntMeatProducts4
278623    +          +    -0.52703533326761 * GRP_MntWines2  +     2.68998648323277 *
278624    +        GRP_MntWines3  +    -1.01553943004578 * GRP_MntWines4
278625    +          +    -0.25257542492254 * GRP_NumCatalogPurchases3
278626    +          +     0.92868654767551 * GRP_NumCatalogPurchases4
278627    +          +    -0.18642581919214 * GRP_NumDistPurchases2
278628    +          +     0.32117397006136 * GRP_NumDistPurchases3
278629    +          +    -0.59059080451748 * GRP_NumDistPurchases4
278630    +          +    -1.05057528699441 * GRP_NumWebPurchases2
278631    +          +    -0.84936431958655 * GRP_NumWebPurchases3
278632    +          +     0.43322339989668 * GRP_NumWebPurchases4
278633    +          +    -0.27462600263662 * GRP_RFMstat2  +    -2.25150384807365 *
278634    +        GRP_RFMstat3  +    -0.00267009939433 * GRP_RFMstat4
278635    +          +     1.27314966261257 * GRP_RMntFrq2  +     0.27127797709217 *
278636    +        GRP_RMntFrq3  +     1.12101959838801 * GRP_RMntFrq4
278637    +          +     0.79686140512362 * GRP_Recency2  +      -3.204314799241 *
278638    +        GRP_Recency3  +    -0.17063922919112 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.84257803770334 * GRP_AcceptedCmp52 + 
-1.76147524199782 * GRP_Frq2 + 0.76968937743693 * GRP_Frq3 + 1.10861276861184 * GRP_Frq4 + 
-2.23247622323833 * GRP_Income2 + -0.30655302009971 * GRP_Income3 + -0.67421319601147 * 
GRP_Income4 + -0.41833926468843 * GRP_Mnt2 + 0.52496961087688 * GRP_Mnt3 + 2.22224381605808 * 
GRP_Mnt4 + 1.90603665409631 * GRP_MntFishProducts2 + -0.68769529687639 * GRP_MntFishProducts3 
+ 0.91046416847697 * GRP_MntFishProducts4 + 1.93581182421904 * GRP_MntGoldProds2 + 
0.00795466624941 * GRP_MntGoldProds3 + -0.22854189252742 * GRP_MntGoldProds4 + 
0.51645804440055 * GRP_MntMeatProducts2 + -0.73677565057958 * GRP_MntMeatProducts3 + 
-3.38222954402665 * GRP_MntMeatProducts4 + -0.52703533326761 * GRP_MntWines2 + 
2.68998648323277 * GRP_MntWines3 + -1.01553943004578 * GRP_MntWines4 + -0.25257542492254 * 
GRP_NumCatalogPurchases3 + 0.92868654767551 * GRP_NumCatalogPurchases4 + -0.18642581919214 * 
GRP_NumDistPurchases2 + 0.32117397006136 * GRP_NumDistPurchases3 + -0.59059080451748 * 
GRP_NumDistPurchases4 + -1.05057528699441 * GRP_NumWebPurchases2 + -0.84936431958655 * 
GRP_NumWebPurchases3 + 0.43322339989668 * GRP_NumWebPurchases4 + -0.27462600263662 * 
GRP_RFMstat2 + -2.25150384807365 * GRP_RFMstat3 + -0.00267009939433 * GRP_RFMstat4 + 
1.27314966261257 * GRP_RMntFrq2 + 0.27127797709217 * GRP_RMntFrq3 + 1.12101959838801 * 
GRP_RMntFrq4 + 0.79686140512362 * GRP_Recency2 + -3.204314799241 * GRP_Recency3 + 
-0.17063922919112 * GRP_Recency4 ;
278639    +   H1x2_3  = H1x2_3  +     0.61950412844712 * GRP_AcceptedCmp52
278640    +          +     0.65265389665714 * GRP_Frq2  +     0.12876759740294 * GRP_Frq3
278641    +          +    -0.38017417695108 * GRP_Frq4  +    -0.54457623826836 *
278642    +        GRP_Income2  +     2.06545795697617 * GRP_Income3
278643    +          +     -0.2725653040132 * GRP_Income4  +     0.59334688450758 *
278644    +        GRP_Mnt2  +    -2.75668429292834 * GRP_Mnt3  +    -0.19086776143213 *
278645    +        GRP_Mnt4  +     -3.7490211951959 * GRP_MntFishProducts2
278646    +          +     -0.2747383185488 * GRP_MntFishProducts3
278647    +          +     0.05699547232616 * GRP_MntFishProducts4
278648    +          +     1.78340082221807 * GRP_MntGoldProds2
278649    +          +    -0.21272258173805 * GRP_MntGoldProds3
278650    +          +    -0.63881612523162 * GRP_MntGoldProds4
278651    +          +     0.35743242018534 * GRP_MntMeatProducts2
278652    +          +     0.39288166088974 * GRP_MntMeatProducts3
278653    +          +     0.68623350973697 * GRP_MntMeatProducts4
278654    +          +    -1.04284335042439 * GRP_MntWines2  +    -0.97636647224011 *
278655    +        GRP_MntWines3  +    -1.75436887389742 * GRP_MntWines4
278656    +          +     0.38349558810511 * GRP_NumCatalogPurchases3
278657    +          +     0.94944817324412 * GRP_NumCatalogPurchases4
278658    +          +     0.87924710032772 * GRP_NumDistPurchases2
278659    +          +     0.54658799433949 * GRP_NumDistPurchases3
278660    +          +     1.85594529989185 * GRP_NumDistPurchases4
278661    +          +    -0.66471569231333 * GRP_NumWebPurchases2
278662    +          +    -0.59461900037355 * GRP_NumWebPurchases3
278663    +          +     0.12806083458682 * GRP_NumWebPurchases4
278664    +          +    -0.75799558259662 * GRP_RFMstat2  +     1.03472328046295 *
278665    +        GRP_RFMstat3  +     0.35460394964665 * GRP_RFMstat4
278666    +          +     2.35757770027854 * GRP_RMntFrq2  +    -1.60760048151685 *
278667    +        GRP_RMntFrq3  +       1.734911990241 * GRP_RMntFrq4
278668    +          +    -0.50983934759213 * GRP_Recency2  +     1.22056684902473 *
278669    +        GRP_Recency3  +    -0.53617918353506 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.61950412844712 * GRP_AcceptedCmp52 + 
0.65265389665714 * GRP_Frq2 + 0.12876759740294 * GRP_Frq3 + -0.38017417695108 * GRP_Frq4 + 
-0.54457623826836 * GRP_Income2 + 2.06545795697617 * GRP_Income3 + -0.2725653040132 * 
GRP_Income4 + 0.59334688450758 * GRP_Mnt2 + -2.75668429292834 * GRP_Mnt3 + -0.19086776143213 * 
GRP_Mnt4 + -3.7490211951959 * GRP_MntFishProducts2 + -0.2747383185488 * GRP_MntFishProducts3 + 
0.05699547232616 * GRP_MntFishProducts4 + 1.78340082221807 * GRP_MntGoldProds2 + 
-0.21272258173805 * GRP_MntGoldProds3 + -0.63881612523162 * GRP_MntGoldProds4 + 
0.35743242018534 * GRP_MntMeatProducts2 + 0.39288166088974 * GRP_MntMeatProducts3 + 
0.68623350973697 * GRP_MntMeatProducts4 + -1.04284335042439 * GRP_MntWines2 + 
-0.97636647224011 * GRP_MntWines3 + -1.75436887389742 * GRP_MntWines4 + 0.38349558810511 * 
GRP_NumCatalogPurchases3 + 0.94944817324412 * GRP_NumCatalogPurchases4 + 0.87924710032772 * 
GRP_NumDistPurchases2 + 0.54658799433949 * GRP_NumDistPurchases3 + 1.85594529989185 * 
GRP_NumDistPurchases4 + -0.66471569231333 * GRP_NumWebPurchases2 + -0.59461900037355 * 
GRP_NumWebPurchases3 + 0.12806083458682 * GRP_NumWebPurchases4 + -0.75799558259662 * 
GRP_RFMstat2 + 1.03472328046295 * GRP_RFMstat3 + 0.35460394964665 * GRP_RFMstat4 + 
2.35757770027854 * GRP_RMntFrq2 + -1.60760048151685 * GRP_RMntFrq3 + 1.734911990241 * 
GRP_RMntFrq4 + -0.50983934759213 * GRP_Recency2 + 1.22056684902473 * GRP_Recency3 + 
-0.53617918353506 * GRP_Recency4 ;
278670    +   H1x2_4  = H1x2_4  +     1.26170976978884 * GRP_AcceptedCmp52
278671    +          +    -0.32711952545891 * GRP_Frq2  +    -1.19397195692697 * GRP_Frq3
278672    +          +    -1.91237681986457 * GRP_Frq4  +    -0.79449068445985 *
278673    +        GRP_Income2  +    -1.22812902448096 * GRP_Income3
278674    +          +     0.34997306488077 * GRP_Income4  +     0.97887573619442 *
278675    +        GRP_Mnt2  +    -0.47207479147139 * GRP_Mnt3  +    -0.72610866749196 *
278676    +        GRP_Mnt4  +    -1.02568945709262 * GRP_MntFishProducts2
278677    +          +    -0.50962348735329 * GRP_MntFishProducts3
278678    +          +    -1.75841654964734 * GRP_MntFishProducts4
278679    +          +     2.14839745385174 * GRP_MntGoldProds2
278680    +          +      2.4716387157729 * GRP_MntGoldProds3
278681    +          +     0.61286996367418 * GRP_MntGoldProds4
278682    +          +     1.45427097683349 * GRP_MntMeatProducts2
278683    +          +    -0.34990206215878 * GRP_MntMeatProducts3
278684    +          +     2.25284175811484 * GRP_MntMeatProducts4
278685    +          +      0.9855268124051 * GRP_MntWines2  +    -0.12203915234087 *
278686    +        GRP_MntWines3  +     0.25102207151836 * GRP_MntWines4
278687    +          +     1.02272173939472 * GRP_NumCatalogPurchases3
278688    +          +    -0.86507841983648 * GRP_NumCatalogPurchases4
278689    +          +    -0.44080685652484 * GRP_NumDistPurchases2
278690    +          +     2.40613428385819 * GRP_NumDistPurchases3
278691    +          +     0.26317801067025 * GRP_NumDistPurchases4
278692    +          +     2.34961138802546 * GRP_NumWebPurchases2
278693    +          +     2.35826990005342 * GRP_NumWebPurchases3
278694    +          +     0.18496434892584 * GRP_NumWebPurchases4
278695    +          +     1.79795147677472 * GRP_RFMstat2  +     0.58420175726653 *
278696    +        GRP_RFMstat3  +    -1.31222644039147 * GRP_RFMstat4
278697    +          +    -0.47605088519028 * GRP_RMntFrq2  +    -1.93444600786423 *
278698    +        GRP_RMntFrq3  +    -1.73270719079454 * GRP_RMntFrq4
278699    +          +    -0.07465628796168 * GRP_Recency2  +     0.39933484299815 *
278700    +        GRP_Recency3  +     1.24718444803263 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 1.26170976978884 * GRP_AcceptedCmp52 + 
-0.32711952545891 * GRP_Frq2 + -1.19397195692697 * GRP_Frq3 + -1.91237681986457 * GRP_Frq4 + 
-0.79449068445985 * GRP_Income2 + -1.22812902448096 * GRP_Income3 + 0.34997306488077 * 
GRP_Income4 + 0.97887573619442 * GRP_Mnt2 + -0.47207479147139 * GRP_Mnt3 + -0.72610866749196 * 
GRP_Mnt4 + -1.02568945709262 * GRP_MntFishProducts2 + -0.50962348735329 * GRP_MntFishProducts3 
+ -1.75841654964734 * GRP_MntFishProducts4 + 2.14839745385174 * GRP_MntGoldProds2 + 
2.4716387157729 * GRP_MntGoldProds3 + 0.61286996367418 * GRP_MntGoldProds4 + 1.45427097683349 
* GRP_MntMeatProducts2 + -0.34990206215878 * GRP_MntMeatProducts3 + 2.25284175811484 * 
GRP_MntMeatProducts4 + 0.9855268124051 * GRP_MntWines2 + -0.12203915234087 * GRP_MntWines3 + 
0.25102207151836 * GRP_MntWines4 + 1.02272173939472 * GRP_NumCatalogPurchases3 + 
-0.86507841983648 * GRP_NumCatalogPurchases4 + -0.44080685652484 * GRP_NumDistPurchases2 + 
2.40613428385819 * GRP_NumDistPurchases3 + 0.26317801067025 * GRP_NumDistPurchases4 + 
2.34961138802546 * GRP_NumWebPurchases2 + 2.35826990005342 * GRP_NumWebPurchases3 + 
0.18496434892584 * GRP_NumWebPurchases4 + 1.79795147677472 * GRP_RFMstat2 + 0.58420175726653 * 
GRP_RFMstat3 + -1.31222644039147 * GRP_RFMstat4 + -0.47605088519028 * GRP_RMntFrq2 + 
-1.93444600786423 * GRP_RMntFrq3 + -1.73270719079454 * GRP_RMntFrq4 + -0.07465628796168 * 
GRP_Recency2 + 0.39933484299815 * GRP_Recency3 + 1.24718444803263 * GRP_Recency4 ;
278701    +   H1x2_5  = H1x2_5  +     0.87459488954875 * GRP_AcceptedCmp52
278702    +          +    -0.84011640362753 * GRP_Frq2  +     0.77937376717729 * GRP_Frq3
278703    +          +    -1.82978666358622 * GRP_Frq4  +    -0.03003575117499 *
278704    +        GRP_Income2  +    -0.09211385255865 * GRP_Income3
278705    +          +    -1.94207051248492 * GRP_Income4  +     0.73641935783417 *
278706    +        GRP_Mnt2  +      -0.495669562808 * GRP_Mnt3  +    -0.04058774225968 *
278707    +        GRP_Mnt4  +     1.81606017533935 * GRP_MntFishProducts2
278708    +          +     -2.3817205567109 * GRP_MntFishProducts3
278709    +          +      1.4356293091772 * GRP_MntFishProducts4
278710    +          +    -1.03209023546079 * GRP_MntGoldProds2
278711    +          +     1.93949728331263 * GRP_MntGoldProds3
278712    +          +     0.44849194130528 * GRP_MntGoldProds4
278713    +          +     1.34973896956794 * GRP_MntMeatProducts2
278714    +          +     1.40989126474294 * GRP_MntMeatProducts3
278715    +          +     0.74435387703611 * GRP_MntMeatProducts4
278716    +          +     0.94293940682329 * GRP_MntWines2  +     0.71988830572011 *
278717    +        GRP_MntWines3  +     0.43603082498929 * GRP_MntWines4
278718    +          +     1.65449574071289 * GRP_NumCatalogPurchases3
278719    +          +    -0.66380394478337 * GRP_NumCatalogPurchases4
278720    +          +    -0.76749528874396 * GRP_NumDistPurchases2
278721    +          +     1.83370965910825 * GRP_NumDistPurchases3
278722    +          +    -0.73709156569506 * GRP_NumDistPurchases4
278723    +          +     0.09215124428658 * GRP_NumWebPurchases2
278724    +          +      1.0403096068891 * GRP_NumWebPurchases3
278725    +          +     0.59317560741224 * GRP_NumWebPurchases4
278726    +          +     1.75844403152209 * GRP_RFMstat2  +     -0.8733964014922 *
278727    +        GRP_RFMstat3  +    -0.76258024821499 * GRP_RFMstat4
278728    +          +    -1.62335267331435 * GRP_RMntFrq2  +     0.16774877520829 *
278729    +        GRP_RMntFrq3  +    -0.59672894733807 * GRP_RMntFrq4
278730    +          +     -0.1207352636629 * GRP_Recency2  +    -3.91419195768202 *
278731    +        GRP_Recency3  +    -1.81688897411428 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.87459488954875 * GRP_AcceptedCmp52 + 
-0.84011640362753 * GRP_Frq2 + 0.77937376717729 * GRP_Frq3 + -1.82978666358622 * GRP_Frq4 + 
-0.03003575117499 * GRP_Income2 + -0.09211385255865 * GRP_Income3 + -1.94207051248492 * 
GRP_Income4 + 0.73641935783417 * GRP_Mnt2 + -0.495669562808 * GRP_Mnt3 + -0.04058774225968 * 
GRP_Mnt4 + 1.81606017533935 * GRP_MntFishProducts2 + -2.3817205567109 * GRP_MntFishProducts3 + 
1.4356293091772 * GRP_MntFishProducts4 + -1.03209023546079 * GRP_MntGoldProds2 + 
1.93949728331263 * GRP_MntGoldProds3 + 0.44849194130528 * GRP_MntGoldProds4 + 1.34973896956794 
* GRP_MntMeatProducts2 + 1.40989126474294 * GRP_MntMeatProducts3 + 0.74435387703611 * 
GRP_MntMeatProducts4 + 0.94293940682329 * GRP_MntWines2 + 0.71988830572011 * GRP_MntWines3 + 
0.43603082498929 * GRP_MntWines4 + 1.65449574071289 * GRP_NumCatalogPurchases3 + 
-0.66380394478337 * GRP_NumCatalogPurchases4 + -0.76749528874396 * GRP_NumDistPurchases2 + 
1.83370965910825 * GRP_NumDistPurchases3 + -0.73709156569506 * GRP_NumDistPurchases4 + 
0.09215124428658 * GRP_NumWebPurchases2 + 1.0403096068891 * GRP_NumWebPurchases3 + 
0.59317560741224 * GRP_NumWebPurchases4 + 1.75844403152209 * GRP_RFMstat2 + -0.8733964014922 * 
GRP_RFMstat3 + -0.76258024821499 * GRP_RFMstat4 + -1.62335267331435 * GRP_RMntFrq2 + 
0.16774877520829 * GRP_RMntFrq3 + -0.59672894733807 * GRP_RMntFrq4 + -0.1207352636629 * 
GRP_Recency2 + -3.91419195768202 * GRP_Recency3 + -1.81688897411428 * GRP_Recency4 ;
278732    +   H1x2_1  =     0.53421261957097 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.53421261957097 + H1x2_1 ;
278733    +   H1x2_2  =     0.61690490910033 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.61690490910033 + H1x2_2 ;
278734    +   H1x2_3  =    -1.82311183459857 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -1.82311183459857 + H1x2_3 ;
278735    +   H1x2_4  =    -0.21816223161936 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.21816223161936 + H1x2_4 ;
278736    +   H1x2_5  =     -0.4592254459549 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.4592254459549 + H1x2_5 ;
278737    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
278738    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
278739    +   H1x2_1  = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
278740    +   H1x2_2  = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_2 = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
278741    +   H1x2_3  = 1.0 / (1.0 + EXP(MIN( - H1x2_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_3 = 1.0 / (1.0 + EXP(MIN( - H1x2_3 , _EXP_BAR)));
278742    +   H1x2_4  = 1.0 / (1.0 + EXP(MIN( - H1x2_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_4 = 1.0 / (1.0 + EXP(MIN( - H1x2_4 , _EXP_BAR)));
278743    +   H1x2_5  = 1.0 / (1.0 + EXP(MIN( - H1x2_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.0 / (1.0 + EXP(MIN( - H1x2_5 , _EXP_BAR)));
278744    +END;
MPRINT(EM_DIAGRAM):   END;
278745    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
278746    +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
278747    +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
278748    +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
278749    +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
278750    +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
278751    +END;
MPRINT(EM_DIAGRAM):   END;
278752    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
278753    +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
278754    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
278755    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
278756    +   H2x1_1  =    -0.10131311732967 * H1x1_1  +     2.09604760546585 * H1x1_2
278757    +          +     0.75964449684316 * H1x1_3  +    -3.05899403391852 * H1x1_4
278758    +          +    -2.64491525760726 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -0.10131311732967 * H1x1_1 + 2.09604760546585 * H1x1_2 + 
0.75964449684316 * H1x1_3 + -3.05899403391852 * H1x1_4 + -2.64491525760726 * H1x1_5 ;
278759    +   H2x1_2  =     2.09816176126174 * H1x1_1  +     -2.7170504295107 * H1x1_2
278760    +          +    -4.28573382707654 * H1x1_3  +     -0.4124455577826 * H1x1_4
278761    +          +    -1.74219234169061 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 2.09816176126174 * H1x1_1 + -2.7170504295107 * H1x1_2 + 
-4.28573382707654 * H1x1_3 + -0.4124455577826 * H1x1_4 + -1.74219234169061 * H1x1_5 ;
278762    +   H2x1_3  =     -0.0908396989213 * H1x1_1  +    -2.13315935484498 * H1x1_2
278763    +          +      -0.041102734605 * H1x1_3  +     0.44906302354183 * H1x1_4
278764    +          +     2.22045400368613 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -0.0908396989213 * H1x1_1 + -2.13315935484498 * H1x1_2 + 
-0.041102734605 * H1x1_3 + 0.44906302354183 * H1x1_4 + 2.22045400368613 * H1x1_5 ;
278765    +   H2x1_4  =    -3.59138952025597 * H1x1_1  +     1.29340469653348 * H1x1_2
278766    +          +       1.689672422487 * H1x1_3  +    -2.31797692991787 * H1x1_4
278767    +          +    -2.53540958111863 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -3.59138952025597 * H1x1_1 + 1.29340469653348 * H1x1_2 + 
1.689672422487 * H1x1_3 + -2.31797692991787 * H1x1_4 + -2.53540958111863 * H1x1_5 ;
278768    +   H2x1_5  =    -1.20648019467275 * H1x1_1  +      1.9669218225267 * H1x1_2
278769    +          +     2.04494536709697 * H1x1_3  +    -2.33648894116384 * H1x1_4
278770    +          +    -1.60853492956388 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -1.20648019467275 * H1x1_1 + 1.9669218225267 * H1x1_2 + 
2.04494536709697 * H1x1_3 + -2.33648894116384 * H1x1_4 + -1.60853492956388 * H1x1_5 ;
278771    +   H2x1_1  = H2x1_1  +    -1.45345171601353 * H1x2_1
278772    +          +    -0.03179259597665 * H1x2_2  +     -2.9887894366399 * H1x2_3
278773    +          +     0.68029332905711 * H1x2_4  +     0.76926185571867 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -1.45345171601353 * H1x2_1 + -0.03179259597665 * 
H1x2_2 + -2.9887894366399 * H1x2_3 + 0.68029332905711 * H1x2_4 + 0.76926185571867 * H1x2_5 ;
278774    +   H2x1_2  = H2x1_2  +    -1.21280301577117 * H1x2_1
278775    +          +      2.9525914680029 * H1x2_2  +    -0.55393861346072 * H1x2_3
278776    +          +     1.77793175958897 * H1x2_4  +     2.51042321881699 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -1.21280301577117 * H1x2_1 + 2.9525914680029 * H1x2_2 
+ -0.55393861346072 * H1x2_3 + 1.77793175958897 * H1x2_4 + 2.51042321881699 * H1x2_5 ;
278777    +   H2x1_3  = H2x1_3  +     1.57047941405239 * H1x2_1
278778    +          +    -1.31134127121564 * H1x2_2  +      2.1322025881706 * H1x2_3
278779    +          +    -0.61230583564273 * H1x2_4  +     0.14627232119209 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + 1.57047941405239 * H1x2_1 + -1.31134127121564 * H1x2_2 
+ 2.1322025881706 * H1x2_3 + -0.61230583564273 * H1x2_4 + 0.14627232119209 * H1x2_5 ;
278780    +   H2x1_4  = H2x1_4  +    -1.29890984989779 * H1x2_1
278781    +          +    -1.37863865683621 * H1x2_2  +    -0.15093392936569 * H1x2_3
278782    +          +     2.15628991822961 * H1x2_4  +    -0.04564203403522 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + -1.29890984989779 * H1x2_1 + -1.37863865683621 * 
H1x2_2 + -0.15093392936569 * H1x2_3 + 2.15628991822961 * H1x2_4 + -0.04564203403522 * H1x2_5 ;
278783    +   H2x1_5  = H2x1_5  +    -1.82286870874677 * H1x2_1
278784    +          +    -1.06116903038863 * H1x2_2  +    -1.77472301413445 * H1x2_3
278785    +          +     0.17320934910404 * H1x2_4  +    -0.96172965375973 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + -1.82286870874677 * H1x2_1 + -1.06116903038863 * 
H1x2_2 + -1.77472301413445 * H1x2_3 + 0.17320934910404 * H1x2_4 + -0.96172965375973 * H1x2_5 ;
278786    +   H2x1_1  =     0.61260716175728 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 0.61260716175728 + H2x1_1 ;
278787    +   H2x1_2  =    -1.78716565467594 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -1.78716565467594 + H2x1_2 ;
278788    +   H2x1_3  =    -0.88082814085488 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -0.88082814085488 + H2x1_3 ;
278789    +   H2x1_4  =     0.33869525080862 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 0.33869525080862 + H2x1_4 ;
278790    +   H2x1_5  =      2.0506883431914 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = 2.0506883431914 + H2x1_5 ;
278791    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
278792    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
278793    +   H2x1_1  = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
278794    +   H2x1_2  = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
278795    +   H2x1_3  = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
278796    +   H2x1_4  = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
278797    +   H2x1_5  = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_5 = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
278798    +END;
MPRINT(EM_DIAGRAM):   END;
278799    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
278800    +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
278801    +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
278802    +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
278803    +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
278804    +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
278805    +END;
MPRINT(EM_DIAGRAM):   END;
278806    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
278807    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
278808    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
278809    +
278810    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
278811    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
278812    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
278813    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
278814    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
278815    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
278816    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
278817    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
278818    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
278819    +end;
MPRINT(EM_DIAGRAM):   end;
278820    +else do;
MPRINT(EM_DIAGRAM):   else do;
278821    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
278822    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
278823    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
278824    +   end;
MPRINT(EM_DIAGRAM):   end;
278825    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
278826    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
278827    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
278828    +   end;
MPRINT(EM_DIAGRAM):   end;
278829    +   else do;
MPRINT(EM_DIAGRAM):   else do;
278830    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
278831    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
278832    +   end;
MPRINT(EM_DIAGRAM):   end;
278833    +end;
MPRINT(EM_DIAGRAM):   end;
278834    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
278835    +   P_DepVar1  =     5.44508928953974 * H2x1_1  +    -7.80342156600058 * H2x1_2
278836    +          +    -4.34349012782915 * H2x1_3  +     6.80870509597821 * H2x1_4
278837    +          +     5.61199728345116 * H2x1_5 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 5.44508928953974 * H2x1_1 + -7.80342156600058 * H2x1_2 + 
-4.34349012782915 * H2x1_3 + 6.80870509597821 * H2x1_4 + 5.61199728345116 * H2x1_5 ;
278838    +   P_DepVar1  =    -3.84280322129048 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.84280322129048 + P_DepVar1 ;
278839    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
278840    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
278841    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
278842    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
278843    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
278844    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
278845    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
278846    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
278847    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
278848    +END;
MPRINT(EM_DIAGRAM):   END;
278849    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
278850    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
278851    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
278852    +END;
MPRINT(EM_DIAGRAM):   END;
278853    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
278854    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
278855    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
278856    +END;
MPRINT(EM_DIAGRAM):   END;
278857    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
278858    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
278859    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
278860    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
278861    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
278862    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
278863    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
278864    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
278865    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
278866    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
278867    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
278868    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
278869    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
278870    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
278871    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
278872    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
278873    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
278874    +END;
MPRINT(EM_DIAGRAM):   END;
278875    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
278876    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
278877    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
278878    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
278879    +* Renaming variables for AutoNeural20;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural20;
278880    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
278881    +* Renaming Posterior variables for AutoNeural20;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural20;
278882    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
278883    +drop AutoNeural20_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural20_P_DepVar1;
278884    +AutoNeural20_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural20_P_DepVar1 = P_DepVar1;
278885    +drop AutoNeural20_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural20_P_DepVar0;
278886    +AutoNeural20_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural20_P_DepVar0 = P_DepVar0;
278887    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
278888    +* Renaming Into variables for AutoNeural20;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for AutoNeural20;
278889    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
278890    +length AutoNeural20_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length AutoNeural20_I_DepVar $32;
278891    +drop AutoNeural20_I_DepVar;
MPRINT(EM_DIAGRAM):   drop AutoNeural20_I_DepVar;
278892    +AutoNeural20_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   AutoNeural20_I_DepVar = I_DepVar;
278893    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
278894    +* Renaming _WARN_ variable for AutoNeural20;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural20;
278895    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
278896    +length AutoNeural20_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural20_WARN_ $4;
278897    +drop AutoNeural20_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural20_WARN_;
278898    +AutoNeural20_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural20_WARN_ = _WARN_;
278899    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
278900    +* Ensmbl50: Scoring Code of model 5 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl50: Scoring Code of model 5 of 7;
278901    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
278902    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
278903    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
278904    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
278905    +* NODE: AutoNeural26;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural26;
278906    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
278907    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
278908    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
278909    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
278910    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
278911    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
278912    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
278913    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
278914    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
278915    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
278916    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
278917    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
278918    +LENGTH _WARN_ $4
278919    +      F_DepVar  $ 12
278920    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
278921    +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
278922    +
278923    +      label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
MPRINT(EM_DIAGRAM):   label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
278924    +
278925    +      label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
278926    +
278927    +      label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
278928    +
278929    +      label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
278930    +
278931    +      label GRP_Income2 = 'Dummy: GRP_Income=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Income2 = 'Dummy: GRP_Income=2' ;
278932    +
278933    +      label GRP_Income3 = 'Dummy: GRP_Income=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Income3 = 'Dummy: GRP_Income=3' ;
278934    +
278935    +      label GRP_Income4 = 'Dummy: GRP_Income=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Income4 = 'Dummy: GRP_Income=4' ;
278936    +
278937    +      label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
278938    +
278939    +      label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
278940    +
278941    +      label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
278942    +
278943    +      label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
278944    +
278945    +      label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
278946    +
278947    +      label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
278948    +
278949    +      label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
278950    +
278951    +      label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
278952    +
278953    +      label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
278954    +
278955    +      label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
278956    +
278957    +      label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
278958    +
278959    +      label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
278960    +
278961    +      label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
278962    +
278963    +      label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
278964    +
278965    +      label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
278966    +
278967    +      label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
278968    +
278969    +      label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
278970    +
278971    +      label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
278972    +
278973    +      label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
278974    +
278975    +      label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
278976    +
278977    +      label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
278978    +
278979    +      label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
278980    +
278981    +      label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
278982    +
278983    +      label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
278984    +
278985    +      label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
278986    +
278987    +      label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
278988    +
278989    +      label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
278990    +
278991    +      label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
278992    +
278993    +      label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
278994    +
278995    +      label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
278996    +
278997    +      label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
278998    +
278999    +      label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
279000    +
279001    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
279002    +
279003    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
279004    +
279005    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
279006    +
279007    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
279008    +
279009    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
279010    +
279011    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
279012    +
279013    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
279014    +
279015    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
279016    +
279017    +*** Generate dummy variables for GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmp5 ;
279018    +drop GRP_AcceptedCmp52 ;
MPRINT(EM_DIAGRAM):   drop GRP_AcceptedCmp52 ;
279019    +if missing( GRP_AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmp5 ) then do;
279020    +   GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
279021    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
279022    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
279023    +end;
MPRINT(EM_DIAGRAM):   end;
279024    +else do;
MPRINT(EM_DIAGRAM):   else do;
279025    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
279026    +   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
279027    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
279028    +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
279029    +      GRP_AcceptedCmp52 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = 1;
279030    +   end;
MPRINT(EM_DIAGRAM):   end;
279031    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
279032    +      GRP_AcceptedCmp52 = -1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = -1;
279033    +   end;
MPRINT(EM_DIAGRAM):   end;
279034    +   else do;
MPRINT(EM_DIAGRAM):   else do;
279035    +      GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
279036    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
279037    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
279038    +   end;
MPRINT(EM_DIAGRAM):   end;
279039    +end;
MPRINT(EM_DIAGRAM):   end;
279040    +
279041    +*** Generate dummy variables for GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Frq ;
279042    +drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
279043    +if missing( GRP_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Frq ) then do;
279044    +   GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
279045    +   GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
279046    +   GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
279047    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
279048    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
279049    +end;
MPRINT(EM_DIAGRAM):   end;
279050    +else do;
MPRINT(EM_DIAGRAM):   else do;
279051    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
279052    +   _dm12 = put( GRP_Frq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Frq , BEST12. );
279053    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
279054    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
279055    +      GRP_Frq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = -1;
279056    +      GRP_Frq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = -1;
279057    +      GRP_Frq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = -1;
279058    +   end;
MPRINT(EM_DIAGRAM):   end;
279059    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
279060    +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
279061    +      GRP_Frq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 1;
279062    +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
279063    +   end;
MPRINT(EM_DIAGRAM):   end;
279064    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
279065    +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
279066    +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
279067    +      GRP_Frq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 1;
279068    +   end;
MPRINT(EM_DIAGRAM):   end;
279069    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
279070    +      GRP_Frq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 1;
279071    +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
279072    +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
279073    +   end;
MPRINT(EM_DIAGRAM):   end;
279074    +   else do;
MPRINT(EM_DIAGRAM):   else do;
279075    +      GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
279076    +      GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
279077    +      GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
279078    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
279079    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
279080    +   end;
MPRINT(EM_DIAGRAM):   end;
279081    +end;
MPRINT(EM_DIAGRAM):   end;
279082    +
279083    +*** Generate dummy variables for GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Income ;
279084    +drop GRP_Income2 GRP_Income3 GRP_Income4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Income2 GRP_Income3 GRP_Income4 ;
279085    +if missing( GRP_Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Income ) then do;
279086    +   GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
279087    +   GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
279088    +   GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
279089    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
279090    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
279091    +end;
MPRINT(EM_DIAGRAM):   end;
279092    +else do;
MPRINT(EM_DIAGRAM):   else do;
279093    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
279094    +   _dm12 = put( GRP_Income , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Income , BEST12. );
279095    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
279096    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
279097    +      GRP_Income2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = -1;
279098    +      GRP_Income3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = -1;
279099    +      GRP_Income4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = -1;
279100    +   end;
MPRINT(EM_DIAGRAM):   end;
279101    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
279102    +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
279103    +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
279104    +      GRP_Income4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 1;
279105    +   end;
MPRINT(EM_DIAGRAM):   end;
279106    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
279107    +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
279108    +      GRP_Income3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 1;
279109    +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
279110    +   end;
MPRINT(EM_DIAGRAM):   end;
279111    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
279112    +      GRP_Income2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 1;
279113    +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
279114    +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
279115    +   end;
MPRINT(EM_DIAGRAM):   end;
279116    +   else do;
MPRINT(EM_DIAGRAM):   else do;
279117    +      GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
279118    +      GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
279119    +      GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
279120    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
279121    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
279122    +   end;
MPRINT(EM_DIAGRAM):   end;
279123    +end;
MPRINT(EM_DIAGRAM):   end;
279124    +
279125    +*** Generate dummy variables for GRP_Mnt ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Mnt ;
279126    +drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
279127    +if missing( GRP_Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Mnt ) then do;
279128    +   GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
279129    +   GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
279130    +   GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
279131    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
279132    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
279133    +end;
MPRINT(EM_DIAGRAM):   end;
279134    +else do;
MPRINT(EM_DIAGRAM):   else do;
279135    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
279136    +   _dm12 = put( GRP_Mnt , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Mnt , BEST12. );
279137    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
279138    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
279139    +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
279140    +      GRP_Mnt3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 1;
279141    +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
279142    +   end;
MPRINT(EM_DIAGRAM):   end;
279143    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
279144    +      GRP_Mnt2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = -1;
279145    +      GRP_Mnt3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = -1;
279146    +      GRP_Mnt4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = -1;
279147    +   end;
MPRINT(EM_DIAGRAM):   end;
279148    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
279149    +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
279150    +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
279151    +      GRP_Mnt4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 1;
279152    +   end;
MPRINT(EM_DIAGRAM):   end;
279153    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
279154    +      GRP_Mnt2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 1;
279155    +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
279156    +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
279157    +   end;
MPRINT(EM_DIAGRAM):   end;
279158    +   else do;
MPRINT(EM_DIAGRAM):   else do;
279159    +      GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
279160    +      GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
279161    +      GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
279162    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
279163    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
279164    +   end;
MPRINT(EM_DIAGRAM):   end;
279165    +end;
MPRINT(EM_DIAGRAM):   end;
279166    +
279167    +*** Generate dummy variables for GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntFishProducts ;
279168    +drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
279169    +if missing( GRP_MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntFishProducts ) then do;
279170    +   GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
279171    +   GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
279172    +   GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
279173    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
279174    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
279175    +end;
MPRINT(EM_DIAGRAM):   end;
279176    +else do;
MPRINT(EM_DIAGRAM):   else do;
279177    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
279178    +   _dm12 = put( GRP_MntFishProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntFishProducts , BEST12. );
279179    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
279180    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
279181    +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
279182    +      GRP_MntFishProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 1;
279183    +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
279184    +   end;
MPRINT(EM_DIAGRAM):   end;
279185    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
279186    +      GRP_MntFishProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = -1;
279187    +      GRP_MntFishProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = -1;
279188    +      GRP_MntFishProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = -1;
279189    +   end;
MPRINT(EM_DIAGRAM):   end;
279190    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
279191    +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
279192    +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
279193    +      GRP_MntFishProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 1;
279194    +   end;
MPRINT(EM_DIAGRAM):   end;
279195    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
279196    +      GRP_MntFishProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 1;
279197    +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
279198    +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
279199    +   end;
MPRINT(EM_DIAGRAM):   end;
279200    +   else do;
MPRINT(EM_DIAGRAM):   else do;
279201    +      GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
279202    +      GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
279203    +      GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
279204    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
279205    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
279206    +   end;
MPRINT(EM_DIAGRAM):   end;
279207    +end;
MPRINT(EM_DIAGRAM):   end;
279208    +
279209    +*** Generate dummy variables for GRP_MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntGoldProds ;
279210    +drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
279211    +if missing( GRP_MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntGoldProds ) then do;
279212    +   GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
279213    +   GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
279214    +   GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
279215    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
279216    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
279217    +end;
MPRINT(EM_DIAGRAM):   end;
279218    +else do;
MPRINT(EM_DIAGRAM):   else do;
279219    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
279220    +   _dm12 = put( GRP_MntGoldProds , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntGoldProds , BEST12. );
279221    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
279222    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
279223    +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
279224    +      GRP_MntGoldProds3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 1;
279225    +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
279226    +   end;
MPRINT(EM_DIAGRAM):   end;
279227    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
279228    +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
279229    +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
279230    +      GRP_MntGoldProds4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 1;
279231    +   end;
MPRINT(EM_DIAGRAM):   end;
279232    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
279233    +      GRP_MntGoldProds2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = -1;
279234    +      GRP_MntGoldProds3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = -1;
279235    +      GRP_MntGoldProds4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = -1;
279236    +   end;
MPRINT(EM_DIAGRAM):   end;
279237    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
279238    +      GRP_MntGoldProds2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 1;
279239    +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
279240    +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
279241    +   end;
MPRINT(EM_DIAGRAM):   end;
279242    +   else do;
MPRINT(EM_DIAGRAM):   else do;
279243    +      GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
279244    +      GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
279245    +      GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
279246    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
279247    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
279248    +   end;
MPRINT(EM_DIAGRAM):   end;
279249    +end;
MPRINT(EM_DIAGRAM):   end;
279250    +
279251    +*** Generate dummy variables for GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntMeatProducts ;
279252    +drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
279253    +if missing( GRP_MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntMeatProducts ) then do;
279254    +   GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
279255    +   GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
279256    +   GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
279257    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
279258    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
279259    +end;
MPRINT(EM_DIAGRAM):   end;
279260    +else do;
MPRINT(EM_DIAGRAM):   else do;
279261    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
279262    +   _dm12 = put( GRP_MntMeatProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntMeatProducts , BEST12. );
279263    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
279264    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
279265    +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
279266    +      GRP_MntMeatProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 1;
279267    +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
279268    +   end;
MPRINT(EM_DIAGRAM):   end;
279269    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
279270    +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
279271    +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
279272    +      GRP_MntMeatProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 1;
279273    +   end;
MPRINT(EM_DIAGRAM):   end;
279274    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
279275    +      GRP_MntMeatProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = -1;
279276    +      GRP_MntMeatProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = -1;
279277    +      GRP_MntMeatProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = -1;
279278    +   end;
MPRINT(EM_DIAGRAM):   end;
279279    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
279280    +      GRP_MntMeatProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 1;
279281    +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
279282    +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
279283    +   end;
MPRINT(EM_DIAGRAM):   end;
279284    +   else do;
MPRINT(EM_DIAGRAM):   else do;
279285    +      GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
279286    +      GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
279287    +      GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
279288    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
279289    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
279290    +   end;
MPRINT(EM_DIAGRAM):   end;
279291    +end;
MPRINT(EM_DIAGRAM):   end;
279292    +
279293    +*** Generate dummy variables for GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntWines ;
279294    +drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
279295    +if missing( GRP_MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntWines ) then do;
279296    +   GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
279297    +   GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
279298    +   GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
279299    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
279300    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
279301    +end;
MPRINT(EM_DIAGRAM):   end;
279302    +else do;
MPRINT(EM_DIAGRAM):   else do;
279303    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
279304    +   _dm12 = put( GRP_MntWines , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntWines , BEST12. );
279305    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
279306    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
279307    +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
279308    +      GRP_MntWines3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 1;
279309    +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
279310    +   end;
MPRINT(EM_DIAGRAM):   end;
279311    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
279312    +      GRP_MntWines2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = -1;
279313    +      GRP_MntWines3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = -1;
279314    +      GRP_MntWines4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = -1;
279315    +   end;
MPRINT(EM_DIAGRAM):   end;
279316    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
279317    +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
279318    +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
279319    +      GRP_MntWines4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 1;
279320    +   end;
MPRINT(EM_DIAGRAM):   end;
279321    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
279322    +      GRP_MntWines2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 1;
279323    +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
279324    +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
279325    +   end;
MPRINT(EM_DIAGRAM):   end;
279326    +   else do;
MPRINT(EM_DIAGRAM):   else do;
279327    +      GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
279328    +      GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
279329    +      GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
279330    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
279331    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
279332    +   end;
MPRINT(EM_DIAGRAM):   end;
279333    +end;
MPRINT(EM_DIAGRAM):   end;
279334    +
279335    +*** Generate dummy variables for GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumCatalogPurchases ;
279336    +drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
279337    +if missing( GRP_NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumCatalogPurchases ) then do;
279338    +   GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
279339    +   GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
279340    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
279341    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
279342    +end;
MPRINT(EM_DIAGRAM):   end;
279343    +else do;
MPRINT(EM_DIAGRAM):   else do;
279344    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
279345    +   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
279346    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
279347    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
279348    +      GRP_NumCatalogPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 1;
279349    +      GRP_NumCatalogPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 0;
279350    +   end;
MPRINT(EM_DIAGRAM):   end;
279351    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
279352    +      GRP_NumCatalogPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = -1;
279353    +      GRP_NumCatalogPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = -1;
279354    +   end;
MPRINT(EM_DIAGRAM):   end;
279355    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
279356    +      GRP_NumCatalogPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 0;
279357    +      GRP_NumCatalogPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 1;
279358    +   end;
MPRINT(EM_DIAGRAM):   end;
279359    +   else do;
MPRINT(EM_DIAGRAM):   else do;
279360    +      GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
279361    +      GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
279362    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
279363    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
279364    +   end;
MPRINT(EM_DIAGRAM):   end;
279365    +end;
MPRINT(EM_DIAGRAM):   end;
279366    +
279367    +*** Generate dummy variables for GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumDistPurchases ;
279368    +drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
279369    +if missing( GRP_NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumDistPurchases ) then do;
279370    +   GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
279371    +   GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
279372    +   GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
279373    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
279374    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
279375    +end;
MPRINT(EM_DIAGRAM):   end;
279376    +else do;
MPRINT(EM_DIAGRAM):   else do;
279377    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
279378    +   _dm12 = put( GRP_NumDistPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumDistPurchases , BEST12. );
279379    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
279380    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
279381    +      GRP_NumDistPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = -1;
279382    +      GRP_NumDistPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = -1;
279383    +      GRP_NumDistPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = -1;
279384    +   end;
MPRINT(EM_DIAGRAM):   end;
279385    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
279386    +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
279387    +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
279388    +      GRP_NumDistPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 1;
279389    +   end;
MPRINT(EM_DIAGRAM):   end;
279390    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
279391    +      GRP_NumDistPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 1;
279392    +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
279393    +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
279394    +   end;
MPRINT(EM_DIAGRAM):   end;
279395    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
279396    +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
279397    +      GRP_NumDistPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 1;
279398    +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
279399    +   end;
MPRINT(EM_DIAGRAM):   end;
279400    +   else do;
MPRINT(EM_DIAGRAM):   else do;
279401    +      GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
279402    +      GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
279403    +      GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
279404    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
279405    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
279406    +   end;
MPRINT(EM_DIAGRAM):   end;
279407    +end;
MPRINT(EM_DIAGRAM):   end;
279408    +
279409    +*** Generate dummy variables for GRP_NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumWebPurchases ;
279410    +drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
279411    +if missing( GRP_NumWebPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumWebPurchases ) then do;
279412    +   GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
279413    +   GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
279414    +   GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
279415    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
279416    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
279417    +end;
MPRINT(EM_DIAGRAM):   end;
279418    +else do;
MPRINT(EM_DIAGRAM):   else do;
279419    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
279420    +   _dm12 = put( GRP_NumWebPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumWebPurchases , BEST12. );
279421    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
279422    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
279423    +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
279424    +      GRP_NumWebPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 1;
279425    +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
279426    +   end;
MPRINT(EM_DIAGRAM):   end;
279427    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
279428    +      GRP_NumWebPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = -1;
279429    +      GRP_NumWebPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = -1;
279430    +      GRP_NumWebPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = -1;
279431    +   end;
MPRINT(EM_DIAGRAM):   end;
279432    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
279433    +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
279434    +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
279435    +      GRP_NumWebPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 1;
279436    +   end;
MPRINT(EM_DIAGRAM):   end;
279437    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
279438    +      GRP_NumWebPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 1;
279439    +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
279440    +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
279441    +   end;
MPRINT(EM_DIAGRAM):   end;
279442    +   else do;
MPRINT(EM_DIAGRAM):   else do;
279443    +      GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
279444    +      GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
279445    +      GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
279446    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
279447    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
279448    +   end;
MPRINT(EM_DIAGRAM):   end;
279449    +end;
MPRINT(EM_DIAGRAM):   end;
279450    +
279451    +*** Generate dummy variables for GRP_RFMstat ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RFMstat ;
279452    +drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
279453    +if missing( GRP_RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RFMstat ) then do;
279454    +   GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
279455    +   GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
279456    +   GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
279457    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
279458    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
279459    +end;
MPRINT(EM_DIAGRAM):   end;
279460    +else do;
MPRINT(EM_DIAGRAM):   else do;
279461    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
279462    +   _dm12 = put( GRP_RFMstat , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RFMstat , BEST12. );
279463    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
279464    +   if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
279465    +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
279466    +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
279467    +      GRP_RFMstat4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 1;
279468    +   end;
MPRINT(EM_DIAGRAM):   end;
279469    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
279470    +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
279471    +      GRP_RFMstat3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 1;
279472    +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
279473    +   end;
MPRINT(EM_DIAGRAM):   end;
279474    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
279475    +      GRP_RFMstat2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = -1;
279476    +      GRP_RFMstat3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = -1;
279477    +      GRP_RFMstat4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = -1;
279478    +   end;
MPRINT(EM_DIAGRAM):   end;
279479    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
279480    +      GRP_RFMstat2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 1;
279481    +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
279482    +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
279483    +   end;
MPRINT(EM_DIAGRAM):   end;
279484    +   else do;
MPRINT(EM_DIAGRAM):   else do;
279485    +      GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
279486    +      GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
279487    +      GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
279488    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
279489    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
279490    +   end;
MPRINT(EM_DIAGRAM):   end;
279491    +end;
MPRINT(EM_DIAGRAM):   end;
279492    +
279493    +*** Generate dummy variables for GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RMntFrq ;
279494    +drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
279495    +if missing( GRP_RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RMntFrq ) then do;
279496    +   GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
279497    +   GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
279498    +   GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
279499    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
279500    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
279501    +end;
MPRINT(EM_DIAGRAM):   end;
279502    +else do;
MPRINT(EM_DIAGRAM):   else do;
279503    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
279504    +   _dm12 = put( GRP_RMntFrq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RMntFrq , BEST12. );
279505    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
279506    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
279507    +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
279508    +      GRP_RMntFrq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 1;
279509    +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
279510    +   end;
MPRINT(EM_DIAGRAM):   end;
279511    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
279512    +      GRP_RMntFrq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = -1;
279513    +      GRP_RMntFrq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = -1;
279514    +      GRP_RMntFrq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = -1;
279515    +   end;
MPRINT(EM_DIAGRAM):   end;
279516    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
279517    +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
279518    +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
279519    +      GRP_RMntFrq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 1;
279520    +   end;
MPRINT(EM_DIAGRAM):   end;
279521    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
279522    +      GRP_RMntFrq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 1;
279523    +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
279524    +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
279525    +   end;
MPRINT(EM_DIAGRAM):   end;
279526    +   else do;
MPRINT(EM_DIAGRAM):   else do;
279527    +      GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
279528    +      GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
279529    +      GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
279530    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
279531    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
279532    +   end;
MPRINT(EM_DIAGRAM):   end;
279533    +end;
MPRINT(EM_DIAGRAM):   end;
279534    +
279535    +*** Generate dummy variables for GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Recency ;
279536    +drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
279537    +if missing( GRP_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Recency ) then do;
279538    +   GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
279539    +   GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
279540    +   GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
279541    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
279542    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
279543    +end;
MPRINT(EM_DIAGRAM):   end;
279544    +else do;
MPRINT(EM_DIAGRAM):   else do;
279545    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
279546    +   _dm12 = put( GRP_Recency , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Recency , BEST12. );
279547    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
279548    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
279549    +      GRP_Recency2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = -1;
279550    +      GRP_Recency3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = -1;
279551    +      GRP_Recency4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = -1;
279552    +   end;
MPRINT(EM_DIAGRAM):   end;
279553    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
279554    +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
279555    +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
279556    +      GRP_Recency4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 1;
279557    +   end;
MPRINT(EM_DIAGRAM):   end;
279558    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
279559    +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
279560    +      GRP_Recency3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 1;
279561    +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
279562    +   end;
MPRINT(EM_DIAGRAM):   end;
279563    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
279564    +      GRP_Recency2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 1;
279565    +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
279566    +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
279567    +   end;
MPRINT(EM_DIAGRAM):   end;
279568    +   else do;
MPRINT(EM_DIAGRAM):   else do;
279569    +      GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
279570    +      GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
279571    +      GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
279572    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
279573    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
279574    +   end;
MPRINT(EM_DIAGRAM):   end;
279575    +end;
MPRINT(EM_DIAGRAM):   end;
279576    +
279577    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
279578    +*** Checking missing input Interval
279579    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
279580    +
279581    +IF NMISS(
279582    +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Year_Birth ) THEN DO;
279583    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
279584    +
279585    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
279586    +END;
MPRINT(EM_DIAGRAM):   END;
279587    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
279588    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
279589    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
279590    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
279591    +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
279592    +END;
MPRINT(EM_DIAGRAM):   END;
279593    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
279594    +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
279595    +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
279596    +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
279597    +END;
MPRINT(EM_DIAGRAM):   END;
279598    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
279599    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
279600    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
279601    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
279602    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
279603    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
279604    +
279605    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
279606    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
279607    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
279608    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
279609    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
279610    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
279611    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
279612    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
279613    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
279614    +end;
MPRINT(EM_DIAGRAM):   end;
279615    +else do;
MPRINT(EM_DIAGRAM):   else do;
279616    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
279617    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
279618    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
279619    +   end;
MPRINT(EM_DIAGRAM):   end;
279620    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
279621    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
279622    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
279623    +   end;
MPRINT(EM_DIAGRAM):   end;
279624    +   else do;
MPRINT(EM_DIAGRAM):   else do;
279625    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
279626    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
279627    +   end;
MPRINT(EM_DIAGRAM):   end;
279628    +end;
MPRINT(EM_DIAGRAM):   end;
279629    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
279630    +   P_DepVar1  =     0.19741981116929 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.19741981116929 * S_Year_Birth ;
279631    +   P_DepVar1  = P_DepVar1  +    -1.04029441471903 * GRP_AcceptedCmp52
279632    +          +     1.55639377678382 * GRP_Frq2  +     0.31938212279872 * GRP_Frq3
279633    +          +    -0.51953925921981 * GRP_Frq4  +     0.69747847384334 *
279634    +        GRP_Income2  +     0.68377449690467 * GRP_Income3
279635    +          +    -0.69559233910784 * GRP_Income4  +    -0.33403886861179 *
279636    +        GRP_Mnt2  +    -0.23948445463576 * GRP_Mnt3  +     0.22705363969173 *
279637    +        GRP_Mnt4  +      0.5581826092154 * GRP_MntFishProducts2
279638    +          +     0.11895902038445 * GRP_MntFishProducts3
279639    +          +     -0.0194508409368 * GRP_MntFishProducts4
279640    +          +    -0.27172158371684 * GRP_MntGoldProds2
279641    +          +    -0.06617094209943 * GRP_MntGoldProds3
279642    +          +     0.04665050332743 * GRP_MntGoldProds4
279643    +          +    -0.97879858925028 * GRP_MntMeatProducts2
279644    +          +    -0.16953024357929 * GRP_MntMeatProducts3
279645    +          +     0.36702521764699 * GRP_MntMeatProducts4
279646    +          +     0.66896729653839 * GRP_MntWines2  +     0.41828147331708 *
279647    +        GRP_MntWines3  +    -0.39747979825201 * GRP_MntWines4
279648    +          +    -0.78725283014847 * GRP_NumCatalogPurchases3
279649    +          +     0.03702534142798 * GRP_NumCatalogPurchases4
279650    +          +    -1.86131730329435 * GRP_NumDistPurchases2
279651    +          +     -0.1744815262149 * GRP_NumDistPurchases3
279652    +          +     0.29974863559738 * GRP_NumDistPurchases4
279653    +          +     0.08237783693138 * GRP_NumWebPurchases2
279654    +          +     0.08904902237334 * GRP_NumWebPurchases3
279655    +          +     0.01729681908858 * GRP_NumWebPurchases4
279656    +          +    -0.55907537974858 * GRP_RFMstat2  +    -0.19529268587261 *
279657    +        GRP_RFMstat3  +     0.03932842736914 * GRP_RFMstat4
279658    +          +     0.24491355758464 * GRP_RMntFrq2  +     0.27364945694495 *
279659    +        GRP_RMntFrq3  +    -0.64678260362233 * GRP_RMntFrq4
279660    +          +     1.49706726643373 * GRP_Recency2  +     0.20083168709986 *
279661    +        GRP_Recency3  +    -0.57834308365674 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 + -1.04029441471903 * GRP_AcceptedCmp52 + 
1.55639377678382 * GRP_Frq2 + 0.31938212279872 * GRP_Frq3 + -0.51953925921981 * GRP_Frq4 + 
0.69747847384334 * GRP_Income2 + 0.68377449690467 * GRP_Income3 + -0.69559233910784 * 
GRP_Income4 + -0.33403886861179 * GRP_Mnt2 + -0.23948445463576 * GRP_Mnt3 + 0.22705363969173 * 
GRP_Mnt4 + 0.5581826092154 * GRP_MntFishProducts2 + 0.11895902038445 * GRP_MntFishProducts3 + 
-0.0194508409368 * GRP_MntFishProducts4 + -0.27172158371684 * GRP_MntGoldProds2 + 
-0.06617094209943 * GRP_MntGoldProds3 + 0.04665050332743 * GRP_MntGoldProds4 + 
-0.97879858925028 * GRP_MntMeatProducts2 + -0.16953024357929 * GRP_MntMeatProducts3 + 
0.36702521764699 * GRP_MntMeatProducts4 + 0.66896729653839 * GRP_MntWines2 + 0.41828147331708 
* GRP_MntWines3 + -0.39747979825201 * GRP_MntWines4 + -0.78725283014847 * 
GRP_NumCatalogPurchases3 + 0.03702534142798 * GRP_NumCatalogPurchases4 + -1.86131730329435 * 
GRP_NumDistPurchases2 + -0.1744815262149 * GRP_NumDistPurchases3 + 0.29974863559738 * 
GRP_NumDistPurchases4 + 0.08237783693138 * GRP_NumWebPurchases2 + 0.08904902237334 * 
GRP_NumWebPurchases3 + 0.01729681908858 * GRP_NumWebPurchases4 + -0.55907537974858 * 
GRP_RFMstat2 + -0.19529268587261 * GRP_RFMstat3 + 0.03932842736914 * GRP_RFMstat4 + 
0.24491355758464 * GRP_RMntFrq2 + 0.27364945694495 * GRP_RMntFrq3 + -0.64678260362233 * 
GRP_RMntFrq4 + 1.49706726643373 * GRP_Recency2 + 0.20083168709986 * GRP_Recency3 + 
-0.57834308365674 * GRP_Recency4 ;
279662    +   P_DepVar1  =    -1.16466009831369 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.16466009831369 + P_DepVar1 ;
279663    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
279664    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
279665    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
279666    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
279667    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
279668    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
279669    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
279670    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
279671    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
279672    +END;
MPRINT(EM_DIAGRAM):   END;
279673    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
279674    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
279675    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
279676    +END;
MPRINT(EM_DIAGRAM):   END;
279677    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
279678    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
279679    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
279680    +END;
MPRINT(EM_DIAGRAM):   END;
279681    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
279682    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
279683    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
279684    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
279685    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
279686    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
279687    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
279688    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
279689    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
279690    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
279691    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
279692    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
279693    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
279694    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
279695    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
279696    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
279697    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
279698    +END;
MPRINT(EM_DIAGRAM):   END;
279699    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
279700    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
279701    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
279702    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
279703    +* Renaming variables for AutoNeural26;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural26;
279704    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
279705    +* Renaming Posterior variables for AutoNeural26;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural26;
279706    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
279707    +drop AutoNeural26_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural26_P_DepVar1;
279708    +AutoNeural26_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural26_P_DepVar1 = P_DepVar1;
279709    +drop AutoNeural26_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural26_P_DepVar0;
279710    +AutoNeural26_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural26_P_DepVar0 = P_DepVar0;
279711    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
279712    +* Renaming Into variables for AutoNeural26;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for AutoNeural26;
279713    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
279714    +length AutoNeural26_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length AutoNeural26_I_DepVar $32;
279715    +drop AutoNeural26_I_DepVar;
MPRINT(EM_DIAGRAM):   drop AutoNeural26_I_DepVar;
279716    +AutoNeural26_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   AutoNeural26_I_DepVar = I_DepVar;
279717    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
279718    +* Renaming _WARN_ variable for AutoNeural26;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural26;
279719    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
279720    +length AutoNeural26_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural26_WARN_ $4;
279721    +drop AutoNeural26_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural26_WARN_;
279722    +AutoNeural26_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural26_WARN_ = _WARN_;
279723    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
279724    +* Ensmbl50: Scoring Code of model 6 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl50: Scoring Code of model 6 of 7;
279725    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
279726    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
279727    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
279728    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
279729    +* NODE: AutoNeural25;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural25;
279730    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
279731    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
279732    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
279733    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
279734    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
279735    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
279736    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
279737    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
279738    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
279739    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
279740    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
279741    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
279742    +LENGTH _WARN_ $4
279743    +      F_DepVar  $ 12
279744    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
279745    +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
279746    +
279747    +      label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
MPRINT(EM_DIAGRAM):   label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
279748    +
279749    +      label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
279750    +
279751    +      label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
279752    +
279753    +      label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
279754    +
279755    +      label GRP_Income2 = 'Dummy: GRP_Income=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Income2 = 'Dummy: GRP_Income=2' ;
279756    +
279757    +      label GRP_Income3 = 'Dummy: GRP_Income=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Income3 = 'Dummy: GRP_Income=3' ;
279758    +
279759    +      label GRP_Income4 = 'Dummy: GRP_Income=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Income4 = 'Dummy: GRP_Income=4' ;
279760    +
279761    +      label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
279762    +
279763    +      label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
279764    +
279765    +      label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
279766    +
279767    +      label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
279768    +
279769    +      label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
279770    +
279771    +      label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
279772    +
279773    +      label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
279774    +
279775    +      label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
279776    +
279777    +      label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
279778    +
279779    +      label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
279780    +
279781    +      label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
279782    +
279783    +      label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
279784    +
279785    +      label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
279786    +
279787    +      label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
279788    +
279789    +      label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
279790    +
279791    +      label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
279792    +
279793    +      label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
279794    +
279795    +      label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
279796    +
279797    +      label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
279798    +
279799    +      label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
279800    +
279801    +      label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
279802    +
279803    +      label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
279804    +
279805    +      label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
279806    +
279807    +      label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
279808    +
279809    +      label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
279810    +
279811    +      label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
279812    +
279813    +      label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
279814    +
279815    +      label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
279816    +
279817    +      label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
279818    +
279819    +      label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
279820    +
279821    +      label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
279822    +
279823    +      label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
279824    +
279825    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
279826    +
279827    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
279828    +
279829    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
279830    +
279831    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
279832    +
279833    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
279834    +
279835    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
279836    +
279837    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
279838    +
279839    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
279840    +
279841    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
279842    +
279843    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
279844    +
279845    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
279846    +
279847    +*** Generate dummy variables for GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmp5 ;
279848    +drop GRP_AcceptedCmp52 ;
MPRINT(EM_DIAGRAM):   drop GRP_AcceptedCmp52 ;
279849    +if missing( GRP_AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmp5 ) then do;
279850    +   GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
279851    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
279852    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
279853    +end;
MPRINT(EM_DIAGRAM):   end;
279854    +else do;
MPRINT(EM_DIAGRAM):   else do;
279855    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
279856    +   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
279857    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
279858    +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
279859    +      GRP_AcceptedCmp52 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = 1;
279860    +   end;
MPRINT(EM_DIAGRAM):   end;
279861    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
279862    +      GRP_AcceptedCmp52 = -1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = -1;
279863    +   end;
MPRINT(EM_DIAGRAM):   end;
279864    +   else do;
MPRINT(EM_DIAGRAM):   else do;
279865    +      GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
279866    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
279867    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
279868    +   end;
MPRINT(EM_DIAGRAM):   end;
279869    +end;
MPRINT(EM_DIAGRAM):   end;
279870    +
279871    +*** Generate dummy variables for GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Frq ;
279872    +drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
279873    +if missing( GRP_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Frq ) then do;
279874    +   GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
279875    +   GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
279876    +   GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
279877    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
279878    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
279879    +end;
MPRINT(EM_DIAGRAM):   end;
279880    +else do;
MPRINT(EM_DIAGRAM):   else do;
279881    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
279882    +   _dm12 = put( GRP_Frq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Frq , BEST12. );
279883    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
279884    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
279885    +      GRP_Frq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = -1;
279886    +      GRP_Frq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = -1;
279887    +      GRP_Frq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = -1;
279888    +   end;
MPRINT(EM_DIAGRAM):   end;
279889    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
279890    +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
279891    +      GRP_Frq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 1;
279892    +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
279893    +   end;
MPRINT(EM_DIAGRAM):   end;
279894    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
279895    +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
279896    +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
279897    +      GRP_Frq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 1;
279898    +   end;
MPRINT(EM_DIAGRAM):   end;
279899    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
279900    +      GRP_Frq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 1;
279901    +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
279902    +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
279903    +   end;
MPRINT(EM_DIAGRAM):   end;
279904    +   else do;
MPRINT(EM_DIAGRAM):   else do;
279905    +      GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
279906    +      GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
279907    +      GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
279908    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
279909    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
279910    +   end;
MPRINT(EM_DIAGRAM):   end;
279911    +end;
MPRINT(EM_DIAGRAM):   end;
279912    +
279913    +*** Generate dummy variables for GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Income ;
279914    +drop GRP_Income2 GRP_Income3 GRP_Income4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Income2 GRP_Income3 GRP_Income4 ;
279915    +if missing( GRP_Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Income ) then do;
279916    +   GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
279917    +   GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
279918    +   GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
279919    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
279920    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
279921    +end;
MPRINT(EM_DIAGRAM):   end;
279922    +else do;
MPRINT(EM_DIAGRAM):   else do;
279923    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
279924    +   _dm12 = put( GRP_Income , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Income , BEST12. );
279925    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
279926    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
279927    +      GRP_Income2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = -1;
279928    +      GRP_Income3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = -1;
279929    +      GRP_Income4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = -1;
279930    +   end;
MPRINT(EM_DIAGRAM):   end;
279931    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
279932    +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
279933    +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
279934    +      GRP_Income4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 1;
279935    +   end;
MPRINT(EM_DIAGRAM):   end;
279936    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
279937    +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
279938    +      GRP_Income3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 1;
279939    +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
279940    +   end;
MPRINT(EM_DIAGRAM):   end;
279941    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
279942    +      GRP_Income2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 1;
279943    +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
279944    +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
279945    +   end;
MPRINT(EM_DIAGRAM):   end;
279946    +   else do;
MPRINT(EM_DIAGRAM):   else do;
279947    +      GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
279948    +      GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
279949    +      GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
279950    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
279951    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
279952    +   end;
MPRINT(EM_DIAGRAM):   end;
279953    +end;
MPRINT(EM_DIAGRAM):   end;
279954    +
279955    +*** Generate dummy variables for GRP_Mnt ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Mnt ;
279956    +drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
279957    +if missing( GRP_Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Mnt ) then do;
279958    +   GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
279959    +   GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
279960    +   GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
279961    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
279962    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
279963    +end;
MPRINT(EM_DIAGRAM):   end;
279964    +else do;
MPRINT(EM_DIAGRAM):   else do;
279965    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
279966    +   _dm12 = put( GRP_Mnt , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Mnt , BEST12. );
279967    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
279968    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
279969    +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
279970    +      GRP_Mnt3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 1;
279971    +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
279972    +   end;
MPRINT(EM_DIAGRAM):   end;
279973    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
279974    +      GRP_Mnt2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = -1;
279975    +      GRP_Mnt3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = -1;
279976    +      GRP_Mnt4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = -1;
279977    +   end;
MPRINT(EM_DIAGRAM):   end;
279978    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
279979    +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
279980    +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
279981    +      GRP_Mnt4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 1;
279982    +   end;
MPRINT(EM_DIAGRAM):   end;
279983    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
279984    +      GRP_Mnt2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 1;
279985    +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
279986    +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
279987    +   end;
MPRINT(EM_DIAGRAM):   end;
279988    +   else do;
MPRINT(EM_DIAGRAM):   else do;
279989    +      GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
279990    +      GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
279991    +      GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
279992    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
279993    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
279994    +   end;
MPRINT(EM_DIAGRAM):   end;
279995    +end;
MPRINT(EM_DIAGRAM):   end;
279996    +
279997    +*** Generate dummy variables for GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntFishProducts ;
279998    +drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
279999    +if missing( GRP_MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntFishProducts ) then do;
280000    +   GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
280001    +   GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
280002    +   GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
280003    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
280004    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
280005    +end;
MPRINT(EM_DIAGRAM):   end;
280006    +else do;
MPRINT(EM_DIAGRAM):   else do;
280007    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
280008    +   _dm12 = put( GRP_MntFishProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntFishProducts , BEST12. );
280009    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
280010    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
280011    +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
280012    +      GRP_MntFishProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 1;
280013    +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
280014    +   end;
MPRINT(EM_DIAGRAM):   end;
280015    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
280016    +      GRP_MntFishProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = -1;
280017    +      GRP_MntFishProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = -1;
280018    +      GRP_MntFishProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = -1;
280019    +   end;
MPRINT(EM_DIAGRAM):   end;
280020    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
280021    +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
280022    +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
280023    +      GRP_MntFishProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 1;
280024    +   end;
MPRINT(EM_DIAGRAM):   end;
280025    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
280026    +      GRP_MntFishProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 1;
280027    +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
280028    +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
280029    +   end;
MPRINT(EM_DIAGRAM):   end;
280030    +   else do;
MPRINT(EM_DIAGRAM):   else do;
280031    +      GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
280032    +      GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
280033    +      GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
280034    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
280035    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
280036    +   end;
MPRINT(EM_DIAGRAM):   end;
280037    +end;
MPRINT(EM_DIAGRAM):   end;
280038    +
280039    +*** Generate dummy variables for GRP_MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntGoldProds ;
280040    +drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
280041    +if missing( GRP_MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntGoldProds ) then do;
280042    +   GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
280043    +   GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
280044    +   GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
280045    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
280046    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
280047    +end;
MPRINT(EM_DIAGRAM):   end;
280048    +else do;
MPRINT(EM_DIAGRAM):   else do;
280049    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
280050    +   _dm12 = put( GRP_MntGoldProds , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntGoldProds , BEST12. );
280051    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
280052    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
280053    +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
280054    +      GRP_MntGoldProds3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 1;
280055    +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
280056    +   end;
MPRINT(EM_DIAGRAM):   end;
280057    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
280058    +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
280059    +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
280060    +      GRP_MntGoldProds4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 1;
280061    +   end;
MPRINT(EM_DIAGRAM):   end;
280062    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
280063    +      GRP_MntGoldProds2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = -1;
280064    +      GRP_MntGoldProds3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = -1;
280065    +      GRP_MntGoldProds4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = -1;
280066    +   end;
MPRINT(EM_DIAGRAM):   end;
280067    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
280068    +      GRP_MntGoldProds2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 1;
280069    +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
280070    +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
280071    +   end;
MPRINT(EM_DIAGRAM):   end;
280072    +   else do;
MPRINT(EM_DIAGRAM):   else do;
280073    +      GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
280074    +      GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
280075    +      GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
280076    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
280077    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
280078    +   end;
MPRINT(EM_DIAGRAM):   end;
280079    +end;
MPRINT(EM_DIAGRAM):   end;
280080    +
280081    +*** Generate dummy variables for GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntMeatProducts ;
280082    +drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
280083    +if missing( GRP_MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntMeatProducts ) then do;
280084    +   GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
280085    +   GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
280086    +   GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
280087    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
280088    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
280089    +end;
MPRINT(EM_DIAGRAM):   end;
280090    +else do;
MPRINT(EM_DIAGRAM):   else do;
280091    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
280092    +   _dm12 = put( GRP_MntMeatProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntMeatProducts , BEST12. );
280093    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
280094    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
280095    +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
280096    +      GRP_MntMeatProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 1;
280097    +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
280098    +   end;
MPRINT(EM_DIAGRAM):   end;
280099    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
280100    +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
280101    +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
280102    +      GRP_MntMeatProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 1;
280103    +   end;
MPRINT(EM_DIAGRAM):   end;
280104    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
280105    +      GRP_MntMeatProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = -1;
280106    +      GRP_MntMeatProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = -1;
280107    +      GRP_MntMeatProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = -1;
280108    +   end;
MPRINT(EM_DIAGRAM):   end;
280109    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
280110    +      GRP_MntMeatProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 1;
280111    +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
280112    +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
280113    +   end;
MPRINT(EM_DIAGRAM):   end;
280114    +   else do;
MPRINT(EM_DIAGRAM):   else do;
280115    +      GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
280116    +      GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
280117    +      GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
280118    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
280119    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
280120    +   end;
MPRINT(EM_DIAGRAM):   end;
280121    +end;
MPRINT(EM_DIAGRAM):   end;
280122    +
280123    +*** Generate dummy variables for GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntWines ;
280124    +drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
280125    +if missing( GRP_MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntWines ) then do;
280126    +   GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
280127    +   GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
280128    +   GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
280129    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
280130    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
280131    +end;
MPRINT(EM_DIAGRAM):   end;
280132    +else do;
MPRINT(EM_DIAGRAM):   else do;
280133    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
280134    +   _dm12 = put( GRP_MntWines , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntWines , BEST12. );
280135    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
280136    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
280137    +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
280138    +      GRP_MntWines3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 1;
280139    +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
280140    +   end;
MPRINT(EM_DIAGRAM):   end;
280141    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
280142    +      GRP_MntWines2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = -1;
280143    +      GRP_MntWines3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = -1;
280144    +      GRP_MntWines4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = -1;
280145    +   end;
MPRINT(EM_DIAGRAM):   end;
280146    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
280147    +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
280148    +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
280149    +      GRP_MntWines4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 1;
280150    +   end;
MPRINT(EM_DIAGRAM):   end;
280151    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
280152    +      GRP_MntWines2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 1;
280153    +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
280154    +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
280155    +   end;
MPRINT(EM_DIAGRAM):   end;
280156    +   else do;
MPRINT(EM_DIAGRAM):   else do;
280157    +      GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
280158    +      GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
280159    +      GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
280160    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
280161    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
280162    +   end;
MPRINT(EM_DIAGRAM):   end;
280163    +end;
MPRINT(EM_DIAGRAM):   end;
280164    +
280165    +*** Generate dummy variables for GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumCatalogPurchases ;
280166    +drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
280167    +if missing( GRP_NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumCatalogPurchases ) then do;
280168    +   GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
280169    +   GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
280170    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
280171    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
280172    +end;
MPRINT(EM_DIAGRAM):   end;
280173    +else do;
MPRINT(EM_DIAGRAM):   else do;
280174    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
280175    +   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
280176    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
280177    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
280178    +      GRP_NumCatalogPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 1;
280179    +      GRP_NumCatalogPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 0;
280180    +   end;
MPRINT(EM_DIAGRAM):   end;
280181    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
280182    +      GRP_NumCatalogPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = -1;
280183    +      GRP_NumCatalogPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = -1;
280184    +   end;
MPRINT(EM_DIAGRAM):   end;
280185    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
280186    +      GRP_NumCatalogPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 0;
280187    +      GRP_NumCatalogPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 1;
280188    +   end;
MPRINT(EM_DIAGRAM):   end;
280189    +   else do;
MPRINT(EM_DIAGRAM):   else do;
280190    +      GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
280191    +      GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
280192    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
280193    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
280194    +   end;
MPRINT(EM_DIAGRAM):   end;
280195    +end;
MPRINT(EM_DIAGRAM):   end;
280196    +
280197    +*** Generate dummy variables for GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumDistPurchases ;
280198    +drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
280199    +if missing( GRP_NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumDistPurchases ) then do;
280200    +   GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
280201    +   GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
280202    +   GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
280203    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
280204    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
280205    +end;
MPRINT(EM_DIAGRAM):   end;
280206    +else do;
MPRINT(EM_DIAGRAM):   else do;
280207    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
280208    +   _dm12 = put( GRP_NumDistPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumDistPurchases , BEST12. );
280209    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
280210    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
280211    +      GRP_NumDistPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = -1;
280212    +      GRP_NumDistPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = -1;
280213    +      GRP_NumDistPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = -1;
280214    +   end;
MPRINT(EM_DIAGRAM):   end;
280215    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
280216    +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
280217    +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
280218    +      GRP_NumDistPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 1;
280219    +   end;
MPRINT(EM_DIAGRAM):   end;
280220    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
280221    +      GRP_NumDistPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 1;
280222    +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
280223    +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
280224    +   end;
MPRINT(EM_DIAGRAM):   end;
280225    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
280226    +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
280227    +      GRP_NumDistPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 1;
280228    +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
280229    +   end;
MPRINT(EM_DIAGRAM):   end;
280230    +   else do;
MPRINT(EM_DIAGRAM):   else do;
280231    +      GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
280232    +      GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
280233    +      GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
280234    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
280235    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
280236    +   end;
MPRINT(EM_DIAGRAM):   end;
280237    +end;
MPRINT(EM_DIAGRAM):   end;
280238    +
280239    +*** Generate dummy variables for GRP_NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumWebPurchases ;
280240    +drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
280241    +if missing( GRP_NumWebPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumWebPurchases ) then do;
280242    +   GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
280243    +   GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
280244    +   GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
280245    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
280246    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
280247    +end;
MPRINT(EM_DIAGRAM):   end;
280248    +else do;
MPRINT(EM_DIAGRAM):   else do;
280249    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
280250    +   _dm12 = put( GRP_NumWebPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumWebPurchases , BEST12. );
280251    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
280252    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
280253    +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
280254    +      GRP_NumWebPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 1;
280255    +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
280256    +   end;
MPRINT(EM_DIAGRAM):   end;
280257    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
280258    +      GRP_NumWebPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = -1;
280259    +      GRP_NumWebPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = -1;
280260    +      GRP_NumWebPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = -1;
280261    +   end;
MPRINT(EM_DIAGRAM):   end;
280262    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
280263    +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
280264    +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
280265    +      GRP_NumWebPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 1;
280266    +   end;
MPRINT(EM_DIAGRAM):   end;
280267    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
280268    +      GRP_NumWebPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 1;
280269    +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
280270    +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
280271    +   end;
MPRINT(EM_DIAGRAM):   end;
280272    +   else do;
MPRINT(EM_DIAGRAM):   else do;
280273    +      GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
280274    +      GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
280275    +      GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
280276    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
280277    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
280278    +   end;
MPRINT(EM_DIAGRAM):   end;
280279    +end;
MPRINT(EM_DIAGRAM):   end;
280280    +
280281    +*** Generate dummy variables for GRP_RFMstat ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RFMstat ;
280282    +drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
280283    +if missing( GRP_RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RFMstat ) then do;
280284    +   GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
280285    +   GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
280286    +   GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
280287    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
280288    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
280289    +end;
MPRINT(EM_DIAGRAM):   end;
280290    +else do;
MPRINT(EM_DIAGRAM):   else do;
280291    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
280292    +   _dm12 = put( GRP_RFMstat , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RFMstat , BEST12. );
280293    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
280294    +   if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
280295    +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
280296    +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
280297    +      GRP_RFMstat4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 1;
280298    +   end;
MPRINT(EM_DIAGRAM):   end;
280299    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
280300    +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
280301    +      GRP_RFMstat3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 1;
280302    +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
280303    +   end;
MPRINT(EM_DIAGRAM):   end;
280304    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
280305    +      GRP_RFMstat2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = -1;
280306    +      GRP_RFMstat3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = -1;
280307    +      GRP_RFMstat4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = -1;
280308    +   end;
MPRINT(EM_DIAGRAM):   end;
280309    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
280310    +      GRP_RFMstat2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 1;
280311    +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
280312    +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
280313    +   end;
MPRINT(EM_DIAGRAM):   end;
280314    +   else do;
MPRINT(EM_DIAGRAM):   else do;
280315    +      GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
280316    +      GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
280317    +      GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
280318    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
280319    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
280320    +   end;
MPRINT(EM_DIAGRAM):   end;
280321    +end;
MPRINT(EM_DIAGRAM):   end;
280322    +
280323    +*** Generate dummy variables for GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RMntFrq ;
280324    +drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
280325    +if missing( GRP_RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RMntFrq ) then do;
280326    +   GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
280327    +   GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
280328    +   GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
280329    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
280330    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
280331    +end;
MPRINT(EM_DIAGRAM):   end;
280332    +else do;
MPRINT(EM_DIAGRAM):   else do;
280333    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
280334    +   _dm12 = put( GRP_RMntFrq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RMntFrq , BEST12. );
280335    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
280336    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
280337    +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
280338    +      GRP_RMntFrq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 1;
280339    +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
280340    +   end;
MPRINT(EM_DIAGRAM):   end;
280341    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
280342    +      GRP_RMntFrq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = -1;
280343    +      GRP_RMntFrq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = -1;
280344    +      GRP_RMntFrq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = -1;
280345    +   end;
MPRINT(EM_DIAGRAM):   end;
280346    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
280347    +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
280348    +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
280349    +      GRP_RMntFrq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 1;
280350    +   end;
MPRINT(EM_DIAGRAM):   end;
280351    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
280352    +      GRP_RMntFrq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 1;
280353    +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
280354    +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
280355    +   end;
MPRINT(EM_DIAGRAM):   end;
280356    +   else do;
MPRINT(EM_DIAGRAM):   else do;
280357    +      GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
280358    +      GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
280359    +      GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
280360    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
280361    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
280362    +   end;
MPRINT(EM_DIAGRAM):   end;
280363    +end;
MPRINT(EM_DIAGRAM):   end;
280364    +
280365    +*** Generate dummy variables for GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Recency ;
280366    +drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
280367    +if missing( GRP_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Recency ) then do;
280368    +   GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
280369    +   GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
280370    +   GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
280371    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
280372    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
280373    +end;
MPRINT(EM_DIAGRAM):   end;
280374    +else do;
MPRINT(EM_DIAGRAM):   else do;
280375    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
280376    +   _dm12 = put( GRP_Recency , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Recency , BEST12. );
280377    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
280378    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
280379    +      GRP_Recency2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = -1;
280380    +      GRP_Recency3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = -1;
280381    +      GRP_Recency4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = -1;
280382    +   end;
MPRINT(EM_DIAGRAM):   end;
280383    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
280384    +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
280385    +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
280386    +      GRP_Recency4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 1;
280387    +   end;
MPRINT(EM_DIAGRAM):   end;
280388    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
280389    +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
280390    +      GRP_Recency3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 1;
280391    +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
280392    +   end;
MPRINT(EM_DIAGRAM):   end;
280393    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
280394    +      GRP_Recency2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 1;
280395    +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
280396    +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
280397    +   end;
MPRINT(EM_DIAGRAM):   end;
280398    +   else do;
MPRINT(EM_DIAGRAM):   else do;
280399    +      GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
280400    +      GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
280401    +      GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
280402    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
280403    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
280404    +   end;
MPRINT(EM_DIAGRAM):   end;
280405    +end;
MPRINT(EM_DIAGRAM):   end;
280406    +
280407    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
280408    +*** Checking missing input Interval
280409    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
280410    +
280411    +IF NMISS(
280412    +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Year_Birth ) THEN DO;
280413    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
280414    +
280415    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
280416    +END;
MPRINT(EM_DIAGRAM):   END;
280417    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
280418    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
280419    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
280420    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
280421    +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
280422    +END;
MPRINT(EM_DIAGRAM):   END;
280423    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
280424    +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
280425    +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
280426    +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
280427    +END;
MPRINT(EM_DIAGRAM):   END;
280428    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
280429    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
280430    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
280431    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
280432    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
280433    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
280434    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
280435    +   H1x1_1  =     0.38021638611764 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.38021638611764 * S_Year_Birth ;
280436    +   H1x1_2  =      -1.088276895346 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -1.088276895346 * S_Year_Birth ;
280437    +   H1x1_3  =    -0.21044864474556 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.21044864474556 * S_Year_Birth ;
280438    +   H1x1_1  = H1x1_1  +    -1.19598236721657 * GRP_AcceptedCmp52
280439    +          +     0.89556920543007 * GRP_Frq2  +    -1.28633632438875 * GRP_Frq3
280440    +          +     1.09957277812081 * GRP_Frq4  +     1.66129248688789 *
280441    +        GRP_Income2  +    -0.02208859809261 * GRP_Income3
280442    +          +     0.13742442233856 * GRP_Income4  +     -0.8762617114278 *
280443    +        GRP_Mnt2  +     0.14483268386758 * GRP_Mnt3  +     1.46115917633769 *
280444    +        GRP_Mnt4  +     -0.6421408902491 * GRP_MntFishProducts2
280445    +          +      0.1128138472044 * GRP_MntFishProducts3
280446    +          +     1.21562636748698 * GRP_MntFishProducts4
280447    +          +     0.97422300880066 * GRP_MntGoldProds2
280448    +          +    -0.78007036389535 * GRP_MntGoldProds3
280449    +          +    -0.13814365615145 * GRP_MntGoldProds4
280450    +          +     1.35693955555286 * GRP_MntMeatProducts2
280451    +          +    -0.27598973191035 * GRP_MntMeatProducts3
280452    +          +     0.24526165671667 * GRP_MntMeatProducts4
280453    +          +    -2.07253692193163 * GRP_MntWines2  +    -0.82406684176795 *
280454    +        GRP_MntWines3  +     1.33606527822464 * GRP_MntWines4
280455    +          +    -1.54679770016919 * GRP_NumCatalogPurchases3
280456    +          +    -2.28037541698712 * GRP_NumCatalogPurchases4
280457    +          +     0.40979012613952 * GRP_NumDistPurchases2
280458    +          +     0.01840169060266 * GRP_NumDistPurchases3
280459    +          +     0.45490355508206 * GRP_NumDistPurchases4
280460    +          +     -2.5216795172343 * GRP_NumWebPurchases2
280461    +          +    -1.84801006282457 * GRP_NumWebPurchases3
280462    +          +    -1.97644985842889 * GRP_NumWebPurchases4
280463    +          +     1.42008839453911 * GRP_RFMstat2  +    -1.47553685202484 *
280464    +        GRP_RFMstat3  +     0.87098855427631 * GRP_RFMstat4
280465    +          +     1.05400168422125 * GRP_RMntFrq2  +    -0.41630002795032 *
280466    +        GRP_RMntFrq3  +     0.32151577305352 * GRP_RMntFrq4
280467    +          +    -0.40892574480582 * GRP_Recency2  +    -0.38760854674907 *
280468    +        GRP_Recency3  +    -1.01062906861757 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -1.19598236721657 * GRP_AcceptedCmp52 + 
0.89556920543007 * GRP_Frq2 + -1.28633632438875 * GRP_Frq3 + 1.09957277812081 * GRP_Frq4 + 
1.66129248688789 * GRP_Income2 + -0.02208859809261 * GRP_Income3 + 0.13742442233856 * 
GRP_Income4 + -0.8762617114278 * GRP_Mnt2 + 0.14483268386758 * GRP_Mnt3 + 1.46115917633769 * 
GRP_Mnt4 + -0.6421408902491 * GRP_MntFishProducts2 + 0.1128138472044 * GRP_MntFishProducts3 + 
1.21562636748698 * GRP_MntFishProducts4 + 0.97422300880066 * GRP_MntGoldProds2 + 
-0.78007036389535 * GRP_MntGoldProds3 + -0.13814365615145 * GRP_MntGoldProds4 + 
1.35693955555286 * GRP_MntMeatProducts2 + -0.27598973191035 * GRP_MntMeatProducts3 + 
0.24526165671667 * GRP_MntMeatProducts4 + -2.07253692193163 * GRP_MntWines2 + 
-0.82406684176795 * GRP_MntWines3 + 1.33606527822464 * GRP_MntWines4 + -1.54679770016919 * 
GRP_NumCatalogPurchases3 + -2.28037541698712 * GRP_NumCatalogPurchases4 + 0.40979012613952 * 
GRP_NumDistPurchases2 + 0.01840169060266 * GRP_NumDistPurchases3 + 0.45490355508206 * 
GRP_NumDistPurchases4 + -2.5216795172343 * GRP_NumWebPurchases2 + -1.84801006282457 * 
GRP_NumWebPurchases3 + -1.97644985842889 * GRP_NumWebPurchases4 + 1.42008839453911 * 
GRP_RFMstat2 + -1.47553685202484 * GRP_RFMstat3 + 0.87098855427631 * GRP_RFMstat4 + 
1.05400168422125 * GRP_RMntFrq2 + -0.41630002795032 * GRP_RMntFrq3 + 0.32151577305352 * 
GRP_RMntFrq4 + -0.40892574480582 * GRP_Recency2 + -0.38760854674907 * GRP_Recency3 + 
-1.01062906861757 * GRP_Recency4 ;
280469    +   H1x1_2  = H1x1_2  +    -0.22087092765683 * GRP_AcceptedCmp52
280470    +          +     0.86410922322484 * GRP_Frq2  +     1.63807214492524 * GRP_Frq3
280471    +          +    -1.25641751320277 * GRP_Frq4  +    -2.06319605492297 *
280472    +        GRP_Income2  +    -0.19570512199776 * GRP_Income3
280473    +          +    -1.02783445665559 * GRP_Income4  +     0.15804947667697 *
280474    +        GRP_Mnt2  +    -1.89927129454089 * GRP_Mnt3  +    -2.03683593435912 *
280475    +        GRP_Mnt4  +    -1.52161150732597 * GRP_MntFishProducts2
280476    +          +     1.31452667544583 * GRP_MntFishProducts3
280477    +          +     -1.7257971559668 * GRP_MntFishProducts4
280478    +          +     2.35872511454228 * GRP_MntGoldProds2
280479    +          +    -2.18519280701813 * GRP_MntGoldProds3
280480    +          +     2.11958828863486 * GRP_MntGoldProds4
280481    +          +     0.96289877666679 * GRP_MntMeatProducts2
280482    +          +     0.23432155256273 * GRP_MntMeatProducts3
280483    +          +     1.73039772995976 * GRP_MntMeatProducts4
280484    +          +    -0.42501510787424 * GRP_MntWines2  +    -1.52486822377888 *
280485    +        GRP_MntWines3  +      1.6227654564975 * GRP_MntWines4
280486    +          +    -1.89995561867666 * GRP_NumCatalogPurchases3
280487    +          +     0.67482053398184 * GRP_NumCatalogPurchases4
280488    +          +     0.66331524792021 * GRP_NumDistPurchases2
280489    +          +    -3.51633711874744 * GRP_NumDistPurchases3
280490    +          +    -2.78868266001809 * GRP_NumDistPurchases4
280491    +          +     0.48911700629841 * GRP_NumWebPurchases2
280492    +          +    -2.04233990579849 * GRP_NumWebPurchases3
280493    +          +     0.61493436153841 * GRP_NumWebPurchases4
280494    +          +    -0.04998034532745 * GRP_RFMstat2  +     0.70675221202708 *
280495    +        GRP_RFMstat3  +      1.1835788842441 * GRP_RFMstat4
280496    +          +    -1.59293821911804 * GRP_RMntFrq2  +    -2.00649847294694 *
280497    +        GRP_RMntFrq3  +     1.51867097620424 * GRP_RMntFrq4
280498    +          +     0.80524037758297 * GRP_Recency2  +     0.46947615167497 *
280499    +        GRP_Recency3  +    -0.02984024000355 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.22087092765683 * GRP_AcceptedCmp52 + 
0.86410922322484 * GRP_Frq2 + 1.63807214492524 * GRP_Frq3 + -1.25641751320277 * GRP_Frq4 + 
-2.06319605492297 * GRP_Income2 + -0.19570512199776 * GRP_Income3 + -1.02783445665559 * 
GRP_Income4 + 0.15804947667697 * GRP_Mnt2 + -1.89927129454089 * GRP_Mnt3 + -2.03683593435912 * 
GRP_Mnt4 + -1.52161150732597 * GRP_MntFishProducts2 + 1.31452667544583 * GRP_MntFishProducts3 
+ -1.7257971559668 * GRP_MntFishProducts4 + 2.35872511454228 * GRP_MntGoldProds2 + 
-2.18519280701813 * GRP_MntGoldProds3 + 2.11958828863486 * GRP_MntGoldProds4 + 
0.96289877666679 * GRP_MntMeatProducts2 + 0.23432155256273 * GRP_MntMeatProducts3 + 
1.73039772995976 * GRP_MntMeatProducts4 + -0.42501510787424 * GRP_MntWines2 + 
-1.52486822377888 * GRP_MntWines3 + 1.6227654564975 * GRP_MntWines4 + -1.89995561867666 * 
GRP_NumCatalogPurchases3 + 0.67482053398184 * GRP_NumCatalogPurchases4 + 0.66331524792021 * 
GRP_NumDistPurchases2 + -3.51633711874744 * GRP_NumDistPurchases3 + -2.78868266001809 * 
GRP_NumDistPurchases4 + 0.48911700629841 * GRP_NumWebPurchases2 + -2.04233990579849 * 
GRP_NumWebPurchases3 + 0.61493436153841 * GRP_NumWebPurchases4 + -0.04998034532745 * 
GRP_RFMstat2 + 0.70675221202708 * GRP_RFMstat3 + 1.1835788842441 * GRP_RFMstat4 + 
-1.59293821911804 * GRP_RMntFrq2 + -2.00649847294694 * GRP_RMntFrq3 + 1.51867097620424 * 
GRP_RMntFrq4 + 0.80524037758297 * GRP_Recency2 + 0.46947615167497 * GRP_Recency3 + 
-0.02984024000355 * GRP_Recency4 ;
280500    +   H1x1_3  = H1x1_3  +     0.63511799928422 * GRP_AcceptedCmp52
280501    +          +      -2.298606068807 * GRP_Frq2  +     3.16864487857804 * GRP_Frq3
280502    +          +     3.03519261062887 * GRP_Frq4  +    -1.85162718986086 *
280503    +        GRP_Income2  +     0.41526825199627 * GRP_Income3
280504    +          +    -0.80593312350255 * GRP_Income4  +     1.66777476102634 *
280505    +        GRP_Mnt2  +     2.08848488119875 * GRP_Mnt3  +     0.65051244257971 *
280506    +        GRP_Mnt4  +     0.71847095407349 * GRP_MntFishProducts2
280507    +          +    -1.10257815890641 * GRP_MntFishProducts3
280508    +          +     2.17792588671141 * GRP_MntFishProducts4
280509    +          +     2.50223152259939 * GRP_MntGoldProds2
280510    +          +    -1.72156085851201 * GRP_MntGoldProds3
280511    +          +    -3.91709431063923 * GRP_MntGoldProds4
280512    +          +     -1.0779971381482 * GRP_MntMeatProducts2
280513    +          +    -1.47970774146601 * GRP_MntMeatProducts3
280514    +          +     1.27022891132009 * GRP_MntMeatProducts4
280515    +          +     0.48048593774493 * GRP_MntWines2  +     2.90436921022208 *
280516    +        GRP_MntWines3  +    -3.52082955604777 * GRP_MntWines4
280517    +          +    -0.04446993636304 * GRP_NumCatalogPurchases3
280518    +          +     0.63669224655802 * GRP_NumCatalogPurchases4
280519    +          +    -3.14645279004965 * GRP_NumDistPurchases2
280520    +          +    -2.33190469508132 * GRP_NumDistPurchases3
280521    +          +    -0.62827451633899 * GRP_NumDistPurchases4
280522    +          +    -1.01851610127648 * GRP_NumWebPurchases2
280523    +          +    -1.48934390537683 * GRP_NumWebPurchases3
280524    +          +    -0.53741548796796 * GRP_NumWebPurchases4
280525    +          +    -0.75492549718573 * GRP_RFMstat2  +     -0.7937620334965 *
280526    +        GRP_RFMstat3  +     1.16856250505521 * GRP_RFMstat4
280527    +          +     2.45700945744116 * GRP_RMntFrq2  +      2.6192187092108 *
280528    +        GRP_RMntFrq3  +    -0.99545519667238 * GRP_RMntFrq4
280529    +          +     -0.8178492657671 * GRP_Recency2  +     0.13605490470692 *
280530    +        GRP_Recency3  +    -0.93901422840588 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.63511799928422 * GRP_AcceptedCmp52 + -2.298606068807 
* GRP_Frq2 + 3.16864487857804 * GRP_Frq3 + 3.03519261062887 * GRP_Frq4 + -1.85162718986086 * 
GRP_Income2 + 0.41526825199627 * GRP_Income3 + -0.80593312350255 * GRP_Income4 + 
1.66777476102634 * GRP_Mnt2 + 2.08848488119875 * GRP_Mnt3 + 0.65051244257971 * GRP_Mnt4 + 
0.71847095407349 * GRP_MntFishProducts2 + -1.10257815890641 * GRP_MntFishProducts3 + 
2.17792588671141 * GRP_MntFishProducts4 + 2.50223152259939 * GRP_MntGoldProds2 + 
-1.72156085851201 * GRP_MntGoldProds3 + -3.91709431063923 * GRP_MntGoldProds4 + 
-1.0779971381482 * GRP_MntMeatProducts2 + -1.47970774146601 * GRP_MntMeatProducts3 + 
1.27022891132009 * GRP_MntMeatProducts4 + 0.48048593774493 * GRP_MntWines2 + 2.90436921022208 
* GRP_MntWines3 + -3.52082955604777 * GRP_MntWines4 + -0.04446993636304 * 
GRP_NumCatalogPurchases3 + 0.63669224655802 * GRP_NumCatalogPurchases4 + -3.14645279004965 * 
GRP_NumDistPurchases2 + -2.33190469508132 * GRP_NumDistPurchases3 + -0.62827451633899 * 
GRP_NumDistPurchases4 + -1.01851610127648 * GRP_NumWebPurchases2 + -1.48934390537683 * 
GRP_NumWebPurchases3 + -0.53741548796796 * GRP_NumWebPurchases4 + -0.75492549718573 * 
GRP_RFMstat2 + -0.7937620334965 * GRP_RFMstat3 + 1.16856250505521 * GRP_RFMstat4 + 
2.45700945744116 * GRP_RMntFrq2 + 2.6192187092108 * GRP_RMntFrq3 + -0.99545519667238 * 
GRP_RMntFrq4 + -0.8178492657671 * GRP_Recency2 + 0.13605490470692 * GRP_Recency3 + 
-0.93901422840588 * GRP_Recency4 ;
280531    +   H1x1_1  =      1.8884999595718 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.8884999595718 + H1x1_1 ;
280532    +   H1x1_2  =    -0.51989390923325 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.51989390923325 + H1x1_2 ;
280533    +   H1x1_3  =     2.10213347257206 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 2.10213347257206 + H1x1_3 ;
280534    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
280535    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
280536    +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
280537    +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
280538    +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
280539    +END;
MPRINT(EM_DIAGRAM):   END;
280540    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
280541    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
280542    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
280543    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
280544    +END;
MPRINT(EM_DIAGRAM):   END;
280545    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
280546    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
280547    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
280548    +
280549    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
280550    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
280551    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
280552    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
280553    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
280554    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
280555    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
280556    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
280557    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
280558    +end;
MPRINT(EM_DIAGRAM):   end;
280559    +else do;
MPRINT(EM_DIAGRAM):   else do;
280560    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
280561    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
280562    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
280563    +   end;
MPRINT(EM_DIAGRAM):   end;
280564    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
280565    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
280566    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
280567    +   end;
MPRINT(EM_DIAGRAM):   end;
280568    +   else do;
MPRINT(EM_DIAGRAM):   else do;
280569    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
280570    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
280571    +   end;
MPRINT(EM_DIAGRAM):   end;
280572    +end;
MPRINT(EM_DIAGRAM):   end;
280573    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
280574    +   P_DepVar1  =    -2.62984121710329 * H1x1_1  +    -2.65642038715706 * H1x1_2
280575    +          +    -4.24846513249504 * H1x1_3 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.62984121710329 * H1x1_1 + -2.65642038715706 * H1x1_2 + 
-4.24846513249504 * H1x1_3 ;
280576    +   P_DepVar1  =     3.19982150134729 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 3.19982150134729 + P_DepVar1 ;
280577    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
280578    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
280579    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
280580    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
280581    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
280582    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
280583    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
280584    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
280585    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
280586    +END;
MPRINT(EM_DIAGRAM):   END;
280587    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
280588    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
280589    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
280590    +END;
MPRINT(EM_DIAGRAM):   END;
280591    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
280592    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
280593    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
280594    +END;
MPRINT(EM_DIAGRAM):   END;
280595    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
280596    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
280597    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
280598    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
280599    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
280600    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
280601    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
280602    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
280603    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
280604    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
280605    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
280606    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
280607    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
280608    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
280609    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
280610    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
280611    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
280612    +END;
MPRINT(EM_DIAGRAM):   END;
280613    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
280614    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
280615    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
280616    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
280617    +* Renaming variables for AutoNeural25;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural25;
280618    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
280619    +* Renaming Posterior variables for AutoNeural25;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural25;
280620    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
280621    +drop AutoNeural25_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural25_P_DepVar1;
280622    +AutoNeural25_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural25_P_DepVar1 = P_DepVar1;
280623    +drop AutoNeural25_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural25_P_DepVar0;
280624    +AutoNeural25_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural25_P_DepVar0 = P_DepVar0;
280625    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
280626    +* Renaming Into variables for AutoNeural25;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for AutoNeural25;
280627    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
280628    +length AutoNeural25_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length AutoNeural25_I_DepVar $32;
280629    +drop AutoNeural25_I_DepVar;
MPRINT(EM_DIAGRAM):   drop AutoNeural25_I_DepVar;
280630    +AutoNeural25_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   AutoNeural25_I_DepVar = I_DepVar;
280631    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
280632    +* Renaming _WARN_ variable for AutoNeural25;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural25;
280633    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
280634    +length AutoNeural25_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural25_WARN_ $4;
280635    +drop AutoNeural25_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural25_WARN_;
280636    +AutoNeural25_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural25_WARN_ = _WARN_;
280637    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
280638    +* Ensmbl50: Scoring Code of model 7 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl50: Scoring Code of model 7 of 7;
280639    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
280640    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
280641    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
280642    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
280643    +* NODE: AutoNeural23;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural23;
280644    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
280645    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
280646    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
280647    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
280648    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
280649    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
280650    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
280651    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
280652    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
280653    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
280654    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
280655    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
280656    +LENGTH _WARN_ $4
280657    +      F_DepVar  $ 12
280658    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
280659    +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
280660    +
280661    +      label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
MPRINT(EM_DIAGRAM):   label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
280662    +
280663    +      label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
280664    +
280665    +      label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
280666    +
280667    +      label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
280668    +
280669    +      label GRP_Income2 = 'Dummy: GRP_Income=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Income2 = 'Dummy: GRP_Income=2' ;
280670    +
280671    +      label GRP_Income3 = 'Dummy: GRP_Income=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Income3 = 'Dummy: GRP_Income=3' ;
280672    +
280673    +      label GRP_Income4 = 'Dummy: GRP_Income=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Income4 = 'Dummy: GRP_Income=4' ;
280674    +
280675    +      label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
280676    +
280677    +      label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
280678    +
280679    +      label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
280680    +
280681    +      label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
280682    +
280683    +      label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
280684    +
280685    +      label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
280686    +
280687    +      label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
280688    +
280689    +      label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
280690    +
280691    +      label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
280692    +
280693    +      label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
280694    +
280695    +      label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
280696    +
280697    +      label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
280698    +
280699    +      label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
280700    +
280701    +      label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
280702    +
280703    +      label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
280704    +
280705    +      label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
280706    +
280707    +      label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
280708    +
280709    +      label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
280710    +
280711    +      label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
280712    +
280713    +      label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
280714    +
280715    +      label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
280716    +
280717    +      label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
280718    +
280719    +      label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
280720    +
280721    +      label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
280722    +
280723    +      label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
280724    +
280725    +      label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
280726    +
280727    +      label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
280728    +
280729    +      label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
280730    +
280731    +      label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
280732    +
280733    +      label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
280734    +
280735    +      label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
280736    +
280737    +      label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
280738    +
280739    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
280740    +
280741    +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
280742    +
280743    +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
280744    +
280745    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
280746    +
280747    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
280748    +
280749    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
280750    +
280751    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
280752    +
280753    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
280754    +
280755    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
280756    +
280757    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
280758    +
280759    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
280760    +
280761    +*** Generate dummy variables for GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmp5 ;
280762    +drop GRP_AcceptedCmp52 ;
MPRINT(EM_DIAGRAM):   drop GRP_AcceptedCmp52 ;
280763    +if missing( GRP_AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmp5 ) then do;
280764    +   GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
280765    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
280766    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
280767    +end;
MPRINT(EM_DIAGRAM):   end;
280768    +else do;
MPRINT(EM_DIAGRAM):   else do;
280769    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
280770    +   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
280771    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
280772    +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
280773    +      GRP_AcceptedCmp52 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = 1;
280774    +   end;
MPRINT(EM_DIAGRAM):   end;
280775    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
280776    +      GRP_AcceptedCmp52 = -1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = -1;
280777    +   end;
MPRINT(EM_DIAGRAM):   end;
280778    +   else do;
MPRINT(EM_DIAGRAM):   else do;
280779    +      GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
280780    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
280781    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
280782    +   end;
MPRINT(EM_DIAGRAM):   end;
280783    +end;
MPRINT(EM_DIAGRAM):   end;
280784    +
280785    +*** Generate dummy variables for GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Frq ;
280786    +drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
280787    +if missing( GRP_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Frq ) then do;
280788    +   GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
280789    +   GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
280790    +   GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
280791    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
280792    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
280793    +end;
MPRINT(EM_DIAGRAM):   end;
280794    +else do;
MPRINT(EM_DIAGRAM):   else do;
280795    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
280796    +   _dm12 = put( GRP_Frq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Frq , BEST12. );
280797    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
280798    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
280799    +      GRP_Frq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = -1;
280800    +      GRP_Frq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = -1;
280801    +      GRP_Frq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = -1;
280802    +   end;
MPRINT(EM_DIAGRAM):   end;
280803    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
280804    +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
280805    +      GRP_Frq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 1;
280806    +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
280807    +   end;
MPRINT(EM_DIAGRAM):   end;
280808    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
280809    +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
280810    +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
280811    +      GRP_Frq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 1;
280812    +   end;
MPRINT(EM_DIAGRAM):   end;
280813    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
280814    +      GRP_Frq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 1;
280815    +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
280816    +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
280817    +   end;
MPRINT(EM_DIAGRAM):   end;
280818    +   else do;
MPRINT(EM_DIAGRAM):   else do;
280819    +      GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
280820    +      GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
280821    +      GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
280822    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
280823    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
280824    +   end;
MPRINT(EM_DIAGRAM):   end;
280825    +end;
MPRINT(EM_DIAGRAM):   end;
280826    +
280827    +*** Generate dummy variables for GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Income ;
280828    +drop GRP_Income2 GRP_Income3 GRP_Income4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Income2 GRP_Income3 GRP_Income4 ;
280829    +if missing( GRP_Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Income ) then do;
280830    +   GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
280831    +   GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
280832    +   GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
280833    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
280834    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
280835    +end;
MPRINT(EM_DIAGRAM):   end;
280836    +else do;
MPRINT(EM_DIAGRAM):   else do;
280837    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
280838    +   _dm12 = put( GRP_Income , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Income , BEST12. );
280839    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
280840    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
280841    +      GRP_Income2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = -1;
280842    +      GRP_Income3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = -1;
280843    +      GRP_Income4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = -1;
280844    +   end;
MPRINT(EM_DIAGRAM):   end;
280845    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
280846    +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
280847    +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
280848    +      GRP_Income4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 1;
280849    +   end;
MPRINT(EM_DIAGRAM):   end;
280850    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
280851    +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
280852    +      GRP_Income3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 1;
280853    +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
280854    +   end;
MPRINT(EM_DIAGRAM):   end;
280855    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
280856    +      GRP_Income2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 1;
280857    +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
280858    +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
280859    +   end;
MPRINT(EM_DIAGRAM):   end;
280860    +   else do;
MPRINT(EM_DIAGRAM):   else do;
280861    +      GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
280862    +      GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
280863    +      GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
280864    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
280865    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
280866    +   end;
MPRINT(EM_DIAGRAM):   end;
280867    +end;
MPRINT(EM_DIAGRAM):   end;
280868    +
280869    +*** Generate dummy variables for GRP_Mnt ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Mnt ;
280870    +drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
280871    +if missing( GRP_Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Mnt ) then do;
280872    +   GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
280873    +   GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
280874    +   GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
280875    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
280876    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
280877    +end;
MPRINT(EM_DIAGRAM):   end;
280878    +else do;
MPRINT(EM_DIAGRAM):   else do;
280879    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
280880    +   _dm12 = put( GRP_Mnt , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Mnt , BEST12. );
280881    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
280882    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
280883    +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
280884    +      GRP_Mnt3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 1;
280885    +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
280886    +   end;
MPRINT(EM_DIAGRAM):   end;
280887    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
280888    +      GRP_Mnt2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = -1;
280889    +      GRP_Mnt3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = -1;
280890    +      GRP_Mnt4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = -1;
280891    +   end;
MPRINT(EM_DIAGRAM):   end;
280892    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
280893    +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
280894    +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
280895    +      GRP_Mnt4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 1;
280896    +   end;
MPRINT(EM_DIAGRAM):   end;
280897    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
280898    +      GRP_Mnt2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 1;
280899    +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
280900    +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
280901    +   end;
MPRINT(EM_DIAGRAM):   end;
280902    +   else do;
MPRINT(EM_DIAGRAM):   else do;
280903    +      GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
280904    +      GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
280905    +      GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
280906    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
280907    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
280908    +   end;
MPRINT(EM_DIAGRAM):   end;
280909    +end;
MPRINT(EM_DIAGRAM):   end;
280910    +
280911    +*** Generate dummy variables for GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntFishProducts ;
280912    +drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
280913    +if missing( GRP_MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntFishProducts ) then do;
280914    +   GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
280915    +   GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
280916    +   GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
280917    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
280918    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
280919    +end;
MPRINT(EM_DIAGRAM):   end;
280920    +else do;
MPRINT(EM_DIAGRAM):   else do;
280921    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
280922    +   _dm12 = put( GRP_MntFishProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntFishProducts , BEST12. );
280923    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
280924    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
280925    +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
280926    +      GRP_MntFishProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 1;
280927    +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
280928    +   end;
MPRINT(EM_DIAGRAM):   end;
280929    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
280930    +      GRP_MntFishProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = -1;
280931    +      GRP_MntFishProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = -1;
280932    +      GRP_MntFishProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = -1;
280933    +   end;
MPRINT(EM_DIAGRAM):   end;
280934    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
280935    +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
280936    +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
280937    +      GRP_MntFishProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 1;
280938    +   end;
MPRINT(EM_DIAGRAM):   end;
280939    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
280940    +      GRP_MntFishProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 1;
280941    +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
280942    +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
280943    +   end;
MPRINT(EM_DIAGRAM):   end;
280944    +   else do;
MPRINT(EM_DIAGRAM):   else do;
280945    +      GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
280946    +      GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
280947    +      GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
280948    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
280949    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
280950    +   end;
MPRINT(EM_DIAGRAM):   end;
280951    +end;
MPRINT(EM_DIAGRAM):   end;
280952    +
280953    +*** Generate dummy variables for GRP_MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntGoldProds ;
280954    +drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
280955    +if missing( GRP_MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntGoldProds ) then do;
280956    +   GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
280957    +   GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
280958    +   GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
280959    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
280960    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
280961    +end;
MPRINT(EM_DIAGRAM):   end;
280962    +else do;
MPRINT(EM_DIAGRAM):   else do;
280963    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
280964    +   _dm12 = put( GRP_MntGoldProds , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntGoldProds , BEST12. );
280965    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
280966    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
280967    +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
280968    +      GRP_MntGoldProds3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 1;
280969    +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
280970    +   end;
MPRINT(EM_DIAGRAM):   end;
280971    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
280972    +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
280973    +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
280974    +      GRP_MntGoldProds4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 1;
280975    +   end;
MPRINT(EM_DIAGRAM):   end;
280976    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
280977    +      GRP_MntGoldProds2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = -1;
280978    +      GRP_MntGoldProds3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = -1;
280979    +      GRP_MntGoldProds4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = -1;
280980    +   end;
MPRINT(EM_DIAGRAM):   end;
280981    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
280982    +      GRP_MntGoldProds2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 1;
280983    +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
280984    +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
280985    +   end;
MPRINT(EM_DIAGRAM):   end;
280986    +   else do;
MPRINT(EM_DIAGRAM):   else do;
280987    +      GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
280988    +      GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
280989    +      GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
280990    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
280991    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
280992    +   end;
MPRINT(EM_DIAGRAM):   end;
280993    +end;
MPRINT(EM_DIAGRAM):   end;
280994    +
280995    +*** Generate dummy variables for GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntMeatProducts ;
280996    +drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
280997    +if missing( GRP_MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntMeatProducts ) then do;
280998    +   GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
280999    +   GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
281000    +   GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
281001    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
281002    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
281003    +end;
MPRINT(EM_DIAGRAM):   end;
281004    +else do;
MPRINT(EM_DIAGRAM):   else do;
281005    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
281006    +   _dm12 = put( GRP_MntMeatProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntMeatProducts , BEST12. );
281007    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
281008    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
281009    +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
281010    +      GRP_MntMeatProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 1;
281011    +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
281012    +   end;
MPRINT(EM_DIAGRAM):   end;
281013    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
281014    +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
281015    +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
281016    +      GRP_MntMeatProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 1;
281017    +   end;
MPRINT(EM_DIAGRAM):   end;
281018    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
281019    +      GRP_MntMeatProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = -1;
281020    +      GRP_MntMeatProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = -1;
281021    +      GRP_MntMeatProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = -1;
281022    +   end;
MPRINT(EM_DIAGRAM):   end;
281023    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
281024    +      GRP_MntMeatProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 1;
281025    +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
281026    +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
281027    +   end;
MPRINT(EM_DIAGRAM):   end;
281028    +   else do;
MPRINT(EM_DIAGRAM):   else do;
281029    +      GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
281030    +      GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
281031    +      GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
281032    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
281033    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
281034    +   end;
MPRINT(EM_DIAGRAM):   end;
281035    +end;
MPRINT(EM_DIAGRAM):   end;
281036    +
281037    +*** Generate dummy variables for GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntWines ;
281038    +drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
281039    +if missing( GRP_MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntWines ) then do;
281040    +   GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
281041    +   GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
281042    +   GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
281043    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
281044    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
281045    +end;
MPRINT(EM_DIAGRAM):   end;
281046    +else do;
MPRINT(EM_DIAGRAM):   else do;
281047    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
281048    +   _dm12 = put( GRP_MntWines , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntWines , BEST12. );
281049    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
281050    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
281051    +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
281052    +      GRP_MntWines3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 1;
281053    +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
281054    +   end;
MPRINT(EM_DIAGRAM):   end;
281055    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
281056    +      GRP_MntWines2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = -1;
281057    +      GRP_MntWines3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = -1;
281058    +      GRP_MntWines4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = -1;
281059    +   end;
MPRINT(EM_DIAGRAM):   end;
281060    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
281061    +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
281062    +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
281063    +      GRP_MntWines4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 1;
281064    +   end;
MPRINT(EM_DIAGRAM):   end;
281065    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
281066    +      GRP_MntWines2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 1;
281067    +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
281068    +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
281069    +   end;
MPRINT(EM_DIAGRAM):   end;
281070    +   else do;
MPRINT(EM_DIAGRAM):   else do;
281071    +      GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
281072    +      GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
281073    +      GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
281074    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
281075    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
281076    +   end;
MPRINT(EM_DIAGRAM):   end;
281077    +end;
MPRINT(EM_DIAGRAM):   end;
281078    +
281079    +*** Generate dummy variables for GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumCatalogPurchases ;
281080    +drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
281081    +if missing( GRP_NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumCatalogPurchases ) then do;
281082    +   GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
281083    +   GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
281084    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
281085    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
281086    +end;
MPRINT(EM_DIAGRAM):   end;
281087    +else do;
MPRINT(EM_DIAGRAM):   else do;
281088    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
281089    +   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
281090    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
281091    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
281092    +      GRP_NumCatalogPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 1;
281093    +      GRP_NumCatalogPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 0;
281094    +   end;
MPRINT(EM_DIAGRAM):   end;
281095    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
281096    +      GRP_NumCatalogPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = -1;
281097    +      GRP_NumCatalogPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = -1;
281098    +   end;
MPRINT(EM_DIAGRAM):   end;
281099    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
281100    +      GRP_NumCatalogPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 0;
281101    +      GRP_NumCatalogPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 1;
281102    +   end;
MPRINT(EM_DIAGRAM):   end;
281103    +   else do;
MPRINT(EM_DIAGRAM):   else do;
281104    +      GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
281105    +      GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
281106    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
281107    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
281108    +   end;
MPRINT(EM_DIAGRAM):   end;
281109    +end;
MPRINT(EM_DIAGRAM):   end;
281110    +
281111    +*** Generate dummy variables for GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumDistPurchases ;
281112    +drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
281113    +if missing( GRP_NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumDistPurchases ) then do;
281114    +   GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
281115    +   GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
281116    +   GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
281117    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
281118    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
281119    +end;
MPRINT(EM_DIAGRAM):   end;
281120    +else do;
MPRINT(EM_DIAGRAM):   else do;
281121    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
281122    +   _dm12 = put( GRP_NumDistPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumDistPurchases , BEST12. );
281123    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
281124    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
281125    +      GRP_NumDistPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = -1;
281126    +      GRP_NumDistPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = -1;
281127    +      GRP_NumDistPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = -1;
281128    +   end;
MPRINT(EM_DIAGRAM):   end;
281129    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
281130    +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
281131    +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
281132    +      GRP_NumDistPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 1;
281133    +   end;
MPRINT(EM_DIAGRAM):   end;
281134    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
281135    +      GRP_NumDistPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 1;
281136    +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
281137    +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
281138    +   end;
MPRINT(EM_DIAGRAM):   end;
281139    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
281140    +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
281141    +      GRP_NumDistPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 1;
281142    +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
281143    +   end;
MPRINT(EM_DIAGRAM):   end;
281144    +   else do;
MPRINT(EM_DIAGRAM):   else do;
281145    +      GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
281146    +      GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
281147    +      GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
281148    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
281149    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
281150    +   end;
MPRINT(EM_DIAGRAM):   end;
281151    +end;
MPRINT(EM_DIAGRAM):   end;
281152    +
281153    +*** Generate dummy variables for GRP_NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumWebPurchases ;
281154    +drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
281155    +if missing( GRP_NumWebPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumWebPurchases ) then do;
281156    +   GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
281157    +   GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
281158    +   GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
281159    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
281160    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
281161    +end;
MPRINT(EM_DIAGRAM):   end;
281162    +else do;
MPRINT(EM_DIAGRAM):   else do;
281163    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
281164    +   _dm12 = put( GRP_NumWebPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumWebPurchases , BEST12. );
281165    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
281166    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
281167    +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
281168    +      GRP_NumWebPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 1;
281169    +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
281170    +   end;
MPRINT(EM_DIAGRAM):   end;
281171    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
281172    +      GRP_NumWebPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = -1;
281173    +      GRP_NumWebPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = -1;
281174    +      GRP_NumWebPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = -1;
281175    +   end;
MPRINT(EM_DIAGRAM):   end;
281176    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
281177    +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
281178    +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
281179    +      GRP_NumWebPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 1;
281180    +   end;
MPRINT(EM_DIAGRAM):   end;
281181    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
281182    +      GRP_NumWebPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 1;
281183    +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
281184    +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
281185    +   end;
MPRINT(EM_DIAGRAM):   end;
281186    +   else do;
MPRINT(EM_DIAGRAM):   else do;
281187    +      GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
281188    +      GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
281189    +      GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
281190    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
281191    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
281192    +   end;
MPRINT(EM_DIAGRAM):   end;
281193    +end;
MPRINT(EM_DIAGRAM):   end;
281194    +
281195    +*** Generate dummy variables for GRP_RFMstat ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RFMstat ;
281196    +drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
281197    +if missing( GRP_RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RFMstat ) then do;
281198    +   GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
281199    +   GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
281200    +   GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
281201    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
281202    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
281203    +end;
MPRINT(EM_DIAGRAM):   end;
281204    +else do;
MPRINT(EM_DIAGRAM):   else do;
281205    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
281206    +   _dm12 = put( GRP_RFMstat , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RFMstat , BEST12. );
281207    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
281208    +   if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
281209    +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
281210    +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
281211    +      GRP_RFMstat4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 1;
281212    +   end;
MPRINT(EM_DIAGRAM):   end;
281213    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
281214    +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
281215    +      GRP_RFMstat3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 1;
281216    +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
281217    +   end;
MPRINT(EM_DIAGRAM):   end;
281218    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
281219    +      GRP_RFMstat2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = -1;
281220    +      GRP_RFMstat3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = -1;
281221    +      GRP_RFMstat4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = -1;
281222    +   end;
MPRINT(EM_DIAGRAM):   end;
281223    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
281224    +      GRP_RFMstat2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 1;
281225    +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
281226    +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
281227    +   end;
MPRINT(EM_DIAGRAM):   end;
281228    +   else do;
MPRINT(EM_DIAGRAM):   else do;
281229    +      GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
281230    +      GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
281231    +      GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
281232    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
281233    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
281234    +   end;
MPRINT(EM_DIAGRAM):   end;
281235    +end;
MPRINT(EM_DIAGRAM):   end;
281236    +
281237    +*** Generate dummy variables for GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RMntFrq ;
281238    +drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
281239    +if missing( GRP_RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RMntFrq ) then do;
281240    +   GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
281241    +   GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
281242    +   GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
281243    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
281244    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
281245    +end;
MPRINT(EM_DIAGRAM):   end;
281246    +else do;
MPRINT(EM_DIAGRAM):   else do;
281247    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
281248    +   _dm12 = put( GRP_RMntFrq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RMntFrq , BEST12. );
281249    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
281250    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
281251    +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
281252    +      GRP_RMntFrq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 1;
281253    +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
281254    +   end;
MPRINT(EM_DIAGRAM):   end;
281255    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
281256    +      GRP_RMntFrq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = -1;
281257    +      GRP_RMntFrq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = -1;
281258    +      GRP_RMntFrq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = -1;
281259    +   end;
MPRINT(EM_DIAGRAM):   end;
281260    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
281261    +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
281262    +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
281263    +      GRP_RMntFrq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 1;
281264    +   end;
MPRINT(EM_DIAGRAM):   end;
281265    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
281266    +      GRP_RMntFrq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 1;
281267    +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
281268    +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
281269    +   end;
MPRINT(EM_DIAGRAM):   end;
281270    +   else do;
MPRINT(EM_DIAGRAM):   else do;
281271    +      GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
281272    +      GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
281273    +      GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
281274    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
281275    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
281276    +   end;
MPRINT(EM_DIAGRAM):   end;
281277    +end;
MPRINT(EM_DIAGRAM):   end;
281278    +
281279    +*** Generate dummy variables for GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Recency ;
281280    +drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
281281    +if missing( GRP_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Recency ) then do;
281282    +   GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
281283    +   GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
281284    +   GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
281285    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
281286    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
281287    +end;
MPRINT(EM_DIAGRAM):   end;
281288    +else do;
MPRINT(EM_DIAGRAM):   else do;
281289    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
281290    +   _dm12 = put( GRP_Recency , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Recency , BEST12. );
281291    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
281292    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
281293    +      GRP_Recency2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = -1;
281294    +      GRP_Recency3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = -1;
281295    +      GRP_Recency4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = -1;
281296    +   end;
MPRINT(EM_DIAGRAM):   end;
281297    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
281298    +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
281299    +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
281300    +      GRP_Recency4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 1;
281301    +   end;
MPRINT(EM_DIAGRAM):   end;
281302    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
281303    +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
281304    +      GRP_Recency3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 1;
281305    +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
281306    +   end;
MPRINT(EM_DIAGRAM):   end;
281307    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
281308    +      GRP_Recency2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 1;
281309    +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
281310    +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
281311    +   end;
MPRINT(EM_DIAGRAM):   end;
281312    +   else do;
MPRINT(EM_DIAGRAM):   else do;
281313    +      GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
281314    +      GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
281315    +      GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
281316    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
281317    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
281318    +   end;
MPRINT(EM_DIAGRAM):   end;
281319    +end;
MPRINT(EM_DIAGRAM):   end;
281320    +
281321    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
281322    +*** Checking missing input Interval
281323    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
281324    +
281325    +IF NMISS(
281326    +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Year_Birth ) THEN DO;
281327    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
281328    +
281329    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
281330    +END;
MPRINT(EM_DIAGRAM):   END;
281331    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
281332    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
281333    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
281334    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
281335    +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
281336    +END;
MPRINT(EM_DIAGRAM):   END;
281337    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
281338    +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
281339    +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
281340    +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
281341    +END;
MPRINT(EM_DIAGRAM):   END;
281342    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
281343    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
281344    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
281345    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
281346    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
281347    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
281348    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
281349    +   H1x1_1  =     1.95381025032439 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.95381025032439 * S_Year_Birth ;
281350    +   H1x1_1  = H1x1_1  +     1.14916728016472 * GRP_AcceptedCmp52
281351    +          +    -5.96780006482557 * GRP_Frq2  +     4.49682337069914 * GRP_Frq3
281352    +          +    -1.00084168387427 * GRP_Frq4  +    -4.56848186498493 *
281353    +        GRP_Income2  +    -6.08290839556081 * GRP_Income3
281354    +          +        -1.9523756063 * GRP_Income4  +     2.25453632912582 *
281355    +        GRP_Mnt2  +     0.79226665009331 * GRP_Mnt3  +     4.62693684609359 *
281356    +        GRP_Mnt4  +     4.80720961994346 * GRP_MntFishProducts2
281357    +          +     5.98129040124117 * GRP_MntFishProducts3
281358    +          +    -7.67060692838644 * GRP_MntFishProducts4
281359    +          +    -2.17396725012949 * GRP_MntGoldProds2
281360    +          +     0.85597521158935 * GRP_MntGoldProds3
281361    +          +      2.1173332536462 * GRP_MntGoldProds4
281362    +          +     7.10141475402441 * GRP_MntMeatProducts2
281363    +          +     -4.9090455486088 * GRP_MntMeatProducts3
281364    +          +     2.83142638000959 * GRP_MntMeatProducts4
281365    +          +     3.69328975873193 * GRP_MntWines2  +      2.1695090110711 *
281366    +        GRP_MntWines3  +    -5.30256986722649 * GRP_MntWines4
281367    +          +     0.29736312872725 * GRP_NumCatalogPurchases3
281368    +          +     4.11382044060245 * GRP_NumCatalogPurchases4
281369    +          +    -6.25823764999595 * GRP_NumDistPurchases2
281370    +          +    -0.67901515881598 * GRP_NumDistPurchases3
281371    +          +     7.85932256128371 * GRP_NumDistPurchases4
281372    +          +     3.53767704202566 * GRP_NumWebPurchases2
281373    +          +    -6.48408913826017 * GRP_NumWebPurchases3
281374    +          +     4.25220646709256 * GRP_NumWebPurchases4
281375    +          +     1.52518398177008 * GRP_RFMstat2  +    -8.45537513058681 *
281376    +        GRP_RFMstat3  +      1.7628190243685 * GRP_RFMstat4
281377    +          +    -2.26342656707522 * GRP_RMntFrq2  +     0.15141321171269 *
281378    +        GRP_RMntFrq3  +     4.77478604851781 * GRP_RMntFrq4
281379    +          +     7.94049700164507 * GRP_Recency2  +     6.59302318386937 *
281380    +        GRP_Recency3  +    -1.94583979914797 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 1.14916728016472 * GRP_AcceptedCmp52 + 
-5.96780006482557 * GRP_Frq2 + 4.49682337069914 * GRP_Frq3 + -1.00084168387427 * GRP_Frq4 + 
-4.56848186498493 * GRP_Income2 + -6.08290839556081 * GRP_Income3 + -1.9523756063 * 
GRP_Income4 + 2.25453632912582 * GRP_Mnt2 + 0.79226665009331 * GRP_Mnt3 + 4.62693684609359 * 
GRP_Mnt4 + 4.80720961994346 * GRP_MntFishProducts2 + 5.98129040124117 * GRP_MntFishProducts3 + 
-7.67060692838644 * GRP_MntFishProducts4 + -2.17396725012949 * GRP_MntGoldProds2 + 
0.85597521158935 * GRP_MntGoldProds3 + 2.1173332536462 * GRP_MntGoldProds4 + 7.10141475402441 
* GRP_MntMeatProducts2 + -4.9090455486088 * GRP_MntMeatProducts3 + 2.83142638000959 * 
GRP_MntMeatProducts4 + 3.69328975873193 * GRP_MntWines2 + 2.1695090110711 * GRP_MntWines3 + 
-5.30256986722649 * GRP_MntWines4 + 0.29736312872725 * GRP_NumCatalogPurchases3 + 
4.11382044060245 * GRP_NumCatalogPurchases4 + -6.25823764999595 * GRP_NumDistPurchases2 + 
-0.67901515881598 * GRP_NumDistPurchases3 + 7.85932256128371 * GRP_NumDistPurchases4 + 
3.53767704202566 * GRP_NumWebPurchases2 + -6.48408913826017 * GRP_NumWebPurchases3 + 
4.25220646709256 * GRP_NumWebPurchases4 + 1.52518398177008 * GRP_RFMstat2 + -8.45537513058681 
* GRP_RFMstat3 + 1.7628190243685 * GRP_RFMstat4 + -2.26342656707522 * GRP_RMntFrq2 + 
0.15141321171269 * GRP_RMntFrq3 + 4.77478604851781 * GRP_RMntFrq4 + 7.94049700164507 * 
GRP_Recency2 + 6.59302318386937 * GRP_Recency3 + -1.94583979914797 * GRP_Recency4 ;
281381    +   H1x1_1  =     0.17797650232548 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.17797650232548 + H1x1_1 ;
281382    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
281383    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
281384    +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
281385    +END;
MPRINT(EM_DIAGRAM):   END;
281386    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
281387    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
281388    +END;
MPRINT(EM_DIAGRAM):   END;
281389    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
281390    +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
281391    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
281392    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
281393    +   H1x2_1  =     -0.4803749248586 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.4803749248586 * S_Year_Birth ;
281394    +   H1x2_1  = H1x2_1  +      -2.709334396045 * GRP_AcceptedCmp52
281395    +          +    -0.72996008627086 * GRP_Frq2  +     1.18917091356785 * GRP_Frq3
281396    +          +    -0.84357839249772 * GRP_Frq4  +    -1.34210240870748 *
281397    +        GRP_Income2  +    -2.49305097670051 * GRP_Income3
281398    +          +     0.47903160451188 * GRP_Income4  +    -0.21389782834045 *
281399    +        GRP_Mnt2  +    -2.96981107340783 * GRP_Mnt3  +     0.25136923781697 *
281400    +        GRP_Mnt4  +    -1.77015468345115 * GRP_MntFishProducts2
281401    +          +    -2.01927730228967 * GRP_MntFishProducts3
281402    +          +    -1.75480602447555 * GRP_MntFishProducts4
281403    +          +     0.42274303160257 * GRP_MntGoldProds2
281404    +          +     1.56137884413542 * GRP_MntGoldProds3
281405    +          +     0.84731732911707 * GRP_MntGoldProds4
281406    +          +     0.81025189254107 * GRP_MntMeatProducts2
281407    +          +     1.96319534444801 * GRP_MntMeatProducts3
281408    +          +     0.96127142865074 * GRP_MntMeatProducts4
281409    +          +    -0.93806166213097 * GRP_MntWines2  +     0.05312243237158 *
281410    +        GRP_MntWines3  +     0.84972126175769 * GRP_MntWines4
281411    +          +    -1.06178615974842 * GRP_NumCatalogPurchases3
281412    +          +     0.40580399494511 * GRP_NumCatalogPurchases4
281413    +          +      0.0678513615184 * GRP_NumDistPurchases2
281414    +          +     0.02437151967393 * GRP_NumDistPurchases3
281415    +          +     0.69402606373719 * GRP_NumDistPurchases4
281416    +          +       0.411121097653 * GRP_NumWebPurchases2
281417    +          +     0.82481677575773 * GRP_NumWebPurchases3
281418    +          +     1.41988866790215 * GRP_NumWebPurchases4
281419    +          +     0.85026610914091 * GRP_RFMstat2  +    -2.24707947369438 *
281420    +        GRP_RFMstat3  +     -1.1790000875996 * GRP_RFMstat4
281421    +          +     0.87106199482984 * GRP_RMntFrq2  +    -0.83130886232946 *
281422    +        GRP_RMntFrq3  +    -0.14994298443333 * GRP_RMntFrq4
281423    +          +      0.4148069318585 * GRP_Recency2  +     1.81524210481359 *
281424    +        GRP_Recency3  +    -0.14279288009067 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -2.709334396045 * GRP_AcceptedCmp52 + 
-0.72996008627086 * GRP_Frq2 + 1.18917091356785 * GRP_Frq3 + -0.84357839249772 * GRP_Frq4 + 
-1.34210240870748 * GRP_Income2 + -2.49305097670051 * GRP_Income3 + 0.47903160451188 * 
GRP_Income4 + -0.21389782834045 * GRP_Mnt2 + -2.96981107340783 * GRP_Mnt3 + 0.25136923781697 * 
GRP_Mnt4 + -1.77015468345115 * GRP_MntFishProducts2 + -2.01927730228967 * GRP_MntFishProducts3 
+ -1.75480602447555 * GRP_MntFishProducts4 + 0.42274303160257 * GRP_MntGoldProds2 + 
1.56137884413542 * GRP_MntGoldProds3 + 0.84731732911707 * GRP_MntGoldProds4 + 0.81025189254107 
* GRP_MntMeatProducts2 + 1.96319534444801 * GRP_MntMeatProducts3 + 0.96127142865074 * 
GRP_MntMeatProducts4 + -0.93806166213097 * GRP_MntWines2 + 0.05312243237158 * GRP_MntWines3 + 
0.84972126175769 * GRP_MntWines4 + -1.06178615974842 * GRP_NumCatalogPurchases3 + 
0.40580399494511 * GRP_NumCatalogPurchases4 + 0.0678513615184 * GRP_NumDistPurchases2 + 
0.02437151967393 * GRP_NumDistPurchases3 + 0.69402606373719 * GRP_NumDistPurchases4 + 
0.411121097653 * GRP_NumWebPurchases2 + 0.82481677575773 * GRP_NumWebPurchases3 + 
1.41988866790215 * GRP_NumWebPurchases4 + 0.85026610914091 * GRP_RFMstat2 + -2.24707947369438 
* GRP_RFMstat3 + -1.1790000875996 * GRP_RFMstat4 + 0.87106199482984 * GRP_RMntFrq2 + 
-0.83130886232946 * GRP_RMntFrq3 + -0.14994298443333 * GRP_RMntFrq4 + 0.4148069318585 * 
GRP_Recency2 + 1.81524210481359 * GRP_Recency3 + -0.14279288009067 * GRP_Recency4 ;
281425    +   H1x2_1  =    -1.10844381917328 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -1.10844381917328 + H1x2_1 ;
281426    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
281427    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
281428    +   H1x2_1  = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
281429    +END;
MPRINT(EM_DIAGRAM):   END;
281430    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
281431    +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
281432    +END;
MPRINT(EM_DIAGRAM):   END;
281433    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
281434    +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
281435    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
281436    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
281437    +   H2x1_1  =    -4.35637031258639 * H1x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -4.35637031258639 * H1x1_1 ;
281438    +   H2x1_1  = H2x1_1  +    -3.33687841316643 * H1x2_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -3.33687841316643 * H1x2_1 ;
281439    +   H2x1_1  =     3.05963926783565 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 3.05963926783565 + H2x1_1 ;
281440    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
281441    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
281442    +   H2x1_1  = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
281443    +END;
MPRINT(EM_DIAGRAM):   END;
281444    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
281445    +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
281446    +END;
MPRINT(EM_DIAGRAM):   END;
281447    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
281448    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
281449    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
281450    +
281451    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
281452    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
281453    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
281454    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
281455    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
281456    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
281457    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
281458    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
281459    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
281460    +end;
MPRINT(EM_DIAGRAM):   end;
281461    +else do;
MPRINT(EM_DIAGRAM):   else do;
281462    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
281463    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
281464    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
281465    +   end;
MPRINT(EM_DIAGRAM):   end;
281466    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
281467    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
281468    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
281469    +   end;
MPRINT(EM_DIAGRAM):   end;
281470    +   else do;
MPRINT(EM_DIAGRAM):   else do;
281471    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
281472    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
281473    +   end;
MPRINT(EM_DIAGRAM):   end;
281474    +end;
MPRINT(EM_DIAGRAM):   end;
281475    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
281476    +   P_DepVar1  =    -6.02136211154727 * H2x1_1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -6.02136211154727 * H2x1_1 ;
281477    +   P_DepVar1  =     0.37595575621801 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.37595575621801 + P_DepVar1 ;
281478    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
281479    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
281480    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
281481    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
281482    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
281483    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
281484    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
281485    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
281486    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
281487    +END;
MPRINT(EM_DIAGRAM):   END;
281488    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
281489    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
281490    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
281491    +END;
MPRINT(EM_DIAGRAM):   END;
281492    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
281493    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
281494    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
281495    +END;
MPRINT(EM_DIAGRAM):   END;
281496    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
281497    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
281498    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
281499    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
281500    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
281501    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
281502    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
281503    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
281504    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
281505    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
281506    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
281507    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
281508    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
281509    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
281510    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
281511    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
281512    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
281513    +END;
MPRINT(EM_DIAGRAM):   END;
281514    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
281515    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
281516    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
281517    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
281518    +* Renaming variables for AutoNeural23;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural23;
281519    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
281520    +* Renaming Posterior variables for AutoNeural23;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural23;
281521    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
281522    +drop AutoNeural23_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural23_P_DepVar1;
281523    +AutoNeural23_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural23_P_DepVar1 = P_DepVar1;
281524    +drop AutoNeural23_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural23_P_DepVar0;
281525    +AutoNeural23_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural23_P_DepVar0 = P_DepVar0;
281526    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
281527    +* Renaming Into variables for AutoNeural23;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for AutoNeural23;
281528    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
281529    +length AutoNeural23_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length AutoNeural23_I_DepVar $32;
281530    +drop AutoNeural23_I_DepVar;
MPRINT(EM_DIAGRAM):   drop AutoNeural23_I_DepVar;
281531    +AutoNeural23_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   AutoNeural23_I_DepVar = I_DepVar;
281532    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
281533    +* Renaming _WARN_ variable for AutoNeural23;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural23;
281534    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
281535    +length AutoNeural23_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural23_WARN_ $4;
281536    +drop AutoNeural23_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural23_WARN_;
281537    +AutoNeural23_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural23_WARN_ = _WARN_;
281538    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
281539    +* Ensmbl50: Voting to produce predicted target;
MPRINT(EM_DIAGRAM):   * Ensmbl50: Voting to produce predicted target;
281540    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
281541    +array Ensmbl50_post{2} _temporary_;
MPRINT(EM_DIAGRAM):   array Ensmbl50_post{2} _temporary_;
281542    +array Ensmbl50_count{2} _temporary_;
MPRINT(EM_DIAGRAM):   array Ensmbl50_count{2} _temporary_;
281543    +array Ensmbl50_level{2} $32 _temporary_ (
281544    +"1"
281545    +"0"
281546    +);
MPRINT(EM_DIAGRAM):   array Ensmbl50_level{2} $32 _temporary_ ( "1" "0" );
281547    +do i=1 to 2;
MPRINT(EM_DIAGRAM):   do i=1 to 2;
281548    +Ensmbl50_post{i} = 0;
MPRINT(EM_DIAGRAM):   Ensmbl50_post{i} = 0;
281549    +Ensmbl50_count{i} = 0;
MPRINT(EM_DIAGRAM):   Ensmbl50_count{i} = 0;
281550    +end;
MPRINT(EM_DIAGRAM):   end;
281551    +if AutoNeural24_I_DepVar = Ensmbl50_level{1} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural24_I_DepVar = Ensmbl50_level{1} then do;
281552    +Ensmbl50_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl50_count{1} + 1;
281553    +Ensmbl50_post{1}=Ensmbl50_post{1}+ AutoNeural24_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl50_post{1}=Ensmbl50_post{1}+ AutoNeural24_P_DepVar1;
281554    +end;
MPRINT(EM_DIAGRAM):   end;
281555    +if AutoNeural22_I_DepVar = Ensmbl50_level{1} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural22_I_DepVar = Ensmbl50_level{1} then do;
281556    +Ensmbl50_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl50_count{1} + 1;
281557    +Ensmbl50_post{1}=Ensmbl50_post{1}+ AutoNeural22_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl50_post{1}=Ensmbl50_post{1}+ AutoNeural22_P_DepVar1;
281558    +end;
MPRINT(EM_DIAGRAM):   end;
281559    +if AutoNeural21_I_DepVar = Ensmbl50_level{1} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural21_I_DepVar = Ensmbl50_level{1} then do;
281560    +Ensmbl50_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl50_count{1} + 1;
281561    +Ensmbl50_post{1}=Ensmbl50_post{1}+ AutoNeural21_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl50_post{1}=Ensmbl50_post{1}+ AutoNeural21_P_DepVar1;
281562    +end;
MPRINT(EM_DIAGRAM):   end;
281563    +if AutoNeural20_I_DepVar = Ensmbl50_level{1} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural20_I_DepVar = Ensmbl50_level{1} then do;
281564    +Ensmbl50_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl50_count{1} + 1;
281565    +Ensmbl50_post{1}=Ensmbl50_post{1}+ AutoNeural20_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl50_post{1}=Ensmbl50_post{1}+ AutoNeural20_P_DepVar1;
281566    +end;
MPRINT(EM_DIAGRAM):   end;
281567    +if AutoNeural26_I_DepVar = Ensmbl50_level{1} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural26_I_DepVar = Ensmbl50_level{1} then do;
281568    +Ensmbl50_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl50_count{1} + 1;
281569    +Ensmbl50_post{1}=Ensmbl50_post{1}+ AutoNeural26_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl50_post{1}=Ensmbl50_post{1}+ AutoNeural26_P_DepVar1;
281570    +end;
MPRINT(EM_DIAGRAM):   end;
281571    +if AutoNeural25_I_DepVar = Ensmbl50_level{1} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural25_I_DepVar = Ensmbl50_level{1} then do;
281572    +Ensmbl50_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl50_count{1} + 1;
281573    +Ensmbl50_post{1}=Ensmbl50_post{1}+ AutoNeural25_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl50_post{1}=Ensmbl50_post{1}+ AutoNeural25_P_DepVar1;
281574    +end;
MPRINT(EM_DIAGRAM):   end;
281575    +if AutoNeural23_I_DepVar = Ensmbl50_level{1} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural23_I_DepVar = Ensmbl50_level{1} then do;
281576    +Ensmbl50_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl50_count{1} + 1;
281577    +Ensmbl50_post{1}=Ensmbl50_post{1}+ AutoNeural23_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl50_post{1}=Ensmbl50_post{1}+ AutoNeural23_P_DepVar1;
281578    +end;
MPRINT(EM_DIAGRAM):   end;
281579    +if AutoNeural24_I_DepVar = Ensmbl50_level{2} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural24_I_DepVar = Ensmbl50_level{2} then do;
281580    +Ensmbl50_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl50_count{2} + 1;
281581    +Ensmbl50_post{2}=Ensmbl50_post{2}+ AutoNeural24_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl50_post{2}=Ensmbl50_post{2}+ AutoNeural24_P_DepVar0;
281582    +end;
MPRINT(EM_DIAGRAM):   end;
281583    +if AutoNeural22_I_DepVar = Ensmbl50_level{2} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural22_I_DepVar = Ensmbl50_level{2} then do;
281584    +Ensmbl50_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl50_count{2} + 1;
281585    +Ensmbl50_post{2}=Ensmbl50_post{2}+ AutoNeural22_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl50_post{2}=Ensmbl50_post{2}+ AutoNeural22_P_DepVar0;
281586    +end;
MPRINT(EM_DIAGRAM):   end;
281587    +if AutoNeural21_I_DepVar = Ensmbl50_level{2} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural21_I_DepVar = Ensmbl50_level{2} then do;
281588    +Ensmbl50_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl50_count{2} + 1;
281589    +Ensmbl50_post{2}=Ensmbl50_post{2}+ AutoNeural21_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl50_post{2}=Ensmbl50_post{2}+ AutoNeural21_P_DepVar0;
281590    +end;
MPRINT(EM_DIAGRAM):   end;
281591    +if AutoNeural20_I_DepVar = Ensmbl50_level{2} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural20_I_DepVar = Ensmbl50_level{2} then do;
281592    +Ensmbl50_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl50_count{2} + 1;
281593    +Ensmbl50_post{2}=Ensmbl50_post{2}+ AutoNeural20_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl50_post{2}=Ensmbl50_post{2}+ AutoNeural20_P_DepVar0;
281594    +end;
MPRINT(EM_DIAGRAM):   end;
281595    +if AutoNeural26_I_DepVar = Ensmbl50_level{2} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural26_I_DepVar = Ensmbl50_level{2} then do;
281596    +Ensmbl50_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl50_count{2} + 1;
281597    +Ensmbl50_post{2}=Ensmbl50_post{2}+ AutoNeural26_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl50_post{2}=Ensmbl50_post{2}+ AutoNeural26_P_DepVar0;
281598    +end;
MPRINT(EM_DIAGRAM):   end;
281599    +if AutoNeural25_I_DepVar = Ensmbl50_level{2} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural25_I_DepVar = Ensmbl50_level{2} then do;
281600    +Ensmbl50_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl50_count{2} + 1;
281601    +Ensmbl50_post{2}=Ensmbl50_post{2}+ AutoNeural25_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl50_post{2}=Ensmbl50_post{2}+ AutoNeural25_P_DepVar0;
281602    +end;
MPRINT(EM_DIAGRAM):   end;
281603    +if AutoNeural23_I_DepVar = Ensmbl50_level{2} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural23_I_DepVar = Ensmbl50_level{2} then do;
281604    +Ensmbl50_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl50_count{2} + 1;
281605    +Ensmbl50_post{2}=Ensmbl50_post{2}+ AutoNeural23_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl50_post{2}=Ensmbl50_post{2}+ AutoNeural23_P_DepVar0;
281606    +end;
MPRINT(EM_DIAGRAM):   end;
281607    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
281608    +* Ensmbl50: Determine Into Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl50: Determine Into Variable;
281609    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
281610    +length I_DepVar $32;
MPRINT(EM_DIAGRAM):   length I_DepVar $32;
WARNING: Length of character variable I_DepVar has already been set. 
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the 
         length of a character variable.
281611    +drop i vote_count vote_post;
MPRINT(EM_DIAGRAM):   drop i vote_count vote_post;
281612    +vote_count = max(
281613    +Ensmbl50_count{1} ,
281614    +Ensmbl50_count{2}
281615    +);
MPRINT(EM_DIAGRAM):   vote_count = max( Ensmbl50_count{1} , Ensmbl50_count{2} );
281616    +do i=1 to 2;
MPRINT(EM_DIAGRAM):   do i=1 to 2;
281617    +if Ensmbl50_count{i}=vote_count and Ensmbl50_post{i}>vote_post then do;
MPRINT(EM_DIAGRAM):   if Ensmbl50_count{i}=vote_count and Ensmbl50_post{i}>vote_post then do;
281618    +I_DepVar = Ensmbl50_level{i};
MPRINT(EM_DIAGRAM):   I_DepVar = Ensmbl50_level{i};
281619    +vote_post = Ensmbl50_count{i};
MPRINT(EM_DIAGRAM):   vote_post = Ensmbl50_count{i};
281620    +end;
MPRINT(EM_DIAGRAM):   end;
281621    +end;
MPRINT(EM_DIAGRAM):   end;
281622    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
281623    +* Ensmbl50: Compute posterior vars using models predicting the chosen level;
MPRINT(EM_DIAGRAM):   * Ensmbl50: Compute posterior vars using models predicting the chosen 
level;
281624    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
281625    +P_DepVar1 = 0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0;
281626    +P_DepVar0 = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
281627    +if I_DepVar = AutoNeural24_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = AutoNeural24_I_DepVar then do;
281628    +P_DEPVAR1 = P_DEPVAR1 + AutoNeural24_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + AutoNeural24_P_DepVar1;
281629    +P_DEPVAR0 = P_DEPVAR0 + AutoNeural24_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + AutoNeural24_P_DepVar0;
281630    +end;
MPRINT(EM_DIAGRAM):   end;
281631    +if I_DepVar = AutoNeural22_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = AutoNeural22_I_DepVar then do;
281632    +P_DEPVAR1 = P_DEPVAR1 + AutoNeural22_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + AutoNeural22_P_DepVar1;
281633    +P_DEPVAR0 = P_DEPVAR0 + AutoNeural22_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + AutoNeural22_P_DepVar0;
281634    +end;
MPRINT(EM_DIAGRAM):   end;
281635    +if I_DepVar = AutoNeural21_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = AutoNeural21_I_DepVar then do;
281636    +P_DEPVAR1 = P_DEPVAR1 + AutoNeural21_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + AutoNeural21_P_DepVar1;
281637    +P_DEPVAR0 = P_DEPVAR0 + AutoNeural21_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + AutoNeural21_P_DepVar0;
281638    +end;
MPRINT(EM_DIAGRAM):   end;
281639    +if I_DepVar = AutoNeural20_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = AutoNeural20_I_DepVar then do;
281640    +P_DEPVAR1 = P_DEPVAR1 + AutoNeural20_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + AutoNeural20_P_DepVar1;
281641    +P_DEPVAR0 = P_DEPVAR0 + AutoNeural20_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + AutoNeural20_P_DepVar0;
281642    +end;
MPRINT(EM_DIAGRAM):   end;
281643    +if I_DepVar = AutoNeural26_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = AutoNeural26_I_DepVar then do;
281644    +P_DEPVAR1 = P_DEPVAR1 + AutoNeural26_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + AutoNeural26_P_DepVar1;
281645    +P_DEPVAR0 = P_DEPVAR0 + AutoNeural26_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + AutoNeural26_P_DepVar0;
281646    +end;
MPRINT(EM_DIAGRAM):   end;
281647    +if I_DepVar = AutoNeural25_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = AutoNeural25_I_DepVar then do;
281648    +P_DEPVAR1 = P_DEPVAR1 + AutoNeural25_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + AutoNeural25_P_DepVar1;
281649    +P_DEPVAR0 = P_DEPVAR0 + AutoNeural25_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + AutoNeural25_P_DepVar0;
281650    +end;
MPRINT(EM_DIAGRAM):   end;
281651    +if I_DepVar = AutoNeural23_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = AutoNeural23_I_DepVar then do;
281652    +P_DEPVAR1 = P_DEPVAR1 + AutoNeural23_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + AutoNeural23_P_DepVar1;
281653    +P_DEPVAR0 = P_DEPVAR0 + AutoNeural23_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + AutoNeural23_P_DepVar0;
281654    +end;
MPRINT(EM_DIAGRAM):   end;
281655    +* Ensmbl50: Averaging posterior;
MPRINT(EM_DIAGRAM):   * Ensmbl50: Averaging posterior;
281656    +P_DepVar1 = P_DepVar1/vote_count;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1/vote_count;
281657    +P_DepVar0 = P_DepVar0/vote_count;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0/vote_count;
281658    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
281659    +* Ensmbl50: Producing Unformatted variable;
MPRINT(EM_DIAGRAM):   * Ensmbl50: Producing Unformatted variable;
281660    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
281661    +label U_DepVar = "Unnormalized Into: DepVar";
MPRINT(EM_DIAGRAM):   label U_DepVar = "Unnormalized Into: DepVar";
281662    +if I_DepVar = '1' then U_DepVar = 1;
MPRINT(EM_DIAGRAM):   if I_DepVar = '1' then U_DepVar = 1;
281663    +else
281664    +if I_DepVar = '0' then U_DepVar = 0;
MPRINT(EM_DIAGRAM):   else if I_DepVar = '0' then U_DepVar = 0;
281665    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
281666    +* Ensmbl50: Computing _WARN_ Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl50: Computing _WARN_ Variable;
281667    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
281668    +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
281669    +label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
281670    +_WARN_ = '';
MPRINT(EM_DIAGRAM):   _WARN_ = '';
281671    +if index(AUTONEURAL24_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
281671   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL24_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
281672    +if index(AUTONEURAL24_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
281672   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL24_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
281673    +if index(AUTONEURAL24_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
281673   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL24_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
281674    +if index(AUTONEURAL24_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
281674   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL24_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
281675    +if index(AUTONEURAL22_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
281675   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL22_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
281676    +if index(AUTONEURAL22_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
281676   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL22_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
281677    +if index(AUTONEURAL22_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
281677   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL22_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
281678    +if index(AUTONEURAL22_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
281678   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL22_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
281679    +if index(AUTONEURAL21_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
281679   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL21_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
281680    +if index(AUTONEURAL21_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
281680   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL21_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
281681    +if index(AUTONEURAL21_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
281681   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL21_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
281682    +if index(AUTONEURAL21_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
281682   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL21_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
281683    +if index(AUTONEURAL20_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
281683   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL20_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
281684    +if index(AUTONEURAL20_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
281684   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL20_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
281685    +if index(AUTONEURAL20_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
281685   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL20_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
281686    +if index(AUTONEURAL20_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
281686   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL20_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
281687    +if index(AUTONEURAL26_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
281687   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL26_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
281688    +if index(AUTONEURAL26_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
281688   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL26_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
281689    +if index(AUTONEURAL26_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
281689   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL26_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
281690    +if index(AUTONEURAL26_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
281690   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL26_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
281691    +if index(AUTONEURAL25_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
281691   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL25_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
281692    +if index(AUTONEURAL25_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
281692   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL25_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
281693    +if index(AUTONEURAL25_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
281693   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL25_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
281694    +if index(AUTONEURAL25_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
281694   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL25_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
281695    +if index(AUTONEURAL23_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
281695   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL23_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
281696    +if index(AUTONEURAL23_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
281696   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL23_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
281697    +if index(AUTONEURAL23_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
281697   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL23_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
281698    +if index(AUTONEURAL23_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
281698   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL23_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
281699    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
281700    +* Ensmbl50: Computing Residual Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl50: Computing Residual Vars;
281701    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
281702    +if
281703    +F_DepVar NE '1'
281704    +AND F_DepVar NE '0'
281705    +then do;
MPRINT(EM_DIAGRAM):   if F_DepVar NE '1' AND F_DepVar NE '0' then do;
281706    +R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
281707    +R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
281708    +end;
MPRINT(EM_DIAGRAM):   end;
281709    +else do;
MPRINT(EM_DIAGRAM):   else do;
281710    +R_DepVar1 = -P_DepVar1;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1;
281711    +R_DepVar0 = -P_DepVar0;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0;
281712    +SELECT(F_DepVar);
MPRINT(EM_DIAGRAM):   SELECT(F_DepVar);
281713    +WHEN('1') R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   WHEN('1') R_DepVar1 = R_DepVar1 +1;
281714    +WHEN('0') R_DepVar0 = R_DepVar0 +1;
MPRINT(EM_DIAGRAM):   WHEN('0') R_DepVar0 = R_DepVar0 +1;
281715    +OTHERWISE;
MPRINT(EM_DIAGRAM):   OTHERWISE;
281716    +END;
MPRINT(EM_DIAGRAM):   END;
281717    +END;
MPRINT(EM_DIAGRAM):   END;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
281718     run;

NOTE: DATA STEP view saved on file EMWS8.ENSMBL50_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.AUTONEURAL24_VALIDATE.VIEW used (Total process time):
      real time           0.22 seconds
      cpu time            0.23 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.24 seconds
      cpu time            0.24 seconds
      

MPRINT(EM_DIAGRAM):   quit;
281719     quit;
281720     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
MPRINT(EM_DIAGRAM):   
MPRINT(CALFITSTATSNOMINAL):   data _tmpTrainFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_ 
_RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS8.Ensmbl50_TRAIN end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_ 
_WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Train: Target Variable" _NOBS_= "Train: Sum of 
Frequencies" _SSE_= "Train: Sum of Squared Errors" _MAX_= "Train: Maximum Absolute Error" 
_DIV_ = "Train: Divisor for ASE" _WRONG_= "Train: Number of Wrong Classifications" _DISF_= 
"Train: Frequency of Classified Cases" _MISC_= "Train: Misclassification Rate" _ASE_ = "Train: 
Average Squared Error" _RASE_ = "Train: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_ 
_RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar ne "" then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl50_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set _tmpTrainFitTable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   
MPRINT(CALFITSTATSNOMINAL):   data _tmpValidFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_ 
_RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS8.Ensmbl50_VALIDATE end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_ 
_WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Valid: Target Variable" _NOBS_= "Valid: Sum of 
Frequencies" _SSE_= "Valid: Sum of Squared Errors" _MAX_= "Valid: Maximum Absolute Error" 
_DIV_ = "Valid: Divisor for ASE" _WRONG_= "Valid: Number of Wrong Classifications" _DISF_= 
"Valid: Frequency of Classified Cases" _MISC_= "Valid: Misclassification Rate" _ASE_ = "Valid: 
Average Squared Error" _RASE_ = "Valid: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_ 
_RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar ne "" then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _tmpdata_(DROP= TARGET);
MPRINT(EM_DIAGRAM):   set _tmpValidFitTable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _tmpdata_;
MPRINT(EM_DIAGRAM):   set _tmpdata_;
MPRINT(EM_DIAGRAM):   rename _ASE_=_VASE_;
MPRINT(EM_DIAGRAM):   rename _DIV_=_VDIV_;
MPRINT(EM_DIAGRAM):   rename _MAX_=_VMAX_;
MPRINT(EM_DIAGRAM):   rename _NOBS_=_VNOBS_;
MPRINT(EM_DIAGRAM):   rename _RASE_=_VRASE_;
MPRINT(EM_DIAGRAM):   rename _SSE_=_VSSE_;
MPRINT(EM_DIAGRAM):   rename _DISF_=_VDISF_;
MPRINT(EM_DIAGRAM):   rename _MISC_=_VMISC_;
MPRINT(EM_DIAGRAM):   rename _WRONG_=_VWRONG_;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl50_EMOUTFIT;
MPRINT(EM_DIAGRAM):   merge EMWS8.Ensmbl50_EMOUTFIT _tmpdata_;
MPRINT(EM_DIAGRAM):   run;
281780     filename _pref
281780   ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural24\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural24\EMPUBLISHSCORE.sas";
281781     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
281782     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural24\EMPUBLISHSCORE.sas.
281783    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
281784    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
281785    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
281786    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
281787    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
281788    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
281789    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
281790    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
281791    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
281792    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
281793    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
281794    +LENGTH _WARN_ $4
281795    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
281796    +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
281797    +
281798    +      label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
MPRINT(EM_DIAGRAM):   label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
281799    +
281800    +      label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
281801    +
281802    +      label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
281803    +
281804    +      label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
281805    +
281806    +      label GRP_Income2 = 'Dummy: GRP_Income=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Income2 = 'Dummy: GRP_Income=2' ;
281807    +
281808    +      label GRP_Income3 = 'Dummy: GRP_Income=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Income3 = 'Dummy: GRP_Income=3' ;
281809    +
281810    +      label GRP_Income4 = 'Dummy: GRP_Income=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Income4 = 'Dummy: GRP_Income=4' ;
281811    +
281812    +      label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
281813    +
281814    +      label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
281815    +
281816    +      label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
281817    +
281818    +      label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
281819    +
281820    +      label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
281821    +
281822    +      label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
281823    +
281824    +      label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
281825    +
281826    +      label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
281827    +
281828    +      label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
281829    +
281830    +      label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
281831    +
281832    +      label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
281833    +
281834    +      label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
281835    +
281836    +      label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
281837    +
281838    +      label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
281839    +
281840    +      label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
281841    +
281842    +      label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
281843    +
281844    +      label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
281845    +
281846    +      label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
281847    +
281848    +      label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
281849    +
281850    +      label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
281851    +
281852    +      label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
281853    +
281854    +      label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
281855    +
281856    +      label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
281857    +
281858    +      label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
281859    +
281860    +      label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
281861    +
281862    +      label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
281863    +
281864    +      label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
281865    +
281866    +      label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
281867    +
281868    +      label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
281869    +
281870    +      label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
281871    +
281872    +      label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
281873    +
281874    +      label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
281875    +
281876    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
281877    +
281878    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
281879    +
281880    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
281881    +
281882    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
281883    +
281884    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
281885    +
281886    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
281887    +
281888    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
281889    +
281890    +*** Generate dummy variables for GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmp5 ;
281891    +drop GRP_AcceptedCmp52 ;
MPRINT(EM_DIAGRAM):   drop GRP_AcceptedCmp52 ;
281892    +if missing( GRP_AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmp5 ) then do;
281893    +   GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
281894    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
281895    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
281896    +end;
MPRINT(EM_DIAGRAM):   end;
281897    +else do;
MPRINT(EM_DIAGRAM):   else do;
281898    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
281899    +   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
281900    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
281901    +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
281902    +      GRP_AcceptedCmp52 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = 1;
281903    +   end;
MPRINT(EM_DIAGRAM):   end;
281904    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
281905    +      GRP_AcceptedCmp52 = -1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = -1;
281906    +   end;
MPRINT(EM_DIAGRAM):   end;
281907    +   else do;
MPRINT(EM_DIAGRAM):   else do;
281908    +      GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
281909    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
281910    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
281911    +   end;
MPRINT(EM_DIAGRAM):   end;
281912    +end;
MPRINT(EM_DIAGRAM):   end;
281913    +
281914    +*** Generate dummy variables for GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Frq ;
281915    +drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
281916    +if missing( GRP_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Frq ) then do;
281917    +   GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
281918    +   GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
281919    +   GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
281920    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
281921    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
281922    +end;
MPRINT(EM_DIAGRAM):   end;
281923    +else do;
MPRINT(EM_DIAGRAM):   else do;
281924    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
281925    +   _dm12 = put( GRP_Frq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Frq , BEST12. );
281926    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
281927    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
281928    +      GRP_Frq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = -1;
281929    +      GRP_Frq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = -1;
281930    +      GRP_Frq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = -1;
281931    +   end;
MPRINT(EM_DIAGRAM):   end;
281932    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
281933    +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
281934    +      GRP_Frq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 1;
281935    +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
281936    +   end;
MPRINT(EM_DIAGRAM):   end;
281937    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
281938    +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
281939    +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
281940    +      GRP_Frq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 1;
281941    +   end;
MPRINT(EM_DIAGRAM):   end;
281942    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
281943    +      GRP_Frq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 1;
281944    +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
281945    +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
281946    +   end;
MPRINT(EM_DIAGRAM):   end;
281947    +   else do;
MPRINT(EM_DIAGRAM):   else do;
281948    +      GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
281949    +      GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
281950    +      GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
281951    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
281952    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
281953    +   end;
MPRINT(EM_DIAGRAM):   end;
281954    +end;
MPRINT(EM_DIAGRAM):   end;
281955    +
281956    +*** Generate dummy variables for GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Income ;
281957    +drop GRP_Income2 GRP_Income3 GRP_Income4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Income2 GRP_Income3 GRP_Income4 ;
281958    +if missing( GRP_Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Income ) then do;
281959    +   GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
281960    +   GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
281961    +   GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
281962    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
281963    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
281964    +end;
MPRINT(EM_DIAGRAM):   end;
281965    +else do;
MPRINT(EM_DIAGRAM):   else do;
281966    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
281967    +   _dm12 = put( GRP_Income , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Income , BEST12. );
281968    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
281969    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
281970    +      GRP_Income2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = -1;
281971    +      GRP_Income3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = -1;
281972    +      GRP_Income4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = -1;
281973    +   end;
MPRINT(EM_DIAGRAM):   end;
281974    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
281975    +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
281976    +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
281977    +      GRP_Income4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 1;
281978    +   end;
MPRINT(EM_DIAGRAM):   end;
281979    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
281980    +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
281981    +      GRP_Income3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 1;
281982    +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
281983    +   end;
MPRINT(EM_DIAGRAM):   end;
281984    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
281985    +      GRP_Income2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 1;
281986    +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
281987    +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
281988    +   end;
MPRINT(EM_DIAGRAM):   end;
281989    +   else do;
MPRINT(EM_DIAGRAM):   else do;
281990    +      GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
281991    +      GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
281992    +      GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
281993    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
281994    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
281995    +   end;
MPRINT(EM_DIAGRAM):   end;
281996    +end;
MPRINT(EM_DIAGRAM):   end;
281997    +
281998    +*** Generate dummy variables for GRP_Mnt ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Mnt ;
281999    +drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
282000    +if missing( GRP_Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Mnt ) then do;
282001    +   GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
282002    +   GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
282003    +   GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
282004    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
282005    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
282006    +end;
MPRINT(EM_DIAGRAM):   end;
282007    +else do;
MPRINT(EM_DIAGRAM):   else do;
282008    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
282009    +   _dm12 = put( GRP_Mnt , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Mnt , BEST12. );
282010    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
282011    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
282012    +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
282013    +      GRP_Mnt3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 1;
282014    +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
282015    +   end;
MPRINT(EM_DIAGRAM):   end;
282016    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
282017    +      GRP_Mnt2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = -1;
282018    +      GRP_Mnt3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = -1;
282019    +      GRP_Mnt4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = -1;
282020    +   end;
MPRINT(EM_DIAGRAM):   end;
282021    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
282022    +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
282023    +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
282024    +      GRP_Mnt4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 1;
282025    +   end;
MPRINT(EM_DIAGRAM):   end;
282026    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
282027    +      GRP_Mnt2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 1;
282028    +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
282029    +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
282030    +   end;
MPRINT(EM_DIAGRAM):   end;
282031    +   else do;
MPRINT(EM_DIAGRAM):   else do;
282032    +      GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
282033    +      GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
282034    +      GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
282035    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
282036    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
282037    +   end;
MPRINT(EM_DIAGRAM):   end;
282038    +end;
MPRINT(EM_DIAGRAM):   end;
282039    +
282040    +*** Generate dummy variables for GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntFishProducts ;
282041    +drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
282042    +if missing( GRP_MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntFishProducts ) then do;
282043    +   GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
282044    +   GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
282045    +   GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
282046    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
282047    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
282048    +end;
MPRINT(EM_DIAGRAM):   end;
282049    +else do;
MPRINT(EM_DIAGRAM):   else do;
282050    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
282051    +   _dm12 = put( GRP_MntFishProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntFishProducts , BEST12. );
282052    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
282053    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
282054    +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
282055    +      GRP_MntFishProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 1;
282056    +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
282057    +   end;
MPRINT(EM_DIAGRAM):   end;
282058    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
282059    +      GRP_MntFishProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = -1;
282060    +      GRP_MntFishProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = -1;
282061    +      GRP_MntFishProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = -1;
282062    +   end;
MPRINT(EM_DIAGRAM):   end;
282063    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
282064    +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
282065    +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
282066    +      GRP_MntFishProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 1;
282067    +   end;
MPRINT(EM_DIAGRAM):   end;
282068    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
282069    +      GRP_MntFishProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 1;
282070    +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
282071    +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
282072    +   end;
MPRINT(EM_DIAGRAM):   end;
282073    +   else do;
MPRINT(EM_DIAGRAM):   else do;
282074    +      GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
282075    +      GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
282076    +      GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
282077    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
282078    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
282079    +   end;
MPRINT(EM_DIAGRAM):   end;
282080    +end;
MPRINT(EM_DIAGRAM):   end;
282081    +
282082    +*** Generate dummy variables for GRP_MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntGoldProds ;
282083    +drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
282084    +if missing( GRP_MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntGoldProds ) then do;
282085    +   GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
282086    +   GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
282087    +   GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
282088    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
282089    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
282090    +end;
MPRINT(EM_DIAGRAM):   end;
282091    +else do;
MPRINT(EM_DIAGRAM):   else do;
282092    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
282093    +   _dm12 = put( GRP_MntGoldProds , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntGoldProds , BEST12. );
282094    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
282095    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
282096    +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
282097    +      GRP_MntGoldProds3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 1;
282098    +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
282099    +   end;
MPRINT(EM_DIAGRAM):   end;
282100    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
282101    +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
282102    +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
282103    +      GRP_MntGoldProds4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 1;
282104    +   end;
MPRINT(EM_DIAGRAM):   end;
282105    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
282106    +      GRP_MntGoldProds2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = -1;
282107    +      GRP_MntGoldProds3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = -1;
282108    +      GRP_MntGoldProds4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = -1;
282109    +   end;
MPRINT(EM_DIAGRAM):   end;
282110    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
282111    +      GRP_MntGoldProds2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 1;
282112    +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
282113    +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
282114    +   end;
MPRINT(EM_DIAGRAM):   end;
282115    +   else do;
MPRINT(EM_DIAGRAM):   else do;
282116    +      GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
282117    +      GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
282118    +      GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
282119    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
282120    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
282121    +   end;
MPRINT(EM_DIAGRAM):   end;
282122    +end;
MPRINT(EM_DIAGRAM):   end;
282123    +
282124    +*** Generate dummy variables for GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntMeatProducts ;
282125    +drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
282126    +if missing( GRP_MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntMeatProducts ) then do;
282127    +   GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
282128    +   GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
282129    +   GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
282130    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
282131    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
282132    +end;
MPRINT(EM_DIAGRAM):   end;
282133    +else do;
MPRINT(EM_DIAGRAM):   else do;
282134    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
282135    +   _dm12 = put( GRP_MntMeatProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntMeatProducts , BEST12. );
282136    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
282137    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
282138    +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
282139    +      GRP_MntMeatProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 1;
282140    +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
282141    +   end;
MPRINT(EM_DIAGRAM):   end;
282142    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
282143    +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
282144    +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
282145    +      GRP_MntMeatProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 1;
282146    +   end;
MPRINT(EM_DIAGRAM):   end;
282147    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
282148    +      GRP_MntMeatProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = -1;
282149    +      GRP_MntMeatProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = -1;
282150    +      GRP_MntMeatProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = -1;
282151    +   end;
MPRINT(EM_DIAGRAM):   end;
282152    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
282153    +      GRP_MntMeatProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 1;
282154    +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
282155    +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
282156    +   end;
MPRINT(EM_DIAGRAM):   end;
282157    +   else do;
MPRINT(EM_DIAGRAM):   else do;
282158    +      GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
282159    +      GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
282160    +      GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
282161    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
282162    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
282163    +   end;
MPRINT(EM_DIAGRAM):   end;
282164    +end;
MPRINT(EM_DIAGRAM):   end;
282165    +
282166    +*** Generate dummy variables for GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntWines ;
282167    +drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
282168    +if missing( GRP_MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntWines ) then do;
282169    +   GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
282170    +   GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
282171    +   GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
282172    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
282173    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
282174    +end;
MPRINT(EM_DIAGRAM):   end;
282175    +else do;
MPRINT(EM_DIAGRAM):   else do;
282176    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
282177    +   _dm12 = put( GRP_MntWines , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntWines , BEST12. );
282178    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
282179    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
282180    +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
282181    +      GRP_MntWines3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 1;
282182    +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
282183    +   end;
MPRINT(EM_DIAGRAM):   end;
282184    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
282185    +      GRP_MntWines2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = -1;
282186    +      GRP_MntWines3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = -1;
282187    +      GRP_MntWines4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = -1;
282188    +   end;
MPRINT(EM_DIAGRAM):   end;
282189    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
282190    +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
282191    +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
282192    +      GRP_MntWines4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 1;
282193    +   end;
MPRINT(EM_DIAGRAM):   end;
282194    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
282195    +      GRP_MntWines2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 1;
282196    +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
282197    +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
282198    +   end;
MPRINT(EM_DIAGRAM):   end;
282199    +   else do;
MPRINT(EM_DIAGRAM):   else do;
282200    +      GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
282201    +      GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
282202    +      GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
282203    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
282204    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
282205    +   end;
MPRINT(EM_DIAGRAM):   end;
282206    +end;
MPRINT(EM_DIAGRAM):   end;
282207    +
282208    +*** Generate dummy variables for GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumCatalogPurchases ;
282209    +drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
282210    +if missing( GRP_NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumCatalogPurchases ) then do;
282211    +   GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
282212    +   GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
282213    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
282214    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
282215    +end;
MPRINT(EM_DIAGRAM):   end;
282216    +else do;
MPRINT(EM_DIAGRAM):   else do;
282217    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
282218    +   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
282219    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
282220    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
282221    +      GRP_NumCatalogPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 1;
282222    +      GRP_NumCatalogPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 0;
282223    +   end;
MPRINT(EM_DIAGRAM):   end;
282224    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
282225    +      GRP_NumCatalogPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = -1;
282226    +      GRP_NumCatalogPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = -1;
282227    +   end;
MPRINT(EM_DIAGRAM):   end;
282228    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
282229    +      GRP_NumCatalogPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 0;
282230    +      GRP_NumCatalogPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 1;
282231    +   end;
MPRINT(EM_DIAGRAM):   end;
282232    +   else do;
MPRINT(EM_DIAGRAM):   else do;
282233    +      GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
282234    +      GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
282235    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
282236    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
282237    +   end;
MPRINT(EM_DIAGRAM):   end;
282238    +end;
MPRINT(EM_DIAGRAM):   end;
282239    +
282240    +*** Generate dummy variables for GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumDistPurchases ;
282241    +drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
282242    +if missing( GRP_NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumDistPurchases ) then do;
282243    +   GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
282244    +   GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
282245    +   GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
282246    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
282247    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
282248    +end;
MPRINT(EM_DIAGRAM):   end;
282249    +else do;
MPRINT(EM_DIAGRAM):   else do;
282250    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
282251    +   _dm12 = put( GRP_NumDistPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumDistPurchases , BEST12. );
282252    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
282253    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
282254    +      GRP_NumDistPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = -1;
282255    +      GRP_NumDistPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = -1;
282256    +      GRP_NumDistPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = -1;
282257    +   end;
MPRINT(EM_DIAGRAM):   end;
282258    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
282259    +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
282260    +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
282261    +      GRP_NumDistPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 1;
282262    +   end;
MPRINT(EM_DIAGRAM):   end;
282263    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
282264    +      GRP_NumDistPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 1;
282265    +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
282266    +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
282267    +   end;
MPRINT(EM_DIAGRAM):   end;
282268    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
282269    +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
282270    +      GRP_NumDistPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 1;
282271    +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
282272    +   end;
MPRINT(EM_DIAGRAM):   end;
282273    +   else do;
MPRINT(EM_DIAGRAM):   else do;
282274    +      GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
282275    +      GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
282276    +      GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
282277    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
282278    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
282279    +   end;
MPRINT(EM_DIAGRAM):   end;
282280    +end;
MPRINT(EM_DIAGRAM):   end;
282281    +
282282    +*** Generate dummy variables for GRP_NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumWebPurchases ;
282283    +drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
282284    +if missing( GRP_NumWebPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumWebPurchases ) then do;
282285    +   GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
282286    +   GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
282287    +   GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
282288    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
282289    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
282290    +end;
MPRINT(EM_DIAGRAM):   end;
282291    +else do;
MPRINT(EM_DIAGRAM):   else do;
282292    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
282293    +   _dm12 = put( GRP_NumWebPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumWebPurchases , BEST12. );
282294    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
282295    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
282296    +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
282297    +      GRP_NumWebPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 1;
282298    +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
282299    +   end;
MPRINT(EM_DIAGRAM):   end;
282300    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
282301    +      GRP_NumWebPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = -1;
282302    +      GRP_NumWebPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = -1;
282303    +      GRP_NumWebPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = -1;
282304    +   end;
MPRINT(EM_DIAGRAM):   end;
282305    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
282306    +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
282307    +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
282308    +      GRP_NumWebPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 1;
282309    +   end;
MPRINT(EM_DIAGRAM):   end;
282310    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
282311    +      GRP_NumWebPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 1;
282312    +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
282313    +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
282314    +   end;
MPRINT(EM_DIAGRAM):   end;
282315    +   else do;
MPRINT(EM_DIAGRAM):   else do;
282316    +      GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
282317    +      GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
282318    +      GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
282319    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
282320    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
282321    +   end;
MPRINT(EM_DIAGRAM):   end;
282322    +end;
MPRINT(EM_DIAGRAM):   end;
282323    +
282324    +*** Generate dummy variables for GRP_RFMstat ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RFMstat ;
282325    +drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
282326    +if missing( GRP_RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RFMstat ) then do;
282327    +   GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
282328    +   GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
282329    +   GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
282330    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
282331    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
282332    +end;
MPRINT(EM_DIAGRAM):   end;
282333    +else do;
MPRINT(EM_DIAGRAM):   else do;
282334    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
282335    +   _dm12 = put( GRP_RFMstat , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RFMstat , BEST12. );
282336    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
282337    +   if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
282338    +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
282339    +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
282340    +      GRP_RFMstat4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 1;
282341    +   end;
MPRINT(EM_DIAGRAM):   end;
282342    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
282343    +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
282344    +      GRP_RFMstat3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 1;
282345    +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
282346    +   end;
MPRINT(EM_DIAGRAM):   end;
282347    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
282348    +      GRP_RFMstat2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = -1;
282349    +      GRP_RFMstat3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = -1;
282350    +      GRP_RFMstat4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = -1;
282351    +   end;
MPRINT(EM_DIAGRAM):   end;
282352    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
282353    +      GRP_RFMstat2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 1;
282354    +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
282355    +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
282356    +   end;
MPRINT(EM_DIAGRAM):   end;
282357    +   else do;
MPRINT(EM_DIAGRAM):   else do;
282358    +      GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
282359    +      GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
282360    +      GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
282361    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
282362    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
282363    +   end;
MPRINT(EM_DIAGRAM):   end;
282364    +end;
MPRINT(EM_DIAGRAM):   end;
282365    +
282366    +*** Generate dummy variables for GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RMntFrq ;
282367    +drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
282368    +if missing( GRP_RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RMntFrq ) then do;
282369    +   GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
282370    +   GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
282371    +   GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
282372    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
282373    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
282374    +end;
MPRINT(EM_DIAGRAM):   end;
282375    +else do;
MPRINT(EM_DIAGRAM):   else do;
282376    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
282377    +   _dm12 = put( GRP_RMntFrq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RMntFrq , BEST12. );
282378    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
282379    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
282380    +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
282381    +      GRP_RMntFrq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 1;
282382    +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
282383    +   end;
MPRINT(EM_DIAGRAM):   end;
282384    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
282385    +      GRP_RMntFrq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = -1;
282386    +      GRP_RMntFrq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = -1;
282387    +      GRP_RMntFrq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = -1;
282388    +   end;
MPRINT(EM_DIAGRAM):   end;
282389    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
282390    +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
282391    +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
282392    +      GRP_RMntFrq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 1;
282393    +   end;
MPRINT(EM_DIAGRAM):   end;
282394    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
282395    +      GRP_RMntFrq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 1;
282396    +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
282397    +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
282398    +   end;
MPRINT(EM_DIAGRAM):   end;
282399    +   else do;
MPRINT(EM_DIAGRAM):   else do;
282400    +      GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
282401    +      GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
282402    +      GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
282403    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
282404    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
282405    +   end;
MPRINT(EM_DIAGRAM):   end;
282406    +end;
MPRINT(EM_DIAGRAM):   end;
282407    +
282408    +*** Generate dummy variables for GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Recency ;
282409    +drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
282410    +if missing( GRP_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Recency ) then do;
282411    +   GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
282412    +   GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
282413    +   GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
282414    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
282415    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
282416    +end;
MPRINT(EM_DIAGRAM):   end;
282417    +else do;
MPRINT(EM_DIAGRAM):   else do;
282418    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
282419    +   _dm12 = put( GRP_Recency , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Recency , BEST12. );
282420    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
282421    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
282422    +      GRP_Recency2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = -1;
282423    +      GRP_Recency3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = -1;
282424    +      GRP_Recency4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = -1;
282425    +   end;
MPRINT(EM_DIAGRAM):   end;
282426    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
282427    +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
282428    +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
282429    +      GRP_Recency4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 1;
282430    +   end;
MPRINT(EM_DIAGRAM):   end;
282431    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
282432    +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
282433    +      GRP_Recency3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 1;
282434    +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
282435    +   end;
MPRINT(EM_DIAGRAM):   end;
282436    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
282437    +      GRP_Recency2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 1;
282438    +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
282439    +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
282440    +   end;
MPRINT(EM_DIAGRAM):   end;
282441    +   else do;
MPRINT(EM_DIAGRAM):   else do;
282442    +      GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
282443    +      GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
282444    +      GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
282445    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
282446    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
282447    +   end;
MPRINT(EM_DIAGRAM):   end;
282448    +end;
MPRINT(EM_DIAGRAM):   end;
282449    +
282450    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
282451    +*** Checking missing input Interval
282452    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
282453    +
282454    +IF NMISS(
282455    +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Year_Birth ) THEN DO;
282456    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
282457    +
282458    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
282459    +END;
MPRINT(EM_DIAGRAM):   END;
282460    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
282461    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
282462    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
282463    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
282464    +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
282465    +END;
MPRINT(EM_DIAGRAM):   END;
282466    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
282467    +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
282468    +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
282469    +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
282470    +END;
MPRINT(EM_DIAGRAM):   END;
282471    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
282472    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
282473    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
282474    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
282475    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
282476    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
282477    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
282478    +   H1x1_1  =    -1.98556205049158 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.98556205049158 * S_Year_Birth ;
282479    +   H1x1_2  =     2.65003203246915 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 2.65003203246915 * S_Year_Birth ;
282480    +   H1x1_1  = H1x1_1  +    -0.05712043872213 * GRP_AcceptedCmp52
282481    +          +     1.04378756398945 * GRP_Frq2  +     1.53971794568749 * GRP_Frq3
282482    +          +     1.46006856973709 * GRP_Frq4  +    -0.56202924907336 *
282483    +        GRP_Income2  +     4.72191701616365 * GRP_Income3
282484    +          +    -2.66170280222507 * GRP_Income4  +     0.01753317277737 *
282485    +        GRP_Mnt2  +    -3.49161842568046 * GRP_Mnt3  +    -2.05166246350112 *
282486    +        GRP_Mnt4  +     3.42363704603021 * GRP_MntFishProducts2
282487    +          +     4.07177263196201 * GRP_MntFishProducts3
282488    +          +    -0.95758193346069 * GRP_MntFishProducts4
282489    +          +     0.27642218349221 * GRP_MntGoldProds2
282490    +          +    -1.85260255304992 * GRP_MntGoldProds3
282491    +          +      0.0084996256166 * GRP_MntGoldProds4
282492    +          +     1.78769069128312 * GRP_MntMeatProducts2
282493    +          +    -5.09868822425716 * GRP_MntMeatProducts3
282494    +          +     -1.2944400003238 * GRP_MntMeatProducts4
282495    +          +     2.16310510520522 * GRP_MntWines2  +    -0.98848869719513 *
282496    +        GRP_MntWines3  +     0.37628412350279 * GRP_MntWines4
282497    +          +    -0.18399160398973 * GRP_NumCatalogPurchases3
282498    +          +     2.78149370347513 * GRP_NumCatalogPurchases4
282499    +          +    -1.92842775798726 * GRP_NumDistPurchases2
282500    +          +     1.36617128431309 * GRP_NumDistPurchases3
282501    +          +    -5.04459399151701 * GRP_NumDistPurchases4
282502    +          +    -3.10131336282255 * GRP_NumWebPurchases2
282503    +          +    -1.70853531086832 * GRP_NumWebPurchases3
282504    +          +    -1.81576465350843 * GRP_NumWebPurchases4
282505    +          +     0.97448188440932 * GRP_RFMstat2  +    -1.74164713551138 *
282506    +        GRP_RFMstat3  +    -1.61869970889612 * GRP_RFMstat4
282507    +          +     0.94148483345045 * GRP_RMntFrq2  +    -4.61928796757469 *
282508    +        GRP_RMntFrq3  +    -0.29552475494224 * GRP_RMntFrq4
282509    +          +     0.59385679636573 * GRP_Recency2  +    -0.70804337284842 *
282510    +        GRP_Recency3  +     2.46935358022796 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.05712043872213 * GRP_AcceptedCmp52 + 
1.04378756398945 * GRP_Frq2 + 1.53971794568749 * GRP_Frq3 + 1.46006856973709 * GRP_Frq4 + 
-0.56202924907336 * GRP_Income2 + 4.72191701616365 * GRP_Income3 + -2.66170280222507 * 
GRP_Income4 + 0.01753317277737 * GRP_Mnt2 + -3.49161842568046 * GRP_Mnt3 + -2.05166246350112 * 
GRP_Mnt4 + 3.42363704603021 * GRP_MntFishProducts2 + 4.07177263196201 * GRP_MntFishProducts3 + 
-0.95758193346069 * GRP_MntFishProducts4 + 0.27642218349221 * GRP_MntGoldProds2 + 
-1.85260255304992 * GRP_MntGoldProds3 + 0.0084996256166 * GRP_MntGoldProds4 + 1.78769069128312 
* GRP_MntMeatProducts2 + -5.09868822425716 * GRP_MntMeatProducts3 + -1.2944400003238 * 
GRP_MntMeatProducts4 + 2.16310510520522 * GRP_MntWines2 + -0.98848869719513 * GRP_MntWines3 + 
0.37628412350279 * GRP_MntWines4 + -0.18399160398973 * GRP_NumCatalogPurchases3 + 
2.78149370347513 * GRP_NumCatalogPurchases4 + -1.92842775798726 * GRP_NumDistPurchases2 + 
1.36617128431309 * GRP_NumDistPurchases3 + -5.04459399151701 * GRP_NumDistPurchases4 + 
-3.10131336282255 * GRP_NumWebPurchases2 + -1.70853531086832 * GRP_NumWebPurchases3 + 
-1.81576465350843 * GRP_NumWebPurchases4 + 0.97448188440932 * GRP_RFMstat2 + -1.74164713551138 
* GRP_RFMstat3 + -1.61869970889612 * GRP_RFMstat4 + 0.94148483345045 * GRP_RMntFrq2 + 
-4.61928796757469 * GRP_RMntFrq3 + -0.29552475494224 * GRP_RMntFrq4 + 0.59385679636573 * 
GRP_Recency2 + -0.70804337284842 * GRP_Recency3 + 2.46935358022796 * GRP_Recency4 ;
282511    +   H1x1_2  = H1x1_2  +    -2.86061192932804 * GRP_AcceptedCmp52
282512    +          +    -2.37847197829836 * GRP_Frq2  +     3.04126084255177 * GRP_Frq3
282513    +          +    -2.25316213708692 * GRP_Frq4  +    -2.15230505920585 *
282514    +        GRP_Income2  +     0.22423161350469 * GRP_Income3
282515    +          +     1.82470653064149 * GRP_Income4  +     0.91426377324604 *
282516    +        GRP_Mnt2  +    -2.52824414988744 * GRP_Mnt3  +     1.25821903076482 *
282517    +        GRP_Mnt4  +     2.48215495303599 * GRP_MntFishProducts2
282518    +          +    -2.53912545896945 * GRP_MntFishProducts3
282519    +          +    -1.24420085467004 * GRP_MntFishProducts4
282520    +          +     0.87589074104426 * GRP_MntGoldProds2
282521    +          +     2.05825939506076 * GRP_MntGoldProds3
282522    +          +     4.54187777951066 * GRP_MntGoldProds4
282523    +          +     1.73194182769876 * GRP_MntMeatProducts2
282524    +          +    -0.50494075731675 * GRP_MntMeatProducts3
282525    +          +    -1.24502732975278 * GRP_MntMeatProducts4
282526    +          +     1.29208460321632 * GRP_MntWines2  +     0.29717301998256 *
282527    +        GRP_MntWines3  +    -0.62672710631427 * GRP_MntWines4
282528    +          +     1.35492499749641 * GRP_NumCatalogPurchases3
282529    +          +    -0.16024517906179 * GRP_NumCatalogPurchases4
282530    +          +     1.86677407552405 * GRP_NumDistPurchases2
282531    +          +     -0.7331940643207 * GRP_NumDistPurchases3
282532    +          +     1.69990326910684 * GRP_NumDistPurchases4
282533    +          +     2.43176299986254 * GRP_NumWebPurchases2
282534    +          +    -2.13772911466858 * GRP_NumWebPurchases3
282535    +          +    -4.73478753166791 * GRP_NumWebPurchases4
282536    +          +     2.64399780173577 * GRP_RFMstat2  +    -3.62336346056054 *
282537    +        GRP_RFMstat3  +    -3.18363324824984 * GRP_RFMstat4
282538    +          +     3.46796006062254 * GRP_RMntFrq2  +    -0.59973905875633 *
282539    +        GRP_RMntFrq3  +    -1.07300094897005 * GRP_RMntFrq4
282540    +          +     1.65131957040649 * GRP_Recency2  +     2.60583794046673 *
282541    +        GRP_Recency3  +    -1.61296974687132 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -2.86061192932804 * GRP_AcceptedCmp52 + 
-2.37847197829836 * GRP_Frq2 + 3.04126084255177 * GRP_Frq3 + -2.25316213708692 * GRP_Frq4 + 
-2.15230505920585 * GRP_Income2 + 0.22423161350469 * GRP_Income3 + 1.82470653064149 * 
GRP_Income4 + 0.91426377324604 * GRP_Mnt2 + -2.52824414988744 * GRP_Mnt3 + 1.25821903076482 * 
GRP_Mnt4 + 2.48215495303599 * GRP_MntFishProducts2 + -2.53912545896945 * GRP_MntFishProducts3 
+ -1.24420085467004 * GRP_MntFishProducts4 + 0.87589074104426 * GRP_MntGoldProds2 + 
2.05825939506076 * GRP_MntGoldProds3 + 4.54187777951066 * GRP_MntGoldProds4 + 1.73194182769876 
* GRP_MntMeatProducts2 + -0.50494075731675 * GRP_MntMeatProducts3 + -1.24502732975278 * 
GRP_MntMeatProducts4 + 1.29208460321632 * GRP_MntWines2 + 0.29717301998256 * GRP_MntWines3 + 
-0.62672710631427 * GRP_MntWines4 + 1.35492499749641 * GRP_NumCatalogPurchases3 + 
-0.16024517906179 * GRP_NumCatalogPurchases4 + 1.86677407552405 * GRP_NumDistPurchases2 + 
-0.7331940643207 * GRP_NumDistPurchases3 + 1.69990326910684 * GRP_NumDistPurchases4 + 
2.43176299986254 * GRP_NumWebPurchases2 + -2.13772911466858 * GRP_NumWebPurchases3 + 
-4.73478753166791 * GRP_NumWebPurchases4 + 2.64399780173577 * GRP_RFMstat2 + -3.62336346056054 
* GRP_RFMstat3 + -3.18363324824984 * GRP_RFMstat4 + 3.46796006062254 * GRP_RMntFrq2 + 
-0.59973905875633 * GRP_RMntFrq3 + -1.07300094897005 * GRP_RMntFrq4 + 1.65131957040649 * 
GRP_Recency2 + 2.60583794046673 * GRP_Recency3 + -1.61296974687132 * GRP_Recency4 ;
282542    +   H1x1_1  =     2.45115906330524 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 2.45115906330524 + H1x1_1 ;
282543    +   H1x1_2  =     4.73081202118604 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 4.73081202118604 + H1x1_2 ;
282544    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
282545    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
282546    +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
282547    +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
282548    +END;
MPRINT(EM_DIAGRAM):   END;
282549    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
282550    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
282551    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
282552    +END;
MPRINT(EM_DIAGRAM):   END;
282553    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
282554    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
282555    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
282556    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
282557    +   P_DepVar1  =      4.0196958449291 * H1x1_1  +    -3.12785763420985 * H1x1_2
282558    +         ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 4.0196958449291 * H1x1_1 + -3.12785763420985 * H1x1_2 ;
282559    +   P_DepVar1  =    -2.56231918790427 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.56231918790427 + P_DepVar1 ;
282560    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
282561    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
282562    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
282563    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
282564    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
282565    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
282566    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
282567    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
282568    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
282569    +END;
MPRINT(EM_DIAGRAM):   END;
282570    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
282571    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
282572    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
282573    +END;
MPRINT(EM_DIAGRAM):   END;
282574    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
282575    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
282576    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
282577    +END;
MPRINT(EM_DIAGRAM):   END;
282578    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
282579    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
282580    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
282581    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
282582    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
282583    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
282584    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
282585    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
282586    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
282587    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
282588    +END;
MPRINT(EM_DIAGRAM):   END;
282589    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
282590    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
282591    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
282592    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
282593     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_DIAGRAM):   quit;
282594     quit;
282595     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
282596     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
282597     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
282598     retain ID 2 Node "AutoNeural24";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural24";
282599     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
282600     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1597 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1597 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

282601     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
282602     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
282603     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1597 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1597 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

282604     proc sort data=EMWS8.AutoNeural24_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural24_variableset out=_temp2(keep=NAME 
CREATOR);
282605     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
282606     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 48 observations read from the data set EMWS8.AUTONEURAL24_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 48 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

282607     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
282608     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
282609     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
282610     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 48 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 48 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

282611     proc contents data=EMWS8.AutoNeural24_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural24_train out=_meta(keep=NAME) noprint;
282612     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 69 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

282613     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
282614     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
282615     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 69 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 69 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

282616     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
282617     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
282618     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
282619     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 69 observations read from the data set WORK._META.
NOTE: There were 48 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 69 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

282620     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
282621     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
282621   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 874 rows and 5 columns.

282622     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

282623     proc append base=EMWS8.Ensmbl50_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl50_FCMP data=_tempx;
282624     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL50_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 874 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL50_FCMP has 874 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

282625     filename _pref
282625   ! "C:\\predictive-models-project\Workspaces\EMWS8\BINNING\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\BINNING\EMPUBLISHSCORE.sas";
282626     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
282627     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\BINNING\EMPUBLISHSCORE.sas.
282628    +length _UFormat $200;
MPRINT(EM_DIAGRAM):   length _UFormat $200;
282629    +drop _UFormat;
MPRINT(EM_DIAGRAM):   drop _UFormat;
282630    +_UFormat='';
MPRINT(EM_DIAGRAM):   _UFormat='';
282631    +
282632    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
282633    +* Variable: AcceptedCmp5;
MPRINT(EM_DIAGRAM):   * Variable: AcceptedCmp5;
282634    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
282635    +LABEL GRP_AcceptedCmp5 =
282636    +'Grouped: AcceptedCmp5';
MPRINT(EM_DIAGRAM):   LABEL GRP_AcceptedCmp5 = 'Grouped: AcceptedCmp5';
282637    +
282638    +_UFormat = put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _UFormat = put(AcceptedCmp5,BEST.);
282639    +%dmnormip(_UFormat);
MPRINT(DMNORMIP):   call dmnorm(_UFormat,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
282640    +if MISSING(_UFORMAT) then do;
MPRINT(EM_DIAGRAM):   if MISSING(_UFORMAT) then do;
282641    +GRP_AcceptedCmp5 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 1;
282642    +end;
MPRINT(EM_DIAGRAM):   end;
282643    +else if NOT MISSING(_UFORMAT) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(_UFORMAT) then do;
282644    +if (_UFORMAT eq '0'
282645    +) then do;
MPRINT(EM_DIAGRAM):   if (_UFORMAT eq '0' ) then do;
282646    +GRP_AcceptedCmp5 = 2;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 2;
282647    +end;
MPRINT(EM_DIAGRAM):   end;
282648    +else
282649    +if (_UFORMAT eq '1'
282650    +) then do;
MPRINT(EM_DIAGRAM):   else if (_UFORMAT eq '1' ) then do;
282651    +GRP_AcceptedCmp5 = 3;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 3;
282652    +end;
MPRINT(EM_DIAGRAM):   end;
282653    +else do;
MPRINT(EM_DIAGRAM):   else do;
282654    +GRP_AcceptedCmp5 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 1;
282655    +end;
MPRINT(EM_DIAGRAM):   end;
282656    +end;
MPRINT(EM_DIAGRAM):   end;
282657    +
282658    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
282659    +* Variable: Frq;
MPRINT(EM_DIAGRAM):   * Variable: Frq;
282660    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
282661    +LABEL GRP_Frq = "Grouped: Frq";
MPRINT(EM_DIAGRAM):   LABEL GRP_Frq = "Grouped: Frq";
282662    +
282663    +if MISSING(Frq) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Frq) then do;
282664    +GRP_Frq = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq = 1;
282665    +end;
MPRINT(EM_DIAGRAM):   end;
282666    +else if NOT MISSING(Frq) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Frq) then do;
282667    +if Frq < 6 then do;
MPRINT(EM_DIAGRAM):   if Frq < 6 then do;
282668    +GRP_Frq = 2;
MPRINT(EM_DIAGRAM):   GRP_Frq = 2;
282669    +end;
MPRINT(EM_DIAGRAM):   end;
282670    +else
282671    +if 6 <= Frq AND Frq < 12 then do;
MPRINT(EM_DIAGRAM):   else if 6 <= Frq AND Frq < 12 then do;
282672    +GRP_Frq = 3;
MPRINT(EM_DIAGRAM):   GRP_Frq = 3;
282673    +end;
MPRINT(EM_DIAGRAM):   end;
282674    +else
282675    +if 12 <= Frq AND Frq < 18 then do;
MPRINT(EM_DIAGRAM):   else if 12 <= Frq AND Frq < 18 then do;
282676    +GRP_Frq = 4;
MPRINT(EM_DIAGRAM):   GRP_Frq = 4;
282677    +end;
MPRINT(EM_DIAGRAM):   end;
282678    +else
282679    +if 18 <= Frq then do;
MPRINT(EM_DIAGRAM):   else if 18 <= Frq then do;
282680    +GRP_Frq = 5;
MPRINT(EM_DIAGRAM):   GRP_Frq = 5;
282681    +end;
MPRINT(EM_DIAGRAM):   end;
282682    +end;
MPRINT(EM_DIAGRAM):   end;
282683    +
282684    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
282685    +* Variable: Income;
MPRINT(EM_DIAGRAM):   * Variable: Income;
282686    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
282687    +LABEL GRP_Income =
282688    +'Grouped: Income';
MPRINT(EM_DIAGRAM):   LABEL GRP_Income = 'Grouped: Income';
282689    +
282690    +if MISSING(Income) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Income) then do;
282691    +GRP_Income = 1;
MPRINT(EM_DIAGRAM):   GRP_Income = 1;
282692    +end;
MPRINT(EM_DIAGRAM):   end;
282693    +else if NOT MISSING(Income) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Income) then do;
282694    +if Income < 35268 then do;
MPRINT(EM_DIAGRAM):   if Income < 35268 then do;
282695    +GRP_Income = 2;
MPRINT(EM_DIAGRAM):   GRP_Income = 2;
282696    +end;
MPRINT(EM_DIAGRAM):   end;
282697    +else
282698    +if 35268 <= Income AND Income < 52157 then do;
MPRINT(EM_DIAGRAM):   else if 35268 <= Income AND Income < 52157 then do;
282699    +GRP_Income = 3;
MPRINT(EM_DIAGRAM):   GRP_Income = 3;
282700    +end;
MPRINT(EM_DIAGRAM):   end;
282701    +else
282702    +if 52157 <= Income AND Income < 69486 then do;
MPRINT(EM_DIAGRAM):   else if 52157 <= Income AND Income < 69486 then do;
282703    +GRP_Income = 4;
MPRINT(EM_DIAGRAM):   GRP_Income = 4;
282704    +end;
MPRINT(EM_DIAGRAM):   end;
282705    +else
282706    +if 69486 <= Income then do;
MPRINT(EM_DIAGRAM):   else if 69486 <= Income then do;
282707    +GRP_Income = 5;
MPRINT(EM_DIAGRAM):   GRP_Income = 5;
282708    +end;
MPRINT(EM_DIAGRAM):   end;
282709    +end;
MPRINT(EM_DIAGRAM):   end;
282710    +
282711    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
282712    +* Variable: Mnt;
MPRINT(EM_DIAGRAM):   * Variable: Mnt;
282713    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
282714    +LABEL GRP_Mnt = "Grouped: Mnt";
MPRINT(EM_DIAGRAM):   LABEL GRP_Mnt = "Grouped: Mnt";
282715    +
282716    +if MISSING(Mnt) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Mnt) then do;
282717    +GRP_Mnt = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 1;
282718    +end;
MPRINT(EM_DIAGRAM):   end;
282719    +else if NOT MISSING(Mnt) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Mnt) then do;
282720    +if Mnt < 72 then do;
MPRINT(EM_DIAGRAM):   if Mnt < 72 then do;
282721    +GRP_Mnt = 2;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 2;
282722    +end;
MPRINT(EM_DIAGRAM):   end;
282723    +else
282724    +if 72 <= Mnt AND Mnt < 405.5 then do;
MPRINT(EM_DIAGRAM):   else if 72 <= Mnt AND Mnt < 405.5 then do;
282725    +GRP_Mnt = 3;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 3;
282726    +end;
MPRINT(EM_DIAGRAM):   end;
282727    +else
282728    +if 405.5 <= Mnt AND Mnt < 1064 then do;
MPRINT(EM_DIAGRAM):   else if 405.5 <= Mnt AND Mnt < 1064 then do;
282729    +GRP_Mnt = 4;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 4;
282730    +end;
MPRINT(EM_DIAGRAM):   end;
282731    +else
282732    +if 1064 <= Mnt then do;
MPRINT(EM_DIAGRAM):   else if 1064 <= Mnt then do;
282733    +GRP_Mnt = 5;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 5;
282734    +end;
MPRINT(EM_DIAGRAM):   end;
282735    +end;
MPRINT(EM_DIAGRAM):   end;
282736    +
282737    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
282738    +* Variable: MntFishProducts;
MPRINT(EM_DIAGRAM):   * Variable: MntFishProducts;
282739    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
282740    +LABEL GRP_MntFishProducts =
The SAS System

282741    +'Grouped: MntFishProducts';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntFishProducts = 'Grouped: MntFishProducts';
282742    +
282743    +if MISSING(MntFishProducts) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntFishProducts) then do;
282744    +GRP_MntFishProducts = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 1;
282745    +end;
MPRINT(EM_DIAGRAM):   end;
282746    +else if NOT MISSING(MntFishProducts) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntFishProducts) then do;
282747    +if MntFishProducts < 3 then do;
MPRINT(EM_DIAGRAM):   if MntFishProducts < 3 then do;
282748    +GRP_MntFishProducts = 2;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 2;
282749    +end;
MPRINT(EM_DIAGRAM):   end;
282750    +else
282751    +if 3 <= MntFishProducts AND MntFishProducts < 13 then do;
MPRINT(EM_DIAGRAM):   else if 3 <= MntFishProducts AND MntFishProducts < 13 then do;
282752    +GRP_MntFishProducts = 3;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 3;
282753    +end;
MPRINT(EM_DIAGRAM):   end;
282754    +else
282755    +if 13 <= MntFishProducts AND MntFishProducts < 47 then do;
MPRINT(EM_DIAGRAM):   else if 13 <= MntFishProducts AND MntFishProducts < 47 then do;
282756    +GRP_MntFishProducts = 4;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 4;
282757    +end;
MPRINT(EM_DIAGRAM):   end;
282758    +else
282759    +if 47 <= MntFishProducts then do;
MPRINT(EM_DIAGRAM):   else if 47 <= MntFishProducts then do;
282760    +GRP_MntFishProducts = 5;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 5;
282761    +end;
MPRINT(EM_DIAGRAM):   end;
282762    +end;
MPRINT(EM_DIAGRAM):   end;
282763    +
282764    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
282765    +* Variable: MntGoldProds;
MPRINT(EM_DIAGRAM):   * Variable: MntGoldProds;
282766    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
282767    +LABEL GRP_MntGoldProds =
282768    +'Grouped: MntGoldProds';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntGoldProds = 'Grouped: MntGoldProds';
282769    +
282770    +if MISSING(MntGoldProds) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntGoldProds) then do;
282771    +GRP_MntGoldProds = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 1;
282772    +end;
MPRINT(EM_DIAGRAM):   end;
282773    +else if NOT MISSING(MntGoldProds) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntGoldProds) then do;
282774    +if MntGoldProds < 9 then do;
MPRINT(EM_DIAGRAM):   if MntGoldProds < 9 then do;
282775    +GRP_MntGoldProds = 2;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 2;
282776    +end;
MPRINT(EM_DIAGRAM):   end;
282777    +else
282778    +if 9 <= MntGoldProds AND MntGoldProds < 25 then do;
MPRINT(EM_DIAGRAM):   else if 9 <= MntGoldProds AND MntGoldProds < 25 then do;
282779    +GRP_MntGoldProds = 3;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 3;
282780    +end;
MPRINT(EM_DIAGRAM):   end;
282781    +else
282782    +if 25 <= MntGoldProds AND MntGoldProds < 59 then do;
MPRINT(EM_DIAGRAM):   else if 25 <= MntGoldProds AND MntGoldProds < 59 then do;
282783    +GRP_MntGoldProds = 4;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 4;
282784    +end;
MPRINT(EM_DIAGRAM):   end;
282785    +else
282786    +if 59 <= MntGoldProds then do;
MPRINT(EM_DIAGRAM):   else if 59 <= MntGoldProds then do;
282787    +GRP_MntGoldProds = 5;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 5;
282788    +end;
MPRINT(EM_DIAGRAM):   end;
282789    +end;
MPRINT(EM_DIAGRAM):   end;
282790    +
282791    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
282792    +* Variable: MntMeatProducts;
MPRINT(EM_DIAGRAM):   * Variable: MntMeatProducts;
282793    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
282794    +LABEL GRP_MntMeatProducts =
282795    +'Grouped: MntMeatProducts';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntMeatProducts = 'Grouped: MntMeatProducts';
282796    +
282797    +if MISSING(MntMeatProducts) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntMeatProducts) then do;
282798    +GRP_MntMeatProducts = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 1;
282799    +end;
MPRINT(EM_DIAGRAM):   end;
282800    +else if NOT MISSING(MntMeatProducts) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntMeatProducts) then do;
282801    +if MntMeatProducts < 17 then do;
MPRINT(EM_DIAGRAM):   if MntMeatProducts < 17 then do;
282802    +GRP_MntMeatProducts = 2;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 2;
282803    +end;
MPRINT(EM_DIAGRAM):   end;
282804    +else
282805    +if 17 <= MntMeatProducts AND MntMeatProducts < 72 then do;
MPRINT(EM_DIAGRAM):   else if 17 <= MntMeatProducts AND MntMeatProducts < 72 then do;
282806    +GRP_MntMeatProducts = 3;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 3;
282807    +end;
MPRINT(EM_DIAGRAM):   end;
282808    +else
282809    +if 72 <= MntMeatProducts AND MntMeatProducts < 246 then do;
MPRINT(EM_DIAGRAM):   else if 72 <= MntMeatProducts AND MntMeatProducts < 246 then do;
282810    +GRP_MntMeatProducts = 4;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 4;
282811    +end;
MPRINT(EM_DIAGRAM):   end;
282812    +else
282813    +if 246 <= MntMeatProducts then do;
MPRINT(EM_DIAGRAM):   else if 246 <= MntMeatProducts then do;
282814    +GRP_MntMeatProducts = 5;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 5;
282815    +end;
MPRINT(EM_DIAGRAM):   end;
282816    +end;
MPRINT(EM_DIAGRAM):   end;
282817    +
282818    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
282819    +* Variable: MntWines;
MPRINT(EM_DIAGRAM):   * Variable: MntWines;
282820    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
282821    +LABEL GRP_MntWines =
282822    +'Grouped: MntWines';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntWines = 'Grouped: MntWines';
282823    +
282824    +if MISSING(MntWines) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntWines) then do;
282825    +GRP_MntWines = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 1;
282826    +end;
MPRINT(EM_DIAGRAM):   end;
282827    +else if NOT MISSING(MntWines) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntWines) then do;
282828    +if MntWines < 24 then do;
MPRINT(EM_DIAGRAM):   if MntWines < 24 then do;
282829    +GRP_MntWines = 2;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 2;
282830    +end;
MPRINT(EM_DIAGRAM):   end;
282831    +else
282832    +if 24 <= MntWines AND MntWines < 183.5 then do;
MPRINT(EM_DIAGRAM):   else if 24 <= MntWines AND MntWines < 183.5 then do;
282833    +GRP_MntWines = 3;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 3;
282834    +end;
MPRINT(EM_DIAGRAM):   end;
282835    +else
282836    +if 183.5 <= MntWines AND MntWines < 508 then do;
MPRINT(EM_DIAGRAM):   else if 183.5 <= MntWines AND MntWines < 508 then do;
282837    +GRP_MntWines = 4;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 4;
282838    +end;
MPRINT(EM_DIAGRAM):   end;
282839    +else
282840    +if 508 <= MntWines then do;
MPRINT(EM_DIAGRAM):   else if 508 <= MntWines then do;
282841    +GRP_MntWines = 5;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 5;
282842    +end;
MPRINT(EM_DIAGRAM):   end;
282843    +end;
MPRINT(EM_DIAGRAM):   end;
282844    +
282845    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
282846    +* Variable: NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumCatalogPurchases;
282847    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
282848    +LABEL GRP_NumCatalogPurchases =
282849    +'Grouped: NumCatalogPurchases';
MPRINT(EM_DIAGRAM):   LABEL GRP_NumCatalogPurchases = 'Grouped: NumCatalogPurchases';
282850    +
282851    +if MISSING(NumCatalogPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumCatalogPurchases) then do;
282852    +GRP_NumCatalogPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 1;
282853    +end;
MPRINT(EM_DIAGRAM):   end;
282854    +else if NOT MISSING(NumCatalogPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumCatalogPurchases) then do;
282855    +if NumCatalogPurchases < 0 then do;
MPRINT(EM_DIAGRAM):   if NumCatalogPurchases < 0 then do;
282856    +GRP_NumCatalogPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 2;
282857    +end;
MPRINT(EM_DIAGRAM):   end;
282858    +else
282859    +if 0 <= NumCatalogPurchases AND NumCatalogPurchases < 2 then do;
MPRINT(EM_DIAGRAM):   else if 0 <= NumCatalogPurchases AND NumCatalogPurchases < 2 then do;
282860    +GRP_NumCatalogPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 3;
282861    +end;
MPRINT(EM_DIAGRAM):   end;
282862    +else
282863    +if 2 <= NumCatalogPurchases AND NumCatalogPurchases < 4 then do;
MPRINT(EM_DIAGRAM):   else if 2 <= NumCatalogPurchases AND NumCatalogPurchases < 4 then do;
282864    +GRP_NumCatalogPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 4;
282865    +end;
MPRINT(EM_DIAGRAM):   end;
282866    +else
282867    +if 4 <= NumCatalogPurchases then do;
MPRINT(EM_DIAGRAM):   else if 4 <= NumCatalogPurchases then do;
282868    +GRP_NumCatalogPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 5;
282869    +end;
MPRINT(EM_DIAGRAM):   end;
282870    +end;
MPRINT(EM_DIAGRAM):   end;
282871    +
282872    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
282873    +* Variable: NumDistPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumDistPurchases;
282874    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
282875    +LABEL GRP_NumDistPurchases = "Grouped: NumDistPurchases";
MPRINT(EM_DIAGRAM):   LABEL GRP_NumDistPurchases = "Grouped: NumDistPurchases";
282876    +
282877    +if MISSING(NumDistPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumDistPurchases) then do;
282878    +GRP_NumDistPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 1;
282879    +end;
MPRINT(EM_DIAGRAM):   end;
282880    +else if NOT MISSING(NumDistPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumDistPurchases) then do;
282881    +if NumDistPurchases < 3 then do;
MPRINT(EM_DIAGRAM):   if NumDistPurchases < 3 then do;
282882    +GRP_NumDistPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 2;
282883    +end;
MPRINT(EM_DIAGRAM):   end;
282884    +else
282885    +if 3 <= NumDistPurchases AND NumDistPurchases < 6 then do;
MPRINT(EM_DIAGRAM):   else if 3 <= NumDistPurchases AND NumDistPurchases < 6 then do;
282886    +GRP_NumDistPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 3;
282887    +end;
MPRINT(EM_DIAGRAM):   end;
282888    +else
282889    +if 6 <= NumDistPurchases AND NumDistPurchases < 10 then do;
MPRINT(EM_DIAGRAM):   else if 6 <= NumDistPurchases AND NumDistPurchases < 10 then do;
282890    +GRP_NumDistPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 4;
282891    +end;
MPRINT(EM_DIAGRAM):   end;
282892    +else
282893    +if 10 <= NumDistPurchases then do;
MPRINT(EM_DIAGRAM):   else if 10 <= NumDistPurchases then do;
282894    +GRP_NumDistPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 5;
282895    +end;
MPRINT(EM_DIAGRAM):   end;
282896    +end;
MPRINT(EM_DIAGRAM):   end;
282897    +
282898    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
282899    +* Variable: NumWebPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumWebPurchases;
282900    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
282901    +LABEL GRP_NumWebPurchases =
282902    +'Grouped: NumWebPurchases';
MPRINT(EM_DIAGRAM):   LABEL GRP_NumWebPurchases = 'Grouped: NumWebPurchases';
282903    +
282904    +if MISSING(NumWebPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumWebPurchases) then do;
282905    +GRP_NumWebPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 1;
282906    +end;
MPRINT(EM_DIAGRAM):   end;
282907    +else if NOT MISSING(NumWebPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumWebPurchases) then do;
282908    +if NumWebPurchases < 2 then do;
MPRINT(EM_DIAGRAM):   if NumWebPurchases < 2 then do;
282909    +GRP_NumWebPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 2;
282910    +end;
MPRINT(EM_DIAGRAM):   end;
282911    +else
282912    +if 2 <= NumWebPurchases AND NumWebPurchases < 4 then do;
MPRINT(EM_DIAGRAM):   else if 2 <= NumWebPurchases AND NumWebPurchases < 4 then do;
282913    +GRP_NumWebPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 3;
282914    +end;
MPRINT(EM_DIAGRAM):   end;
282915    +else
282916    +if 4 <= NumWebPurchases AND NumWebPurchases < 6 then do;
MPRINT(EM_DIAGRAM):   else if 4 <= NumWebPurchases AND NumWebPurchases < 6 then do;
282917    +GRP_NumWebPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 4;
282918    +end;
MPRINT(EM_DIAGRAM):   end;
282919    +else
282920    +if 6 <= NumWebPurchases then do;
MPRINT(EM_DIAGRAM):   else if 6 <= NumWebPurchases then do;
282921    +GRP_NumWebPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 5;
282922    +end;
MPRINT(EM_DIAGRAM):   end;
282923    +end;
MPRINT(EM_DIAGRAM):   end;
282924    +
282925    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
282926    +* Variable: RFMstat;
MPRINT(EM_DIAGRAM):   * Variable: RFMstat;
282927    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
282928    +LABEL GRP_RFMstat = "Grouped: RFMstat";
MPRINT(EM_DIAGRAM):   LABEL GRP_RFMstat = "Grouped: RFMstat";
282929    +
282930    +if MISSING(RFMstat) then do;
MPRINT(EM_DIAGRAM):   if MISSING(RFMstat) then do;
282931    +GRP_RFMstat = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 1;
282932    +end;
MPRINT(EM_DIAGRAM):   end;
282933    +else if NOT MISSING(RFMstat) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(RFMstat) then do;
282934    +if RFMstat < 10.34 then do;
MPRINT(EM_DIAGRAM):   if RFMstat < 10.34 then do;
282935    +GRP_RFMstat = 2;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 2;
282936    +end;
MPRINT(EM_DIAGRAM):   end;
282937    +else
282938    +if 10.34 <= RFMstat AND RFMstat < 128.09 then do;
MPRINT(EM_DIAGRAM):   else if 10.34 <= RFMstat AND RFMstat < 128.09 then do;
282939    +GRP_RFMstat = 3;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 3;
282940    +end;
MPRINT(EM_DIAGRAM):   end;
282941    +else
282942    +if 128.09 <= RFMstat AND RFMstat < 455.22 then do;
MPRINT(EM_DIAGRAM):   else if 128.09 <= RFMstat AND RFMstat < 455.22 then do;
282943    +GRP_RFMstat = 4;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 4;
282944    +end;
MPRINT(EM_DIAGRAM):   end;
282945    +else
282946    +if 455.22 <= RFMstat then do;
MPRINT(EM_DIAGRAM):   else if 455.22 <= RFMstat then do;
282947    +GRP_RFMstat = 5;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 5;
282948    +end;
MPRINT(EM_DIAGRAM):   end;
282949    +end;
MPRINT(EM_DIAGRAM):   end;
282950    +
282951    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
282952    +* Variable: RMntFrq;
MPRINT(EM_DIAGRAM):   * Variable: RMntFrq;
282953    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
282954    +LABEL GRP_RMntFrq = "Grouped: RMntFrq";
MPRINT(EM_DIAGRAM):   LABEL GRP_RMntFrq = "Grouped: RMntFrq";
282955    +
282956    +if MISSING(RMntFrq) then do;
MPRINT(EM_DIAGRAM):   if MISSING(RMntFrq) then do;
282957    +GRP_RMntFrq = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 1;
282958    +end;
MPRINT(EM_DIAGRAM):   end;
282959    +else if NOT MISSING(RMntFrq) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(RMntFrq) then do;
282960    +if RMntFrq < 13.25 then do;
MPRINT(EM_DIAGRAM):   if RMntFrq < 13.25 then do;
282961    +GRP_RMntFrq = 2;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 2;
282962    +end;
MPRINT(EM_DIAGRAM):   end;
282963    +else
282964    +if 13.25 <= RMntFrq AND RMntFrq < 30.4 then do;
MPRINT(EM_DIAGRAM):   else if 13.25 <= RMntFrq AND RMntFrq < 30.4 then do;
282965    +GRP_RMntFrq = 3;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 3;
282966    +end;
MPRINT(EM_DIAGRAM):   end;
282967    +else
282968    +if 30.4 <= RMntFrq AND RMntFrq < 52.86 then do;
MPRINT(EM_DIAGRAM):   else if 30.4 <= RMntFrq AND RMntFrq < 52.86 then do;
282969    +GRP_RMntFrq = 4;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 4;
282970    +end;
MPRINT(EM_DIAGRAM):   end;
282971    +else
282972    +if 52.86 <= RMntFrq then do;
MPRINT(EM_DIAGRAM):   else if 52.86 <= RMntFrq then do;
282973    +GRP_RMntFrq = 5;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 5;
282974    +end;
MPRINT(EM_DIAGRAM):   end;
282975    +end;
MPRINT(EM_DIAGRAM):   end;
282976    +
282977    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
282978    +* Variable: Recency;
MPRINT(EM_DIAGRAM):   * Variable: Recency;
282979    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
282980    +LABEL GRP_Recency =
282981    +'Grouped: Recency';
MPRINT(EM_DIAGRAM):   LABEL GRP_Recency = 'Grouped: Recency';
282982    +
282983    +if MISSING(Recency) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Recency) then do;
282984    +GRP_Recency = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency = 1;
282985    +end;
MPRINT(EM_DIAGRAM):   end;
282986    +else if NOT MISSING(Recency) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Recency) then do;
282987    +if Recency < 24 then do;
MPRINT(EM_DIAGRAM):   if Recency < 24 then do;
282988    +GRP_Recency = 2;
MPRINT(EM_DIAGRAM):   GRP_Recency = 2;
282989    +end;
MPRINT(EM_DIAGRAM):   end;
282990    +else
282991    +if 24 <= Recency AND Recency < 48 then do;
MPRINT(EM_DIAGRAM):   else if 24 <= Recency AND Recency < 48 then do;
282992    +GRP_Recency = 3;
MPRINT(EM_DIAGRAM):   GRP_Recency = 3;
282993    +end;
MPRINT(EM_DIAGRAM):   end;
282994    +else
282995    +if 48 <= Recency AND Recency < 73 then do;
MPRINT(EM_DIAGRAM):   else if 48 <= Recency AND Recency < 73 then do;
282996    +GRP_Recency = 4;
MPRINT(EM_DIAGRAM):   GRP_Recency = 4;
282997    +end;
MPRINT(EM_DIAGRAM):   end;
282998    +else
282999    +if 73 <= Recency then do;
MPRINT(EM_DIAGRAM):   else if 73 <= Recency then do;
283000    +GRP_Recency = 5;
MPRINT(EM_DIAGRAM):   GRP_Recency = 5;
283001    +end;
MPRINT(EM_DIAGRAM):   end;
283002    +end;
MPRINT(EM_DIAGRAM):   end;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
283003     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
283004     quit;
283005     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
283006     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
283007     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
283008     retain ID 3 Node "BINNING";
MPRINT(EM_DIAGRAM):   retain ID 3 Node "BINNING";
283009     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
283010     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 16 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 16 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

283011     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
283012     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
283013     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 16 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 16 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

283014     proc sort data=EMWS8.BINNING_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.BINNING_variableset out=_temp2(keep=NAME CREATOR);
283015     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
283016     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 36 observations read from the data set EMWS8.BINNING_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 36 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

283017     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
283018     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
283019     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
283020     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 36 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 36 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

283021     proc contents data=EMWS8.BINNING_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.BINNING_train out=_meta(keep=NAME) noprint;
283022     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 59 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.04 seconds
      

283023     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
283024     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
283025     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 59 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 59 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

283026     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
283027     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
283028     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
283029     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 59 observations read from the data set WORK._META.
NOTE: There were 36 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 59 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

283030     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
283031     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
283031   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 15 rows and 5 columns.

283032     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

283033     proc append base=EMWS8.Ensmbl50_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl50_FCMP data=_tempx;
283034     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL50_FCMP.
NOTE: There were 15 observations read from the data set WORK._TEMPX.
NOTE: 15 observations added.
NOTE: The data set EMWS8.ENSMBL50_FCMP has 889 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

283035     filename _pref
283035   ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
283036     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
283037     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
283038    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
283039    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
283040    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
283041    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
283042    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
283043    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
283044     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
283045     quit;
283046     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
283047     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
283048     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
283049     retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
283050     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
283051     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

283052     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
283053     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
283054     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

283055     proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
283056     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
283057     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

283058     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
283059     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
283060     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
283061     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

283062     proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
283063     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

283064     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
283065     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
283066     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

283067     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
283068     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
283069     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
283070     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

283071     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
283072     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
283072   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

283073     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

283074     proc append base=EMWS8.Ensmbl50_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl50_FCMP data=_tempx;
283075     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL50_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL50_FCMP has 893 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

283076     filename _pref
283076   ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
283077     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
283078     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
283079    +
283080    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
283081    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
283081   !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
283082    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
283083    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
283084    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
283085    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
283086    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
283087     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
283088     quit;
283089     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
283090     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
283091     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
283092     retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
283093     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
283094     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

283095     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
283096     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
283097     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

283098     proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
283099     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
283100     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

283101     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
283102     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
283103     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
283104     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

283105     proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
283106     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

283107     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
283108     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
283109     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

283110     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
283111     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
283112     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
283113     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

283114     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
283115     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
283115   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

283116     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

283117     proc append base=EMWS8.Ensmbl50_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl50_FCMP data=_tempx;
283118     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL50_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL50_FCMP has 932 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

283119     filename _pref
283119   ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
283120     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
283121     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
283122    +
283123    +
283124    +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
283125    +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
283126    +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
283127    +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
283128    +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
283129    +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
283130    +
283131    +
283132    +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
283133    +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
283134    +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
283135    +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
283136    +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
283137    +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
283138    +
283139    +
283140    +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
283141    +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
283142    +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
283143    +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
283144    +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
283145    +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
283146    +
283147    +
283148    +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
283149    +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
283150    +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
283151    +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
283152    +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
283153    +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
283154    +
283155    +
283156    +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
283157    +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
283158    +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
283159    +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
283160    +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
283161    +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
283162    +
283163    +
283164    +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
283165    +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
283166    +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
283167    +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
283168    +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
283169    +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
283170    +
283171    +
283172    +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
283173    +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
283174    +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
283175    +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
283176    +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
283177    +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
283178    +
283179    +
283180    +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
283181    +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
283182    +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
283183    +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
283184    +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
283185    +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
283186    +if
283187    +_FILTERNORM1 not in ( '.')
283188    + and
283189    +_FILTERNORM2 not in ( '.')
283190    + and
283191    +_FILTERNORM3 not in ( '.')
283192    + and
283193    +_FILTERNORM4 not in ( '.')
283194    + and
283195    +_FILTERNORM5 not in ( '.')
283196    + and
283197    +_FILTERNORM6 not in ( '.')
283198    + and
283199    +_FILTERNORM7 not in ( ' ')
283200    + and
283201    +_FILTERNORM8 not in ( ' ')
283202    +and
283203    +( Dt_Customer ne .)
283204    +and ( Income ne . and (Income<=107000))
283205    +and ( Kidhome ne .)
283206    +and ( MntFishProducts ne .)
283207    +and ( MntFruits ne .)
283208    +and ( MntGoldProds ne .)
283209    +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
283210    +and ( MntSweetProducts ne .)
283211    +and ( MntWines ne .)
283212    +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
283213    +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
283214    +and ( NumStorePurchases ne .)
283215    +and ( NumWebPurchases ne .)
283216    +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
283217    +and ( Recency ne .)
283218    +and ( Teenhome ne .)
283219    +and ( Year_Birth ne .)
283220    +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
283221    +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
283222    +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
283223    +end;
MPRINT(EM_DIAGRAM):   end;
283224    +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
283225    +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
283226     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
283227     quit;
283228     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
283229     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
283230     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
283231     retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
283232     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
283233     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

283234     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
283235     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
283236     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

283237     proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
283238     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
283239     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

283240     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
283241     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
283242     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
283243     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

283244     proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
283245     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

283246     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
283247     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
283248     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

283249     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
283250     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
283251     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
283252     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

283253     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
283254     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
283254   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

283255     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

283256     proc append base=EMWS8.Ensmbl50_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl50_FCMP data=_tempx;
283257     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL50_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL50_FCMP has 998 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

283258     %macro varDept(fcmpdata=,id=);
283259     %global nobs&id scoreFlag&id;
283260     %let scoreFlag&id = 0;
283261     %if &id=1 or ^&fcmpStart %then %do;
283262     proc sort data=&fcmpdata out=_temp&id nodupkey;
283263     by NAME;
283264     where id=&id and LHS in( %let j=1;
283265     %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
283266     %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
283267     "&var" %let j = %eval(&j+1);
283268     %end;
283269     );
283270     run;
283271     %let dsid = %sysfunc(open(_temp&id));
283272     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
283273     %let dsid = %sysfunc(close(&dsid));
283274     %if &&nobs&id %then %do;
283275     %let scoreFlag&id = 1;
283276     %let fcmpStart = 1;
283277     %end;
283278     %else %let fcmpStart = 0;
283279     %end;
283280     %else %do;
283281     proc sort data=&fcmpdata out=_tempid;
283282     where id=&id;
283283     by LHS;
283284     run;
283285     %let dsid = %sysfunc(open(_tempid));
283286     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
283287     %let dsid = %sysfunc(close(&dsid));
283288     %if ^&&nobs&id %then %do;
283289     proc datasets lib=work nolist;
283290     delete _tempid;
283291     run;
283292     quit;
283293     %end;
283294     %else %do;
283295     data _tempAll;
283296     set %let j=%eval(&id-1);
283297     %do x=1 %to &j;
283298     %if &&nobs&x %then %do;
283299     _temp&x %end;
283300     %end;
283301     ;
283302     run;
283303     proc sql;
283304     create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
283304   ! work._tempid p2 where p.name=p2.lhs;
283305     quit;
283306     data _temp&id;
283307     set _temp&id;
283308     where LHS ne '' and NAME ne '' and Node ne '';
283309     run;
283310     proc datasets lib=work nolist;
283311     delete _tempAll;
283312     run;
283313     %let dsid = %sysfunc(open(_temp&id));
283314     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
283315     %let dsid = %sysfunc(close(&dsid));
283316     %if ^&&nobs&id %then %do;
283317     proc datasets lib=work nolist;
283318     delete _temp&id;
283319     run;
283320     quit;
283321     %end;
283322     %else %do;
283323     %let scoreFlag&id = 1;
283324     data _temp&id;
283325     set _temp&id;
283326     where LHS ne NAME and node ne '';
283327     run;
283328     %let dsid = %sysfunc(open(_temp&id));
283329     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
283330     %let dsid = %sysfunc(close(&dsid));
283331     %if ^&&nobs&id %then %do;
283332     proc datasets lib=work nolist;
283333     delete _temp&id;
283334     run;
283335     quit;
283336     %end;
283337     %else %do;
283338     proc sort data=_temp&id nodupkey;
283339     by LHS NAME;
283340     run;
283341     %end;
283342     %end;
283343     %end;
283344     %end;
283345     %mend varDept;
283346     %macro optCode(outdata=fcmpdata);
283347     %global fcmpStart;
283348     %let fcmpStart = 0;
283349     %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
283350     %let NumNodes=9;
283351     %do k=1 %to &NumNodes;
283352     %vardept(fcmpdata=&outdata, id=&k);
283353     %end;
283354     %mend optCode;
283355     %optcode(outData=EMWS8.Ensmbl50_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl50_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL50_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl50_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 72 observations read from the data set EMWS8.ENSMBL50_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 53 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 19 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl50_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 15 observations read from the data set EMWS8.ENSMBL50_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 15 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 19 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 19 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp3 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP3 created, with 14 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP3 has 14 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP3 has 14 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp3 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP3.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP3 has 14 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl50_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL50_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl50_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL50_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 ;
MPRINT(VARDEPT):   run;

NOTE: There were 19 observations read from the data set WORK._TEMP2.
NOTE: There were 14 observations read from the data set WORK._TEMP3.
NOTE: The data set WORK._TEMPALL has 33 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 2 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl50_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL50_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 19 observations read from the data set WORK._TEMP2.
NOTE: There were 14 observations read from the data set WORK._TEMP3.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 35 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 32 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 32 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 32 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.21 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 32 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 32 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 32 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 32 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl50_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL50_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 19 observations read from the data set WORK._TEMP2.
NOTE: There were 14 observations read from the data set WORK._TEMP3.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: There were 32 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 67 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl50_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL50_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl50_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL50_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

283356     data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
283357     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
283358     where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
283359     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

283360     data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
283361     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
283362     where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
283363     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

283364     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
283365     create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
283365   ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 2 rows and 3 columns.

283366     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

283367     data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
283368     set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
283369     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 2 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 2 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

283370     data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
283371     set EMWS8.BINNING_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.BINNING_EMSCOREVAR;
283372     where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
283373     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS8.BINNING_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

283374     data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
283375     set EMWS8.BINNING_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.BINNING_EMSCOREVAR;
283376     where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
283377     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.BINNING_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

283378     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
283379     create table _CodeVar7 as select p.lhs, p2.formula, p2.file from _temp3 p,
283379   ! EMWS8.BINNING_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar7 as select p.lhs, p2.formula, p2.file from _temp3 
p, EMWS8.BINNING_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR7 created, with 14 rows and 3 columns.

283380     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

283381     data _CodeVar7;
MPRINT(EM_DIAGRAM):   data _CodeVar7;
283382     set _all_ _CodeVar7 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar7 _postall_;
283383     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK._ALL_.
NOTE: There were 14 observations read from the data set WORK._CODEVAR7.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR7 has 15 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

283384     filename _pref
283384   ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural22\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural22\EMPUBLISHSCORE.sas";
283385     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
283386     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural22\EMPUBLISHSCORE.sas.
283387    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
283388    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
283389    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
283390    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
283391    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
283392    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
283393    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
283394    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
283395    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
283396    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
283397    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
283398    +LENGTH _WARN_ $4
283399    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
283400    +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
283401    +
283402    +      label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
MPRINT(EM_DIAGRAM):   label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
283403    +
283404    +      label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
283405    +
283406    +      label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
283407    +
283408    +      label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
283409    +
283410    +      label GRP_Income2 = 'Dummy: GRP_Income=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Income2 = 'Dummy: GRP_Income=2' ;
283411    +
283412    +      label GRP_Income3 = 'Dummy: GRP_Income=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Income3 = 'Dummy: GRP_Income=3' ;
283413    +
283414    +      label GRP_Income4 = 'Dummy: GRP_Income=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Income4 = 'Dummy: GRP_Income=4' ;
283415    +
283416    +      label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
283417    +
283418    +      label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
283419    +
283420    +      label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
283421    +
283422    +      label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
283423    +
283424    +      label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
283425    +
283426    +      label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
283427    +
283428    +      label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
283429    +
283430    +      label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
283431    +
283432    +      label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
283433    +
283434    +      label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
283435    +
283436    +      label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
283437    +
283438    +      label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
283439    +
283440    +      label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
283441    +
283442    +      label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
283443    +
283444    +      label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
283445    +
283446    +      label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
283447    +
283448    +      label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
283449    +
283450    +      label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
283451    +
283452    +      label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
283453    +
283454    +      label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
283455    +
283456    +      label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
283457    +
283458    +      label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
283459    +
283460    +      label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
283461    +
283462    +      label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
283463    +
283464    +      label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
283465    +
283466    +      label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
283467    +
283468    +      label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
283469    +
283470    +      label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
283471    +
283472    +      label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
283473    +
283474    +      label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
283475    +
283476    +      label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
283477    +
283478    +      label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
283479    +
283480    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
283481    +
283482    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
283483    +
283484    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
283485    +
283486    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
283487    +
283488    +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
283489    +
283490    +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
283491    +
283492    +      label H1x1_7 = 'Hidden: H1x1_=7' ;
MPRINT(EM_DIAGRAM):   label H1x1_7 = 'Hidden: H1x1_=7' ;
283493    +
283494    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
283495    +
283496    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
283497    +
283498    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
283499    +
283500    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
283501    +
283502    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
283503    +
283504    +*** Generate dummy variables for GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmp5 ;
283505    +drop GRP_AcceptedCmp52 ;
MPRINT(EM_DIAGRAM):   drop GRP_AcceptedCmp52 ;
283506    +if missing( GRP_AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmp5 ) then do;
283507    +   GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
283508    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
283509    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
283510    +end;
MPRINT(EM_DIAGRAM):   end;
283511    +else do;
MPRINT(EM_DIAGRAM):   else do;
283512    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
283513    +   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
283514    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
283515    +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
283516    +      GRP_AcceptedCmp52 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = 1;
283517    +   end;
MPRINT(EM_DIAGRAM):   end;
283518    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
283519    +      GRP_AcceptedCmp52 = -1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = -1;
283520    +   end;
MPRINT(EM_DIAGRAM):   end;
283521    +   else do;
MPRINT(EM_DIAGRAM):   else do;
283522    +      GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
283523    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
283524    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
283525    +   end;
MPRINT(EM_DIAGRAM):   end;
283526    +end;
MPRINT(EM_DIAGRAM):   end;
283527    +
283528    +*** Generate dummy variables for GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Frq ;
283529    +drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
283530    +if missing( GRP_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Frq ) then do;
283531    +   GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
283532    +   GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
283533    +   GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
283534    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
283535    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
283536    +end;
MPRINT(EM_DIAGRAM):   end;
283537    +else do;
MPRINT(EM_DIAGRAM):   else do;
283538    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
283539    +   _dm12 = put( GRP_Frq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Frq , BEST12. );
283540    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
283541    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
283542    +      GRP_Frq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = -1;
283543    +      GRP_Frq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = -1;
283544    +      GRP_Frq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = -1;
283545    +   end;
MPRINT(EM_DIAGRAM):   end;
283546    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
283547    +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
283548    +      GRP_Frq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 1;
283549    +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
283550    +   end;
MPRINT(EM_DIAGRAM):   end;
283551    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
283552    +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
283553    +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
283554    +      GRP_Frq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 1;
283555    +   end;
MPRINT(EM_DIAGRAM):   end;
283556    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
283557    +      GRP_Frq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 1;
283558    +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
283559    +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
283560    +   end;
MPRINT(EM_DIAGRAM):   end;
283561    +   else do;
MPRINT(EM_DIAGRAM):   else do;
283562    +      GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
283563    +      GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
283564    +      GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
283565    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
283566    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
283567    +   end;
MPRINT(EM_DIAGRAM):   end;
283568    +end;
MPRINT(EM_DIAGRAM):   end;
283569    +
283570    +*** Generate dummy variables for GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Income ;
283571    +drop GRP_Income2 GRP_Income3 GRP_Income4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Income2 GRP_Income3 GRP_Income4 ;
283572    +if missing( GRP_Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Income ) then do;
283573    +   GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
283574    +   GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
283575    +   GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
283576    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
283577    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
283578    +end;
MPRINT(EM_DIAGRAM):   end;
283579    +else do;
MPRINT(EM_DIAGRAM):   else do;
283580    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
283581    +   _dm12 = put( GRP_Income , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Income , BEST12. );
283582    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
283583    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
283584    +      GRP_Income2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = -1;
283585    +      GRP_Income3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = -1;
283586    +      GRP_Income4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = -1;
283587    +   end;
MPRINT(EM_DIAGRAM):   end;
283588    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
283589    +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
283590    +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
283591    +      GRP_Income4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 1;
283592    +   end;
MPRINT(EM_DIAGRAM):   end;
283593    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
283594    +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
283595    +      GRP_Income3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 1;
283596    +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
283597    +   end;
MPRINT(EM_DIAGRAM):   end;
283598    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
283599    +      GRP_Income2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 1;
283600    +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
283601    +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
283602    +   end;
MPRINT(EM_DIAGRAM):   end;
283603    +   else do;
MPRINT(EM_DIAGRAM):   else do;
283604    +      GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
283605    +      GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
283606    +      GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
283607    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
283608    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
283609    +   end;
MPRINT(EM_DIAGRAM):   end;
283610    +end;
MPRINT(EM_DIAGRAM):   end;
283611    +
283612    +*** Generate dummy variables for GRP_Mnt ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Mnt ;
283613    +drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
283614    +if missing( GRP_Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Mnt ) then do;
283615    +   GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
283616    +   GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
283617    +   GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
283618    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
283619    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
283620    +end;
MPRINT(EM_DIAGRAM):   end;
283621    +else do;
MPRINT(EM_DIAGRAM):   else do;
283622    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
283623    +   _dm12 = put( GRP_Mnt , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Mnt , BEST12. );
283624    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
283625    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
283626    +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
283627    +      GRP_Mnt3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 1;
283628    +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
283629    +   end;
MPRINT(EM_DIAGRAM):   end;
283630    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
283631    +      GRP_Mnt2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = -1;
283632    +      GRP_Mnt3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = -1;
283633    +      GRP_Mnt4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = -1;
283634    +   end;
MPRINT(EM_DIAGRAM):   end;
283635    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
283636    +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
283637    +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
283638    +      GRP_Mnt4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 1;
283639    +   end;
MPRINT(EM_DIAGRAM):   end;
283640    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
283641    +      GRP_Mnt2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 1;
283642    +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
283643    +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
283644    +   end;
MPRINT(EM_DIAGRAM):   end;
283645    +   else do;
MPRINT(EM_DIAGRAM):   else do;
283646    +      GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
283647    +      GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
283648    +      GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
283649    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
283650    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
283651    +   end;
MPRINT(EM_DIAGRAM):   end;
283652    +end;
MPRINT(EM_DIAGRAM):   end;
283653    +
283654    +*** Generate dummy variables for GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntFishProducts ;
283655    +drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
283656    +if missing( GRP_MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntFishProducts ) then do;
283657    +   GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
283658    +   GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
283659    +   GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
283660    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
283661    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
283662    +end;
MPRINT(EM_DIAGRAM):   end;
283663    +else do;
MPRINT(EM_DIAGRAM):   else do;
283664    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
283665    +   _dm12 = put( GRP_MntFishProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntFishProducts , BEST12. );
283666    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
283667    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
283668    +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
283669    +      GRP_MntFishProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 1;
283670    +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
283671    +   end;
MPRINT(EM_DIAGRAM):   end;
283672    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
283673    +      GRP_MntFishProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = -1;
283674    +      GRP_MntFishProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = -1;
283675    +      GRP_MntFishProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = -1;
283676    +   end;
MPRINT(EM_DIAGRAM):   end;
283677    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
283678    +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
283679    +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
283680    +      GRP_MntFishProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 1;
283681    +   end;
MPRINT(EM_DIAGRAM):   end;
283682    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
283683    +      GRP_MntFishProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 1;
283684    +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
283685    +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
283686    +   end;
MPRINT(EM_DIAGRAM):   end;
283687    +   else do;
MPRINT(EM_DIAGRAM):   else do;
283688    +      GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
283689    +      GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
283690    +      GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
283691    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
283692    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
283693    +   end;
MPRINT(EM_DIAGRAM):   end;
283694    +end;
MPRINT(EM_DIAGRAM):   end;
283695    +
283696    +*** Generate dummy variables for GRP_MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntGoldProds ;
283697    +drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
283698    +if missing( GRP_MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntGoldProds ) then do;
283699    +   GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
283700    +   GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
283701    +   GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
283702    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
283703    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
283704    +end;
MPRINT(EM_DIAGRAM):   end;
283705    +else do;
MPRINT(EM_DIAGRAM):   else do;
283706    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
283707    +   _dm12 = put( GRP_MntGoldProds , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntGoldProds , BEST12. );
283708    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
283709    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
283710    +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
283711    +      GRP_MntGoldProds3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 1;
283712    +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
283713    +   end;
MPRINT(EM_DIAGRAM):   end;
283714    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
283715    +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
283716    +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
283717    +      GRP_MntGoldProds4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 1;
283718    +   end;
MPRINT(EM_DIAGRAM):   end;
283719    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
283720    +      GRP_MntGoldProds2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = -1;
283721    +      GRP_MntGoldProds3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = -1;
283722    +      GRP_MntGoldProds4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = -1;
283723    +   end;
MPRINT(EM_DIAGRAM):   end;
283724    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
283725    +      GRP_MntGoldProds2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 1;
283726    +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
283727    +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
283728    +   end;
MPRINT(EM_DIAGRAM):   end;
283729    +   else do;
MPRINT(EM_DIAGRAM):   else do;
283730    +      GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
283731    +      GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
283732    +      GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
283733    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
283734    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
283735    +   end;
MPRINT(EM_DIAGRAM):   end;
283736    +end;
MPRINT(EM_DIAGRAM):   end;
283737    +
283738    +*** Generate dummy variables for GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntMeatProducts ;
283739    +drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
283740    +if missing( GRP_MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntMeatProducts ) then do;
283741    +   GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
283742    +   GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
283743    +   GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
283744    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
283745    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
283746    +end;
MPRINT(EM_DIAGRAM):   end;
283747    +else do;
MPRINT(EM_DIAGRAM):   else do;
283748    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
283749    +   _dm12 = put( GRP_MntMeatProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntMeatProducts , BEST12. );
283750    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
283751    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
283752    +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
283753    +      GRP_MntMeatProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 1;
283754    +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
283755    +   end;
MPRINT(EM_DIAGRAM):   end;
283756    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
283757    +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
283758    +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
283759    +      GRP_MntMeatProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 1;
283760    +   end;
MPRINT(EM_DIAGRAM):   end;
283761    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
283762    +      GRP_MntMeatProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = -1;
283763    +      GRP_MntMeatProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = -1;
283764    +      GRP_MntMeatProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = -1;
283765    +   end;
MPRINT(EM_DIAGRAM):   end;
283766    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
283767    +      GRP_MntMeatProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 1;
283768    +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
283769    +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
283770    +   end;
MPRINT(EM_DIAGRAM):   end;
283771    +   else do;
MPRINT(EM_DIAGRAM):   else do;
283772    +      GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
283773    +      GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
283774    +      GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
283775    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
283776    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
283777    +   end;
MPRINT(EM_DIAGRAM):   end;
283778    +end;
MPRINT(EM_DIAGRAM):   end;
283779    +
283780    +*** Generate dummy variables for GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntWines ;
283781    +drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
283782    +if missing( GRP_MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntWines ) then do;
283783    +   GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
283784    +   GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
283785    +   GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
283786    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
283787    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
283788    +end;
MPRINT(EM_DIAGRAM):   end;
283789    +else do;
MPRINT(EM_DIAGRAM):   else do;
283790    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
283791    +   _dm12 = put( GRP_MntWines , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntWines , BEST12. );
283792    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
283793    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
283794    +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
283795    +      GRP_MntWines3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 1;
283796    +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
283797    +   end;
MPRINT(EM_DIAGRAM):   end;
283798    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
283799    +      GRP_MntWines2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = -1;
283800    +      GRP_MntWines3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = -1;
283801    +      GRP_MntWines4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = -1;
283802    +   end;
MPRINT(EM_DIAGRAM):   end;
283803    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
283804    +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
283805    +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
283806    +      GRP_MntWines4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 1;
283807    +   end;
MPRINT(EM_DIAGRAM):   end;
283808    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
283809    +      GRP_MntWines2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 1;
283810    +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
283811    +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
283812    +   end;
MPRINT(EM_DIAGRAM):   end;
283813    +   else do;
MPRINT(EM_DIAGRAM):   else do;
283814    +      GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
283815    +      GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
283816    +      GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
283817    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
283818    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
283819    +   end;
MPRINT(EM_DIAGRAM):   end;
283820    +end;
MPRINT(EM_DIAGRAM):   end;
283821    +
283822    +*** Generate dummy variables for GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumCatalogPurchases ;
283823    +drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
283824    +if missing( GRP_NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumCatalogPurchases ) then do;
283825    +   GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
283826    +   GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
283827    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
283828    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
283829    +end;
MPRINT(EM_DIAGRAM):   end;
283830    +else do;
MPRINT(EM_DIAGRAM):   else do;
283831    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
283832    +   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
283833    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
283834    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
283835    +      GRP_NumCatalogPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 1;
283836    +      GRP_NumCatalogPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 0;
283837    +   end;
MPRINT(EM_DIAGRAM):   end;
283838    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
283839    +      GRP_NumCatalogPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = -1;
283840    +      GRP_NumCatalogPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = -1;
283841    +   end;
MPRINT(EM_DIAGRAM):   end;
283842    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
283843    +      GRP_NumCatalogPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 0;
283844    +      GRP_NumCatalogPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 1;
283845    +   end;
MPRINT(EM_DIAGRAM):   end;
283846    +   else do;
MPRINT(EM_DIAGRAM):   else do;
283847    +      GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
283848    +      GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
283849    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
283850    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
283851    +   end;
MPRINT(EM_DIAGRAM):   end;
283852    +end;
MPRINT(EM_DIAGRAM):   end;
283853    +
283854    +*** Generate dummy variables for GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumDistPurchases ;
283855    +drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
283856    +if missing( GRP_NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumDistPurchases ) then do;
283857    +   GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
283858    +   GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
283859    +   GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
283860    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
283861    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
283862    +end;
MPRINT(EM_DIAGRAM):   end;
283863    +else do;
MPRINT(EM_DIAGRAM):   else do;
283864    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
283865    +   _dm12 = put( GRP_NumDistPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumDistPurchases , BEST12. );
283866    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
283867    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
283868    +      GRP_NumDistPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = -1;
283869    +      GRP_NumDistPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = -1;
283870    +      GRP_NumDistPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = -1;
283871    +   end;
MPRINT(EM_DIAGRAM):   end;
283872    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
283873    +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
283874    +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
283875    +      GRP_NumDistPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 1;
283876    +   end;
MPRINT(EM_DIAGRAM):   end;
283877    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
283878    +      GRP_NumDistPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 1;
283879    +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
283880    +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
283881    +   end;
MPRINT(EM_DIAGRAM):   end;
283882    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
283883    +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
283884    +      GRP_NumDistPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 1;
283885    +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
283886    +   end;
MPRINT(EM_DIAGRAM):   end;
283887    +   else do;
MPRINT(EM_DIAGRAM):   else do;
283888    +      GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
283889    +      GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
283890    +      GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
283891    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
283892    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
283893    +   end;
MPRINT(EM_DIAGRAM):   end;
283894    +end;
MPRINT(EM_DIAGRAM):   end;
283895    +
283896    +*** Generate dummy variables for GRP_NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumWebPurchases ;
283897    +drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
283898    +if missing( GRP_NumWebPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumWebPurchases ) then do;
283899    +   GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
283900    +   GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
283901    +   GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
283902    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
283903    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
283904    +end;
MPRINT(EM_DIAGRAM):   end;
283905    +else do;
MPRINT(EM_DIAGRAM):   else do;
283906    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
283907    +   _dm12 = put( GRP_NumWebPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumWebPurchases , BEST12. );
283908    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
283909    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
283910    +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
283911    +      GRP_NumWebPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 1;
283912    +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
283913    +   end;
MPRINT(EM_DIAGRAM):   end;
283914    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
283915    +      GRP_NumWebPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = -1;
283916    +      GRP_NumWebPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = -1;
283917    +      GRP_NumWebPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = -1;
283918    +   end;
MPRINT(EM_DIAGRAM):   end;
283919    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
283920    +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
283921    +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
283922    +      GRP_NumWebPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 1;
283923    +   end;
MPRINT(EM_DIAGRAM):   end;
283924    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
283925    +      GRP_NumWebPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 1;
283926    +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
283927    +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
283928    +   end;
MPRINT(EM_DIAGRAM):   end;
283929    +   else do;
MPRINT(EM_DIAGRAM):   else do;
283930    +      GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
283931    +      GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
283932    +      GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
283933    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
283934    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
283935    +   end;
MPRINT(EM_DIAGRAM):   end;
283936    +end;
MPRINT(EM_DIAGRAM):   end;
283937    +
283938    +*** Generate dummy variables for GRP_RFMstat ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RFMstat ;
283939    +drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
283940    +if missing( GRP_RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RFMstat ) then do;
283941    +   GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
283942    +   GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
283943    +   GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
283944    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
283945    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
283946    +end;
MPRINT(EM_DIAGRAM):   end;
283947    +else do;
MPRINT(EM_DIAGRAM):   else do;
283948    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
283949    +   _dm12 = put( GRP_RFMstat , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RFMstat , BEST12. );
283950    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
283951    +   if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
283952    +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
283953    +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
283954    +      GRP_RFMstat4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 1;
283955    +   end;
MPRINT(EM_DIAGRAM):   end;
283956    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
283957    +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
283958    +      GRP_RFMstat3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 1;
283959    +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
283960    +   end;
MPRINT(EM_DIAGRAM):   end;
283961    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
283962    +      GRP_RFMstat2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = -1;
283963    +      GRP_RFMstat3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = -1;
283964    +      GRP_RFMstat4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = -1;
283965    +   end;
MPRINT(EM_DIAGRAM):   end;
283966    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
283967    +      GRP_RFMstat2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 1;
283968    +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
283969    +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
283970    +   end;
MPRINT(EM_DIAGRAM):   end;
283971    +   else do;
MPRINT(EM_DIAGRAM):   else do;
283972    +      GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
283973    +      GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
283974    +      GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
283975    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
283976    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
283977    +   end;
MPRINT(EM_DIAGRAM):   end;
283978    +end;
MPRINT(EM_DIAGRAM):   end;
283979    +
283980    +*** Generate dummy variables for GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RMntFrq ;
283981    +drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
283982    +if missing( GRP_RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RMntFrq ) then do;
283983    +   GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
283984    +   GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
283985    +   GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
283986    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
283987    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
283988    +end;
MPRINT(EM_DIAGRAM):   end;
283989    +else do;
MPRINT(EM_DIAGRAM):   else do;
283990    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
283991    +   _dm12 = put( GRP_RMntFrq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RMntFrq , BEST12. );
283992    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
283993    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
283994    +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
283995    +      GRP_RMntFrq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 1;
283996    +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
283997    +   end;
MPRINT(EM_DIAGRAM):   end;
283998    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
283999    +      GRP_RMntFrq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = -1;
284000    +      GRP_RMntFrq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = -1;
284001    +      GRP_RMntFrq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = -1;
284002    +   end;
MPRINT(EM_DIAGRAM):   end;
284003    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
284004    +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
284005    +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
284006    +      GRP_RMntFrq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 1;
284007    +   end;
MPRINT(EM_DIAGRAM):   end;
284008    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
284009    +      GRP_RMntFrq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 1;
284010    +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
284011    +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
284012    +   end;
MPRINT(EM_DIAGRAM):   end;
284013    +   else do;
MPRINT(EM_DIAGRAM):   else do;
284014    +      GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
284015    +      GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
284016    +      GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
284017    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
284018    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
284019    +   end;
MPRINT(EM_DIAGRAM):   end;
284020    +end;
MPRINT(EM_DIAGRAM):   end;
284021    +
284022    +*** Generate dummy variables for GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Recency ;
284023    +drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
284024    +if missing( GRP_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Recency ) then do;
284025    +   GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
284026    +   GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
284027    +   GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
284028    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
284029    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
284030    +end;
MPRINT(EM_DIAGRAM):   end;
284031    +else do;
MPRINT(EM_DIAGRAM):   else do;
284032    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
284033    +   _dm12 = put( GRP_Recency , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Recency , BEST12. );
284034    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
284035    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
284036    +      GRP_Recency2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = -1;
284037    +      GRP_Recency3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = -1;
284038    +      GRP_Recency4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = -1;
284039    +   end;
MPRINT(EM_DIAGRAM):   end;
284040    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
284041    +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
284042    +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
284043    +      GRP_Recency4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 1;
284044    +   end;
MPRINT(EM_DIAGRAM):   end;
284045    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
284046    +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
284047    +      GRP_Recency3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 1;
284048    +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
284049    +   end;
MPRINT(EM_DIAGRAM):   end;
284050    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
284051    +      GRP_Recency2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 1;
284052    +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
284053    +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
284054    +   end;
MPRINT(EM_DIAGRAM):   end;
284055    +   else do;
MPRINT(EM_DIAGRAM):   else do;
284056    +      GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
284057    +      GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
284058    +      GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
284059    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
284060    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
284061    +   end;
MPRINT(EM_DIAGRAM):   end;
284062    +end;
MPRINT(EM_DIAGRAM):   end;
284063    +
284064    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
284065    +*** Checking missing input Interval
284066    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
284067    +
284068    +IF NMISS(
284069    +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Year_Birth ) THEN DO;
284070    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
284071    +
284072    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
284073    +END;
MPRINT(EM_DIAGRAM):   END;
284074    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
284075    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
284076    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
284077    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
284078    +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
284079    +END;
MPRINT(EM_DIAGRAM):   END;
284080    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
284081    +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
284082    +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
284083    +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
284084    +END;
MPRINT(EM_DIAGRAM):   END;
284085    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
284086    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
284087    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
284088    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
284089    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
284090    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
284091    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
284092    +   H1x1_1  =     2.97734663226499 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 2.97734663226499 * S_Year_Birth ;
284093    +   H1x1_2  =    -0.02332673614472 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.02332673614472 * S_Year_Birth ;
284094    +   H1x1_3  =    -0.21203760038885 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.21203760038885 * S_Year_Birth ;
284095    +   H1x1_4  =    -0.93232920235603 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.93232920235603 * S_Year_Birth ;
284096    +   H1x1_5  =     0.52440348943963 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0.52440348943963 * S_Year_Birth ;
284097    +   H1x1_6  =    -2.87318917513282 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -2.87318917513282 * S_Year_Birth ;
284098    +   H1x1_7  =     1.25367568490371 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_7 = 1.25367568490371 * S_Year_Birth ;
284099    +   H1x1_1  = H1x1_1  +     2.80677271834446 * GRP_AcceptedCmp52
284100    +          +    -2.32565230752453 * GRP_Frq2  +     2.22037590877354 * GRP_Frq3
284101    +          +    -3.68499358333843 * GRP_Frq4  +    -2.13081454889876 *
284102    +        GRP_Income2  +    -0.38485085997351 * GRP_Income3
284103    +          +     0.43520727568519 * GRP_Income4  +    -1.67383365803521 *
284104    +        GRP_Mnt2  +    -2.27881933900388 * GRP_Mnt3  +    -0.69213755321586 *
284105    +        GRP_Mnt4  +    -0.04079006532289 * GRP_MntFishProducts2
284106    +          +    -2.14876852259668 * GRP_MntFishProducts3
284107    +          +     1.83260002021024 * GRP_MntFishProducts4
284108    +          +     0.51096990118592 * GRP_MntGoldProds2
284109    +          +     0.50696068122006 * GRP_MntGoldProds3
284110    +          +     0.74230349643824 * GRP_MntGoldProds4
284111    +          +     1.49045716090612 * GRP_MntMeatProducts2
284112    +          +    -0.61254307122158 * GRP_MntMeatProducts3
284113    +          +     1.56999187930143 * GRP_MntMeatProducts4
284114    +          +    -0.31632843892516 * GRP_MntWines2  +    -1.05626215752058 *
284115    +        GRP_MntWines3  +    -0.15924458576467 * GRP_MntWines4
284116    +          +    -1.09346439824911 * GRP_NumCatalogPurchases3
284117    +          +     1.58785113957128 * GRP_NumCatalogPurchases4
284118    +          +    -0.62454988809727 * GRP_NumDistPurchases2
284119    +          +     1.37295312356584 * GRP_NumDistPurchases3
284120    +          +      1.5440119795954 * GRP_NumDistPurchases4
284121    +          +    -0.26547715068585 * GRP_NumWebPurchases2
284122    +          +     2.62305554684179 * GRP_NumWebPurchases3
284123    +          +     0.91247524672275 * GRP_NumWebPurchases4
284124    +          +     0.71467719190546 * GRP_RFMstat2  +     0.44245796416885 *
284125    +        GRP_RFMstat3  +      0.0238006357066 * GRP_RFMstat4
284126    +          +    -2.17145575258416 * GRP_RMntFrq2  +    -3.29596121756931 *
284127    +        GRP_RMntFrq3  +    -0.63464596926142 * GRP_RMntFrq4
284128    +          +      0.2862685045527 * GRP_Recency2  +    -0.77133964406228 *
284129    +        GRP_Recency3  +     0.83634712420156 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 2.80677271834446 * GRP_AcceptedCmp52 + 
-2.32565230752453 * GRP_Frq2 + 2.22037590877354 * GRP_Frq3 + -3.68499358333843 * GRP_Frq4 + 
-2.13081454889876 * GRP_Income2 + -0.38485085997351 * GRP_Income3 + 0.43520727568519 * 
GRP_Income4 + -1.67383365803521 * GRP_Mnt2 + -2.27881933900388 * GRP_Mnt3 + -0.69213755321586 
* GRP_Mnt4 + -0.04079006532289 * GRP_MntFishProducts2 + -2.14876852259668 * 
GRP_MntFishProducts3 + 1.83260002021024 * GRP_MntFishProducts4 + 0.51096990118592 * 
GRP_MntGoldProds2 + 0.50696068122006 * GRP_MntGoldProds3 + 0.74230349643824 * 
GRP_MntGoldProds4 + 1.49045716090612 * GRP_MntMeatProducts2 + -0.61254307122158 * 
GRP_MntMeatProducts3 + 1.56999187930143 * GRP_MntMeatProducts4 + -0.31632843892516 * 
GRP_MntWines2 + -1.05626215752058 * GRP_MntWines3 + -0.15924458576467 * GRP_MntWines4 + 
-1.09346439824911 * GRP_NumCatalogPurchases3 + 1.58785113957128 * GRP_NumCatalogPurchases4 + 
-0.62454988809727 * GRP_NumDistPurchases2 + 1.37295312356584 * GRP_NumDistPurchases3 + 
1.5440119795954 * GRP_NumDistPurchases4 + -0.26547715068585 * GRP_NumWebPurchases2 + 
2.62305554684179 * GRP_NumWebPurchases3 + 0.91247524672275 * GRP_NumWebPurchases4 + 
0.71467719190546 * GRP_RFMstat2 + 0.44245796416885 * GRP_RFMstat3 + 0.0238006357066 * 
GRP_RFMstat4 + -2.17145575258416 * GRP_RMntFrq2 + -3.29596121756931 * GRP_RMntFrq3 + 
-0.63464596926142 * GRP_RMntFrq4 + 0.2862685045527 * GRP_Recency2 + -0.77133964406228 * 
GRP_Recency3 + 0.83634712420156 * GRP_Recency4 ;
284130    +   H1x1_2  = H1x1_2  +    -2.21554077433203 * GRP_AcceptedCmp52
284131    +          +     -1.3297040775516 * GRP_Frq2  +     -1.2691861008704 * GRP_Frq3
284132    +          +    -0.83350069121519 * GRP_Frq4  +    -0.45956269964658 *
284133    +        GRP_Income2  +    -0.23636051304973 * GRP_Income3
284134    +          +    -0.09369458285141 * GRP_Income4  +     0.28408485738252 *
284135    +        GRP_Mnt2  +    -1.43976442737366 * GRP_Mnt3  +    -0.47811534578751 *
284136    +        GRP_Mnt4  +     1.33306738423502 * GRP_MntFishProducts2
284137    +          +    -1.03235983303498 * GRP_MntFishProducts3
284138    +          +     1.43737242782063 * GRP_MntFishProducts4
284139    +          +    -0.10286834037331 * GRP_MntGoldProds2
284140    +          +     0.74054061895326 * GRP_MntGoldProds3
284141    +          +     0.27916388015938 * GRP_MntGoldProds4
284142    +          +     0.12775665160956 * GRP_MntMeatProducts2
284143    +          +     1.94239791535409 * GRP_MntMeatProducts3
284144    +          +      2.8604089986372 * GRP_MntMeatProducts4
284145    +          +     0.18466046439888 * GRP_MntWines2  +     1.56362849954362 *
284146    +        GRP_MntWines3  +    -0.74058839441389 * GRP_MntWines4
284147    +          +     0.80335076525252 * GRP_NumCatalogPurchases3
284148    +          +     -2.1633226572249 * GRP_NumCatalogPurchases4
284149    +          +    -0.87650147959772 * GRP_NumDistPurchases2
284150    +          +     1.12706069993787 * GRP_NumDistPurchases3
284151    +          +    -1.96498929641584 * GRP_NumDistPurchases4
284152    +          +     1.06875251220076 * GRP_NumWebPurchases2
284153    +          +     1.19584362733739 * GRP_NumWebPurchases3
284154    +          +    -0.75462993535725 * GRP_NumWebPurchases4
284155    +          +     0.34313165289913 * GRP_RFMstat2  +    -3.07377616469396 *
284156    +        GRP_RFMstat3  +    -0.30628532882149 * GRP_RFMstat4
284157    +          +     0.90422181954504 * GRP_RMntFrq2  +    -0.82179895308246 *
284158    +        GRP_RMntFrq3  +    -0.01336870072701 * GRP_RMntFrq4
284159    +          +     0.78962138115092 * GRP_Recency2  +     0.35738352585872 *
284160    +        GRP_Recency3  +    -0.83190183219938 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -2.21554077433203 * GRP_AcceptedCmp52 + 
-1.3297040775516 * GRP_Frq2 + -1.2691861008704 * GRP_Frq3 + -0.83350069121519 * GRP_Frq4 + 
-0.45956269964658 * GRP_Income2 + -0.23636051304973 * GRP_Income3 + -0.09369458285141 * 
GRP_Income4 + 0.28408485738252 * GRP_Mnt2 + -1.43976442737366 * GRP_Mnt3 + -0.47811534578751 * 
GRP_Mnt4 + 1.33306738423502 * GRP_MntFishProducts2 + -1.03235983303498 * GRP_MntFishProducts3 
+ 1.43737242782063 * GRP_MntFishProducts4 + -0.10286834037331 * GRP_MntGoldProds2 + 
0.74054061895326 * GRP_MntGoldProds3 + 0.27916388015938 * GRP_MntGoldProds4 + 0.12775665160956 
* GRP_MntMeatProducts2 + 1.94239791535409 * GRP_MntMeatProducts3 + 2.8604089986372 * 
GRP_MntMeatProducts4 + 0.18466046439888 * GRP_MntWines2 + 1.56362849954362 * GRP_MntWines3 + 
-0.74058839441389 * GRP_MntWines4 + 0.80335076525252 * GRP_NumCatalogPurchases3 + 
-2.1633226572249 * GRP_NumCatalogPurchases4 + -0.87650147959772 * GRP_NumDistPurchases2 + 
1.12706069993787 * GRP_NumDistPurchases3 + -1.96498929641584 * GRP_NumDistPurchases4 + 
1.06875251220076 * GRP_NumWebPurchases2 + 1.19584362733739 * GRP_NumWebPurchases3 + 
-0.75462993535725 * GRP_NumWebPurchases4 + 0.34313165289913 * GRP_RFMstat2 + -3.07377616469396 
* GRP_RFMstat3 + -0.30628532882149 * GRP_RFMstat4 + 0.90422181954504 * GRP_RMntFrq2 + 
-0.82179895308246 * GRP_RMntFrq3 + -0.01336870072701 * GRP_RMntFrq4 + 0.78962138115092 * 
GRP_Recency2 + 0.35738352585872 * GRP_Recency3 + -0.83190183219938 * GRP_Recency4 ;
284161    +   H1x1_3  = H1x1_3  +     -0.1278687821469 * GRP_AcceptedCmp52
284162    +          +     1.77838881912744 * GRP_Frq2  +    -0.95209160545855 * GRP_Frq3
284163    +          +     2.40141754421545 * GRP_Frq4  +     0.60378783958273 *
284164    +        GRP_Income2  +    -2.18346600414349 * GRP_Income3
284165    +          +     0.80627498676781 * GRP_Income4  +     0.81141725300118 *
284166    +        GRP_Mnt2  +    -0.20395009454155 * GRP_Mnt3  +     -0.3358053338153 *
284167    +        GRP_Mnt4  +    -0.16819978312641 * GRP_MntFishProducts2
284168    +          +    -0.11485741469493 * GRP_MntFishProducts3
284169    +          +     1.45721315298108 * GRP_MntFishProducts4
284170    +          +     0.26086838482974 * GRP_MntGoldProds2
284171    +          +    -0.13326700912822 * GRP_MntGoldProds3
284172    +          +    -0.31998514458297 * GRP_MntGoldProds4
284173    +          +     0.87003612251325 * GRP_MntMeatProducts2
284174    +          +    -0.25985022264915 * GRP_MntMeatProducts3
284175    +          +    -0.87011310494619 * GRP_MntMeatProducts4
284176    +          +     0.18840026647696 * GRP_MntWines2  +    -0.82430822747103 *
284177    +        GRP_MntWines3  +     -0.1293341794059 * GRP_MntWines4
284178    +          +     1.20111821881337 * GRP_NumCatalogPurchases3
284179    +          +     1.02378241927709 * GRP_NumCatalogPurchases4
284180    +          +      1.0835984835482 * GRP_NumDistPurchases2
284181    +          +     1.45339482543591 * GRP_NumDistPurchases3
284182    +          +     0.28792255375632 * GRP_NumDistPurchases4
284183    +          +     1.88871344284328 * GRP_NumWebPurchases2
284184    +          +     1.61086784930132 * GRP_NumWebPurchases3
284185    +          +     0.49767560191528 * GRP_NumWebPurchases4
284186    +          +    -2.78411910257351 * GRP_RFMstat2  +     0.84118867927224 *
284187    +        GRP_RFMstat3  +    -0.16102328336547 * GRP_RFMstat4
284188    +          +     0.27000998599161 * GRP_RMntFrq2  +     0.90131491180658 *
284189    +        GRP_RMntFrq3  +    -0.16432121563449 * GRP_RMntFrq4
284190    +          +     0.75599465145487 * GRP_Recency2  +     1.38233564862138 *
284191    +        GRP_Recency3  +      0.0905871640358 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.1278687821469 * GRP_AcceptedCmp52 + 
1.77838881912744 * GRP_Frq2 + -0.95209160545855 * GRP_Frq3 + 2.40141754421545 * GRP_Frq4 + 
0.60378783958273 * GRP_Income2 + -2.18346600414349 * GRP_Income3 + 0.80627498676781 * 
GRP_Income4 + 0.81141725300118 * GRP_Mnt2 + -0.20395009454155 * GRP_Mnt3 + -0.3358053338153 * 
GRP_Mnt4 + -0.16819978312641 * GRP_MntFishProducts2 + -0.11485741469493 * GRP_MntFishProducts3 
+ 1.45721315298108 * GRP_MntFishProducts4 + 0.26086838482974 * GRP_MntGoldProds2 + 
-0.13326700912822 * GRP_MntGoldProds3 + -0.31998514458297 * GRP_MntGoldProds4 + 
0.87003612251325 * GRP_MntMeatProducts2 + -0.25985022264915 * GRP_MntMeatProducts3 + 
-0.87011310494619 * GRP_MntMeatProducts4 + 0.18840026647696 * GRP_MntWines2 + 
-0.82430822747103 * GRP_MntWines3 + -0.1293341794059 * GRP_MntWines4 + 1.20111821881337 * 
GRP_NumCatalogPurchases3 + 1.02378241927709 * GRP_NumCatalogPurchases4 + 1.0835984835482 * 
GRP_NumDistPurchases2 + 1.45339482543591 * GRP_NumDistPurchases3 + 0.28792255375632 * 
GRP_NumDistPurchases4 + 1.88871344284328 * GRP_NumWebPurchases2 + 1.61086784930132 * 
GRP_NumWebPurchases3 + 0.49767560191528 * GRP_NumWebPurchases4 + -2.78411910257351 * 
GRP_RFMstat2 + 0.84118867927224 * GRP_RFMstat3 + -0.16102328336547 * GRP_RFMstat4 + 
0.27000998599161 * GRP_RMntFrq2 + 0.90131491180658 * GRP_RMntFrq3 + -0.16432121563449 * 
GRP_RMntFrq4 + 0.75599465145487 * GRP_Recency2 + 1.38233564862138 * GRP_Recency3 + 
0.0905871640358 * GRP_Recency4 ;
284192    +   H1x1_4  = H1x1_4  +     0.63304456551117 * GRP_AcceptedCmp52
284193    +          +    -0.14901142536344 * GRP_Frq2  +    -1.08381199299565 * GRP_Frq3
284194    +          +    -0.85011511275423 * GRP_Frq4  +    -0.08287353061518 *
284195    +        GRP_Income2  +    -0.58867333501692 * GRP_Income3
284196    +          +      2.7097455309793 * GRP_Income4  +    -0.69224144793047 *
284197    +        GRP_Mnt2  +    -0.68026366312168 * GRP_Mnt3  +     1.66551851821907 *
284198    +        GRP_Mnt4  +    -1.22509209613269 * GRP_MntFishProducts2
284199    +          +    -0.00259407262353 * GRP_MntFishProducts3
284200    +          +     0.26637234051452 * GRP_MntFishProducts4
284201    +          +     1.23072457246487 * GRP_MntGoldProds2
284202    +          +     0.27789879553199 * GRP_MntGoldProds3
284203    +          +    -1.84318316043809 * GRP_MntGoldProds4
284204    +          +    -0.37980618439099 * GRP_MntMeatProducts2
284205    +          +    -0.29547725841338 * GRP_MntMeatProducts3
284206    +          +      1.3351420752995 * GRP_MntMeatProducts4
284207    +          +    -0.69084339698082 * GRP_MntWines2  +    -2.20092193594928 *
284208    +        GRP_MntWines3  +     1.01263725926364 * GRP_MntWines4
284209    +          +     1.64715242240489 * GRP_NumCatalogPurchases3
284210    +          +     0.01013329918753 * GRP_NumCatalogPurchases4
284211    +          +      0.0553124072484 * GRP_NumDistPurchases2
284212    +          +     0.76354979572241 * GRP_NumDistPurchases3
284213    +          +     0.88878742575161 * GRP_NumDistPurchases4
284214    +          +    -0.02629928898859 * GRP_NumWebPurchases2
284215    +          +     1.58583162640849 * GRP_NumWebPurchases3
284216    +          +    -0.90266287490405 * GRP_NumWebPurchases4
284217    +          +    -1.30674857203711 * GRP_RFMstat2  +    -1.17342096545194 *
284218    +        GRP_RFMstat3  +    -0.30126794428155 * GRP_RFMstat4
284219    +          +     -0.8659792150521 * GRP_RMntFrq2  +    -1.44590383236006 *
284220    +        GRP_RMntFrq3  +    -0.80966415705314 * GRP_RMntFrq4
284221    +          +     0.87489420639261 * GRP_Recency2  +    -1.40960165096221 *
284222    +        GRP_Recency3  +    -0.53680151949787 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.63304456551117 * GRP_AcceptedCmp52 + 
-0.14901142536344 * GRP_Frq2 + -1.08381199299565 * GRP_Frq3 + -0.85011511275423 * GRP_Frq4 + 
-0.08287353061518 * GRP_Income2 + -0.58867333501692 * GRP_Income3 + 2.7097455309793 * 
GRP_Income4 + -0.69224144793047 * GRP_Mnt2 + -0.68026366312168 * GRP_Mnt3 + 1.66551851821907 * 
GRP_Mnt4 + -1.22509209613269 * GRP_MntFishProducts2 + -0.00259407262353 * GRP_MntFishProducts3 
+ 0.26637234051452 * GRP_MntFishProducts4 + 1.23072457246487 * GRP_MntGoldProds2 + 
0.27789879553199 * GRP_MntGoldProds3 + -1.84318316043809 * GRP_MntGoldProds4 + 
-0.37980618439099 * GRP_MntMeatProducts2 + -0.29547725841338 * GRP_MntMeatProducts3 + 
1.3351420752995 * GRP_MntMeatProducts4 + -0.69084339698082 * GRP_MntWines2 + -2.20092193594928 
* GRP_MntWines3 + 1.01263725926364 * GRP_MntWines4 + 1.64715242240489 * 
GRP_NumCatalogPurchases3 + 0.01013329918753 * GRP_NumCatalogPurchases4 + 0.0553124072484 * 
GRP_NumDistPurchases2 + 0.76354979572241 * GRP_NumDistPurchases3 + 0.88878742575161 * 
GRP_NumDistPurchases4 + -0.02629928898859 * GRP_NumWebPurchases2 + 1.58583162640849 * 
GRP_NumWebPurchases3 + -0.90266287490405 * GRP_NumWebPurchases4 + -1.30674857203711 * 
GRP_RFMstat2 + -1.17342096545194 * GRP_RFMstat3 + -0.30126794428155 * GRP_RFMstat4 + 
-0.8659792150521 * GRP_RMntFrq2 + -1.44590383236006 * GRP_RMntFrq3 + -0.80966415705314 * 
GRP_RMntFrq4 + 0.87489420639261 * GRP_Recency2 + -1.40960165096221 * GRP_Recency3 + 
-0.53680151949787 * GRP_Recency4 ;
284223    +   H1x1_5  = H1x1_5  +    -0.21941115903739 * GRP_AcceptedCmp52
284224    +          +     0.45333751914711 * GRP_Frq2  +     -3.0539111804593 * GRP_Frq3
284225    +          +     0.04419455266766 * GRP_Frq4  +     0.43424963383962 *
284226    +        GRP_Income2  +     2.20143802199151 * GRP_Income3
284227    +          +    -0.28702964858037 * GRP_Income4  +    -1.13156956520544 *
284228    +        GRP_Mnt2  +     1.50720291442363 * GRP_Mnt3  +    -1.22848161283033 *
284229    +        GRP_Mnt4  +     -0.7725131971727 * GRP_MntFishProducts2
284230    +          +    -1.66553508839843 * GRP_MntFishProducts3
284231    +          +     3.34099127472134 * GRP_MntFishProducts4
284232    +          +    -3.77620930649926 * GRP_MntGoldProds2
284233    +          +     2.75980592823208 * GRP_MntGoldProds3
284234    +          +    -0.90664928399655 * GRP_MntGoldProds4
284235    +          +    -1.27778215433985 * GRP_MntMeatProducts2
284236    +          +    -0.38584098789626 * GRP_MntMeatProducts3
284237    +          +      0.8642940393434 * GRP_MntMeatProducts4
284238    +          +     -1.9800576470315 * GRP_MntWines2  +    -0.84678624865719 *
284239    +        GRP_MntWines3  +    -0.71867792060605 * GRP_MntWines4
284240    +          +     0.54374663319998 * GRP_NumCatalogPurchases3
284241    +          +     0.84217480467185 * GRP_NumCatalogPurchases4
284242    +          +    -0.04373645189331 * GRP_NumDistPurchases2
284243    +          +    -3.26167594790936 * GRP_NumDistPurchases3
284244    +          +    -1.17302893253955 * GRP_NumDistPurchases4
284245    +          +     1.08907656354379 * GRP_NumWebPurchases2
284246    +          +    -1.23512651413063 * GRP_NumWebPurchases3
284247    +          +     1.21540059785356 * GRP_NumWebPurchases4
284248    +          +     1.38488146196728 * GRP_RFMstat2  +     0.90046251067185 *
284249    +        GRP_RFMstat3  +     1.44622088949053 * GRP_RFMstat4
284250    +          +     0.24358390082829 * GRP_RMntFrq2  +    -1.52588683776436 *
284251    +        GRP_RMntFrq3  +    -1.28643658389964 * GRP_RMntFrq4
284252    +          +    -0.57567006875063 * GRP_Recency2  +    -1.38736001754893 *
284253    +        GRP_Recency3  +    -0.14702610320846 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.21941115903739 * GRP_AcceptedCmp52 + 
0.45333751914711 * GRP_Frq2 + -3.0539111804593 * GRP_Frq3 + 0.04419455266766 * GRP_Frq4 + 
0.43424963383962 * GRP_Income2 + 2.20143802199151 * GRP_Income3 + -0.28702964858037 * 
GRP_Income4 + -1.13156956520544 * GRP_Mnt2 + 1.50720291442363 * GRP_Mnt3 + -1.22848161283033 * 
GRP_Mnt4 + -0.7725131971727 * GRP_MntFishProducts2 + -1.66553508839843 * GRP_MntFishProducts3 
+ 3.34099127472134 * GRP_MntFishProducts4 + -3.77620930649926 * GRP_MntGoldProds2 + 
2.75980592823208 * GRP_MntGoldProds3 + -0.90664928399655 * GRP_MntGoldProds4 + 
-1.27778215433985 * GRP_MntMeatProducts2 + -0.38584098789626 * GRP_MntMeatProducts3 + 
0.8642940393434 * GRP_MntMeatProducts4 + -1.9800576470315 * GRP_MntWines2 + -0.84678624865719 
* GRP_MntWines3 + -0.71867792060605 * GRP_MntWines4 + 0.54374663319998 * 
GRP_NumCatalogPurchases3 + 0.84217480467185 * GRP_NumCatalogPurchases4 + -0.04373645189331 * 
GRP_NumDistPurchases2 + -3.26167594790936 * GRP_NumDistPurchases3 + -1.17302893253955 * 
GRP_NumDistPurchases4 + 1.08907656354379 * GRP_NumWebPurchases2 + -1.23512651413063 * 
GRP_NumWebPurchases3 + 1.21540059785356 * GRP_NumWebPurchases4 + 1.38488146196728 * 
GRP_RFMstat2 + 0.90046251067185 * GRP_RFMstat3 + 1.44622088949053 * GRP_RFMstat4 + 
0.24358390082829 * GRP_RMntFrq2 + -1.52588683776436 * GRP_RMntFrq3 + -1.28643658389964 * 
GRP_RMntFrq4 + -0.57567006875063 * GRP_Recency2 + -1.38736001754893 * GRP_Recency3 + 
-0.14702610320846 * GRP_Recency4 ;
284254    +   H1x1_6  = H1x1_6  +     0.08036802334337 * GRP_AcceptedCmp52
284255    +          +    -2.51458257290705 * GRP_Frq2  +     0.74528046172987 * GRP_Frq3
284256    +          +    -0.77535820763324 * GRP_Frq4  +    -2.00398370232748 *
284257    +        GRP_Income2  +     2.31528209254516 * GRP_Income3
284258    +          +     0.31630780664757 * GRP_Income4  +    -0.52394275421685 *
284259    +        GRP_Mnt2  +    -0.11778857296632 * GRP_Mnt3  +     0.54634621990664 *
284260    +        GRP_Mnt4  +    -1.83414469533751 * GRP_MntFishProducts2
284261    +          +    -2.67281939906452 * GRP_MntFishProducts3
284262    +          +     0.40242786465667 * GRP_MntFishProducts4
284263    +          +     1.21530608953831 * GRP_MntGoldProds2
284264    +          +      1.3503878333604 * GRP_MntGoldProds3
284265    +          +    -0.90580344196397 * GRP_MntGoldProds4
284266    +          +    -1.45763540546851 * GRP_MntMeatProducts2
284267    +          +     -1.1437696213546 * GRP_MntMeatProducts3
284268    +          +    -0.95836970043212 * GRP_MntMeatProducts4
284269    +          +     0.05665970127644 * GRP_MntWines2  +     0.73760441066896 *
284270    +        GRP_MntWines3  +    -0.66251833030334 * GRP_MntWines4
284271    +          +    -0.66756860309452 * GRP_NumCatalogPurchases3
284272    +          +    -1.77302756421253 * GRP_NumCatalogPurchases4
284273    +          +     0.41629563300233 * GRP_NumDistPurchases2
284274    +          +     2.64707563295858 * GRP_NumDistPurchases3
284275    +          +    -2.61014123917694 * GRP_NumDistPurchases4
284276    +          +     1.31436489534812 * GRP_NumWebPurchases2
284277    +          +    -0.44152222308186 * GRP_NumWebPurchases3
284278    +          +     1.72168992115176 * GRP_NumWebPurchases4
284279    +          +    -0.60634873547541 * GRP_RFMstat2  +      0.5143401306027 *
284280    +        GRP_RFMstat3  +      0.4037230104052 * GRP_RFMstat4
284281    +          +     1.85795667721847 * GRP_RMntFrq2  +    -1.13313695958964 *
284282    +        GRP_RMntFrq3  +     1.21816928983774 * GRP_RMntFrq4
284283    +          +     0.28142803075343 * GRP_Recency2  +    -0.43031870131445 *
284284    +        GRP_Recency3  +    -0.98956301213704 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + 0.08036802334337 * GRP_AcceptedCmp52 + 
-2.51458257290705 * GRP_Frq2 + 0.74528046172987 * GRP_Frq3 + -0.77535820763324 * GRP_Frq4 + 
-2.00398370232748 * GRP_Income2 + 2.31528209254516 * GRP_Income3 + 0.31630780664757 * 
GRP_Income4 + -0.52394275421685 * GRP_Mnt2 + -0.11778857296632 * GRP_Mnt3 + 0.54634621990664 * 
GRP_Mnt4 + -1.83414469533751 * GRP_MntFishProducts2 + -2.67281939906452 * GRP_MntFishProducts3 
+ 0.40242786465667 * GRP_MntFishProducts4 + 1.21530608953831 * GRP_MntGoldProds2 + 
1.3503878333604 * GRP_MntGoldProds3 + -0.90580344196397 * GRP_MntGoldProds4 + 
-1.45763540546851 * GRP_MntMeatProducts2 + -1.1437696213546 * GRP_MntMeatProducts3 + 
-0.95836970043212 * GRP_MntMeatProducts4 + 0.05665970127644 * GRP_MntWines2 + 0.73760441066896 
* GRP_MntWines3 + -0.66251833030334 * GRP_MntWines4 + -0.66756860309452 * 
GRP_NumCatalogPurchases3 + -1.77302756421253 * GRP_NumCatalogPurchases4 + 0.41629563300233 * 
GRP_NumDistPurchases2 + 2.64707563295858 * GRP_NumDistPurchases3 + -2.61014123917694 * 
GRP_NumDistPurchases4 + 1.31436489534812 * GRP_NumWebPurchases2 + -0.44152222308186 * 
GRP_NumWebPurchases3 + 1.72168992115176 * GRP_NumWebPurchases4 + -0.60634873547541 * 
GRP_RFMstat2 + 0.5143401306027 * GRP_RFMstat3 + 0.4037230104052 * GRP_RFMstat4 + 
1.85795667721847 * GRP_RMntFrq2 + -1.13313695958964 * GRP_RMntFrq3 + 1.21816928983774 * 
GRP_RMntFrq4 + 0.28142803075343 * GRP_Recency2 + -0.43031870131445 * GRP_Recency3 + 
-0.98956301213704 * GRP_Recency4 ;
284285    +   H1x1_7  = H1x1_7  +     0.68410670134149 * GRP_AcceptedCmp52
284286    +          +     0.10121806405455 * GRP_Frq2  +     -1.8375798445876 * GRP_Frq3
284287    +          +     -2.3304704350487 * GRP_Frq4  +     -0.4064720818222 *
284288    +        GRP_Income2  +     1.14246001493098 * GRP_Income3
284289    +          +     0.30563934221376 * GRP_Income4  +    -1.03456782830408 *
284290    +        GRP_Mnt2  +     0.68732316665899 * GRP_Mnt3  +     0.12193839917197 *
284291    +        GRP_Mnt4  +     1.78947230945337 * GRP_MntFishProducts2
284292    +          +      -0.152562533802 * GRP_MntFishProducts3
284293    +          +     0.16800852501402 * GRP_MntFishProducts4
284294    +          +    -0.43436913890783 * GRP_MntGoldProds2
284295    +          +    -0.36427695823088 * GRP_MntGoldProds3
284296    +          +    -0.70562605444874 * GRP_MntGoldProds4
284297    +          +      1.1896868399991 * GRP_MntMeatProducts2
284298    +          +    -3.25683109762258 * GRP_MntMeatProducts3
284299    +          +     1.07082922763777 * GRP_MntMeatProducts4
284300    +          +     0.20781058114233 * GRP_MntWines2  +     0.58933954589501 *
284301    +        GRP_MntWines3  +    -0.47329387352048 * GRP_MntWines4
284302    +          +     2.86401269707592 * GRP_NumCatalogPurchases3
284303    +          +    -0.42660183421871 * GRP_NumCatalogPurchases4
284304    +          +     1.70072621341351 * GRP_NumDistPurchases2
284305    +          +    -0.01744947613595 * GRP_NumDistPurchases3
284306    +          +    -2.08742260039568 * GRP_NumDistPurchases4
284307    +          +    -1.04444309037822 * GRP_NumWebPurchases2
284308    +          +    -3.12746125340209 * GRP_NumWebPurchases3
284309    +          +    -0.71369198142362 * GRP_NumWebPurchases4
284310    +          +    -0.49060046002682 * GRP_RFMstat2  +     0.31117459893753 *
284311    +        GRP_RFMstat3  +     1.58479219562748 * GRP_RFMstat4
284312    +          +     0.16070553135537 * GRP_RMntFrq2  +    -1.17007677743781 *
284313    +        GRP_RMntFrq3  +    -0.89420472751582 * GRP_RMntFrq4
284314    +          +    -0.18368088096716 * GRP_Recency2  +    -0.51910607139607 *
284315    +        GRP_Recency3  +     0.01857782231504 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x1_7 = H1x1_7 + 0.68410670134149 * GRP_AcceptedCmp52 + 
0.10121806405455 * GRP_Frq2 + -1.8375798445876 * GRP_Frq3 + -2.3304704350487 * GRP_Frq4 + 
-0.4064720818222 * GRP_Income2 + 1.14246001493098 * GRP_Income3 + 0.30563934221376 * 
GRP_Income4 + -1.03456782830408 * GRP_Mnt2 + 0.68732316665899 * GRP_Mnt3 + 0.12193839917197 * 
GRP_Mnt4 + 1.78947230945337 * GRP_MntFishProducts2 + -0.152562533802 * GRP_MntFishProducts3 + 
0.16800852501402 * GRP_MntFishProducts4 + -0.43436913890783 * GRP_MntGoldProds2 + 
-0.36427695823088 * GRP_MntGoldProds3 + -0.70562605444874 * GRP_MntGoldProds4 + 
1.1896868399991 * GRP_MntMeatProducts2 + -3.25683109762258 * GRP_MntMeatProducts3 + 
1.07082922763777 * GRP_MntMeatProducts4 + 0.20781058114233 * GRP_MntWines2 + 0.58933954589501 
* GRP_MntWines3 + -0.47329387352048 * GRP_MntWines4 + 2.86401269707592 * 
GRP_NumCatalogPurchases3 + -0.42660183421871 * GRP_NumCatalogPurchases4 + 1.70072621341351 * 
GRP_NumDistPurchases2 + -0.01744947613595 * GRP_NumDistPurchases3 + -2.08742260039568 * 
GRP_NumDistPurchases4 + -1.04444309037822 * GRP_NumWebPurchases2 + -3.12746125340209 * 
GRP_NumWebPurchases3 + -0.71369198142362 * GRP_NumWebPurchases4 + -0.49060046002682 * 
GRP_RFMstat2 + 0.31117459893753 * GRP_RFMstat3 + 1.58479219562748 * GRP_RFMstat4 + 
0.16070553135537 * GRP_RMntFrq2 + -1.17007677743781 * GRP_RMntFrq3 + -0.89420472751582 * 
GRP_RMntFrq4 + -0.18368088096716 * GRP_Recency2 + -0.51910607139607 * GRP_Recency3 + 
0.01857782231504 * GRP_Recency4 ;
284316    +   H1x1_1  =     1.05791912072896 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.05791912072896 + H1x1_1 ;
284317    +   H1x1_2  =    -3.78026109193218 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -3.78026109193218 + H1x1_2 ;
284318    +   H1x1_3  =    -0.67855740578745 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.67855740578745 + H1x1_3 ;
284319    +   H1x1_4  =     1.43165665437202 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.43165665437202 + H1x1_4 ;
284320    +   H1x1_5  =     0.38366959591805 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0.38366959591805 + H1x1_5 ;
284321    +   H1x1_6  =     3.31752226761072 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = 3.31752226761072 + H1x1_6 ;
284322    +   H1x1_7  =    -0.85163584413854 + H1x1_7 ;
MPRINT(EM_DIAGRAM):   H1x1_7 = -0.85163584413854 + H1x1_7 ;
284323    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
284324    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
284325    +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
284326    +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
284327    +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
284328    +   H1x1_4  = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
284329    +   H1x1_5  = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_5 = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
284330    +   H1x1_6  = 1.0 / (1.0 + EXP(MIN( - H1x1_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_6 = 1.0 / (1.0 + EXP(MIN( - H1x1_6 , _EXP_BAR)));
284331    +   H1x1_7  = 1.0 / (1.0 + EXP(MIN( - H1x1_7 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_7 = 1.0 / (1.0 + EXP(MIN( - H1x1_7 , _EXP_BAR)));
284332    +END;
MPRINT(EM_DIAGRAM):   END;
284333    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
284334    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
284335    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
284336    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
284337    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
284338    +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
284339    +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
284340    +   H1x1_7  = .;
MPRINT(EM_DIAGRAM):   H1x1_7 = .;
284341    +END;
MPRINT(EM_DIAGRAM):   END;
284342    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
284343    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
284344    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
284345    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
284346    +   P_DepVar1  =    -4.35435611850415 * H1x1_1  +     3.06316051292344 * H1x1_2
284347    +          +     1.44284980602333 * H1x1_3  +    -3.32913686535523 * H1x1_4
284348    +          +     4.44336056081802 * H1x1_5  +    -4.57997435146105 * H1x1_6
284349    +          +      3.7324549254653 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -4.35435611850415 * H1x1_1 + 3.06316051292344 * H1x1_2 + 
1.44284980602333 * H1x1_3 + -3.32913686535523 * H1x1_4 + 4.44336056081802 * H1x1_5 + 
-4.57997435146105 * H1x1_6 + 3.7324549254653 * H1x1_7 ;
284350    +   P_DepVar1  =    -0.50604500485068 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.50604500485068 + P_DepVar1 ;
284351    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
284352    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
284353    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
284354    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
284355    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
284356    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
284357    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
284358    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
284359    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
284360    +END;
MPRINT(EM_DIAGRAM):   END;
284361    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
284362    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
284363    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
284364    +END;
MPRINT(EM_DIAGRAM):   END;
284365    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
284366    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
284367    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
284368    +END;
MPRINT(EM_DIAGRAM):   END;
284369    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
284370    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
284371    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
284372    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
284373    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
284374    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
284375    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
284376    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
284377    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
284378    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
284379    +END;
MPRINT(EM_DIAGRAM):   END;
284380    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
284381    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
284382    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
284383    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
284384     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
      

MPRINT(EM_DIAGRAM):   quit;
284385     quit;
284386     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
284387     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
284388     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
284389     retain ID 2 Node "AutoNeural22";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural22";
284390     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
284391     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2297 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2297 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

284392     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
284393     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
284394     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2297 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2297 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

284395     proc sort data=EMWS8.AutoNeural22_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural22_variableset out=_temp2(keep=NAME 
CREATOR);
284396     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
284397     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 48 observations read from the data set EMWS8.AUTONEURAL22_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 48 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

284398     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
284399     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
284400     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
284401     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 48 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 48 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

284402     proc contents data=EMWS8.AutoNeural22_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural22_train out=_meta(keep=NAME) noprint;
284403     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 74 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

284404     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
284405     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
284406     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 74 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 74 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

284407     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
284408     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
284409     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
284410     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 74 observations read from the data set WORK._META.
NOTE: There were 48 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 74 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

284411     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
284412     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
284412   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1084 rows and 5 columns.

284413     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

284414     proc append base=EMWS8.Ensmbl50_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl50_FCMP data=_tempx;
284415     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL50_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1084 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL50_FCMP has 1084 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

284416     filename _pref
284416   ! "C:\\predictive-models-project\Workspaces\EMWS8\BINNING\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\BINNING\EMPUBLISHSCORE.sas";
284417     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
284418     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\BINNING\EMPUBLISHSCORE.sas.
284419    +length _UFormat $200;
MPRINT(EM_DIAGRAM):   length _UFormat $200;
284420    +drop _UFormat;
MPRINT(EM_DIAGRAM):   drop _UFormat;
284421    +_UFormat='';
MPRINT(EM_DIAGRAM):   _UFormat='';
284422    +
284423    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
284424    +* Variable: AcceptedCmp5;
MPRINT(EM_DIAGRAM):   * Variable: AcceptedCmp5;
284425    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
284426    +LABEL GRP_AcceptedCmp5 =
284427    +'Grouped: AcceptedCmp5';
MPRINT(EM_DIAGRAM):   LABEL GRP_AcceptedCmp5 = 'Grouped: AcceptedCmp5';
284428    +
284429    +_UFormat = put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _UFormat = put(AcceptedCmp5,BEST.);
284430    +%dmnormip(_UFormat);
MPRINT(DMNORMIP):   call dmnorm(_UFormat,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
284431    +if MISSING(_UFORMAT) then do;
MPRINT(EM_DIAGRAM):   if MISSING(_UFORMAT) then do;
284432    +GRP_AcceptedCmp5 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 1;
284433    +end;
MPRINT(EM_DIAGRAM):   end;
284434    +else if NOT MISSING(_UFORMAT) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(_UFORMAT) then do;
284435    +if (_UFORMAT eq '0'
284436    +) then do;
MPRINT(EM_DIAGRAM):   if (_UFORMAT eq '0' ) then do;
284437    +GRP_AcceptedCmp5 = 2;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 2;
284438    +end;
MPRINT(EM_DIAGRAM):   end;
284439    +else
284440    +if (_UFORMAT eq '1'
284441    +) then do;
MPRINT(EM_DIAGRAM):   else if (_UFORMAT eq '1' ) then do;
284442    +GRP_AcceptedCmp5 = 3;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 3;
284443    +end;
MPRINT(EM_DIAGRAM):   end;
284444    +else do;
MPRINT(EM_DIAGRAM):   else do;
284445    +GRP_AcceptedCmp5 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 1;
284446    +end;
MPRINT(EM_DIAGRAM):   end;
284447    +end;
MPRINT(EM_DIAGRAM):   end;
284448    +
284449    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
284450    +* Variable: Frq;
MPRINT(EM_DIAGRAM):   * Variable: Frq;
284451    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
284452    +LABEL GRP_Frq = "Grouped: Frq";
MPRINT(EM_DIAGRAM):   LABEL GRP_Frq = "Grouped: Frq";
284453    +
284454    +if MISSING(Frq) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Frq) then do;
284455    +GRP_Frq = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq = 1;
284456    +end;
MPRINT(EM_DIAGRAM):   end;
284457    +else if NOT MISSING(Frq) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Frq) then do;
284458    +if Frq < 6 then do;
MPRINT(EM_DIAGRAM):   if Frq < 6 then do;
284459    +GRP_Frq = 2;
MPRINT(EM_DIAGRAM):   GRP_Frq = 2;
284460    +end;
MPRINT(EM_DIAGRAM):   end;
284461    +else
284462    +if 6 <= Frq AND Frq < 12 then do;
MPRINT(EM_DIAGRAM):   else if 6 <= Frq AND Frq < 12 then do;
284463    +GRP_Frq = 3;
MPRINT(EM_DIAGRAM):   GRP_Frq = 3;
284464    +end;
MPRINT(EM_DIAGRAM):   end;
284465    +else
284466    +if 12 <= Frq AND Frq < 18 then do;
MPRINT(EM_DIAGRAM):   else if 12 <= Frq AND Frq < 18 then do;
284467    +GRP_Frq = 4;
MPRINT(EM_DIAGRAM):   GRP_Frq = 4;
284468    +end;
MPRINT(EM_DIAGRAM):   end;
284469    +else
284470    +if 18 <= Frq then do;
MPRINT(EM_DIAGRAM):   else if 18 <= Frq then do;
284471    +GRP_Frq = 5;
MPRINT(EM_DIAGRAM):   GRP_Frq = 5;
284472    +end;
MPRINT(EM_DIAGRAM):   end;
284473    +end;
MPRINT(EM_DIAGRAM):   end;
284474    +
284475    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
284476    +* Variable: Income;
MPRINT(EM_DIAGRAM):   * Variable: Income;
284477    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
284478    +LABEL GRP_Income =
284479    +'Grouped: Income';
MPRINT(EM_DIAGRAM):   LABEL GRP_Income = 'Grouped: Income';
284480    +
284481    +if MISSING(Income) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Income) then do;
284482    +GRP_Income = 1;
MPRINT(EM_DIAGRAM):   GRP_Income = 1;
284483    +end;
MPRINT(EM_DIAGRAM):   end;
284484    +else if NOT MISSING(Income) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Income) then do;
284485    +if Income < 35268 then do;
MPRINT(EM_DIAGRAM):   if Income < 35268 then do;
284486    +GRP_Income = 2;
MPRINT(EM_DIAGRAM):   GRP_Income = 2;
284487    +end;
MPRINT(EM_DIAGRAM):   end;
284488    +else
284489    +if 35268 <= Income AND Income < 52157 then do;
MPRINT(EM_DIAGRAM):   else if 35268 <= Income AND Income < 52157 then do;
284490    +GRP_Income = 3;
MPRINT(EM_DIAGRAM):   GRP_Income = 3;
284491    +end;
MPRINT(EM_DIAGRAM):   end;
284492    +else
284493    +if 52157 <= Income AND Income < 69486 then do;
MPRINT(EM_DIAGRAM):   else if 52157 <= Income AND Income < 69486 then do;
284494    +GRP_Income = 4;
MPRINT(EM_DIAGRAM):   GRP_Income = 4;
284495    +end;
MPRINT(EM_DIAGRAM):   end;
284496    +else
284497    +if 69486 <= Income then do;
MPRINT(EM_DIAGRAM):   else if 69486 <= Income then do;
284498    +GRP_Income = 5;
MPRINT(EM_DIAGRAM):   GRP_Income = 5;
284499    +end;
MPRINT(EM_DIAGRAM):   end;
284500    +end;
MPRINT(EM_DIAGRAM):   end;
284501    +
284502    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
284503    +* Variable: Mnt;
MPRINT(EM_DIAGRAM):   * Variable: Mnt;
284504    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
284505    +LABEL GRP_Mnt = "Grouped: Mnt";
MPRINT(EM_DIAGRAM):   LABEL GRP_Mnt = "Grouped: Mnt";
284506    +
284507    +if MISSING(Mnt) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Mnt) then do;
284508    +GRP_Mnt = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 1;
284509    +end;
MPRINT(EM_DIAGRAM):   end;
284510    +else if NOT MISSING(Mnt) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Mnt) then do;
284511    +if Mnt < 72 then do;
MPRINT(EM_DIAGRAM):   if Mnt < 72 then do;
284512    +GRP_Mnt = 2;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 2;
284513    +end;
MPRINT(EM_DIAGRAM):   end;
284514    +else
284515    +if 72 <= Mnt AND Mnt < 405.5 then do;
MPRINT(EM_DIAGRAM):   else if 72 <= Mnt AND Mnt < 405.5 then do;
284516    +GRP_Mnt = 3;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 3;
284517    +end;
MPRINT(EM_DIAGRAM):   end;
284518    +else
284519    +if 405.5 <= Mnt AND Mnt < 1064 then do;
MPRINT(EM_DIAGRAM):   else if 405.5 <= Mnt AND Mnt < 1064 then do;
284520    +GRP_Mnt = 4;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 4;
284521    +end;
MPRINT(EM_DIAGRAM):   end;
284522    +else
284523    +if 1064 <= Mnt then do;
MPRINT(EM_DIAGRAM):   else if 1064 <= Mnt then do;
284524    +GRP_Mnt = 5;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 5;
284525    +end;
MPRINT(EM_DIAGRAM):   end;
284526    +end;
MPRINT(EM_DIAGRAM):   end;
284527    +
284528    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
284529    +* Variable: MntFishProducts;
MPRINT(EM_DIAGRAM):   * Variable: MntFishProducts;
284530    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
284531    +LABEL GRP_MntFishProducts =
284532    +'Grouped: MntFishProducts';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntFishProducts = 'Grouped: MntFishProducts';
284533    +
284534    +if MISSING(MntFishProducts) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntFishProducts) then do;
284535    +GRP_MntFishProducts = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 1;
284536    +end;
MPRINT(EM_DIAGRAM):   end;
284537    +else if NOT MISSING(MntFishProducts) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntFishProducts) then do;
284538    +if MntFishProducts < 3 then do;
MPRINT(EM_DIAGRAM):   if MntFishProducts < 3 then do;
284539    +GRP_MntFishProducts = 2;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 2;
284540    +end;
MPRINT(EM_DIAGRAM):   end;
284541    +else
284542    +if 3 <= MntFishProducts AND MntFishProducts < 13 then do;
MPRINT(EM_DIAGRAM):   else if 3 <= MntFishProducts AND MntFishProducts < 13 then do;
284543    +GRP_MntFishProducts = 3;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 3;
284544    +end;
MPRINT(EM_DIAGRAM):   end;
284545    +else
284546    +if 13 <= MntFishProducts AND MntFishProducts < 47 then do;
MPRINT(EM_DIAGRAM):   else if 13 <= MntFishProducts AND MntFishProducts < 47 then do;
284547    +GRP_MntFishProducts = 4;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 4;
284548    +end;
MPRINT(EM_DIAGRAM):   end;
284549    +else
284550    +if 47 <= MntFishProducts then do;
MPRINT(EM_DIAGRAM):   else if 47 <= MntFishProducts then do;
284551    +GRP_MntFishProducts = 5;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 5;
284552    +end;
MPRINT(EM_DIAGRAM):   end;
284553    +end;
MPRINT(EM_DIAGRAM):   end;
284554    +
284555    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
284556    +* Variable: MntGoldProds;
MPRINT(EM_DIAGRAM):   * Variable: MntGoldProds;
284557    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
284558    +LABEL GRP_MntGoldProds =
284559    +'Grouped: MntGoldProds';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntGoldProds = 'Grouped: MntGoldProds';
284560    +
284561    +if MISSING(MntGoldProds) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntGoldProds) then do;
284562    +GRP_MntGoldProds = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 1;
284563    +end;
MPRINT(EM_DIAGRAM):   end;
284564    +else if NOT MISSING(MntGoldProds) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntGoldProds) then do;
284565    +if MntGoldProds < 9 then do;
MPRINT(EM_DIAGRAM):   if MntGoldProds < 9 then do;
284566    +GRP_MntGoldProds = 2;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 2;
284567    +end;
MPRINT(EM_DIAGRAM):   end;
284568    +else
284569    +if 9 <= MntGoldProds AND MntGoldProds < 25 then do;
MPRINT(EM_DIAGRAM):   else if 9 <= MntGoldProds AND MntGoldProds < 25 then do;
284570    +GRP_MntGoldProds = 3;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 3;
284571    +end;
MPRINT(EM_DIAGRAM):   end;
284572    +else
284573    +if 25 <= MntGoldProds AND MntGoldProds < 59 then do;
MPRINT(EM_DIAGRAM):   else if 25 <= MntGoldProds AND MntGoldProds < 59 then do;
284574    +GRP_MntGoldProds = 4;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 4;
284575    +end;
MPRINT(EM_DIAGRAM):   end;
284576    +else
284577    +if 59 <= MntGoldProds then do;
MPRINT(EM_DIAGRAM):   else if 59 <= MntGoldProds then do;
284578    +GRP_MntGoldProds = 5;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 5;
284579    +end;
MPRINT(EM_DIAGRAM):   end;
284580    +end;
MPRINT(EM_DIAGRAM):   end;
284581    +
284582    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
284583    +* Variable: MntMeatProducts;
MPRINT(EM_DIAGRAM):   * Variable: MntMeatProducts;
284584    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
284585    +LABEL GRP_MntMeatProducts =
284586    +'Grouped: MntMeatProducts';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntMeatProducts = 'Grouped: MntMeatProducts';
284587    +
284588    +if MISSING(MntMeatProducts) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntMeatProducts) then do;
284589    +GRP_MntMeatProducts = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 1;
284590    +end;
MPRINT(EM_DIAGRAM):   end;
284591    +else if NOT MISSING(MntMeatProducts) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntMeatProducts) then do;
284592    +if MntMeatProducts < 17 then do;
MPRINT(EM_DIAGRAM):   if MntMeatProducts < 17 then do;
284593    +GRP_MntMeatProducts = 2;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 2;
284594    +end;
MPRINT(EM_DIAGRAM):   end;
284595    +else
284596    +if 17 <= MntMeatProducts AND MntMeatProducts < 72 then do;
MPRINT(EM_DIAGRAM):   else if 17 <= MntMeatProducts AND MntMeatProducts < 72 then do;
284597    +GRP_MntMeatProducts = 3;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 3;
284598    +end;
MPRINT(EM_DIAGRAM):   end;
284599    +else
284600    +if 72 <= MntMeatProducts AND MntMeatProducts < 246 then do;
MPRINT(EM_DIAGRAM):   else if 72 <= MntMeatProducts AND MntMeatProducts < 246 then do;
284601    +GRP_MntMeatProducts = 4;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 4;
284602    +end;
MPRINT(EM_DIAGRAM):   end;
284603    +else
284604    +if 246 <= MntMeatProducts then do;
MPRINT(EM_DIAGRAM):   else if 246 <= MntMeatProducts then do;
284605    +GRP_MntMeatProducts = 5;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 5;
284606    +end;
MPRINT(EM_DIAGRAM):   end;
284607    +end;
MPRINT(EM_DIAGRAM):   end;
284608    +
284609    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
284610    +* Variable: MntWines;
MPRINT(EM_DIAGRAM):   * Variable: MntWines;
284611    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
284612    +LABEL GRP_MntWines =
284613    +'Grouped: MntWines';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntWines = 'Grouped: MntWines';
284614    +
284615    +if MISSING(MntWines) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntWines) then do;
284616    +GRP_MntWines = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 1;
284617    +end;
MPRINT(EM_DIAGRAM):   end;
284618    +else if NOT MISSING(MntWines) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntWines) then do;
284619    +if MntWines < 24 then do;
MPRINT(EM_DIAGRAM):   if MntWines < 24 then do;
284620    +GRP_MntWines = 2;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 2;
284621    +end;
MPRINT(EM_DIAGRAM):   end;
284622    +else
284623    +if 24 <= MntWines AND MntWines < 183.5 then do;
MPRINT(EM_DIAGRAM):   else if 24 <= MntWines AND MntWines < 183.5 then do;
284624    +GRP_MntWines = 3;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 3;
284625    +end;
MPRINT(EM_DIAGRAM):   end;
284626    +else
284627    +if 183.5 <= MntWines AND MntWines < 508 then do;
MPRINT(EM_DIAGRAM):   else if 183.5 <= MntWines AND MntWines < 508 then do;
284628    +GRP_MntWines = 4;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 4;
284629    +end;
MPRINT(EM_DIAGRAM):   end;
284630    +else
284631    +if 508 <= MntWines then do;
MPRINT(EM_DIAGRAM):   else if 508 <= MntWines then do;
284632    +GRP_MntWines = 5;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 5;
284633    +end;
MPRINT(EM_DIAGRAM):   end;
284634    +end;
MPRINT(EM_DIAGRAM):   end;
284635    +
284636    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
284637    +* Variable: NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumCatalogPurchases;
284638    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
284639    +LABEL GRP_NumCatalogPurchases =
284640    +'Grouped: NumCatalogPurchases';
MPRINT(EM_DIAGRAM):   LABEL GRP_NumCatalogPurchases = 'Grouped: NumCatalogPurchases';
284641    +
284642    +if MISSING(NumCatalogPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumCatalogPurchases) then do;
284643    +GRP_NumCatalogPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 1;
284644    +end;
MPRINT(EM_DIAGRAM):   end;
284645    +else if NOT MISSING(NumCatalogPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumCatalogPurchases) then do;
284646    +if NumCatalogPurchases < 0 then do;
MPRINT(EM_DIAGRAM):   if NumCatalogPurchases < 0 then do;
284647    +GRP_NumCatalogPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 2;
284648    +end;
MPRINT(EM_DIAGRAM):   end;
284649    +else
284650    +if 0 <= NumCatalogPurchases AND NumCatalogPurchases < 2 then do;
MPRINT(EM_DIAGRAM):   else if 0 <= NumCatalogPurchases AND NumCatalogPurchases < 2 then do;
284651    +GRP_NumCatalogPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 3;
284652    +end;
MPRINT(EM_DIAGRAM):   end;
284653    +else
284654    +if 2 <= NumCatalogPurchases AND NumCatalogPurchases < 4 then do;
MPRINT(EM_DIAGRAM):   else if 2 <= NumCatalogPurchases AND NumCatalogPurchases < 4 then do;
284655    +GRP_NumCatalogPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 4;
284656    +end;
MPRINT(EM_DIAGRAM):   end;
284657    +else
284658    +if 4 <= NumCatalogPurchases then do;
MPRINT(EM_DIAGRAM):   else if 4 <= NumCatalogPurchases then do;
284659    +GRP_NumCatalogPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 5;
284660    +end;
MPRINT(EM_DIAGRAM):   end;
284661    +end;
MPRINT(EM_DIAGRAM):   end;
284662    +
284663    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
284664    +* Variable: NumDistPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumDistPurchases;
284665    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
284666    +LABEL GRP_NumDistPurchases = "Grouped: NumDistPurchases";
MPRINT(EM_DIAGRAM):   LABEL GRP_NumDistPurchases = "Grouped: NumDistPurchases";
284667    +
284668    +if MISSING(NumDistPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumDistPurchases) then do;
284669    +GRP_NumDistPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 1;
284670    +end;
MPRINT(EM_DIAGRAM):   end;
284671    +else if NOT MISSING(NumDistPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumDistPurchases) then do;
284672    +if NumDistPurchases < 3 then do;
MPRINT(EM_DIAGRAM):   if NumDistPurchases < 3 then do;
284673    +GRP_NumDistPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 2;
284674    +end;
MPRINT(EM_DIAGRAM):   end;
284675    +else
284676    +if 3 <= NumDistPurchases AND NumDistPurchases < 6 then do;
MPRINT(EM_DIAGRAM):   else if 3 <= NumDistPurchases AND NumDistPurchases < 6 then do;
284677    +GRP_NumDistPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 3;
284678    +end;
MPRINT(EM_DIAGRAM):   end;
284679    +else
284680    +if 6 <= NumDistPurchases AND NumDistPurchases < 10 then do;
MPRINT(EM_DIAGRAM):   else if 6 <= NumDistPurchases AND NumDistPurchases < 10 then do;
284681    +GRP_NumDistPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 4;
284682    +end;
MPRINT(EM_DIAGRAM):   end;
284683    +else
284684    +if 10 <= NumDistPurchases then do;
MPRINT(EM_DIAGRAM):   else if 10 <= NumDistPurchases then do;
284685    +GRP_NumDistPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 5;
284686    +end;
MPRINT(EM_DIAGRAM):   end;
284687    +end;
MPRINT(EM_DIAGRAM):   end;
284688    +
284689    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
284690    +* Variable: NumWebPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumWebPurchases;
284691    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
284692    +LABEL GRP_NumWebPurchases =
284693    +'Grouped: NumWebPurchases';
MPRINT(EM_DIAGRAM):   LABEL GRP_NumWebPurchases = 'Grouped: NumWebPurchases';
284694    +
284695    +if MISSING(NumWebPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumWebPurchases) then do;
284696    +GRP_NumWebPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 1;
284697    +end;
MPRINT(EM_DIAGRAM):   end;
284698    +else if NOT MISSING(NumWebPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumWebPurchases) then do;
284699    +if NumWebPurchases < 2 then do;
MPRINT(EM_DIAGRAM):   if NumWebPurchases < 2 then do;
284700    +GRP_NumWebPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 2;
284701    +end;
MPRINT(EM_DIAGRAM):   end;
284702    +else
284703    +if 2 <= NumWebPurchases AND NumWebPurchases < 4 then do;
MPRINT(EM_DIAGRAM):   else if 2 <= NumWebPurchases AND NumWebPurchases < 4 then do;
284704    +GRP_NumWebPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 3;
284705    +end;
MPRINT(EM_DIAGRAM):   end;
284706    +else
284707    +if 4 <= NumWebPurchases AND NumWebPurchases < 6 then do;
MPRINT(EM_DIAGRAM):   else if 4 <= NumWebPurchases AND NumWebPurchases < 6 then do;
284708    +GRP_NumWebPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 4;
284709    +end;
MPRINT(EM_DIAGRAM):   end;
284710    +else
284711    +if 6 <= NumWebPurchases then do;
MPRINT(EM_DIAGRAM):   else if 6 <= NumWebPurchases then do;
284712    +GRP_NumWebPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 5;
284713    +end;
MPRINT(EM_DIAGRAM):   end;
284714    +end;
MPRINT(EM_DIAGRAM):   end;
284715    +
284716    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
284717    +* Variable: RFMstat;
MPRINT(EM_DIAGRAM):   * Variable: RFMstat;
284718    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
284719    +LABEL GRP_RFMstat = "Grouped: RFMstat";
MPRINT(EM_DIAGRAM):   LABEL GRP_RFMstat = "Grouped: RFMstat";
284720    +
284721    +if MISSING(RFMstat) then do;
MPRINT(EM_DIAGRAM):   if MISSING(RFMstat) then do;
284722    +GRP_RFMstat = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 1;
284723    +end;
MPRINT(EM_DIAGRAM):   end;
284724    +else if NOT MISSING(RFMstat) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(RFMstat) then do;
284725    +if RFMstat < 10.34 then do;
MPRINT(EM_DIAGRAM):   if RFMstat < 10.34 then do;
284726    +GRP_RFMstat = 2;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 2;
284727    +end;
MPRINT(EM_DIAGRAM):   end;
284728    +else
284729    +if 10.34 <= RFMstat AND RFMstat < 128.09 then do;
MPRINT(EM_DIAGRAM):   else if 10.34 <= RFMstat AND RFMstat < 128.09 then do;
284730    +GRP_RFMstat = 3;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 3;
284731    +end;
MPRINT(EM_DIAGRAM):   end;
284732    +else
284733    +if 128.09 <= RFMstat AND RFMstat < 455.22 then do;
MPRINT(EM_DIAGRAM):   else if 128.09 <= RFMstat AND RFMstat < 455.22 then do;
284734    +GRP_RFMstat = 4;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 4;
284735    +end;
MPRINT(EM_DIAGRAM):   end;
284736    +else
284737    +if 455.22 <= RFMstat then do;
MPRINT(EM_DIAGRAM):   else if 455.22 <= RFMstat then do;
284738    +GRP_RFMstat = 5;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 5;
284739    +end;
MPRINT(EM_DIAGRAM):   end;
284740    +end;
MPRINT(EM_DIAGRAM):   end;
284741    +
284742    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
284743    +* Variable: RMntFrq;
MPRINT(EM_DIAGRAM):   * Variable: RMntFrq;
284744    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
284745    +LABEL GRP_RMntFrq = "Grouped: RMntFrq";
MPRINT(EM_DIAGRAM):   LABEL GRP_RMntFrq = "Grouped: RMntFrq";
284746    +
284747    +if MISSING(RMntFrq) then do;
MPRINT(EM_DIAGRAM):   if MISSING(RMntFrq) then do;
284748    +GRP_RMntFrq = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 1;
284749    +end;
MPRINT(EM_DIAGRAM):   end;
284750    +else if NOT MISSING(RMntFrq) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(RMntFrq) then do;
284751    +if RMntFrq < 13.25 then do;
MPRINT(EM_DIAGRAM):   if RMntFrq < 13.25 then do;
284752    +GRP_RMntFrq = 2;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 2;
284753    +end;
MPRINT(EM_DIAGRAM):   end;
284754    +else
284755    +if 13.25 <= RMntFrq AND RMntFrq < 30.4 then do;
MPRINT(EM_DIAGRAM):   else if 13.25 <= RMntFrq AND RMntFrq < 30.4 then do;
284756    +GRP_RMntFrq = 3;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 3;
284757    +end;
MPRINT(EM_DIAGRAM):   end;
284758    +else
284759    +if 30.4 <= RMntFrq AND RMntFrq < 52.86 then do;
MPRINT(EM_DIAGRAM):   else if 30.4 <= RMntFrq AND RMntFrq < 52.86 then do;
284760    +GRP_RMntFrq = 4;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 4;
284761    +end;
MPRINT(EM_DIAGRAM):   end;
284762    +else
284763    +if 52.86 <= RMntFrq then do;
MPRINT(EM_DIAGRAM):   else if 52.86 <= RMntFrq then do;
284764    +GRP_RMntFrq = 5;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 5;
284765    +end;
MPRINT(EM_DIAGRAM):   end;
284766    +end;
MPRINT(EM_DIAGRAM):   end;
284767    +
284768    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
284769    +* Variable: Recency;
MPRINT(EM_DIAGRAM):   * Variable: Recency;
284770    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
284771    +LABEL GRP_Recency =
284772    +'Grouped: Recency';
MPRINT(EM_DIAGRAM):   LABEL GRP_Recency = 'Grouped: Recency';
284773    +
284774    +if MISSING(Recency) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Recency) then do;
284775    +GRP_Recency = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency = 1;
284776    +end;
MPRINT(EM_DIAGRAM):   end;
284777    +else if NOT MISSING(Recency) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Recency) then do;
284778    +if Recency < 24 then do;
MPRINT(EM_DIAGRAM):   if Recency < 24 then do;
284779    +GRP_Recency = 2;
MPRINT(EM_DIAGRAM):   GRP_Recency = 2;
284780    +end;
MPRINT(EM_DIAGRAM):   end;
284781    +else
284782    +if 24 <= Recency AND Recency < 48 then do;
MPRINT(EM_DIAGRAM):   else if 24 <= Recency AND Recency < 48 then do;
284783    +GRP_Recency = 3;
MPRINT(EM_DIAGRAM):   GRP_Recency = 3;
284784    +end;
MPRINT(EM_DIAGRAM):   end;
284785    +else
284786    +if 48 <= Recency AND Recency < 73 then do;
MPRINT(EM_DIAGRAM):   else if 48 <= Recency AND Recency < 73 then do;
284787    +GRP_Recency = 4;
MPRINT(EM_DIAGRAM):   GRP_Recency = 4;
284788    +end;
MPRINT(EM_DIAGRAM):   end;
284789    +else
284790    +if 73 <= Recency then do;
MPRINT(EM_DIAGRAM):   else if 73 <= Recency then do;
284791    +GRP_Recency = 5;
MPRINT(EM_DIAGRAM):   GRP_Recency = 5;
284792    +end;
MPRINT(EM_DIAGRAM):   end;
284793    +end;
MPRINT(EM_DIAGRAM):   end;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
284794     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
284795     quit;
284796     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
284797     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
284798     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
284799     retain ID 3 Node "BINNING";
MPRINT(EM_DIAGRAM):   retain ID 3 Node "BINNING";
284800     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
284801     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 16 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 16 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

284802     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
284803     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
284804     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 16 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 16 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

284805     proc sort data=EMWS8.BINNING_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.BINNING_variableset out=_temp2(keep=NAME CREATOR);
284806     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
284807     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 36 observations read from the data set EMWS8.BINNING_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 36 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

284808     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
284809     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
284810     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
284811     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 36 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 36 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

284812     proc contents data=EMWS8.BINNING_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.BINNING_train out=_meta(keep=NAME) noprint;
284813     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 59 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

284814     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
284815     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
284816     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 59 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 59 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

284817     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
284818     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
284819     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
284820     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 59 observations read from the data set WORK._META.
NOTE: There were 36 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 59 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

284821     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
284822     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
284822   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 15 rows and 5 columns.

284823     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

284824     proc append base=EMWS8.Ensmbl50_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl50_FCMP data=_tempx;
284825     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL50_FCMP.
NOTE: There were 15 observations read from the data set WORK._TEMPX.
NOTE: 15 observations added.
NOTE: The data set EMWS8.ENSMBL50_FCMP has 1099 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

284826     filename _pref
284826   ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
284827     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
284828     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
284829    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
284830    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
284831    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
284832    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
284833    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
284834    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
284835     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
284836     quit;
284837     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
284838     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
284839     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
284840     retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
284841     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
284842     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

284843     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
284844     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
284845     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

284846     proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
284847     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
284848     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

284849     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
284850     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
284851     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
284852     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

284853     proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
284854     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

284855     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
284856     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
284857     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

284858     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
284859     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
284860     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
284861     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

284862     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
284863     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
284863   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

284864     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

284865     proc append base=EMWS8.Ensmbl50_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl50_FCMP data=_tempx;
284866     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL50_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL50_FCMP has 1103 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

284867     filename _pref
284867   ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
284868     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
284869     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
284870    +
284871    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
284872    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
284872   !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
284873    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
284874    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
284875    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
284876    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
284877    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
284878     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
284879     quit;
284880     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
284881     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
284882     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
284883     retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
284884     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
284885     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

284886     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
284887     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
284888     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

284889     proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
284890     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
284891     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

284892     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
284893     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
284894     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
284895     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

284896     proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
284897     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

284898     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
284899     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
284900     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

284901     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
284902     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
284903     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
284904     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

284905     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
284906     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
284906   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

284907     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

284908     proc append base=EMWS8.Ensmbl50_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl50_FCMP data=_tempx;
284909     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL50_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL50_FCMP has 1142 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

284910     filename _pref
284910   ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
284911     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
284912     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
284913    +
284914    +
284915    +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
284916    +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
284917    +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
284918    +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
284919    +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
284920    +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
284921    +
284922    +
284923    +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
284924    +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
284925    +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
284926    +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
284927    +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
284928    +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
284929    +
284930    +
284931    +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
284932    +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
284933    +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
284934    +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
284935    +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
284936    +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
284937    +
284938    +
284939    +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
284940    +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
284941    +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
284942    +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
284943    +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
284944    +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
284945    +
284946    +
284947    +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
284948    +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
284949    +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
284950    +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
284951    +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
284952    +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
284953    +
284954    +
284955    +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
284956    +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
284957    +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
284958    +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
284959    +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
284960    +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
284961    +
284962    +
284963    +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
284964    +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
284965    +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
284966    +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
284967    +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
284968    +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
284969    +
284970    +
284971    +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
284972    +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
284973    +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
284974    +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
284975    +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
284976    +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
284977    +if
284978    +_FILTERNORM1 not in ( '.')
284979    + and
284980    +_FILTERNORM2 not in ( '.')
284981    + and
284982    +_FILTERNORM3 not in ( '.')
284983    + and
284984    +_FILTERNORM4 not in ( '.')
284985    + and
284986    +_FILTERNORM5 not in ( '.')
284987    + and
284988    +_FILTERNORM6 not in ( '.')
284989    + and
284990    +_FILTERNORM7 not in ( ' ')
284991    + and
284992    +_FILTERNORM8 not in ( ' ')
284993    +and
284994    +( Dt_Customer ne .)
284995    +and ( Income ne . and (Income<=107000))
284996    +and ( Kidhome ne .)
284997    +and ( MntFishProducts ne .)
284998    +and ( MntFruits ne .)
284999    +and ( MntGoldProds ne .)
285000    +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
285001    +and ( MntSweetProducts ne .)
285002    +and ( MntWines ne .)
285003    +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
285004    +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
285005    +and ( NumStorePurchases ne .)
285006    +and ( NumWebPurchases ne .)
285007    +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
285008    +and ( Recency ne .)
285009    +and ( Teenhome ne .)
285010    +and ( Year_Birth ne .)
285011    +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
285012    +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
285013    +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
285014    +end;
MPRINT(EM_DIAGRAM):   end;
285015    +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
285016    +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
285017     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
285018     quit;
285019     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
285020     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
285021     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
285022     retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
285023     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
285024     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

285025     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
285026     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
285027     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

285028     proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
285029     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
285030     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

285031     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
285032     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
285033     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
285034     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

285035     proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
285036     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

285037     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
285038     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
285039     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

285040     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
285041     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
285042     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
285043     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

285044     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
285045     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
285045   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

285046     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

285047     proc append base=EMWS8.Ensmbl50_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl50_FCMP data=_tempx;
285048     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL50_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL50_FCMP has 1208 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

285049     %macro varDept(fcmpdata=,id=);
285050     %global nobs&id scoreFlag&id;
285051     %let scoreFlag&id = 0;
285052     %if &id=1 or ^&fcmpStart %then %do;
285053     proc sort data=&fcmpdata out=_temp&id nodupkey;
285054     by NAME;
285055     where id=&id and LHS in( %let j=1;
285056     %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
285057     %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
285058     "&var" %let j = %eval(&j+1);
285059     %end;
285060     );
285061     run;
285062     %let dsid = %sysfunc(open(_temp&id));
285063     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
285064     %let dsid = %sysfunc(close(&dsid));
285065     %if &&nobs&id %then %do;
285066     %let scoreFlag&id = 1;
285067     %let fcmpStart = 1;
285068     %end;
285069     %else %let fcmpStart = 0;
285070     %end;
285071     %else %do;
285072     proc sort data=&fcmpdata out=_tempid;
285073     where id=&id;
285074     by LHS;
285075     run;
285076     %let dsid = %sysfunc(open(_tempid));
285077     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
285078     %let dsid = %sysfunc(close(&dsid));
285079     %if ^&&nobs&id %then %do;
285080     proc datasets lib=work nolist;
285081     delete _tempid;
285082     run;
285083     quit;
285084     %end;
285085     %else %do;
285086     data _tempAll;
285087     set %let j=%eval(&id-1);
285088     %do x=1 %to &j;
285089     %if &&nobs&x %then %do;
285090     _temp&x %end;
285091     %end;
285092     ;
285093     run;
285094     proc sql;
285095     create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
285095   ! work._tempid p2 where p.name=p2.lhs;
285096     quit;
285097     data _temp&id;
285098     set _temp&id;
285099     where LHS ne '' and NAME ne '' and Node ne '';
285100     run;
285101     proc datasets lib=work nolist;
285102     delete _tempAll;
285103     run;
285104     %let dsid = %sysfunc(open(_temp&id));
285105     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
285106     %let dsid = %sysfunc(close(&dsid));
285107     %if ^&&nobs&id %then %do;
285108     proc datasets lib=work nolist;
285109     delete _temp&id;
285110     run;
285111     quit;
285112     %end;
285113     %else %do;
285114     %let scoreFlag&id = 1;
285115     data _temp&id;
285116     set _temp&id;
285117     where LHS ne NAME and node ne '';
285118     run;
285119     %let dsid = %sysfunc(open(_temp&id));
285120     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
285121     %let dsid = %sysfunc(close(&dsid));
285122     %if ^&&nobs&id %then %do;
285123     proc datasets lib=work nolist;
285124     delete _temp&id;
285125     run;
285126     quit;
285127     %end;
285128     %else %do;
285129     proc sort data=_temp&id nodupkey;
285130     by LHS NAME;
285131     run;
285132     %end;
285133     %end;
285134     %end;
285135     %end;
285136     %mend varDept;
285137     %macro optCode(outdata=fcmpdata);
285138     %global fcmpStart;
285139     %let fcmpStart = 0;
285140     %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
285141     %let NumNodes=9;
285142     %do k=1 %to &NumNodes;
285143     %vardept(fcmpdata=&outdata, id=&k);
285144     %end;
285145     %mend optCode;
285146     %optcode(outData=EMWS8.Ensmbl50_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl50_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL50_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl50_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 87 observations read from the data set EMWS8.ENSMBL50_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 63 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 24 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl50_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 15 observations read from the data set EMWS8.ENSMBL50_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 15 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 24 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 24 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp3 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP3 created, with 14 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP3 has 14 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP3 has 14 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp3 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP3.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP3 has 14 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl50_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL50_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl50_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL50_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 ;
MPRINT(VARDEPT):   run;

NOTE: There were 24 observations read from the data set WORK._TEMP2.
NOTE: There were 14 observations read from the data set WORK._TEMP3.
NOTE: The data set WORK._TEMPALL has 38 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 2 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl50_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL50_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 24 observations read from the data set WORK._TEMP2.
NOTE: There were 14 observations read from the data set WORK._TEMP3.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 40 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 32 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 32 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 32 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 32 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 32 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 32 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 32 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl50_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL50_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 24 observations read from the data set WORK._TEMP2.
NOTE: There were 14 observations read from the data set WORK._TEMP3.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: There were 32 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 72 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl50_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL50_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl50_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL50_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

285147     data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
285148     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
285149     where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
285150     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

285151     data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
285152     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
285153     where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
285154     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

285155     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
285156     create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
285156   ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 2 rows and 3 columns.

285157     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

285158     data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
285159     set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
285160     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 2 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 2 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

285161     data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
285162     set EMWS8.BINNING_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.BINNING_EMSCOREVAR;
285163     where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
285164     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS8.BINNING_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

285165     data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
285166     set EMWS8.BINNING_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.BINNING_EMSCOREVAR;
285167     where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
285168     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.BINNING_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

285169     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
285170     create table _CodeVar7 as select p.lhs, p2.formula, p2.file from _temp3 p,
285170   ! EMWS8.BINNING_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar7 as select p.lhs, p2.formula, p2.file from _temp3 
p, EMWS8.BINNING_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR7 created, with 14 rows and 3 columns.

285171     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

285172     data _CodeVar7;
MPRINT(EM_DIAGRAM):   data _CodeVar7;
285173     set _all_ _CodeVar7 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar7 _postall_;
285174     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK._ALL_.
NOTE: There were 14 observations read from the data set WORK._CODEVAR7.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR7 has 15 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

285175     filename _pref
285175   ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural21\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural21\EMPUBLISHSCORE.sas";
285176     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
285177     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural21\EMPUBLISHSCORE.sas.
285178    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
285179    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
285180    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
285181    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
285182    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
285183    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
285184    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
285185    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
285186    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
285187    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
285188    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
285189    +LENGTH _WARN_ $4
285190    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
285191    +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
285192    +
285193    +      label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
MPRINT(EM_DIAGRAM):   label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
285194    +
285195    +      label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
285196    +
285197    +      label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
285198    +
285199    +      label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
285200    +
285201    +      label GRP_Income2 = 'Dummy: GRP_Income=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Income2 = 'Dummy: GRP_Income=2' ;
285202    +
285203    +      label GRP_Income3 = 'Dummy: GRP_Income=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Income3 = 'Dummy: GRP_Income=3' ;
285204    +
285205    +      label GRP_Income4 = 'Dummy: GRP_Income=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Income4 = 'Dummy: GRP_Income=4' ;
285206    +
285207    +      label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
285208    +
285209    +      label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
285210    +
285211    +      label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
285212    +
285213    +      label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
285214    +
285215    +      label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
285216    +
285217    +      label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
285218    +
285219    +      label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
285220    +
285221    +      label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
285222    +
285223    +      label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
285224    +
285225    +      label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
285226    +
285227    +      label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
285228    +
285229    +      label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
285230    +
285231    +      label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
285232    +
285233    +      label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
285234    +
285235    +      label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
285236    +
285237    +      label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
285238    +
285239    +      label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
285240    +
285241    +      label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
285242    +
285243    +      label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
285244    +
285245    +      label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
285246    +
285247    +      label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
285248    +
285249    +      label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
285250    +
285251    +      label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
285252    +
285253    +      label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
285254    +
285255    +      label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
285256    +
285257    +      label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
285258    +
285259    +      label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
285260    +
285261    +      label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
285262    +
285263    +      label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
285264    +
285265    +      label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
285266    +
285267    +      label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
285268    +
285269    +      label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
285270    +
285271    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
285272    +
285273    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
285274    +
285275    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
285276    +
285277    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
285278    +
285279    +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
285280    +
285281    +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
285282    +
285283    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
285284    +
285285    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
285286    +
285287    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
285288    +
285289    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
285290    +
285291    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
285292    +
285293    +*** Generate dummy variables for GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmp5 ;
285294    +drop GRP_AcceptedCmp52 ;
MPRINT(EM_DIAGRAM):   drop GRP_AcceptedCmp52 ;
285295    +if missing( GRP_AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmp5 ) then do;
285296    +   GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
285297    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
285298    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
285299    +end;
MPRINT(EM_DIAGRAM):   end;
285300    +else do;
MPRINT(EM_DIAGRAM):   else do;
285301    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
285302    +   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
285303    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
285304    +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
285305    +      GRP_AcceptedCmp52 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = 1;
285306    +   end;
MPRINT(EM_DIAGRAM):   end;
285307    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
285308    +      GRP_AcceptedCmp52 = -1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = -1;
285309    +   end;
MPRINT(EM_DIAGRAM):   end;
285310    +   else do;
MPRINT(EM_DIAGRAM):   else do;
285311    +      GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
285312    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
285313    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
285314    +   end;
MPRINT(EM_DIAGRAM):   end;
285315    +end;
MPRINT(EM_DIAGRAM):   end;
285316    +
285317    +*** Generate dummy variables for GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Frq ;
285318    +drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
285319    +if missing( GRP_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Frq ) then do;
285320    +   GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
285321    +   GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
285322    +   GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
285323    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
285324    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
285325    +end;
MPRINT(EM_DIAGRAM):   end;
285326    +else do;
MPRINT(EM_DIAGRAM):   else do;
285327    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
285328    +   _dm12 = put( GRP_Frq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Frq , BEST12. );
285329    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
285330    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
285331    +      GRP_Frq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = -1;
285332    +      GRP_Frq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = -1;
285333    +      GRP_Frq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = -1;
285334    +   end;
MPRINT(EM_DIAGRAM):   end;
285335    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
285336    +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
285337    +      GRP_Frq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 1;
285338    +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
285339    +   end;
MPRINT(EM_DIAGRAM):   end;
285340    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
285341    +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
285342    +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
285343    +      GRP_Frq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 1;
285344    +   end;
MPRINT(EM_DIAGRAM):   end;
285345    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
285346    +      GRP_Frq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 1;
285347    +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
285348    +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
285349    +   end;
MPRINT(EM_DIAGRAM):   end;
285350    +   else do;
MPRINT(EM_DIAGRAM):   else do;
285351    +      GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
285352    +      GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
285353    +      GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
285354    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
285355    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
285356    +   end;
MPRINT(EM_DIAGRAM):   end;
285357    +end;
MPRINT(EM_DIAGRAM):   end;
285358    +
285359    +*** Generate dummy variables for GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Income ;
285360    +drop GRP_Income2 GRP_Income3 GRP_Income4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Income2 GRP_Income3 GRP_Income4 ;
285361    +if missing( GRP_Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Income ) then do;
285362    +   GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
285363    +   GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
285364    +   GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
285365    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
285366    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
285367    +end;
MPRINT(EM_DIAGRAM):   end;
285368    +else do;
MPRINT(EM_DIAGRAM):   else do;
285369    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
285370    +   _dm12 = put( GRP_Income , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Income , BEST12. );
285371    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
285372    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
285373    +      GRP_Income2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = -1;
285374    +      GRP_Income3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = -1;
285375    +      GRP_Income4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = -1;
285376    +   end;
MPRINT(EM_DIAGRAM):   end;
285377    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
285378    +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
285379    +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
285380    +      GRP_Income4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 1;
285381    +   end;
MPRINT(EM_DIAGRAM):   end;
285382    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
285383    +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
285384    +      GRP_Income3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 1;
285385    +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
285386    +   end;
MPRINT(EM_DIAGRAM):   end;
285387    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
285388    +      GRP_Income2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 1;
285389    +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
285390    +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
285391    +   end;
MPRINT(EM_DIAGRAM):   end;
285392    +   else do;
MPRINT(EM_DIAGRAM):   else do;
285393    +      GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
285394    +      GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
285395    +      GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
285396    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
285397    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
285398    +   end;
MPRINT(EM_DIAGRAM):   end;
285399    +end;
MPRINT(EM_DIAGRAM):   end;
285400    +
285401    +*** Generate dummy variables for GRP_Mnt ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Mnt ;
285402    +drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
285403    +if missing( GRP_Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Mnt ) then do;
285404    +   GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
285405    +   GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
285406    +   GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
285407    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
285408    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
285409    +end;
MPRINT(EM_DIAGRAM):   end;
285410    +else do;
MPRINT(EM_DIAGRAM):   else do;
285411    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
285412    +   _dm12 = put( GRP_Mnt , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Mnt , BEST12. );
285413    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
285414    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
285415    +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
285416    +      GRP_Mnt3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 1;
285417    +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
285418    +   end;
MPRINT(EM_DIAGRAM):   end;
285419    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
285420    +      GRP_Mnt2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = -1;
285421    +      GRP_Mnt3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = -1;
285422    +      GRP_Mnt4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = -1;
285423    +   end;
MPRINT(EM_DIAGRAM):   end;
285424    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
285425    +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
285426    +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
285427    +      GRP_Mnt4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 1;
285428    +   end;
MPRINT(EM_DIAGRAM):   end;
285429    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
285430    +      GRP_Mnt2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 1;
285431    +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
285432    +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
285433    +   end;
MPRINT(EM_DIAGRAM):   end;
285434    +   else do;
MPRINT(EM_DIAGRAM):   else do;
285435    +      GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
285436    +      GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
285437    +      GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
285438    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
285439    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
285440    +   end;
MPRINT(EM_DIAGRAM):   end;
285441    +end;
MPRINT(EM_DIAGRAM):   end;
285442    +
285443    +*** Generate dummy variables for GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntFishProducts ;
285444    +drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
285445    +if missing( GRP_MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntFishProducts ) then do;
285446    +   GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
285447    +   GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
285448    +   GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
285449    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
285450    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
285451    +end;
MPRINT(EM_DIAGRAM):   end;
285452    +else do;
MPRINT(EM_DIAGRAM):   else do;
285453    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
285454    +   _dm12 = put( GRP_MntFishProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntFishProducts , BEST12. );
285455    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
285456    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
285457    +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
285458    +      GRP_MntFishProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 1;
285459    +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
285460    +   end;
MPRINT(EM_DIAGRAM):   end;
285461    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
285462    +      GRP_MntFishProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = -1;
285463    +      GRP_MntFishProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = -1;
285464    +      GRP_MntFishProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = -1;
285465    +   end;
MPRINT(EM_DIAGRAM):   end;
285466    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
285467    +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
285468    +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
285469    +      GRP_MntFishProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 1;
285470    +   end;
MPRINT(EM_DIAGRAM):   end;
285471    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
285472    +      GRP_MntFishProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 1;
285473    +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
285474    +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
285475    +   end;
MPRINT(EM_DIAGRAM):   end;
285476    +   else do;
MPRINT(EM_DIAGRAM):   else do;
285477    +      GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
285478    +      GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
285479    +      GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
285480    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
285481    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
285482    +   end;
MPRINT(EM_DIAGRAM):   end;
285483    +end;
MPRINT(EM_DIAGRAM):   end;
285484    +
285485    +*** Generate dummy variables for GRP_MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntGoldProds ;
285486    +drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
285487    +if missing( GRP_MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntGoldProds ) then do;
285488    +   GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
285489    +   GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
285490    +   GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
285491    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
285492    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
285493    +end;
MPRINT(EM_DIAGRAM):   end;
285494    +else do;
MPRINT(EM_DIAGRAM):   else do;
285495    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
285496    +   _dm12 = put( GRP_MntGoldProds , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntGoldProds , BEST12. );
285497    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
285498    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
285499    +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
285500    +      GRP_MntGoldProds3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 1;
285501    +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
285502    +   end;
MPRINT(EM_DIAGRAM):   end;
285503    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
285504    +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
285505    +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
285506    +      GRP_MntGoldProds4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 1;
285507    +   end;
MPRINT(EM_DIAGRAM):   end;
285508    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
285509    +      GRP_MntGoldProds2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = -1;
285510    +      GRP_MntGoldProds3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = -1;
285511    +      GRP_MntGoldProds4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = -1;
285512    +   end;
MPRINT(EM_DIAGRAM):   end;
285513    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
285514    +      GRP_MntGoldProds2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 1;
285515    +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
285516    +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
285517    +   end;
MPRINT(EM_DIAGRAM):   end;
285518    +   else do;
MPRINT(EM_DIAGRAM):   else do;
285519    +      GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
285520    +      GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
285521    +      GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
285522    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
285523    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
285524    +   end;
MPRINT(EM_DIAGRAM):   end;
285525    +end;
MPRINT(EM_DIAGRAM):   end;
285526    +
285527    +*** Generate dummy variables for GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntMeatProducts ;
285528    +drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
285529    +if missing( GRP_MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntMeatProducts ) then do;
285530    +   GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
285531    +   GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
285532    +   GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
285533    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
285534    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
285535    +end;
MPRINT(EM_DIAGRAM):   end;
285536    +else do;
MPRINT(EM_DIAGRAM):   else do;
285537    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
285538    +   _dm12 = put( GRP_MntMeatProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntMeatProducts , BEST12. );
285539    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
285540    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
285541    +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
285542    +      GRP_MntMeatProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 1;
285543    +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
285544    +   end;
MPRINT(EM_DIAGRAM):   end;
285545    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
285546    +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
285547    +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
285548    +      GRP_MntMeatProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 1;
285549    +   end;
MPRINT(EM_DIAGRAM):   end;
285550    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
285551    +      GRP_MntMeatProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = -1;
285552    +      GRP_MntMeatProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = -1;
285553    +      GRP_MntMeatProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = -1;
285554    +   end;
MPRINT(EM_DIAGRAM):   end;
285555    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
285556    +      GRP_MntMeatProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 1;
285557    +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
285558    +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
285559    +   end;
MPRINT(EM_DIAGRAM):   end;
285560    +   else do;
MPRINT(EM_DIAGRAM):   else do;
285561    +      GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
285562    +      GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
285563    +      GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
285564    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
285565    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
285566    +   end;
MPRINT(EM_DIAGRAM):   end;
285567    +end;
MPRINT(EM_DIAGRAM):   end;
285568    +
285569    +*** Generate dummy variables for GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntWines ;
285570    +drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
285571    +if missing( GRP_MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntWines ) then do;
285572    +   GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
285573    +   GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
285574    +   GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
285575    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
285576    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
285577    +end;
MPRINT(EM_DIAGRAM):   end;
285578    +else do;
MPRINT(EM_DIAGRAM):   else do;
285579    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
285580    +   _dm12 = put( GRP_MntWines , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntWines , BEST12. );
285581    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
285582    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
285583    +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
285584    +      GRP_MntWines3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 1;
285585    +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
285586    +   end;
MPRINT(EM_DIAGRAM):   end;
285587    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
285588    +      GRP_MntWines2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = -1;
285589    +      GRP_MntWines3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = -1;
285590    +      GRP_MntWines4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = -1;
285591    +   end;
MPRINT(EM_DIAGRAM):   end;
285592    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
285593    +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
285594    +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
285595    +      GRP_MntWines4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 1;
285596    +   end;
MPRINT(EM_DIAGRAM):   end;
285597    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
285598    +      GRP_MntWines2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 1;
285599    +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
285600    +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
285601    +   end;
MPRINT(EM_DIAGRAM):   end;
285602    +   else do;
MPRINT(EM_DIAGRAM):   else do;
285603    +      GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
285604    +      GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
285605    +      GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
285606    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
285607    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
285608    +   end;
MPRINT(EM_DIAGRAM):   end;
285609    +end;
MPRINT(EM_DIAGRAM):   end;
285610    +
285611    +*** Generate dummy variables for GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumCatalogPurchases ;
285612    +drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
285613    +if missing( GRP_NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumCatalogPurchases ) then do;
285614    +   GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
285615    +   GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
285616    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
285617    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
285618    +end;
MPRINT(EM_DIAGRAM):   end;
285619    +else do;
MPRINT(EM_DIAGRAM):   else do;
285620    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
285621    +   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
285622    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
285623    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
285624    +      GRP_NumCatalogPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 1;
285625    +      GRP_NumCatalogPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 0;
285626    +   end;
MPRINT(EM_DIAGRAM):   end;
285627    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
285628    +      GRP_NumCatalogPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = -1;
285629    +      GRP_NumCatalogPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = -1;
285630    +   end;
MPRINT(EM_DIAGRAM):   end;
285631    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
285632    +      GRP_NumCatalogPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 0;
285633    +      GRP_NumCatalogPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 1;
285634    +   end;
MPRINT(EM_DIAGRAM):   end;
285635    +   else do;
MPRINT(EM_DIAGRAM):   else do;
285636    +      GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
285637    +      GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
285638    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
285639    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
285640    +   end;
MPRINT(EM_DIAGRAM):   end;
285641    +end;
MPRINT(EM_DIAGRAM):   end;
285642    +
285643    +*** Generate dummy variables for GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumDistPurchases ;
285644    +drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
285645    +if missing( GRP_NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumDistPurchases ) then do;
285646    +   GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
285647    +   GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
285648    +   GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
285649    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
285650    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
285651    +end;
MPRINT(EM_DIAGRAM):   end;
285652    +else do;
MPRINT(EM_DIAGRAM):   else do;
285653    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
285654    +   _dm12 = put( GRP_NumDistPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumDistPurchases , BEST12. );
285655    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
285656    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
285657    +      GRP_NumDistPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = -1;
285658    +      GRP_NumDistPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = -1;
285659    +      GRP_NumDistPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = -1;
285660    +   end;
MPRINT(EM_DIAGRAM):   end;
285661    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
285662    +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
285663    +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
285664    +      GRP_NumDistPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 1;
285665    +   end;
MPRINT(EM_DIAGRAM):   end;
285666    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
285667    +      GRP_NumDistPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 1;
285668    +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
285669    +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
285670    +   end;
MPRINT(EM_DIAGRAM):   end;
285671    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
285672    +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
285673    +      GRP_NumDistPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 1;
285674    +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
285675    +   end;
MPRINT(EM_DIAGRAM):   end;
285676    +   else do;
MPRINT(EM_DIAGRAM):   else do;
285677    +      GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
285678    +      GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
285679    +      GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
285680    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
285681    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
285682    +   end;
MPRINT(EM_DIAGRAM):   end;
285683    +end;
MPRINT(EM_DIAGRAM):   end;
285684    +
285685    +*** Generate dummy variables for GRP_NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumWebPurchases ;
285686    +drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
285687    +if missing( GRP_NumWebPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumWebPurchases ) then do;
285688    +   GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
285689    +   GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
285690    +   GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
285691    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
285692    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
285693    +end;
MPRINT(EM_DIAGRAM):   end;
285694    +else do;
MPRINT(EM_DIAGRAM):   else do;
285695    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
285696    +   _dm12 = put( GRP_NumWebPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumWebPurchases , BEST12. );
285697    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
285698    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
285699    +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
285700    +      GRP_NumWebPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 1;
285701    +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
285702    +   end;
MPRINT(EM_DIAGRAM):   end;
285703    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
285704    +      GRP_NumWebPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = -1;
285705    +      GRP_NumWebPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = -1;
285706    +      GRP_NumWebPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = -1;
285707    +   end;
MPRINT(EM_DIAGRAM):   end;
285708    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
285709    +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
285710    +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
285711    +      GRP_NumWebPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 1;
285712    +   end;
MPRINT(EM_DIAGRAM):   end;
285713    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
285714    +      GRP_NumWebPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 1;
285715    +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
285716    +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
285717    +   end;
MPRINT(EM_DIAGRAM):   end;
285718    +   else do;
MPRINT(EM_DIAGRAM):   else do;
285719    +      GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
285720    +      GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
285721    +      GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
285722    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
285723    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
285724    +   end;
MPRINT(EM_DIAGRAM):   end;
285725    +end;
MPRINT(EM_DIAGRAM):   end;
285726    +
285727    +*** Generate dummy variables for GRP_RFMstat ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RFMstat ;
285728    +drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
285729    +if missing( GRP_RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RFMstat ) then do;
285730    +   GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
285731    +   GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
285732    +   GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
285733    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
285734    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
285735    +end;
MPRINT(EM_DIAGRAM):   end;
285736    +else do;
MPRINT(EM_DIAGRAM):   else do;
285737    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
285738    +   _dm12 = put( GRP_RFMstat , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RFMstat , BEST12. );
285739    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
285740    +   if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
285741    +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
285742    +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
285743    +      GRP_RFMstat4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 1;
285744    +   end;
MPRINT(EM_DIAGRAM):   end;
285745    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
285746    +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
285747    +      GRP_RFMstat3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 1;
285748    +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
285749    +   end;
MPRINT(EM_DIAGRAM):   end;
285750    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
285751    +      GRP_RFMstat2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = -1;
285752    +      GRP_RFMstat3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = -1;
285753    +      GRP_RFMstat4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = -1;
285754    +   end;
MPRINT(EM_DIAGRAM):   end;
285755    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
285756    +      GRP_RFMstat2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 1;
285757    +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
285758    +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
285759    +   end;
MPRINT(EM_DIAGRAM):   end;
285760    +   else do;
MPRINT(EM_DIAGRAM):   else do;
285761    +      GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
285762    +      GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
285763    +      GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
285764    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
285765    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
285766    +   end;
MPRINT(EM_DIAGRAM):   end;
285767    +end;
MPRINT(EM_DIAGRAM):   end;
285768    +
285769    +*** Generate dummy variables for GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RMntFrq ;
285770    +drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
285771    +if missing( GRP_RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RMntFrq ) then do;
285772    +   GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
285773    +   GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
285774    +   GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
285775    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
285776    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
285777    +end;
MPRINT(EM_DIAGRAM):   end;
285778    +else do;
MPRINT(EM_DIAGRAM):   else do;
285779    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
285780    +   _dm12 = put( GRP_RMntFrq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RMntFrq , BEST12. );
285781    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
285782    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
285783    +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
285784    +      GRP_RMntFrq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 1;
285785    +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
285786    +   end;
MPRINT(EM_DIAGRAM):   end;
285787    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
285788    +      GRP_RMntFrq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = -1;
285789    +      GRP_RMntFrq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = -1;
285790    +      GRP_RMntFrq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = -1;
285791    +   end;
MPRINT(EM_DIAGRAM):   end;
285792    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
285793    +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
285794    +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
285795    +      GRP_RMntFrq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 1;
285796    +   end;
MPRINT(EM_DIAGRAM):   end;
285797    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
285798    +      GRP_RMntFrq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 1;
285799    +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
285800    +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
285801    +   end;
MPRINT(EM_DIAGRAM):   end;
285802    +   else do;
MPRINT(EM_DIAGRAM):   else do;
285803    +      GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
285804    +      GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
285805    +      GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
285806    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
285807    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
285808    +   end;
MPRINT(EM_DIAGRAM):   end;
285809    +end;
MPRINT(EM_DIAGRAM):   end;
285810    +
285811    +*** Generate dummy variables for GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Recency ;
285812    +drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
285813    +if missing( GRP_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Recency ) then do;
285814    +   GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
285815    +   GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
285816    +   GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
285817    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
285818    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
285819    +end;
MPRINT(EM_DIAGRAM):   end;
285820    +else do;
MPRINT(EM_DIAGRAM):   else do;
285821    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
285822    +   _dm12 = put( GRP_Recency , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Recency , BEST12. );
285823    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
285824    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
285825    +      GRP_Recency2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = -1;
285826    +      GRP_Recency3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = -1;
285827    +      GRP_Recency4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = -1;
285828    +   end;
MPRINT(EM_DIAGRAM):   end;
285829    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
285830    +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
285831    +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
285832    +      GRP_Recency4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 1;
285833    +   end;
MPRINT(EM_DIAGRAM):   end;
285834    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
285835    +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
285836    +      GRP_Recency3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 1;
285837    +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
285838    +   end;
MPRINT(EM_DIAGRAM):   end;
285839    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
285840    +      GRP_Recency2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 1;
285841    +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
285842    +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
285843    +   end;
MPRINT(EM_DIAGRAM):   end;
285844    +   else do;
MPRINT(EM_DIAGRAM):   else do;
285845    +      GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
285846    +      GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
285847    +      GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
285848    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
285849    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
285850    +   end;
MPRINT(EM_DIAGRAM):   end;
285851    +end;
MPRINT(EM_DIAGRAM):   end;
285852    +
285853    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
285854    +*** Checking missing input Interval
285855    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
285856    +
285857    +IF NMISS(
285858    +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Year_Birth ) THEN DO;
285859    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
285860    +
285861    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
285862    +END;
MPRINT(EM_DIAGRAM):   END;
285863    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
285864    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
285865    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
285866    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
285867    +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
285868    +END;
MPRINT(EM_DIAGRAM):   END;
285869    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
285870    +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
285871    +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
285872    +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
285873    +END;
MPRINT(EM_DIAGRAM):   END;
285874    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
285875    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
285876    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
285877    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
285878    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
285879    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
285880    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
285881    +   H1x1_1  =     1.28407338963657 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.28407338963657 * S_Year_Birth ;
285882    +   H1x1_2  =     2.38810822597472 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 2.38810822597472 * S_Year_Birth ;
285883    +   H1x1_3  =     -0.7204801808304 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.7204801808304 * S_Year_Birth ;
285884    +   H1x1_4  =    -0.06539124294592 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.06539124294592 * S_Year_Birth ;
285885    +   H1x1_5  =     0.03236440118268 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0.03236440118268 * S_Year_Birth ;
285886    +   H1x1_1  = H1x1_1  +     2.33808165856563 * GRP_AcceptedCmp52
285887    +          +    -0.22986949765805 * GRP_Frq2  +     0.35082837363653 * GRP_Frq3
285888    +          +    -0.81539338849938 * GRP_Frq4  +     0.02220909701196 *
285889    +        GRP_Income2  +    -0.13099501713971 * GRP_Income3
285890    +          +     -0.0804536656406 * GRP_Income4  +    -1.59663744670427 *
285891    +        GRP_Mnt2  +    -0.75210072607852 * GRP_Mnt3  +     2.54348518711375 *
285892    +        GRP_Mnt4  +    -1.10495982071076 * GRP_MntFishProducts2
285893    +          +     0.01777635572399 * GRP_MntFishProducts3
285894    +          +     0.64964482065317 * GRP_MntFishProducts4
285895    +          +    -1.04611988857835 * GRP_MntGoldProds2
285896    +          +    -0.78605743432786 * GRP_MntGoldProds3
285897    +          +    -0.66472335544579 * GRP_MntGoldProds4
285898    +          +     1.30740864871492 * GRP_MntMeatProducts2
285899    +          +     2.64958489779167 * GRP_MntMeatProducts3
285900    +          +    -0.07163049651484 * GRP_MntMeatProducts4
285901    +          +     0.25422937257394 * GRP_MntWines2  +     4.96131673300801 *
285902    +        GRP_MntWines3  +     1.19639467926964 * GRP_MntWines4
285903    +          +     1.95336043181706 * GRP_NumCatalogPurchases3
285904    +          +    -1.04651597352668 * GRP_NumCatalogPurchases4
285905    +          +     2.10673800243141 * GRP_NumDistPurchases2
285906    +          +     1.49840431617564 * GRP_NumDistPurchases3
285907    +          +     2.97897302921808 * GRP_NumDistPurchases4
285908    +          +    -0.06881799061639 * GRP_NumWebPurchases2
285909    +          +     2.06509459645382 * GRP_NumWebPurchases3
285910    +          +     2.82361840359249 * GRP_NumWebPurchases4
285911    +          +    -0.22785891000012 * GRP_RFMstat2  +     0.11731067369321 *
285912    +        GRP_RFMstat3  +      2.1473773933678 * GRP_RFMstat4
285913    +          +    -0.84256952222829 * GRP_RMntFrq2  +     0.14220513090593 *
285914    +        GRP_RMntFrq3  +    -0.12372171572674 * GRP_RMntFrq4
285915    +          +    -0.31743815181215 * GRP_Recency2  +    -1.98918978493071 *
285916    +        GRP_Recency3  +    -0.65545972977238 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 2.33808165856563 * GRP_AcceptedCmp52 + 
-0.22986949765805 * GRP_Frq2 + 0.35082837363653 * GRP_Frq3 + -0.81539338849938 * GRP_Frq4 + 
0.02220909701196 * GRP_Income2 + -0.13099501713971 * GRP_Income3 + -0.0804536656406 * 
GRP_Income4 + -1.59663744670427 * GRP_Mnt2 + -0.75210072607852 * GRP_Mnt3 + 2.54348518711375 * 
GRP_Mnt4 + -1.10495982071076 * GRP_MntFishProducts2 + 0.01777635572399 * GRP_MntFishProducts3 
+ 0.64964482065317 * GRP_MntFishProducts4 + -1.04611988857835 * GRP_MntGoldProds2 + 
-0.78605743432786 * GRP_MntGoldProds3 + -0.66472335544579 * GRP_MntGoldProds4 + 
1.30740864871492 * GRP_MntMeatProducts2 + 2.64958489779167 * GRP_MntMeatProducts3 + 
-0.07163049651484 * GRP_MntMeatProducts4 + 0.25422937257394 * GRP_MntWines2 + 4.96131673300801 
* GRP_MntWines3 + 1.19639467926964 * GRP_MntWines4 + 1.95336043181706 * 
GRP_NumCatalogPurchases3 + -1.04651597352668 * GRP_NumCatalogPurchases4 + 2.10673800243141 * 
GRP_NumDistPurchases2 + 1.49840431617564 * GRP_NumDistPurchases3 + 2.97897302921808 * 
GRP_NumDistPurchases4 + -0.06881799061639 * GRP_NumWebPurchases2 + 2.06509459645382 * 
GRP_NumWebPurchases3 + 2.82361840359249 * GRP_NumWebPurchases4 + -0.22785891000012 * 
GRP_RFMstat2 + 0.11731067369321 * GRP_RFMstat3 + 2.1473773933678 * GRP_RFMstat4 + 
-0.84256952222829 * GRP_RMntFrq2 + 0.14220513090593 * GRP_RMntFrq3 + -0.12372171572674 * 
GRP_RMntFrq4 + -0.31743815181215 * GRP_Recency2 + -1.98918978493071 * GRP_Recency3 + 
-0.65545972977238 * GRP_Recency4 ;
285917    +   H1x1_2  = H1x1_2  +     0.33200444555787 * GRP_AcceptedCmp52
285918    +          +     -0.8934566312976 * GRP_Frq2  +    -0.00243983936395 * GRP_Frq3
285919    +          +     0.63648993363629 * GRP_Frq4  +     0.05197343322571 *
285920    +        GRP_Income2  +     0.68177129296873 * GRP_Income3
285921    +          +     1.16889856198675 * GRP_Income4  +     0.52345733778819 *
285922    +        GRP_Mnt2  +     0.86891568330214 * GRP_Mnt3  +    -1.01013818778187 *
285923    +        GRP_Mnt4  +     0.01260306109505 * GRP_MntFishProducts2
285924    +          +     0.36267476732712 * GRP_MntFishProducts3
285925    +          +     -0.0117944700646 * GRP_MntFishProducts4
285926    +          +    -2.60247007794362 * GRP_MntGoldProds2
285927    +          +     1.49175629619075 * GRP_MntGoldProds3
285928    +          +     1.15735621033648 * GRP_MntGoldProds4
285929    +          +     -0.8857925625722 * GRP_MntMeatProducts2
285930    +          +    -1.11977905267757 * GRP_MntMeatProducts3
285931    +          +     0.89317411392862 * GRP_MntMeatProducts4
285932    +          +     1.08362434913444 * GRP_MntWines2  +    -2.34573154102981 *
285933    +        GRP_MntWines3  +    -1.04821908065864 * GRP_MntWines4
285934    +          +    -1.24280966967211 * GRP_NumCatalogPurchases3
285935    +          +      3.0326089053041 * GRP_NumCatalogPurchases4
285936    +          +     0.04779959574354 * GRP_NumDistPurchases2
285937    +          +     1.71017115843439 * GRP_NumDistPurchases3
285938    +          +     0.53628643929359 * GRP_NumDistPurchases4
285939    +          +     0.89950827667194 * GRP_NumWebPurchases2
285940    +          +    -0.92684592689592 * GRP_NumWebPurchases3
285941    +          +     2.96876986636503 * GRP_NumWebPurchases4
285942    +          +     0.63124526160033 * GRP_RFMstat2  +     1.50566150377083 *
285943    +        GRP_RFMstat3  +     1.62201671855053 * GRP_RFMstat4
285944    +          +     1.20404881746786 * GRP_RMntFrq2  +    -0.61586201148662 *
285945    +        GRP_RMntFrq3  +    -1.45102172370413 * GRP_RMntFrq4
285946    +          +     0.89969425569035 * GRP_Recency2  +     0.72245574147873 *
285947    +        GRP_Recency3  +     2.83083807801553 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.33200444555787 * GRP_AcceptedCmp52 + 
-0.8934566312976 * GRP_Frq2 + -0.00243983936395 * GRP_Frq3 + 0.63648993363629 * GRP_Frq4 + 
0.05197343322571 * GRP_Income2 + 0.68177129296873 * GRP_Income3 + 1.16889856198675 * 
GRP_Income4 + 0.52345733778819 * GRP_Mnt2 + 0.86891568330214 * GRP_Mnt3 + -1.01013818778187 * 
GRP_Mnt4 + 0.01260306109505 * GRP_MntFishProducts2 + 0.36267476732712 * GRP_MntFishProducts3 + 
-0.0117944700646 * GRP_MntFishProducts4 + -2.60247007794362 * GRP_MntGoldProds2 + 
1.49175629619075 * GRP_MntGoldProds3 + 1.15735621033648 * GRP_MntGoldProds4 + -0.8857925625722 
* GRP_MntMeatProducts2 + -1.11977905267757 * GRP_MntMeatProducts3 + 0.89317411392862 * 
GRP_MntMeatProducts4 + 1.08362434913444 * GRP_MntWines2 + -2.34573154102981 * GRP_MntWines3 + 
-1.04821908065864 * GRP_MntWines4 + -1.24280966967211 * GRP_NumCatalogPurchases3 + 
3.0326089053041 * GRP_NumCatalogPurchases4 + 0.04779959574354 * GRP_NumDistPurchases2 + 
1.71017115843439 * GRP_NumDistPurchases3 + 0.53628643929359 * GRP_NumDistPurchases4 + 
0.89950827667194 * GRP_NumWebPurchases2 + -0.92684592689592 * GRP_NumWebPurchases3 + 
2.96876986636503 * GRP_NumWebPurchases4 + 0.63124526160033 * GRP_RFMstat2 + 1.50566150377083 * 
GRP_RFMstat3 + 1.62201671855053 * GRP_RFMstat4 + 1.20404881746786 * GRP_RMntFrq2 + 
-0.61586201148662 * GRP_RMntFrq3 + -1.45102172370413 * GRP_RMntFrq4 + 0.89969425569035 * 
GRP_Recency2 + 0.72245574147873 * GRP_Recency3 + 2.83083807801553 * GRP_Recency4 ;
285948    +   H1x1_3  = H1x1_3  +    -0.49052681984122 * GRP_AcceptedCmp52
285949    +          +     0.05710791956099 * GRP_Frq2  +     1.88983418164026 * GRP_Frq3
285950    +          +     0.23283788572694 * GRP_Frq4  +    -0.80169095220425 *
285951    +        GRP_Income2  +    -1.74093887199998 * GRP_Income3
285952    +          +    -0.35184466623661 * GRP_Income4  +     0.02791690171447 *
285953    +        GRP_Mnt2  +    -2.20424160961867 * GRP_Mnt3  +     0.50765331628654 *
285954    +        GRP_Mnt4  +     0.29403246554661 * GRP_MntFishProducts2
285955    +          +    -0.83380418052364 * GRP_MntFishProducts3
285956    +          +    -1.82543627661138 * GRP_MntFishProducts4
285957    +          +     0.39365380396703 * GRP_MntGoldProds2
285958    +          +     0.03998618589682 * GRP_MntGoldProds3
285959    +          +    -1.56455277750616 * GRP_MntGoldProds4
285960    +          +     0.07220994129439 * GRP_MntMeatProducts2
285961    +          +     1.10999034367361 * GRP_MntMeatProducts3
285962    +          +     0.63528886514116 * GRP_MntMeatProducts4
285963    +          +    -1.82455352991516 * GRP_MntWines2  +    -0.37467219689144 *
285964    +        GRP_MntWines3  +     0.51071844252207 * GRP_MntWines4
285965    +          +    -0.21422031720258 * GRP_NumCatalogPurchases3
285966    +          +    -3.11364867963994 * GRP_NumCatalogPurchases4
285967    +          +    -0.08758432252505 * GRP_NumDistPurchases2
285968    +          +    -0.24735131829279 * GRP_NumDistPurchases3
285969    +          +     1.22135970166178 * GRP_NumDistPurchases4
285970    +          +     0.57769775812299 * GRP_NumWebPurchases2
285971    +          +     4.20512829375782 * GRP_NumWebPurchases3
285972    +          +    -0.77892811708123 * GRP_NumWebPurchases4
285973    +          +    -1.48591575907258 * GRP_RFMstat2  +    -0.02715745890283 *
285974    +        GRP_RFMstat3  +    -1.82753253216976 * GRP_RFMstat4
285975    +          +     0.63517164755033 * GRP_RMntFrq2  +     3.41625861410136 *
285976    +        GRP_RMntFrq3  +    -1.06016238729643 * GRP_RMntFrq4
285977    +          +     0.96560069161334 * GRP_Recency2  +     2.60413272119793 *
285978    +        GRP_Recency3  +    -1.02278922860839 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.49052681984122 * GRP_AcceptedCmp52 + 
0.05710791956099 * GRP_Frq2 + 1.88983418164026 * GRP_Frq3 + 0.23283788572694 * GRP_Frq4 + 
-0.80169095220425 * GRP_Income2 + -1.74093887199998 * GRP_Income3 + -0.35184466623661 * 
GRP_Income4 + 0.02791690171447 * GRP_Mnt2 + -2.20424160961867 * GRP_Mnt3 + 0.50765331628654 * 
GRP_Mnt4 + 0.29403246554661 * GRP_MntFishProducts2 + -0.83380418052364 * GRP_MntFishProducts3 
+ -1.82543627661138 * GRP_MntFishProducts4 + 0.39365380396703 * GRP_MntGoldProds2 + 
0.03998618589682 * GRP_MntGoldProds3 + -1.56455277750616 * GRP_MntGoldProds4 + 
0.07220994129439 * GRP_MntMeatProducts2 + 1.10999034367361 * GRP_MntMeatProducts3 + 
0.63528886514116 * GRP_MntMeatProducts4 + -1.82455352991516 * GRP_MntWines2 + 
-0.37467219689144 * GRP_MntWines3 + 0.51071844252207 * GRP_MntWines4 + -0.21422031720258 * 
GRP_NumCatalogPurchases3 + -3.11364867963994 * GRP_NumCatalogPurchases4 + -0.08758432252505 * 
GRP_NumDistPurchases2 + -0.24735131829279 * GRP_NumDistPurchases3 + 1.22135970166178 * 
GRP_NumDistPurchases4 + 0.57769775812299 * GRP_NumWebPurchases2 + 4.20512829375782 * 
GRP_NumWebPurchases3 + -0.77892811708123 * GRP_NumWebPurchases4 + -1.48591575907258 * 
GRP_RFMstat2 + -0.02715745890283 * GRP_RFMstat3 + -1.82753253216976 * GRP_RFMstat4 + 
0.63517164755033 * GRP_RMntFrq2 + 3.41625861410136 * GRP_RMntFrq3 + -1.06016238729643 * 
GRP_RMntFrq4 + 0.96560069161334 * GRP_Recency2 + 2.60413272119793 * GRP_Recency3 + 
-1.02278922860839 * GRP_Recency4 ;
285979    +   H1x1_4  = H1x1_4  +    -3.02372554661072 * GRP_AcceptedCmp52
285980    +          +     1.03599850000215 * GRP_Frq2  +     2.24242470356718 * GRP_Frq3
285981    +          +      3.4718187916521 * GRP_Frq4  +     1.28707236613409 *
285982    +        GRP_Income2  +    -1.54838965127225 * GRP_Income3
285983    +          +     2.52665199719571 * GRP_Income4  +    -2.14598289769275 *
285984    +        GRP_Mnt2  +    -1.04082723723167 * GRP_Mnt3  +    -1.68747662808983 *
285985    +        GRP_Mnt4  +     -0.8736100922486 * GRP_MntFishProducts2
285986    +          +     0.12779836724514 * GRP_MntFishProducts3
285987    +          +     0.60216313416651 * GRP_MntFishProducts4
285988    +          +     0.68165487174749 * GRP_MntGoldProds2
285989    +          +    -0.89672475622939 * GRP_MntGoldProds3
285990    +          +    -1.77795912962804 * GRP_MntGoldProds4
285991    +          +    -0.74193637631708 * GRP_MntMeatProducts2
285992    +          +    -3.00981763564253 * GRP_MntMeatProducts3
285993    +          +    -0.98818439514034 * GRP_MntMeatProducts4
285994    +          +    -0.81552449599254 * GRP_MntWines2  +    -1.24481835102021 *
285995    +        GRP_MntWines3  +     0.58877118654504 * GRP_MntWines4
285996    +          +    -0.10424789545355 * GRP_NumCatalogPurchases3
285997    +          +    -1.76322947168567 * GRP_NumCatalogPurchases4
285998    +          +     0.28024987640988 * GRP_NumDistPurchases2
285999    +          +    -0.26195842187994 * GRP_NumDistPurchases3
286000    +          +     1.27465783090106 * GRP_NumDistPurchases4
286001    +          +     0.56044035795721 * GRP_NumWebPurchases2
286002    +          +     -1.0019608410124 * GRP_NumWebPurchases3
286003    +          +    -1.00438490557229 * GRP_NumWebPurchases4
286004    +          +      0.1961165620509 * GRP_RFMstat2  +    -0.64166582924081 *
286005    +        GRP_RFMstat3  +     1.80597898183848 * GRP_RFMstat4
286006    +          +       0.012135091764 * GRP_RMntFrq2  +     -1.6713653901367 *
286007    +        GRP_RMntFrq3  +    -0.99155260811599 * GRP_RMntFrq4
286008    +          +    -1.41207701933445 * GRP_Recency2  +    -1.44162495285758 *
286009    +        GRP_Recency3  +    -1.33328278459656 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -3.02372554661072 * GRP_AcceptedCmp52 + 
1.03599850000215 * GRP_Frq2 + 2.24242470356718 * GRP_Frq3 + 3.4718187916521 * GRP_Frq4 + 
1.28707236613409 * GRP_Income2 + -1.54838965127225 * GRP_Income3 + 2.52665199719571 * 
GRP_Income4 + -2.14598289769275 * GRP_Mnt2 + -1.04082723723167 * GRP_Mnt3 + -1.68747662808983 
* GRP_Mnt4 + -0.8736100922486 * GRP_MntFishProducts2 + 0.12779836724514 * GRP_MntFishProducts3 
+ 0.60216313416651 * GRP_MntFishProducts4 + 0.68165487174749 * GRP_MntGoldProds2 + 
-0.89672475622939 * GRP_MntGoldProds3 + -1.77795912962804 * GRP_MntGoldProds4 + 
-0.74193637631708 * GRP_MntMeatProducts2 + -3.00981763564253 * GRP_MntMeatProducts3 + 
-0.98818439514034 * GRP_MntMeatProducts4 + -0.81552449599254 * GRP_MntWines2 + 
-1.24481835102021 * GRP_MntWines3 + 0.58877118654504 * GRP_MntWines4 + -0.10424789545355 * 
GRP_NumCatalogPurchases3 + -1.76322947168567 * GRP_NumCatalogPurchases4 + 0.28024987640988 * 
GRP_NumDistPurchases2 + -0.26195842187994 * GRP_NumDistPurchases3 + 1.27465783090106 * 
GRP_NumDistPurchases4 + 0.56044035795721 * GRP_NumWebPurchases2 + -1.0019608410124 * 
GRP_NumWebPurchases3 + -1.00438490557229 * GRP_NumWebPurchases4 + 0.1961165620509 * 
GRP_RFMstat2 + -0.64166582924081 * GRP_RFMstat3 + 1.80597898183848 * GRP_RFMstat4 + 
0.012135091764 * GRP_RMntFrq2 + -1.6713653901367 * GRP_RMntFrq3 + -0.99155260811599 * 
GRP_RMntFrq4 + -1.41207701933445 * GRP_Recency2 + -1.44162495285758 * GRP_Recency3 + 
-1.33328278459656 * GRP_Recency4 ;
286010    +   H1x1_5  = H1x1_5  +    -2.91353005427803 * GRP_AcceptedCmp52
286011    +          +    -0.01308096407334 * GRP_Frq2  +    -0.45559322170718 * GRP_Frq3
286012    +          +    -0.49751279425547 * GRP_Frq4  +     0.02860594561374 *
286013    +        GRP_Income2  +     1.41758925806391 * GRP_Income3
286014    +          +     0.03726548596251 * GRP_Income4  +    -1.57900147909252 *
286015    +        GRP_Mnt2  +      2.3511697752438 * GRP_Mnt3  +     0.88048248424859 *
286016    +        GRP_Mnt4  +    -0.56545409501904 * GRP_MntFishProducts2
286017    +          +    -3.10608760567335 * GRP_MntFishProducts3
286018    +          +     1.06400320622897 * GRP_MntFishProducts4
286019    +          +     2.68670541844486 * GRP_MntGoldProds2
286020    +          +     0.07232195736653 * GRP_MntGoldProds3
286021    +          +     1.85531703888295 * GRP_MntGoldProds4
286022    +          +    -1.87162230531925 * GRP_MntMeatProducts2
286023    +          +    -1.13875662802599 * GRP_MntMeatProducts3
286024    +          +    -0.24099135606782 * GRP_MntMeatProducts4
286025    +          +    -0.13235213570702 * GRP_MntWines2  +    -0.50193070898101 *
286026    +        GRP_MntWines3  +     -0.1999771853027 * GRP_MntWines4
286027    +          +    -1.59837823433046 * GRP_NumCatalogPurchases3
286028    +          +    -3.92043146311091 * GRP_NumCatalogPurchases4
286029    +          +    -0.99805577329855 * GRP_NumDistPurchases2
286030    +          +     -2.4067364238872 * GRP_NumDistPurchases3
286031    +          +     0.25924131471222 * GRP_NumDistPurchases4
286032    +          +     0.70743157783391 * GRP_NumWebPurchases2
286033    +          +    -2.55740259562506 * GRP_NumWebPurchases3
286034    +          +     1.49837454147543 * GRP_NumWebPurchases4
286035    +          +     0.02282459900932 * GRP_RFMstat2  +     2.49823188893146 *
286036    +        GRP_RFMstat3  +      0.0125770688182 * GRP_RFMstat4
286037    +          +    -0.52646059416986 * GRP_RMntFrq2  +     0.48734306173312 *
286038    +        GRP_RMntFrq3  +     1.20982084491791 * GRP_RMntFrq4
286039    +          +     1.46024730556461 * GRP_Recency2  +     1.39328521843098 *
286040    +        GRP_Recency3  +     0.07072877455933 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -2.91353005427803 * GRP_AcceptedCmp52 + 
-0.01308096407334 * GRP_Frq2 + -0.45559322170718 * GRP_Frq3 + -0.49751279425547 * GRP_Frq4 + 
0.02860594561374 * GRP_Income2 + 1.41758925806391 * GRP_Income3 + 0.03726548596251 * 
GRP_Income4 + -1.57900147909252 * GRP_Mnt2 + 2.3511697752438 * GRP_Mnt3 + 0.88048248424859 * 
GRP_Mnt4 + -0.56545409501904 * GRP_MntFishProducts2 + -3.10608760567335 * GRP_MntFishProducts3 
+ 1.06400320622897 * GRP_MntFishProducts4 + 2.68670541844486 * GRP_MntGoldProds2 + 
0.07232195736653 * GRP_MntGoldProds3 + 1.85531703888295 * GRP_MntGoldProds4 + 
-1.87162230531925 * GRP_MntMeatProducts2 + -1.13875662802599 * GRP_MntMeatProducts3 + 
-0.24099135606782 * GRP_MntMeatProducts4 + -0.13235213570702 * GRP_MntWines2 + 
-0.50193070898101 * GRP_MntWines3 + -0.1999771853027 * GRP_MntWines4 + -1.59837823433046 * 
GRP_NumCatalogPurchases3 + -3.92043146311091 * GRP_NumCatalogPurchases4 + -0.99805577329855 * 
GRP_NumDistPurchases2 + -2.4067364238872 * GRP_NumDistPurchases3 + 0.25924131471222 * 
GRP_NumDistPurchases4 + 0.70743157783391 * GRP_NumWebPurchases2 + -2.55740259562506 * 
GRP_NumWebPurchases3 + 1.49837454147543 * GRP_NumWebPurchases4 + 0.02282459900932 * 
GRP_RFMstat2 + 2.49823188893146 * GRP_RFMstat3 + 0.0125770688182 * GRP_RFMstat4 + 
-0.52646059416986 * GRP_RMntFrq2 + 0.48734306173312 * GRP_RMntFrq3 + 1.20982084491791 * 
GRP_RMntFrq4 + 1.46024730556461 * GRP_Recency2 + 1.39328521843098 * GRP_Recency3 + 
0.07072877455933 * GRP_Recency4 ;
286041    +   H1x1_1  =     2.28517939702199 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 2.28517939702199 + H1x1_1 ;
286042    +   H1x1_2  =      0.8100923065727 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.8100923065727 + H1x1_2 ;
286043    +   H1x1_3  =    -1.33120225377486 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -1.33120225377486 + H1x1_3 ;
286044    +   H1x1_4  =    -0.45230391783078 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.45230391783078 + H1x1_4 ;
286045    +   H1x1_5  =    -0.40460344381081 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.40460344381081 + H1x1_5 ;
286046    +   H1x1_6  = 0;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0;
286047    +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
286048    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
286049    +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
286050    +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
286051    +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
286052    +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
286053    +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
286054    +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
286055    +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
286056    +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
286057    +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
286058    +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
286059    +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
286060    +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
286061    +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
286062    +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
286063    +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
286064    +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
286065    +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
286066    +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
286067    +END;
MPRINT(EM_DIAGRAM):   END;
286068    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
286069    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
286070    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
286071    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
286072    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
286073    +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
286074    +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
286075    +END;
MPRINT(EM_DIAGRAM):   END;
286076    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
286077    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
286078    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
286079    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
286080    +   P_DepVar1  =    -2.81431269255211 * H1x1_1  +       3.440967475001 * H1x1_2
286081    +          +     0.80588527631153 * H1x1_3  +    -2.86385782353564 * H1x1_4
286082    +          +     4.10205776026281 * H1x1_5  +    -2.89048426961502 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.81431269255211 * H1x1_1 + 3.440967475001 * H1x1_2 + 
0.80588527631153 * H1x1_3 + -2.86385782353564 * H1x1_4 + 4.10205776026281 * H1x1_5 + 
-2.89048426961502 * H1x1_6 ;
286083    +   P_DepVar1  =    -1.38440437244113 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.38440437244113 + P_DepVar1 ;
286084    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
286085    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
286086    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
286087    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
286088    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
286089    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
286090    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
286091    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
286092    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
286093    +END;
MPRINT(EM_DIAGRAM):   END;
286094    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
286095    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
286096    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
286097    +END;
MPRINT(EM_DIAGRAM):   END;
286098    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
286099    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
286100    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
286101    +END;
MPRINT(EM_DIAGRAM):   END;
286102    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
286103    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
286104    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
286105    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
286106    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
286107    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
286108    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
286109    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
286110    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
286111    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
286112    +END;
MPRINT(EM_DIAGRAM):   END;
286113    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
286114    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
286115    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
286116    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
286117     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
      

MPRINT(EM_DIAGRAM):   quit;
286118     quit;
286119     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
286120     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
286121     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
286122     retain ID 2 Node "AutoNeural21";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural21";
286123     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
286124     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2322 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2322 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

286125     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
286126     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
286127     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2322 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2322 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

286128     proc sort data=EMWS8.AutoNeural21_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural21_variableset out=_temp2(keep=NAME 
CREATOR);
286129     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
286130     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 48 observations read from the data set EMWS8.AUTONEURAL21_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 48 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

286131     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
286132     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
286133     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
286134     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 48 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 48 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

286135     proc contents data=EMWS8.AutoNeural21_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural21_train out=_meta(keep=NAME) noprint;
286136     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 73 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

286137     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
286138     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
286139     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 73 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 73 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

286140     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
286141     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
286142     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
286143     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 73 observations read from the data set WORK._META.
NOTE: There were 48 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 73 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

286144     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
286145     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
286145   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1111 rows and 5 columns.

286146     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

286147     proc append base=EMWS8.Ensmbl50_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl50_FCMP data=_tempx;
286148     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL50_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1111 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL50_FCMP has 1111 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

286149     filename _pref
286149   ! "C:\\predictive-models-project\Workspaces\EMWS8\BINNING\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\BINNING\EMPUBLISHSCORE.sas";
286150     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
286151     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\BINNING\EMPUBLISHSCORE.sas.
286152    +length _UFormat $200;
MPRINT(EM_DIAGRAM):   length _UFormat $200;
286153    +drop _UFormat;
MPRINT(EM_DIAGRAM):   drop _UFormat;
286154    +_UFormat='';
MPRINT(EM_DIAGRAM):   _UFormat='';
286155    +
286156    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
286157    +* Variable: AcceptedCmp5;
MPRINT(EM_DIAGRAM):   * Variable: AcceptedCmp5;
286158    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
286159    +LABEL GRP_AcceptedCmp5 =
286160    +'Grouped: AcceptedCmp5';
MPRINT(EM_DIAGRAM):   LABEL GRP_AcceptedCmp5 = 'Grouped: AcceptedCmp5';
286161    +
286162    +_UFormat = put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _UFormat = put(AcceptedCmp5,BEST.);
286163    +%dmnormip(_UFormat);
MPRINT(DMNORMIP):   call dmnorm(_UFormat,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
286164    +if MISSING(_UFORMAT) then do;
MPRINT(EM_DIAGRAM):   if MISSING(_UFORMAT) then do;
286165    +GRP_AcceptedCmp5 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 1;
286166    +end;
MPRINT(EM_DIAGRAM):   end;
286167    +else if NOT MISSING(_UFORMAT) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(_UFORMAT) then do;
286168    +if (_UFORMAT eq '0'
286169    +) then do;
MPRINT(EM_DIAGRAM):   if (_UFORMAT eq '0' ) then do;
286170    +GRP_AcceptedCmp5 = 2;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 2;
286171    +end;
MPRINT(EM_DIAGRAM):   end;
286172    +else
286173    +if (_UFORMAT eq '1'
286174    +) then do;
MPRINT(EM_DIAGRAM):   else if (_UFORMAT eq '1' ) then do;
286175    +GRP_AcceptedCmp5 = 3;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 3;
286176    +end;
MPRINT(EM_DIAGRAM):   end;
286177    +else do;
MPRINT(EM_DIAGRAM):   else do;
286178    +GRP_AcceptedCmp5 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 1;
286179    +end;
MPRINT(EM_DIAGRAM):   end;
286180    +end;
MPRINT(EM_DIAGRAM):   end;
286181    +
286182    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
286183    +* Variable: Frq;
MPRINT(EM_DIAGRAM):   * Variable: Frq;
286184    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
286185    +LABEL GRP_Frq = "Grouped: Frq";
MPRINT(EM_DIAGRAM):   LABEL GRP_Frq = "Grouped: Frq";
286186    +
286187    +if MISSING(Frq) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Frq) then do;
286188    +GRP_Frq = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq = 1;
286189    +end;
MPRINT(EM_DIAGRAM):   end;
286190    +else if NOT MISSING(Frq) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Frq) then do;
286191    +if Frq < 6 then do;
MPRINT(EM_DIAGRAM):   if Frq < 6 then do;
286192    +GRP_Frq = 2;
MPRINT(EM_DIAGRAM):   GRP_Frq = 2;
286193    +end;
MPRINT(EM_DIAGRAM):   end;
286194    +else
286195    +if 6 <= Frq AND Frq < 12 then do;
MPRINT(EM_DIAGRAM):   else if 6 <= Frq AND Frq < 12 then do;
286196    +GRP_Frq = 3;
MPRINT(EM_DIAGRAM):   GRP_Frq = 3;
286197    +end;
MPRINT(EM_DIAGRAM):   end;
286198    +else
286199    +if 12 <= Frq AND Frq < 18 then do;
MPRINT(EM_DIAGRAM):   else if 12 <= Frq AND Frq < 18 then do;
286200    +GRP_Frq = 4;
MPRINT(EM_DIAGRAM):   GRP_Frq = 4;
286201    +end;
MPRINT(EM_DIAGRAM):   end;
286202    +else
286203    +if 18 <= Frq then do;
MPRINT(EM_DIAGRAM):   else if 18 <= Frq then do;
286204    +GRP_Frq = 5;
MPRINT(EM_DIAGRAM):   GRP_Frq = 5;
286205    +end;
MPRINT(EM_DIAGRAM):   end;
286206    +end;
MPRINT(EM_DIAGRAM):   end;
286207    +
286208    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
286209    +* Variable: Income;
MPRINT(EM_DIAGRAM):   * Variable: Income;
286210    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
286211    +LABEL GRP_Income =
286212    +'Grouped: Income';
MPRINT(EM_DIAGRAM):   LABEL GRP_Income = 'Grouped: Income';
286213    +
286214    +if MISSING(Income) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Income) then do;
286215    +GRP_Income = 1;
MPRINT(EM_DIAGRAM):   GRP_Income = 1;
286216    +end;
MPRINT(EM_DIAGRAM):   end;
286217    +else if NOT MISSING(Income) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Income) then do;
286218    +if Income < 35268 then do;
MPRINT(EM_DIAGRAM):   if Income < 35268 then do;
286219    +GRP_Income = 2;
MPRINT(EM_DIAGRAM):   GRP_Income = 2;
286220    +end;
MPRINT(EM_DIAGRAM):   end;
286221    +else
286222    +if 35268 <= Income AND Income < 52157 then do;
MPRINT(EM_DIAGRAM):   else if 35268 <= Income AND Income < 52157 then do;
286223    +GRP_Income = 3;
MPRINT(EM_DIAGRAM):   GRP_Income = 3;
286224    +end;
MPRINT(EM_DIAGRAM):   end;
286225    +else
286226    +if 52157 <= Income AND Income < 69486 then do;
MPRINT(EM_DIAGRAM):   else if 52157 <= Income AND Income < 69486 then do;
286227    +GRP_Income = 4;
MPRINT(EM_DIAGRAM):   GRP_Income = 4;
286228    +end;
MPRINT(EM_DIAGRAM):   end;
286229    +else
286230    +if 69486 <= Income then do;
MPRINT(EM_DIAGRAM):   else if 69486 <= Income then do;
286231    +GRP_Income = 5;
MPRINT(EM_DIAGRAM):   GRP_Income = 5;
286232    +end;
MPRINT(EM_DIAGRAM):   end;
286233    +end;
MPRINT(EM_DIAGRAM):   end;
286234    +
286235    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
286236    +* Variable: Mnt;
MPRINT(EM_DIAGRAM):   * Variable: Mnt;
286237    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
286238    +LABEL GRP_Mnt = "Grouped: Mnt";
MPRINT(EM_DIAGRAM):   LABEL GRP_Mnt = "Grouped: Mnt";
286239    +
286240    +if MISSING(Mnt) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Mnt) then do;
286241    +GRP_Mnt = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 1;
286242    +end;
MPRINT(EM_DIAGRAM):   end;
286243    +else if NOT MISSING(Mnt) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Mnt) then do;
286244    +if Mnt < 72 then do;
MPRINT(EM_DIAGRAM):   if Mnt < 72 then do;
286245    +GRP_Mnt = 2;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 2;
286246    +end;
MPRINT(EM_DIAGRAM):   end;
286247    +else
286248    +if 72 <= Mnt AND Mnt < 405.5 then do;
MPRINT(EM_DIAGRAM):   else if 72 <= Mnt AND Mnt < 405.5 then do;
286249    +GRP_Mnt = 3;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 3;
286250    +end;
MPRINT(EM_DIAGRAM):   end;
286251    +else
286252    +if 405.5 <= Mnt AND Mnt < 1064 then do;
MPRINT(EM_DIAGRAM):   else if 405.5 <= Mnt AND Mnt < 1064 then do;
286253    +GRP_Mnt = 4;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 4;
286254    +end;
MPRINT(EM_DIAGRAM):   end;
286255    +else
286256    +if 1064 <= Mnt then do;
MPRINT(EM_DIAGRAM):   else if 1064 <= Mnt then do;
286257    +GRP_Mnt = 5;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 5;
286258    +end;
MPRINT(EM_DIAGRAM):   end;
286259    +end;
MPRINT(EM_DIAGRAM):   end;
286260    +
286261    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
286262    +* Variable: MntFishProducts;
MPRINT(EM_DIAGRAM):   * Variable: MntFishProducts;
286263    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
286264    +LABEL GRP_MntFishProducts =
286265    +'Grouped: MntFishProducts';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntFishProducts = 'Grouped: MntFishProducts';
286266    +
286267    +if MISSING(MntFishProducts) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntFishProducts) then do;
286268    +GRP_MntFishProducts = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 1;
286269    +end;
MPRINT(EM_DIAGRAM):   end;
286270    +else if NOT MISSING(MntFishProducts) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntFishProducts) then do;
286271    +if MntFishProducts < 3 then do;
MPRINT(EM_DIAGRAM):   if MntFishProducts < 3 then do;
286272    +GRP_MntFishProducts = 2;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 2;
286273    +end;
MPRINT(EM_DIAGRAM):   end;
286274    +else
286275    +if 3 <= MntFishProducts AND MntFishProducts < 13 then do;
MPRINT(EM_DIAGRAM):   else if 3 <= MntFishProducts AND MntFishProducts < 13 then do;
286276    +GRP_MntFishProducts = 3;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 3;
286277    +end;
MPRINT(EM_DIAGRAM):   end;
286278    +else
286279    +if 13 <= MntFishProducts AND MntFishProducts < 47 then do;
MPRINT(EM_DIAGRAM):   else if 13 <= MntFishProducts AND MntFishProducts < 47 then do;
286280    +GRP_MntFishProducts = 4;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 4;
286281    +end;
MPRINT(EM_DIAGRAM):   end;
286282    +else
286283    +if 47 <= MntFishProducts then do;
MPRINT(EM_DIAGRAM):   else if 47 <= MntFishProducts then do;
286284    +GRP_MntFishProducts = 5;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 5;
286285    +end;
MPRINT(EM_DIAGRAM):   end;
286286    +end;
MPRINT(EM_DIAGRAM):   end;
286287    +
286288    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
286289    +* Variable: MntGoldProds;
MPRINT(EM_DIAGRAM):   * Variable: MntGoldProds;
286290    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
286291    +LABEL GRP_MntGoldProds =
286292    +'Grouped: MntGoldProds';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntGoldProds = 'Grouped: MntGoldProds';
286293    +
286294    +if MISSING(MntGoldProds) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntGoldProds) then do;
286295    +GRP_MntGoldProds = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 1;
286296    +end;
MPRINT(EM_DIAGRAM):   end;
286297    +else if NOT MISSING(MntGoldProds) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntGoldProds) then do;
286298    +if MntGoldProds < 9 then do;
MPRINT(EM_DIAGRAM):   if MntGoldProds < 9 then do;
286299    +GRP_MntGoldProds = 2;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 2;
286300    +end;
MPRINT(EM_DIAGRAM):   end;
286301    +else
286302    +if 9 <= MntGoldProds AND MntGoldProds < 25 then do;
MPRINT(EM_DIAGRAM):   else if 9 <= MntGoldProds AND MntGoldProds < 25 then do;
286303    +GRP_MntGoldProds = 3;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 3;
286304    +end;
MPRINT(EM_DIAGRAM):   end;
286305    +else
286306    +if 25 <= MntGoldProds AND MntGoldProds < 59 then do;
MPRINT(EM_DIAGRAM):   else if 25 <= MntGoldProds AND MntGoldProds < 59 then do;
286307    +GRP_MntGoldProds = 4;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 4;
286308    +end;
MPRINT(EM_DIAGRAM):   end;
286309    +else
286310    +if 59 <= MntGoldProds then do;
MPRINT(EM_DIAGRAM):   else if 59 <= MntGoldProds then do;
286311    +GRP_MntGoldProds = 5;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 5;
286312    +end;
MPRINT(EM_DIAGRAM):   end;
286313    +end;
MPRINT(EM_DIAGRAM):   end;
286314    +
286315    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
286316    +* Variable: MntMeatProducts;
MPRINT(EM_DIAGRAM):   * Variable: MntMeatProducts;
286317    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
286318    +LABEL GRP_MntMeatProducts =
286319    +'Grouped: MntMeatProducts';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntMeatProducts = 'Grouped: MntMeatProducts';
286320    +
286321    +if MISSING(MntMeatProducts) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntMeatProducts) then do;
286322    +GRP_MntMeatProducts = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 1;
286323    +end;
MPRINT(EM_DIAGRAM):   end;
286324    +else if NOT MISSING(MntMeatProducts) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntMeatProducts) then do;
286325    +if MntMeatProducts < 17 then do;
MPRINT(EM_DIAGRAM):   if MntMeatProducts < 17 then do;
286326    +GRP_MntMeatProducts = 2;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 2;
286327    +end;
MPRINT(EM_DIAGRAM):   end;
286328    +else
286329    +if 17 <= MntMeatProducts AND MntMeatProducts < 72 then do;
MPRINT(EM_DIAGRAM):   else if 17 <= MntMeatProducts AND MntMeatProducts < 72 then do;
286330    +GRP_MntMeatProducts = 3;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 3;
286331    +end;
MPRINT(EM_DIAGRAM):   end;
286332    +else
286333    +if 72 <= MntMeatProducts AND MntMeatProducts < 246 then do;
MPRINT(EM_DIAGRAM):   else if 72 <= MntMeatProducts AND MntMeatProducts < 246 then do;
286334    +GRP_MntMeatProducts = 4;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 4;
286335    +end;
MPRINT(EM_DIAGRAM):   end;
286336    +else
286337    +if 246 <= MntMeatProducts then do;
MPRINT(EM_DIAGRAM):   else if 246 <= MntMeatProducts then do;
286338    +GRP_MntMeatProducts = 5;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 5;
286339    +end;
MPRINT(EM_DIAGRAM):   end;
286340    +end;
MPRINT(EM_DIAGRAM):   end;
286341    +
286342    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
286343    +* Variable: MntWines;
MPRINT(EM_DIAGRAM):   * Variable: MntWines;
286344    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
286345    +LABEL GRP_MntWines =
286346    +'Grouped: MntWines';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntWines = 'Grouped: MntWines';
286347    +
286348    +if MISSING(MntWines) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntWines) then do;
286349    +GRP_MntWines = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 1;
286350    +end;
MPRINT(EM_DIAGRAM):   end;
286351    +else if NOT MISSING(MntWines) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntWines) then do;
286352    +if MntWines < 24 then do;
MPRINT(EM_DIAGRAM):   if MntWines < 24 then do;
286353    +GRP_MntWines = 2;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 2;
286354    +end;
MPRINT(EM_DIAGRAM):   end;
286355    +else
286356    +if 24 <= MntWines AND MntWines < 183.5 then do;
MPRINT(EM_DIAGRAM):   else if 24 <= MntWines AND MntWines < 183.5 then do;
286357    +GRP_MntWines = 3;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 3;
286358    +end;
MPRINT(EM_DIAGRAM):   end;
286359    +else
286360    +if 183.5 <= MntWines AND MntWines < 508 then do;
MPRINT(EM_DIAGRAM):   else if 183.5 <= MntWines AND MntWines < 508 then do;
286361    +GRP_MntWines = 4;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 4;
286362    +end;
MPRINT(EM_DIAGRAM):   end;
286363    +else
286364    +if 508 <= MntWines then do;
MPRINT(EM_DIAGRAM):   else if 508 <= MntWines then do;
286365    +GRP_MntWines = 5;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 5;
286366    +end;
MPRINT(EM_DIAGRAM):   end;
286367    +end;
MPRINT(EM_DIAGRAM):   end;
286368    +
286369    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
286370    +* Variable: NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumCatalogPurchases;
286371    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
286372    +LABEL GRP_NumCatalogPurchases =
286373    +'Grouped: NumCatalogPurchases';
MPRINT(EM_DIAGRAM):   LABEL GRP_NumCatalogPurchases = 'Grouped: NumCatalogPurchases';
286374    +
286375    +if MISSING(NumCatalogPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumCatalogPurchases) then do;
286376    +GRP_NumCatalogPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 1;
286377    +end;
MPRINT(EM_DIAGRAM):   end;
286378    +else if NOT MISSING(NumCatalogPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumCatalogPurchases) then do;
286379    +if NumCatalogPurchases < 0 then do;
MPRINT(EM_DIAGRAM):   if NumCatalogPurchases < 0 then do;
286380    +GRP_NumCatalogPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 2;
286381    +end;
MPRINT(EM_DIAGRAM):   end;
286382    +else
286383    +if 0 <= NumCatalogPurchases AND NumCatalogPurchases < 2 then do;
MPRINT(EM_DIAGRAM):   else if 0 <= NumCatalogPurchases AND NumCatalogPurchases < 2 then do;
286384    +GRP_NumCatalogPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 3;
286385    +end;
MPRINT(EM_DIAGRAM):   end;
286386    +else
286387    +if 2 <= NumCatalogPurchases AND NumCatalogPurchases < 4 then do;
MPRINT(EM_DIAGRAM):   else if 2 <= NumCatalogPurchases AND NumCatalogPurchases < 4 then do;
286388    +GRP_NumCatalogPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 4;
286389    +end;
MPRINT(EM_DIAGRAM):   end;
286390    +else
286391    +if 4 <= NumCatalogPurchases then do;
MPRINT(EM_DIAGRAM):   else if 4 <= NumCatalogPurchases then do;
286392    +GRP_NumCatalogPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 5;
286393    +end;
MPRINT(EM_DIAGRAM):   end;
286394    +end;
MPRINT(EM_DIAGRAM):   end;
286395    +
286396    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
286397    +* Variable: NumDistPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumDistPurchases;
286398    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
286399    +LABEL GRP_NumDistPurchases = "Grouped: NumDistPurchases";
MPRINT(EM_DIAGRAM):   LABEL GRP_NumDistPurchases = "Grouped: NumDistPurchases";
286400    +
286401    +if MISSING(NumDistPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumDistPurchases) then do;
286402    +GRP_NumDistPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 1;
286403    +end;
MPRINT(EM_DIAGRAM):   end;
286404    +else if NOT MISSING(NumDistPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumDistPurchases) then do;
286405    +if NumDistPurchases < 3 then do;
MPRINT(EM_DIAGRAM):   if NumDistPurchases < 3 then do;
286406    +GRP_NumDistPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 2;
286407    +end;
MPRINT(EM_DIAGRAM):   end;
286408    +else
286409    +if 3 <= NumDistPurchases AND NumDistPurchases < 6 then do;
MPRINT(EM_DIAGRAM):   else if 3 <= NumDistPurchases AND NumDistPurchases < 6 then do;
286410    +GRP_NumDistPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 3;
286411    +end;
MPRINT(EM_DIAGRAM):   end;
286412    +else
286413    +if 6 <= NumDistPurchases AND NumDistPurchases < 10 then do;
MPRINT(EM_DIAGRAM):   else if 6 <= NumDistPurchases AND NumDistPurchases < 10 then do;
286414    +GRP_NumDistPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 4;
286415    +end;
MPRINT(EM_DIAGRAM):   end;
286416    +else
286417    +if 10 <= NumDistPurchases then do;
MPRINT(EM_DIAGRAM):   else if 10 <= NumDistPurchases then do;
286418    +GRP_NumDistPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 5;
286419    +end;
MPRINT(EM_DIAGRAM):   end;
286420    +end;
MPRINT(EM_DIAGRAM):   end;
286421    +
286422    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
286423    +* Variable: NumWebPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumWebPurchases;
286424    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
286425    +LABEL GRP_NumWebPurchases =
286426    +'Grouped: NumWebPurchases';
MPRINT(EM_DIAGRAM):   LABEL GRP_NumWebPurchases = 'Grouped: NumWebPurchases';
286427    +
286428    +if MISSING(NumWebPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumWebPurchases) then do;
286429    +GRP_NumWebPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 1;
286430    +end;
MPRINT(EM_DIAGRAM):   end;
286431    +else if NOT MISSING(NumWebPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumWebPurchases) then do;
286432    +if NumWebPurchases < 2 then do;
MPRINT(EM_DIAGRAM):   if NumWebPurchases < 2 then do;
286433    +GRP_NumWebPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 2;
286434    +end;
MPRINT(EM_DIAGRAM):   end;
286435    +else
286436    +if 2 <= NumWebPurchases AND NumWebPurchases < 4 then do;
MPRINT(EM_DIAGRAM):   else if 2 <= NumWebPurchases AND NumWebPurchases < 4 then do;
286437    +GRP_NumWebPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 3;
286438    +end;
MPRINT(EM_DIAGRAM):   end;
286439    +else
286440    +if 4 <= NumWebPurchases AND NumWebPurchases < 6 then do;
MPRINT(EM_DIAGRAM):   else if 4 <= NumWebPurchases AND NumWebPurchases < 6 then do;
286441    +GRP_NumWebPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 4;
286442    +end;
MPRINT(EM_DIAGRAM):   end;
286443    +else
286444    +if 6 <= NumWebPurchases then do;
MPRINT(EM_DIAGRAM):   else if 6 <= NumWebPurchases then do;
286445    +GRP_NumWebPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 5;
286446    +end;
MPRINT(EM_DIAGRAM):   end;
286447    +end;
MPRINT(EM_DIAGRAM):   end;
286448    +
286449    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
286450    +* Variable: RFMstat;
MPRINT(EM_DIAGRAM):   * Variable: RFMstat;
286451    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
286452    +LABEL GRP_RFMstat = "Grouped: RFMstat";
MPRINT(EM_DIAGRAM):   LABEL GRP_RFMstat = "Grouped: RFMstat";
286453    +
286454    +if MISSING(RFMstat) then do;
MPRINT(EM_DIAGRAM):   if MISSING(RFMstat) then do;
286455    +GRP_RFMstat = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 1;
286456    +end;
MPRINT(EM_DIAGRAM):   end;
286457    +else if NOT MISSING(RFMstat) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(RFMstat) then do;
286458    +if RFMstat < 10.34 then do;
MPRINT(EM_DIAGRAM):   if RFMstat < 10.34 then do;
286459    +GRP_RFMstat = 2;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 2;
286460    +end;
MPRINT(EM_DIAGRAM):   end;
286461    +else
286462    +if 10.34 <= RFMstat AND RFMstat < 128.09 then do;
MPRINT(EM_DIAGRAM):   else if 10.34 <= RFMstat AND RFMstat < 128.09 then do;
286463    +GRP_RFMstat = 3;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 3;
286464    +end;
MPRINT(EM_DIAGRAM):   end;
286465    +else
286466    +if 128.09 <= RFMstat AND RFMstat < 455.22 then do;
MPRINT(EM_DIAGRAM):   else if 128.09 <= RFMstat AND RFMstat < 455.22 then do;
286467    +GRP_RFMstat = 4;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 4;
286468    +end;
MPRINT(EM_DIAGRAM):   end;
286469    +else
286470    +if 455.22 <= RFMstat then do;
MPRINT(EM_DIAGRAM):   else if 455.22 <= RFMstat then do;
286471    +GRP_RFMstat = 5;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 5;
286472    +end;
MPRINT(EM_DIAGRAM):   end;
286473    +end;
MPRINT(EM_DIAGRAM):   end;
286474    +
286475    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
286476    +* Variable: RMntFrq;
MPRINT(EM_DIAGRAM):   * Variable: RMntFrq;
286477    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
286478    +LABEL GRP_RMntFrq = "Grouped: RMntFrq";
MPRINT(EM_DIAGRAM):   LABEL GRP_RMntFrq = "Grouped: RMntFrq";
286479    +
286480    +if MISSING(RMntFrq) then do;
MPRINT(EM_DIAGRAM):   if MISSING(RMntFrq) then do;
286481    +GRP_RMntFrq = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 1;
286482    +end;
MPRINT(EM_DIAGRAM):   end;
286483    +else if NOT MISSING(RMntFrq) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(RMntFrq) then do;
286484    +if RMntFrq < 13.25 then do;
MPRINT(EM_DIAGRAM):   if RMntFrq < 13.25 then do;
286485    +GRP_RMntFrq = 2;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 2;
286486    +end;
MPRINT(EM_DIAGRAM):   end;
286487    +else
286488    +if 13.25 <= RMntFrq AND RMntFrq < 30.4 then do;
MPRINT(EM_DIAGRAM):   else if 13.25 <= RMntFrq AND RMntFrq < 30.4 then do;
286489    +GRP_RMntFrq = 3;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 3;
286490    +end;
MPRINT(EM_DIAGRAM):   end;
286491    +else
286492    +if 30.4 <= RMntFrq AND RMntFrq < 52.86 then do;
MPRINT(EM_DIAGRAM):   else if 30.4 <= RMntFrq AND RMntFrq < 52.86 then do;
286493    +GRP_RMntFrq = 4;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 4;
286494    +end;
MPRINT(EM_DIAGRAM):   end;
286495    +else
286496    +if 52.86 <= RMntFrq then do;
MPRINT(EM_DIAGRAM):   else if 52.86 <= RMntFrq then do;
286497    +GRP_RMntFrq = 5;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 5;
286498    +end;
MPRINT(EM_DIAGRAM):   end;
286499    +end;
MPRINT(EM_DIAGRAM):   end;
286500    +
286501    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
286502    +* Variable: Recency;
MPRINT(EM_DIAGRAM):   * Variable: Recency;
286503    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
286504    +LABEL GRP_Recency =
286505    +'Grouped: Recency';
MPRINT(EM_DIAGRAM):   LABEL GRP_Recency = 'Grouped: Recency';
286506    +
286507    +if MISSING(Recency) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Recency) then do;
286508    +GRP_Recency = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency = 1;
286509    +end;
MPRINT(EM_DIAGRAM):   end;
286510    +else if NOT MISSING(Recency) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Recency) then do;
286511    +if Recency < 24 then do;
MPRINT(EM_DIAGRAM):   if Recency < 24 then do;
286512    +GRP_Recency = 2;
MPRINT(EM_DIAGRAM):   GRP_Recency = 2;
286513    +end;
MPRINT(EM_DIAGRAM):   end;
286514    +else
286515    +if 24 <= Recency AND Recency < 48 then do;
MPRINT(EM_DIAGRAM):   else if 24 <= Recency AND Recency < 48 then do;
286516    +GRP_Recency = 3;
MPRINT(EM_DIAGRAM):   GRP_Recency = 3;
286517    +end;
MPRINT(EM_DIAGRAM):   end;
286518    +else
286519    +if 48 <= Recency AND Recency < 73 then do;
MPRINT(EM_DIAGRAM):   else if 48 <= Recency AND Recency < 73 then do;
286520    +GRP_Recency = 4;
MPRINT(EM_DIAGRAM):   GRP_Recency = 4;
286521    +end;
MPRINT(EM_DIAGRAM):   end;
286522    +else
286523    +if 73 <= Recency then do;
MPRINT(EM_DIAGRAM):   else if 73 <= Recency then do;
286524    +GRP_Recency = 5;
MPRINT(EM_DIAGRAM):   GRP_Recency = 5;
286525    +end;
MPRINT(EM_DIAGRAM):   end;
286526    +end;
MPRINT(EM_DIAGRAM):   end;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
286527     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
286528     quit;
286529     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
286530     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
286531     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
286532     retain ID 3 Node "BINNING";
MPRINT(EM_DIAGRAM):   retain ID 3 Node "BINNING";
286533     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
286534     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 16 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 16 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

286535     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
286536     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
286537     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 16 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 16 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

286538     proc sort data=EMWS8.BINNING_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.BINNING_variableset out=_temp2(keep=NAME CREATOR);
286539     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
286540     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 36 observations read from the data set EMWS8.BINNING_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 36 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

286541     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
286542     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
286543     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
286544     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 36 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 36 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

286545     proc contents data=EMWS8.BINNING_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.BINNING_train out=_meta(keep=NAME) noprint;
286546     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 59 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

286547     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
286548     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
286549     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 59 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 59 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

286550     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
286551     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
286552     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
286553     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 59 observations read from the data set WORK._META.
NOTE: There were 36 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 59 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

286554     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
286555     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
286555   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 15 rows and 5 columns.

286556     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

286557     proc append base=EMWS8.Ensmbl50_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl50_FCMP data=_tempx;
286558     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL50_FCMP.
NOTE: There were 15 observations read from the data set WORK._TEMPX.
NOTE: 15 observations added.
NOTE: The data set EMWS8.ENSMBL50_FCMP has 1126 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

286559     filename _pref
286559   ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
286560     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
286561     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
286562    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
286563    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
286564    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
286565    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
286566    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
286567    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
286568     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
286569     quit;
286570     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
286571     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
286572     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
286573     retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
286574     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
286575     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

286576     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
286577     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
286578     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

286579     proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
286580     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
286581     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

286582     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
286583     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
286584     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
286585     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

286586     proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
286587     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

286588     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
286589     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
286590     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

286591     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
286592     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
286593     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
286594     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

286595     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
286596     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
286596   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

286597     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

286598     proc append base=EMWS8.Ensmbl50_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl50_FCMP data=_tempx;
286599     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL50_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL50_FCMP has 1130 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

286600     filename _pref
286600   ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
286601     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
286602     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
286603    +
286604    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
286605    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
286605   !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
286606    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
286607    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
286608    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
286609    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
286610    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
286611     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
286612     quit;
286613     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
286614     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
286615     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
286616     retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
286617     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
286618     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

286619     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
286620     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
286621     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

286622     proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
286623     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
286624     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

286625     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
286626     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
286627     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
286628     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

286629     proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
286630     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

286631     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
286632     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
286633     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

286634     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
286635     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
286636     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
286637     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

286638     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
286639     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
286639   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

286640     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

286641     proc append base=EMWS8.Ensmbl50_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl50_FCMP data=_tempx;
286642     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL50_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL50_FCMP has 1169 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

286643     filename _pref
286643   ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
286644     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
286645     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
286646    +
286647    +
286648    +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
286649    +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
286650    +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
286651    +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
286652    +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
286653    +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
286654    +
286655    +
286656    +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
286657    +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
286658    +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
286659    +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
286660    +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
286661    +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
286662    +
286663    +
286664    +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
286665    +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
286666    +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
286667    +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
286668    +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
286669    +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
286670    +
286671    +
286672    +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
286673    +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
286674    +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
286675    +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
286676    +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
286677    +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
286678    +
286679    +
286680    +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
286681    +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
286682    +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
286683    +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
286684    +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
286685    +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
286686    +
286687    +
286688    +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
286689    +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
286690    +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
286691    +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
286692    +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
286693    +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
286694    +
286695    +
286696    +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
286697    +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
286698    +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
286699    +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
286700    +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
286701    +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
286702    +
286703    +
286704    +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
286705    +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
286706    +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
286707    +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
286708    +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
286709    +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
286710    +if
286711    +_FILTERNORM1 not in ( '.')
286712    + and
286713    +_FILTERNORM2 not in ( '.')
286714    + and
286715    +_FILTERNORM3 not in ( '.')
286716    + and
286717    +_FILTERNORM4 not in ( '.')
286718    + and
286719    +_FILTERNORM5 not in ( '.')
286720    + and
286721    +_FILTERNORM6 not in ( '.')
286722    + and
286723    +_FILTERNORM7 not in ( ' ')
286724    + and
286725    +_FILTERNORM8 not in ( ' ')
286726    +and
286727    +( Dt_Customer ne .)
286728    +and ( Income ne . and (Income<=107000))
286729    +and ( Kidhome ne .)
286730    +and ( MntFishProducts ne .)
286731    +and ( MntFruits ne .)
286732    +and ( MntGoldProds ne .)
286733    +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
286734    +and ( MntSweetProducts ne .)
286735    +and ( MntWines ne .)
286736    +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
286737    +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
286738    +and ( NumStorePurchases ne .)
286739    +and ( NumWebPurchases ne .)
286740    +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
286741    +and ( Recency ne .)
286742    +and ( Teenhome ne .)
286743    +and ( Year_Birth ne .)
286744    +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
286745    +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
286746    +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
286747    +end;
MPRINT(EM_DIAGRAM):   end;
286748    +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
286749    +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
286750     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
286751     quit;
286752     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
286753     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
286754     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
286755     retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
286756     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
286757     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

286758     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
286759     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
286760     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

286761     proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
286762     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
286763     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

286764     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
286765     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
286766     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
286767     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

286768     proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
286769     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

286770     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
286771     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
286772     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

286773     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
286774     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
286775     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
286776     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

286777     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
286778     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
286778   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

286779     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

286780     proc append base=EMWS8.Ensmbl50_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl50_FCMP data=_tempx;
286781     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL50_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL50_FCMP has 1235 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

286782     %macro varDept(fcmpdata=,id=);
286783     %global nobs&id scoreFlag&id;
286784     %let scoreFlag&id = 0;
286785     %if &id=1 or ^&fcmpStart %then %do;
286786     proc sort data=&fcmpdata out=_temp&id nodupkey;
286787     by NAME;
286788     where id=&id and LHS in( %let j=1;
286789     %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
286790     %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
286791     "&var" %let j = %eval(&j+1);
286792     %end;
286793     );
286794     run;
286795     %let dsid = %sysfunc(open(_temp&id));
286796     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
286797     %let dsid = %sysfunc(close(&dsid));
286798     %if &&nobs&id %then %do;
286799     %let scoreFlag&id = 1;
286800     %let fcmpStart = 1;
286801     %end;
286802     %else %let fcmpStart = 0;
286803     %end;
286804     %else %do;
286805     proc sort data=&fcmpdata out=_tempid;
286806     where id=&id;
286807     by LHS;
286808     run;
286809     %let dsid = %sysfunc(open(_tempid));
286810     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
286811     %let dsid = %sysfunc(close(&dsid));
286812     %if ^&&nobs&id %then %do;
286813     proc datasets lib=work nolist;
286814     delete _tempid;
286815     run;
286816     quit;
286817     %end;
286818     %else %do;
286819     data _tempAll;
286820     set %let j=%eval(&id-1);
286821     %do x=1 %to &j;
286822     %if &&nobs&x %then %do;
286823     _temp&x %end;
286824     %end;
286825     ;
286826     run;
286827     proc sql;
286828     create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
286828   ! work._tempid p2 where p.name=p2.lhs;
286829     quit;
286830     data _temp&id;
286831     set _temp&id;
286832     where LHS ne '' and NAME ne '' and Node ne '';
286833     run;
286834     proc datasets lib=work nolist;
286835     delete _tempAll;
286836     run;
286837     %let dsid = %sysfunc(open(_temp&id));
286838     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
286839     %let dsid = %sysfunc(close(&dsid));
286840     %if ^&&nobs&id %then %do;
286841     proc datasets lib=work nolist;
286842     delete _temp&id;
286843     run;
286844     quit;
286845     %end;
286846     %else %do;
286847     %let scoreFlag&id = 1;
286848     data _temp&id;
286849     set _temp&id;
286850     where LHS ne NAME and node ne '';
286851     run;
286852     %let dsid = %sysfunc(open(_temp&id));
286853     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
286854     %let dsid = %sysfunc(close(&dsid));
286855     %if ^&&nobs&id %then %do;
286856     proc datasets lib=work nolist;
286857     delete _temp&id;
286858     run;
286859     quit;
286860     %end;
286861     %else %do;
286862     proc sort data=_temp&id nodupkey;
286863     by LHS NAME;
286864     run;
286865     %end;
286866     %end;
286867     %end;
286868     %end;
286869     %mend varDept;
286870     %macro optCode(outdata=fcmpdata);
286871     %global fcmpStart;
286872     %let fcmpStart = 0;
286873     %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
286874     %let NumNodes=9;
286875     %do k=1 %to &NumNodes;
286876     %vardept(fcmpdata=&outdata, id=&k);
286877     %end;
286878     %mend optCode;
286879     %optcode(outData=EMWS8.Ensmbl50_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl50_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL50_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl50_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 84 observations read from the data set EMWS8.ENSMBL50_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 61 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 23 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl50_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 15 observations read from the data set EMWS8.ENSMBL50_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 15 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 23 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 23 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp3 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP3 created, with 14 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP3 has 14 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP3 has 14 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp3 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP3.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP3 has 14 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl50_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL50_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl50_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL50_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 ;
MPRINT(VARDEPT):   run;

NOTE: There were 23 observations read from the data set WORK._TEMP2.
NOTE: There were 14 observations read from the data set WORK._TEMP3.
NOTE: The data set WORK._TEMPALL has 37 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 2 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      
The SAS System


MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl50_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL50_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 23 observations read from the data set WORK._TEMP2.
NOTE: There were 14 observations read from the data set WORK._TEMP3.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 39 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 32 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 32 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 32 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 32 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 32 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 32 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 32 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl50_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL50_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 23 observations read from the data set WORK._TEMP2.
NOTE: There were 14 observations read from the data set WORK._TEMP3.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: There were 32 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 71 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl50_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL50_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl50_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL50_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

286880     data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
286881     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
286882     where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
286883     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

286884     data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
286885     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
286886     where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
286887     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

286888     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
286889     create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
286889   ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 2 rows and 3 columns.

286890     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

286891     data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
286892     set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
286893     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 2 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 2 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

286894     data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
286895     set EMWS8.BINNING_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.BINNING_EMSCOREVAR;
286896     where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
286897     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS8.BINNING_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

286898     data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
286899     set EMWS8.BINNING_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.BINNING_EMSCOREVAR;
286900     where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
286901     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.BINNING_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

286902     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
286903     create table _CodeVar7 as select p.lhs, p2.formula, p2.file from _temp3 p,
286903   ! EMWS8.BINNING_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar7 as select p.lhs, p2.formula, p2.file from _temp3 
p, EMWS8.BINNING_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR7 created, with 14 rows and 3 columns.

286904     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

286905     data _CodeVar7;
MPRINT(EM_DIAGRAM):   data _CodeVar7;
286906     set _all_ _CodeVar7 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar7 _postall_;
286907     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK._ALL_.
NOTE: There were 14 observations read from the data set WORK._CODEVAR7.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR7 has 15 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

286908     filename _pref
286908   ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural20\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural20\EMPUBLISHSCORE.sas";
286909     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
286910     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural20\EMPUBLISHSCORE.sas.
286911    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
286912    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
286913    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
286914    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
286915    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
286916    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
286917    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
286918    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
286919    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
286920    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
286921    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
286922    +LENGTH _WARN_ $4
286923    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
286924    +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
286925    +
286926    +      label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
MPRINT(EM_DIAGRAM):   label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
286927    +
286928    +      label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
286929    +
286930    +      label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
286931    +
286932    +      label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
286933    +
286934    +      label GRP_Income2 = 'Dummy: GRP_Income=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Income2 = 'Dummy: GRP_Income=2' ;
286935    +
286936    +      label GRP_Income3 = 'Dummy: GRP_Income=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Income3 = 'Dummy: GRP_Income=3' ;
286937    +
286938    +      label GRP_Income4 = 'Dummy: GRP_Income=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Income4 = 'Dummy: GRP_Income=4' ;
286939    +
286940    +      label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
286941    +
286942    +      label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
286943    +
286944    +      label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
286945    +
286946    +      label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
286947    +
286948    +      label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
286949    +
286950    +      label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
286951    +
286952    +      label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
286953    +
286954    +      label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
286955    +
286956    +      label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
286957    +
286958    +      label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
286959    +
286960    +      label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
286961    +
286962    +      label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
286963    +
286964    +      label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
286965    +
286966    +      label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
286967    +
286968    +      label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
286969    +
286970    +      label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
286971    +
286972    +      label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
286973    +
286974    +      label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
286975    +
286976    +      label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
286977    +
286978    +      label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
286979    +
286980    +      label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
286981    +
286982    +      label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
286983    +
286984    +      label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
286985    +
286986    +      label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
286987    +
286988    +      label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
286989    +
286990    +      label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
286991    +
286992    +      label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
286993    +
286994    +      label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
286995    +
286996    +      label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
286997    +
286998    +      label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
286999    +
287000    +      label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
287001    +
287002    +      label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
287003    +
287004    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
287005    +
287006    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
287007    +
287008    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
287009    +
287010    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
287011    +
287012    +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
287013    +
287014    +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
287015    +
287016    +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
287017    +
287018    +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
287019    +
287020    +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
287021    +
287022    +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
287023    +
287024    +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
287025    +
287026    +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
287027    +
287028    +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
287029    +
287030    +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
287031    +
287032    +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
287033    +
287034    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
287035    +
287036    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
287037    +
287038    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
287039    +
287040    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
287041    +
287042    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
287043    +
287044    +*** Generate dummy variables for GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmp5 ;
287045    +drop GRP_AcceptedCmp52 ;
MPRINT(EM_DIAGRAM):   drop GRP_AcceptedCmp52 ;
287046    +if missing( GRP_AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmp5 ) then do;
287047    +   GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
287048    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
287049    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
287050    +end;
MPRINT(EM_DIAGRAM):   end;
287051    +else do;
MPRINT(EM_DIAGRAM):   else do;
287052    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
287053    +   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
287054    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
287055    +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
287056    +      GRP_AcceptedCmp52 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = 1;
287057    +   end;
MPRINT(EM_DIAGRAM):   end;
287058    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
287059    +      GRP_AcceptedCmp52 = -1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = -1;
287060    +   end;
MPRINT(EM_DIAGRAM):   end;
287061    +   else do;
MPRINT(EM_DIAGRAM):   else do;
287062    +      GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
287063    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
287064    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
287065    +   end;
MPRINT(EM_DIAGRAM):   end;
287066    +end;
MPRINT(EM_DIAGRAM):   end;
287067    +
287068    +*** Generate dummy variables for GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Frq ;
287069    +drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
287070    +if missing( GRP_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Frq ) then do;
287071    +   GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
287072    +   GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
287073    +   GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
287074    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
287075    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
287076    +end;
MPRINT(EM_DIAGRAM):   end;
287077    +else do;
MPRINT(EM_DIAGRAM):   else do;
287078    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
287079    +   _dm12 = put( GRP_Frq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Frq , BEST12. );
287080    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
287081    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
287082    +      GRP_Frq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = -1;
287083    +      GRP_Frq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = -1;
287084    +      GRP_Frq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = -1;
287085    +   end;
MPRINT(EM_DIAGRAM):   end;
287086    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
287087    +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
287088    +      GRP_Frq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 1;
287089    +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
287090    +   end;
MPRINT(EM_DIAGRAM):   end;
287091    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
287092    +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
287093    +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
287094    +      GRP_Frq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 1;
287095    +   end;
MPRINT(EM_DIAGRAM):   end;
287096    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
287097    +      GRP_Frq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 1;
287098    +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
287099    +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
287100    +   end;
MPRINT(EM_DIAGRAM):   end;
287101    +   else do;
MPRINT(EM_DIAGRAM):   else do;
287102    +      GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
287103    +      GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
287104    +      GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
287105    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
287106    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
287107    +   end;
MPRINT(EM_DIAGRAM):   end;
287108    +end;
MPRINT(EM_DIAGRAM):   end;
287109    +
287110    +*** Generate dummy variables for GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Income ;
287111    +drop GRP_Income2 GRP_Income3 GRP_Income4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Income2 GRP_Income3 GRP_Income4 ;
287112    +if missing( GRP_Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Income ) then do;
287113    +   GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
287114    +   GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
287115    +   GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
287116    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
287117    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
287118    +end;
MPRINT(EM_DIAGRAM):   end;
287119    +else do;
MPRINT(EM_DIAGRAM):   else do;
287120    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
287121    +   _dm12 = put( GRP_Income , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Income , BEST12. );
287122    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
287123    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
287124    +      GRP_Income2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = -1;
287125    +      GRP_Income3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = -1;
287126    +      GRP_Income4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = -1;
287127    +   end;
MPRINT(EM_DIAGRAM):   end;
287128    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
287129    +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
287130    +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
287131    +      GRP_Income4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 1;
287132    +   end;
MPRINT(EM_DIAGRAM):   end;
287133    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
287134    +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
287135    +      GRP_Income3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 1;
287136    +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
287137    +   end;
MPRINT(EM_DIAGRAM):   end;
287138    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
287139    +      GRP_Income2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 1;
287140    +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
287141    +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
287142    +   end;
MPRINT(EM_DIAGRAM):   end;
287143    +   else do;
MPRINT(EM_DIAGRAM):   else do;
287144    +      GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
287145    +      GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
287146    +      GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
287147    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
287148    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
287149    +   end;
MPRINT(EM_DIAGRAM):   end;
287150    +end;
MPRINT(EM_DIAGRAM):   end;
287151    +
287152    +*** Generate dummy variables for GRP_Mnt ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Mnt ;
287153    +drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
287154    +if missing( GRP_Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Mnt ) then do;
287155    +   GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
287156    +   GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
287157    +   GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
287158    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
287159    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
287160    +end;
MPRINT(EM_DIAGRAM):   end;
287161    +else do;
MPRINT(EM_DIAGRAM):   else do;
287162    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
287163    +   _dm12 = put( GRP_Mnt , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Mnt , BEST12. );
287164    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
287165    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
287166    +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
287167    +      GRP_Mnt3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 1;
287168    +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
287169    +   end;
MPRINT(EM_DIAGRAM):   end;
287170    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
287171    +      GRP_Mnt2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = -1;
287172    +      GRP_Mnt3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = -1;
287173    +      GRP_Mnt4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = -1;
287174    +   end;
MPRINT(EM_DIAGRAM):   end;
287175    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
287176    +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
287177    +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
287178    +      GRP_Mnt4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 1;
287179    +   end;
MPRINT(EM_DIAGRAM):   end;
287180    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
287181    +      GRP_Mnt2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 1;
287182    +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
287183    +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
287184    +   end;
MPRINT(EM_DIAGRAM):   end;
287185    +   else do;
MPRINT(EM_DIAGRAM):   else do;
287186    +      GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
287187    +      GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
287188    +      GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
287189    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
287190    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
287191    +   end;
MPRINT(EM_DIAGRAM):   end;
287192    +end;
MPRINT(EM_DIAGRAM):   end;
287193    +
287194    +*** Generate dummy variables for GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntFishProducts ;
287195    +drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
287196    +if missing( GRP_MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntFishProducts ) then do;
287197    +   GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
287198    +   GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
287199    +   GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
287200    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
287201    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
287202    +end;
MPRINT(EM_DIAGRAM):   end;
287203    +else do;
MPRINT(EM_DIAGRAM):   else do;
287204    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
287205    +   _dm12 = put( GRP_MntFishProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntFishProducts , BEST12. );
287206    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
287207    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
287208    +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
287209    +      GRP_MntFishProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 1;
287210    +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
287211    +   end;
MPRINT(EM_DIAGRAM):   end;
287212    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
287213    +      GRP_MntFishProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = -1;
287214    +      GRP_MntFishProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = -1;
287215    +      GRP_MntFishProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = -1;
287216    +   end;
MPRINT(EM_DIAGRAM):   end;
287217    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
287218    +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
287219    +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
287220    +      GRP_MntFishProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 1;
287221    +   end;
MPRINT(EM_DIAGRAM):   end;
287222    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
287223    +      GRP_MntFishProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 1;
287224    +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
287225    +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
287226    +   end;
MPRINT(EM_DIAGRAM):   end;
287227    +   else do;
MPRINT(EM_DIAGRAM):   else do;
287228    +      GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
287229    +      GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
287230    +      GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
287231    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
287232    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
287233    +   end;
MPRINT(EM_DIAGRAM):   end;
287234    +end;
MPRINT(EM_DIAGRAM):   end;
287235    +
287236    +*** Generate dummy variables for GRP_MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntGoldProds ;
287237    +drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
287238    +if missing( GRP_MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntGoldProds ) then do;
287239    +   GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
287240    +   GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
287241    +   GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
287242    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
287243    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
287244    +end;
MPRINT(EM_DIAGRAM):   end;
287245    +else do;
MPRINT(EM_DIAGRAM):   else do;
287246    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
287247    +   _dm12 = put( GRP_MntGoldProds , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntGoldProds , BEST12. );
287248    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
287249    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
287250    +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
287251    +      GRP_MntGoldProds3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 1;
287252    +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
287253    +   end;
MPRINT(EM_DIAGRAM):   end;
287254    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
287255    +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
287256    +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
287257    +      GRP_MntGoldProds4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 1;
287258    +   end;
MPRINT(EM_DIAGRAM):   end;
287259    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
287260    +      GRP_MntGoldProds2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = -1;
287261    +      GRP_MntGoldProds3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = -1;
287262    +      GRP_MntGoldProds4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = -1;
287263    +   end;
MPRINT(EM_DIAGRAM):   end;
287264    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
287265    +      GRP_MntGoldProds2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 1;
287266    +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
287267    +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
287268    +   end;
MPRINT(EM_DIAGRAM):   end;
287269    +   else do;
MPRINT(EM_DIAGRAM):   else do;
287270    +      GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
287271    +      GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
287272    +      GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
287273    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
287274    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
287275    +   end;
MPRINT(EM_DIAGRAM):   end;
287276    +end;
MPRINT(EM_DIAGRAM):   end;
287277    +
287278    +*** Generate dummy variables for GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntMeatProducts ;
287279    +drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
287280    +if missing( GRP_MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntMeatProducts ) then do;
287281    +   GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
287282    +   GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
287283    +   GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
287284    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
287285    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
287286    +end;
MPRINT(EM_DIAGRAM):   end;
287287    +else do;
MPRINT(EM_DIAGRAM):   else do;
287288    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
287289    +   _dm12 = put( GRP_MntMeatProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntMeatProducts , BEST12. );
287290    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
287291    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
287292    +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
287293    +      GRP_MntMeatProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 1;
287294    +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
287295    +   end;
MPRINT(EM_DIAGRAM):   end;
287296    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
287297    +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
287298    +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
287299    +      GRP_MntMeatProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 1;
287300    +   end;
MPRINT(EM_DIAGRAM):   end;
287301    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
287302    +      GRP_MntMeatProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = -1;
287303    +      GRP_MntMeatProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = -1;
287304    +      GRP_MntMeatProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = -1;
287305    +   end;
MPRINT(EM_DIAGRAM):   end;
287306    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
287307    +      GRP_MntMeatProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 1;
287308    +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
287309    +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
287310    +   end;
MPRINT(EM_DIAGRAM):   end;
287311    +   else do;
MPRINT(EM_DIAGRAM):   else do;
287312    +      GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
287313    +      GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
287314    +      GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
287315    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
287316    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
287317    +   end;
MPRINT(EM_DIAGRAM):   end;
287318    +end;
MPRINT(EM_DIAGRAM):   end;
287319    +
287320    +*** Generate dummy variables for GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntWines ;
287321    +drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
287322    +if missing( GRP_MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntWines ) then do;
287323    +   GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
287324    +   GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
287325    +   GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
287326    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
287327    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
287328    +end;
MPRINT(EM_DIAGRAM):   end;
287329    +else do;
MPRINT(EM_DIAGRAM):   else do;
287330    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
287331    +   _dm12 = put( GRP_MntWines , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntWines , BEST12. );
287332    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
287333    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
287334    +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
287335    +      GRP_MntWines3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 1;
287336    +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
287337    +   end;
MPRINT(EM_DIAGRAM):   end;
287338    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
287339    +      GRP_MntWines2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = -1;
287340    +      GRP_MntWines3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = -1;
287341    +      GRP_MntWines4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = -1;
287342    +   end;
MPRINT(EM_DIAGRAM):   end;
287343    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
287344    +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
287345    +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
287346    +      GRP_MntWines4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 1;
287347    +   end;
MPRINT(EM_DIAGRAM):   end;
287348    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
287349    +      GRP_MntWines2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 1;
287350    +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
287351    +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
287352    +   end;
MPRINT(EM_DIAGRAM):   end;
287353    +   else do;
MPRINT(EM_DIAGRAM):   else do;
287354    +      GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
287355    +      GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
287356    +      GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
287357    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
287358    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
287359    +   end;
MPRINT(EM_DIAGRAM):   end;
287360    +end;
MPRINT(EM_DIAGRAM):   end;
287361    +
287362    +*** Generate dummy variables for GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumCatalogPurchases ;
287363    +drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
287364    +if missing( GRP_NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumCatalogPurchases ) then do;
287365    +   GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
287366    +   GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
287367    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
287368    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
287369    +end;
MPRINT(EM_DIAGRAM):   end;
287370    +else do;
MPRINT(EM_DIAGRAM):   else do;
287371    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
287372    +   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
287373    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
287374    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
287375    +      GRP_NumCatalogPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 1;
287376    +      GRP_NumCatalogPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 0;
287377    +   end;
MPRINT(EM_DIAGRAM):   end;
287378    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
287379    +      GRP_NumCatalogPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = -1;
287380    +      GRP_NumCatalogPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = -1;
287381    +   end;
MPRINT(EM_DIAGRAM):   end;
287382    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
287383    +      GRP_NumCatalogPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 0;
287384    +      GRP_NumCatalogPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 1;
287385    +   end;
MPRINT(EM_DIAGRAM):   end;
287386    +   else do;
MPRINT(EM_DIAGRAM):   else do;
287387    +      GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
287388    +      GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
287389    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
287390    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
287391    +   end;
MPRINT(EM_DIAGRAM):   end;
287392    +end;
MPRINT(EM_DIAGRAM):   end;
287393    +
287394    +*** Generate dummy variables for GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumDistPurchases ;
287395    +drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
287396    +if missing( GRP_NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumDistPurchases ) then do;
287397    +   GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
287398    +   GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
287399    +   GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
287400    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
287401    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
287402    +end;
MPRINT(EM_DIAGRAM):   end;
287403    +else do;
MPRINT(EM_DIAGRAM):   else do;
287404    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
287405    +   _dm12 = put( GRP_NumDistPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumDistPurchases , BEST12. );
287406    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
287407    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
287408    +      GRP_NumDistPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = -1;
287409    +      GRP_NumDistPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = -1;
287410    +      GRP_NumDistPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = -1;
287411    +   end;
MPRINT(EM_DIAGRAM):   end;
287412    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
287413    +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
287414    +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
287415    +      GRP_NumDistPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 1;
287416    +   end;
MPRINT(EM_DIAGRAM):   end;
287417    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
287418    +      GRP_NumDistPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 1;
287419    +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
287420    +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
287421    +   end;
MPRINT(EM_DIAGRAM):   end;
287422    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
287423    +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
287424    +      GRP_NumDistPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 1;
287425    +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
287426    +   end;
MPRINT(EM_DIAGRAM):   end;
287427    +   else do;
MPRINT(EM_DIAGRAM):   else do;
287428    +      GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
287429    +      GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
287430    +      GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
287431    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
287432    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
287433    +   end;
MPRINT(EM_DIAGRAM):   end;
287434    +end;
MPRINT(EM_DIAGRAM):   end;
287435    +
287436    +*** Generate dummy variables for GRP_NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumWebPurchases ;
287437    +drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
287438    +if missing( GRP_NumWebPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumWebPurchases ) then do;
287439    +   GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
287440    +   GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
287441    +   GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
287442    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
287443    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
287444    +end;
MPRINT(EM_DIAGRAM):   end;
287445    +else do;
MPRINT(EM_DIAGRAM):   else do;
287446    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
287447    +   _dm12 = put( GRP_NumWebPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumWebPurchases , BEST12. );
287448    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
287449    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
287450    +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
287451    +      GRP_NumWebPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 1;
287452    +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
287453    +   end;
MPRINT(EM_DIAGRAM):   end;
287454    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
287455    +      GRP_NumWebPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = -1;
287456    +      GRP_NumWebPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = -1;
287457    +      GRP_NumWebPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = -1;
287458    +   end;
MPRINT(EM_DIAGRAM):   end;
287459    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
287460    +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
287461    +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
287462    +      GRP_NumWebPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 1;
287463    +   end;
MPRINT(EM_DIAGRAM):   end;
287464    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
287465    +      GRP_NumWebPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 1;
287466    +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
287467    +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
287468    +   end;
MPRINT(EM_DIAGRAM):   end;
287469    +   else do;
MPRINT(EM_DIAGRAM):   else do;
287470    +      GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
287471    +      GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
287472    +      GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
287473    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
287474    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
287475    +   end;
MPRINT(EM_DIAGRAM):   end;
287476    +end;
MPRINT(EM_DIAGRAM):   end;
287477    +
287478    +*** Generate dummy variables for GRP_RFMstat ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RFMstat ;
287479    +drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
287480    +if missing( GRP_RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RFMstat ) then do;
287481    +   GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
287482    +   GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
287483    +   GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
287484    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
287485    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
287486    +end;
MPRINT(EM_DIAGRAM):   end;
287487    +else do;
MPRINT(EM_DIAGRAM):   else do;
287488    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
287489    +   _dm12 = put( GRP_RFMstat , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RFMstat , BEST12. );
287490    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
287491    +   if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
287492    +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
287493    +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
287494    +      GRP_RFMstat4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 1;
287495    +   end;
MPRINT(EM_DIAGRAM):   end;
287496    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
287497    +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
287498    +      GRP_RFMstat3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 1;
287499    +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
287500    +   end;
MPRINT(EM_DIAGRAM):   end;
287501    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
287502    +      GRP_RFMstat2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = -1;
287503    +      GRP_RFMstat3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = -1;
287504    +      GRP_RFMstat4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = -1;
287505    +   end;
MPRINT(EM_DIAGRAM):   end;
287506    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
287507    +      GRP_RFMstat2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 1;
287508    +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
287509    +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
287510    +   end;
MPRINT(EM_DIAGRAM):   end;
287511    +   else do;
MPRINT(EM_DIAGRAM):   else do;
287512    +      GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
287513    +      GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
287514    +      GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
287515    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
287516    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
287517    +   end;
MPRINT(EM_DIAGRAM):   end;
287518    +end;
MPRINT(EM_DIAGRAM):   end;
287519    +
287520    +*** Generate dummy variables for GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RMntFrq ;
287521    +drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
287522    +if missing( GRP_RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RMntFrq ) then do;
287523    +   GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
287524    +   GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
287525    +   GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
287526    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
287527    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
287528    +end;
MPRINT(EM_DIAGRAM):   end;
287529    +else do;
MPRINT(EM_DIAGRAM):   else do;
287530    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
287531    +   _dm12 = put( GRP_RMntFrq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RMntFrq , BEST12. );
287532    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
287533    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
287534    +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
287535    +      GRP_RMntFrq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 1;
287536    +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
287537    +   end;
MPRINT(EM_DIAGRAM):   end;
287538    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
287539    +      GRP_RMntFrq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = -1;
287540    +      GRP_RMntFrq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = -1;
287541    +      GRP_RMntFrq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = -1;
287542    +   end;
MPRINT(EM_DIAGRAM):   end;
287543    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
287544    +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
287545    +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
287546    +      GRP_RMntFrq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 1;
287547    +   end;
MPRINT(EM_DIAGRAM):   end;
287548    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
287549    +      GRP_RMntFrq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 1;
287550    +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
287551    +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
287552    +   end;
MPRINT(EM_DIAGRAM):   end;
287553    +   else do;
MPRINT(EM_DIAGRAM):   else do;
287554    +      GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
287555    +      GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
287556    +      GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
287557    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
287558    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
287559    +   end;
MPRINT(EM_DIAGRAM):   end;
287560    +end;
MPRINT(EM_DIAGRAM):   end;
287561    +
287562    +*** Generate dummy variables for GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Recency ;
287563    +drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
287564    +if missing( GRP_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Recency ) then do;
287565    +   GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
287566    +   GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
287567    +   GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
287568    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
287569    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
287570    +end;
MPRINT(EM_DIAGRAM):   end;
287571    +else do;
MPRINT(EM_DIAGRAM):   else do;
287572    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
287573    +   _dm12 = put( GRP_Recency , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Recency , BEST12. );
287574    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
287575    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
287576    +      GRP_Recency2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = -1;
287577    +      GRP_Recency3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = -1;
287578    +      GRP_Recency4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = -1;
287579    +   end;
MPRINT(EM_DIAGRAM):   end;
287580    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
287581    +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
287582    +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
287583    +      GRP_Recency4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 1;
287584    +   end;
MPRINT(EM_DIAGRAM):   end;
287585    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
287586    +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
287587    +      GRP_Recency3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 1;
287588    +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
287589    +   end;
MPRINT(EM_DIAGRAM):   end;
287590    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
287591    +      GRP_Recency2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 1;
287592    +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
287593    +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
287594    +   end;
MPRINT(EM_DIAGRAM):   end;
287595    +   else do;
MPRINT(EM_DIAGRAM):   else do;
287596    +      GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
287597    +      GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
287598    +      GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
287599    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
287600    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
287601    +   end;
MPRINT(EM_DIAGRAM):   end;
287602    +end;
MPRINT(EM_DIAGRAM):   end;
287603    +
287604    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
287605    +*** Checking missing input Interval
287606    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
287607    +
287608    +IF NMISS(
287609    +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Year_Birth ) THEN DO;
287610    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
287611    +
287612    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
287613    +END;
MPRINT(EM_DIAGRAM):   END;
287614    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
287615    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
287616    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
287617    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
287618    +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
287619    +END;
MPRINT(EM_DIAGRAM):   END;
287620    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
287621    +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
287622    +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
287623    +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
287624    +END;
MPRINT(EM_DIAGRAM):   END;
287625    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
287626    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
287627    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
287628    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
287629    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
287630    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
287631    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
287632    +   H1x1_1  =      1.0311746583126 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0311746583126 * S_Year_Birth ;
287633    +   H1x1_2  =     1.67119181587557 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.67119181587557 * S_Year_Birth ;
287634    +   H1x1_3  =    -2.17540349820814 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -2.17540349820814 * S_Year_Birth ;
287635    +   H1x1_4  =    -2.56679893298362 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -2.56679893298362 * S_Year_Birth ;
287636    +   H1x1_5  =    -0.60932306642258 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.60932306642258 * S_Year_Birth ;
287637    +   H1x1_1  = H1x1_1  +     0.72534982243417 * GRP_AcceptedCmp52
287638    +          +     0.33166960090157 * GRP_Frq2  +     1.71697127611163 * GRP_Frq3
287639    +          +     0.81002020807326 * GRP_Frq4  +     0.48027973945372 *
287640    +        GRP_Income2  +    -1.09550149543369 * GRP_Income3
287641    +          +    -0.22235642667559 * GRP_Income4  +    -0.00978473434282 *
287642    +        GRP_Mnt2  +    -0.11796310741854 * GRP_Mnt3  +    -0.42227802637743 *
287643    +        GRP_Mnt4  +    -0.60021395849859 * GRP_MntFishProducts2
287644    +          +    -1.92253913417034 * GRP_MntFishProducts3
287645    +          +     0.11236967036572 * GRP_MntFishProducts4
287646    +          +     1.55117451498964 * GRP_MntGoldProds2
287647    +          +    -2.17638819155912 * GRP_MntGoldProds3
287648    +          +     1.12471370225173 * GRP_MntGoldProds4
287649    +          +     0.73773441156548 * GRP_MntMeatProducts2
287650    +          +     2.07738910661633 * GRP_MntMeatProducts3
287651    +          +    -0.64280630173292 * GRP_MntMeatProducts4
287652    +          +     0.77316083192112 * GRP_MntWines2  +     2.15867403144607 *
287653    +        GRP_MntWines3  +     2.47891578910494 * GRP_MntWines4
287654    +          +     0.27137671258246 * GRP_NumCatalogPurchases3
287655    +          +     1.17769351442984 * GRP_NumCatalogPurchases4
287656    +          +     1.22104662684375 * GRP_NumDistPurchases2
287657    +          +      3.4956187335148 * GRP_NumDistPurchases3
287658    +          +     1.44110988448724 * GRP_NumDistPurchases4
287659    +          +    -0.15910531424988 * GRP_NumWebPurchases2
287660    +          +      2.0651216353476 * GRP_NumWebPurchases3
287661    +          +     1.88264340284474 * GRP_NumWebPurchases4
287662    +          +    -0.51356035467324 * GRP_RFMstat2  +    -0.97145618762825 *
287663    +        GRP_RFMstat3  +     1.44865956224608 * GRP_RFMstat4
287664    +          +    -0.02171623156521 * GRP_RMntFrq2  +     2.25871822244977 *
287665    +        GRP_RMntFrq3  +    -0.95854946562766 * GRP_RMntFrq4
287666    +          +    -0.19279939282854 * GRP_Recency2  +    -0.59440462375689 *
287667    +        GRP_Recency3  +     -2.1494171625282 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.72534982243417 * GRP_AcceptedCmp52 + 
0.33166960090157 * GRP_Frq2 + 1.71697127611163 * GRP_Frq3 + 0.81002020807326 * GRP_Frq4 + 
0.48027973945372 * GRP_Income2 + -1.09550149543369 * GRP_Income3 + -0.22235642667559 * 
GRP_Income4 + -0.00978473434282 * GRP_Mnt2 + -0.11796310741854 * GRP_Mnt3 + -0.42227802637743 
* GRP_Mnt4 + -0.60021395849859 * GRP_MntFishProducts2 + -1.92253913417034 * 
GRP_MntFishProducts3 + 0.11236967036572 * GRP_MntFishProducts4 + 1.55117451498964 * 
GRP_MntGoldProds2 + -2.17638819155912 * GRP_MntGoldProds3 + 1.12471370225173 * 
GRP_MntGoldProds4 + 0.73773441156548 * GRP_MntMeatProducts2 + 2.07738910661633 * 
GRP_MntMeatProducts3 + -0.64280630173292 * GRP_MntMeatProducts4 + 0.77316083192112 * 
GRP_MntWines2 + 2.15867403144607 * GRP_MntWines3 + 2.47891578910494 * GRP_MntWines4 + 
0.27137671258246 * GRP_NumCatalogPurchases3 + 1.17769351442984 * GRP_NumCatalogPurchases4 + 
1.22104662684375 * GRP_NumDistPurchases2 + 3.4956187335148 * GRP_NumDistPurchases3 + 
1.44110988448724 * GRP_NumDistPurchases4 + -0.15910531424988 * GRP_NumWebPurchases2 + 
2.0651216353476 * GRP_NumWebPurchases3 + 1.88264340284474 * GRP_NumWebPurchases4 + 
-0.51356035467324 * GRP_RFMstat2 + -0.97145618762825 * GRP_RFMstat3 + 1.44865956224608 * 
GRP_RFMstat4 + -0.02171623156521 * GRP_RMntFrq2 + 2.25871822244977 * GRP_RMntFrq3 + 
-0.95854946562766 * GRP_RMntFrq4 + -0.19279939282854 * GRP_Recency2 + -0.59440462375689 * 
GRP_Recency3 + -2.1494171625282 * GRP_Recency4 ;
287668    +   H1x1_2  = H1x1_2  +    -1.10416749938295 * GRP_AcceptedCmp52
287669    +          +     2.11163264556083 * GRP_Frq2  +    -0.30443521786246 * GRP_Frq3
287670    +          +     2.19401599825923 * GRP_Frq4  +    -0.38326784930815 *
287671    +        GRP_Income2  +    -0.07594895187003 * GRP_Income3
287672    +          +     0.98207007879144 * GRP_Income4  +    -1.92634732130472 *
287673    +        GRP_Mnt2  +     0.64603066612326 * GRP_Mnt3  +     0.62922821521966 *
287674    +        GRP_Mnt4  +     -0.4161962895106 * GRP_MntFishProducts2
287675    +          +     0.69185352158005 * GRP_MntFishProducts3
287676    +          +    -0.03493178084029 * GRP_MntFishProducts4
287677    +          +     1.51100187776315 * GRP_MntGoldProds2
287678    +          +     0.06501688279193 * GRP_MntGoldProds3
287679    +          +    -0.39137744731231 * GRP_MntGoldProds4
287680    +          +    -1.71718837423104 * GRP_MntMeatProducts2
287681    +          +    -2.21915390243757 * GRP_MntMeatProducts3
287682    +          +    -0.56748587906854 * GRP_MntMeatProducts4
287683    +          +     0.62307046604402 * GRP_MntWines2  +     0.47352126999194 *
287684    +        GRP_MntWines3  +      0.2191426110263 * GRP_MntWines4
287685    +          +     1.48903401021544 * GRP_NumCatalogPurchases3
287686    +          +     1.17263293507207 * GRP_NumCatalogPurchases4
287687    +          +     1.51105230747578 * GRP_NumDistPurchases2
287688    +          +     0.77634340058478 * GRP_NumDistPurchases3
287689    +          +    -0.03088809375301 * GRP_NumDistPurchases4
287690    +          +    -0.96601789395554 * GRP_NumWebPurchases2
287691    +          +     0.85040977160083 * GRP_NumWebPurchases3
287692    +          +     2.40308918299781 * GRP_NumWebPurchases4
287693    +          +     0.12282845458333 * GRP_RFMstat2  +    -0.98545061581559 *
287694    +        GRP_RFMstat3  +     1.25668440586033 * GRP_RFMstat4
287695    +          +     0.46767962398497 * GRP_RMntFrq2  +    -0.80481923203399 *
287696    +        GRP_RMntFrq3  +    -1.57392798605208 * GRP_RMntFrq4
287697    +          +     0.85109569398847 * GRP_Recency2  +     0.29456403684394 *
287698    +        GRP_Recency3  +     2.66867988462295 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -1.10416749938295 * GRP_AcceptedCmp52 + 
2.11163264556083 * GRP_Frq2 + -0.30443521786246 * GRP_Frq3 + 2.19401599825923 * GRP_Frq4 + 
-0.38326784930815 * GRP_Income2 + -0.07594895187003 * GRP_Income3 + 0.98207007879144 * 
GRP_Income4 + -1.92634732130472 * GRP_Mnt2 + 0.64603066612326 * GRP_Mnt3 + 0.62922821521966 * 
GRP_Mnt4 + -0.4161962895106 * GRP_MntFishProducts2 + 0.69185352158005 * GRP_MntFishProducts3 + 
-0.03493178084029 * GRP_MntFishProducts4 + 1.51100187776315 * GRP_MntGoldProds2 + 
0.06501688279193 * GRP_MntGoldProds3 + -0.39137744731231 * GRP_MntGoldProds4 + 
-1.71718837423104 * GRP_MntMeatProducts2 + -2.21915390243757 * GRP_MntMeatProducts3 + 
-0.56748587906854 * GRP_MntMeatProducts4 + 0.62307046604402 * GRP_MntWines2 + 0.47352126999194 
* GRP_MntWines3 + 0.2191426110263 * GRP_MntWines4 + 1.48903401021544 * 
GRP_NumCatalogPurchases3 + 1.17263293507207 * GRP_NumCatalogPurchases4 + 1.51105230747578 * 
GRP_NumDistPurchases2 + 0.77634340058478 * GRP_NumDistPurchases3 + -0.03088809375301 * 
GRP_NumDistPurchases4 + -0.96601789395554 * GRP_NumWebPurchases2 + 0.85040977160083 * 
GRP_NumWebPurchases3 + 2.40308918299781 * GRP_NumWebPurchases4 + 0.12282845458333 * 
GRP_RFMstat2 + -0.98545061581559 * GRP_RFMstat3 + 1.25668440586033 * GRP_RFMstat4 + 
0.46767962398497 * GRP_RMntFrq2 + -0.80481923203399 * GRP_RMntFrq3 + -1.57392798605208 * 
GRP_RMntFrq4 + 0.85109569398847 * GRP_Recency2 + 0.29456403684394 * GRP_Recency3 + 
2.66867988462295 * GRP_Recency4 ;
287699    +   H1x1_3  = H1x1_3  +    -3.01879385716191 * GRP_AcceptedCmp52
287700    +          +    -0.13662280353682 * GRP_Frq2  +     2.51930889376721 * GRP_Frq3
287701    +          +     1.76895510412356 * GRP_Frq4  +     -0.5692048618965 *
287702    +        GRP_Income2  +     1.18033291239845 * GRP_Income3
287703    +          +    -0.64679354804447 * GRP_Income4  +    -1.28802047381892 *
287704    +        GRP_Mnt2  +    -2.46267752020506 * GRP_Mnt3  +     0.17133913926957 *
287705    +        GRP_Mnt4  +     1.27283832451603 * GRP_MntFishProducts2
287706    +          +    -0.25133476006515 * GRP_MntFishProducts3
287707    +          +     1.43382012526151 * GRP_MntFishProducts4
287708    +          +      0.6587510367878 * GRP_MntGoldProds2
287709    +          +    -2.29815972364167 * GRP_MntGoldProds3
287710    +          +    -1.17878838514109 * GRP_MntGoldProds4
287711    +          +    -1.45630165039671 * GRP_MntMeatProducts2
287712    +          +    -0.11970663820977 * GRP_MntMeatProducts3
287713    +          +    -0.76333182688138 * GRP_MntMeatProducts4
287714    +          +    -2.52565926826767 * GRP_MntWines2  +     0.00775439635111 *
287715    +        GRP_MntWines3  +    -1.79940008598217 * GRP_MntWines4
287716    +          +    -1.25235345037614 * GRP_NumCatalogPurchases3
287717    +          +    -3.32950963282576 * GRP_NumCatalogPurchases4
287718    +          +    -0.83062872942088 * GRP_NumDistPurchases2
287719    +          +      1.2644984519337 * GRP_NumDistPurchases3
287720    +          +     0.62516412515385 * GRP_NumDistPurchases4
287721    +          +    -0.91932392687811 * GRP_NumWebPurchases2
287722    +          +     0.63985001179952 * GRP_NumWebPurchases3
287723    +          +     0.11379774354586 * GRP_NumWebPurchases4
287724    +          +    -0.83336515651784 * GRP_RFMstat2  +    -0.76327708518862 *
287725    +        GRP_RFMstat3  +    -1.65882578353771 * GRP_RFMstat4
287726    +          +     0.96912805482142 * GRP_RMntFrq2  +     0.89830852536378 *
287727    +        GRP_RMntFrq3  +    -0.80853907149434 * GRP_RMntFrq4
287728    +          +    -1.09357609598677 * GRP_Recency2  +    -0.36348291669233 *
287729    +        GRP_Recency3  +    -1.63045870617841 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -3.01879385716191 * GRP_AcceptedCmp52 + 
-0.13662280353682 * GRP_Frq2 + 2.51930889376721 * GRP_Frq3 + 1.76895510412356 * GRP_Frq4 + 
-0.5692048618965 * GRP_Income2 + 1.18033291239845 * GRP_Income3 + -0.64679354804447 * 
GRP_Income4 + -1.28802047381892 * GRP_Mnt2 + -2.46267752020506 * GRP_Mnt3 + 0.17133913926957 * 
GRP_Mnt4 + 1.27283832451603 * GRP_MntFishProducts2 + -0.25133476006515 * GRP_MntFishProducts3 
+ 1.43382012526151 * GRP_MntFishProducts4 + 0.6587510367878 * GRP_MntGoldProds2 + 
-2.29815972364167 * GRP_MntGoldProds3 + -1.17878838514109 * GRP_MntGoldProds4 + 
-1.45630165039671 * GRP_MntMeatProducts2 + -0.11970663820977 * GRP_MntMeatProducts3 + 
-0.76333182688138 * GRP_MntMeatProducts4 + -2.52565926826767 * GRP_MntWines2 + 
0.00775439635111 * GRP_MntWines3 + -1.79940008598217 * GRP_MntWines4 + -1.25235345037614 * 
GRP_NumCatalogPurchases3 + -3.32950963282576 * GRP_NumCatalogPurchases4 + -0.83062872942088 * 
GRP_NumDistPurchases2 + 1.2644984519337 * GRP_NumDistPurchases3 + 0.62516412515385 * 
GRP_NumDistPurchases4 + -0.91932392687811 * GRP_NumWebPurchases2 + 0.63985001179952 * 
GRP_NumWebPurchases3 + 0.11379774354586 * GRP_NumWebPurchases4 + -0.83336515651784 * 
GRP_RFMstat2 + -0.76327708518862 * GRP_RFMstat3 + -1.65882578353771 * GRP_RFMstat4 + 
0.96912805482142 * GRP_RMntFrq2 + 0.89830852536378 * GRP_RMntFrq3 + -0.80853907149434 * 
GRP_RMntFrq4 + -1.09357609598677 * GRP_Recency2 + -0.36348291669233 * GRP_Recency3 + 
-1.63045870617841 * GRP_Recency4 ;
287730    +   H1x1_4  = H1x1_4  +    -0.22003392209515 * GRP_AcceptedCmp52
287731    +          +    -0.37446340795406 * GRP_Frq2  +    -0.00569020240777 * GRP_Frq3
287732    +          +     0.38116150545111 * GRP_Frq4  +    -0.36688806155078 *
287733    +        GRP_Income2  +     -4.2575032053121 * GRP_Income3
287734    +          +     1.51798546961788 * GRP_Income4  +    -0.88579848196414 *
287735    +        GRP_Mnt2  +     1.84159465073955 * GRP_Mnt3  +     0.11670514600746 *
287736    +        GRP_Mnt4  +    -3.46232646407418 * GRP_MntFishProducts2
287737    +          +     0.25005234850524 * GRP_MntFishProducts3
287738    +          +    -0.07970714752313 * GRP_MntFishProducts4
287739    +          +     -0.7495440064059 * GRP_MntGoldProds2
287740    +          +     -0.0659148563739 * GRP_MntGoldProds3
287741    +          +    -1.42445075896946 * GRP_MntGoldProds4
287742    +          +      0.1738975461322 * GRP_MntMeatProducts2
287743    +          +    -2.24799164386156 * GRP_MntMeatProducts3
287744    +          +    -1.67754357341899 * GRP_MntMeatProducts4
287745    +          +    -0.05307351478942 * GRP_MntWines2  +     -2.2168800511889 *
287746    +        GRP_MntWines3  +    -1.48732327222777 * GRP_MntWines4
287747    +          +    -0.36761319556449 * GRP_NumCatalogPurchases3
287748    +          +    -2.89167685306869 * GRP_NumCatalogPurchases4
287749    +          +    -0.48267351716569 * GRP_NumDistPurchases2
287750    +          +     0.93211719554417 * GRP_NumDistPurchases3
287751    +          +      1.1708430486506 * GRP_NumDistPurchases4
287752    +          +     0.03811902892169 * GRP_NumWebPurchases2
287753    +          +    -1.51477371309928 * GRP_NumWebPurchases3
287754    +          +     1.07378297590898 * GRP_NumWebPurchases4
287755    +          +     1.68393431629797 * GRP_RFMstat2  +     1.58685880164611 *
287756    +        GRP_RFMstat3  +     0.80759821340467 * GRP_RFMstat4
287757    +          +     1.66879117439255 * GRP_RMntFrq2  +     0.80834322412036 *
287758    +        GRP_RMntFrq3  +     0.23086766354714 * GRP_RMntFrq4
287759    +          +      1.3218682104263 * GRP_Recency2  +    -1.73155287312103 *
287760    +        GRP_Recency3  +     0.90108611111458 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.22003392209515 * GRP_AcceptedCmp52 + 
-0.37446340795406 * GRP_Frq2 + -0.00569020240777 * GRP_Frq3 + 0.38116150545111 * GRP_Frq4 + 
-0.36688806155078 * GRP_Income2 + -4.2575032053121 * GRP_Income3 + 1.51798546961788 * 
GRP_Income4 + -0.88579848196414 * GRP_Mnt2 + 1.84159465073955 * GRP_Mnt3 + 0.11670514600746 * 
GRP_Mnt4 + -3.46232646407418 * GRP_MntFishProducts2 + 0.25005234850524 * GRP_MntFishProducts3 
+ -0.07970714752313 * GRP_MntFishProducts4 + -0.7495440064059 * GRP_MntGoldProds2 + 
-0.0659148563739 * GRP_MntGoldProds3 + -1.42445075896946 * GRP_MntGoldProds4 + 0.1738975461322 
* GRP_MntMeatProducts2 + -2.24799164386156 * GRP_MntMeatProducts3 + -1.67754357341899 * 
GRP_MntMeatProducts4 + -0.05307351478942 * GRP_MntWines2 + -2.2168800511889 * GRP_MntWines3 + 
-1.48732327222777 * GRP_MntWines4 + -0.36761319556449 * GRP_NumCatalogPurchases3 + 
-2.89167685306869 * GRP_NumCatalogPurchases4 + -0.48267351716569 * GRP_NumDistPurchases2 + 
0.93211719554417 * GRP_NumDistPurchases3 + 1.1708430486506 * GRP_NumDistPurchases4 + 
0.03811902892169 * GRP_NumWebPurchases2 + -1.51477371309928 * GRP_NumWebPurchases3 + 
1.07378297590898 * GRP_NumWebPurchases4 + 1.68393431629797 * GRP_RFMstat2 + 1.58685880164611 * 
GRP_RFMstat3 + 0.80759821340467 * GRP_RFMstat4 + 1.66879117439255 * GRP_RMntFrq2 + 
0.80834322412036 * GRP_RMntFrq3 + 0.23086766354714 * GRP_RMntFrq4 + 1.3218682104263 * 
GRP_Recency2 + -1.73155287312103 * GRP_Recency3 + 0.90108611111458 * GRP_Recency4 ;
287761    +   H1x1_5  = H1x1_5  +    -2.25400715952368 * GRP_AcceptedCmp52
287762    +          +    -0.68951263089678 * GRP_Frq2  +    -1.06579468283295 * GRP_Frq3
287763    +          +    -2.03202371442661 * GRP_Frq4  +      0.1036760802752 *
287764    +        GRP_Income2  +    -0.92046251438792 * GRP_Income3
287765    +          +     1.24075371479112 * GRP_Income4  +    -2.19069916142209 *
287766    +        GRP_Mnt2  +     1.76084360929533 * GRP_Mnt3  +     0.20732134279897 *
287767    +        GRP_Mnt4  +    -1.25213582301524 * GRP_MntFishProducts2
287768    +          +    -1.49559041774587 * GRP_MntFishProducts3
287769    +          +     1.29292270443546 * GRP_MntFishProducts4
287770    +          +     3.28109415592287 * GRP_MntGoldProds2
287771    +          +     0.40523569115651 * GRP_MntGoldProds3
287772    +          +        0.70305704265 * GRP_MntGoldProds4
287773    +          +    -1.85351989681271 * GRP_MntMeatProducts2
287774    +          +    -0.63625311683955 * GRP_MntMeatProducts3
287775    +          +     0.27320544681113 * GRP_MntMeatProducts4
287776    +          +     1.96095600251535 * GRP_MntWines2  +     2.24427494885455 *
287777    +        GRP_MntWines3  +    -0.88569250661863 * GRP_MntWines4
287778    +          +    -0.42794019910524 * GRP_NumCatalogPurchases3
287779    +          +    -2.32852367141603 * GRP_NumCatalogPurchases4
287780    +          +    -1.40970961318877 * GRP_NumDistPurchases2
287781    +          +     -2.5780841761751 * GRP_NumDistPurchases3
287782    +          +    -0.35557998232484 * GRP_NumDistPurchases4
287783    +          +     1.27746944985248 * GRP_NumWebPurchases2
287784    +          +     0.69463977283169 * GRP_NumWebPurchases3
287785    +          +    -0.54397813851169 * GRP_NumWebPurchases4
287786    +          +    -0.31669101358561 * GRP_RFMstat2  +     2.18799717857163 *
287787    +        GRP_RFMstat3  +    -0.42571916720282 * GRP_RFMstat4
287788    +          +     -0.8273646010144 * GRP_RMntFrq2  +     0.34575371088075 *
287789    +        GRP_RMntFrq3  +    -0.85751874647054 * GRP_RMntFrq4
287790    +          +    -1.53759054703623 * GRP_Recency2  +      0.1907268514387 *
287791    +        GRP_Recency3  +    -0.73522914565387 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -2.25400715952368 * GRP_AcceptedCmp52 + 
-0.68951263089678 * GRP_Frq2 + -1.06579468283295 * GRP_Frq3 + -2.03202371442661 * GRP_Frq4 + 
0.1036760802752 * GRP_Income2 + -0.92046251438792 * GRP_Income3 + 1.24075371479112 * 
GRP_Income4 + -2.19069916142209 * GRP_Mnt2 + 1.76084360929533 * GRP_Mnt3 + 0.20732134279897 * 
GRP_Mnt4 + -1.25213582301524 * GRP_MntFishProducts2 + -1.49559041774587 * GRP_MntFishProducts3 
+ 1.29292270443546 * GRP_MntFishProducts4 + 3.28109415592287 * GRP_MntGoldProds2 + 
0.40523569115651 * GRP_MntGoldProds3 + 0.70305704265 * GRP_MntGoldProds4 + -1.85351989681271 * 
GRP_MntMeatProducts2 + -0.63625311683955 * GRP_MntMeatProducts3 + 0.27320544681113 * 
GRP_MntMeatProducts4 + 1.96095600251535 * GRP_MntWines2 + 2.24427494885455 * GRP_MntWines3 + 
-0.88569250661863 * GRP_MntWines4 + -0.42794019910524 * GRP_NumCatalogPurchases3 + 
-2.32852367141603 * GRP_NumCatalogPurchases4 + -1.40970961318877 * GRP_NumDistPurchases2 + 
-2.5780841761751 * GRP_NumDistPurchases3 + -0.35557998232484 * GRP_NumDistPurchases4 + 
1.27746944985248 * GRP_NumWebPurchases2 + 0.69463977283169 * GRP_NumWebPurchases3 + 
-0.54397813851169 * GRP_NumWebPurchases4 + -0.31669101358561 * GRP_RFMstat2 + 2.18799717857163 
* GRP_RFMstat3 + -0.42571916720282 * GRP_RFMstat4 + -0.8273646010144 * GRP_RMntFrq2 + 
0.34575371088075 * GRP_RMntFrq3 + -0.85751874647054 * GRP_RMntFrq4 + -1.53759054703623 * 
GRP_Recency2 + 0.1907268514387 * GRP_Recency3 + -0.73522914565387 * GRP_Recency4 ;
287792    +   H1x1_1  =     0.19335754651259 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.19335754651259 + H1x1_1 ;
287793    +   H1x1_2  =     2.09010164778105 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 2.09010164778105 + H1x1_2 ;
287794    +   H1x1_3  =    -0.06489378657176 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.06489378657176 + H1x1_3 ;
287795    +   H1x1_4  =    -0.14814564965512 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.14814564965512 + H1x1_4 ;
287796    +   H1x1_5  =      1.2298003293092 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 1.2298003293092 + H1x1_5 ;
287797    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
287798    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
287799    +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
287800    +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
287801    +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
287802    +   H1x1_4  = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
287803    +   H1x1_5  = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_5 = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
287804    +END;
MPRINT(EM_DIAGRAM):   END;
287805    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
287806    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
287807    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
287808    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
287809    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
287810    +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
287811    +END;
MPRINT(EM_DIAGRAM):   END;
287812    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
287813    +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
287814    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
287815    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
287816    +   H1x2_1  =    -1.88709734442083 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -1.88709734442083 * S_Year_Birth ;
287817    +   H1x2_2  =     0.39337522313841 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.39337522313841 * S_Year_Birth ;
287818    +   H1x2_3  =    -0.80137600943997 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.80137600943997 * S_Year_Birth ;
287819    +   H1x2_4  =     0.56552045600061 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.56552045600061 * S_Year_Birth ;
287820    +   H1x2_5  =     0.08757939638091 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 0.08757939638091 * S_Year_Birth ;
287821    +   H1x2_1  = H1x2_1  +    -0.80297380803583 * GRP_AcceptedCmp52
287822    +          +     0.77171658129897 * GRP_Frq2  +    -1.90373500999925 * GRP_Frq3
287823    +          +     0.34067508173447 * GRP_Frq4  +    -3.40546398001194 *
287824    +        GRP_Income2  +      2.4308303101124 * GRP_Income3
287825    +          +      1.7371902933386 * GRP_Income4  +    -1.19436336479656 *
287826    +        GRP_Mnt2  +    -0.40996866110225 * GRP_Mnt3  +     1.04801669037568 *
287827    +        GRP_Mnt4  +     1.95500373096914 * GRP_MntFishProducts2
287828    +          +     2.51364109656281 * GRP_MntFishProducts3
287829    +          +    -1.42490007484769 * GRP_MntFishProducts4
287830    +          +    -0.45125943648795 * GRP_MntGoldProds2
287831    +          +     2.47102254724134 * GRP_MntGoldProds3
287832    +          +     -1.9039173262792 * GRP_MntGoldProds4
287833    +          +     0.19349291706995 * GRP_MntMeatProducts2
287834    +          +     1.13475826324844 * GRP_MntMeatProducts3
287835    +          +    -0.33642288502432 * GRP_MntMeatProducts4
287836    +          +     1.11286337512828 * GRP_MntWines2  +    -1.73349392468621 *
287837    +        GRP_MntWines3  +     0.82891272252224 * GRP_MntWines4
287838    +          +     0.15659125827236 * GRP_NumCatalogPurchases3
287839    +          +     0.32817066335176 * GRP_NumCatalogPurchases4
287840    +          +    -0.67313821415044 * GRP_NumDistPurchases2
287841    +          +    -0.96239937857546 * GRP_NumDistPurchases3
287842    +          +     0.32058507897383 * GRP_NumDistPurchases4
287843    +          +     0.02503658374779 * GRP_NumWebPurchases2
287844    +          +    -2.42182777667863 * GRP_NumWebPurchases3
287845    +          +     1.09934791830799 * GRP_NumWebPurchases4
287846    +          +     0.99647285457344 * GRP_RFMstat2  +    -1.81285090299632 *
287847    +        GRP_RFMstat3  +      0.6907946914019 * GRP_RFMstat4
287848    +          +    -0.96741541040827 * GRP_RMntFrq2  +     1.54078374992995 *
287849    +        GRP_RMntFrq3  +     -0.5606172121429 * GRP_RMntFrq4
287850    +          +     1.09972681443966 * GRP_Recency2  +     0.40240053086114 *
287851    +        GRP_Recency3  +     3.54622644138557 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.80297380803583 * GRP_AcceptedCmp52 + 
0.77171658129897 * GRP_Frq2 + -1.90373500999925 * GRP_Frq3 + 0.34067508173447 * GRP_Frq4 + 
-3.40546398001194 * GRP_Income2 + 2.4308303101124 * GRP_Income3 + 1.7371902933386 * 
GRP_Income4 + -1.19436336479656 * GRP_Mnt2 + -0.40996866110225 * GRP_Mnt3 + 1.04801669037568 * 
GRP_Mnt4 + 1.95500373096914 * GRP_MntFishProducts2 + 2.51364109656281 * GRP_MntFishProducts3 + 
-1.42490007484769 * GRP_MntFishProducts4 + -0.45125943648795 * GRP_MntGoldProds2 + 
2.47102254724134 * GRP_MntGoldProds3 + -1.9039173262792 * GRP_MntGoldProds4 + 0.19349291706995 
* GRP_MntMeatProducts2 + 1.13475826324844 * GRP_MntMeatProducts3 + -0.33642288502432 * 
GRP_MntMeatProducts4 + 1.11286337512828 * GRP_MntWines2 + -1.73349392468621 * GRP_MntWines3 + 
0.82891272252224 * GRP_MntWines4 + 0.15659125827236 * GRP_NumCatalogPurchases3 + 
0.32817066335176 * GRP_NumCatalogPurchases4 + -0.67313821415044 * GRP_NumDistPurchases2 + 
-0.96239937857546 * GRP_NumDistPurchases3 + 0.32058507897383 * GRP_NumDistPurchases4 + 
0.02503658374779 * GRP_NumWebPurchases2 + -2.42182777667863 * GRP_NumWebPurchases3 + 
1.09934791830799 * GRP_NumWebPurchases4 + 0.99647285457344 * GRP_RFMstat2 + -1.81285090299632 
* GRP_RFMstat3 + 0.6907946914019 * GRP_RFMstat4 + -0.96741541040827 * GRP_RMntFrq2 + 
1.54078374992995 * GRP_RMntFrq3 + -0.5606172121429 * GRP_RMntFrq4 + 1.09972681443966 * 
GRP_Recency2 + 0.40240053086114 * GRP_Recency3 + 3.54622644138557 * GRP_Recency4 ;
287852    +   H1x2_2  = H1x2_2  +    -0.84257803770334 * GRP_AcceptedCmp52
287853    +          +    -1.76147524199782 * GRP_Frq2  +     0.76968937743693 * GRP_Frq3
287854    +          +     1.10861276861184 * GRP_Frq4  +    -2.23247622323833 *
287855    +        GRP_Income2  +    -0.30655302009971 * GRP_Income3
287856    +          +    -0.67421319601147 * GRP_Income4  +    -0.41833926468843 *
287857    +        GRP_Mnt2  +     0.52496961087688 * GRP_Mnt3  +     2.22224381605808 *
287858    +        GRP_Mnt4  +     1.90603665409631 * GRP_MntFishProducts2
287859    +          +    -0.68769529687639 * GRP_MntFishProducts3
287860    +          +     0.91046416847697 * GRP_MntFishProducts4
287861    +          +     1.93581182421904 * GRP_MntGoldProds2
287862    +          +     0.00795466624941 * GRP_MntGoldProds3
287863    +          +    -0.22854189252742 * GRP_MntGoldProds4
287864    +          +     0.51645804440055 * GRP_MntMeatProducts2
287865    +          +    -0.73677565057958 * GRP_MntMeatProducts3
287866    +          +    -3.38222954402665 * GRP_MntMeatProducts4
287867    +          +    -0.52703533326761 * GRP_MntWines2  +     2.68998648323277 *
287868    +        GRP_MntWines3  +    -1.01553943004578 * GRP_MntWines4
287869    +          +    -0.25257542492254 * GRP_NumCatalogPurchases3
287870    +          +     0.92868654767551 * GRP_NumCatalogPurchases4
287871    +          +    -0.18642581919214 * GRP_NumDistPurchases2
287872    +          +     0.32117397006136 * GRP_NumDistPurchases3
287873    +          +    -0.59059080451748 * GRP_NumDistPurchases4
287874    +          +    -1.05057528699441 * GRP_NumWebPurchases2
287875    +          +    -0.84936431958655 * GRP_NumWebPurchases3
287876    +          +     0.43322339989668 * GRP_NumWebPurchases4
287877    +          +    -0.27462600263662 * GRP_RFMstat2  +    -2.25150384807365 *
287878    +        GRP_RFMstat3  +    -0.00267009939433 * GRP_RFMstat4
287879    +          +     1.27314966261257 * GRP_RMntFrq2  +     0.27127797709217 *
287880    +        GRP_RMntFrq3  +     1.12101959838801 * GRP_RMntFrq4
287881    +          +     0.79686140512362 * GRP_Recency2  +      -3.204314799241 *
287882    +        GRP_Recency3  +    -0.17063922919112 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.84257803770334 * GRP_AcceptedCmp52 + 
-1.76147524199782 * GRP_Frq2 + 0.76968937743693 * GRP_Frq3 + 1.10861276861184 * GRP_Frq4 + 
-2.23247622323833 * GRP_Income2 + -0.30655302009971 * GRP_Income3 + -0.67421319601147 * 
GRP_Income4 + -0.41833926468843 * GRP_Mnt2 + 0.52496961087688 * GRP_Mnt3 + 2.22224381605808 * 
GRP_Mnt4 + 1.90603665409631 * GRP_MntFishProducts2 + -0.68769529687639 * GRP_MntFishProducts3 
+ 0.91046416847697 * GRP_MntFishProducts4 + 1.93581182421904 * GRP_MntGoldProds2 + 
0.00795466624941 * GRP_MntGoldProds3 + -0.22854189252742 * GRP_MntGoldProds4 + 
0.51645804440055 * GRP_MntMeatProducts2 + -0.73677565057958 * GRP_MntMeatProducts3 + 
-3.38222954402665 * GRP_MntMeatProducts4 + -0.52703533326761 * GRP_MntWines2 + 
2.68998648323277 * GRP_MntWines3 + -1.01553943004578 * GRP_MntWines4 + -0.25257542492254 * 
GRP_NumCatalogPurchases3 + 0.92868654767551 * GRP_NumCatalogPurchases4 + -0.18642581919214 * 
GRP_NumDistPurchases2 + 0.32117397006136 * GRP_NumDistPurchases3 + -0.59059080451748 * 
GRP_NumDistPurchases4 + -1.05057528699441 * GRP_NumWebPurchases2 + -0.84936431958655 * 
GRP_NumWebPurchases3 + 0.43322339989668 * GRP_NumWebPurchases4 + -0.27462600263662 * 
GRP_RFMstat2 + -2.25150384807365 * GRP_RFMstat3 + -0.00267009939433 * GRP_RFMstat4 + 
1.27314966261257 * GRP_RMntFrq2 + 0.27127797709217 * GRP_RMntFrq3 + 1.12101959838801 * 
GRP_RMntFrq4 + 0.79686140512362 * GRP_Recency2 + -3.204314799241 * GRP_Recency3 + 
-0.17063922919112 * GRP_Recency4 ;
287883    +   H1x2_3  = H1x2_3  +     0.61950412844712 * GRP_AcceptedCmp52
287884    +          +     0.65265389665714 * GRP_Frq2  +     0.12876759740294 * GRP_Frq3
287885    +          +    -0.38017417695108 * GRP_Frq4  +    -0.54457623826836 *
287886    +        GRP_Income2  +     2.06545795697617 * GRP_Income3
287887    +          +     -0.2725653040132 * GRP_Income4  +     0.59334688450758 *
287888    +        GRP_Mnt2  +    -2.75668429292834 * GRP_Mnt3  +    -0.19086776143213 *
287889    +        GRP_Mnt4  +     -3.7490211951959 * GRP_MntFishProducts2
287890    +          +     -0.2747383185488 * GRP_MntFishProducts3
287891    +          +     0.05699547232616 * GRP_MntFishProducts4
287892    +          +     1.78340082221807 * GRP_MntGoldProds2
287893    +          +    -0.21272258173805 * GRP_MntGoldProds3
287894    +          +    -0.63881612523162 * GRP_MntGoldProds4
287895    +          +     0.35743242018534 * GRP_MntMeatProducts2
287896    +          +     0.39288166088974 * GRP_MntMeatProducts3
287897    +          +     0.68623350973697 * GRP_MntMeatProducts4
287898    +          +    -1.04284335042439 * GRP_MntWines2  +    -0.97636647224011 *
287899    +        GRP_MntWines3  +    -1.75436887389742 * GRP_MntWines4
287900    +          +     0.38349558810511 * GRP_NumCatalogPurchases3
287901    +          +     0.94944817324412 * GRP_NumCatalogPurchases4
287902    +          +     0.87924710032772 * GRP_NumDistPurchases2
287903    +          +     0.54658799433949 * GRP_NumDistPurchases3
287904    +          +     1.85594529989185 * GRP_NumDistPurchases4
287905    +          +    -0.66471569231333 * GRP_NumWebPurchases2
287906    +          +    -0.59461900037355 * GRP_NumWebPurchases3
287907    +          +     0.12806083458682 * GRP_NumWebPurchases4
287908    +          +    -0.75799558259662 * GRP_RFMstat2  +     1.03472328046295 *
287909    +        GRP_RFMstat3  +     0.35460394964665 * GRP_RFMstat4
287910    +          +     2.35757770027854 * GRP_RMntFrq2  +    -1.60760048151685 *
287911    +        GRP_RMntFrq3  +       1.734911990241 * GRP_RMntFrq4
287912    +          +    -0.50983934759213 * GRP_Recency2  +     1.22056684902473 *
287913    +        GRP_Recency3  +    -0.53617918353506 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.61950412844712 * GRP_AcceptedCmp52 + 
0.65265389665714 * GRP_Frq2 + 0.12876759740294 * GRP_Frq3 + -0.38017417695108 * GRP_Frq4 + 
-0.54457623826836 * GRP_Income2 + 2.06545795697617 * GRP_Income3 + -0.2725653040132 * 
GRP_Income4 + 0.59334688450758 * GRP_Mnt2 + -2.75668429292834 * GRP_Mnt3 + -0.19086776143213 * 
GRP_Mnt4 + -3.7490211951959 * GRP_MntFishProducts2 + -0.2747383185488 * GRP_MntFishProducts3 + 
0.05699547232616 * GRP_MntFishProducts4 + 1.78340082221807 * GRP_MntGoldProds2 + 
-0.21272258173805 * GRP_MntGoldProds3 + -0.63881612523162 * GRP_MntGoldProds4 + 
0.35743242018534 * GRP_MntMeatProducts2 + 0.39288166088974 * GRP_MntMeatProducts3 + 
0.68623350973697 * GRP_MntMeatProducts4 + -1.04284335042439 * GRP_MntWines2 + 
-0.97636647224011 * GRP_MntWines3 + -1.75436887389742 * GRP_MntWines4 + 0.38349558810511 * 
GRP_NumCatalogPurchases3 + 0.94944817324412 * GRP_NumCatalogPurchases4 + 0.87924710032772 * 
GRP_NumDistPurchases2 + 0.54658799433949 * GRP_NumDistPurchases3 + 1.85594529989185 * 
GRP_NumDistPurchases4 + -0.66471569231333 * GRP_NumWebPurchases2 + -0.59461900037355 * 
GRP_NumWebPurchases3 + 0.12806083458682 * GRP_NumWebPurchases4 + -0.75799558259662 * 
GRP_RFMstat2 + 1.03472328046295 * GRP_RFMstat3 + 0.35460394964665 * GRP_RFMstat4 + 
2.35757770027854 * GRP_RMntFrq2 + -1.60760048151685 * GRP_RMntFrq3 + 1.734911990241 * 
GRP_RMntFrq4 + -0.50983934759213 * GRP_Recency2 + 1.22056684902473 * GRP_Recency3 + 
-0.53617918353506 * GRP_Recency4 ;
287914    +   H1x2_4  = H1x2_4  +     1.26170976978884 * GRP_AcceptedCmp52
287915    +          +    -0.32711952545891 * GRP_Frq2  +    -1.19397195692697 * GRP_Frq3
287916    +          +    -1.91237681986457 * GRP_Frq4  +    -0.79449068445985 *
287917    +        GRP_Income2  +    -1.22812902448096 * GRP_Income3
287918    +          +     0.34997306488077 * GRP_Income4  +     0.97887573619442 *
287919    +        GRP_Mnt2  +    -0.47207479147139 * GRP_Mnt3  +    -0.72610866749196 *
287920    +        GRP_Mnt4  +    -1.02568945709262 * GRP_MntFishProducts2
287921    +          +    -0.50962348735329 * GRP_MntFishProducts3
287922    +          +    -1.75841654964734 * GRP_MntFishProducts4
287923    +          +     2.14839745385174 * GRP_MntGoldProds2
287924    +          +      2.4716387157729 * GRP_MntGoldProds3
287925    +          +     0.61286996367418 * GRP_MntGoldProds4
287926    +          +     1.45427097683349 * GRP_MntMeatProducts2
287927    +          +    -0.34990206215878 * GRP_MntMeatProducts3
287928    +          +     2.25284175811484 * GRP_MntMeatProducts4
287929    +          +      0.9855268124051 * GRP_MntWines2  +    -0.12203915234087 *
287930    +        GRP_MntWines3  +     0.25102207151836 * GRP_MntWines4
287931    +          +     1.02272173939472 * GRP_NumCatalogPurchases3
287932    +          +    -0.86507841983648 * GRP_NumCatalogPurchases4
287933    +          +    -0.44080685652484 * GRP_NumDistPurchases2
287934    +          +     2.40613428385819 * GRP_NumDistPurchases3
287935    +          +     0.26317801067025 * GRP_NumDistPurchases4
287936    +          +     2.34961138802546 * GRP_NumWebPurchases2
287937    +          +     2.35826990005342 * GRP_NumWebPurchases3
287938    +          +     0.18496434892584 * GRP_NumWebPurchases4
287939    +          +     1.79795147677472 * GRP_RFMstat2  +     0.58420175726653 *
287940    +        GRP_RFMstat3  +    -1.31222644039147 * GRP_RFMstat4
287941    +          +    -0.47605088519028 * GRP_RMntFrq2  +    -1.93444600786423 *
287942    +        GRP_RMntFrq3  +    -1.73270719079454 * GRP_RMntFrq4
287943    +          +    -0.07465628796168 * GRP_Recency2  +     0.39933484299815 *
287944    +        GRP_Recency3  +     1.24718444803263 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 1.26170976978884 * GRP_AcceptedCmp52 + 
-0.32711952545891 * GRP_Frq2 + -1.19397195692697 * GRP_Frq3 + -1.91237681986457 * GRP_Frq4 + 
-0.79449068445985 * GRP_Income2 + -1.22812902448096 * GRP_Income3 + 0.34997306488077 * 
GRP_Income4 + 0.97887573619442 * GRP_Mnt2 + -0.47207479147139 * GRP_Mnt3 + -0.72610866749196 * 
GRP_Mnt4 + -1.02568945709262 * GRP_MntFishProducts2 + -0.50962348735329 * GRP_MntFishProducts3 
+ -1.75841654964734 * GRP_MntFishProducts4 + 2.14839745385174 * GRP_MntGoldProds2 + 
2.4716387157729 * GRP_MntGoldProds3 + 0.61286996367418 * GRP_MntGoldProds4 + 1.45427097683349 
* GRP_MntMeatProducts2 + -0.34990206215878 * GRP_MntMeatProducts3 + 2.25284175811484 * 
GRP_MntMeatProducts4 + 0.9855268124051 * GRP_MntWines2 + -0.12203915234087 * GRP_MntWines3 + 
0.25102207151836 * GRP_MntWines4 + 1.02272173939472 * GRP_NumCatalogPurchases3 + 
-0.86507841983648 * GRP_NumCatalogPurchases4 + -0.44080685652484 * GRP_NumDistPurchases2 + 
2.40613428385819 * GRP_NumDistPurchases3 + 0.26317801067025 * GRP_NumDistPurchases4 + 
2.34961138802546 * GRP_NumWebPurchases2 + 2.35826990005342 * GRP_NumWebPurchases3 + 
0.18496434892584 * GRP_NumWebPurchases4 + 1.79795147677472 * GRP_RFMstat2 + 0.58420175726653 * 
GRP_RFMstat3 + -1.31222644039147 * GRP_RFMstat4 + -0.47605088519028 * GRP_RMntFrq2 + 
-1.93444600786423 * GRP_RMntFrq3 + -1.73270719079454 * GRP_RMntFrq4 + -0.07465628796168 * 
GRP_Recency2 + 0.39933484299815 * GRP_Recency3 + 1.24718444803263 * GRP_Recency4 ;
287945    +   H1x2_5  = H1x2_5  +     0.87459488954875 * GRP_AcceptedCmp52
287946    +          +    -0.84011640362753 * GRP_Frq2  +     0.77937376717729 * GRP_Frq3
287947    +          +    -1.82978666358622 * GRP_Frq4  +    -0.03003575117499 *
287948    +        GRP_Income2  +    -0.09211385255865 * GRP_Income3
287949    +          +    -1.94207051248492 * GRP_Income4  +     0.73641935783417 *
287950    +        GRP_Mnt2  +      -0.495669562808 * GRP_Mnt3  +    -0.04058774225968 *
287951    +        GRP_Mnt4  +     1.81606017533935 * GRP_MntFishProducts2
287952    +          +     -2.3817205567109 * GRP_MntFishProducts3
287953    +          +      1.4356293091772 * GRP_MntFishProducts4
287954    +          +    -1.03209023546079 * GRP_MntGoldProds2
287955    +          +     1.93949728331263 * GRP_MntGoldProds3
287956    +          +     0.44849194130528 * GRP_MntGoldProds4
287957    +          +     1.34973896956794 * GRP_MntMeatProducts2
287958    +          +     1.40989126474294 * GRP_MntMeatProducts3
287959    +          +     0.74435387703611 * GRP_MntMeatProducts4
287960    +          +     0.94293940682329 * GRP_MntWines2  +     0.71988830572011 *
287961    +        GRP_MntWines3  +     0.43603082498929 * GRP_MntWines4
287962    +          +     1.65449574071289 * GRP_NumCatalogPurchases3
287963    +          +    -0.66380394478337 * GRP_NumCatalogPurchases4
287964    +          +    -0.76749528874396 * GRP_NumDistPurchases2
287965    +          +     1.83370965910825 * GRP_NumDistPurchases3
287966    +          +    -0.73709156569506 * GRP_NumDistPurchases4
287967    +          +     0.09215124428658 * GRP_NumWebPurchases2
287968    +          +      1.0403096068891 * GRP_NumWebPurchases3
287969    +          +     0.59317560741224 * GRP_NumWebPurchases4
287970    +          +     1.75844403152209 * GRP_RFMstat2  +     -0.8733964014922 *
287971    +        GRP_RFMstat3  +    -0.76258024821499 * GRP_RFMstat4
287972    +          +    -1.62335267331435 * GRP_RMntFrq2  +     0.16774877520829 *
287973    +        GRP_RMntFrq3  +    -0.59672894733807 * GRP_RMntFrq4
287974    +          +     -0.1207352636629 * GRP_Recency2  +    -3.91419195768202 *
287975    +        GRP_Recency3  +    -1.81688897411428 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.87459488954875 * GRP_AcceptedCmp52 + 
-0.84011640362753 * GRP_Frq2 + 0.77937376717729 * GRP_Frq3 + -1.82978666358622 * GRP_Frq4 + 
-0.03003575117499 * GRP_Income2 + -0.09211385255865 * GRP_Income3 + -1.94207051248492 * 
GRP_Income4 + 0.73641935783417 * GRP_Mnt2 + -0.495669562808 * GRP_Mnt3 + -0.04058774225968 * 
GRP_Mnt4 + 1.81606017533935 * GRP_MntFishProducts2 + -2.3817205567109 * GRP_MntFishProducts3 + 
1.4356293091772 * GRP_MntFishProducts4 + -1.03209023546079 * GRP_MntGoldProds2 + 
1.93949728331263 * GRP_MntGoldProds3 + 0.44849194130528 * GRP_MntGoldProds4 + 1.34973896956794 
* GRP_MntMeatProducts2 + 1.40989126474294 * GRP_MntMeatProducts3 + 0.74435387703611 * 
GRP_MntMeatProducts4 + 0.94293940682329 * GRP_MntWines2 + 0.71988830572011 * GRP_MntWines3 + 
0.43603082498929 * GRP_MntWines4 + 1.65449574071289 * GRP_NumCatalogPurchases3 + 
-0.66380394478337 * GRP_NumCatalogPurchases4 + -0.76749528874396 * GRP_NumDistPurchases2 + 
1.83370965910825 * GRP_NumDistPurchases3 + -0.73709156569506 * GRP_NumDistPurchases4 + 
0.09215124428658 * GRP_NumWebPurchases2 + 1.0403096068891 * GRP_NumWebPurchases3 + 
0.59317560741224 * GRP_NumWebPurchases4 + 1.75844403152209 * GRP_RFMstat2 + -0.8733964014922 * 
GRP_RFMstat3 + -0.76258024821499 * GRP_RFMstat4 + -1.62335267331435 * GRP_RMntFrq2 + 
0.16774877520829 * GRP_RMntFrq3 + -0.59672894733807 * GRP_RMntFrq4 + -0.1207352636629 * 
GRP_Recency2 + -3.91419195768202 * GRP_Recency3 + -1.81688897411428 * GRP_Recency4 ;
287976    +   H1x2_1  =     0.53421261957097 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.53421261957097 + H1x2_1 ;
287977    +   H1x2_2  =     0.61690490910033 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.61690490910033 + H1x2_2 ;
287978    +   H1x2_3  =    -1.82311183459857 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -1.82311183459857 + H1x2_3 ;
287979    +   H1x2_4  =    -0.21816223161936 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.21816223161936 + H1x2_4 ;
287980    +   H1x2_5  =     -0.4592254459549 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.4592254459549 + H1x2_5 ;
287981    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
287982    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
287983    +   H1x2_1  = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
287984    +   H1x2_2  = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_2 = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
287985    +   H1x2_3  = 1.0 / (1.0 + EXP(MIN( - H1x2_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_3 = 1.0 / (1.0 + EXP(MIN( - H1x2_3 , _EXP_BAR)));
287986    +   H1x2_4  = 1.0 / (1.0 + EXP(MIN( - H1x2_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_4 = 1.0 / (1.0 + EXP(MIN( - H1x2_4 , _EXP_BAR)));
287987    +   H1x2_5  = 1.0 / (1.0 + EXP(MIN( - H1x2_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.0 / (1.0 + EXP(MIN( - H1x2_5 , _EXP_BAR)));
287988    +END;
MPRINT(EM_DIAGRAM):   END;
287989    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
287990    +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
287991    +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
287992    +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
287993    +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
287994    +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
287995    +END;
MPRINT(EM_DIAGRAM):   END;
287996    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
287997    +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
287998    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
287999    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
288000    +   H2x1_1  =    -0.10131311732967 * H1x1_1  +     2.09604760546585 * H1x1_2
288001    +          +     0.75964449684316 * H1x1_3  +    -3.05899403391852 * H1x1_4
288002    +          +    -2.64491525760726 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -0.10131311732967 * H1x1_1 + 2.09604760546585 * H1x1_2 + 
0.75964449684316 * H1x1_3 + -3.05899403391852 * H1x1_4 + -2.64491525760726 * H1x1_5 ;
288003    +   H2x1_2  =     2.09816176126174 * H1x1_1  +     -2.7170504295107 * H1x1_2
288004    +          +    -4.28573382707654 * H1x1_3  +     -0.4124455577826 * H1x1_4
288005    +          +    -1.74219234169061 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 2.09816176126174 * H1x1_1 + -2.7170504295107 * H1x1_2 + 
-4.28573382707654 * H1x1_3 + -0.4124455577826 * H1x1_4 + -1.74219234169061 * H1x1_5 ;
288006    +   H2x1_3  =     -0.0908396989213 * H1x1_1  +    -2.13315935484498 * H1x1_2
288007    +          +      -0.041102734605 * H1x1_3  +     0.44906302354183 * H1x1_4
288008    +          +     2.22045400368613 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -0.0908396989213 * H1x1_1 + -2.13315935484498 * H1x1_2 + 
-0.041102734605 * H1x1_3 + 0.44906302354183 * H1x1_4 + 2.22045400368613 * H1x1_5 ;
288009    +   H2x1_4  =    -3.59138952025597 * H1x1_1  +     1.29340469653348 * H1x1_2
288010    +          +       1.689672422487 * H1x1_3  +    -2.31797692991787 * H1x1_4
288011    +          +    -2.53540958111863 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -3.59138952025597 * H1x1_1 + 1.29340469653348 * H1x1_2 + 
1.689672422487 * H1x1_3 + -2.31797692991787 * H1x1_4 + -2.53540958111863 * H1x1_5 ;
288012    +   H2x1_5  =    -1.20648019467275 * H1x1_1  +      1.9669218225267 * H1x1_2
288013    +          +     2.04494536709697 * H1x1_3  +    -2.33648894116384 * H1x1_4
288014    +          +    -1.60853492956388 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -1.20648019467275 * H1x1_1 + 1.9669218225267 * H1x1_2 + 
2.04494536709697 * H1x1_3 + -2.33648894116384 * H1x1_4 + -1.60853492956388 * H1x1_5 ;
288015    +   H2x1_1  = H2x1_1  +    -1.45345171601353 * H1x2_1
288016    +          +    -0.03179259597665 * H1x2_2  +     -2.9887894366399 * H1x2_3
288017    +          +     0.68029332905711 * H1x2_4  +     0.76926185571867 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -1.45345171601353 * H1x2_1 + -0.03179259597665 * 
H1x2_2 + -2.9887894366399 * H1x2_3 + 0.68029332905711 * H1x2_4 + 0.76926185571867 * H1x2_5 ;
288018    +   H2x1_2  = H2x1_2  +    -1.21280301577117 * H1x2_1
288019    +          +      2.9525914680029 * H1x2_2  +    -0.55393861346072 * H1x2_3
288020    +          +     1.77793175958897 * H1x2_4  +     2.51042321881699 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -1.21280301577117 * H1x2_1 + 2.9525914680029 * H1x2_2 
+ -0.55393861346072 * H1x2_3 + 1.77793175958897 * H1x2_4 + 2.51042321881699 * H1x2_5 ;
288021    +   H2x1_3  = H2x1_3  +     1.57047941405239 * H1x2_1
288022    +          +    -1.31134127121564 * H1x2_2  +      2.1322025881706 * H1x2_3
288023    +          +    -0.61230583564273 * H1x2_4  +     0.14627232119209 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + 1.57047941405239 * H1x2_1 + -1.31134127121564 * H1x2_2 
+ 2.1322025881706 * H1x2_3 + -0.61230583564273 * H1x2_4 + 0.14627232119209 * H1x2_5 ;
288024    +   H2x1_4  = H2x1_4  +    -1.29890984989779 * H1x2_1
288025    +          +    -1.37863865683621 * H1x2_2  +    -0.15093392936569 * H1x2_3
288026    +          +     2.15628991822961 * H1x2_4  +    -0.04564203403522 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + -1.29890984989779 * H1x2_1 + -1.37863865683621 * 
H1x2_2 + -0.15093392936569 * H1x2_3 + 2.15628991822961 * H1x2_4 + -0.04564203403522 * H1x2_5 ;
288027    +   H2x1_5  = H2x1_5  +    -1.82286870874677 * H1x2_1
288028    +          +    -1.06116903038863 * H1x2_2  +    -1.77472301413445 * H1x2_3
288029    +          +     0.17320934910404 * H1x2_4  +    -0.96172965375973 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + -1.82286870874677 * H1x2_1 + -1.06116903038863 * 
H1x2_2 + -1.77472301413445 * H1x2_3 + 0.17320934910404 * H1x2_4 + -0.96172965375973 * H1x2_5 ;
288030    +   H2x1_1  =     0.61260716175728 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 0.61260716175728 + H2x1_1 ;
288031    +   H2x1_2  =    -1.78716565467594 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -1.78716565467594 + H2x1_2 ;
288032    +   H2x1_3  =    -0.88082814085488 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -0.88082814085488 + H2x1_3 ;
288033    +   H2x1_4  =     0.33869525080862 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 0.33869525080862 + H2x1_4 ;
288034    +   H2x1_5  =      2.0506883431914 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = 2.0506883431914 + H2x1_5 ;
288035    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
288036    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
288037    +   H2x1_1  = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
288038    +   H2x1_2  = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
288039    +   H2x1_3  = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
288040    +   H2x1_4  = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
288041    +   H2x1_5  = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_5 = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
288042    +END;
MPRINT(EM_DIAGRAM):   END;
288043    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
288044    +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
288045    +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
288046    +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
288047    +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
288048    +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
288049    +END;
MPRINT(EM_DIAGRAM):   END;
288050    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
288051    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
288052    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
288053    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
288054    +   P_DepVar1  =     5.44508928953974 * H2x1_1  +    -7.80342156600058 * H2x1_2
288055    +          +    -4.34349012782915 * H2x1_3  +     6.80870509597821 * H2x1_4
288056    +          +     5.61199728345116 * H2x1_5 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 5.44508928953974 * H2x1_1 + -7.80342156600058 * H2x1_2 + 
-4.34349012782915 * H2x1_3 + 6.80870509597821 * H2x1_4 + 5.61199728345116 * H2x1_5 ;
288057    +   P_DepVar1  =    -3.84280322129048 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.84280322129048 + P_DepVar1 ;
288058    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
288059    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
288060    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
288061    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
288062    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
288063    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
288064    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
288065    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
288066    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
288067    +END;
MPRINT(EM_DIAGRAM):   END;
288068    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
288069    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
288070    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
288071    +END;
MPRINT(EM_DIAGRAM):   END;
288072    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
288073    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
288074    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
288075    +END;
MPRINT(EM_DIAGRAM):   END;
288076    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
288077    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
288078    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
288079    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
288080    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
288081    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
288082    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
288083    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
288084    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
288085    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
288086    +END;
MPRINT(EM_DIAGRAM):   END;
288087    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
288088    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
288089    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
288090    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
288091     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
288092     quit;
288093     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
288094     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
288095     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
288096     retain ID 2 Node "AutoNeural20";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural20";
288097     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
288098     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3617 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 3617 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

288099     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
288100     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
288101     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3617 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 3617 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

288102     proc sort data=EMWS8.AutoNeural20_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural20_variableset out=_temp2(keep=NAME 
CREATOR);
288103     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
288104     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 48 observations read from the data set EMWS8.AUTONEURAL20_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 48 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

288105     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
288106     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
288107     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
288108     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 48 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 48 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

288109     proc contents data=EMWS8.AutoNeural20_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural20_train out=_meta(keep=NAME) noprint;
288110     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 82 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

288111     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
288112     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
288113     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 82 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 82 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

288114     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
288115     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
288116     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
288117     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 82 observations read from the data set WORK._META.
NOTE: There were 48 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 82 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

288118     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
288119     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
288119   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1520 rows and 5 columns.

288120     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

288121     proc append base=EMWS8.Ensmbl50_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl50_FCMP data=_tempx;
288122     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL50_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1520 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL50_FCMP has 1520 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

288123     filename _pref
288123   ! "C:\\predictive-models-project\Workspaces\EMWS8\BINNING\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\BINNING\EMPUBLISHSCORE.sas";
288124     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
288125     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\BINNING\EMPUBLISHSCORE.sas.
288126    +length _UFormat $200;
MPRINT(EM_DIAGRAM):   length _UFormat $200;
288127    +drop _UFormat;
MPRINT(EM_DIAGRAM):   drop _UFormat;
288128    +_UFormat='';
MPRINT(EM_DIAGRAM):   _UFormat='';
288129    +
288130    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
288131    +* Variable: AcceptedCmp5;
MPRINT(EM_DIAGRAM):   * Variable: AcceptedCmp5;
288132    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
288133    +LABEL GRP_AcceptedCmp5 =
288134    +'Grouped: AcceptedCmp5';
MPRINT(EM_DIAGRAM):   LABEL GRP_AcceptedCmp5 = 'Grouped: AcceptedCmp5';
288135    +
288136    +_UFormat = put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _UFormat = put(AcceptedCmp5,BEST.);
288137    +%dmnormip(_UFormat);
MPRINT(DMNORMIP):   call dmnorm(_UFormat,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
288138    +if MISSING(_UFORMAT) then do;
MPRINT(EM_DIAGRAM):   if MISSING(_UFORMAT) then do;
288139    +GRP_AcceptedCmp5 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 1;
288140    +end;
MPRINT(EM_DIAGRAM):   end;
288141    +else if NOT MISSING(_UFORMAT) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(_UFORMAT) then do;
288142    +if (_UFORMAT eq '0'
288143    +) then do;
MPRINT(EM_DIAGRAM):   if (_UFORMAT eq '0' ) then do;
288144    +GRP_AcceptedCmp5 = 2;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 2;
288145    +end;
MPRINT(EM_DIAGRAM):   end;
288146    +else
288147    +if (_UFORMAT eq '1'
288148    +) then do;
MPRINT(EM_DIAGRAM):   else if (_UFORMAT eq '1' ) then do;
288149    +GRP_AcceptedCmp5 = 3;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 3;
288150    +end;
MPRINT(EM_DIAGRAM):   end;
288151    +else do;
MPRINT(EM_DIAGRAM):   else do;
288152    +GRP_AcceptedCmp5 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 1;
288153    +end;
MPRINT(EM_DIAGRAM):   end;
288154    +end;
MPRINT(EM_DIAGRAM):   end;
288155    +
288156    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
288157    +* Variable: Frq;
MPRINT(EM_DIAGRAM):   * Variable: Frq;
288158    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
288159    +LABEL GRP_Frq = "Grouped: Frq";
MPRINT(EM_DIAGRAM):   LABEL GRP_Frq = "Grouped: Frq";
288160    +
288161    +if MISSING(Frq) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Frq) then do;
288162    +GRP_Frq = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq = 1;
288163    +end;
MPRINT(EM_DIAGRAM):   end;
288164    +else if NOT MISSING(Frq) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Frq) then do;
288165    +if Frq < 6 then do;
MPRINT(EM_DIAGRAM):   if Frq < 6 then do;
288166    +GRP_Frq = 2;
MPRINT(EM_DIAGRAM):   GRP_Frq = 2;
288167    +end;
MPRINT(EM_DIAGRAM):   end;
288168    +else
288169    +if 6 <= Frq AND Frq < 12 then do;
MPRINT(EM_DIAGRAM):   else if 6 <= Frq AND Frq < 12 then do;
288170    +GRP_Frq = 3;
MPRINT(EM_DIAGRAM):   GRP_Frq = 3;
288171    +end;
MPRINT(EM_DIAGRAM):   end;
288172    +else
288173    +if 12 <= Frq AND Frq < 18 then do;
MPRINT(EM_DIAGRAM):   else if 12 <= Frq AND Frq < 18 then do;
288174    +GRP_Frq = 4;
MPRINT(EM_DIAGRAM):   GRP_Frq = 4;
288175    +end;
MPRINT(EM_DIAGRAM):   end;
288176    +else
288177    +if 18 <= Frq then do;
MPRINT(EM_DIAGRAM):   else if 18 <= Frq then do;
288178    +GRP_Frq = 5;
MPRINT(EM_DIAGRAM):   GRP_Frq = 5;
288179    +end;
MPRINT(EM_DIAGRAM):   end;
288180    +end;
MPRINT(EM_DIAGRAM):   end;
288181    +
288182    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
288183    +* Variable: Income;
MPRINT(EM_DIAGRAM):   * Variable: Income;
288184    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
288185    +LABEL GRP_Income =
288186    +'Grouped: Income';
MPRINT(EM_DIAGRAM):   LABEL GRP_Income = 'Grouped: Income';
288187    +
288188    +if MISSING(Income) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Income) then do;
288189    +GRP_Income = 1;
MPRINT(EM_DIAGRAM):   GRP_Income = 1;
288190    +end;
MPRINT(EM_DIAGRAM):   end;
288191    +else if NOT MISSING(Income) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Income) then do;
288192    +if Income < 35268 then do;
MPRINT(EM_DIAGRAM):   if Income < 35268 then do;
288193    +GRP_Income = 2;
MPRINT(EM_DIAGRAM):   GRP_Income = 2;
288194    +end;
MPRINT(EM_DIAGRAM):   end;
288195    +else
288196    +if 35268 <= Income AND Income < 52157 then do;
MPRINT(EM_DIAGRAM):   else if 35268 <= Income AND Income < 52157 then do;
288197    +GRP_Income = 3;
MPRINT(EM_DIAGRAM):   GRP_Income = 3;
288198    +end;
MPRINT(EM_DIAGRAM):   end;
288199    +else
288200    +if 52157 <= Income AND Income < 69486 then do;
MPRINT(EM_DIAGRAM):   else if 52157 <= Income AND Income < 69486 then do;
288201    +GRP_Income = 4;
MPRINT(EM_DIAGRAM):   GRP_Income = 4;
288202    +end;
MPRINT(EM_DIAGRAM):   end;
288203    +else
288204    +if 69486 <= Income then do;
MPRINT(EM_DIAGRAM):   else if 69486 <= Income then do;
288205    +GRP_Income = 5;
MPRINT(EM_DIAGRAM):   GRP_Income = 5;
288206    +end;
MPRINT(EM_DIAGRAM):   end;
288207    +end;
MPRINT(EM_DIAGRAM):   end;
288208    +
288209    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
288210    +* Variable: Mnt;
MPRINT(EM_DIAGRAM):   * Variable: Mnt;
288211    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
288212    +LABEL GRP_Mnt = "Grouped: Mnt";
MPRINT(EM_DIAGRAM):   LABEL GRP_Mnt = "Grouped: Mnt";
288213    +
288214    +if MISSING(Mnt) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Mnt) then do;
288215    +GRP_Mnt = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 1;
288216    +end;
MPRINT(EM_DIAGRAM):   end;
288217    +else if NOT MISSING(Mnt) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Mnt) then do;
288218    +if Mnt < 72 then do;
MPRINT(EM_DIAGRAM):   if Mnt < 72 then do;
288219    +GRP_Mnt = 2;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 2;
288220    +end;
MPRINT(EM_DIAGRAM):   end;
288221    +else
288222    +if 72 <= Mnt AND Mnt < 405.5 then do;
MPRINT(EM_DIAGRAM):   else if 72 <= Mnt AND Mnt < 405.5 then do;
288223    +GRP_Mnt = 3;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 3;
288224    +end;
MPRINT(EM_DIAGRAM):   end;
288225    +else
288226    +if 405.5 <= Mnt AND Mnt < 1064 then do;
MPRINT(EM_DIAGRAM):   else if 405.5 <= Mnt AND Mnt < 1064 then do;
288227    +GRP_Mnt = 4;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 4;
288228    +end;
MPRINT(EM_DIAGRAM):   end;
288229    +else
288230    +if 1064 <= Mnt then do;
MPRINT(EM_DIAGRAM):   else if 1064 <= Mnt then do;
288231    +GRP_Mnt = 5;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 5;
288232    +end;
MPRINT(EM_DIAGRAM):   end;
288233    +end;
MPRINT(EM_DIAGRAM):   end;
288234    +
288235    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
288236    +* Variable: MntFishProducts;
MPRINT(EM_DIAGRAM):   * Variable: MntFishProducts;
288237    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
288238    +LABEL GRP_MntFishProducts =
288239    +'Grouped: MntFishProducts';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntFishProducts = 'Grouped: MntFishProducts';
288240    +
288241    +if MISSING(MntFishProducts) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntFishProducts) then do;
288242    +GRP_MntFishProducts = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 1;
288243    +end;
MPRINT(EM_DIAGRAM):   end;
288244    +else if NOT MISSING(MntFishProducts) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntFishProducts) then do;
288245    +if MntFishProducts < 3 then do;
MPRINT(EM_DIAGRAM):   if MntFishProducts < 3 then do;
288246    +GRP_MntFishProducts = 2;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 2;
288247    +end;
MPRINT(EM_DIAGRAM):   end;
288248    +else
288249    +if 3 <= MntFishProducts AND MntFishProducts < 13 then do;
MPRINT(EM_DIAGRAM):   else if 3 <= MntFishProducts AND MntFishProducts < 13 then do;
288250    +GRP_MntFishProducts = 3;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 3;
288251    +end;
MPRINT(EM_DIAGRAM):   end;
288252    +else
288253    +if 13 <= MntFishProducts AND MntFishProducts < 47 then do;
MPRINT(EM_DIAGRAM):   else if 13 <= MntFishProducts AND MntFishProducts < 47 then do;
288254    +GRP_MntFishProducts = 4;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 4;
288255    +end;
MPRINT(EM_DIAGRAM):   end;
288256    +else
288257    +if 47 <= MntFishProducts then do;
MPRINT(EM_DIAGRAM):   else if 47 <= MntFishProducts then do;
288258    +GRP_MntFishProducts = 5;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 5;
288259    +end;
MPRINT(EM_DIAGRAM):   end;
288260    +end;
MPRINT(EM_DIAGRAM):   end;
288261    +
288262    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
288263    +* Variable: MntGoldProds;
MPRINT(EM_DIAGRAM):   * Variable: MntGoldProds;
288264    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
288265    +LABEL GRP_MntGoldProds =
288266    +'Grouped: MntGoldProds';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntGoldProds = 'Grouped: MntGoldProds';
288267    +
288268    +if MISSING(MntGoldProds) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntGoldProds) then do;
288269    +GRP_MntGoldProds = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 1;
288270    +end;
MPRINT(EM_DIAGRAM):   end;
288271    +else if NOT MISSING(MntGoldProds) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntGoldProds) then do;
288272    +if MntGoldProds < 9 then do;
MPRINT(EM_DIAGRAM):   if MntGoldProds < 9 then do;
288273    +GRP_MntGoldProds = 2;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 2;
288274    +end;
MPRINT(EM_DIAGRAM):   end;
288275    +else
288276    +if 9 <= MntGoldProds AND MntGoldProds < 25 then do;
MPRINT(EM_DIAGRAM):   else if 9 <= MntGoldProds AND MntGoldProds < 25 then do;
288277    +GRP_MntGoldProds = 3;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 3;
288278    +end;
MPRINT(EM_DIAGRAM):   end;
288279    +else
288280    +if 25 <= MntGoldProds AND MntGoldProds < 59 then do;
MPRINT(EM_DIAGRAM):   else if 25 <= MntGoldProds AND MntGoldProds < 59 then do;
288281    +GRP_MntGoldProds = 4;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 4;
288282    +end;
MPRINT(EM_DIAGRAM):   end;
288283    +else
288284    +if 59 <= MntGoldProds then do;
MPRINT(EM_DIAGRAM):   else if 59 <= MntGoldProds then do;
288285    +GRP_MntGoldProds = 5;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 5;
288286    +end;
MPRINT(EM_DIAGRAM):   end;
288287    +end;
MPRINT(EM_DIAGRAM):   end;
288288    +
288289    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
288290    +* Variable: MntMeatProducts;
MPRINT(EM_DIAGRAM):   * Variable: MntMeatProducts;
288291    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
288292    +LABEL GRP_MntMeatProducts =
288293    +'Grouped: MntMeatProducts';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntMeatProducts = 'Grouped: MntMeatProducts';
288294    +
288295    +if MISSING(MntMeatProducts) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntMeatProducts) then do;
288296    +GRP_MntMeatProducts = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 1;
288297    +end;
MPRINT(EM_DIAGRAM):   end;
288298    +else if NOT MISSING(MntMeatProducts) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntMeatProducts) then do;
288299    +if MntMeatProducts < 17 then do;
MPRINT(EM_DIAGRAM):   if MntMeatProducts < 17 then do;
288300    +GRP_MntMeatProducts = 2;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 2;
288301    +end;
MPRINT(EM_DIAGRAM):   end;
288302    +else
288303    +if 17 <= MntMeatProducts AND MntMeatProducts < 72 then do;
MPRINT(EM_DIAGRAM):   else if 17 <= MntMeatProducts AND MntMeatProducts < 72 then do;
288304    +GRP_MntMeatProducts = 3;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 3;
288305    +end;
MPRINT(EM_DIAGRAM):   end;
288306    +else
288307    +if 72 <= MntMeatProducts AND MntMeatProducts < 246 then do;
MPRINT(EM_DIAGRAM):   else if 72 <= MntMeatProducts AND MntMeatProducts < 246 then do;
288308    +GRP_MntMeatProducts = 4;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 4;
288309    +end;
MPRINT(EM_DIAGRAM):   end;
288310    +else
288311    +if 246 <= MntMeatProducts then do;
MPRINT(EM_DIAGRAM):   else if 246 <= MntMeatProducts then do;
288312    +GRP_MntMeatProducts = 5;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 5;
288313    +end;
MPRINT(EM_DIAGRAM):   end;
288314    +end;
MPRINT(EM_DIAGRAM):   end;
288315    +
288316    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
288317    +* Variable: MntWines;
MPRINT(EM_DIAGRAM):   * Variable: MntWines;
288318    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
288319    +LABEL GRP_MntWines =
288320    +'Grouped: MntWines';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntWines = 'Grouped: MntWines';
288321    +
288322    +if MISSING(MntWines) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntWines) then do;
288323    +GRP_MntWines = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 1;
288324    +end;
MPRINT(EM_DIAGRAM):   end;
288325    +else if NOT MISSING(MntWines) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntWines) then do;
288326    +if MntWines < 24 then do;
MPRINT(EM_DIAGRAM):   if MntWines < 24 then do;
288327    +GRP_MntWines = 2;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 2;
288328    +end;
MPRINT(EM_DIAGRAM):   end;
288329    +else
288330    +if 24 <= MntWines AND MntWines < 183.5 then do;
MPRINT(EM_DIAGRAM):   else if 24 <= MntWines AND MntWines < 183.5 then do;
288331    +GRP_MntWines = 3;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 3;
288332    +end;
MPRINT(EM_DIAGRAM):   end;
288333    +else
288334    +if 183.5 <= MntWines AND MntWines < 508 then do;
MPRINT(EM_DIAGRAM):   else if 183.5 <= MntWines AND MntWines < 508 then do;
288335    +GRP_MntWines = 4;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 4;
288336    +end;
MPRINT(EM_DIAGRAM):   end;
288337    +else
288338    +if 508 <= MntWines then do;
MPRINT(EM_DIAGRAM):   else if 508 <= MntWines then do;
288339    +GRP_MntWines = 5;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 5;
288340    +end;
MPRINT(EM_DIAGRAM):   end;
288341    +end;
MPRINT(EM_DIAGRAM):   end;
288342    +
288343    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
288344    +* Variable: NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumCatalogPurchases;
288345    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
288346    +LABEL GRP_NumCatalogPurchases =
288347    +'Grouped: NumCatalogPurchases';
MPRINT(EM_DIAGRAM):   LABEL GRP_NumCatalogPurchases = 'Grouped: NumCatalogPurchases';
288348    +
288349    +if MISSING(NumCatalogPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumCatalogPurchases) then do;
288350    +GRP_NumCatalogPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 1;
288351    +end;
MPRINT(EM_DIAGRAM):   end;
288352    +else if NOT MISSING(NumCatalogPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumCatalogPurchases) then do;
288353    +if NumCatalogPurchases < 0 then do;
MPRINT(EM_DIAGRAM):   if NumCatalogPurchases < 0 then do;
288354    +GRP_NumCatalogPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 2;
288355    +end;
MPRINT(EM_DIAGRAM):   end;
288356    +else
288357    +if 0 <= NumCatalogPurchases AND NumCatalogPurchases < 2 then do;
MPRINT(EM_DIAGRAM):   else if 0 <= NumCatalogPurchases AND NumCatalogPurchases < 2 then do;
288358    +GRP_NumCatalogPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 3;
288359    +end;
MPRINT(EM_DIAGRAM):   end;
288360    +else
288361    +if 2 <= NumCatalogPurchases AND NumCatalogPurchases < 4 then do;
MPRINT(EM_DIAGRAM):   else if 2 <= NumCatalogPurchases AND NumCatalogPurchases < 4 then do;
288362    +GRP_NumCatalogPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 4;
288363    +end;
MPRINT(EM_DIAGRAM):   end;
288364    +else
288365    +if 4 <= NumCatalogPurchases then do;
MPRINT(EM_DIAGRAM):   else if 4 <= NumCatalogPurchases then do;
288366    +GRP_NumCatalogPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 5;
288367    +end;
MPRINT(EM_DIAGRAM):   end;
288368    +end;
MPRINT(EM_DIAGRAM):   end;
288369    +
288370    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
288371    +* Variable: NumDistPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumDistPurchases;
288372    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
288373    +LABEL GRP_NumDistPurchases = "Grouped: NumDistPurchases";
MPRINT(EM_DIAGRAM):   LABEL GRP_NumDistPurchases = "Grouped: NumDistPurchases";
288374    +
288375    +if MISSING(NumDistPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumDistPurchases) then do;
288376    +GRP_NumDistPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 1;
288377    +end;
MPRINT(EM_DIAGRAM):   end;
288378    +else if NOT MISSING(NumDistPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumDistPurchases) then do;
288379    +if NumDistPurchases < 3 then do;
MPRINT(EM_DIAGRAM):   if NumDistPurchases < 3 then do;
288380    +GRP_NumDistPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 2;
288381    +end;
MPRINT(EM_DIAGRAM):   end;
288382    +else
288383    +if 3 <= NumDistPurchases AND NumDistPurchases < 6 then do;
MPRINT(EM_DIAGRAM):   else if 3 <= NumDistPurchases AND NumDistPurchases < 6 then do;
288384    +GRP_NumDistPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 3;
288385    +end;
MPRINT(EM_DIAGRAM):   end;
288386    +else
288387    +if 6 <= NumDistPurchases AND NumDistPurchases < 10 then do;
MPRINT(EM_DIAGRAM):   else if 6 <= NumDistPurchases AND NumDistPurchases < 10 then do;
288388    +GRP_NumDistPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 4;
288389    +end;
MPRINT(EM_DIAGRAM):   end;
288390    +else
288391    +if 10 <= NumDistPurchases then do;
MPRINT(EM_DIAGRAM):   else if 10 <= NumDistPurchases then do;
288392    +GRP_NumDistPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 5;
288393    +end;
MPRINT(EM_DIAGRAM):   end;
288394    +end;
MPRINT(EM_DIAGRAM):   end;
288395    +
288396    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
288397    +* Variable: NumWebPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumWebPurchases;
288398    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
288399    +LABEL GRP_NumWebPurchases =
288400    +'Grouped: NumWebPurchases';
MPRINT(EM_DIAGRAM):   LABEL GRP_NumWebPurchases = 'Grouped: NumWebPurchases';
288401    +
288402    +if MISSING(NumWebPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumWebPurchases) then do;
288403    +GRP_NumWebPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 1;
288404    +end;
MPRINT(EM_DIAGRAM):   end;
288405    +else if NOT MISSING(NumWebPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumWebPurchases) then do;
288406    +if NumWebPurchases < 2 then do;
MPRINT(EM_DIAGRAM):   if NumWebPurchases < 2 then do;
288407    +GRP_NumWebPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 2;
288408    +end;
MPRINT(EM_DIAGRAM):   end;
288409    +else
288410    +if 2 <= NumWebPurchases AND NumWebPurchases < 4 then do;
MPRINT(EM_DIAGRAM):   else if 2 <= NumWebPurchases AND NumWebPurchases < 4 then do;
288411    +GRP_NumWebPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 3;
288412    +end;
MPRINT(EM_DIAGRAM):   end;
288413    +else
288414    +if 4 <= NumWebPurchases AND NumWebPurchases < 6 then do;
MPRINT(EM_DIAGRAM):   else if 4 <= NumWebPurchases AND NumWebPurchases < 6 then do;
288415    +GRP_NumWebPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 4;
288416    +end;
MPRINT(EM_DIAGRAM):   end;
288417    +else
288418    +if 6 <= NumWebPurchases then do;
MPRINT(EM_DIAGRAM):   else if 6 <= NumWebPurchases then do;
288419    +GRP_NumWebPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 5;
288420    +end;
MPRINT(EM_DIAGRAM):   end;
288421    +end;
MPRINT(EM_DIAGRAM):   end;
288422    +
288423    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
288424    +* Variable: RFMstat;
MPRINT(EM_DIAGRAM):   * Variable: RFMstat;
288425    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
288426    +LABEL GRP_RFMstat = "Grouped: RFMstat";
MPRINT(EM_DIAGRAM):   LABEL GRP_RFMstat = "Grouped: RFMstat";
288427    +
288428    +if MISSING(RFMstat) then do;
MPRINT(EM_DIAGRAM):   if MISSING(RFMstat) then do;
288429    +GRP_RFMstat = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 1;
288430    +end;
MPRINT(EM_DIAGRAM):   end;
288431    +else if NOT MISSING(RFMstat) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(RFMstat) then do;
288432    +if RFMstat < 10.34 then do;
MPRINT(EM_DIAGRAM):   if RFMstat < 10.34 then do;
288433    +GRP_RFMstat = 2;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 2;
288434    +end;
MPRINT(EM_DIAGRAM):   end;
288435    +else
288436    +if 10.34 <= RFMstat AND RFMstat < 128.09 then do;
MPRINT(EM_DIAGRAM):   else if 10.34 <= RFMstat AND RFMstat < 128.09 then do;
288437    +GRP_RFMstat = 3;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 3;
288438    +end;
MPRINT(EM_DIAGRAM):   end;
288439    +else
288440    +if 128.09 <= RFMstat AND RFMstat < 455.22 then do;
MPRINT(EM_DIAGRAM):   else if 128.09 <= RFMstat AND RFMstat < 455.22 then do;
288441    +GRP_RFMstat = 4;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 4;
288442    +end;
MPRINT(EM_DIAGRAM):   end;
288443    +else
288444    +if 455.22 <= RFMstat then do;
MPRINT(EM_DIAGRAM):   else if 455.22 <= RFMstat then do;
288445    +GRP_RFMstat = 5;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 5;
288446    +end;
MPRINT(EM_DIAGRAM):   end;
288447    +end;
MPRINT(EM_DIAGRAM):   end;
288448    +
288449    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
288450    +* Variable: RMntFrq;
MPRINT(EM_DIAGRAM):   * Variable: RMntFrq;
288451    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
288452    +LABEL GRP_RMntFrq = "Grouped: RMntFrq";
MPRINT(EM_DIAGRAM):   LABEL GRP_RMntFrq = "Grouped: RMntFrq";
288453    +
288454    +if MISSING(RMntFrq) then do;
MPRINT(EM_DIAGRAM):   if MISSING(RMntFrq) then do;
288455    +GRP_RMntFrq = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 1;
288456    +end;
MPRINT(EM_DIAGRAM):   end;
288457    +else if NOT MISSING(RMntFrq) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(RMntFrq) then do;
288458    +if RMntFrq < 13.25 then do;
MPRINT(EM_DIAGRAM):   if RMntFrq < 13.25 then do;
288459    +GRP_RMntFrq = 2;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 2;
288460    +end;
MPRINT(EM_DIAGRAM):   end;
288461    +else
288462    +if 13.25 <= RMntFrq AND RMntFrq < 30.4 then do;
MPRINT(EM_DIAGRAM):   else if 13.25 <= RMntFrq AND RMntFrq < 30.4 then do;
288463    +GRP_RMntFrq = 3;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 3;
288464    +end;
MPRINT(EM_DIAGRAM):   end;
288465    +else
288466    +if 30.4 <= RMntFrq AND RMntFrq < 52.86 then do;
MPRINT(EM_DIAGRAM):   else if 30.4 <= RMntFrq AND RMntFrq < 52.86 then do;
288467    +GRP_RMntFrq = 4;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 4;
288468    +end;
MPRINT(EM_DIAGRAM):   end;
288469    +else
288470    +if 52.86 <= RMntFrq then do;
MPRINT(EM_DIAGRAM):   else if 52.86 <= RMntFrq then do;
288471    +GRP_RMntFrq = 5;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 5;
288472    +end;
MPRINT(EM_DIAGRAM):   end;
288473    +end;
MPRINT(EM_DIAGRAM):   end;
288474    +
288475    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
288476    +* Variable: Recency;
MPRINT(EM_DIAGRAM):   * Variable: Recency;
288477    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
288478    +LABEL GRP_Recency =
288479    +'Grouped: Recency';
MPRINT(EM_DIAGRAM):   LABEL GRP_Recency = 'Grouped: Recency';
288480    +
288481    +if MISSING(Recency) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Recency) then do;
288482    +GRP_Recency = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency = 1;
288483    +end;
MPRINT(EM_DIAGRAM):   end;
288484    +else if NOT MISSING(Recency) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Recency) then do;
288485    +if Recency < 24 then do;
MPRINT(EM_DIAGRAM):   if Recency < 24 then do;
288486    +GRP_Recency = 2;
MPRINT(EM_DIAGRAM):   GRP_Recency = 2;
288487    +end;
MPRINT(EM_DIAGRAM):   end;
288488    +else
288489    +if 24 <= Recency AND Recency < 48 then do;
MPRINT(EM_DIAGRAM):   else if 24 <= Recency AND Recency < 48 then do;
288490    +GRP_Recency = 3;
MPRINT(EM_DIAGRAM):   GRP_Recency = 3;
288491    +end;
MPRINT(EM_DIAGRAM):   end;
288492    +else
288493    +if 48 <= Recency AND Recency < 73 then do;
MPRINT(EM_DIAGRAM):   else if 48 <= Recency AND Recency < 73 then do;
288494    +GRP_Recency = 4;
MPRINT(EM_DIAGRAM):   GRP_Recency = 4;
288495    +end;
MPRINT(EM_DIAGRAM):   end;
288496    +else
288497    +if 73 <= Recency then do;
MPRINT(EM_DIAGRAM):   else if 73 <= Recency then do;
288498    +GRP_Recency = 5;
MPRINT(EM_DIAGRAM):   GRP_Recency = 5;
288499    +end;
MPRINT(EM_DIAGRAM):   end;
288500    +end;
MPRINT(EM_DIAGRAM):   end;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
288501     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
288502     quit;
288503     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
288504     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
288505     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
288506     retain ID 3 Node "BINNING";
MPRINT(EM_DIAGRAM):   retain ID 3 Node "BINNING";
288507     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
288508     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 16 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 16 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

288509     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
288510     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
288511     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 16 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 16 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

288512     proc sort data=EMWS8.BINNING_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.BINNING_variableset out=_temp2(keep=NAME CREATOR);
288513     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
288514     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 36 observations read from the data set EMWS8.BINNING_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 36 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

288515     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
288516     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
288517     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
288518     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 36 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 36 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

288519     proc contents data=EMWS8.BINNING_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.BINNING_train out=_meta(keep=NAME) noprint;
288520     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 59 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

288521     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
288522     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
288523     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 59 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 59 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

288524     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
288525     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
288526     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
288527     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 59 observations read from the data set WORK._META.
NOTE: There were 36 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 59 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

288528     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
288529     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
288529   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 15 rows and 5 columns.

288530     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

288531     proc append base=EMWS8.Ensmbl50_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl50_FCMP data=_tempx;
288532     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL50_FCMP.
NOTE: There were 15 observations read from the data set WORK._TEMPX.
NOTE: 15 observations added.
NOTE: The data set EMWS8.ENSMBL50_FCMP has 1535 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

288533     filename _pref
288533   ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
288534     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
288535     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
288536    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
288537    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
288538    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
288539    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
288540    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
288541    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
288542     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
288543     quit;
288544     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
288545     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
288546     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
288547     retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
288548     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
288549     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

288550     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
288551     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
288552     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

288553     proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
288554     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
288555     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

288556     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
288557     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
288558     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
288559     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

288560     proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
288561     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

288562     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
288563     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
288564     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

288565     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
288566     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
288567     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
288568     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

288569     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
288570     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
288570   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

288571     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

288572     proc append base=EMWS8.Ensmbl50_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl50_FCMP data=_tempx;
288573     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL50_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL50_FCMP has 1539 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

288574     filename _pref
288574   ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
288575     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
288576     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
288577    +
288578    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
288579    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
288579   !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
288580    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
288581    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
288582    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
288583    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
288584    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
288585     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
288586     quit;
288587     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
288588     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
288589     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
288590     retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
288591     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
288592     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

288593     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
288594     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
288595     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

288596     proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
288597     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
288598     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

288599     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
288600     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
288601     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
288602     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

288603     proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
288604     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

288605     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
288606     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
288607     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

288608     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
288609     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
288610     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
288611     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

288612     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
288613     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
288613   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

288614     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

288615     proc append base=EMWS8.Ensmbl50_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl50_FCMP data=_tempx;
288616     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL50_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL50_FCMP has 1578 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

288617     filename _pref
288617   ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
288618     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
288619     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
288620    +
288621    +
288622    +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
288623    +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
288624    +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
288625    +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
288626    +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
288627    +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
288628    +
288629    +
288630    +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
288631    +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
288632    +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
288633    +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
288634    +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
288635    +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
288636    +
288637    +
288638    +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
288639    +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
288640    +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
288641    +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
288642    +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
288643    +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
288644    +
288645    +
288646    +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
288647    +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
288648    +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
288649    +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
288650    +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
288651    +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
288652    +
288653    +
288654    +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
288655    +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
288656    +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
288657    +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
288658    +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
288659    +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
288660    +
288661    +
288662    +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
288663    +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
288664    +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
288665    +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
288666    +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
288667    +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
288668    +
288669    +
288670    +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
288671    +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
288672    +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
288673    +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
288674    +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
288675    +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
288676    +
288677    +
288678    +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
288679    +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
288680    +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
288681    +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
288682    +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
288683    +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
288684    +if
288685    +_FILTERNORM1 not in ( '.')
288686    + and
288687    +_FILTERNORM2 not in ( '.')
288688    + and
288689    +_FILTERNORM3 not in ( '.')
288690    + and
288691    +_FILTERNORM4 not in ( '.')
288692    + and
288693    +_FILTERNORM5 not in ( '.')
288694    + and
288695    +_FILTERNORM6 not in ( '.')
288696    + and
288697    +_FILTERNORM7 not in ( ' ')
288698    + and
288699    +_FILTERNORM8 not in ( ' ')
288700    +and
288701    +( Dt_Customer ne .)
288702    +and ( Income ne . and (Income<=107000))
288703    +and ( Kidhome ne .)
288704    +and ( MntFishProducts ne .)
288705    +and ( MntFruits ne .)
288706    +and ( MntGoldProds ne .)
288707    +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
288708    +and ( MntSweetProducts ne .)
288709    +and ( MntWines ne .)
288710    +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
288711    +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
288712    +and ( NumStorePurchases ne .)
288713    +and ( NumWebPurchases ne .)
288714    +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
288715    +and ( Recency ne .)
288716    +and ( Teenhome ne .)
288717    +and ( Year_Birth ne .)
288718    +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
288719    +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
288720    +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
288721    +end;
MPRINT(EM_DIAGRAM):   end;
288722    +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
288723    +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
288724     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
288725     quit;
288726     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
288727     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
288728     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
288729     retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
288730     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
288731     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

288732     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
288733     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
288734     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

288735     proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
288736     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
288737     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

288738     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
288739     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
288740     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
288741     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

288742     proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
288743     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

288744     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
288745     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
288746     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

288747     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
288748     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
288749     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
288750     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

288751     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
288752     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
288752   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

288753     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

288754     proc append base=EMWS8.Ensmbl50_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl50_FCMP data=_tempx;
288755     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL50_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL50_FCMP has 1644 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

288756     %macro varDept(fcmpdata=,id=);
288757     %global nobs&id scoreFlag&id;
288758     %let scoreFlag&id = 0;
288759     %if &id=1 or ^&fcmpStart %then %do;
288760     proc sort data=&fcmpdata out=_temp&id nodupkey;
288761     by NAME;
288762     where id=&id and LHS in( %let j=1;
288763     %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
288764     %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
288765     "&var" %let j = %eval(&j+1);
288766     %end;
288767     );
288768     run;
288769     %let dsid = %sysfunc(open(_temp&id));
288770     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
288771     %let dsid = %sysfunc(close(&dsid));
288772     %if &&nobs&id %then %do;
288773     %let scoreFlag&id = 1;
288774     %let fcmpStart = 1;
288775     %end;
288776     %else %let fcmpStart = 0;
288777     %end;
288778     %else %do;
288779     proc sort data=&fcmpdata out=_tempid;
288780     where id=&id;
288781     by LHS;
288782     run;
288783     %let dsid = %sysfunc(open(_tempid));
288784     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
288785     %let dsid = %sysfunc(close(&dsid));
288786     %if ^&&nobs&id %then %do;
288787     proc datasets lib=work nolist;
288788     delete _tempid;
288789     run;
288790     quit;
288791     %end;
288792     %else %do;
288793     data _tempAll;
288794     set %let j=%eval(&id-1);
288795     %do x=1 %to &j;
288796     %if &&nobs&x %then %do;
288797     _temp&x %end;
288798     %end;
288799     ;
288800     run;
288801     proc sql;
288802     create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
288802   ! work._tempid p2 where p.name=p2.lhs;
288803     quit;
288804     data _temp&id;
288805     set _temp&id;
288806     where LHS ne '' and NAME ne '' and Node ne '';
288807     run;
288808     proc datasets lib=work nolist;
288809     delete _tempAll;
288810     run;
288811     %let dsid = %sysfunc(open(_temp&id));
288812     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
288813     %let dsid = %sysfunc(close(&dsid));
288814     %if ^&&nobs&id %then %do;
288815     proc datasets lib=work nolist;
288816     delete _temp&id;
288817     run;
288818     quit;
288819     %end;
288820     %else %do;
288821     %let scoreFlag&id = 1;
288822     data _temp&id;
288823     set _temp&id;
288824     where LHS ne NAME and node ne '';
288825     run;
288826     %let dsid = %sysfunc(open(_temp&id));
288827     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
288828     %let dsid = %sysfunc(close(&dsid));
288829     %if ^&&nobs&id %then %do;
288830     proc datasets lib=work nolist;
288831     delete _temp&id;
288832     run;
288833     quit;
288834     %end;
288835     %else %do;
288836     proc sort data=_temp&id nodupkey;
288837     by LHS NAME;
288838     run;
288839     %end;
288840     %end;
288841     %end;
288842     %end;
288843     %mend varDept;
288844     %macro optCode(outdata=fcmpdata);
288845     %global fcmpStart;
288846     %let fcmpStart = 0;
288847     %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
288848     %let NumNodes=9;
288849     %do k=1 %to &NumNodes;
288850     %vardept(fcmpdata=&outdata, id=&k);
288851     %end;
288852     %mend optCode;
288853     %optcode(outData=EMWS8.Ensmbl50_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl50_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL50_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl50_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 111 observations read from the data set EMWS8.ENSMBL50_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 79 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 32 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl50_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 15 observations read from the data set EMWS8.ENSMBL50_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 15 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 32 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 32 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp3 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP3 created, with 14 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP3 has 14 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP3 has 14 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp3 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP3.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP3 has 14 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl50_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL50_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl50_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL50_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 ;
MPRINT(VARDEPT):   run;

NOTE: There were 32 observations read from the data set WORK._TEMP2.
NOTE: There were 14 observations read from the data set WORK._TEMP3.
NOTE: The data set WORK._TEMPALL has 46 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 2 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl50_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL50_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 32 observations read from the data set WORK._TEMP2.
NOTE: There were 14 observations read from the data set WORK._TEMP3.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 48 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 32 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 32 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 32 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 32 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 32 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 32 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 32 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl50_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL50_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 32 observations read from the data set WORK._TEMP2.
NOTE: There were 14 observations read from the data set WORK._TEMP3.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: There were 32 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 80 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl50_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL50_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl50_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL50_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

288854     data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
288855     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
288856     where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
288857     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

288858     data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
288859     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
288860     where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
288861     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

288862     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
288863     create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
288863   ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 2 rows and 3 columns.

288864     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

288865     data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
288866     set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
288867     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 2 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 2 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

288868     data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
288869     set EMWS8.BINNING_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.BINNING_EMSCOREVAR;
288870     where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
288871     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS8.BINNING_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

288872     data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
288873     set EMWS8.BINNING_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.BINNING_EMSCOREVAR;
288874     where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
288875     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.BINNING_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

288876     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
288877     create table _CodeVar7 as select p.lhs, p2.formula, p2.file from _temp3 p,
288877   ! EMWS8.BINNING_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar7 as select p.lhs, p2.formula, p2.file from _temp3 
p, EMWS8.BINNING_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR7 created, with 14 rows and 3 columns.

288878     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

288879     data _CodeVar7;
MPRINT(EM_DIAGRAM):   data _CodeVar7;
288880     set _all_ _CodeVar7 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar7 _postall_;
288881     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK._ALL_.
NOTE: There were 14 observations read from the data set WORK._CODEVAR7.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR7 has 15 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

288882     filename _pref
288882   ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural26\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural26\EMPUBLISHSCORE.sas";
288883     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
288884     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural26\EMPUBLISHSCORE.sas.
288885    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
288886    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
288887    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
288888    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
288889    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
288890    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
288891    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
288892    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
288893    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
288894    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
288895    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
288896    +LENGTH _WARN_ $4
288897    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
288898    +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
288899    +
288900    +      label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
MPRINT(EM_DIAGRAM):   label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
288901    +
288902    +      label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
288903    +
288904    +      label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
288905    +
288906    +      label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
288907    +
288908    +      label GRP_Income2 = 'Dummy: GRP_Income=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Income2 = 'Dummy: GRP_Income=2' ;
288909    +
288910    +      label GRP_Income3 = 'Dummy: GRP_Income=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Income3 = 'Dummy: GRP_Income=3' ;
288911    +
288912    +      label GRP_Income4 = 'Dummy: GRP_Income=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Income4 = 'Dummy: GRP_Income=4' ;
288913    +
288914    +      label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
288915    +
288916    +      label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
288917    +
288918    +      label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
288919    +
288920    +      label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
288921    +
288922    +      label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
288923    +
288924    +      label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
288925    +
288926    +      label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
288927    +
288928    +      label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
288929    +
288930    +      label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
288931    +
288932    +      label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
288933    +
288934    +      label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
288935    +
288936    +      label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
288937    +
288938    +      label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
288939    +
288940    +      label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
288941    +
288942    +      label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
288943    +
288944    +      label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
288945    +
288946    +      label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
288947    +
288948    +      label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
288949    +
288950    +      label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
288951    +
288952    +      label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
288953    +
288954    +      label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
288955    +
288956    +      label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
288957    +
288958    +      label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
288959    +
288960    +      label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
288961    +
288962    +      label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
288963    +
288964    +      label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
288965    +
288966    +      label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
288967    +
288968    +      label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
288969    +
288970    +      label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
288971    +
288972    +      label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
288973    +
288974    +      label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
288975    +
288976    +      label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
288977    +
288978    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
288979    +
288980    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
288981    +
288982    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
288983    +
288984    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
288985    +
288986    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
288987    +
288988    +*** Generate dummy variables for GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmp5 ;
288989    +drop GRP_AcceptedCmp52 ;
MPRINT(EM_DIAGRAM):   drop GRP_AcceptedCmp52 ;
288990    +if missing( GRP_AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmp5 ) then do;
288991    +   GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
288992    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
288993    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
288994    +end;
MPRINT(EM_DIAGRAM):   end;
288995    +else do;
MPRINT(EM_DIAGRAM):   else do;
288996    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
288997    +   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
288998    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
288999    +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
289000    +      GRP_AcceptedCmp52 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = 1;
289001    +   end;
MPRINT(EM_DIAGRAM):   end;
289002    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
289003    +      GRP_AcceptedCmp52 = -1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = -1;
289004    +   end;
MPRINT(EM_DIAGRAM):   end;
289005    +   else do;
MPRINT(EM_DIAGRAM):   else do;
289006    +      GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
289007    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
289008    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
289009    +   end;
MPRINT(EM_DIAGRAM):   end;
289010    +end;
MPRINT(EM_DIAGRAM):   end;
289011    +
289012    +*** Generate dummy variables for GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Frq ;
289013    +drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
289014    +if missing( GRP_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Frq ) then do;
289015    +   GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
289016    +   GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
289017    +   GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
289018    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
289019    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
289020    +end;
MPRINT(EM_DIAGRAM):   end;
289021    +else do;
MPRINT(EM_DIAGRAM):   else do;
289022    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
289023    +   _dm12 = put( GRP_Frq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Frq , BEST12. );
289024    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
289025    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
289026    +      GRP_Frq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = -1;
289027    +      GRP_Frq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = -1;
289028    +      GRP_Frq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = -1;
289029    +   end;
MPRINT(EM_DIAGRAM):   end;
289030    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
289031    +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
289032    +      GRP_Frq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 1;
289033    +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
289034    +   end;
MPRINT(EM_DIAGRAM):   end;
289035    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
289036    +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
289037    +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
289038    +      GRP_Frq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 1;
289039    +   end;
MPRINT(EM_DIAGRAM):   end;
289040    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
289041    +      GRP_Frq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 1;
289042    +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
289043    +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
289044    +   end;
MPRINT(EM_DIAGRAM):   end;
289045    +   else do;
MPRINT(EM_DIAGRAM):   else do;
289046    +      GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
289047    +      GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
289048    +      GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
289049    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
289050    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
289051    +   end;
MPRINT(EM_DIAGRAM):   end;
289052    +end;
MPRINT(EM_DIAGRAM):   end;
289053    +
289054    +*** Generate dummy variables for GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Income ;
289055    +drop GRP_Income2 GRP_Income3 GRP_Income4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Income2 GRP_Income3 GRP_Income4 ;
289056    +if missing( GRP_Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Income ) then do;
289057    +   GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
289058    +   GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
289059    +   GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
289060    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
289061    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
289062    +end;
MPRINT(EM_DIAGRAM):   end;
289063    +else do;
MPRINT(EM_DIAGRAM):   else do;
289064    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
289065    +   _dm12 = put( GRP_Income , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Income , BEST12. );
289066    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
289067    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
289068    +      GRP_Income2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = -1;
289069    +      GRP_Income3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = -1;
289070    +      GRP_Income4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = -1;
289071    +   end;
MPRINT(EM_DIAGRAM):   end;
289072    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
289073    +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
289074    +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
289075    +      GRP_Income4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 1;
289076    +   end;
MPRINT(EM_DIAGRAM):   end;
289077    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
289078    +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
289079    +      GRP_Income3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 1;
289080    +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
289081    +   end;
MPRINT(EM_DIAGRAM):   end;
289082    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
289083    +      GRP_Income2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 1;
289084    +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
289085    +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
289086    +   end;
MPRINT(EM_DIAGRAM):   end;
289087    +   else do;
MPRINT(EM_DIAGRAM):   else do;
289088    +      GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
289089    +      GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
289090    +      GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
289091    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
289092    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
289093    +   end;
MPRINT(EM_DIAGRAM):   end;
289094    +end;
MPRINT(EM_DIAGRAM):   end;
289095    +
289096    +*** Generate dummy variables for GRP_Mnt ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Mnt ;
289097    +drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
289098    +if missing( GRP_Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Mnt ) then do;
289099    +   GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
289100    +   GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
289101    +   GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
289102    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
289103    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
289104    +end;
MPRINT(EM_DIAGRAM):   end;
289105    +else do;
MPRINT(EM_DIAGRAM):   else do;
289106    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
289107    +   _dm12 = put( GRP_Mnt , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Mnt , BEST12. );
289108    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
289109    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
289110    +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
289111    +      GRP_Mnt3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 1;
289112    +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
289113    +   end;
MPRINT(EM_DIAGRAM):   end;
289114    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
289115    +      GRP_Mnt2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = -1;
289116    +      GRP_Mnt3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = -1;
289117    +      GRP_Mnt4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = -1;
289118    +   end;
MPRINT(EM_DIAGRAM):   end;
289119    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
289120    +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
289121    +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
289122    +      GRP_Mnt4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 1;
289123    +   end;
MPRINT(EM_DIAGRAM):   end;
289124    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
289125    +      GRP_Mnt2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 1;
289126    +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
289127    +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
289128    +   end;
MPRINT(EM_DIAGRAM):   end;
289129    +   else do;
MPRINT(EM_DIAGRAM):   else do;
289130    +      GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
289131    +      GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
289132    +      GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
289133    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
289134    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
289135    +   end;
MPRINT(EM_DIAGRAM):   end;
289136    +end;
MPRINT(EM_DIAGRAM):   end;
289137    +
289138    +*** Generate dummy variables for GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntFishProducts ;
289139    +drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
289140    +if missing( GRP_MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntFishProducts ) then do;
289141    +   GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
289142    +   GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
289143    +   GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
289144    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
289145    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
289146    +end;
MPRINT(EM_DIAGRAM):   end;
289147    +else do;
MPRINT(EM_DIAGRAM):   else do;
289148    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
289149    +   _dm12 = put( GRP_MntFishProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntFishProducts , BEST12. );
289150    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
289151    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
289152    +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
289153    +      GRP_MntFishProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 1;
289154    +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
289155    +   end;
MPRINT(EM_DIAGRAM):   end;
289156    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
289157    +      GRP_MntFishProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = -1;
289158    +      GRP_MntFishProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = -1;
289159    +      GRP_MntFishProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = -1;
289160    +   end;
MPRINT(EM_DIAGRAM):   end;
289161    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
289162    +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
289163    +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
289164    +      GRP_MntFishProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 1;
289165    +   end;
MPRINT(EM_DIAGRAM):   end;
289166    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
289167    +      GRP_MntFishProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 1;
289168    +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
289169    +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
289170    +   end;
MPRINT(EM_DIAGRAM):   end;
289171    +   else do;
MPRINT(EM_DIAGRAM):   else do;
289172    +      GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
289173    +      GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
289174    +      GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
289175    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
289176    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
289177    +   end;
MPRINT(EM_DIAGRAM):   end;
289178    +end;
MPRINT(EM_DIAGRAM):   end;
289179    +
289180    +*** Generate dummy variables for GRP_MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntGoldProds ;
289181    +drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
289182    +if missing( GRP_MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntGoldProds ) then do;
289183    +   GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
289184    +   GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
289185    +   GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
289186    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
289187    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
289188    +end;
MPRINT(EM_DIAGRAM):   end;
289189    +else do;
MPRINT(EM_DIAGRAM):   else do;
289190    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
289191    +   _dm12 = put( GRP_MntGoldProds , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntGoldProds , BEST12. );
289192    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
289193    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
289194    +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
289195    +      GRP_MntGoldProds3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 1;
289196    +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
289197    +   end;
MPRINT(EM_DIAGRAM):   end;
289198    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
289199    +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
289200    +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
289201    +      GRP_MntGoldProds4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 1;
289202    +   end;
MPRINT(EM_DIAGRAM):   end;
289203    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
289204    +      GRP_MntGoldProds2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = -1;
289205    +      GRP_MntGoldProds3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = -1;
289206    +      GRP_MntGoldProds4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = -1;
289207    +   end;
MPRINT(EM_DIAGRAM):   end;
289208    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
289209    +      GRP_MntGoldProds2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 1;
289210    +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
289211    +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
289212    +   end;
MPRINT(EM_DIAGRAM):   end;
289213    +   else do;
MPRINT(EM_DIAGRAM):   else do;
289214    +      GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
289215    +      GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
289216    +      GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
289217    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
289218    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
289219    +   end;
MPRINT(EM_DIAGRAM):   end;
289220    +end;
MPRINT(EM_DIAGRAM):   end;
289221    +
289222    +*** Generate dummy variables for GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntMeatProducts ;
289223    +drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
289224    +if missing( GRP_MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntMeatProducts ) then do;
289225    +   GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
289226    +   GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
289227    +   GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
289228    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
289229    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
289230    +end;
MPRINT(EM_DIAGRAM):   end;
289231    +else do;
MPRINT(EM_DIAGRAM):   else do;
289232    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
289233    +   _dm12 = put( GRP_MntMeatProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntMeatProducts , BEST12. );
289234    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
289235    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
289236    +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
289237    +      GRP_MntMeatProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 1;
289238    +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
289239    +   end;
MPRINT(EM_DIAGRAM):   end;
289240    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
289241    +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
289242    +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
289243    +      GRP_MntMeatProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 1;
289244    +   end;
MPRINT(EM_DIAGRAM):   end;
289245    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
289246    +      GRP_MntMeatProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = -1;
289247    +      GRP_MntMeatProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = -1;
289248    +      GRP_MntMeatProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = -1;
289249    +   end;
MPRINT(EM_DIAGRAM):   end;
289250    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
289251    +      GRP_MntMeatProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 1;
289252    +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
289253    +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
289254    +   end;
MPRINT(EM_DIAGRAM):   end;
289255    +   else do;
MPRINT(EM_DIAGRAM):   else do;
289256    +      GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
289257    +      GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
289258    +      GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
289259    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
289260    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
289261    +   end;
MPRINT(EM_DIAGRAM):   end;
289262    +end;
MPRINT(EM_DIAGRAM):   end;
289263    +
289264    +*** Generate dummy variables for GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntWines ;
289265    +drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
289266    +if missing( GRP_MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntWines ) then do;
289267    +   GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
289268    +   GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
289269    +   GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
289270    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
289271    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
289272    +end;
MPRINT(EM_DIAGRAM):   end;
289273    +else do;
MPRINT(EM_DIAGRAM):   else do;
289274    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
289275    +   _dm12 = put( GRP_MntWines , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntWines , BEST12. );
289276    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
289277    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
289278    +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
289279    +      GRP_MntWines3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 1;
289280    +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
289281    +   end;
MPRINT(EM_DIAGRAM):   end;
289282    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
289283    +      GRP_MntWines2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = -1;
289284    +      GRP_MntWines3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = -1;
289285    +      GRP_MntWines4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = -1;
289286    +   end;
MPRINT(EM_DIAGRAM):   end;
289287    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
289288    +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
289289    +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
289290    +      GRP_MntWines4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 1;
289291    +   end;
MPRINT(EM_DIAGRAM):   end;
289292    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
289293    +      GRP_MntWines2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 1;
289294    +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
289295    +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
289296    +   end;
MPRINT(EM_DIAGRAM):   end;
289297    +   else do;
MPRINT(EM_DIAGRAM):   else do;
289298    +      GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
289299    +      GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
289300    +      GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
289301    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
289302    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
289303    +   end;
MPRINT(EM_DIAGRAM):   end;
289304    +end;
MPRINT(EM_DIAGRAM):   end;
289305    +
289306    +*** Generate dummy variables for GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumCatalogPurchases ;
289307    +drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
289308    +if missing( GRP_NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumCatalogPurchases ) then do;
289309    +   GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
289310    +   GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
289311    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
289312    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
289313    +end;
MPRINT(EM_DIAGRAM):   end;
289314    +else do;
MPRINT(EM_DIAGRAM):   else do;
289315    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
289316    +   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
289317    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
289318    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
289319    +      GRP_NumCatalogPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 1;
289320    +      GRP_NumCatalogPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 0;
289321    +   end;
MPRINT(EM_DIAGRAM):   end;
289322    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
289323    +      GRP_NumCatalogPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = -1;
289324    +      GRP_NumCatalogPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = -1;
289325    +   end;
MPRINT(EM_DIAGRAM):   end;
289326    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
289327    +      GRP_NumCatalogPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 0;
289328    +      GRP_NumCatalogPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 1;
289329    +   end;
MPRINT(EM_DIAGRAM):   end;
289330    +   else do;
MPRINT(EM_DIAGRAM):   else do;
289331    +      GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
289332    +      GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
289333    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
289334    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
289335    +   end;
MPRINT(EM_DIAGRAM):   end;
289336    +end;
MPRINT(EM_DIAGRAM):   end;
289337    +
289338    +*** Generate dummy variables for GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumDistPurchases ;
289339    +drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
289340    +if missing( GRP_NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumDistPurchases ) then do;
289341    +   GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
289342    +   GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
289343    +   GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
289344    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
289345    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
289346    +end;
MPRINT(EM_DIAGRAM):   end;
289347    +else do;
MPRINT(EM_DIAGRAM):   else do;
289348    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
289349    +   _dm12 = put( GRP_NumDistPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumDistPurchases , BEST12. );
289350    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
289351    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
289352    +      GRP_NumDistPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = -1;
289353    +      GRP_NumDistPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = -1;
289354    +      GRP_NumDistPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = -1;
289355    +   end;
MPRINT(EM_DIAGRAM):   end;
289356    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
289357    +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
289358    +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
289359    +      GRP_NumDistPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 1;
289360    +   end;
MPRINT(EM_DIAGRAM):   end;
289361    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
289362    +      GRP_NumDistPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 1;
289363    +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
289364    +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
289365    +   end;
MPRINT(EM_DIAGRAM):   end;
289366    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
289367    +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
289368    +      GRP_NumDistPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 1;
289369    +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
289370    +   end;
MPRINT(EM_DIAGRAM):   end;
289371    +   else do;
MPRINT(EM_DIAGRAM):   else do;
289372    +      GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
289373    +      GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
289374    +      GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
289375    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
289376    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
289377    +   end;
MPRINT(EM_DIAGRAM):   end;
289378    +end;
MPRINT(EM_DIAGRAM):   end;
289379    +
289380    +*** Generate dummy variables for GRP_NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumWebPurchases ;
289381    +drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
289382    +if missing( GRP_NumWebPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumWebPurchases ) then do;
289383    +   GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
289384    +   GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
289385    +   GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
289386    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
289387    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
289388    +end;
MPRINT(EM_DIAGRAM):   end;
289389    +else do;
MPRINT(EM_DIAGRAM):   else do;
289390    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
289391    +   _dm12 = put( GRP_NumWebPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumWebPurchases , BEST12. );
289392    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
289393    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
289394    +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
289395    +      GRP_NumWebPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 1;
289396    +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
289397    +   end;
MPRINT(EM_DIAGRAM):   end;
289398    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
289399    +      GRP_NumWebPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = -1;
289400    +      GRP_NumWebPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = -1;
289401    +      GRP_NumWebPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = -1;
289402    +   end;
MPRINT(EM_DIAGRAM):   end;
289403    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
289404    +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
289405    +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
289406    +      GRP_NumWebPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 1;
289407    +   end;
MPRINT(EM_DIAGRAM):   end;
289408    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
289409    +      GRP_NumWebPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 1;
289410    +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
289411    +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
289412    +   end;
MPRINT(EM_DIAGRAM):   end;
289413    +   else do;
MPRINT(EM_DIAGRAM):   else do;
289414    +      GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
289415    +      GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
289416    +      GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
289417    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
289418    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
289419    +   end;
MPRINT(EM_DIAGRAM):   end;
289420    +end;
MPRINT(EM_DIAGRAM):   end;
289421    +
289422    +*** Generate dummy variables for GRP_RFMstat ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RFMstat ;
289423    +drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
289424    +if missing( GRP_RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RFMstat ) then do;
289425    +   GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
289426    +   GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
289427    +   GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
289428    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
289429    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
289430    +end;
MPRINT(EM_DIAGRAM):   end;
289431    +else do;
MPRINT(EM_DIAGRAM):   else do;
289432    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
289433    +   _dm12 = put( GRP_RFMstat , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RFMstat , BEST12. );
289434    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
289435    +   if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
289436    +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
289437    +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
289438    +      GRP_RFMstat4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 1;
289439    +   end;
MPRINT(EM_DIAGRAM):   end;
289440    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
289441    +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
289442    +      GRP_RFMstat3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 1;
289443    +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
289444    +   end;
MPRINT(EM_DIAGRAM):   end;
289445    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
289446    +      GRP_RFMstat2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = -1;
289447    +      GRP_RFMstat3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = -1;
289448    +      GRP_RFMstat4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = -1;
289449    +   end;
MPRINT(EM_DIAGRAM):   end;
289450    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
289451    +      GRP_RFMstat2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 1;
289452    +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
289453    +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
289454    +   end;
MPRINT(EM_DIAGRAM):   end;
289455    +   else do;
MPRINT(EM_DIAGRAM):   else do;
289456    +      GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
289457    +      GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
289458    +      GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
289459    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
289460    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
289461    +   end;
MPRINT(EM_DIAGRAM):   end;
289462    +end;
MPRINT(EM_DIAGRAM):   end;
289463    +
289464    +*** Generate dummy variables for GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RMntFrq ;
289465    +drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
289466    +if missing( GRP_RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RMntFrq ) then do;
289467    +   GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
289468    +   GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
289469    +   GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
289470    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
289471    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
289472    +end;
MPRINT(EM_DIAGRAM):   end;
289473    +else do;
MPRINT(EM_DIAGRAM):   else do;
289474    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
289475    +   _dm12 = put( GRP_RMntFrq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RMntFrq , BEST12. );
289476    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
289477    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
289478    +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
289479    +      GRP_RMntFrq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 1;
289480    +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
289481    +   end;
MPRINT(EM_DIAGRAM):   end;
289482    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
289483    +      GRP_RMntFrq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = -1;
289484    +      GRP_RMntFrq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = -1;
289485    +      GRP_RMntFrq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = -1;
289486    +   end;
MPRINT(EM_DIAGRAM):   end;
289487    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
289488    +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
289489    +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
289490    +      GRP_RMntFrq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 1;
289491    +   end;
MPRINT(EM_DIAGRAM):   end;
289492    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
289493    +      GRP_RMntFrq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 1;
289494    +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
289495    +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
289496    +   end;
MPRINT(EM_DIAGRAM):   end;
289497    +   else do;
MPRINT(EM_DIAGRAM):   else do;
289498    +      GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
289499    +      GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
289500    +      GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
289501    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
289502    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
289503    +   end;
MPRINT(EM_DIAGRAM):   end;
289504    +end;
MPRINT(EM_DIAGRAM):   end;
289505    +
289506    +*** Generate dummy variables for GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Recency ;
289507    +drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
289508    +if missing( GRP_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Recency ) then do;
289509    +   GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
289510    +   GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
289511    +   GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
289512    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
289513    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
289514    +end;
MPRINT(EM_DIAGRAM):   end;
289515    +else do;
MPRINT(EM_DIAGRAM):   else do;
289516    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
289517    +   _dm12 = put( GRP_Recency , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Recency , BEST12. );
289518    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
289519    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
289520    +      GRP_Recency2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = -1;
289521    +      GRP_Recency3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = -1;
289522    +      GRP_Recency4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = -1;
289523    +   end;
MPRINT(EM_DIAGRAM):   end;
289524    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
289525    +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
289526    +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
289527    +      GRP_Recency4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 1;
289528    +   end;
MPRINT(EM_DIAGRAM):   end;
289529    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
289530    +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
289531    +      GRP_Recency3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 1;
289532    +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
289533    +   end;
MPRINT(EM_DIAGRAM):   end;
289534    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
289535    +      GRP_Recency2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 1;
289536    +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
289537    +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
289538    +   end;
MPRINT(EM_DIAGRAM):   end;
289539    +   else do;
MPRINT(EM_DIAGRAM):   else do;
289540    +      GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
289541    +      GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
289542    +      GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
289543    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
289544    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
289545    +   end;
MPRINT(EM_DIAGRAM):   end;
289546    +end;
MPRINT(EM_DIAGRAM):   end;
289547    +
289548    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
289549    +*** Checking missing input Interval
289550    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
289551    +
289552    +IF NMISS(
289553    +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Year_Birth ) THEN DO;
289554    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
289555    +
289556    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
289557    +END;
MPRINT(EM_DIAGRAM):   END;
289558    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
289559    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
289560    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
289561    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
289562    +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
289563    +END;
MPRINT(EM_DIAGRAM):   END;
289564    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
289565    +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
289566    +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
289567    +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
289568    +END;
MPRINT(EM_DIAGRAM):   END;
289569    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
289570    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
289571    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
289572    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
289573    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
289574    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
289575    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
289576    +   P_DepVar1  =     0.19741981116929 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.19741981116929 * S_Year_Birth ;
289577    +   P_DepVar1  = P_DepVar1  +    -1.04029441471903 * GRP_AcceptedCmp52
289578    +          +     1.55639377678382 * GRP_Frq2  +     0.31938212279872 * GRP_Frq3
289579    +          +    -0.51953925921981 * GRP_Frq4  +     0.69747847384334 *
289580    +        GRP_Income2  +     0.68377449690467 * GRP_Income3
289581    +          +    -0.69559233910784 * GRP_Income4  +    -0.33403886861179 *
289582    +        GRP_Mnt2  +    -0.23948445463576 * GRP_Mnt3  +     0.22705363969173 *
289583    +        GRP_Mnt4  +      0.5581826092154 * GRP_MntFishProducts2
289584    +          +     0.11895902038445 * GRP_MntFishProducts3
289585    +          +     -0.0194508409368 * GRP_MntFishProducts4
289586    +          +    -0.27172158371684 * GRP_MntGoldProds2
289587    +          +    -0.06617094209943 * GRP_MntGoldProds3
289588    +          +     0.04665050332743 * GRP_MntGoldProds4
289589    +          +    -0.97879858925028 * GRP_MntMeatProducts2
289590    +          +    -0.16953024357929 * GRP_MntMeatProducts3
289591    +          +     0.36702521764699 * GRP_MntMeatProducts4
289592    +          +     0.66896729653839 * GRP_MntWines2  +     0.41828147331708 *
289593    +        GRP_MntWines3  +    -0.39747979825201 * GRP_MntWines4
289594    +          +    -0.78725283014847 * GRP_NumCatalogPurchases3
289595    +          +     0.03702534142798 * GRP_NumCatalogPurchases4
289596    +          +    -1.86131730329435 * GRP_NumDistPurchases2
289597    +          +     -0.1744815262149 * GRP_NumDistPurchases3
289598    +          +     0.29974863559738 * GRP_NumDistPurchases4
289599    +          +     0.08237783693138 * GRP_NumWebPurchases2
289600    +          +     0.08904902237334 * GRP_NumWebPurchases3
289601    +          +     0.01729681908858 * GRP_NumWebPurchases4
289602    +          +    -0.55907537974858 * GRP_RFMstat2  +    -0.19529268587261 *
289603    +        GRP_RFMstat3  +     0.03932842736914 * GRP_RFMstat4
289604    +          +     0.24491355758464 * GRP_RMntFrq2  +     0.27364945694495 *
289605    +        GRP_RMntFrq3  +    -0.64678260362233 * GRP_RMntFrq4
289606    +          +     1.49706726643373 * GRP_Recency2  +     0.20083168709986 *
289607    +        GRP_Recency3  +    -0.57834308365674 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 + -1.04029441471903 * GRP_AcceptedCmp52 + 
1.55639377678382 * GRP_Frq2 + 0.31938212279872 * GRP_Frq3 + -0.51953925921981 * GRP_Frq4 + 
0.69747847384334 * GRP_Income2 + 0.68377449690467 * GRP_Income3 + -0.69559233910784 * 
GRP_Income4 + -0.33403886861179 * GRP_Mnt2 + -0.23948445463576 * GRP_Mnt3 + 0.22705363969173 * 
GRP_Mnt4 + 0.5581826092154 * GRP_MntFishProducts2 + 0.11895902038445 * GRP_MntFishProducts3 + 
-0.0194508409368 * GRP_MntFishProducts4 + -0.27172158371684 * GRP_MntGoldProds2 + 
-0.06617094209943 * GRP_MntGoldProds3 + 0.04665050332743 * GRP_MntGoldProds4 + 
-0.97879858925028 * GRP_MntMeatProducts2 + -0.16953024357929 * GRP_MntMeatProducts3 + 
0.36702521764699 * GRP_MntMeatProducts4 + 0.66896729653839 * GRP_MntWines2 + 0.41828147331708 
* GRP_MntWines3 + -0.39747979825201 * GRP_MntWines4 + -0.78725283014847 * 
GRP_NumCatalogPurchases3 + 0.03702534142798 * GRP_NumCatalogPurchases4 + -1.86131730329435 * 
GRP_NumDistPurchases2 + -0.1744815262149 * GRP_NumDistPurchases3 + 0.29974863559738 * 
GRP_NumDistPurchases4 + 0.08237783693138 * GRP_NumWebPurchases2 + 0.08904902237334 * 
GRP_NumWebPurchases3 + 0.01729681908858 * GRP_NumWebPurchases4 + -0.55907537974858 * 
GRP_RFMstat2 + -0.19529268587261 * GRP_RFMstat3 + 0.03932842736914 * GRP_RFMstat4 + 
0.24491355758464 * GRP_RMntFrq2 + 0.27364945694495 * GRP_RMntFrq3 + -0.64678260362233 * 
GRP_RMntFrq4 + 1.49706726643373 * GRP_Recency2 + 0.20083168709986 * GRP_Recency3 + 
-0.57834308365674 * GRP_Recency4 ;
289608    +   P_DepVar1  =    -1.16466009831369 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.16466009831369 + P_DepVar1 ;
289609    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
289610    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
289611    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
289612    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
289613    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
289614    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
289615    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
289616    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
289617    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
289618    +END;
MPRINT(EM_DIAGRAM):   END;
289619    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
289620    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
289621    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
289622    +END;
MPRINT(EM_DIAGRAM):   END;
289623    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
289624    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
289625    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
289626    +END;
MPRINT(EM_DIAGRAM):   END;
289627    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
289628    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
289629    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
289630    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
289631    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
289632    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
289633    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
289634    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
289635    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
289636    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
289637    +END;
MPRINT(EM_DIAGRAM):   END;
289638    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
289639    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
289640    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
289641    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
289642     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_DIAGRAM):   quit;
289643     quit;
289644     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
289645     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
289646     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
289647     retain ID 2 Node "AutoNeural26";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural26";
289648     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
289649     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1290 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1290 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

289650     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
289651     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
289652     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1290 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1290 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

289653     proc sort data=EMWS8.AutoNeural26_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural26_variableset out=_temp2(keep=NAME 
CREATOR);
289654     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
289655     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 48 observations read from the data set EMWS8.AUTONEURAL26_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 48 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

289656     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
289657     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
289658     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
289659     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 48 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 48 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

289660     proc contents data=EMWS8.AutoNeural26_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural26_train out=_meta(keep=NAME) noprint;
289661     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 67 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

289662     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
289663     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
289664     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 67 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 67 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

289665     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
289666     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
289667     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
289668     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 67 observations read from the data set WORK._META.
NOTE: There were 48 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 67 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

289669     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
289670     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
289670   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 775 rows and 5 columns.

289671     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

289672     proc append base=EMWS8.Ensmbl50_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl50_FCMP data=_tempx;
289673     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL50_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 775 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL50_FCMP has 775 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

289674     filename _pref
289674   ! "C:\\predictive-models-project\Workspaces\EMWS8\BINNING\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\BINNING\EMPUBLISHSCORE.sas";
289675     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
289676     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\BINNING\EMPUBLISHSCORE.sas.
289677    +length _UFormat $200;
MPRINT(EM_DIAGRAM):   length _UFormat $200;
289678    +drop _UFormat;
MPRINT(EM_DIAGRAM):   drop _UFormat;
289679    +_UFormat='';
MPRINT(EM_DIAGRAM):   _UFormat='';
289680    +
289681    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
289682    +* Variable: AcceptedCmp5;
MPRINT(EM_DIAGRAM):   * Variable: AcceptedCmp5;
289683    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
289684    +LABEL GRP_AcceptedCmp5 =
289685    +'Grouped: AcceptedCmp5';
MPRINT(EM_DIAGRAM):   LABEL GRP_AcceptedCmp5 = 'Grouped: AcceptedCmp5';
289686    +
289687    +_UFormat = put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _UFormat = put(AcceptedCmp5,BEST.);
289688    +%dmnormip(_UFormat);
MPRINT(DMNORMIP):   call dmnorm(_UFormat,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
289689    +if MISSING(_UFORMAT) then do;
MPRINT(EM_DIAGRAM):   if MISSING(_UFORMAT) then do;
289690    +GRP_AcceptedCmp5 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 1;
289691    +end;
MPRINT(EM_DIAGRAM):   end;
289692    +else if NOT MISSING(_UFORMAT) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(_UFORMAT) then do;
289693    +if (_UFORMAT eq '0'
289694    +) then do;
MPRINT(EM_DIAGRAM):   if (_UFORMAT eq '0' ) then do;
289695    +GRP_AcceptedCmp5 = 2;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 2;
289696    +end;
MPRINT(EM_DIAGRAM):   end;
289697    +else
289698    +if (_UFORMAT eq '1'
289699    +) then do;
MPRINT(EM_DIAGRAM):   else if (_UFORMAT eq '1' ) then do;
289700    +GRP_AcceptedCmp5 = 3;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 3;
289701    +end;
MPRINT(EM_DIAGRAM):   end;
289702    +else do;
MPRINT(EM_DIAGRAM):   else do;
289703    +GRP_AcceptedCmp5 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 1;
289704    +end;
MPRINT(EM_DIAGRAM):   end;
289705    +end;
MPRINT(EM_DIAGRAM):   end;
289706    +
289707    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
289708    +* Variable: Frq;
MPRINT(EM_DIAGRAM):   * Variable: Frq;
289709    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
289710    +LABEL GRP_Frq = "Grouped: Frq";
MPRINT(EM_DIAGRAM):   LABEL GRP_Frq = "Grouped: Frq";
289711    +
289712    +if MISSING(Frq) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Frq) then do;
289713    +GRP_Frq = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq = 1;
289714    +end;
MPRINT(EM_DIAGRAM):   end;
289715    +else if NOT MISSING(Frq) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Frq) then do;
289716    +if Frq < 6 then do;
MPRINT(EM_DIAGRAM):   if Frq < 6 then do;
289717    +GRP_Frq = 2;
MPRINT(EM_DIAGRAM):   GRP_Frq = 2;
289718    +end;
MPRINT(EM_DIAGRAM):   end;
289719    +else
289720    +if 6 <= Frq AND Frq < 12 then do;
MPRINT(EM_DIAGRAM):   else if 6 <= Frq AND Frq < 12 then do;
289721    +GRP_Frq = 3;
MPRINT(EM_DIAGRAM):   GRP_Frq = 3;
289722    +end;
MPRINT(EM_DIAGRAM):   end;
289723    +else
289724    +if 12 <= Frq AND Frq < 18 then do;
MPRINT(EM_DIAGRAM):   else if 12 <= Frq AND Frq < 18 then do;
289725    +GRP_Frq = 4;
MPRINT(EM_DIAGRAM):   GRP_Frq = 4;
289726    +end;
MPRINT(EM_DIAGRAM):   end;
289727    +else
289728    +if 18 <= Frq then do;
MPRINT(EM_DIAGRAM):   else if 18 <= Frq then do;
289729    +GRP_Frq = 5;
MPRINT(EM_DIAGRAM):   GRP_Frq = 5;
289730    +end;
MPRINT(EM_DIAGRAM):   end;
289731    +end;
MPRINT(EM_DIAGRAM):   end;
289732    +
289733    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
289734    +* Variable: Income;
MPRINT(EM_DIAGRAM):   * Variable: Income;
289735    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
289736    +LABEL GRP_Income =
289737    +'Grouped: Income';
MPRINT(EM_DIAGRAM):   LABEL GRP_Income = 'Grouped: Income';
289738    +
289739    +if MISSING(Income) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Income) then do;
289740    +GRP_Income = 1;
MPRINT(EM_DIAGRAM):   GRP_Income = 1;
289741    +end;
MPRINT(EM_DIAGRAM):   end;
289742    +else if NOT MISSING(Income) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Income) then do;
289743    +if Income < 35268 then do;
MPRINT(EM_DIAGRAM):   if Income < 35268 then do;
289744    +GRP_Income = 2;
MPRINT(EM_DIAGRAM):   GRP_Income = 2;
289745    +end;
MPRINT(EM_DIAGRAM):   end;
289746    +else
289747    +if 35268 <= Income AND Income < 52157 then do;
MPRINT(EM_DIAGRAM):   else if 35268 <= Income AND Income < 52157 then do;
289748    +GRP_Income = 3;
MPRINT(EM_DIAGRAM):   GRP_Income = 3;
289749    +end;
MPRINT(EM_DIAGRAM):   end;
289750    +else
289751    +if 52157 <= Income AND Income < 69486 then do;
MPRINT(EM_DIAGRAM):   else if 52157 <= Income AND Income < 69486 then do;
289752    +GRP_Income = 4;
MPRINT(EM_DIAGRAM):   GRP_Income = 4;
289753    +end;
MPRINT(EM_DIAGRAM):   end;
289754    +else
289755    +if 69486 <= Income then do;
MPRINT(EM_DIAGRAM):   else if 69486 <= Income then do;
289756    +GRP_Income = 5;
MPRINT(EM_DIAGRAM):   GRP_Income = 5;
289757    +end;
MPRINT(EM_DIAGRAM):   end;
289758    +end;
MPRINT(EM_DIAGRAM):   end;
289759    +
289760    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
289761    +* Variable: Mnt;
MPRINT(EM_DIAGRAM):   * Variable: Mnt;
289762    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
289763    +LABEL GRP_Mnt = "Grouped: Mnt";
MPRINT(EM_DIAGRAM):   LABEL GRP_Mnt = "Grouped: Mnt";
289764    +
289765    +if MISSING(Mnt) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Mnt) then do;
289766    +GRP_Mnt = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 1;
289767    +end;
MPRINT(EM_DIAGRAM):   end;
289768    +else if NOT MISSING(Mnt) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Mnt) then do;
289769    +if Mnt < 72 then do;
MPRINT(EM_DIAGRAM):   if Mnt < 72 then do;
289770    +GRP_Mnt = 2;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 2;
289771    +end;
MPRINT(EM_DIAGRAM):   end;
289772    +else
289773    +if 72 <= Mnt AND Mnt < 405.5 then do;
MPRINT(EM_DIAGRAM):   else if 72 <= Mnt AND Mnt < 405.5 then do;
289774    +GRP_Mnt = 3;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 3;
289775    +end;
MPRINT(EM_DIAGRAM):   end;
289776    +else
289777    +if 405.5 <= Mnt AND Mnt < 1064 then do;
MPRINT(EM_DIAGRAM):   else if 405.5 <= Mnt AND Mnt < 1064 then do;
289778    +GRP_Mnt = 4;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 4;
289779    +end;
MPRINT(EM_DIAGRAM):   end;
289780    +else
289781    +if 1064 <= Mnt then do;
MPRINT(EM_DIAGRAM):   else if 1064 <= Mnt then do;
289782    +GRP_Mnt = 5;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 5;
289783    +end;
MPRINT(EM_DIAGRAM):   end;
289784    +end;
MPRINT(EM_DIAGRAM):   end;
289785    +
289786    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
289787    +* Variable: MntFishProducts;
MPRINT(EM_DIAGRAM):   * Variable: MntFishProducts;
289788    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
289789    +LABEL GRP_MntFishProducts =
289790    +'Grouped: MntFishProducts';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntFishProducts = 'Grouped: MntFishProducts';
289791    +
289792    +if MISSING(MntFishProducts) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntFishProducts) then do;
289793    +GRP_MntFishProducts = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 1;
289794    +end;
MPRINT(EM_DIAGRAM):   end;
289795    +else if NOT MISSING(MntFishProducts) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntFishProducts) then do;
289796    +if MntFishProducts < 3 then do;
MPRINT(EM_DIAGRAM):   if MntFishProducts < 3 then do;
289797    +GRP_MntFishProducts = 2;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 2;
289798    +end;
MPRINT(EM_DIAGRAM):   end;
289799    +else
289800    +if 3 <= MntFishProducts AND MntFishProducts < 13 then do;
MPRINT(EM_DIAGRAM):   else if 3 <= MntFishProducts AND MntFishProducts < 13 then do;
289801    +GRP_MntFishProducts = 3;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 3;
289802    +end;
MPRINT(EM_DIAGRAM):   end;
289803    +else
289804    +if 13 <= MntFishProducts AND MntFishProducts < 47 then do;
MPRINT(EM_DIAGRAM):   else if 13 <= MntFishProducts AND MntFishProducts < 47 then do;
289805    +GRP_MntFishProducts = 4;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 4;
289806    +end;
MPRINT(EM_DIAGRAM):   end;
289807    +else
289808    +if 47 <= MntFishProducts then do;
MPRINT(EM_DIAGRAM):   else if 47 <= MntFishProducts then do;
289809    +GRP_MntFishProducts = 5;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 5;
289810    +end;
MPRINT(EM_DIAGRAM):   end;
289811    +end;
MPRINT(EM_DIAGRAM):   end;
289812    +
289813    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
289814    +* Variable: MntGoldProds;
MPRINT(EM_DIAGRAM):   * Variable: MntGoldProds;
289815    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
289816    +LABEL GRP_MntGoldProds =
289817    +'Grouped: MntGoldProds';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntGoldProds = 'Grouped: MntGoldProds';
289818    +
289819    +if MISSING(MntGoldProds) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntGoldProds) then do;
289820    +GRP_MntGoldProds = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 1;
289821    +end;
MPRINT(EM_DIAGRAM):   end;
289822    +else if NOT MISSING(MntGoldProds) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntGoldProds) then do;
289823    +if MntGoldProds < 9 then do;
MPRINT(EM_DIAGRAM):   if MntGoldProds < 9 then do;
289824    +GRP_MntGoldProds = 2;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 2;
289825    +end;
MPRINT(EM_DIAGRAM):   end;
289826    +else
289827    +if 9 <= MntGoldProds AND MntGoldProds < 25 then do;
MPRINT(EM_DIAGRAM):   else if 9 <= MntGoldProds AND MntGoldProds < 25 then do;
289828    +GRP_MntGoldProds = 3;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 3;
289829    +end;
MPRINT(EM_DIAGRAM):   end;
289830    +else
289831    +if 25 <= MntGoldProds AND MntGoldProds < 59 then do;
MPRINT(EM_DIAGRAM):   else if 25 <= MntGoldProds AND MntGoldProds < 59 then do;
289832    +GRP_MntGoldProds = 4;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 4;
289833    +end;
MPRINT(EM_DIAGRAM):   end;
289834    +else
289835    +if 59 <= MntGoldProds then do;
MPRINT(EM_DIAGRAM):   else if 59 <= MntGoldProds then do;
289836    +GRP_MntGoldProds = 5;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 5;
289837    +end;
MPRINT(EM_DIAGRAM):   end;
289838    +end;
MPRINT(EM_DIAGRAM):   end;
289839    +
289840    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
289841    +* Variable: MntMeatProducts;
MPRINT(EM_DIAGRAM):   * Variable: MntMeatProducts;
289842    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
289843    +LABEL GRP_MntMeatProducts =
289844    +'Grouped: MntMeatProducts';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntMeatProducts = 'Grouped: MntMeatProducts';
289845    +
289846    +if MISSING(MntMeatProducts) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntMeatProducts) then do;
289847    +GRP_MntMeatProducts = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 1;
289848    +end;
MPRINT(EM_DIAGRAM):   end;
289849    +else if NOT MISSING(MntMeatProducts) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntMeatProducts) then do;
289850    +if MntMeatProducts < 17 then do;
MPRINT(EM_DIAGRAM):   if MntMeatProducts < 17 then do;
289851    +GRP_MntMeatProducts = 2;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 2;
289852    +end;
MPRINT(EM_DIAGRAM):   end;
289853    +else
289854    +if 17 <= MntMeatProducts AND MntMeatProducts < 72 then do;
MPRINT(EM_DIAGRAM):   else if 17 <= MntMeatProducts AND MntMeatProducts < 72 then do;
289855    +GRP_MntMeatProducts = 3;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 3;
289856    +end;
MPRINT(EM_DIAGRAM):   end;
289857    +else
289858    +if 72 <= MntMeatProducts AND MntMeatProducts < 246 then do;
MPRINT(EM_DIAGRAM):   else if 72 <= MntMeatProducts AND MntMeatProducts < 246 then do;
289859    +GRP_MntMeatProducts = 4;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 4;
289860    +end;
MPRINT(EM_DIAGRAM):   end;
289861    +else
289862    +if 246 <= MntMeatProducts then do;
MPRINT(EM_DIAGRAM):   else if 246 <= MntMeatProducts then do;
289863    +GRP_MntMeatProducts = 5;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 5;
289864    +end;
MPRINT(EM_DIAGRAM):   end;
289865    +end;
MPRINT(EM_DIAGRAM):   end;
289866    +
289867    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
289868    +* Variable: MntWines;
MPRINT(EM_DIAGRAM):   * Variable: MntWines;
289869    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
289870    +LABEL GRP_MntWines =
289871    +'Grouped: MntWines';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntWines = 'Grouped: MntWines';
289872    +
289873    +if MISSING(MntWines) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntWines) then do;
289874    +GRP_MntWines = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 1;
289875    +end;
MPRINT(EM_DIAGRAM):   end;
289876    +else if NOT MISSING(MntWines) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntWines) then do;
289877    +if MntWines < 24 then do;
MPRINT(EM_DIAGRAM):   if MntWines < 24 then do;
289878    +GRP_MntWines = 2;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 2;
289879    +end;
MPRINT(EM_DIAGRAM):   end;
289880    +else
289881    +if 24 <= MntWines AND MntWines < 183.5 then do;
MPRINT(EM_DIAGRAM):   else if 24 <= MntWines AND MntWines < 183.5 then do;
289882    +GRP_MntWines = 3;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 3;
289883    +end;
MPRINT(EM_DIAGRAM):   end;
289884    +else
289885    +if 183.5 <= MntWines AND MntWines < 508 then do;
MPRINT(EM_DIAGRAM):   else if 183.5 <= MntWines AND MntWines < 508 then do;
289886    +GRP_MntWines = 4;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 4;
289887    +end;
MPRINT(EM_DIAGRAM):   end;
289888    +else
289889    +if 508 <= MntWines then do;
MPRINT(EM_DIAGRAM):   else if 508 <= MntWines then do;
289890    +GRP_MntWines = 5;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 5;
289891    +end;
MPRINT(EM_DIAGRAM):   end;
289892    +end;
MPRINT(EM_DIAGRAM):   end;
289893    +
289894    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
289895    +* Variable: NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumCatalogPurchases;
289896    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
289897    +LABEL GRP_NumCatalogPurchases =
289898    +'Grouped: NumCatalogPurchases';
MPRINT(EM_DIAGRAM):   LABEL GRP_NumCatalogPurchases = 'Grouped: NumCatalogPurchases';
289899    +
289900    +if MISSING(NumCatalogPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumCatalogPurchases) then do;
289901    +GRP_NumCatalogPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 1;
289902    +end;
MPRINT(EM_DIAGRAM):   end;
289903    +else if NOT MISSING(NumCatalogPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumCatalogPurchases) then do;
289904    +if NumCatalogPurchases < 0 then do;
MPRINT(EM_DIAGRAM):   if NumCatalogPurchases < 0 then do;
289905    +GRP_NumCatalogPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 2;
289906    +end;
MPRINT(EM_DIAGRAM):   end;
289907    +else
289908    +if 0 <= NumCatalogPurchases AND NumCatalogPurchases < 2 then do;
MPRINT(EM_DIAGRAM):   else if 0 <= NumCatalogPurchases AND NumCatalogPurchases < 2 then do;
289909    +GRP_NumCatalogPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 3;
289910    +end;
MPRINT(EM_DIAGRAM):   end;
289911    +else
289912    +if 2 <= NumCatalogPurchases AND NumCatalogPurchases < 4 then do;
MPRINT(EM_DIAGRAM):   else if 2 <= NumCatalogPurchases AND NumCatalogPurchases < 4 then do;
289913    +GRP_NumCatalogPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 4;
289914    +end;
MPRINT(EM_DIAGRAM):   end;
289915    +else
289916    +if 4 <= NumCatalogPurchases then do;
MPRINT(EM_DIAGRAM):   else if 4 <= NumCatalogPurchases then do;
289917    +GRP_NumCatalogPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 5;
289918    +end;
MPRINT(EM_DIAGRAM):   end;
289919    +end;
MPRINT(EM_DIAGRAM):   end;
289920    +
289921    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
289922    +* Variable: NumDistPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumDistPurchases;
289923    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
289924    +LABEL GRP_NumDistPurchases = "Grouped: NumDistPurchases";
MPRINT(EM_DIAGRAM):   LABEL GRP_NumDistPurchases = "Grouped: NumDistPurchases";
289925    +
289926    +if MISSING(NumDistPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumDistPurchases) then do;
289927    +GRP_NumDistPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 1;
289928    +end;
MPRINT(EM_DIAGRAM):   end;
289929    +else if NOT MISSING(NumDistPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumDistPurchases) then do;
289930    +if NumDistPurchases < 3 then do;
MPRINT(EM_DIAGRAM):   if NumDistPurchases < 3 then do;
289931    +GRP_NumDistPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 2;
289932    +end;
MPRINT(EM_DIAGRAM):   end;
289933    +else
289934    +if 3 <= NumDistPurchases AND NumDistPurchases < 6 then do;
MPRINT(EM_DIAGRAM):   else if 3 <= NumDistPurchases AND NumDistPurchases < 6 then do;
289935    +GRP_NumDistPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 3;
289936    +end;
MPRINT(EM_DIAGRAM):   end;
289937    +else
289938    +if 6 <= NumDistPurchases AND NumDistPurchases < 10 then do;
MPRINT(EM_DIAGRAM):   else if 6 <= NumDistPurchases AND NumDistPurchases < 10 then do;
289939    +GRP_NumDistPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 4;
289940    +end;
MPRINT(EM_DIAGRAM):   end;
289941    +else
289942    +if 10 <= NumDistPurchases then do;
MPRINT(EM_DIAGRAM):   else if 10 <= NumDistPurchases then do;
289943    +GRP_NumDistPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 5;
289944    +end;
MPRINT(EM_DIAGRAM):   end;
289945    +end;
MPRINT(EM_DIAGRAM):   end;
289946    +
289947    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
289948    +* Variable: NumWebPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumWebPurchases;
289949    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
289950    +LABEL GRP_NumWebPurchases =
289951    +'Grouped: NumWebPurchases';
MPRINT(EM_DIAGRAM):   LABEL GRP_NumWebPurchases = 'Grouped: NumWebPurchases';
289952    +
289953    +if MISSING(NumWebPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumWebPurchases) then do;
289954    +GRP_NumWebPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 1;
289955    +end;
MPRINT(EM_DIAGRAM):   end;
289956    +else if NOT MISSING(NumWebPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumWebPurchases) then do;
289957    +if NumWebPurchases < 2 then do;
MPRINT(EM_DIAGRAM):   if NumWebPurchases < 2 then do;
289958    +GRP_NumWebPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 2;
289959    +end;
MPRINT(EM_DIAGRAM):   end;
289960    +else
289961    +if 2 <= NumWebPurchases AND NumWebPurchases < 4 then do;
MPRINT(EM_DIAGRAM):   else if 2 <= NumWebPurchases AND NumWebPurchases < 4 then do;
289962    +GRP_NumWebPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 3;
289963    +end;
MPRINT(EM_DIAGRAM):   end;
289964    +else
289965    +if 4 <= NumWebPurchases AND NumWebPurchases < 6 then do;
MPRINT(EM_DIAGRAM):   else if 4 <= NumWebPurchases AND NumWebPurchases < 6 then do;
289966    +GRP_NumWebPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 4;
289967    +end;
MPRINT(EM_DIAGRAM):   end;
289968    +else
289969    +if 6 <= NumWebPurchases then do;
MPRINT(EM_DIAGRAM):   else if 6 <= NumWebPurchases then do;
289970    +GRP_NumWebPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 5;
289971    +end;
MPRINT(EM_DIAGRAM):   end;
289972    +end;
MPRINT(EM_DIAGRAM):   end;
289973    +
289974    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
289975    +* Variable: RFMstat;
MPRINT(EM_DIAGRAM):   * Variable: RFMstat;
289976    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
289977    +LABEL GRP_RFMstat = "Grouped: RFMstat";
MPRINT(EM_DIAGRAM):   LABEL GRP_RFMstat = "Grouped: RFMstat";
289978    +
289979    +if MISSING(RFMstat) then do;
MPRINT(EM_DIAGRAM):   if MISSING(RFMstat) then do;
289980    +GRP_RFMstat = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 1;
289981    +end;
MPRINT(EM_DIAGRAM):   end;
289982    +else if NOT MISSING(RFMstat) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(RFMstat) then do;
289983    +if RFMstat < 10.34 then do;
MPRINT(EM_DIAGRAM):   if RFMstat < 10.34 then do;
289984    +GRP_RFMstat = 2;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 2;
289985    +end;
MPRINT(EM_DIAGRAM):   end;
289986    +else
289987    +if 10.34 <= RFMstat AND RFMstat < 128.09 then do;
MPRINT(EM_DIAGRAM):   else if 10.34 <= RFMstat AND RFMstat < 128.09 then do;
289988    +GRP_RFMstat = 3;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 3;
289989    +end;
MPRINT(EM_DIAGRAM):   end;
289990    +else
289991    +if 128.09 <= RFMstat AND RFMstat < 455.22 then do;
MPRINT(EM_DIAGRAM):   else if 128.09 <= RFMstat AND RFMstat < 455.22 then do;
289992    +GRP_RFMstat = 4;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 4;
289993    +end;
MPRINT(EM_DIAGRAM):   end;
289994    +else
289995    +if 455.22 <= RFMstat then do;
MPRINT(EM_DIAGRAM):   else if 455.22 <= RFMstat then do;
289996    +GRP_RFMstat = 5;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 5;
289997    +end;
MPRINT(EM_DIAGRAM):   end;
289998    +end;
MPRINT(EM_DIAGRAM):   end;
289999    +
290000    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
290001    +* Variable: RMntFrq;
MPRINT(EM_DIAGRAM):   * Variable: RMntFrq;
290002    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
290003    +LABEL GRP_RMntFrq = "Grouped: RMntFrq";
MPRINT(EM_DIAGRAM):   LABEL GRP_RMntFrq = "Grouped: RMntFrq";
290004    +
290005    +if MISSING(RMntFrq) then do;
MPRINT(EM_DIAGRAM):   if MISSING(RMntFrq) then do;
290006    +GRP_RMntFrq = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 1;
290007    +end;
MPRINT(EM_DIAGRAM):   end;
290008    +else if NOT MISSING(RMntFrq) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(RMntFrq) then do;
290009    +if RMntFrq < 13.25 then do;
MPRINT(EM_DIAGRAM):   if RMntFrq < 13.25 then do;
290010    +GRP_RMntFrq = 2;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 2;
290011    +end;
MPRINT(EM_DIAGRAM):   end;
290012    +else
290013    +if 13.25 <= RMntFrq AND RMntFrq < 30.4 then do;
MPRINT(EM_DIAGRAM):   else if 13.25 <= RMntFrq AND RMntFrq < 30.4 then do;
290014    +GRP_RMntFrq = 3;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 3;
290015    +end;
MPRINT(EM_DIAGRAM):   end;
290016    +else
290017    +if 30.4 <= RMntFrq AND RMntFrq < 52.86 then do;
MPRINT(EM_DIAGRAM):   else if 30.4 <= RMntFrq AND RMntFrq < 52.86 then do;
290018    +GRP_RMntFrq = 4;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 4;
290019    +end;
MPRINT(EM_DIAGRAM):   end;
290020    +else
290021    +if 52.86 <= RMntFrq then do;
MPRINT(EM_DIAGRAM):   else if 52.86 <= RMntFrq then do;
290022    +GRP_RMntFrq = 5;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 5;
290023    +end;
MPRINT(EM_DIAGRAM):   end;
290024    +end;
MPRINT(EM_DIAGRAM):   end;
290025    +
290026    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
290027    +* Variable: Recency;
MPRINT(EM_DIAGRAM):   * Variable: Recency;
290028    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
290029    +LABEL GRP_Recency =
290030    +'Grouped: Recency';
MPRINT(EM_DIAGRAM):   LABEL GRP_Recency = 'Grouped: Recency';
290031    +
290032    +if MISSING(Recency) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Recency) then do;
290033    +GRP_Recency = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency = 1;
290034    +end;
MPRINT(EM_DIAGRAM):   end;
290035    +else if NOT MISSING(Recency) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Recency) then do;
290036    +if Recency < 24 then do;
MPRINT(EM_DIAGRAM):   if Recency < 24 then do;
290037    +GRP_Recency = 2;
MPRINT(EM_DIAGRAM):   GRP_Recency = 2;
290038    +end;
MPRINT(EM_DIAGRAM):   end;
290039    +else
290040    +if 24 <= Recency AND Recency < 48 then do;
MPRINT(EM_DIAGRAM):   else if 24 <= Recency AND Recency < 48 then do;
290041    +GRP_Recency = 3;
MPRINT(EM_DIAGRAM):   GRP_Recency = 3;
290042    +end;
MPRINT(EM_DIAGRAM):   end;
290043    +else
290044    +if 48 <= Recency AND Recency < 73 then do;
MPRINT(EM_DIAGRAM):   else if 48 <= Recency AND Recency < 73 then do;
290045    +GRP_Recency = 4;
MPRINT(EM_DIAGRAM):   GRP_Recency = 4;
290046    +end;
MPRINT(EM_DIAGRAM):   end;
290047    +else
290048    +if 73 <= Recency then do;
MPRINT(EM_DIAGRAM):   else if 73 <= Recency then do;
290049    +GRP_Recency = 5;
MPRINT(EM_DIAGRAM):   GRP_Recency = 5;
290050    +end;
MPRINT(EM_DIAGRAM):   end;
290051    +end;
MPRINT(EM_DIAGRAM):   end;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
290052     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
290053     quit;
290054     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
290055     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
290056     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
290057     retain ID 3 Node "BINNING";
MPRINT(EM_DIAGRAM):   retain ID 3 Node "BINNING";
290058     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
290059     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 16 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 16 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

290060     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
290061     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
290062     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 16 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 16 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

290063     proc sort data=EMWS8.BINNING_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.BINNING_variableset out=_temp2(keep=NAME CREATOR);
290064     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
290065     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 36 observations read from the data set EMWS8.BINNING_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 36 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

290066     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
290067     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
290068     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
290069     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 36 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 36 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

290070     proc contents data=EMWS8.BINNING_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.BINNING_train out=_meta(keep=NAME) noprint;
290071     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 59 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

290072     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
290073     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
290074     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 59 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 59 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

290075     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
290076     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
290077     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
290078     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 59 observations read from the data set WORK._META.
NOTE: There were 36 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 59 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

290079     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
290080     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
290080   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 15 rows and 5 columns.

290081     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

290082     proc append base=EMWS8.Ensmbl50_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl50_FCMP data=_tempx;
290083     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL50_FCMP.
NOTE: There were 15 observations read from the data set WORK._TEMPX.
NOTE: 15 observations added.
NOTE: The data set EMWS8.ENSMBL50_FCMP has 790 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

290084     filename _pref
290084   ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
290085     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
290086     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
290087    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
290088    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
290089    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
290090    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
290091    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
290092    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
290093     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
290094     quit;
290095     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
290096     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
290097     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
290098     retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
290099     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
290100     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

290101     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
290102     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
290103     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

290104     proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
290105     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
290106     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

290107     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
290108     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
290109     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
290110     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

290111     proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
290112     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

290113     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
290114     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
290115     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

290116     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
290117     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
290118     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
290119     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

290120     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
290121     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
290121   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

290122     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

290123     proc append base=EMWS8.Ensmbl50_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl50_FCMP data=_tempx;
290124     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL50_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL50_FCMP has 794 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

290125     filename _pref
290125   ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
290126     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
290127     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
290128    +
290129    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
290130    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
290130   !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
290131    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
290132    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
290133    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
290134    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
290135    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
290136     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
290137     quit;
290138     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
290139     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
290140     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
290141     retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
290142     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
290143     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

290144     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
290145     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
290146     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

290147     proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
290148     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
290149     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

290150     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
290151     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
290152     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
290153     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

290154     proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
290155     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

290156     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
290157     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
290158     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

290159     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
290160     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
290161     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
290162     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

290163     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
290164     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
290164   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

290165     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

290166     proc append base=EMWS8.Ensmbl50_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl50_FCMP data=_tempx;
290167     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL50_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL50_FCMP has 833 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

290168     filename _pref
290168   ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
290169     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
290170     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
290171    +
290172    +
290173    +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
290174    +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
290175    +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
290176    +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
290177    +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
290178    +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
290179    +
290180    +
290181    +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
290182    +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
290183    +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
290184    +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
290185    +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
290186    +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
290187    +
290188    +
290189    +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
290190    +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
290191    +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
290192    +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
290193    +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
290194    +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
290195    +
290196    +
290197    +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
290198    +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
290199    +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
290200    +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
290201    +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
290202    +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
290203    +
290204    +
290205    +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
290206    +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
290207    +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
290208    +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
290209    +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
290210    +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
290211    +
290212    +
290213    +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
290214    +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
290215    +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
290216    +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
290217    +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
290218    +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
290219    +
290220    +
290221    +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
290222    +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
290223    +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
290224    +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
290225    +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
290226    +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
290227    +
290228    +
290229    +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
290230    +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
290231    +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
290232    +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
290233    +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
290234    +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
290235    +if
290236    +_FILTERNORM1 not in ( '.')
290237    + and
290238    +_FILTERNORM2 not in ( '.')
290239    + and
290240    +_FILTERNORM3 not in ( '.')
290241    + and
290242    +_FILTERNORM4 not in ( '.')
290243    + and
290244    +_FILTERNORM5 not in ( '.')
290245    + and
290246    +_FILTERNORM6 not in ( '.')
290247    + and
290248    +_FILTERNORM7 not in ( ' ')
290249    + and
290250    +_FILTERNORM8 not in ( ' ')
290251    +and
290252    +( Dt_Customer ne .)
290253    +and ( Income ne . and (Income<=107000))
290254    +and ( Kidhome ne .)
290255    +and ( MntFishProducts ne .)
290256    +and ( MntFruits ne .)
290257    +and ( MntGoldProds ne .)
290258    +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
290259    +and ( MntSweetProducts ne .)
290260    +and ( MntWines ne .)
290261    +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
290262    +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
290263    +and ( NumStorePurchases ne .)
290264    +and ( NumWebPurchases ne .)
290265    +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
290266    +and ( Recency ne .)
290267    +and ( Teenhome ne .)
290268    +and ( Year_Birth ne .)
290269    +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
290270    +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
290271    +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
290272    +end;
MPRINT(EM_DIAGRAM):   end;
290273    +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
290274    +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
290275     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
290276     quit;
290277     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
290278     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
290279     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
290280     retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
290281     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
290282     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

290283     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
290284     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
290285     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

290286     proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
290287     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
290288     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

290289     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
290290     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
290291     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
290292     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

290293     proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
290294     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

290295     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
290296     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
290297     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

290298     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
290299     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
290300     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
290301     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

290302     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
290303     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
290303   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

290304     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

290305     proc append base=EMWS8.Ensmbl50_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl50_FCMP data=_tempx;
290306     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL50_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL50_FCMP has 899 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

290307     %macro varDept(fcmpdata=,id=);
290308     %global nobs&id scoreFlag&id;
290309     %let scoreFlag&id = 0;
290310     %if &id=1 or ^&fcmpStart %then %do;
290311     proc sort data=&fcmpdata out=_temp&id nodupkey;
290312     by NAME;
290313     where id=&id and LHS in( %let j=1;
290314     %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
290315     %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
290316     "&var" %let j = %eval(&j+1);
290317     %end;
290318     );
290319     run;
290320     %let dsid = %sysfunc(open(_temp&id));
290321     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
290322     %let dsid = %sysfunc(close(&dsid));
290323     %if &&nobs&id %then %do;
290324     %let scoreFlag&id = 1;
290325     %let fcmpStart = 1;
290326     %end;
290327     %else %let fcmpStart = 0;
290328     %end;
290329     %else %do;
290330     proc sort data=&fcmpdata out=_tempid;
290331     where id=&id;
290332     by LHS;
290333     run;
290334     %let dsid = %sysfunc(open(_tempid));
290335     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
290336     %let dsid = %sysfunc(close(&dsid));
290337     %if ^&&nobs&id %then %do;
290338     proc datasets lib=work nolist;
290339     delete _tempid;
290340     run;
290341     quit;
290342     %end;
290343     %else %do;
290344     data _tempAll;
290345     set %let j=%eval(&id-1);
290346     %do x=1 %to &j;
290347     %if &&nobs&x %then %do;
290348     _temp&x %end;
290349     %end;
290350     ;
290351     run;
290352     proc sql;
290353     create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
290353   ! work._tempid p2 where p.name=p2.lhs;
290354     quit;
290355     data _temp&id;
290356     set _temp&id;
290357     where LHS ne '' and NAME ne '' and Node ne '';
290358     run;
290359     proc datasets lib=work nolist;
290360     delete _tempAll;
290361     run;
290362     %let dsid = %sysfunc(open(_temp&id));
290363     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
290364     %let dsid = %sysfunc(close(&dsid));
290365     %if ^&&nobs&id %then %do;
290366     proc datasets lib=work nolist;
290367     delete _temp&id;
290368     run;
290369     quit;
290370     %end;
290371     %else %do;
290372     %let scoreFlag&id = 1;
290373     data _temp&id;
290374     set _temp&id;
290375     where LHS ne NAME and node ne '';
290376     run;
290377     %let dsid = %sysfunc(open(_temp&id));
290378     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
290379     %let dsid = %sysfunc(close(&dsid));
290380     %if ^&&nobs&id %then %do;
290381     proc datasets lib=work nolist;
290382     delete _temp&id;
290383     run;
290384     quit;
290385     %end;
290386     %else %do;
290387     proc sort data=_temp&id nodupkey;
290388     by LHS NAME;
290389     run;
290390     %end;
290391     %end;
290392     %end;
290393     %end;
290394     %mend varDept;
290395     %macro optCode(outdata=fcmpdata);
290396     %global fcmpStart;
290397     %let fcmpStart = 0;
290398     %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
290399     %let NumNodes=9;
290400     %do k=1 %to &NumNodes;
290401     %vardept(fcmpdata=&outdata, id=&k);
290402     %end;
290403     %mend optCode;
290404     %optcode(outData=EMWS8.Ensmbl50_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl50_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL50_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl50_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL50_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 49 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 17 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl50_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 15 observations read from the data set EMWS8.ENSMBL50_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 15 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 17 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 17 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp3 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP3 created, with 14 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP3 has 14 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP3 has 14 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp3 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP3.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP3 has 14 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl50_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL50_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl50_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL50_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 ;
MPRINT(VARDEPT):   run;

NOTE: There were 17 observations read from the data set WORK._TEMP2.
NOTE: There were 14 observations read from the data set WORK._TEMP3.
NOTE: The data set WORK._TEMPALL has 31 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 2 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl50_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL50_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 17 observations read from the data set WORK._TEMP2.
NOTE: There were 14 observations read from the data set WORK._TEMP3.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 33 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 32 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 32 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 32 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 32 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 32 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 32 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 32 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl50_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL50_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 17 observations read from the data set WORK._TEMP2.
NOTE: There were 14 observations read from the data set WORK._TEMP3.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: There were 32 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 65 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl50_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL50_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl50_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL50_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

290405     data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
290406     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
290407     where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
290408     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

290409     data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
290410     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
290411     where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
290412     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

290413     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
290414     create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
290414   ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 2 rows and 3 columns.

290415     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
      

290416     data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
290417     set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
290418     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 2 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 2 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

290419     data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
290420     set EMWS8.BINNING_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.BINNING_EMSCOREVAR;
290421     where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
290422     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS8.BINNING_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

290423     data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
290424     set EMWS8.BINNING_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.BINNING_EMSCOREVAR;
290425     where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
290426     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.BINNING_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

290427     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
290428     create table _CodeVar7 as select p.lhs, p2.formula, p2.file from _temp3 p,
290428   ! EMWS8.BINNING_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar7 as select p.lhs, p2.formula, p2.file from _temp3 
p, EMWS8.BINNING_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR7 created, with 14 rows and 3 columns.

290429     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

290430     data _CodeVar7;
MPRINT(EM_DIAGRAM):   data _CodeVar7;
290431     set _all_ _CodeVar7 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar7 _postall_;
290432     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK._ALL_.
NOTE: There were 14 observations read from the data set WORK._CODEVAR7.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR7 has 15 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

290433     filename _pref
290433   ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural25\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural25\EMPUBLISHSCORE.sas";
290434     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
290435     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural25\EMPUBLISHSCORE.sas.
290436    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
290437    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
290438    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
290439    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
290440    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
290441    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
290442    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
290443    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
290444    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
290445    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
290446    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
290447    +LENGTH _WARN_ $4
290448    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
290449    +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
290450    +
290451    +      label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
MPRINT(EM_DIAGRAM):   label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
290452    +
290453    +      label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
290454    +
290455    +      label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
290456    +
290457    +      label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
290458    +
290459    +      label GRP_Income2 = 'Dummy: GRP_Income=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Income2 = 'Dummy: GRP_Income=2' ;
290460    +
290461    +      label GRP_Income3 = 'Dummy: GRP_Income=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Income3 = 'Dummy: GRP_Income=3' ;
290462    +
290463    +      label GRP_Income4 = 'Dummy: GRP_Income=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Income4 = 'Dummy: GRP_Income=4' ;
290464    +
290465    +      label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
290466    +
290467    +      label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
290468    +
290469    +      label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
290470    +
290471    +      label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
290472    +
290473    +      label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
290474    +
290475    +      label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
290476    +
290477    +      label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
290478    +
290479    +      label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
290480    +
290481    +      label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
290482    +
290483    +      label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
290484    +
290485    +      label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
290486    +
290487    +      label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
290488    +
290489    +      label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
290490    +
290491    +      label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
290492    +
290493    +      label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
290494    +
290495    +      label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
290496    +
290497    +      label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
290498    +
290499    +      label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
290500    +
290501    +      label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
290502    +
290503    +      label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
290504    +
290505    +      label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
290506    +
290507    +      label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
290508    +
290509    +      label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
290510    +
290511    +      label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
290512    +
290513    +      label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
290514    +
290515    +      label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
290516    +
290517    +      label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
290518    +
290519    +      label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
290520    +
290521    +      label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
290522    +
290523    +      label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
290524    +
290525    +      label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
290526    +
290527    +      label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
290528    +
290529    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
290530    +
290531    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
290532    +
290533    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
290534    +
290535    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
290536    +
290537    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
290538    +
290539    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
290540    +
290541    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
290542    +
290543    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
290544    +
290545    +*** Generate dummy variables for GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmp5 ;
290546    +drop GRP_AcceptedCmp52 ;
MPRINT(EM_DIAGRAM):   drop GRP_AcceptedCmp52 ;
290547    +if missing( GRP_AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmp5 ) then do;
290548    +   GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
290549    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
290550    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
290551    +end;
MPRINT(EM_DIAGRAM):   end;
290552    +else do;
MPRINT(EM_DIAGRAM):   else do;
290553    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
290554    +   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
290555    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
290556    +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
290557    +      GRP_AcceptedCmp52 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = 1;
290558    +   end;
MPRINT(EM_DIAGRAM):   end;
290559    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
290560    +      GRP_AcceptedCmp52 = -1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = -1;
290561    +   end;
MPRINT(EM_DIAGRAM):   end;
290562    +   else do;
MPRINT(EM_DIAGRAM):   else do;
290563    +      GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
290564    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
290565    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
290566    +   end;
MPRINT(EM_DIAGRAM):   end;
290567    +end;
MPRINT(EM_DIAGRAM):   end;
290568    +
290569    +*** Generate dummy variables for GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Frq ;
290570    +drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
290571    +if missing( GRP_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Frq ) then do;
290572    +   GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
290573    +   GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
290574    +   GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
290575    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
290576    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
290577    +end;
MPRINT(EM_DIAGRAM):   end;
290578    +else do;
MPRINT(EM_DIAGRAM):   else do;
290579    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
290580    +   _dm12 = put( GRP_Frq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Frq , BEST12. );
290581    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
290582    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
290583    +      GRP_Frq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = -1;
290584    +      GRP_Frq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = -1;
290585    +      GRP_Frq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = -1;
290586    +   end;
MPRINT(EM_DIAGRAM):   end;
290587    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
290588    +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
290589    +      GRP_Frq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 1;
290590    +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
290591    +   end;
MPRINT(EM_DIAGRAM):   end;
290592    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
290593    +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
290594    +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
290595    +      GRP_Frq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 1;
290596    +   end;
MPRINT(EM_DIAGRAM):   end;
290597    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
290598    +      GRP_Frq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 1;
290599    +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
290600    +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
290601    +   end;
MPRINT(EM_DIAGRAM):   end;
290602    +   else do;
MPRINT(EM_DIAGRAM):   else do;
290603    +      GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
290604    +      GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
290605    +      GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
290606    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
290607    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
290608    +   end;
MPRINT(EM_DIAGRAM):   end;
290609    +end;
MPRINT(EM_DIAGRAM):   end;
290610    +
290611    +*** Generate dummy variables for GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Income ;
290612    +drop GRP_Income2 GRP_Income3 GRP_Income4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Income2 GRP_Income3 GRP_Income4 ;
290613    +if missing( GRP_Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Income ) then do;
290614    +   GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
290615    +   GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
290616    +   GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
290617    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
290618    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
290619    +end;
MPRINT(EM_DIAGRAM):   end;
290620    +else do;
MPRINT(EM_DIAGRAM):   else do;
290621    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
290622    +   _dm12 = put( GRP_Income , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Income , BEST12. );
290623    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
290624    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
290625    +      GRP_Income2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = -1;
290626    +      GRP_Income3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = -1;
290627    +      GRP_Income4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = -1;
290628    +   end;
MPRINT(EM_DIAGRAM):   end;
290629    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
290630    +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
290631    +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
290632    +      GRP_Income4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 1;
290633    +   end;
MPRINT(EM_DIAGRAM):   end;
290634    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
290635    +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
290636    +      GRP_Income3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 1;
290637    +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
290638    +   end;
MPRINT(EM_DIAGRAM):   end;
290639    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
290640    +      GRP_Income2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 1;
290641    +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
290642    +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
290643    +   end;
MPRINT(EM_DIAGRAM):   end;
290644    +   else do;
MPRINT(EM_DIAGRAM):   else do;
290645    +      GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
290646    +      GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
290647    +      GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
290648    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
290649    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
290650    +   end;
MPRINT(EM_DIAGRAM):   end;
290651    +end;
MPRINT(EM_DIAGRAM):   end;
290652    +
290653    +*** Generate dummy variables for GRP_Mnt ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Mnt ;
290654    +drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
290655    +if missing( GRP_Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Mnt ) then do;
290656    +   GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
290657    +   GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
290658    +   GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
290659    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
290660    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
290661    +end;
MPRINT(EM_DIAGRAM):   end;
290662    +else do;
MPRINT(EM_DIAGRAM):   else do;
290663    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
290664    +   _dm12 = put( GRP_Mnt , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Mnt , BEST12. );
290665    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
290666    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
290667    +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
290668    +      GRP_Mnt3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 1;
290669    +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
290670    +   end;
MPRINT(EM_DIAGRAM):   end;
290671    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
290672    +      GRP_Mnt2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = -1;
290673    +      GRP_Mnt3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = -1;
290674    +      GRP_Mnt4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = -1;
290675    +   end;
MPRINT(EM_DIAGRAM):   end;
290676    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
290677    +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
290678    +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
290679    +      GRP_Mnt4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 1;
290680    +   end;
MPRINT(EM_DIAGRAM):   end;
290681    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
290682    +      GRP_Mnt2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 1;
290683    +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
290684    +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
290685    +   end;
MPRINT(EM_DIAGRAM):   end;
290686    +   else do;
MPRINT(EM_DIAGRAM):   else do;
290687    +      GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
290688    +      GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
290689    +      GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
290690    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
290691    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
290692    +   end;
MPRINT(EM_DIAGRAM):   end;
290693    +end;
MPRINT(EM_DIAGRAM):   end;
290694    +
290695    +*** Generate dummy variables for GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntFishProducts ;
290696    +drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
290697    +if missing( GRP_MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntFishProducts ) then do;
290698    +   GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
290699    +   GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
290700    +   GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
290701    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
290702    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
290703    +end;
MPRINT(EM_DIAGRAM):   end;
290704    +else do;
MPRINT(EM_DIAGRAM):   else do;
290705    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
290706    +   _dm12 = put( GRP_MntFishProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntFishProducts , BEST12. );
290707    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
290708    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
290709    +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
290710    +      GRP_MntFishProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 1;
290711    +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
290712    +   end;
MPRINT(EM_DIAGRAM):   end;
290713    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
290714    +      GRP_MntFishProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = -1;
290715    +      GRP_MntFishProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = -1;
290716    +      GRP_MntFishProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = -1;
290717    +   end;
MPRINT(EM_DIAGRAM):   end;
290718    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
290719    +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
290720    +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
290721    +      GRP_MntFishProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 1;
290722    +   end;
MPRINT(EM_DIAGRAM):   end;
290723    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
290724    +      GRP_MntFishProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 1;
290725    +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
290726    +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
290727    +   end;
MPRINT(EM_DIAGRAM):   end;
290728    +   else do;
MPRINT(EM_DIAGRAM):   else do;
290729    +      GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
290730    +      GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
290731    +      GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
290732    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
290733    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
290734    +   end;
MPRINT(EM_DIAGRAM):   end;
290735    +end;
MPRINT(EM_DIAGRAM):   end;
290736    +
290737    +*** Generate dummy variables for GRP_MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntGoldProds ;
290738    +drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
290739    +if missing( GRP_MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntGoldProds ) then do;
290740    +   GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
290741    +   GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
290742    +   GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
290743    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
290744    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
290745    +end;
MPRINT(EM_DIAGRAM):   end;
290746    +else do;
MPRINT(EM_DIAGRAM):   else do;
290747    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
290748    +   _dm12 = put( GRP_MntGoldProds , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntGoldProds , BEST12. );
290749    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
290750    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
290751    +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
290752    +      GRP_MntGoldProds3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 1;
290753    +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
290754    +   end;
MPRINT(EM_DIAGRAM):   end;
290755    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
290756    +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
290757    +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
290758    +      GRP_MntGoldProds4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 1;
290759    +   end;
MPRINT(EM_DIAGRAM):   end;
290760    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
290761    +      GRP_MntGoldProds2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = -1;
290762    +      GRP_MntGoldProds3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = -1;
290763    +      GRP_MntGoldProds4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = -1;
290764    +   end;
MPRINT(EM_DIAGRAM):   end;
290765    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
290766    +      GRP_MntGoldProds2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 1;
290767    +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
290768    +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
290769    +   end;
MPRINT(EM_DIAGRAM):   end;
290770    +   else do;
MPRINT(EM_DIAGRAM):   else do;
290771    +      GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
290772    +      GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
290773    +      GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
290774    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
290775    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
290776    +   end;
MPRINT(EM_DIAGRAM):   end;
290777    +end;
MPRINT(EM_DIAGRAM):   end;
290778    +
290779    +*** Generate dummy variables for GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntMeatProducts ;
290780    +drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
290781    +if missing( GRP_MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntMeatProducts ) then do;
290782    +   GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
290783    +   GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
290784    +   GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
290785    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
290786    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
290787    +end;
MPRINT(EM_DIAGRAM):   end;
290788    +else do;
MPRINT(EM_DIAGRAM):   else do;
290789    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
290790    +   _dm12 = put( GRP_MntMeatProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntMeatProducts , BEST12. );
290791    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
290792    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
290793    +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
290794    +      GRP_MntMeatProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 1;
290795    +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
290796    +   end;
MPRINT(EM_DIAGRAM):   end;
290797    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
290798    +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
290799    +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
290800    +      GRP_MntMeatProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 1;
290801    +   end;
MPRINT(EM_DIAGRAM):   end;
290802    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
290803    +      GRP_MntMeatProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = -1;
290804    +      GRP_MntMeatProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = -1;
290805    +      GRP_MntMeatProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = -1;
290806    +   end;
MPRINT(EM_DIAGRAM):   end;
290807    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
290808    +      GRP_MntMeatProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 1;
290809    +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
290810    +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
290811    +   end;
MPRINT(EM_DIAGRAM):   end;
290812    +   else do;
MPRINT(EM_DIAGRAM):   else do;
290813    +      GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
290814    +      GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
290815    +      GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
290816    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
290817    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
290818    +   end;
MPRINT(EM_DIAGRAM):   end;
290819    +end;
MPRINT(EM_DIAGRAM):   end;
290820    +
290821    +*** Generate dummy variables for GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntWines ;
290822    +drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
290823    +if missing( GRP_MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntWines ) then do;
290824    +   GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
290825    +   GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
290826    +   GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
290827    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
290828    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
290829    +end;
MPRINT(EM_DIAGRAM):   end;
290830    +else do;
MPRINT(EM_DIAGRAM):   else do;
290831    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
290832    +   _dm12 = put( GRP_MntWines , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntWines , BEST12. );
290833    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
290834    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
290835    +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
290836    +      GRP_MntWines3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 1;
290837    +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
290838    +   end;
MPRINT(EM_DIAGRAM):   end;
290839    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
290840    +      GRP_MntWines2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = -1;
290841    +      GRP_MntWines3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = -1;
290842    +      GRP_MntWines4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = -1;
290843    +   end;
MPRINT(EM_DIAGRAM):   end;
290844    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
290845    +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
290846    +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
290847    +      GRP_MntWines4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 1;
290848    +   end;
MPRINT(EM_DIAGRAM):   end;
290849    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
290850    +      GRP_MntWines2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 1;
290851    +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
290852    +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
290853    +   end;
MPRINT(EM_DIAGRAM):   end;
290854    +   else do;
MPRINT(EM_DIAGRAM):   else do;
290855    +      GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
290856    +      GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
290857    +      GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
290858    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
290859    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
290860    +   end;
MPRINT(EM_DIAGRAM):   end;
290861    +end;
MPRINT(EM_DIAGRAM):   end;
290862    +
290863    +*** Generate dummy variables for GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumCatalogPurchases ;
290864    +drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
290865    +if missing( GRP_NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumCatalogPurchases ) then do;
290866    +   GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
290867    +   GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
290868    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
290869    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
290870    +end;
MPRINT(EM_DIAGRAM):   end;
290871    +else do;
MPRINT(EM_DIAGRAM):   else do;
290872    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
290873    +   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
290874    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
290875    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
290876    +      GRP_NumCatalogPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 1;
290877    +      GRP_NumCatalogPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 0;
290878    +   end;
MPRINT(EM_DIAGRAM):   end;
290879    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
290880    +      GRP_NumCatalogPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = -1;
290881    +      GRP_NumCatalogPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = -1;
290882    +   end;
MPRINT(EM_DIAGRAM):   end;
290883    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
290884    +      GRP_NumCatalogPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 0;
290885    +      GRP_NumCatalogPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 1;
290886    +   end;
MPRINT(EM_DIAGRAM):   end;
290887    +   else do;
MPRINT(EM_DIAGRAM):   else do;
290888    +      GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
290889    +      GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
290890    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
290891    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
290892    +   end;
MPRINT(EM_DIAGRAM):   end;
290893    +end;
MPRINT(EM_DIAGRAM):   end;
290894    +
290895    +*** Generate dummy variables for GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumDistPurchases ;
290896    +drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
290897    +if missing( GRP_NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumDistPurchases ) then do;
290898    +   GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
290899    +   GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
290900    +   GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
290901    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
290902    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
290903    +end;
MPRINT(EM_DIAGRAM):   end;
290904    +else do;
MPRINT(EM_DIAGRAM):   else do;
290905    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
290906    +   _dm12 = put( GRP_NumDistPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumDistPurchases , BEST12. );
290907    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
290908    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
290909    +      GRP_NumDistPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = -1;
290910    +      GRP_NumDistPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = -1;
290911    +      GRP_NumDistPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = -1;
290912    +   end;
MPRINT(EM_DIAGRAM):   end;
290913    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
290914    +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
290915    +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
290916    +      GRP_NumDistPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 1;
290917    +   end;
MPRINT(EM_DIAGRAM):   end;
290918    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
290919    +      GRP_NumDistPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 1;
290920    +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
290921    +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
290922    +   end;
MPRINT(EM_DIAGRAM):   end;
290923    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
290924    +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
290925    +      GRP_NumDistPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 1;
290926    +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
290927    +   end;
MPRINT(EM_DIAGRAM):   end;
290928    +   else do;
MPRINT(EM_DIAGRAM):   else do;
290929    +      GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
290930    +      GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
290931    +      GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
290932    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
290933    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
290934    +   end;
MPRINT(EM_DIAGRAM):   end;
290935    +end;
MPRINT(EM_DIAGRAM):   end;
290936    +
290937    +*** Generate dummy variables for GRP_NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumWebPurchases ;
290938    +drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
290939    +if missing( GRP_NumWebPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumWebPurchases ) then do;
290940    +   GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
290941    +   GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
290942    +   GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
290943    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
290944    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
290945    +end;
MPRINT(EM_DIAGRAM):   end;
290946    +else do;
MPRINT(EM_DIAGRAM):   else do;
290947    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
290948    +   _dm12 = put( GRP_NumWebPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumWebPurchases , BEST12. );
290949    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
290950    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
290951    +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
290952    +      GRP_NumWebPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 1;
290953    +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
290954    +   end;
MPRINT(EM_DIAGRAM):   end;
290955    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
290956    +      GRP_NumWebPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = -1;
290957    +      GRP_NumWebPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = -1;
290958    +      GRP_NumWebPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = -1;
290959    +   end;
MPRINT(EM_DIAGRAM):   end;
290960    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
290961    +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
290962    +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
290963    +      GRP_NumWebPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 1;
290964    +   end;
MPRINT(EM_DIAGRAM):   end;
290965    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
290966    +      GRP_NumWebPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 1;
290967    +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
290968    +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
290969    +   end;
MPRINT(EM_DIAGRAM):   end;
290970    +   else do;
MPRINT(EM_DIAGRAM):   else do;
290971    +      GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
290972    +      GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
290973    +      GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
290974    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
290975    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
290976    +   end;
MPRINT(EM_DIAGRAM):   end;
290977    +end;
MPRINT(EM_DIAGRAM):   end;
290978    +
290979    +*** Generate dummy variables for GRP_RFMstat ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RFMstat ;
290980    +drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
290981    +if missing( GRP_RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RFMstat ) then do;
290982    +   GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
290983    +   GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
290984    +   GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
290985    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
290986    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
290987    +end;
MPRINT(EM_DIAGRAM):   end;
290988    +else do;
MPRINT(EM_DIAGRAM):   else do;
290989    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
290990    +   _dm12 = put( GRP_RFMstat , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RFMstat , BEST12. );
290991    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
290992    +   if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
290993    +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
290994    +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
290995    +      GRP_RFMstat4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 1;
290996    +   end;
MPRINT(EM_DIAGRAM):   end;
290997    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
290998    +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
290999    +      GRP_RFMstat3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 1;
291000    +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
291001    +   end;
MPRINT(EM_DIAGRAM):   end;
291002    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
291003    +      GRP_RFMstat2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = -1;
291004    +      GRP_RFMstat3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = -1;
291005    +      GRP_RFMstat4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = -1;
291006    +   end;
MPRINT(EM_DIAGRAM):   end;
291007    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
291008    +      GRP_RFMstat2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 1;
291009    +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
291010    +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
291011    +   end;
MPRINT(EM_DIAGRAM):   end;
291012    +   else do;
MPRINT(EM_DIAGRAM):   else do;
291013    +      GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
291014    +      GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
291015    +      GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
291016    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
291017    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
291018    +   end;
MPRINT(EM_DIAGRAM):   end;
291019    +end;
MPRINT(EM_DIAGRAM):   end;
291020    +
291021    +*** Generate dummy variables for GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RMntFrq ;
291022    +drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
291023    +if missing( GRP_RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RMntFrq ) then do;
291024    +   GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
291025    +   GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
291026    +   GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
291027    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
291028    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
291029    +end;
MPRINT(EM_DIAGRAM):   end;
291030    +else do;
MPRINT(EM_DIAGRAM):   else do;
291031    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
291032    +   _dm12 = put( GRP_RMntFrq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RMntFrq , BEST12. );
291033    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
291034    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
291035    +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
291036    +      GRP_RMntFrq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 1;
291037    +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
291038    +   end;
MPRINT(EM_DIAGRAM):   end;
291039    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
291040    +      GRP_RMntFrq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = -1;
291041    +      GRP_RMntFrq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = -1;
291042    +      GRP_RMntFrq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = -1;
291043    +   end;
MPRINT(EM_DIAGRAM):   end;
291044    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
291045    +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
291046    +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
291047    +      GRP_RMntFrq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 1;
291048    +   end;
MPRINT(EM_DIAGRAM):   end;
291049    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
291050    +      GRP_RMntFrq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 1;
291051    +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
291052    +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
291053    +   end;
The SAS System

MPRINT(EM_DIAGRAM):   end;
291054    +   else do;
MPRINT(EM_DIAGRAM):   else do;
291055    +      GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
291056    +      GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
291057    +      GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
291058    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
291059    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
291060    +   end;
MPRINT(EM_DIAGRAM):   end;
291061    +end;
MPRINT(EM_DIAGRAM):   end;
291062    +
291063    +*** Generate dummy variables for GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Recency ;
291064    +drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
291065    +if missing( GRP_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Recency ) then do;
291066    +   GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
291067    +   GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
291068    +   GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
291069    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
291070    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
291071    +end;
MPRINT(EM_DIAGRAM):   end;
291072    +else do;
MPRINT(EM_DIAGRAM):   else do;
291073    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
291074    +   _dm12 = put( GRP_Recency , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Recency , BEST12. );
291075    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
291076    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
291077    +      GRP_Recency2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = -1;
291078    +      GRP_Recency3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = -1;
291079    +      GRP_Recency4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = -1;
291080    +   end;
MPRINT(EM_DIAGRAM):   end;
291081    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
291082    +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
291083    +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
291084    +      GRP_Recency4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 1;
291085    +   end;
MPRINT(EM_DIAGRAM):   end;
291086    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
291087    +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
291088    +      GRP_Recency3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 1;
291089    +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
291090    +   end;
MPRINT(EM_DIAGRAM):   end;
291091    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
291092    +      GRP_Recency2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 1;
291093    +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
291094    +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
291095    +   end;
MPRINT(EM_DIAGRAM):   end;
291096    +   else do;
MPRINT(EM_DIAGRAM):   else do;
291097    +      GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
291098    +      GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
291099    +      GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
291100    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
291101    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
291102    +   end;
MPRINT(EM_DIAGRAM):   end;
291103    +end;
MPRINT(EM_DIAGRAM):   end;
291104    +
291105    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
291106    +*** Checking missing input Interval
291107    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
291108    +
291109    +IF NMISS(
291110    +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Year_Birth ) THEN DO;
291111    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
291112    +
291113    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
291114    +END;
MPRINT(EM_DIAGRAM):   END;
291115    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
291116    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
291117    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
291118    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
291119    +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
291120    +END;
MPRINT(EM_DIAGRAM):   END;
291121    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
291122    +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
291123    +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
291124    +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
291125    +END;
MPRINT(EM_DIAGRAM):   END;
291126    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
291127    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
291128    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
291129    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
291130    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
291131    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
291132    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
291133    +   H1x1_1  =     0.38021638611764 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.38021638611764 * S_Year_Birth ;
291134    +   H1x1_2  =      -1.088276895346 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -1.088276895346 * S_Year_Birth ;
291135    +   H1x1_3  =    -0.21044864474556 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.21044864474556 * S_Year_Birth ;
291136    +   H1x1_1  = H1x1_1  +    -1.19598236721657 * GRP_AcceptedCmp52
291137    +          +     0.89556920543007 * GRP_Frq2  +    -1.28633632438875 * GRP_Frq3
291138    +          +     1.09957277812081 * GRP_Frq4  +     1.66129248688789 *
291139    +        GRP_Income2  +    -0.02208859809261 * GRP_Income3
291140    +          +     0.13742442233856 * GRP_Income4  +     -0.8762617114278 *
291141    +        GRP_Mnt2  +     0.14483268386758 * GRP_Mnt3  +     1.46115917633769 *
291142    +        GRP_Mnt4  +     -0.6421408902491 * GRP_MntFishProducts2
291143    +          +      0.1128138472044 * GRP_MntFishProducts3
291144    +          +     1.21562636748698 * GRP_MntFishProducts4
291145    +          +     0.97422300880066 * GRP_MntGoldProds2
291146    +          +    -0.78007036389535 * GRP_MntGoldProds3
291147    +          +    -0.13814365615145 * GRP_MntGoldProds4
291148    +          +     1.35693955555286 * GRP_MntMeatProducts2
291149    +          +    -0.27598973191035 * GRP_MntMeatProducts3
291150    +          +     0.24526165671667 * GRP_MntMeatProducts4
291151    +          +    -2.07253692193163 * GRP_MntWines2  +    -0.82406684176795 *
291152    +        GRP_MntWines3  +     1.33606527822464 * GRP_MntWines4
291153    +          +    -1.54679770016919 * GRP_NumCatalogPurchases3
291154    +          +    -2.28037541698712 * GRP_NumCatalogPurchases4
291155    +          +     0.40979012613952 * GRP_NumDistPurchases2
291156    +          +     0.01840169060266 * GRP_NumDistPurchases3
291157    +          +     0.45490355508206 * GRP_NumDistPurchases4
291158    +          +     -2.5216795172343 * GRP_NumWebPurchases2
291159    +          +    -1.84801006282457 * GRP_NumWebPurchases3
291160    +          +    -1.97644985842889 * GRP_NumWebPurchases4
291161    +          +     1.42008839453911 * GRP_RFMstat2  +    -1.47553685202484 *
291162    +        GRP_RFMstat3  +     0.87098855427631 * GRP_RFMstat4
291163    +          +     1.05400168422125 * GRP_RMntFrq2  +    -0.41630002795032 *
291164    +        GRP_RMntFrq3  +     0.32151577305352 * GRP_RMntFrq4
291165    +          +    -0.40892574480582 * GRP_Recency2  +    -0.38760854674907 *
291166    +        GRP_Recency3  +    -1.01062906861757 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -1.19598236721657 * GRP_AcceptedCmp52 + 
0.89556920543007 * GRP_Frq2 + -1.28633632438875 * GRP_Frq3 + 1.09957277812081 * GRP_Frq4 + 
1.66129248688789 * GRP_Income2 + -0.02208859809261 * GRP_Income3 + 0.13742442233856 * 
GRP_Income4 + -0.8762617114278 * GRP_Mnt2 + 0.14483268386758 * GRP_Mnt3 + 1.46115917633769 * 
GRP_Mnt4 + -0.6421408902491 * GRP_MntFishProducts2 + 0.1128138472044 * GRP_MntFishProducts3 + 
1.21562636748698 * GRP_MntFishProducts4 + 0.97422300880066 * GRP_MntGoldProds2 + 
-0.78007036389535 * GRP_MntGoldProds3 + -0.13814365615145 * GRP_MntGoldProds4 + 
1.35693955555286 * GRP_MntMeatProducts2 + -0.27598973191035 * GRP_MntMeatProducts3 + 
0.24526165671667 * GRP_MntMeatProducts4 + -2.07253692193163 * GRP_MntWines2 + 
-0.82406684176795 * GRP_MntWines3 + 1.33606527822464 * GRP_MntWines4 + -1.54679770016919 * 
GRP_NumCatalogPurchases3 + -2.28037541698712 * GRP_NumCatalogPurchases4 + 0.40979012613952 * 
GRP_NumDistPurchases2 + 0.01840169060266 * GRP_NumDistPurchases3 + 0.45490355508206 * 
GRP_NumDistPurchases4 + -2.5216795172343 * GRP_NumWebPurchases2 + -1.84801006282457 * 
GRP_NumWebPurchases3 + -1.97644985842889 * GRP_NumWebPurchases4 + 1.42008839453911 * 
GRP_RFMstat2 + -1.47553685202484 * GRP_RFMstat3 + 0.87098855427631 * GRP_RFMstat4 + 
1.05400168422125 * GRP_RMntFrq2 + -0.41630002795032 * GRP_RMntFrq3 + 0.32151577305352 * 
GRP_RMntFrq4 + -0.40892574480582 * GRP_Recency2 + -0.38760854674907 * GRP_Recency3 + 
-1.01062906861757 * GRP_Recency4 ;
291167    +   H1x1_2  = H1x1_2  +    -0.22087092765683 * GRP_AcceptedCmp52
291168    +          +     0.86410922322484 * GRP_Frq2  +     1.63807214492524 * GRP_Frq3
291169    +          +    -1.25641751320277 * GRP_Frq4  +    -2.06319605492297 *
291170    +        GRP_Income2  +    -0.19570512199776 * GRP_Income3
291171    +          +    -1.02783445665559 * GRP_Income4  +     0.15804947667697 *
291172    +        GRP_Mnt2  +    -1.89927129454089 * GRP_Mnt3  +    -2.03683593435912 *
291173    +        GRP_Mnt4  +    -1.52161150732597 * GRP_MntFishProducts2
291174    +          +     1.31452667544583 * GRP_MntFishProducts3
291175    +          +     -1.7257971559668 * GRP_MntFishProducts4
291176    +          +     2.35872511454228 * GRP_MntGoldProds2
291177    +          +    -2.18519280701813 * GRP_MntGoldProds3
291178    +          +     2.11958828863486 * GRP_MntGoldProds4
291179    +          +     0.96289877666679 * GRP_MntMeatProducts2
291180    +          +     0.23432155256273 * GRP_MntMeatProducts3
291181    +          +     1.73039772995976 * GRP_MntMeatProducts4
291182    +          +    -0.42501510787424 * GRP_MntWines2  +    -1.52486822377888 *
291183    +        GRP_MntWines3  +      1.6227654564975 * GRP_MntWines4
291184    +          +    -1.89995561867666 * GRP_NumCatalogPurchases3
291185    +          +     0.67482053398184 * GRP_NumCatalogPurchases4
291186    +          +     0.66331524792021 * GRP_NumDistPurchases2
291187    +          +    -3.51633711874744 * GRP_NumDistPurchases3
291188    +          +    -2.78868266001809 * GRP_NumDistPurchases4
291189    +          +     0.48911700629841 * GRP_NumWebPurchases2
291190    +          +    -2.04233990579849 * GRP_NumWebPurchases3
291191    +          +     0.61493436153841 * GRP_NumWebPurchases4
291192    +          +    -0.04998034532745 * GRP_RFMstat2  +     0.70675221202708 *
291193    +        GRP_RFMstat3  +      1.1835788842441 * GRP_RFMstat4
291194    +          +    -1.59293821911804 * GRP_RMntFrq2  +    -2.00649847294694 *
291195    +        GRP_RMntFrq3  +     1.51867097620424 * GRP_RMntFrq4
291196    +          +     0.80524037758297 * GRP_Recency2  +     0.46947615167497 *
291197    +        GRP_Recency3  +    -0.02984024000355 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.22087092765683 * GRP_AcceptedCmp52 + 
0.86410922322484 * GRP_Frq2 + 1.63807214492524 * GRP_Frq3 + -1.25641751320277 * GRP_Frq4 + 
-2.06319605492297 * GRP_Income2 + -0.19570512199776 * GRP_Income3 + -1.02783445665559 * 
GRP_Income4 + 0.15804947667697 * GRP_Mnt2 + -1.89927129454089 * GRP_Mnt3 + -2.03683593435912 * 
GRP_Mnt4 + -1.52161150732597 * GRP_MntFishProducts2 + 1.31452667544583 * GRP_MntFishProducts3 
+ -1.7257971559668 * GRP_MntFishProducts4 + 2.35872511454228 * GRP_MntGoldProds2 + 
-2.18519280701813 * GRP_MntGoldProds3 + 2.11958828863486 * GRP_MntGoldProds4 + 
0.96289877666679 * GRP_MntMeatProducts2 + 0.23432155256273 * GRP_MntMeatProducts3 + 
1.73039772995976 * GRP_MntMeatProducts4 + -0.42501510787424 * GRP_MntWines2 + 
-1.52486822377888 * GRP_MntWines3 + 1.6227654564975 * GRP_MntWines4 + -1.89995561867666 * 
GRP_NumCatalogPurchases3 + 0.67482053398184 * GRP_NumCatalogPurchases4 + 0.66331524792021 * 
GRP_NumDistPurchases2 + -3.51633711874744 * GRP_NumDistPurchases3 + -2.78868266001809 * 
GRP_NumDistPurchases4 + 0.48911700629841 * GRP_NumWebPurchases2 + -2.04233990579849 * 
GRP_NumWebPurchases3 + 0.61493436153841 * GRP_NumWebPurchases4 + -0.04998034532745 * 
GRP_RFMstat2 + 0.70675221202708 * GRP_RFMstat3 + 1.1835788842441 * GRP_RFMstat4 + 
-1.59293821911804 * GRP_RMntFrq2 + -2.00649847294694 * GRP_RMntFrq3 + 1.51867097620424 * 
GRP_RMntFrq4 + 0.80524037758297 * GRP_Recency2 + 0.46947615167497 * GRP_Recency3 + 
-0.02984024000355 * GRP_Recency4 ;
291198    +   H1x1_3  = H1x1_3  +     0.63511799928422 * GRP_AcceptedCmp52
291199    +          +      -2.298606068807 * GRP_Frq2  +     3.16864487857804 * GRP_Frq3
291200    +          +     3.03519261062887 * GRP_Frq4  +    -1.85162718986086 *
291201    +        GRP_Income2  +     0.41526825199627 * GRP_Income3
291202    +          +    -0.80593312350255 * GRP_Income4  +     1.66777476102634 *
291203    +        GRP_Mnt2  +     2.08848488119875 * GRP_Mnt3  +     0.65051244257971 *
291204    +        GRP_Mnt4  +     0.71847095407349 * GRP_MntFishProducts2
291205    +          +    -1.10257815890641 * GRP_MntFishProducts3
291206    +          +     2.17792588671141 * GRP_MntFishProducts4
291207    +          +     2.50223152259939 * GRP_MntGoldProds2
291208    +          +    -1.72156085851201 * GRP_MntGoldProds3
291209    +          +    -3.91709431063923 * GRP_MntGoldProds4
291210    +          +     -1.0779971381482 * GRP_MntMeatProducts2
291211    +          +    -1.47970774146601 * GRP_MntMeatProducts3
291212    +          +     1.27022891132009 * GRP_MntMeatProducts4
291213    +          +     0.48048593774493 * GRP_MntWines2  +     2.90436921022208 *
291214    +        GRP_MntWines3  +    -3.52082955604777 * GRP_MntWines4
291215    +          +    -0.04446993636304 * GRP_NumCatalogPurchases3
291216    +          +     0.63669224655802 * GRP_NumCatalogPurchases4
291217    +          +    -3.14645279004965 * GRP_NumDistPurchases2
291218    +          +    -2.33190469508132 * GRP_NumDistPurchases3
291219    +          +    -0.62827451633899 * GRP_NumDistPurchases4
291220    +          +    -1.01851610127648 * GRP_NumWebPurchases2
291221    +          +    -1.48934390537683 * GRP_NumWebPurchases3
291222    +          +    -0.53741548796796 * GRP_NumWebPurchases4
291223    +          +    -0.75492549718573 * GRP_RFMstat2  +     -0.7937620334965 *
291224    +        GRP_RFMstat3  +     1.16856250505521 * GRP_RFMstat4
291225    +          +     2.45700945744116 * GRP_RMntFrq2  +      2.6192187092108 *
291226    +        GRP_RMntFrq3  +    -0.99545519667238 * GRP_RMntFrq4
291227    +          +     -0.8178492657671 * GRP_Recency2  +     0.13605490470692 *
291228    +        GRP_Recency3  +    -0.93901422840588 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.63511799928422 * GRP_AcceptedCmp52 + -2.298606068807 
* GRP_Frq2 + 3.16864487857804 * GRP_Frq3 + 3.03519261062887 * GRP_Frq4 + -1.85162718986086 * 
GRP_Income2 + 0.41526825199627 * GRP_Income3 + -0.80593312350255 * GRP_Income4 + 
1.66777476102634 * GRP_Mnt2 + 2.08848488119875 * GRP_Mnt3 + 0.65051244257971 * GRP_Mnt4 + 
0.71847095407349 * GRP_MntFishProducts2 + -1.10257815890641 * GRP_MntFishProducts3 + 
2.17792588671141 * GRP_MntFishProducts4 + 2.50223152259939 * GRP_MntGoldProds2 + 
-1.72156085851201 * GRP_MntGoldProds3 + -3.91709431063923 * GRP_MntGoldProds4 + 
-1.0779971381482 * GRP_MntMeatProducts2 + -1.47970774146601 * GRP_MntMeatProducts3 + 
1.27022891132009 * GRP_MntMeatProducts4 + 0.48048593774493 * GRP_MntWines2 + 2.90436921022208 
* GRP_MntWines3 + -3.52082955604777 * GRP_MntWines4 + -0.04446993636304 * 
GRP_NumCatalogPurchases3 + 0.63669224655802 * GRP_NumCatalogPurchases4 + -3.14645279004965 * 
GRP_NumDistPurchases2 + -2.33190469508132 * GRP_NumDistPurchases3 + -0.62827451633899 * 
GRP_NumDistPurchases4 + -1.01851610127648 * GRP_NumWebPurchases2 + -1.48934390537683 * 
GRP_NumWebPurchases3 + -0.53741548796796 * GRP_NumWebPurchases4 + -0.75492549718573 * 
GRP_RFMstat2 + -0.7937620334965 * GRP_RFMstat3 + 1.16856250505521 * GRP_RFMstat4 + 
2.45700945744116 * GRP_RMntFrq2 + 2.6192187092108 * GRP_RMntFrq3 + -0.99545519667238 * 
GRP_RMntFrq4 + -0.8178492657671 * GRP_Recency2 + 0.13605490470692 * GRP_Recency3 + 
-0.93901422840588 * GRP_Recency4 ;
291229    +   H1x1_1  =      1.8884999595718 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.8884999595718 + H1x1_1 ;
291230    +   H1x1_2  =    -0.51989390923325 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.51989390923325 + H1x1_2 ;
291231    +   H1x1_3  =     2.10213347257206 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 2.10213347257206 + H1x1_3 ;
291232    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
291233    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
291234    +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
291235    +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
291236    +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
291237    +END;
MPRINT(EM_DIAGRAM):   END;
291238    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
291239    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
291240    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
291241    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
291242    +END;
MPRINT(EM_DIAGRAM):   END;
291243    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
291244    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
291245    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
291246    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
291247    +   P_DepVar1  =    -2.62984121710329 * H1x1_1  +    -2.65642038715706 * H1x1_2
291248    +          +    -4.24846513249504 * H1x1_3 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.62984121710329 * H1x1_1 + -2.65642038715706 * H1x1_2 + 
-4.24846513249504 * H1x1_3 ;
291249    +   P_DepVar1  =     3.19982150134729 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 3.19982150134729 + P_DepVar1 ;
291250    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
291251    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
291252    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
291253    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
291254    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
291255    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
291256    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
291257    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
291258    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
291259    +END;
MPRINT(EM_DIAGRAM):   END;
291260    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
291261    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
291262    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
291263    +END;
MPRINT(EM_DIAGRAM):   END;
291264    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
291265    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
291266    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
291267    +END;
MPRINT(EM_DIAGRAM):   END;
291268    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
291269    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
291270    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
291271    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
291272    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
291273    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
291274    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
291275    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
291276    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
291277    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
291278    +END;
MPRINT(EM_DIAGRAM):   END;
291279    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
291280    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
291281    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
291282    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
291283     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
      

MPRINT(EM_DIAGRAM):   quit;
291284     quit;
291285     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
291286     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
291287     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
291288     retain ID 2 Node "AutoNeural25";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural25";
291289     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
291290     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1737 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1737 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

291291     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
291292     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
291293     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1737 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1737 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

291294     proc sort data=EMWS8.AutoNeural25_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural25_variableset out=_temp2(keep=NAME 
CREATOR);
291295     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
291296     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 48 observations read from the data set EMWS8.AUTONEURAL25_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 48 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

291297     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
291298     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
291299     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
291300     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 48 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 48 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

291301     proc contents data=EMWS8.AutoNeural25_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural25_train out=_meta(keep=NAME) noprint;
291302     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 70 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

291303     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
291304     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
291305     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 70 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 70 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

291306     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
291307     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
291308     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
291309     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 70 observations read from the data set WORK._META.
NOTE: There were 48 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 70 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

291310     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
291311     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
291311   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 916 rows and 5 columns.

291312     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

291313     proc append base=EMWS8.Ensmbl50_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl50_FCMP data=_tempx;
291314     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL50_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 916 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL50_FCMP has 916 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

291315     filename _pref
291315   ! "C:\\predictive-models-project\Workspaces\EMWS8\BINNING\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\BINNING\EMPUBLISHSCORE.sas";
291316     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
291317     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\BINNING\EMPUBLISHSCORE.sas.
291318    +length _UFormat $200;
MPRINT(EM_DIAGRAM):   length _UFormat $200;
291319    +drop _UFormat;
MPRINT(EM_DIAGRAM):   drop _UFormat;
291320    +_UFormat='';
MPRINT(EM_DIAGRAM):   _UFormat='';
291321    +
291322    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
291323    +* Variable: AcceptedCmp5;
MPRINT(EM_DIAGRAM):   * Variable: AcceptedCmp5;
291324    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
291325    +LABEL GRP_AcceptedCmp5 =
291326    +'Grouped: AcceptedCmp5';
MPRINT(EM_DIAGRAM):   LABEL GRP_AcceptedCmp5 = 'Grouped: AcceptedCmp5';
291327    +
291328    +_UFormat = put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _UFormat = put(AcceptedCmp5,BEST.);
291329    +%dmnormip(_UFormat);
MPRINT(DMNORMIP):   call dmnorm(_UFormat,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
291330    +if MISSING(_UFORMAT) then do;
MPRINT(EM_DIAGRAM):   if MISSING(_UFORMAT) then do;
291331    +GRP_AcceptedCmp5 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 1;
291332    +end;
MPRINT(EM_DIAGRAM):   end;
291333    +else if NOT MISSING(_UFORMAT) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(_UFORMAT) then do;
291334    +if (_UFORMAT eq '0'
291335    +) then do;
MPRINT(EM_DIAGRAM):   if (_UFORMAT eq '0' ) then do;
291336    +GRP_AcceptedCmp5 = 2;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 2;
291337    +end;
MPRINT(EM_DIAGRAM):   end;
291338    +else
291339    +if (_UFORMAT eq '1'
291340    +) then do;
MPRINT(EM_DIAGRAM):   else if (_UFORMAT eq '1' ) then do;
291341    +GRP_AcceptedCmp5 = 3;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 3;
291342    +end;
MPRINT(EM_DIAGRAM):   end;
291343    +else do;
MPRINT(EM_DIAGRAM):   else do;
291344    +GRP_AcceptedCmp5 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 1;
291345    +end;
MPRINT(EM_DIAGRAM):   end;
291346    +end;
MPRINT(EM_DIAGRAM):   end;
291347    +
291348    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
291349    +* Variable: Frq;
MPRINT(EM_DIAGRAM):   * Variable: Frq;
291350    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
291351    +LABEL GRP_Frq = "Grouped: Frq";
MPRINT(EM_DIAGRAM):   LABEL GRP_Frq = "Grouped: Frq";
291352    +
291353    +if MISSING(Frq) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Frq) then do;
291354    +GRP_Frq = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq = 1;
291355    +end;
MPRINT(EM_DIAGRAM):   end;
291356    +else if NOT MISSING(Frq) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Frq) then do;
291357    +if Frq < 6 then do;
MPRINT(EM_DIAGRAM):   if Frq < 6 then do;
291358    +GRP_Frq = 2;
MPRINT(EM_DIAGRAM):   GRP_Frq = 2;
291359    +end;
MPRINT(EM_DIAGRAM):   end;
291360    +else
291361    +if 6 <= Frq AND Frq < 12 then do;
MPRINT(EM_DIAGRAM):   else if 6 <= Frq AND Frq < 12 then do;
291362    +GRP_Frq = 3;
MPRINT(EM_DIAGRAM):   GRP_Frq = 3;
291363    +end;
MPRINT(EM_DIAGRAM):   end;
291364    +else
291365    +if 12 <= Frq AND Frq < 18 then do;
MPRINT(EM_DIAGRAM):   else if 12 <= Frq AND Frq < 18 then do;
291366    +GRP_Frq = 4;
MPRINT(EM_DIAGRAM):   GRP_Frq = 4;
291367    +end;
MPRINT(EM_DIAGRAM):   end;
291368    +else
291369    +if 18 <= Frq then do;
MPRINT(EM_DIAGRAM):   else if 18 <= Frq then do;
291370    +GRP_Frq = 5;
MPRINT(EM_DIAGRAM):   GRP_Frq = 5;
291371    +end;
MPRINT(EM_DIAGRAM):   end;
291372    +end;
MPRINT(EM_DIAGRAM):   end;
291373    +
291374    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
291375    +* Variable: Income;
MPRINT(EM_DIAGRAM):   * Variable: Income;
291376    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
291377    +LABEL GRP_Income =
291378    +'Grouped: Income';
MPRINT(EM_DIAGRAM):   LABEL GRP_Income = 'Grouped: Income';
291379    +
291380    +if MISSING(Income) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Income) then do;
291381    +GRP_Income = 1;
MPRINT(EM_DIAGRAM):   GRP_Income = 1;
291382    +end;
MPRINT(EM_DIAGRAM):   end;
291383    +else if NOT MISSING(Income) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Income) then do;
291384    +if Income < 35268 then do;
MPRINT(EM_DIAGRAM):   if Income < 35268 then do;
291385    +GRP_Income = 2;
MPRINT(EM_DIAGRAM):   GRP_Income = 2;
291386    +end;
MPRINT(EM_DIAGRAM):   end;
291387    +else
291388    +if 35268 <= Income AND Income < 52157 then do;
MPRINT(EM_DIAGRAM):   else if 35268 <= Income AND Income < 52157 then do;
291389    +GRP_Income = 3;
MPRINT(EM_DIAGRAM):   GRP_Income = 3;
291390    +end;
MPRINT(EM_DIAGRAM):   end;
291391    +else
291392    +if 52157 <= Income AND Income < 69486 then do;
MPRINT(EM_DIAGRAM):   else if 52157 <= Income AND Income < 69486 then do;
291393    +GRP_Income = 4;
MPRINT(EM_DIAGRAM):   GRP_Income = 4;
291394    +end;
MPRINT(EM_DIAGRAM):   end;
291395    +else
291396    +if 69486 <= Income then do;
MPRINT(EM_DIAGRAM):   else if 69486 <= Income then do;
291397    +GRP_Income = 5;
MPRINT(EM_DIAGRAM):   GRP_Income = 5;
291398    +end;
MPRINT(EM_DIAGRAM):   end;
291399    +end;
MPRINT(EM_DIAGRAM):   end;
291400    +
291401    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
291402    +* Variable: Mnt;
MPRINT(EM_DIAGRAM):   * Variable: Mnt;
291403    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
291404    +LABEL GRP_Mnt = "Grouped: Mnt";
MPRINT(EM_DIAGRAM):   LABEL GRP_Mnt = "Grouped: Mnt";
291405    +
291406    +if MISSING(Mnt) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Mnt) then do;
291407    +GRP_Mnt = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 1;
291408    +end;
MPRINT(EM_DIAGRAM):   end;
291409    +else if NOT MISSING(Mnt) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Mnt) then do;
291410    +if Mnt < 72 then do;
MPRINT(EM_DIAGRAM):   if Mnt < 72 then do;
291411    +GRP_Mnt = 2;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 2;
291412    +end;
MPRINT(EM_DIAGRAM):   end;
291413    +else
291414    +if 72 <= Mnt AND Mnt < 405.5 then do;
MPRINT(EM_DIAGRAM):   else if 72 <= Mnt AND Mnt < 405.5 then do;
291415    +GRP_Mnt = 3;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 3;
291416    +end;
MPRINT(EM_DIAGRAM):   end;
291417    +else
291418    +if 405.5 <= Mnt AND Mnt < 1064 then do;
MPRINT(EM_DIAGRAM):   else if 405.5 <= Mnt AND Mnt < 1064 then do;
291419    +GRP_Mnt = 4;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 4;
291420    +end;
MPRINT(EM_DIAGRAM):   end;
291421    +else
291422    +if 1064 <= Mnt then do;
MPRINT(EM_DIAGRAM):   else if 1064 <= Mnt then do;
291423    +GRP_Mnt = 5;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 5;
291424    +end;
MPRINT(EM_DIAGRAM):   end;
291425    +end;
MPRINT(EM_DIAGRAM):   end;
291426    +
291427    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
291428    +* Variable: MntFishProducts;
MPRINT(EM_DIAGRAM):   * Variable: MntFishProducts;
291429    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
291430    +LABEL GRP_MntFishProducts =
291431    +'Grouped: MntFishProducts';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntFishProducts = 'Grouped: MntFishProducts';
291432    +
291433    +if MISSING(MntFishProducts) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntFishProducts) then do;
291434    +GRP_MntFishProducts = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 1;
291435    +end;
MPRINT(EM_DIAGRAM):   end;
291436    +else if NOT MISSING(MntFishProducts) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntFishProducts) then do;
291437    +if MntFishProducts < 3 then do;
MPRINT(EM_DIAGRAM):   if MntFishProducts < 3 then do;
291438    +GRP_MntFishProducts = 2;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 2;
291439    +end;
MPRINT(EM_DIAGRAM):   end;
291440    +else
291441    +if 3 <= MntFishProducts AND MntFishProducts < 13 then do;
MPRINT(EM_DIAGRAM):   else if 3 <= MntFishProducts AND MntFishProducts < 13 then do;
291442    +GRP_MntFishProducts = 3;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 3;
291443    +end;
MPRINT(EM_DIAGRAM):   end;
291444    +else
291445    +if 13 <= MntFishProducts AND MntFishProducts < 47 then do;
MPRINT(EM_DIAGRAM):   else if 13 <= MntFishProducts AND MntFishProducts < 47 then do;
291446    +GRP_MntFishProducts = 4;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 4;
291447    +end;
MPRINT(EM_DIAGRAM):   end;
291448    +else
291449    +if 47 <= MntFishProducts then do;
MPRINT(EM_DIAGRAM):   else if 47 <= MntFishProducts then do;
291450    +GRP_MntFishProducts = 5;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 5;
291451    +end;
MPRINT(EM_DIAGRAM):   end;
291452    +end;
MPRINT(EM_DIAGRAM):   end;
291453    +
291454    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
291455    +* Variable: MntGoldProds;
MPRINT(EM_DIAGRAM):   * Variable: MntGoldProds;
291456    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
291457    +LABEL GRP_MntGoldProds =
291458    +'Grouped: MntGoldProds';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntGoldProds = 'Grouped: MntGoldProds';
291459    +
291460    +if MISSING(MntGoldProds) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntGoldProds) then do;
291461    +GRP_MntGoldProds = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 1;
291462    +end;
MPRINT(EM_DIAGRAM):   end;
291463    +else if NOT MISSING(MntGoldProds) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntGoldProds) then do;
291464    +if MntGoldProds < 9 then do;
MPRINT(EM_DIAGRAM):   if MntGoldProds < 9 then do;
291465    +GRP_MntGoldProds = 2;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 2;
291466    +end;
MPRINT(EM_DIAGRAM):   end;
291467    +else
291468    +if 9 <= MntGoldProds AND MntGoldProds < 25 then do;
MPRINT(EM_DIAGRAM):   else if 9 <= MntGoldProds AND MntGoldProds < 25 then do;
291469    +GRP_MntGoldProds = 3;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 3;
291470    +end;
MPRINT(EM_DIAGRAM):   end;
291471    +else
291472    +if 25 <= MntGoldProds AND MntGoldProds < 59 then do;
MPRINT(EM_DIAGRAM):   else if 25 <= MntGoldProds AND MntGoldProds < 59 then do;
291473    +GRP_MntGoldProds = 4;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 4;
291474    +end;
MPRINT(EM_DIAGRAM):   end;
291475    +else
291476    +if 59 <= MntGoldProds then do;
MPRINT(EM_DIAGRAM):   else if 59 <= MntGoldProds then do;
291477    +GRP_MntGoldProds = 5;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 5;
291478    +end;
MPRINT(EM_DIAGRAM):   end;
291479    +end;
MPRINT(EM_DIAGRAM):   end;
291480    +
291481    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
291482    +* Variable: MntMeatProducts;
MPRINT(EM_DIAGRAM):   * Variable: MntMeatProducts;
291483    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
291484    +LABEL GRP_MntMeatProducts =
291485    +'Grouped: MntMeatProducts';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntMeatProducts = 'Grouped: MntMeatProducts';
291486    +
291487    +if MISSING(MntMeatProducts) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntMeatProducts) then do;
291488    +GRP_MntMeatProducts = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 1;
291489    +end;
MPRINT(EM_DIAGRAM):   end;
291490    +else if NOT MISSING(MntMeatProducts) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntMeatProducts) then do;
291491    +if MntMeatProducts < 17 then do;
MPRINT(EM_DIAGRAM):   if MntMeatProducts < 17 then do;
291492    +GRP_MntMeatProducts = 2;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 2;
291493    +end;
MPRINT(EM_DIAGRAM):   end;
291494    +else
291495    +if 17 <= MntMeatProducts AND MntMeatProducts < 72 then do;
MPRINT(EM_DIAGRAM):   else if 17 <= MntMeatProducts AND MntMeatProducts < 72 then do;
291496    +GRP_MntMeatProducts = 3;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 3;
291497    +end;
MPRINT(EM_DIAGRAM):   end;
291498    +else
291499    +if 72 <= MntMeatProducts AND MntMeatProducts < 246 then do;
MPRINT(EM_DIAGRAM):   else if 72 <= MntMeatProducts AND MntMeatProducts < 246 then do;
291500    +GRP_MntMeatProducts = 4;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 4;
291501    +end;
MPRINT(EM_DIAGRAM):   end;
291502    +else
291503    +if 246 <= MntMeatProducts then do;
MPRINT(EM_DIAGRAM):   else if 246 <= MntMeatProducts then do;
291504    +GRP_MntMeatProducts = 5;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 5;
291505    +end;
MPRINT(EM_DIAGRAM):   end;
291506    +end;
MPRINT(EM_DIAGRAM):   end;
291507    +
291508    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
291509    +* Variable: MntWines;
MPRINT(EM_DIAGRAM):   * Variable: MntWines;
291510    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
291511    +LABEL GRP_MntWines =
291512    +'Grouped: MntWines';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntWines = 'Grouped: MntWines';
291513    +
291514    +if MISSING(MntWines) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntWines) then do;
291515    +GRP_MntWines = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 1;
291516    +end;
MPRINT(EM_DIAGRAM):   end;
291517    +else if NOT MISSING(MntWines) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntWines) then do;
291518    +if MntWines < 24 then do;
MPRINT(EM_DIAGRAM):   if MntWines < 24 then do;
291519    +GRP_MntWines = 2;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 2;
291520    +end;
MPRINT(EM_DIAGRAM):   end;
291521    +else
291522    +if 24 <= MntWines AND MntWines < 183.5 then do;
MPRINT(EM_DIAGRAM):   else if 24 <= MntWines AND MntWines < 183.5 then do;
291523    +GRP_MntWines = 3;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 3;
291524    +end;
MPRINT(EM_DIAGRAM):   end;
291525    +else
291526    +if 183.5 <= MntWines AND MntWines < 508 then do;
MPRINT(EM_DIAGRAM):   else if 183.5 <= MntWines AND MntWines < 508 then do;
291527    +GRP_MntWines = 4;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 4;
291528    +end;
MPRINT(EM_DIAGRAM):   end;
291529    +else
291530    +if 508 <= MntWines then do;
MPRINT(EM_DIAGRAM):   else if 508 <= MntWines then do;
291531    +GRP_MntWines = 5;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 5;
291532    +end;
MPRINT(EM_DIAGRAM):   end;
291533    +end;
MPRINT(EM_DIAGRAM):   end;
291534    +
291535    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
291536    +* Variable: NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumCatalogPurchases;
291537    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
291538    +LABEL GRP_NumCatalogPurchases =
291539    +'Grouped: NumCatalogPurchases';
MPRINT(EM_DIAGRAM):   LABEL GRP_NumCatalogPurchases = 'Grouped: NumCatalogPurchases';
291540    +
291541    +if MISSING(NumCatalogPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumCatalogPurchases) then do;
291542    +GRP_NumCatalogPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 1;
291543    +end;
MPRINT(EM_DIAGRAM):   end;
291544    +else if NOT MISSING(NumCatalogPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumCatalogPurchases) then do;
291545    +if NumCatalogPurchases < 0 then do;
MPRINT(EM_DIAGRAM):   if NumCatalogPurchases < 0 then do;
291546    +GRP_NumCatalogPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 2;
291547    +end;
MPRINT(EM_DIAGRAM):   end;
291548    +else
291549    +if 0 <= NumCatalogPurchases AND NumCatalogPurchases < 2 then do;
MPRINT(EM_DIAGRAM):   else if 0 <= NumCatalogPurchases AND NumCatalogPurchases < 2 then do;
291550    +GRP_NumCatalogPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 3;
291551    +end;
MPRINT(EM_DIAGRAM):   end;
291552    +else
291553    +if 2 <= NumCatalogPurchases AND NumCatalogPurchases < 4 then do;
MPRINT(EM_DIAGRAM):   else if 2 <= NumCatalogPurchases AND NumCatalogPurchases < 4 then do;
291554    +GRP_NumCatalogPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 4;
291555    +end;
MPRINT(EM_DIAGRAM):   end;
291556    +else
291557    +if 4 <= NumCatalogPurchases then do;
MPRINT(EM_DIAGRAM):   else if 4 <= NumCatalogPurchases then do;
291558    +GRP_NumCatalogPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 5;
291559    +end;
MPRINT(EM_DIAGRAM):   end;
291560    +end;
MPRINT(EM_DIAGRAM):   end;
291561    +
291562    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
291563    +* Variable: NumDistPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumDistPurchases;
291564    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
291565    +LABEL GRP_NumDistPurchases = "Grouped: NumDistPurchases";
MPRINT(EM_DIAGRAM):   LABEL GRP_NumDistPurchases = "Grouped: NumDistPurchases";
291566    +
291567    +if MISSING(NumDistPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumDistPurchases) then do;
291568    +GRP_NumDistPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 1;
291569    +end;
MPRINT(EM_DIAGRAM):   end;
291570    +else if NOT MISSING(NumDistPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumDistPurchases) then do;
291571    +if NumDistPurchases < 3 then do;
MPRINT(EM_DIAGRAM):   if NumDistPurchases < 3 then do;
291572    +GRP_NumDistPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 2;
291573    +end;
MPRINT(EM_DIAGRAM):   end;
291574    +else
291575    +if 3 <= NumDistPurchases AND NumDistPurchases < 6 then do;
MPRINT(EM_DIAGRAM):   else if 3 <= NumDistPurchases AND NumDistPurchases < 6 then do;
291576    +GRP_NumDistPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 3;
291577    +end;
MPRINT(EM_DIAGRAM):   end;
291578    +else
291579    +if 6 <= NumDistPurchases AND NumDistPurchases < 10 then do;
MPRINT(EM_DIAGRAM):   else if 6 <= NumDistPurchases AND NumDistPurchases < 10 then do;
291580    +GRP_NumDistPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 4;
291581    +end;
MPRINT(EM_DIAGRAM):   end;
291582    +else
291583    +if 10 <= NumDistPurchases then do;
MPRINT(EM_DIAGRAM):   else if 10 <= NumDistPurchases then do;
291584    +GRP_NumDistPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 5;
291585    +end;
MPRINT(EM_DIAGRAM):   end;
291586    +end;
MPRINT(EM_DIAGRAM):   end;
291587    +
291588    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
291589    +* Variable: NumWebPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumWebPurchases;
291590    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
291591    +LABEL GRP_NumWebPurchases =
291592    +'Grouped: NumWebPurchases';
MPRINT(EM_DIAGRAM):   LABEL GRP_NumWebPurchases = 'Grouped: NumWebPurchases';
291593    +
291594    +if MISSING(NumWebPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumWebPurchases) then do;
291595    +GRP_NumWebPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 1;
291596    +end;
MPRINT(EM_DIAGRAM):   end;
291597    +else if NOT MISSING(NumWebPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumWebPurchases) then do;
291598    +if NumWebPurchases < 2 then do;
MPRINT(EM_DIAGRAM):   if NumWebPurchases < 2 then do;
291599    +GRP_NumWebPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 2;
291600    +end;
MPRINT(EM_DIAGRAM):   end;
291601    +else
291602    +if 2 <= NumWebPurchases AND NumWebPurchases < 4 then do;
MPRINT(EM_DIAGRAM):   else if 2 <= NumWebPurchases AND NumWebPurchases < 4 then do;
291603    +GRP_NumWebPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 3;
291604    +end;
MPRINT(EM_DIAGRAM):   end;
291605    +else
291606    +if 4 <= NumWebPurchases AND NumWebPurchases < 6 then do;
MPRINT(EM_DIAGRAM):   else if 4 <= NumWebPurchases AND NumWebPurchases < 6 then do;
291607    +GRP_NumWebPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 4;
291608    +end;
MPRINT(EM_DIAGRAM):   end;
291609    +else
291610    +if 6 <= NumWebPurchases then do;
MPRINT(EM_DIAGRAM):   else if 6 <= NumWebPurchases then do;
291611    +GRP_NumWebPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 5;
291612    +end;
MPRINT(EM_DIAGRAM):   end;
291613    +end;
MPRINT(EM_DIAGRAM):   end;
291614    +
291615    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
291616    +* Variable: RFMstat;
MPRINT(EM_DIAGRAM):   * Variable: RFMstat;
291617    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
291618    +LABEL GRP_RFMstat = "Grouped: RFMstat";
MPRINT(EM_DIAGRAM):   LABEL GRP_RFMstat = "Grouped: RFMstat";
291619    +
291620    +if MISSING(RFMstat) then do;
MPRINT(EM_DIAGRAM):   if MISSING(RFMstat) then do;
291621    +GRP_RFMstat = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 1;
291622    +end;
MPRINT(EM_DIAGRAM):   end;
291623    +else if NOT MISSING(RFMstat) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(RFMstat) then do;
291624    +if RFMstat < 10.34 then do;
MPRINT(EM_DIAGRAM):   if RFMstat < 10.34 then do;
291625    +GRP_RFMstat = 2;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 2;
291626    +end;
MPRINT(EM_DIAGRAM):   end;
291627    +else
291628    +if 10.34 <= RFMstat AND RFMstat < 128.09 then do;
MPRINT(EM_DIAGRAM):   else if 10.34 <= RFMstat AND RFMstat < 128.09 then do;
291629    +GRP_RFMstat = 3;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 3;
291630    +end;
MPRINT(EM_DIAGRAM):   end;
291631    +else
291632    +if 128.09 <= RFMstat AND RFMstat < 455.22 then do;
MPRINT(EM_DIAGRAM):   else if 128.09 <= RFMstat AND RFMstat < 455.22 then do;
291633    +GRP_RFMstat = 4;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 4;
291634    +end;
MPRINT(EM_DIAGRAM):   end;
291635    +else
291636    +if 455.22 <= RFMstat then do;
MPRINT(EM_DIAGRAM):   else if 455.22 <= RFMstat then do;
291637    +GRP_RFMstat = 5;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 5;
291638    +end;
MPRINT(EM_DIAGRAM):   end;
291639    +end;
MPRINT(EM_DIAGRAM):   end;
291640    +
291641    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
291642    +* Variable: RMntFrq;
MPRINT(EM_DIAGRAM):   * Variable: RMntFrq;
291643    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
291644    +LABEL GRP_RMntFrq = "Grouped: RMntFrq";
MPRINT(EM_DIAGRAM):   LABEL GRP_RMntFrq = "Grouped: RMntFrq";
291645    +
291646    +if MISSING(RMntFrq) then do;
MPRINT(EM_DIAGRAM):   if MISSING(RMntFrq) then do;
291647    +GRP_RMntFrq = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 1;
291648    +end;
MPRINT(EM_DIAGRAM):   end;
291649    +else if NOT MISSING(RMntFrq) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(RMntFrq) then do;
291650    +if RMntFrq < 13.25 then do;
MPRINT(EM_DIAGRAM):   if RMntFrq < 13.25 then do;
291651    +GRP_RMntFrq = 2;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 2;
291652    +end;
MPRINT(EM_DIAGRAM):   end;
291653    +else
291654    +if 13.25 <= RMntFrq AND RMntFrq < 30.4 then do;
MPRINT(EM_DIAGRAM):   else if 13.25 <= RMntFrq AND RMntFrq < 30.4 then do;
291655    +GRP_RMntFrq = 3;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 3;
291656    +end;
MPRINT(EM_DIAGRAM):   end;
291657    +else
291658    +if 30.4 <= RMntFrq AND RMntFrq < 52.86 then do;
MPRINT(EM_DIAGRAM):   else if 30.4 <= RMntFrq AND RMntFrq < 52.86 then do;
291659    +GRP_RMntFrq = 4;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 4;
291660    +end;
MPRINT(EM_DIAGRAM):   end;
291661    +else
291662    +if 52.86 <= RMntFrq then do;
MPRINT(EM_DIAGRAM):   else if 52.86 <= RMntFrq then do;
291663    +GRP_RMntFrq = 5;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 5;
291664    +end;
MPRINT(EM_DIAGRAM):   end;
291665    +end;
MPRINT(EM_DIAGRAM):   end;
291666    +
291667    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
291668    +* Variable: Recency;
MPRINT(EM_DIAGRAM):   * Variable: Recency;
291669    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
291670    +LABEL GRP_Recency =
291671    +'Grouped: Recency';
MPRINT(EM_DIAGRAM):   LABEL GRP_Recency = 'Grouped: Recency';
291672    +
291673    +if MISSING(Recency) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Recency) then do;
291674    +GRP_Recency = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency = 1;
291675    +end;
MPRINT(EM_DIAGRAM):   end;
291676    +else if NOT MISSING(Recency) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Recency) then do;
291677    +if Recency < 24 then do;
MPRINT(EM_DIAGRAM):   if Recency < 24 then do;
291678    +GRP_Recency = 2;
MPRINT(EM_DIAGRAM):   GRP_Recency = 2;
291679    +end;
MPRINT(EM_DIAGRAM):   end;
291680    +else
291681    +if 24 <= Recency AND Recency < 48 then do;
MPRINT(EM_DIAGRAM):   else if 24 <= Recency AND Recency < 48 then do;
291682    +GRP_Recency = 3;
MPRINT(EM_DIAGRAM):   GRP_Recency = 3;
291683    +end;
MPRINT(EM_DIAGRAM):   end;
291684    +else
291685    +if 48 <= Recency AND Recency < 73 then do;
MPRINT(EM_DIAGRAM):   else if 48 <= Recency AND Recency < 73 then do;
291686    +GRP_Recency = 4;
MPRINT(EM_DIAGRAM):   GRP_Recency = 4;
291687    +end;
MPRINT(EM_DIAGRAM):   end;
291688    +else
291689    +if 73 <= Recency then do;
MPRINT(EM_DIAGRAM):   else if 73 <= Recency then do;
291690    +GRP_Recency = 5;
MPRINT(EM_DIAGRAM):   GRP_Recency = 5;
291691    +end;
MPRINT(EM_DIAGRAM):   end;
291692    +end;
MPRINT(EM_DIAGRAM):   end;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
291693     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
291694     quit;
291695     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
291696     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
291697     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
291698     retain ID 3 Node "BINNING";
MPRINT(EM_DIAGRAM):   retain ID 3 Node "BINNING";
291699     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
291700     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 16 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 16 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

291701     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
291702     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
291703     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 16 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 16 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

291704     proc sort data=EMWS8.BINNING_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.BINNING_variableset out=_temp2(keep=NAME CREATOR);
291705     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
291706     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 36 observations read from the data set EMWS8.BINNING_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 36 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

291707     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
291708     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
291709     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
291710     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 36 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 36 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

291711     proc contents data=EMWS8.BINNING_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.BINNING_train out=_meta(keep=NAME) noprint;
291712     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 59 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

291713     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
291714     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
291715     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 59 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 59 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

291716     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
291717     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
291718     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
291719     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 59 observations read from the data set WORK._META.
NOTE: There were 36 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 59 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

291720     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
291721     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
291721   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 15 rows and 5 columns.

291722     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

291723     proc append base=EMWS8.Ensmbl50_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl50_FCMP data=_tempx;
291724     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL50_FCMP.
NOTE: There were 15 observations read from the data set WORK._TEMPX.
NOTE: 15 observations added.
NOTE: The data set EMWS8.ENSMBL50_FCMP has 931 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

291725     filename _pref
291725   ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
291726     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
291727     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
291728    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
291729    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
291730    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
291731    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
291732    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
291733    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
291734     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
291735     quit;
291736     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
291737     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
291738     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
291739     retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
291740     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
291741     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

291742     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
291743     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
291744     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

291745     proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
291746     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
291747     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.24 seconds
      cpu time            0.00 seconds
      

291748     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
291749     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
291750     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
291751     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

291752     proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
291753     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

291754     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
291755     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
291756     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

291757     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
291758     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
291759     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
291760     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

291761     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
291762     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
291762   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

291763     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

291764     proc append base=EMWS8.Ensmbl50_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl50_FCMP data=_tempx;
291765     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL50_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL50_FCMP has 935 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

291766     filename _pref
291766   ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
291767     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
291768     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
291769    +
291770    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
291771    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
291771   !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
291772    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
291773    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
291774    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
291775    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
291776    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
291777     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
291778     quit;
291779     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
291780     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
291781     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
291782     retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
291783     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
291784     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

291785     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
291786     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
291787     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

291788     proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
291789     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
291790     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

291791     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
291792     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
291793     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
291794     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

291795     proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
291796     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

291797     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
291798     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
291799     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

291800     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
291801     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
291802     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
291803     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

291804     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
291805     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
291805   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

291806     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

291807     proc append base=EMWS8.Ensmbl50_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl50_FCMP data=_tempx;
291808     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL50_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL50_FCMP has 974 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

291809     filename _pref
291809   ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
291810     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
291811     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
291812    +
291813    +
291814    +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
291815    +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
291816    +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
291817    +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
291818    +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
291819    +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
291820    +
291821    +
291822    +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
291823    +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
291824    +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
291825    +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
291826    +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
291827    +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
291828    +
291829    +
291830    +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
291831    +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
291832    +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
291833    +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
291834    +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
291835    +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
291836    +
291837    +
291838    +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
291839    +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
291840    +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
291841    +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
291842    +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
291843    +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
291844    +
291845    +
291846    +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
291847    +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
291848    +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
291849    +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
291850    +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
291851    +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
291852    +
291853    +
291854    +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
291855    +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
291856    +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
291857    +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
291858    +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
291859    +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
291860    +
291861    +
291862    +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
291863    +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
291864    +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
291865    +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
291866    +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
291867    +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
291868    +
291869    +
291870    +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
291871    +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
291872    +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
291873    +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
291874    +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
291875    +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
291876    +if
291877    +_FILTERNORM1 not in ( '.')
291878    + and
291879    +_FILTERNORM2 not in ( '.')
291880    + and
291881    +_FILTERNORM3 not in ( '.')
291882    + and
291883    +_FILTERNORM4 not in ( '.')
291884    + and
291885    +_FILTERNORM5 not in ( '.')
291886    + and
291887    +_FILTERNORM6 not in ( '.')
291888    + and
291889    +_FILTERNORM7 not in ( ' ')
291890    + and
291891    +_FILTERNORM8 not in ( ' ')
291892    +and
291893    +( Dt_Customer ne .)
291894    +and ( Income ne . and (Income<=107000))
291895    +and ( Kidhome ne .)
291896    +and ( MntFishProducts ne .)
291897    +and ( MntFruits ne .)
291898    +and ( MntGoldProds ne .)
291899    +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
291900    +and ( MntSweetProducts ne .)
291901    +and ( MntWines ne .)
291902    +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
291903    +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
291904    +and ( NumStorePurchases ne .)
291905    +and ( NumWebPurchases ne .)
291906    +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
291907    +and ( Recency ne .)
291908    +and ( Teenhome ne .)
291909    +and ( Year_Birth ne .)
291910    +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
291911    +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
291912    +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
291913    +end;
MPRINT(EM_DIAGRAM):   end;
291914    +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
291915    +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
291916     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
291917     quit;
291918     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
291919     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
291920     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
291921     retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
291922     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
291923     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

291924     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
291925     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
291926     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

291927     proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
291928     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
291929     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

291930     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
291931     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
291932     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
291933     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

291934     proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
291935     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

291936     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
291937     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
291938     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

291939     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
291940     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
291941     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
291942     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

291943     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
291944     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
291944   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

291945     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

291946     proc append base=EMWS8.Ensmbl50_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl50_FCMP data=_tempx;
291947     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL50_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL50_FCMP has 1040 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

291948     %macro varDept(fcmpdata=,id=);
291949     %global nobs&id scoreFlag&id;
291950     %let scoreFlag&id = 0;
291951     %if &id=1 or ^&fcmpStart %then %do;
291952     proc sort data=&fcmpdata out=_temp&id nodupkey;
291953     by NAME;
291954     where id=&id and LHS in( %let j=1;
291955     %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
291956     %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
291957     "&var" %let j = %eval(&j+1);
291958     %end;
291959     );
291960     run;
291961     %let dsid = %sysfunc(open(_temp&id));
291962     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
291963     %let dsid = %sysfunc(close(&dsid));
291964     %if &&nobs&id %then %do;
291965     %let scoreFlag&id = 1;
291966     %let fcmpStart = 1;
291967     %end;
291968     %else %let fcmpStart = 0;
291969     %end;
291970     %else %do;
291971     proc sort data=&fcmpdata out=_tempid;
291972     where id=&id;
291973     by LHS;
291974     run;
291975     %let dsid = %sysfunc(open(_tempid));
291976     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
291977     %let dsid = %sysfunc(close(&dsid));
291978     %if ^&&nobs&id %then %do;
291979     proc datasets lib=work nolist;
291980     delete _tempid;
291981     run;
291982     quit;
291983     %end;
291984     %else %do;
291985     data _tempAll;
291986     set %let j=%eval(&id-1);
291987     %do x=1 %to &j;
291988     %if &&nobs&x %then %do;
291989     _temp&x %end;
291990     %end;
291991     ;
291992     run;
291993     proc sql;
291994     create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
291994   ! work._tempid p2 where p.name=p2.lhs;
291995     quit;
291996     data _temp&id;
291997     set _temp&id;
291998     where LHS ne '' and NAME ne '' and Node ne '';
291999     run;
292000     proc datasets lib=work nolist;
292001     delete _tempAll;
292002     run;
292003     %let dsid = %sysfunc(open(_temp&id));
292004     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
292005     %let dsid = %sysfunc(close(&dsid));
292006     %if ^&&nobs&id %then %do;
292007     proc datasets lib=work nolist;
292008     delete _temp&id;
292009     run;
292010     quit;
292011     %end;
292012     %else %do;
292013     %let scoreFlag&id = 1;
292014     data _temp&id;
292015     set _temp&id;
292016     where LHS ne NAME and node ne '';
292017     run;
292018     %let dsid = %sysfunc(open(_temp&id));
292019     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
292020     %let dsid = %sysfunc(close(&dsid));
292021     %if ^&&nobs&id %then %do;
292022     proc datasets lib=work nolist;
292023     delete _temp&id;
292024     run;
292025     quit;
292026     %end;
292027     %else %do;
292028     proc sort data=_temp&id nodupkey;
292029     by LHS NAME;
292030     run;
292031     %end;
292032     %end;
292033     %end;
292034     %end;
292035     %mend varDept;
292036     %macro optCode(outdata=fcmpdata);
292037     %global fcmpStart;
292038     %let fcmpStart = 0;
292039     %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
292040     %let NumNodes=9;
292041     %do k=1 %to &NumNodes;
292042     %vardept(fcmpdata=&outdata, id=&k);
292043     %end;
292044     %mend optCode;
292045     %optcode(outData=EMWS8.Ensmbl50_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl50_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL50_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl50_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 75 observations read from the data set EMWS8.ENSMBL50_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 55 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 20 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl50_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 15 observations read from the data set EMWS8.ENSMBL50_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 15 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 20 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 20 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp3 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP3 created, with 14 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP3 has 14 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP3 has 14 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp3 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP3.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP3 has 14 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl50_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL50_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl50_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL50_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 ;
MPRINT(VARDEPT):   run;

NOTE: There were 20 observations read from the data set WORK._TEMP2.
NOTE: There were 14 observations read from the data set WORK._TEMP3.
NOTE: The data set WORK._TEMPALL has 34 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 2 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl50_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL50_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 20 observations read from the data set WORK._TEMP2.
NOTE: There were 14 observations read from the data set WORK._TEMP3.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 36 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 32 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 32 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 32 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 32 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 32 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 32 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 32 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl50_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL50_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 20 observations read from the data set WORK._TEMP2.
NOTE: There were 14 observations read from the data set WORK._TEMP3.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: There were 32 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 68 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl50_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL50_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl50_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL50_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

292046     data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
292047     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
292048     where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
292049     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

292050     data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
292051     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
292052     where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
292053     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

292054     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
292055     create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
292055   ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 2 rows and 3 columns.

292056     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

292057     data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
292058     set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
292059     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 2 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 2 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

292060     data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
292061     set EMWS8.BINNING_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.BINNING_EMSCOREVAR;
292062     where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
292063     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS8.BINNING_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

292064     data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
292065     set EMWS8.BINNING_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.BINNING_EMSCOREVAR;
292066     where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
292067     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.BINNING_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

292068     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
292069     create table _CodeVar7 as select p.lhs, p2.formula, p2.file from _temp3 p,
292069   ! EMWS8.BINNING_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar7 as select p.lhs, p2.formula, p2.file from _temp3 
p, EMWS8.BINNING_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR7 created, with 14 rows and 3 columns.

292070     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

292071     data _CodeVar7;
MPRINT(EM_DIAGRAM):   data _CodeVar7;
292072     set _all_ _CodeVar7 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar7 _postall_;
292073     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK._ALL_.
NOTE: There were 14 observations read from the data set WORK._CODEVAR7.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR7 has 15 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

292074     filename _pref
292074   ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural23\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural23\EMPUBLISHSCORE.sas";
292075     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
292076     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural23\EMPUBLISHSCORE.sas.
292077    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
292078    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
292079    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
292080    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
292081    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
292082    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
292083    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
292084    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
292085    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
292086    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
292087    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
292088    +LENGTH _WARN_ $4
292089    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
292090    +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
292091    +
292092    +      label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
MPRINT(EM_DIAGRAM):   label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
292093    +
292094    +      label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
292095    +
292096    +      label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
292097    +
292098    +      label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
292099    +
292100    +      label GRP_Income2 = 'Dummy: GRP_Income=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Income2 = 'Dummy: GRP_Income=2' ;
292101    +
292102    +      label GRP_Income3 = 'Dummy: GRP_Income=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Income3 = 'Dummy: GRP_Income=3' ;
292103    +
292104    +      label GRP_Income4 = 'Dummy: GRP_Income=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Income4 = 'Dummy: GRP_Income=4' ;
292105    +
292106    +      label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
292107    +
292108    +      label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
292109    +
292110    +      label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
292111    +
292112    +      label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
292113    +
292114    +      label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
292115    +
292116    +      label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
292117    +
292118    +      label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
292119    +
292120    +      label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
292121    +
292122    +      label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
292123    +
292124    +      label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
292125    +
292126    +      label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
292127    +
292128    +      label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
292129    +
292130    +      label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
292131    +
292132    +      label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
292133    +
292134    +      label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
292135    +
292136    +      label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
292137    +
292138    +      label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
292139    +
292140    +      label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
292141    +
292142    +      label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
292143    +
292144    +      label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
292145    +
292146    +      label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
292147    +
292148    +      label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
292149    +
292150    +      label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
292151    +
292152    +      label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
292153    +
292154    +      label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
292155    +
292156    +      label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
292157    +
292158    +      label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
292159    +
292160    +      label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
292161    +
292162    +      label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
292163    +
292164    +      label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
292165    +
292166    +      label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
292167    +
292168    +      label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
292169    +
292170    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
292171    +
292172    +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
292173    +
292174    +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
292175    +
292176    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
292177    +
292178    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
292179    +
292180    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
292181    +
292182    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
292183    +
292184    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
292185    +
292186    +*** Generate dummy variables for GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmp5 ;
292187    +drop GRP_AcceptedCmp52 ;
MPRINT(EM_DIAGRAM):   drop GRP_AcceptedCmp52 ;
292188    +if missing( GRP_AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmp5 ) then do;
292189    +   GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
292190    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
292191    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
292192    +end;
MPRINT(EM_DIAGRAM):   end;
292193    +else do;
MPRINT(EM_DIAGRAM):   else do;
292194    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
292195    +   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
292196    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
292197    +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
292198    +      GRP_AcceptedCmp52 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = 1;
292199    +   end;
MPRINT(EM_DIAGRAM):   end;
292200    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
292201    +      GRP_AcceptedCmp52 = -1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = -1;
292202    +   end;
MPRINT(EM_DIAGRAM):   end;
292203    +   else do;
MPRINT(EM_DIAGRAM):   else do;
292204    +      GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
292205    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
292206    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
292207    +   end;
MPRINT(EM_DIAGRAM):   end;
292208    +end;
MPRINT(EM_DIAGRAM):   end;
292209    +
292210    +*** Generate dummy variables for GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Frq ;
292211    +drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
292212    +if missing( GRP_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Frq ) then do;
292213    +   GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
292214    +   GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
292215    +   GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
292216    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
292217    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
292218    +end;
MPRINT(EM_DIAGRAM):   end;
292219    +else do;
MPRINT(EM_DIAGRAM):   else do;
292220    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
292221    +   _dm12 = put( GRP_Frq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Frq , BEST12. );
292222    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
292223    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
292224    +      GRP_Frq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = -1;
292225    +      GRP_Frq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = -1;
292226    +      GRP_Frq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = -1;
292227    +   end;
MPRINT(EM_DIAGRAM):   end;
292228    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
292229    +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
292230    +      GRP_Frq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 1;
292231    +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
292232    +   end;
MPRINT(EM_DIAGRAM):   end;
292233    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
292234    +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
292235    +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
292236    +      GRP_Frq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 1;
292237    +   end;
MPRINT(EM_DIAGRAM):   end;
292238    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
292239    +      GRP_Frq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 1;
292240    +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
292241    +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
292242    +   end;
MPRINT(EM_DIAGRAM):   end;
292243    +   else do;
MPRINT(EM_DIAGRAM):   else do;
292244    +      GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
292245    +      GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
292246    +      GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
292247    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
292248    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
292249    +   end;
MPRINT(EM_DIAGRAM):   end;
292250    +end;
MPRINT(EM_DIAGRAM):   end;
292251    +
292252    +*** Generate dummy variables for GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Income ;
292253    +drop GRP_Income2 GRP_Income3 GRP_Income4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Income2 GRP_Income3 GRP_Income4 ;
292254    +if missing( GRP_Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Income ) then do;
292255    +   GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
292256    +   GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
292257    +   GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
292258    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
292259    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
292260    +end;
MPRINT(EM_DIAGRAM):   end;
292261    +else do;
MPRINT(EM_DIAGRAM):   else do;
292262    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
292263    +   _dm12 = put( GRP_Income , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Income , BEST12. );
292264    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
292265    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
292266    +      GRP_Income2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = -1;
292267    +      GRP_Income3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = -1;
292268    +      GRP_Income4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = -1;
292269    +   end;
MPRINT(EM_DIAGRAM):   end;
292270    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
292271    +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
292272    +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
292273    +      GRP_Income4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 1;
292274    +   end;
MPRINT(EM_DIAGRAM):   end;
292275    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
292276    +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
292277    +      GRP_Income3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 1;
292278    +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
292279    +   end;
MPRINT(EM_DIAGRAM):   end;
292280    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
292281    +      GRP_Income2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 1;
292282    +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
292283    +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
292284    +   end;
MPRINT(EM_DIAGRAM):   end;
292285    +   else do;
MPRINT(EM_DIAGRAM):   else do;
292286    +      GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
292287    +      GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
292288    +      GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
292289    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
292290    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
292291    +   end;
MPRINT(EM_DIAGRAM):   end;
292292    +end;
MPRINT(EM_DIAGRAM):   end;
292293    +
292294    +*** Generate dummy variables for GRP_Mnt ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Mnt ;
292295    +drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
292296    +if missing( GRP_Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Mnt ) then do;
292297    +   GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
292298    +   GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
292299    +   GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
292300    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
292301    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
292302    +end;
MPRINT(EM_DIAGRAM):   end;
292303    +else do;
MPRINT(EM_DIAGRAM):   else do;
292304    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
292305    +   _dm12 = put( GRP_Mnt , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Mnt , BEST12. );
292306    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
292307    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
292308    +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
292309    +      GRP_Mnt3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 1;
292310    +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
292311    +   end;
MPRINT(EM_DIAGRAM):   end;
292312    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
292313    +      GRP_Mnt2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = -1;
292314    +      GRP_Mnt3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = -1;
292315    +      GRP_Mnt4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = -1;
292316    +   end;
MPRINT(EM_DIAGRAM):   end;
292317    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
292318    +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
292319    +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
292320    +      GRP_Mnt4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 1;
292321    +   end;
MPRINT(EM_DIAGRAM):   end;
292322    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
292323    +      GRP_Mnt2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 1;
292324    +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
292325    +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
292326    +   end;
MPRINT(EM_DIAGRAM):   end;
292327    +   else do;
MPRINT(EM_DIAGRAM):   else do;
292328    +      GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
292329    +      GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
292330    +      GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
292331    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
292332    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
292333    +   end;
MPRINT(EM_DIAGRAM):   end;
292334    +end;
MPRINT(EM_DIAGRAM):   end;
292335    +
292336    +*** Generate dummy variables for GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntFishProducts ;
292337    +drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
292338    +if missing( GRP_MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntFishProducts ) then do;
292339    +   GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
292340    +   GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
292341    +   GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
292342    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
292343    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
292344    +end;
MPRINT(EM_DIAGRAM):   end;
292345    +else do;
MPRINT(EM_DIAGRAM):   else do;
292346    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
292347    +   _dm12 = put( GRP_MntFishProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntFishProducts , BEST12. );
292348    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
292349    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
292350    +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
292351    +      GRP_MntFishProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 1;
292352    +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
292353    +   end;
MPRINT(EM_DIAGRAM):   end;
292354    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
292355    +      GRP_MntFishProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = -1;
292356    +      GRP_MntFishProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = -1;
292357    +      GRP_MntFishProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = -1;
292358    +   end;
MPRINT(EM_DIAGRAM):   end;
292359    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
292360    +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
292361    +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
292362    +      GRP_MntFishProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 1;
292363    +   end;
MPRINT(EM_DIAGRAM):   end;
292364    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
292365    +      GRP_MntFishProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 1;
292366    +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
292367    +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
292368    +   end;
MPRINT(EM_DIAGRAM):   end;
292369    +   else do;
MPRINT(EM_DIAGRAM):   else do;
292370    +      GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
292371    +      GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
292372    +      GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
292373    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
292374    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
292375    +   end;
MPRINT(EM_DIAGRAM):   end;
292376    +end;
MPRINT(EM_DIAGRAM):   end;
292377    +
292378    +*** Generate dummy variables for GRP_MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntGoldProds ;
292379    +drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
292380    +if missing( GRP_MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntGoldProds ) then do;
292381    +   GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
292382    +   GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
292383    +   GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
292384    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
292385    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
292386    +end;
MPRINT(EM_DIAGRAM):   end;
292387    +else do;
MPRINT(EM_DIAGRAM):   else do;
292388    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
292389    +   _dm12 = put( GRP_MntGoldProds , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntGoldProds , BEST12. );
292390    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
292391    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
292392    +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
292393    +      GRP_MntGoldProds3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 1;
292394    +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
292395    +   end;
MPRINT(EM_DIAGRAM):   end;
292396    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
292397    +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
292398    +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
292399    +      GRP_MntGoldProds4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 1;
292400    +   end;
MPRINT(EM_DIAGRAM):   end;
292401    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
292402    +      GRP_MntGoldProds2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = -1;
292403    +      GRP_MntGoldProds3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = -1;
292404    +      GRP_MntGoldProds4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = -1;
292405    +   end;
MPRINT(EM_DIAGRAM):   end;
292406    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
292407    +      GRP_MntGoldProds2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 1;
292408    +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
292409    +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
292410    +   end;
MPRINT(EM_DIAGRAM):   end;
292411    +   else do;
MPRINT(EM_DIAGRAM):   else do;
292412    +      GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
292413    +      GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
292414    +      GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
292415    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
292416    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
292417    +   end;
MPRINT(EM_DIAGRAM):   end;
292418    +end;
MPRINT(EM_DIAGRAM):   end;
292419    +
292420    +*** Generate dummy variables for GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntMeatProducts ;
292421    +drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
292422    +if missing( GRP_MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntMeatProducts ) then do;
292423    +   GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
292424    +   GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
292425    +   GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
292426    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
292427    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
292428    +end;
MPRINT(EM_DIAGRAM):   end;
292429    +else do;
MPRINT(EM_DIAGRAM):   else do;
292430    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
292431    +   _dm12 = put( GRP_MntMeatProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntMeatProducts , BEST12. );
292432    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
292433    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
292434    +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
292435    +      GRP_MntMeatProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 1;
292436    +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
292437    +   end;
MPRINT(EM_DIAGRAM):   end;
292438    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
292439    +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
292440    +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
292441    +      GRP_MntMeatProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 1;
292442    +   end;
MPRINT(EM_DIAGRAM):   end;
292443    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
292444    +      GRP_MntMeatProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = -1;
292445    +      GRP_MntMeatProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = -1;
292446    +      GRP_MntMeatProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = -1;
292447    +   end;
MPRINT(EM_DIAGRAM):   end;
292448    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
292449    +      GRP_MntMeatProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 1;
292450    +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
292451    +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
292452    +   end;
MPRINT(EM_DIAGRAM):   end;
292453    +   else do;
MPRINT(EM_DIAGRAM):   else do;
292454    +      GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
292455    +      GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
292456    +      GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
292457    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
292458    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
292459    +   end;
MPRINT(EM_DIAGRAM):   end;
292460    +end;
MPRINT(EM_DIAGRAM):   end;
292461    +
292462    +*** Generate dummy variables for GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntWines ;
292463    +drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
292464    +if missing( GRP_MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntWines ) then do;
292465    +   GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
292466    +   GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
292467    +   GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
292468    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
292469    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
292470    +end;
MPRINT(EM_DIAGRAM):   end;
292471    +else do;
MPRINT(EM_DIAGRAM):   else do;
292472    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
292473    +   _dm12 = put( GRP_MntWines , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntWines , BEST12. );
292474    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
292475    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
292476    +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
292477    +      GRP_MntWines3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 1;
292478    +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
292479    +   end;
MPRINT(EM_DIAGRAM):   end;
292480    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
292481    +      GRP_MntWines2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = -1;
292482    +      GRP_MntWines3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = -1;
292483    +      GRP_MntWines4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = -1;
292484    +   end;
MPRINT(EM_DIAGRAM):   end;
292485    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
292486    +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
292487    +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
292488    +      GRP_MntWines4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 1;
292489    +   end;
MPRINT(EM_DIAGRAM):   end;
292490    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
292491    +      GRP_MntWines2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 1;
292492    +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
292493    +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
292494    +   end;
MPRINT(EM_DIAGRAM):   end;
292495    +   else do;
MPRINT(EM_DIAGRAM):   else do;
292496    +      GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
292497    +      GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
292498    +      GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
292499    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
292500    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
292501    +   end;
MPRINT(EM_DIAGRAM):   end;
292502    +end;
MPRINT(EM_DIAGRAM):   end;
292503    +
292504    +*** Generate dummy variables for GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumCatalogPurchases ;
292505    +drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
292506    +if missing( GRP_NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumCatalogPurchases ) then do;
292507    +   GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
292508    +   GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
292509    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
292510    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
292511    +end;
MPRINT(EM_DIAGRAM):   end;
292512    +else do;
MPRINT(EM_DIAGRAM):   else do;
292513    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
292514    +   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
292515    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
292516    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
292517    +      GRP_NumCatalogPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 1;
292518    +      GRP_NumCatalogPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 0;
292519    +   end;
MPRINT(EM_DIAGRAM):   end;
292520    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
292521    +      GRP_NumCatalogPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = -1;
292522    +      GRP_NumCatalogPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = -1;
292523    +   end;
MPRINT(EM_DIAGRAM):   end;
292524    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
292525    +      GRP_NumCatalogPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 0;
292526    +      GRP_NumCatalogPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 1;
292527    +   end;
MPRINT(EM_DIAGRAM):   end;
292528    +   else do;
MPRINT(EM_DIAGRAM):   else do;
292529    +      GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
292530    +      GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
292531    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
292532    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
292533    +   end;
MPRINT(EM_DIAGRAM):   end;
292534    +end;
MPRINT(EM_DIAGRAM):   end;
292535    +
292536    +*** Generate dummy variables for GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumDistPurchases ;
292537    +drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
292538    +if missing( GRP_NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumDistPurchases ) then do;
292539    +   GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
292540    +   GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
292541    +   GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
292542    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
292543    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
292544    +end;
MPRINT(EM_DIAGRAM):   end;
292545    +else do;
MPRINT(EM_DIAGRAM):   else do;
292546    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
292547    +   _dm12 = put( GRP_NumDistPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumDistPurchases , BEST12. );
292548    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
292549    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
292550    +      GRP_NumDistPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = -1;
292551    +      GRP_NumDistPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = -1;
292552    +      GRP_NumDistPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = -1;
292553    +   end;
MPRINT(EM_DIAGRAM):   end;
292554    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
292555    +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
292556    +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
292557    +      GRP_NumDistPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 1;
292558    +   end;
MPRINT(EM_DIAGRAM):   end;
292559    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
292560    +      GRP_NumDistPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 1;
292561    +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
292562    +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
292563    +   end;
MPRINT(EM_DIAGRAM):   end;
292564    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
292565    +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
292566    +      GRP_NumDistPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 1;
292567    +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
292568    +   end;
MPRINT(EM_DIAGRAM):   end;
292569    +   else do;
MPRINT(EM_DIAGRAM):   else do;
292570    +      GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
292571    +      GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
292572    +      GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
292573    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
292574    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
292575    +   end;
MPRINT(EM_DIAGRAM):   end;
292576    +end;
MPRINT(EM_DIAGRAM):   end;
292577    +
292578    +*** Generate dummy variables for GRP_NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumWebPurchases ;
292579    +drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
292580    +if missing( GRP_NumWebPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumWebPurchases ) then do;
292581    +   GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
292582    +   GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
292583    +   GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
292584    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
292585    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
292586    +end;
MPRINT(EM_DIAGRAM):   end;
292587    +else do;
MPRINT(EM_DIAGRAM):   else do;
292588    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
292589    +   _dm12 = put( GRP_NumWebPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumWebPurchases , BEST12. );
292590    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
292591    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
292592    +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
292593    +      GRP_NumWebPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 1;
292594    +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
292595    +   end;
MPRINT(EM_DIAGRAM):   end;
292596    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
292597    +      GRP_NumWebPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = -1;
292598    +      GRP_NumWebPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = -1;
292599    +      GRP_NumWebPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = -1;
292600    +   end;
MPRINT(EM_DIAGRAM):   end;
292601    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
292602    +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
292603    +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
292604    +      GRP_NumWebPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 1;
292605    +   end;
MPRINT(EM_DIAGRAM):   end;
292606    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
292607    +      GRP_NumWebPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 1;
292608    +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
292609    +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
292610    +   end;
MPRINT(EM_DIAGRAM):   end;
292611    +   else do;
MPRINT(EM_DIAGRAM):   else do;
292612    +      GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
292613    +      GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
292614    +      GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
292615    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
292616    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
292617    +   end;
MPRINT(EM_DIAGRAM):   end;
292618    +end;
MPRINT(EM_DIAGRAM):   end;
292619    +
292620    +*** Generate dummy variables for GRP_RFMstat ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RFMstat ;
292621    +drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
292622    +if missing( GRP_RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RFMstat ) then do;
292623    +   GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
292624    +   GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
292625    +   GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
292626    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
292627    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
292628    +end;
MPRINT(EM_DIAGRAM):   end;
292629    +else do;
MPRINT(EM_DIAGRAM):   else do;
292630    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
292631    +   _dm12 = put( GRP_RFMstat , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RFMstat , BEST12. );
292632    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
292633    +   if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
292634    +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
292635    +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
292636    +      GRP_RFMstat4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 1;
292637    +   end;
MPRINT(EM_DIAGRAM):   end;
292638    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
292639    +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
292640    +      GRP_RFMstat3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 1;
292641    +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
292642    +   end;
MPRINT(EM_DIAGRAM):   end;
292643    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
292644    +      GRP_RFMstat2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = -1;
292645    +      GRP_RFMstat3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = -1;
292646    +      GRP_RFMstat4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = -1;
292647    +   end;
MPRINT(EM_DIAGRAM):   end;
292648    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
292649    +      GRP_RFMstat2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 1;
292650    +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
292651    +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
292652    +   end;
MPRINT(EM_DIAGRAM):   end;
292653    +   else do;
MPRINT(EM_DIAGRAM):   else do;
292654    +      GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
292655    +      GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
292656    +      GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
292657    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
292658    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
292659    +   end;
MPRINT(EM_DIAGRAM):   end;
292660    +end;
MPRINT(EM_DIAGRAM):   end;
292661    +
292662    +*** Generate dummy variables for GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RMntFrq ;
292663    +drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
292664    +if missing( GRP_RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RMntFrq ) then do;
292665    +   GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
292666    +   GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
292667    +   GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
292668    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
292669    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
292670    +end;
MPRINT(EM_DIAGRAM):   end;
292671    +else do;
MPRINT(EM_DIAGRAM):   else do;
292672    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
292673    +   _dm12 = put( GRP_RMntFrq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RMntFrq , BEST12. );
292674    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
292675    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
292676    +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
292677    +      GRP_RMntFrq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 1;
292678    +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
292679    +   end;
MPRINT(EM_DIAGRAM):   end;
292680    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
292681    +      GRP_RMntFrq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = -1;
292682    +      GRP_RMntFrq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = -1;
292683    +      GRP_RMntFrq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = -1;
292684    +   end;
MPRINT(EM_DIAGRAM):   end;
292685    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
292686    +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
292687    +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
292688    +      GRP_RMntFrq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 1;
292689    +   end;
MPRINT(EM_DIAGRAM):   end;
292690    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
292691    +      GRP_RMntFrq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 1;
292692    +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
292693    +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
292694    +   end;
MPRINT(EM_DIAGRAM):   end;
292695    +   else do;
MPRINT(EM_DIAGRAM):   else do;
292696    +      GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
292697    +      GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
292698    +      GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
292699    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
292700    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
292701    +   end;
MPRINT(EM_DIAGRAM):   end;
292702    +end;
MPRINT(EM_DIAGRAM):   end;
292703    +
292704    +*** Generate dummy variables for GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Recency ;
292705    +drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
292706    +if missing( GRP_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Recency ) then do;
292707    +   GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
292708    +   GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
292709    +   GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
292710    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
292711    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
292712    +end;
MPRINT(EM_DIAGRAM):   end;
292713    +else do;
MPRINT(EM_DIAGRAM):   else do;
292714    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
292715    +   _dm12 = put( GRP_Recency , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Recency , BEST12. );
292716    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
292717    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
292718    +      GRP_Recency2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = -1;
292719    +      GRP_Recency3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = -1;
292720    +      GRP_Recency4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = -1;
292721    +   end;
MPRINT(EM_DIAGRAM):   end;
292722    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
292723    +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
292724    +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
292725    +      GRP_Recency4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 1;
292726    +   end;
MPRINT(EM_DIAGRAM):   end;
292727    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
292728    +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
292729    +      GRP_Recency3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 1;
292730    +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
292731    +   end;
MPRINT(EM_DIAGRAM):   end;
292732    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
292733    +      GRP_Recency2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 1;
292734    +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
292735    +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
292736    +   end;
MPRINT(EM_DIAGRAM):   end;
292737    +   else do;
MPRINT(EM_DIAGRAM):   else do;
292738    +      GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
292739    +      GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
292740    +      GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
292741    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
292742    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
292743    +   end;
MPRINT(EM_DIAGRAM):   end;
292744    +end;
MPRINT(EM_DIAGRAM):   end;
292745    +
292746    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
292747    +*** Checking missing input Interval
292748    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
292749    +
292750    +IF NMISS(
292751    +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Year_Birth ) THEN DO;
292752    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
292753    +
292754    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
292755    +END;
MPRINT(EM_DIAGRAM):   END;
292756    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
292757    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
292758    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
292759    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
292760    +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
292761    +END;
MPRINT(EM_DIAGRAM):   END;
292762    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
292763    +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
292764    +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
292765    +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
292766    +END;
MPRINT(EM_DIAGRAM):   END;
292767    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
292768    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
292769    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
292770    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
292771    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
292772    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
292773    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
292774    +   H1x1_1  =     1.95381025032439 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.95381025032439 * S_Year_Birth ;
292775    +   H1x1_1  = H1x1_1  +     1.14916728016472 * GRP_AcceptedCmp52
292776    +          +    -5.96780006482557 * GRP_Frq2  +     4.49682337069914 * GRP_Frq3
292777    +          +    -1.00084168387427 * GRP_Frq4  +    -4.56848186498493 *
292778    +        GRP_Income2  +    -6.08290839556081 * GRP_Income3
292779    +          +        -1.9523756063 * GRP_Income4  +     2.25453632912582 *
292780    +        GRP_Mnt2  +     0.79226665009331 * GRP_Mnt3  +     4.62693684609359 *
292781    +        GRP_Mnt4  +     4.80720961994346 * GRP_MntFishProducts2
292782    +          +     5.98129040124117 * GRP_MntFishProducts3
292783    +          +    -7.67060692838644 * GRP_MntFishProducts4
292784    +          +    -2.17396725012949 * GRP_MntGoldProds2
292785    +          +     0.85597521158935 * GRP_MntGoldProds3
292786    +          +      2.1173332536462 * GRP_MntGoldProds4
292787    +          +     7.10141475402441 * GRP_MntMeatProducts2
292788    +          +     -4.9090455486088 * GRP_MntMeatProducts3
292789    +          +     2.83142638000959 * GRP_MntMeatProducts4
292790    +          +     3.69328975873193 * GRP_MntWines2  +      2.1695090110711 *
292791    +        GRP_MntWines3  +    -5.30256986722649 * GRP_MntWines4
292792    +          +     0.29736312872725 * GRP_NumCatalogPurchases3
292793    +          +     4.11382044060245 * GRP_NumCatalogPurchases4
292794    +          +    -6.25823764999595 * GRP_NumDistPurchases2
292795    +          +    -0.67901515881598 * GRP_NumDistPurchases3
292796    +          +     7.85932256128371 * GRP_NumDistPurchases4
292797    +          +     3.53767704202566 * GRP_NumWebPurchases2
292798    +          +    -6.48408913826017 * GRP_NumWebPurchases3
292799    +          +     4.25220646709256 * GRP_NumWebPurchases4
292800    +          +     1.52518398177008 * GRP_RFMstat2  +    -8.45537513058681 *
292801    +        GRP_RFMstat3  +      1.7628190243685 * GRP_RFMstat4
292802    +          +    -2.26342656707522 * GRP_RMntFrq2  +     0.15141321171269 *
292803    +        GRP_RMntFrq3  +     4.77478604851781 * GRP_RMntFrq4
292804    +          +     7.94049700164507 * GRP_Recency2  +     6.59302318386937 *
292805    +        GRP_Recency3  +    -1.94583979914797 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 1.14916728016472 * GRP_AcceptedCmp52 + 
-5.96780006482557 * GRP_Frq2 + 4.49682337069914 * GRP_Frq3 + -1.00084168387427 * GRP_Frq4 + 
-4.56848186498493 * GRP_Income2 + -6.08290839556081 * GRP_Income3 + -1.9523756063 * 
GRP_Income4 + 2.25453632912582 * GRP_Mnt2 + 0.79226665009331 * GRP_Mnt3 + 4.62693684609359 * 
GRP_Mnt4 + 4.80720961994346 * GRP_MntFishProducts2 + 5.98129040124117 * GRP_MntFishProducts3 + 
-7.67060692838644 * GRP_MntFishProducts4 + -2.17396725012949 * GRP_MntGoldProds2 + 
0.85597521158935 * GRP_MntGoldProds3 + 2.1173332536462 * GRP_MntGoldProds4 + 7.10141475402441 
* GRP_MntMeatProducts2 + -4.9090455486088 * GRP_MntMeatProducts3 + 2.83142638000959 * 
GRP_MntMeatProducts4 + 3.69328975873193 * GRP_MntWines2 + 2.1695090110711 * GRP_MntWines3 + 
-5.30256986722649 * GRP_MntWines4 + 0.29736312872725 * GRP_NumCatalogPurchases3 + 
4.11382044060245 * GRP_NumCatalogPurchases4 + -6.25823764999595 * GRP_NumDistPurchases2 + 
-0.67901515881598 * GRP_NumDistPurchases3 + 7.85932256128371 * GRP_NumDistPurchases4 + 
3.53767704202566 * GRP_NumWebPurchases2 + -6.48408913826017 * GRP_NumWebPurchases3 + 
4.25220646709256 * GRP_NumWebPurchases4 + 1.52518398177008 * GRP_RFMstat2 + -8.45537513058681 
* GRP_RFMstat3 + 1.7628190243685 * GRP_RFMstat4 + -2.26342656707522 * GRP_RMntFrq2 + 
0.15141321171269 * GRP_RMntFrq3 + 4.77478604851781 * GRP_RMntFrq4 + 7.94049700164507 * 
GRP_Recency2 + 6.59302318386937 * GRP_Recency3 + -1.94583979914797 * GRP_Recency4 ;
292806    +   H1x1_1  =     0.17797650232548 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.17797650232548 + H1x1_1 ;
292807    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
292808    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
292809    +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
292810    +END;
MPRINT(EM_DIAGRAM):   END;
292811    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
292812    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
292813    +END;
MPRINT(EM_DIAGRAM):   END;
292814    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
292815    +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
292816    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
292817    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
292818    +   H1x2_1  =     -0.4803749248586 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.4803749248586 * S_Year_Birth ;
292819    +   H1x2_1  = H1x2_1  +      -2.709334396045 * GRP_AcceptedCmp52
292820    +          +    -0.72996008627086 * GRP_Frq2  +     1.18917091356785 * GRP_Frq3
292821    +          +    -0.84357839249772 * GRP_Frq4  +    -1.34210240870748 *
292822    +        GRP_Income2  +    -2.49305097670051 * GRP_Income3
292823    +          +     0.47903160451188 * GRP_Income4  +    -0.21389782834045 *
292824    +        GRP_Mnt2  +    -2.96981107340783 * GRP_Mnt3  +     0.25136923781697 *
292825    +        GRP_Mnt4  +    -1.77015468345115 * GRP_MntFishProducts2
292826    +          +    -2.01927730228967 * GRP_MntFishProducts3
292827    +          +    -1.75480602447555 * GRP_MntFishProducts4
292828    +          +     0.42274303160257 * GRP_MntGoldProds2
292829    +          +     1.56137884413542 * GRP_MntGoldProds3
292830    +          +     0.84731732911707 * GRP_MntGoldProds4
292831    +          +     0.81025189254107 * GRP_MntMeatProducts2
292832    +          +     1.96319534444801 * GRP_MntMeatProducts3
292833    +          +     0.96127142865074 * GRP_MntMeatProducts4
292834    +          +    -0.93806166213097 * GRP_MntWines2  +     0.05312243237158 *
292835    +        GRP_MntWines3  +     0.84972126175769 * GRP_MntWines4
292836    +          +    -1.06178615974842 * GRP_NumCatalogPurchases3
292837    +          +     0.40580399494511 * GRP_NumCatalogPurchases4
292838    +          +      0.0678513615184 * GRP_NumDistPurchases2
292839    +          +     0.02437151967393 * GRP_NumDistPurchases3
292840    +          +     0.69402606373719 * GRP_NumDistPurchases4
292841    +          +       0.411121097653 * GRP_NumWebPurchases2
292842    +          +     0.82481677575773 * GRP_NumWebPurchases3
292843    +          +     1.41988866790215 * GRP_NumWebPurchases4
292844    +          +     0.85026610914091 * GRP_RFMstat2  +    -2.24707947369438 *
292845    +        GRP_RFMstat3  +     -1.1790000875996 * GRP_RFMstat4
292846    +          +     0.87106199482984 * GRP_RMntFrq2  +    -0.83130886232946 *
292847    +        GRP_RMntFrq3  +    -0.14994298443333 * GRP_RMntFrq4
292848    +          +      0.4148069318585 * GRP_Recency2  +     1.81524210481359 *
292849    +        GRP_Recency3  +    -0.14279288009067 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -2.709334396045 * GRP_AcceptedCmp52 + 
-0.72996008627086 * GRP_Frq2 + 1.18917091356785 * GRP_Frq3 + -0.84357839249772 * GRP_Frq4 + 
-1.34210240870748 * GRP_Income2 + -2.49305097670051 * GRP_Income3 + 0.47903160451188 * 
GRP_Income4 + -0.21389782834045 * GRP_Mnt2 + -2.96981107340783 * GRP_Mnt3 + 0.25136923781697 * 
GRP_Mnt4 + -1.77015468345115 * GRP_MntFishProducts2 + -2.01927730228967 * GRP_MntFishProducts3 
+ -1.75480602447555 * GRP_MntFishProducts4 + 0.42274303160257 * GRP_MntGoldProds2 + 
1.56137884413542 * GRP_MntGoldProds3 + 0.84731732911707 * GRP_MntGoldProds4 + 0.81025189254107 
* GRP_MntMeatProducts2 + 1.96319534444801 * GRP_MntMeatProducts3 + 0.96127142865074 * 
GRP_MntMeatProducts4 + -0.93806166213097 * GRP_MntWines2 + 0.05312243237158 * GRP_MntWines3 + 
0.84972126175769 * GRP_MntWines4 + -1.06178615974842 * GRP_NumCatalogPurchases3 + 
0.40580399494511 * GRP_NumCatalogPurchases4 + 0.0678513615184 * GRP_NumDistPurchases2 + 
0.02437151967393 * GRP_NumDistPurchases3 + 0.69402606373719 * GRP_NumDistPurchases4 + 
0.411121097653 * GRP_NumWebPurchases2 + 0.82481677575773 * GRP_NumWebPurchases3 + 
1.41988866790215 * GRP_NumWebPurchases4 + 0.85026610914091 * GRP_RFMstat2 + -2.24707947369438 
* GRP_RFMstat3 + -1.1790000875996 * GRP_RFMstat4 + 0.87106199482984 * GRP_RMntFrq2 + 
-0.83130886232946 * GRP_RMntFrq3 + -0.14994298443333 * GRP_RMntFrq4 + 0.4148069318585 * 
GRP_Recency2 + 1.81524210481359 * GRP_Recency3 + -0.14279288009067 * GRP_Recency4 ;
292850    +   H1x2_1  =    -1.10844381917328 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -1.10844381917328 + H1x2_1 ;
292851    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
292852    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
292853    +   H1x2_1  = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
292854    +END;
MPRINT(EM_DIAGRAM):   END;
292855    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
292856    +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
292857    +END;
MPRINT(EM_DIAGRAM):   END;
292858    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
292859    +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
292860    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
292861    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
292862    +   H2x1_1  =    -4.35637031258639 * H1x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -4.35637031258639 * H1x1_1 ;
292863    +   H2x1_1  = H2x1_1  +    -3.33687841316643 * H1x2_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -3.33687841316643 * H1x2_1 ;
292864    +   H2x1_1  =     3.05963926783565 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 3.05963926783565 + H2x1_1 ;
292865    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
292866    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
292867    +   H2x1_1  = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
292868    +END;
MPRINT(EM_DIAGRAM):   END;
292869    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
292870    +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
292871    +END;
MPRINT(EM_DIAGRAM):   END;
292872    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
292873    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
292874    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
292875    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
292876    +   P_DepVar1  =    -6.02136211154727 * H2x1_1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -6.02136211154727 * H2x1_1 ;
292877    +   P_DepVar1  =     0.37595575621801 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.37595575621801 + P_DepVar1 ;
292878    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
292879    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
292880    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
292881    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
292882    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
292883    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
292884    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
292885    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
292886    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
292887    +END;
MPRINT(EM_DIAGRAM):   END;
292888    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
292889    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
292890    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
292891    +END;
MPRINT(EM_DIAGRAM):   END;
292892    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
292893    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
292894    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
292895    +END;
MPRINT(EM_DIAGRAM):   END;
292896    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
292897    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
292898    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
292899    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
292900    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
292901    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
292902    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
292903    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
292904    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
292905    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
292906    +END;
MPRINT(EM_DIAGRAM):   END;
292907    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
292908    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
292909    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
292910    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
292911     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
292912     quit;
292913     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
292914     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
292915     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
292916     retain ID 2 Node "AutoNeural23";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural23";
292917     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
292918     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1745 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1745 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

292919     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
292920     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
292921     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1745 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1745 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

292922     proc sort data=EMWS8.AutoNeural23_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural23_variableset out=_temp2(keep=NAME 
CREATOR);
292923     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
292924     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 48 observations read from the data set EMWS8.AUTONEURAL23_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 48 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.03 seconds
      

292925     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
292926     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
292927     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
292928     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 48 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 48 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

292929     proc contents data=EMWS8.AutoNeural23_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural23_train out=_meta(keep=NAME) noprint;
292930     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 70 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

292931     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
292932     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
292933     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 70 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 70 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

292934     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
292935     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
292936     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
292937     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 70 observations read from the data set WORK._META.
NOTE: There were 48 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 70 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

292938     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
292939     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
292939   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 920 rows and 5 columns.

292940     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

292941     proc append base=EMWS8.Ensmbl50_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl50_FCMP data=_tempx;
292942     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL50_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 920 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL50_FCMP has 920 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

292943     filename _pref
292943   ! "C:\\predictive-models-project\Workspaces\EMWS8\BINNING\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\BINNING\EMPUBLISHSCORE.sas";
292944     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
292945     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\BINNING\EMPUBLISHSCORE.sas.
292946    +length _UFormat $200;
MPRINT(EM_DIAGRAM):   length _UFormat $200;
292947    +drop _UFormat;
MPRINT(EM_DIAGRAM):   drop _UFormat;
292948    +_UFormat='';
MPRINT(EM_DIAGRAM):   _UFormat='';
292949    +
292950    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
292951    +* Variable: AcceptedCmp5;
MPRINT(EM_DIAGRAM):   * Variable: AcceptedCmp5;
292952    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
292953    +LABEL GRP_AcceptedCmp5 =
292954    +'Grouped: AcceptedCmp5';
MPRINT(EM_DIAGRAM):   LABEL GRP_AcceptedCmp5 = 'Grouped: AcceptedCmp5';
292955    +
292956    +_UFormat = put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _UFormat = put(AcceptedCmp5,BEST.);
292957    +%dmnormip(_UFormat);
MPRINT(DMNORMIP):   call dmnorm(_UFormat,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
292958    +if MISSING(_UFORMAT) then do;
MPRINT(EM_DIAGRAM):   if MISSING(_UFORMAT) then do;
292959    +GRP_AcceptedCmp5 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 1;
292960    +end;
MPRINT(EM_DIAGRAM):   end;
292961    +else if NOT MISSING(_UFORMAT) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(_UFORMAT) then do;
292962    +if (_UFORMAT eq '0'
292963    +) then do;
MPRINT(EM_DIAGRAM):   if (_UFORMAT eq '0' ) then do;
292964    +GRP_AcceptedCmp5 = 2;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 2;
292965    +end;
MPRINT(EM_DIAGRAM):   end;
292966    +else
292967    +if (_UFORMAT eq '1'
292968    +) then do;
MPRINT(EM_DIAGRAM):   else if (_UFORMAT eq '1' ) then do;
292969    +GRP_AcceptedCmp5 = 3;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 3;
292970    +end;
MPRINT(EM_DIAGRAM):   end;
292971    +else do;
MPRINT(EM_DIAGRAM):   else do;
292972    +GRP_AcceptedCmp5 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 1;
292973    +end;
MPRINT(EM_DIAGRAM):   end;
292974    +end;
MPRINT(EM_DIAGRAM):   end;
292975    +
292976    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
292977    +* Variable: Frq;
MPRINT(EM_DIAGRAM):   * Variable: Frq;
292978    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
292979    +LABEL GRP_Frq = "Grouped: Frq";
MPRINT(EM_DIAGRAM):   LABEL GRP_Frq = "Grouped: Frq";
292980    +
292981    +if MISSING(Frq) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Frq) then do;
292982    +GRP_Frq = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq = 1;
292983    +end;
MPRINT(EM_DIAGRAM):   end;
292984    +else if NOT MISSING(Frq) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Frq) then do;
292985    +if Frq < 6 then do;
MPRINT(EM_DIAGRAM):   if Frq < 6 then do;
292986    +GRP_Frq = 2;
MPRINT(EM_DIAGRAM):   GRP_Frq = 2;
292987    +end;
MPRINT(EM_DIAGRAM):   end;
292988    +else
292989    +if 6 <= Frq AND Frq < 12 then do;
MPRINT(EM_DIAGRAM):   else if 6 <= Frq AND Frq < 12 then do;
292990    +GRP_Frq = 3;
MPRINT(EM_DIAGRAM):   GRP_Frq = 3;
292991    +end;
MPRINT(EM_DIAGRAM):   end;
292992    +else
292993    +if 12 <= Frq AND Frq < 18 then do;
MPRINT(EM_DIAGRAM):   else if 12 <= Frq AND Frq < 18 then do;
292994    +GRP_Frq = 4;
MPRINT(EM_DIAGRAM):   GRP_Frq = 4;
292995    +end;
MPRINT(EM_DIAGRAM):   end;
292996    +else
292997    +if 18 <= Frq then do;
MPRINT(EM_DIAGRAM):   else if 18 <= Frq then do;
292998    +GRP_Frq = 5;
MPRINT(EM_DIAGRAM):   GRP_Frq = 5;
292999    +end;
MPRINT(EM_DIAGRAM):   end;
293000    +end;
MPRINT(EM_DIAGRAM):   end;
293001    +
293002    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
293003    +* Variable: Income;
MPRINT(EM_DIAGRAM):   * Variable: Income;
293004    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
293005    +LABEL GRP_Income =
293006    +'Grouped: Income';
MPRINT(EM_DIAGRAM):   LABEL GRP_Income = 'Grouped: Income';
293007    +
293008    +if MISSING(Income) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Income) then do;
293009    +GRP_Income = 1;
MPRINT(EM_DIAGRAM):   GRP_Income = 1;
293010    +end;
MPRINT(EM_DIAGRAM):   end;
293011    +else if NOT MISSING(Income) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Income) then do;
293012    +if Income < 35268 then do;
MPRINT(EM_DIAGRAM):   if Income < 35268 then do;
293013    +GRP_Income = 2;
MPRINT(EM_DIAGRAM):   GRP_Income = 2;
293014    +end;
MPRINT(EM_DIAGRAM):   end;
293015    +else
293016    +if 35268 <= Income AND Income < 52157 then do;
MPRINT(EM_DIAGRAM):   else if 35268 <= Income AND Income < 52157 then do;
293017    +GRP_Income = 3;
MPRINT(EM_DIAGRAM):   GRP_Income = 3;
293018    +end;
MPRINT(EM_DIAGRAM):   end;
293019    +else
293020    +if 52157 <= Income AND Income < 69486 then do;
MPRINT(EM_DIAGRAM):   else if 52157 <= Income AND Income < 69486 then do;
293021    +GRP_Income = 4;
MPRINT(EM_DIAGRAM):   GRP_Income = 4;
293022    +end;
MPRINT(EM_DIAGRAM):   end;
293023    +else
293024    +if 69486 <= Income then do;
MPRINT(EM_DIAGRAM):   else if 69486 <= Income then do;
293025    +GRP_Income = 5;
MPRINT(EM_DIAGRAM):   GRP_Income = 5;
293026    +end;
MPRINT(EM_DIAGRAM):   end;
293027    +end;
MPRINT(EM_DIAGRAM):   end;
293028    +
293029    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
293030    +* Variable: Mnt;
MPRINT(EM_DIAGRAM):   * Variable: Mnt;
293031    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
293032    +LABEL GRP_Mnt = "Grouped: Mnt";
MPRINT(EM_DIAGRAM):   LABEL GRP_Mnt = "Grouped: Mnt";
293033    +
293034    +if MISSING(Mnt) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Mnt) then do;
293035    +GRP_Mnt = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 1;
293036    +end;
MPRINT(EM_DIAGRAM):   end;
293037    +else if NOT MISSING(Mnt) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Mnt) then do;
293038    +if Mnt < 72 then do;
MPRINT(EM_DIAGRAM):   if Mnt < 72 then do;
293039    +GRP_Mnt = 2;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 2;
293040    +end;
MPRINT(EM_DIAGRAM):   end;
293041    +else
293042    +if 72 <= Mnt AND Mnt < 405.5 then do;
MPRINT(EM_DIAGRAM):   else if 72 <= Mnt AND Mnt < 405.5 then do;
293043    +GRP_Mnt = 3;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 3;
293044    +end;
MPRINT(EM_DIAGRAM):   end;
293045    +else
293046    +if 405.5 <= Mnt AND Mnt < 1064 then do;
MPRINT(EM_DIAGRAM):   else if 405.5 <= Mnt AND Mnt < 1064 then do;
293047    +GRP_Mnt = 4;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 4;
293048    +end;
MPRINT(EM_DIAGRAM):   end;
293049    +else
293050    +if 1064 <= Mnt then do;
MPRINT(EM_DIAGRAM):   else if 1064 <= Mnt then do;
293051    +GRP_Mnt = 5;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 5;
293052    +end;
MPRINT(EM_DIAGRAM):   end;
293053    +end;
MPRINT(EM_DIAGRAM):   end;
293054    +
293055    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
293056    +* Variable: MntFishProducts;
MPRINT(EM_DIAGRAM):   * Variable: MntFishProducts;
293057    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
293058    +LABEL GRP_MntFishProducts =
293059    +'Grouped: MntFishProducts';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntFishProducts = 'Grouped: MntFishProducts';
293060    +
293061    +if MISSING(MntFishProducts) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntFishProducts) then do;
293062    +GRP_MntFishProducts = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 1;
293063    +end;
MPRINT(EM_DIAGRAM):   end;
293064    +else if NOT MISSING(MntFishProducts) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntFishProducts) then do;
293065    +if MntFishProducts < 3 then do;
MPRINT(EM_DIAGRAM):   if MntFishProducts < 3 then do;
293066    +GRP_MntFishProducts = 2;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 2;
293067    +end;
MPRINT(EM_DIAGRAM):   end;
293068    +else
293069    +if 3 <= MntFishProducts AND MntFishProducts < 13 then do;
MPRINT(EM_DIAGRAM):   else if 3 <= MntFishProducts AND MntFishProducts < 13 then do;
293070    +GRP_MntFishProducts = 3;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 3;
293071    +end;
MPRINT(EM_DIAGRAM):   end;
293072    +else
293073    +if 13 <= MntFishProducts AND MntFishProducts < 47 then do;
MPRINT(EM_DIAGRAM):   else if 13 <= MntFishProducts AND MntFishProducts < 47 then do;
293074    +GRP_MntFishProducts = 4;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 4;
293075    +end;
MPRINT(EM_DIAGRAM):   end;
293076    +else
293077    +if 47 <= MntFishProducts then do;
MPRINT(EM_DIAGRAM):   else if 47 <= MntFishProducts then do;
293078    +GRP_MntFishProducts = 5;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 5;
293079    +end;
MPRINT(EM_DIAGRAM):   end;
293080    +end;
MPRINT(EM_DIAGRAM):   end;
293081    +
293082    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
293083    +* Variable: MntGoldProds;
MPRINT(EM_DIAGRAM):   * Variable: MntGoldProds;
293084    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
293085    +LABEL GRP_MntGoldProds =
293086    +'Grouped: MntGoldProds';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntGoldProds = 'Grouped: MntGoldProds';
293087    +
293088    +if MISSING(MntGoldProds) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntGoldProds) then do;
293089    +GRP_MntGoldProds = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 1;
293090    +end;
MPRINT(EM_DIAGRAM):   end;
293091    +else if NOT MISSING(MntGoldProds) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntGoldProds) then do;
293092    +if MntGoldProds < 9 then do;
MPRINT(EM_DIAGRAM):   if MntGoldProds < 9 then do;
293093    +GRP_MntGoldProds = 2;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 2;
293094    +end;
MPRINT(EM_DIAGRAM):   end;
293095    +else
293096    +if 9 <= MntGoldProds AND MntGoldProds < 25 then do;
MPRINT(EM_DIAGRAM):   else if 9 <= MntGoldProds AND MntGoldProds < 25 then do;
293097    +GRP_MntGoldProds = 3;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 3;
293098    +end;
MPRINT(EM_DIAGRAM):   end;
293099    +else
293100    +if 25 <= MntGoldProds AND MntGoldProds < 59 then do;
MPRINT(EM_DIAGRAM):   else if 25 <= MntGoldProds AND MntGoldProds < 59 then do;
293101    +GRP_MntGoldProds = 4;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 4;
293102    +end;
MPRINT(EM_DIAGRAM):   end;
293103    +else
293104    +if 59 <= MntGoldProds then do;
MPRINT(EM_DIAGRAM):   else if 59 <= MntGoldProds then do;
293105    +GRP_MntGoldProds = 5;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 5;
293106    +end;
MPRINT(EM_DIAGRAM):   end;
293107    +end;
MPRINT(EM_DIAGRAM):   end;
293108    +
293109    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
293110    +* Variable: MntMeatProducts;
MPRINT(EM_DIAGRAM):   * Variable: MntMeatProducts;
293111    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
293112    +LABEL GRP_MntMeatProducts =
293113    +'Grouped: MntMeatProducts';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntMeatProducts = 'Grouped: MntMeatProducts';
293114    +
293115    +if MISSING(MntMeatProducts) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntMeatProducts) then do;
293116    +GRP_MntMeatProducts = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 1;
293117    +end;
MPRINT(EM_DIAGRAM):   end;
293118    +else if NOT MISSING(MntMeatProducts) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntMeatProducts) then do;
293119    +if MntMeatProducts < 17 then do;
MPRINT(EM_DIAGRAM):   if MntMeatProducts < 17 then do;
293120    +GRP_MntMeatProducts = 2;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 2;
293121    +end;
MPRINT(EM_DIAGRAM):   end;
293122    +else
293123    +if 17 <= MntMeatProducts AND MntMeatProducts < 72 then do;
MPRINT(EM_DIAGRAM):   else if 17 <= MntMeatProducts AND MntMeatProducts < 72 then do;
293124    +GRP_MntMeatProducts = 3;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 3;
293125    +end;
MPRINT(EM_DIAGRAM):   end;
293126    +else
293127    +if 72 <= MntMeatProducts AND MntMeatProducts < 246 then do;
MPRINT(EM_DIAGRAM):   else if 72 <= MntMeatProducts AND MntMeatProducts < 246 then do;
293128    +GRP_MntMeatProducts = 4;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 4;
293129    +end;
MPRINT(EM_DIAGRAM):   end;
293130    +else
293131    +if 246 <= MntMeatProducts then do;
MPRINT(EM_DIAGRAM):   else if 246 <= MntMeatProducts then do;
293132    +GRP_MntMeatProducts = 5;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 5;
293133    +end;
MPRINT(EM_DIAGRAM):   end;
293134    +end;
MPRINT(EM_DIAGRAM):   end;
293135    +
293136    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
293137    +* Variable: MntWines;
MPRINT(EM_DIAGRAM):   * Variable: MntWines;
293138    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
293139    +LABEL GRP_MntWines =
293140    +'Grouped: MntWines';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntWines = 'Grouped: MntWines';
293141    +
293142    +if MISSING(MntWines) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntWines) then do;
293143    +GRP_MntWines = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 1;
293144    +end;
MPRINT(EM_DIAGRAM):   end;
293145    +else if NOT MISSING(MntWines) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntWines) then do;
293146    +if MntWines < 24 then do;
MPRINT(EM_DIAGRAM):   if MntWines < 24 then do;
293147    +GRP_MntWines = 2;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 2;
293148    +end;
MPRINT(EM_DIAGRAM):   end;
293149    +else
293150    +if 24 <= MntWines AND MntWines < 183.5 then do;
MPRINT(EM_DIAGRAM):   else if 24 <= MntWines AND MntWines < 183.5 then do;
293151    +GRP_MntWines = 3;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 3;
293152    +end;
MPRINT(EM_DIAGRAM):   end;
293153    +else
293154    +if 183.5 <= MntWines AND MntWines < 508 then do;
MPRINT(EM_DIAGRAM):   else if 183.5 <= MntWines AND MntWines < 508 then do;
293155    +GRP_MntWines = 4;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 4;
293156    +end;
MPRINT(EM_DIAGRAM):   end;
293157    +else
293158    +if 508 <= MntWines then do;
MPRINT(EM_DIAGRAM):   else if 508 <= MntWines then do;
293159    +GRP_MntWines = 5;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 5;
293160    +end;
MPRINT(EM_DIAGRAM):   end;
293161    +end;
MPRINT(EM_DIAGRAM):   end;
293162    +
293163    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
293164    +* Variable: NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumCatalogPurchases;
293165    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
293166    +LABEL GRP_NumCatalogPurchases =
293167    +'Grouped: NumCatalogPurchases';
MPRINT(EM_DIAGRAM):   LABEL GRP_NumCatalogPurchases = 'Grouped: NumCatalogPurchases';
293168    +
293169    +if MISSING(NumCatalogPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumCatalogPurchases) then do;
293170    +GRP_NumCatalogPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 1;
293171    +end;
MPRINT(EM_DIAGRAM):   end;
293172    +else if NOT MISSING(NumCatalogPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumCatalogPurchases) then do;
293173    +if NumCatalogPurchases < 0 then do;
MPRINT(EM_DIAGRAM):   if NumCatalogPurchases < 0 then do;
293174    +GRP_NumCatalogPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 2;
293175    +end;
MPRINT(EM_DIAGRAM):   end;
293176    +else
293177    +if 0 <= NumCatalogPurchases AND NumCatalogPurchases < 2 then do;
MPRINT(EM_DIAGRAM):   else if 0 <= NumCatalogPurchases AND NumCatalogPurchases < 2 then do;
293178    +GRP_NumCatalogPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 3;
293179    +end;
MPRINT(EM_DIAGRAM):   end;
293180    +else
293181    +if 2 <= NumCatalogPurchases AND NumCatalogPurchases < 4 then do;
MPRINT(EM_DIAGRAM):   else if 2 <= NumCatalogPurchases AND NumCatalogPurchases < 4 then do;
293182    +GRP_NumCatalogPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 4;
293183    +end;
MPRINT(EM_DIAGRAM):   end;
293184    +else
293185    +if 4 <= NumCatalogPurchases then do;
MPRINT(EM_DIAGRAM):   else if 4 <= NumCatalogPurchases then do;
293186    +GRP_NumCatalogPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 5;
293187    +end;
MPRINT(EM_DIAGRAM):   end;
293188    +end;
MPRINT(EM_DIAGRAM):   end;
293189    +
293190    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
293191    +* Variable: NumDistPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumDistPurchases;
293192    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
293193    +LABEL GRP_NumDistPurchases = "Grouped: NumDistPurchases";
MPRINT(EM_DIAGRAM):   LABEL GRP_NumDistPurchases = "Grouped: NumDistPurchases";
293194    +
293195    +if MISSING(NumDistPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumDistPurchases) then do;
293196    +GRP_NumDistPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 1;
293197    +end;
MPRINT(EM_DIAGRAM):   end;
293198    +else if NOT MISSING(NumDistPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumDistPurchases) then do;
293199    +if NumDistPurchases < 3 then do;
MPRINT(EM_DIAGRAM):   if NumDistPurchases < 3 then do;
293200    +GRP_NumDistPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 2;
293201    +end;
MPRINT(EM_DIAGRAM):   end;
293202    +else
293203    +if 3 <= NumDistPurchases AND NumDistPurchases < 6 then do;
MPRINT(EM_DIAGRAM):   else if 3 <= NumDistPurchases AND NumDistPurchases < 6 then do;
293204    +GRP_NumDistPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 3;
293205    +end;
MPRINT(EM_DIAGRAM):   end;
293206    +else
293207    +if 6 <= NumDistPurchases AND NumDistPurchases < 10 then do;
MPRINT(EM_DIAGRAM):   else if 6 <= NumDistPurchases AND NumDistPurchases < 10 then do;
293208    +GRP_NumDistPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 4;
293209    +end;
MPRINT(EM_DIAGRAM):   end;
293210    +else
293211    +if 10 <= NumDistPurchases then do;
MPRINT(EM_DIAGRAM):   else if 10 <= NumDistPurchases then do;
293212    +GRP_NumDistPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 5;
293213    +end;
MPRINT(EM_DIAGRAM):   end;
293214    +end;
MPRINT(EM_DIAGRAM):   end;
293215    +
293216    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
293217    +* Variable: NumWebPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumWebPurchases;
293218    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
293219    +LABEL GRP_NumWebPurchases =
293220    +'Grouped: NumWebPurchases';
MPRINT(EM_DIAGRAM):   LABEL GRP_NumWebPurchases = 'Grouped: NumWebPurchases';
293221    +
293222    +if MISSING(NumWebPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumWebPurchases) then do;
293223    +GRP_NumWebPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 1;
293224    +end;
MPRINT(EM_DIAGRAM):   end;
293225    +else if NOT MISSING(NumWebPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumWebPurchases) then do;
293226    +if NumWebPurchases < 2 then do;
MPRINT(EM_DIAGRAM):   if NumWebPurchases < 2 then do;
293227    +GRP_NumWebPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 2;
293228    +end;
MPRINT(EM_DIAGRAM):   end;
293229    +else
293230    +if 2 <= NumWebPurchases AND NumWebPurchases < 4 then do;
MPRINT(EM_DIAGRAM):   else if 2 <= NumWebPurchases AND NumWebPurchases < 4 then do;
293231    +GRP_NumWebPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 3;
293232    +end;
MPRINT(EM_DIAGRAM):   end;
293233    +else
293234    +if 4 <= NumWebPurchases AND NumWebPurchases < 6 then do;
MPRINT(EM_DIAGRAM):   else if 4 <= NumWebPurchases AND NumWebPurchases < 6 then do;
293235    +GRP_NumWebPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 4;
293236    +end;
MPRINT(EM_DIAGRAM):   end;
293237    +else
293238    +if 6 <= NumWebPurchases then do;
MPRINT(EM_DIAGRAM):   else if 6 <= NumWebPurchases then do;
293239    +GRP_NumWebPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 5;
293240    +end;
MPRINT(EM_DIAGRAM):   end;
293241    +end;
MPRINT(EM_DIAGRAM):   end;
293242    +
293243    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
293244    +* Variable: RFMstat;
MPRINT(EM_DIAGRAM):   * Variable: RFMstat;
293245    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
293246    +LABEL GRP_RFMstat = "Grouped: RFMstat";
MPRINT(EM_DIAGRAM):   LABEL GRP_RFMstat = "Grouped: RFMstat";
293247    +
293248    +if MISSING(RFMstat) then do;
MPRINT(EM_DIAGRAM):   if MISSING(RFMstat) then do;
293249    +GRP_RFMstat = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 1;
293250    +end;
MPRINT(EM_DIAGRAM):   end;
293251    +else if NOT MISSING(RFMstat) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(RFMstat) then do;
293252    +if RFMstat < 10.34 then do;
MPRINT(EM_DIAGRAM):   if RFMstat < 10.34 then do;
293253    +GRP_RFMstat = 2;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 2;
293254    +end;
MPRINT(EM_DIAGRAM):   end;
293255    +else
293256    +if 10.34 <= RFMstat AND RFMstat < 128.09 then do;
MPRINT(EM_DIAGRAM):   else if 10.34 <= RFMstat AND RFMstat < 128.09 then do;
293257    +GRP_RFMstat = 3;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 3;
293258    +end;
MPRINT(EM_DIAGRAM):   end;
293259    +else
293260    +if 128.09 <= RFMstat AND RFMstat < 455.22 then do;
MPRINT(EM_DIAGRAM):   else if 128.09 <= RFMstat AND RFMstat < 455.22 then do;
293261    +GRP_RFMstat = 4;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 4;
293262    +end;
MPRINT(EM_DIAGRAM):   end;
293263    +else
293264    +if 455.22 <= RFMstat then do;
MPRINT(EM_DIAGRAM):   else if 455.22 <= RFMstat then do;
293265    +GRP_RFMstat = 5;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 5;
293266    +end;
MPRINT(EM_DIAGRAM):   end;
293267    +end;
MPRINT(EM_DIAGRAM):   end;
293268    +
293269    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
293270    +* Variable: RMntFrq;
MPRINT(EM_DIAGRAM):   * Variable: RMntFrq;
293271    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
293272    +LABEL GRP_RMntFrq = "Grouped: RMntFrq";
MPRINT(EM_DIAGRAM):   LABEL GRP_RMntFrq = "Grouped: RMntFrq";
293273    +
293274    +if MISSING(RMntFrq) then do;
MPRINT(EM_DIAGRAM):   if MISSING(RMntFrq) then do;
293275    +GRP_RMntFrq = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 1;
293276    +end;
MPRINT(EM_DIAGRAM):   end;
293277    +else if NOT MISSING(RMntFrq) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(RMntFrq) then do;
293278    +if RMntFrq < 13.25 then do;
MPRINT(EM_DIAGRAM):   if RMntFrq < 13.25 then do;
293279    +GRP_RMntFrq = 2;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 2;
293280    +end;
MPRINT(EM_DIAGRAM):   end;
293281    +else
293282    +if 13.25 <= RMntFrq AND RMntFrq < 30.4 then do;
MPRINT(EM_DIAGRAM):   else if 13.25 <= RMntFrq AND RMntFrq < 30.4 then do;
293283    +GRP_RMntFrq = 3;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 3;
293284    +end;
MPRINT(EM_DIAGRAM):   end;
293285    +else
293286    +if 30.4 <= RMntFrq AND RMntFrq < 52.86 then do;
MPRINT(EM_DIAGRAM):   else if 30.4 <= RMntFrq AND RMntFrq < 52.86 then do;
293287    +GRP_RMntFrq = 4;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 4;
293288    +end;
MPRINT(EM_DIAGRAM):   end;
293289    +else
293290    +if 52.86 <= RMntFrq then do;
MPRINT(EM_DIAGRAM):   else if 52.86 <= RMntFrq then do;
293291    +GRP_RMntFrq = 5;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 5;
293292    +end;
MPRINT(EM_DIAGRAM):   end;
293293    +end;
MPRINT(EM_DIAGRAM):   end;
293294    +
293295    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
293296    +* Variable: Recency;
MPRINT(EM_DIAGRAM):   * Variable: Recency;
293297    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
293298    +LABEL GRP_Recency =
293299    +'Grouped: Recency';
MPRINT(EM_DIAGRAM):   LABEL GRP_Recency = 'Grouped: Recency';
293300    +
293301    +if MISSING(Recency) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Recency) then do;
293302    +GRP_Recency = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency = 1;
293303    +end;
MPRINT(EM_DIAGRAM):   end;
293304    +else if NOT MISSING(Recency) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Recency) then do;
293305    +if Recency < 24 then do;
MPRINT(EM_DIAGRAM):   if Recency < 24 then do;
293306    +GRP_Recency = 2;
MPRINT(EM_DIAGRAM):   GRP_Recency = 2;
293307    +end;
MPRINT(EM_DIAGRAM):   end;
293308    +else
293309    +if 24 <= Recency AND Recency < 48 then do;
MPRINT(EM_DIAGRAM):   else if 24 <= Recency AND Recency < 48 then do;
293310    +GRP_Recency = 3;
MPRINT(EM_DIAGRAM):   GRP_Recency = 3;
293311    +end;
MPRINT(EM_DIAGRAM):   end;
293312    +else
293313    +if 48 <= Recency AND Recency < 73 then do;
MPRINT(EM_DIAGRAM):   else if 48 <= Recency AND Recency < 73 then do;
293314    +GRP_Recency = 4;
MPRINT(EM_DIAGRAM):   GRP_Recency = 4;
293315    +end;
MPRINT(EM_DIAGRAM):   end;
293316    +else
293317    +if 73 <= Recency then do;
MPRINT(EM_DIAGRAM):   else if 73 <= Recency then do;
293318    +GRP_Recency = 5;
MPRINT(EM_DIAGRAM):   GRP_Recency = 5;
293319    +end;
MPRINT(EM_DIAGRAM):   end;
293320    +end;
MPRINT(EM_DIAGRAM):   end;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
293321     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
293322     quit;
293323     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
293324     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
293325     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
293326     retain ID 3 Node "BINNING";
MPRINT(EM_DIAGRAM):   retain ID 3 Node "BINNING";
293327     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
293328     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 16 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 16 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

293329     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
293330     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
293331     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 16 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 16 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

293332     proc sort data=EMWS8.BINNING_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.BINNING_variableset out=_temp2(keep=NAME CREATOR);
293333     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
293334     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 36 observations read from the data set EMWS8.BINNING_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 36 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

293335     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
293336     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
293337     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
293338     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 36 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 36 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

293339     proc contents data=EMWS8.BINNING_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.BINNING_train out=_meta(keep=NAME) noprint;
293340     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 59 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

293341     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
293342     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
293343     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 59 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 59 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

293344     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
293345     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
293346     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
293347     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 59 observations read from the data set WORK._META.
NOTE: There were 36 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 59 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

293348     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
293349     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
293349   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 15 rows and 5 columns.

293350     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

293351     proc append base=EMWS8.Ensmbl50_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl50_FCMP data=_tempx;
293352     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL50_FCMP.
NOTE: There were 15 observations read from the data set WORK._TEMPX.
NOTE: 15 observations added.
NOTE: The data set EMWS8.ENSMBL50_FCMP has 935 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

293353     filename _pref
293353   ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
293354     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
293355     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
293356    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
293357    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
293358    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
293359    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
293360    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
293361    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
293362     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
293363     quit;
293364     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
293365     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
293366     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
293367     retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
293368     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
293369     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

293370     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
293371     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
293372     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

293373     proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
293374     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
293375     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

293376     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
293377     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
293378     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
293379     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

293380     proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
293381     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

293382     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
293383     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
293384     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

293385     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
293386     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
293387     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
293388     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

293389     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
293390     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
293390   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

293391     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

293392     proc append base=EMWS8.Ensmbl50_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl50_FCMP data=_tempx;
293393     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL50_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL50_FCMP has 939 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

293394     filename _pref
293394   ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
293395     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
293396     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
293397    +
293398    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
293399    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
293399   !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
293400    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
293401    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
293402    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
293403    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
293404    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
293405     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
293406     quit;
293407     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
293408     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
293409     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
293410     retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
293411     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
293412     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

293413     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
293414     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
293415     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

293416     proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
293417     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
293418     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

293419     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
293420     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
293421     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
293422     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

293423     proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
293424     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

293425     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
293426     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
293427     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

293428     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
293429     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
293430     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
293431     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

293432     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
293433     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
293433   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

293434     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

293435     proc append base=EMWS8.Ensmbl50_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl50_FCMP data=_tempx;
293436     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL50_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL50_FCMP has 978 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

293437     filename _pref
293437   ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
293438     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
293439     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
293440    +
293441    +
293442    +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
293443    +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
293444    +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
293445    +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
293446    +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
293447    +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
293448    +
293449    +
293450    +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
293451    +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
293452    +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
293453    +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
293454    +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
293455    +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
293456    +
293457    +
293458    +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
293459    +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
293460    +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
293461    +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
293462    +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
293463    +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
293464    +
293465    +
293466    +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
293467    +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
293468    +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
293469    +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
293470    +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
293471    +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
293472    +
293473    +
293474    +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
293475    +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
293476    +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
293477    +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
293478    +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
293479    +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
293480    +
293481    +
293482    +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
293483    +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
293484    +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
293485    +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
293486    +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
293487    +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
293488    +
293489    +
293490    +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
293491    +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
293492    +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
293493    +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
293494    +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
293495    +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
293496    +
293497    +
293498    +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
293499    +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
293500    +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
293501    +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
293502    +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
293503    +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
293504    +if
293505    +_FILTERNORM1 not in ( '.')
293506    + and
293507    +_FILTERNORM2 not in ( '.')
293508    + and
293509    +_FILTERNORM3 not in ( '.')
293510    + and
293511    +_FILTERNORM4 not in ( '.')
293512    + and
293513    +_FILTERNORM5 not in ( '.')
293514    + and
293515    +_FILTERNORM6 not in ( '.')
293516    + and
293517    +_FILTERNORM7 not in ( ' ')
293518    + and
293519    +_FILTERNORM8 not in ( ' ')
293520    +and
293521    +( Dt_Customer ne .)
293522    +and ( Income ne . and (Income<=107000))
293523    +and ( Kidhome ne .)
293524    +and ( MntFishProducts ne .)
293525    +and ( MntFruits ne .)
293526    +and ( MntGoldProds ne .)
293527    +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
293528    +and ( MntSweetProducts ne .)
293529    +and ( MntWines ne .)
293530    +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
293531    +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
293532    +and ( NumStorePurchases ne .)
293533    +and ( NumWebPurchases ne .)
293534    +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
293535    +and ( Recency ne .)
293536    +and ( Teenhome ne .)
293537    +and ( Year_Birth ne .)
293538    +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
293539    +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
293540    +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
293541    +end;
MPRINT(EM_DIAGRAM):   end;
293542    +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
293543    +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
293544     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
293545     quit;
293546     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
293547     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
293548     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
293549     retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
293550     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
293551     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

293552     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
293553     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
293554     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

293555     proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
293556     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
293557     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

293558     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
293559     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
293560     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
293561     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

293562     proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
293563     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

293564     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
293565     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
293566     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

293567     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
293568     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
293569     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
293570     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

293571     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
293572     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
293572   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

293573     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

293574     proc append base=EMWS8.Ensmbl50_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl50_FCMP data=_tempx;
293575     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL50_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL50_FCMP has 1044 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

293576     %macro varDept(fcmpdata=,id=);
293577     %global nobs&id scoreFlag&id;
293578     %let scoreFlag&id = 0;
293579     %if &id=1 or ^&fcmpStart %then %do;
293580     proc sort data=&fcmpdata out=_temp&id nodupkey;
293581     by NAME;
293582     where id=&id and LHS in( %let j=1;
293583     %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
293584     %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
293585     "&var" %let j = %eval(&j+1);
293586     %end;
293587     );
293588     run;
293589     %let dsid = %sysfunc(open(_temp&id));
293590     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
293591     %let dsid = %sysfunc(close(&dsid));
293592     %if &&nobs&id %then %do;
293593     %let scoreFlag&id = 1;
293594     %let fcmpStart = 1;
293595     %end;
293596     %else %let fcmpStart = 0;
293597     %end;
293598     %else %do;
293599     proc sort data=&fcmpdata out=_tempid;
293600     where id=&id;
293601     by LHS;
293602     run;
293603     %let dsid = %sysfunc(open(_tempid));
293604     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
293605     %let dsid = %sysfunc(close(&dsid));
293606     %if ^&&nobs&id %then %do;
293607     proc datasets lib=work nolist;
293608     delete _tempid;
293609     run;
293610     quit;
293611     %end;
293612     %else %do;
293613     data _tempAll;
293614     set %let j=%eval(&id-1);
293615     %do x=1 %to &j;
293616     %if &&nobs&x %then %do;
293617     _temp&x %end;
293618     %end;
293619     ;
293620     run;
293621     proc sql;
293622     create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
293622   ! work._tempid p2 where p.name=p2.lhs;
293623     quit;
293624     data _temp&id;
293625     set _temp&id;
293626     where LHS ne '' and NAME ne '' and Node ne '';
293627     run;
293628     proc datasets lib=work nolist;
293629     delete _tempAll;
293630     run;
293631     %let dsid = %sysfunc(open(_temp&id));
293632     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
293633     %let dsid = %sysfunc(close(&dsid));
293634     %if ^&&nobs&id %then %do;
293635     proc datasets lib=work nolist;
293636     delete _temp&id;
293637     run;
293638     quit;
293639     %end;
293640     %else %do;
293641     %let scoreFlag&id = 1;
293642     data _temp&id;
293643     set _temp&id;
293644     where LHS ne NAME and node ne '';
293645     run;
293646     %let dsid = %sysfunc(open(_temp&id));
293647     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
293648     %let dsid = %sysfunc(close(&dsid));
293649     %if ^&&nobs&id %then %do;
293650     proc datasets lib=work nolist;
293651     delete _temp&id;
293652     run;
293653     quit;
293654     %end;
293655     %else %do;
293656     proc sort data=_temp&id nodupkey;
293657     by LHS NAME;
293658     run;
293659     %end;
293660     %end;
293661     %end;
293662     %end;
293663     %mend varDept;
293664     %macro optCode(outdata=fcmpdata);
293665     %global fcmpStart;
293666     %let fcmpStart = 0;
293667     %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
293668     %let NumNodes=9;
293669     %do k=1 %to &NumNodes;
293670     %vardept(fcmpdata=&outdata, id=&k);
293671     %end;
293672     %mend optCode;
293673     %optcode(outData=EMWS8.Ensmbl50_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl50_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL50_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl50_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 75 observations read from the data set EMWS8.ENSMBL50_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 55 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 20 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl50_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 15 observations read from the data set EMWS8.ENSMBL50_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 15 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 20 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 20 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp3 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP3 created, with 14 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP3 has 14 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP3 has 14 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp3 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP3.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP3 has 14 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl50_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL50_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl50_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL50_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 ;
MPRINT(VARDEPT):   run;

NOTE: There were 20 observations read from the data set WORK._TEMP2.
NOTE: There were 14 observations read from the data set WORK._TEMP3.
NOTE: The data set WORK._TEMPALL has 34 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 2 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl50_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL50_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 20 observations read from the data set WORK._TEMP2.
NOTE: There were 14 observations read from the data set WORK._TEMP3.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 36 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 32 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 32 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 32 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 32 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 32 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 32 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 32 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl50_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL50_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 20 observations read from the data set WORK._TEMP2.
NOTE: There were 14 observations read from the data set WORK._TEMP3.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: There were 32 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 68 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl50_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL50_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl50_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL50_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

293674     data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
293675     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
293676     where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
293677     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

293678     data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
293679     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
293680     where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
293681     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

293682     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
293683     create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
293683   ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 2 rows and 3 columns.

293684     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

293685     data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
293686     set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
293687     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 2 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 2 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

293688     data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
293689     set EMWS8.BINNING_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.BINNING_EMSCOREVAR;
293690     where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
293691     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS8.BINNING_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

293692     data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
293693     set EMWS8.BINNING_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.BINNING_EMSCOREVAR;
293694     where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
293695     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.BINNING_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

293696     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
293697     create table _CodeVar7 as select p.lhs, p2.formula, p2.file from _temp3 p,
293697   ! EMWS8.BINNING_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar7 as select p.lhs, p2.formula, p2.file from _temp3 
p, EMWS8.BINNING_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR7 created, with 14 rows and 3 columns.

293698     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

293699     data _CodeVar7;
MPRINT(EM_DIAGRAM):   data _CodeVar7;
293700     set _all_ _CodeVar7 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar7 _postall_;
293701     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK._ALL_.
NOTE: There were 14 observations read from the data set WORK._CODEVAR7.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR7 has 15 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

293702     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
293703     * Ensmbl50: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Ensmbl50: Computing metadata for TRAIN data;
293704     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS8.ENSMBL50_TRAIN.VIEW used (Total process time):
      real time           0.07 seconds
      cpu time            0.07 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl50\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.Ensmbl50_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.Ensmbl50_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.Ensmbl50_TRAIN out=WORK.M0L5ONW7 noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0L5ONW7;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M0L5ONW7(keep=name type length label format formatl 
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = 
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0L5ONW7;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M0L5ONW7;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M3OSP7U7 NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3OSP7U7;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M3OSP7U7;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M33O1XN8(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M3OSP7U7;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3OSP7U7;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M3OSP7U7;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = 
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) 
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" 
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then 
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ 
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3OSP7U7;
MPRINT(EMADVISECOLUMNS):   set WORK.M3OSP7U7;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural24_TRAIN noprint 
out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural24_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl50_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT 
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Ensmbl50";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "Ensmbl50";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl50: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   if NAME in( "I_DepVar" "F_DepVar" "U_DepVar" "_WARN_" "P_DepVar1" 
"P_DepVar0" "R_DepVar1" "R_DepVar0" ) then CREATOR="Ensmbl50";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
294016     data EMWS8.Ensmbl50_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl50_EMINFO;
294017     length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
294018     input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
294019     cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS8.ENSMBL50_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   run;
294023     run;
294024     proc sort data = EMWS8.Ensmbl50_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.Ensmbl50_EMINFO NOTHREADS;
294025     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
294026     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.ENSMBL50_EMINFO.
NOTE: The data set EMWS8.ENSMBL50_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

294027     proc sort data = EMWS8.AutoNeural24_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.AutoNeural24_EMINFO OUT=WORK.SORTEDEMINFO 
NOTHREADS;
294028     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
294029     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set EMWS8.AUTONEURAL24_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

294030     proc sort data = EMWS8.Ensmbl50_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.Ensmbl50_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
294031     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
294032     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.ENSMBL50_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

294033     data EMWS8.Ensmbl50_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl50_EMINFO;
294034     merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
294035     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
294036     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.ENSMBL50_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

294037     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
294038     delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
294039     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
294040     quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

NOTE: View EMWS8.ENSMBL50_TRAIN.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
      
NOTE: View EMWS8.ENSMBL50_VALIDATE.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
