MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "20. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16.23 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                20. April 2016
Time:                16.23 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O0CDBPO_ 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural7\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O0CDBPO_ new;
MPRINT(EM_DIAGRAM):   run;
264868     data work.outkey;
MPRINT(EM_DIAGRAM):    data work.outkey;
264869     set EMWS8.Neural7_OUTKEY;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural7_OUTKEY;
264870     if upcase(ROLE) = 'HIDDEN';
MPRINT(EM_DIAGRAM):   if upcase(ROLE) = 'HIDDEN';
264871     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 55 observations read from the data set EMWS8.NEURAL7_OUTKEY.
NOTE: The data set WORK.OUTKEY has 5 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

264872     filename emflow
264872   ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural7\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural7\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural7: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
264873     *------------------------------------------------------------*;
264874     * Neural7: Scoring DATA data;
264875     *------------------------------------------------------------*;
264876     data EMWS8.Neural7_TRAIN
264877     / view=EMWS8.Neural7_TRAIN
264878     ;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural7_TRAIN / view=EMWS8.Neural7_TRAIN ;
264879     set EMWS8.Meta_TRAIN
264880     ;
MPRINT(EM_DIAGRAM):   set EMWS8.Meta_TRAIN ;
264881     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural7\EMFLOWSCORE.sas.
264882    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
264883    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
264884    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
264885    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
264886    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
264887    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
264888    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
264889    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
264890    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
264891    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
264892    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
264893    +LENGTH _WARN_ $4
264894    +      F_DepVar  $ 12
264895    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
264896    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
264897    +
264898    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
264899    +
264900    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
264901    +
264902    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
264903    +
264904    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
264905    +
264906    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
264907    +
264908    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
264909    +
264910    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
264911    +
264912    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
264913    +
264914    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
264915    +
264916    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
264917    +
264918    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
264919    +
264920    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
264921    +
264922    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
264923    +
264924    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
264925    +
264926    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
264927    +
264928    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
264929    +
264930    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
264931    +
264932    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
264933    +
264934    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
264935    +
264936    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
264937    +
264938    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
264939    +
264940    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
264941    +
264942    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
264943    +
264944    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
264945    +
264946    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
264947    +
264948    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
264949    +
264950    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
264951    +
264952    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
264953    +
264954    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
264955    +
264956    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
264957    +
264958    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
264959    +
264960    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
264961    +
264962    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
264963    +
264964    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
264965    +
264966    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
264967    +
264968    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
264969    +
264970    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
264971    +
264972    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
264973    +
264974    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
264975    +
264976    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
264977    +
264978    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
264979    +
264980    +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
264981    +
264982    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
264983    +
264984    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
264985    +
264986    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
264987    +
264988    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
264989    +
264990    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
264991    +
264992    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
264993    +
264994    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
264995    +
264996    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
264997    +
264998    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
264999    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
265000    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
265001    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
265002    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
265003    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
265004    +end;
MPRINT(EM_DIAGRAM):   end;
265005    +else do;
MPRINT(EM_DIAGRAM):   else do;
265006    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
265007    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
265008    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
265009    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
265010    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
265011    +   end;
MPRINT(EM_DIAGRAM):   end;
265012    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
265013    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
265014    +   end;
MPRINT(EM_DIAGRAM):   end;
265015    +   else do;
MPRINT(EM_DIAGRAM):   else do;
265016    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
265017    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
265018    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
265019    +   end;
MPRINT(EM_DIAGRAM):   end;
265020    +end;
MPRINT(EM_DIAGRAM):   end;
265021    +
265022    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
265023    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
265024    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
265025    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
265026    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
265027    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
265028    +end;
MPRINT(EM_DIAGRAM):   end;
265029    +else do;
MPRINT(EM_DIAGRAM):   else do;
265030    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
265031    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
265032    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
265033    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
265034    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
265035    +   end;
MPRINT(EM_DIAGRAM):   end;
265036    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
265037    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
265038    +   end;
MPRINT(EM_DIAGRAM):   end;
265039    +   else do;
MPRINT(EM_DIAGRAM):   else do;
265040    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
265041    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
265042    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
265043    +   end;
MPRINT(EM_DIAGRAM):   end;
265044    +end;
MPRINT(EM_DIAGRAM):   end;
265045    +
265046    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
265047    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
265048    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
265049    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
265050    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
265051    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
265052    +end;
MPRINT(EM_DIAGRAM):   end;
265053    +else do;
MPRINT(EM_DIAGRAM):   else do;
265054    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
265055    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
265056    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
265057    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
265058    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
265059    +   end;
MPRINT(EM_DIAGRAM):   end;
265060    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
265061    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
265062    +   end;
MPRINT(EM_DIAGRAM):   end;
265063    +   else do;
MPRINT(EM_DIAGRAM):   else do;
265064    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
265065    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
265066    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
265067    +   end;
MPRINT(EM_DIAGRAM):   end;
265068    +end;
MPRINT(EM_DIAGRAM):   end;
265069    +
265070    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
265071    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
265072    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
265073    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
265074    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
265075    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
265076    +end;
MPRINT(EM_DIAGRAM):   end;
265077    +else do;
MPRINT(EM_DIAGRAM):   else do;
265078    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
265079    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
265080    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
265081    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
265082    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
265083    +   end;
MPRINT(EM_DIAGRAM):   end;
265084    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
265085    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
265086    +   end;
MPRINT(EM_DIAGRAM):   end;
265087    +   else do;
MPRINT(EM_DIAGRAM):   else do;
265088    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
265089    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
265090    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
265091    +   end;
MPRINT(EM_DIAGRAM):   end;
265092    +end;
MPRINT(EM_DIAGRAM):   end;
265093    +
265094    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
265095    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
265096    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
265097    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
265098    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
265099    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
265100    +end;
MPRINT(EM_DIAGRAM):   end;
265101    +else do;
MPRINT(EM_DIAGRAM):   else do;
265102    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
265103    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
265104    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
265105    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
265106    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
265107    +   end;
MPRINT(EM_DIAGRAM):   end;
265108    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
265109    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
265110    +   end;
MPRINT(EM_DIAGRAM):   end;
265111    +   else do;
MPRINT(EM_DIAGRAM):   else do;
265112    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
265113    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
265114    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
265115    +   end;
MPRINT(EM_DIAGRAM):   end;
265116    +end;
MPRINT(EM_DIAGRAM):   end;
265117    +
265118    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
265119    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
265120    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
265121    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
265122    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
265123    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
265124    +end;
MPRINT(EM_DIAGRAM):   end;
265125    +else do;
MPRINT(EM_DIAGRAM):   else do;
265126    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
265127    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
265128    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
265129    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
265130    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
265131    +   end;
MPRINT(EM_DIAGRAM):   end;
265132    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
265133    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
265134    +   end;
MPRINT(EM_DIAGRAM):   end;
265135    +   else do;
MPRINT(EM_DIAGRAM):   else do;
265136    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
265137    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
265138    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
265139    +   end;
MPRINT(EM_DIAGRAM):   end;
265140    +end;
MPRINT(EM_DIAGRAM):   end;
265141    +
265142    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
265143    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
265144    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
265145    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
265146    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
265147    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
265148    +end;
MPRINT(EM_DIAGRAM):   end;
265149    +else do;
MPRINT(EM_DIAGRAM):   else do;
265150    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
265151    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
265152    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
265153    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
265154    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
265155    +   end;
MPRINT(EM_DIAGRAM):   end;
265156    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
265157    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
265158    +   end;
MPRINT(EM_DIAGRAM):   end;
265159    +   else do;
MPRINT(EM_DIAGRAM):   else do;
265160    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
265161    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
265162    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
265163    +   end;
MPRINT(EM_DIAGRAM):   end;
265164    +end;
MPRINT(EM_DIAGRAM):   end;
265165    +
265166    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
265167    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
265168    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
265169    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
265170    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
265171    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
265172    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
265173    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
265174    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
265175    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
265176    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
265177    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
265178    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
265179    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
265180    +end;
MPRINT(EM_DIAGRAM):   end;
265181    +else do;
MPRINT(EM_DIAGRAM):   else do;
265182    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
265183    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
265184    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
265185    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
265186    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
265187    +   end;
MPRINT(EM_DIAGRAM):   end;
265188    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
265189    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
265190    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
265191    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
265192    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
265193    +   end;
MPRINT(EM_DIAGRAM):   end;
265194    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
265195    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
265196    +   end;
MPRINT(EM_DIAGRAM):   end;
265197    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
265198    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
265199    +   end;
MPRINT(EM_DIAGRAM):   end;
265200    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
265201    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
265202    +   end;
MPRINT(EM_DIAGRAM):   end;
265203    +   else do;
MPRINT(EM_DIAGRAM):   else do;
265204    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
265205    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
265206    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
265207    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
265208    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
265209    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
265210    +   end;
MPRINT(EM_DIAGRAM):   end;
265211    +end;
MPRINT(EM_DIAGRAM):   end;
265212    +
265213    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
265214    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
265215    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
265216    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
265217    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
265218    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
265219    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
265220    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
265221    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
265222    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
265223    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
265224    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
265225    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
265226    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
265227    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
265228    +end;
MPRINT(EM_DIAGRAM):   end;
265229    +else do;
MPRINT(EM_DIAGRAM):   else do;
265230    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
265231    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
265232    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
265233    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
265234    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
265235    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
265236    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
265237    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
265238    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
265239    +         end;
MPRINT(EM_DIAGRAM):   end;
265240    +         else do;
MPRINT(EM_DIAGRAM):   else do;
265241    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
265242    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
265243    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
265244    +            end;
MPRINT(EM_DIAGRAM):   end;
265245    +         end;
MPRINT(EM_DIAGRAM):   end;
265246    +      end;
MPRINT(EM_DIAGRAM):   end;
265247    +      else do;
MPRINT(EM_DIAGRAM):   else do;
265248    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
265249    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
265250    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
265251    +         end;
MPRINT(EM_DIAGRAM):   end;
265252    +      end;
MPRINT(EM_DIAGRAM):   end;
265253    +   end;
MPRINT(EM_DIAGRAM):   end;
265254    +   else do;
MPRINT(EM_DIAGRAM):   else do;
265255    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
265256    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
265257    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
265258    +      end;
MPRINT(EM_DIAGRAM):   end;
265259    +      else do;
MPRINT(EM_DIAGRAM):   else do;
265260    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
265261    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
265262    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
265263    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
265264    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
265265    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
265266    +         end;
MPRINT(EM_DIAGRAM):   end;
265267    +      end;
MPRINT(EM_DIAGRAM):   end;
265268    +   end;
MPRINT(EM_DIAGRAM):   end;
265269    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
265270    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
265271    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
265272    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
265273    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
265274    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
265275    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
265276    +   end;
MPRINT(EM_DIAGRAM):   end;
265277    +end;
MPRINT(EM_DIAGRAM):   end;
265278    +
265279    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
265280    +*** Checking missing input Interval
265281    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
265282    +
265283    +IF NMISS(
265284    +   AcceptedCmpTotal ,
265285    +   Age ,
265286    +   Frq ,
265287    +   Income ,
265288    +   Kidhome ,
265289    +   Mnt ,
265290    +   MntFishProducts ,
265291    +   MntFruits ,
265292    +   MntGoldProds ,
265293    +   MntMeatProducts ,
265294    +   MntSweetProducts ,
265295    +   MntWines ,
265296    +   MonthsAsCustomer ,
265297    +   NumCatalogPurchases ,
265298    +   NumDealsPurchases ,
265299    +   NumDistPurchases ,
265300    +   NumStorePurchases ,
265301    +   NumWebPurchases ,
265302    +   NumWebVisitsMonth ,
265303    +   RFMstat ,
265304    +   RMntFrq ,
265305    +   Recency ,
265306    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
265307    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
265308    +
265309    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
265310    +END;
MPRINT(EM_DIAGRAM):   END;
265311    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
265312    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
265313    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
265314    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
265315    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
265316    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
265317    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
265318    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
265319    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
265320    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
265321    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
265322    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
265323    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
265324    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
265325    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
265326    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
265327    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
265328    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
265329    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
265330    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
265331    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
265332    +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
265333    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
265334    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
265335    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
265336    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
265337    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
265338    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
265339    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
265340    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
265341    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
265342    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
265343    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
265344    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
265345    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
265346    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
265347    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
265348    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
265349    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
265350    +END;
MPRINT(EM_DIAGRAM):   END;
265351    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
265352    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
265353    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
265354    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
265355    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
265356    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
265357    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
265358    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
265359    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
265360    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
265361    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
265362    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
265363    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
265364    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
265365    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
265366    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
265367    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
265368    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
265369    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
265370    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
265371    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
265372    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
265373    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
265374    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
265375    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
265376    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
265377    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
265378    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
265379    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
265380    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
265381    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
265382    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
265383    +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
265384    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
265385    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
265386    +   ELSE S_NumCatalogPurchases
265387    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
265388    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
265389    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
265390    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
265391    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
265392    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
265393    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
265394    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
265395    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
265396    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
265397    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
265398    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
265399    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
265400    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
265401    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
265402    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
265403    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
265404    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
265405    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
265406    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
265407    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
265408    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
265409    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
265410    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
265411    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
265412    +END;
MPRINT(EM_DIAGRAM):   END;
265413    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
265414    +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
265415    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
265416    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
265417    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
265418    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
265419    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
265420    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
265421    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
265422    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
265423    +   H11  =    -0.49268542152723 * S_AcceptedCmpTotal  +     -0.0481397514569 *
265424    +        S_Age  +    -0.30437636824683 * S_Frq  +    -1.15179334457144 *
265425    +        S_Income  +     0.52341833722719 * S_Kidhome
265426    +          +    -0.21261714885662 * S_Mnt  +    -0.10196325382831 *
265427    +        S_MntFishProducts  +     0.18788251887399 * S_MntFruits
265428    +          +     0.07877248271808 * S_MntGoldProds  +     -0.3554186123772 *
265429    +        S_MntMeatProducts  +     0.26810834903306 * S_MntSweetProducts
265430    +          +      0.7572736068799 * S_MntWines  +    -0.11619352540399 *
265431    +        S_MonthsAsCustomer  +    -0.46080176244829 * S_NumCatalogPurchases
265432    +          +    -0.07601319156416 * S_NumDealsPurchases
265433    +          +    -0.37691059923172 * S_NumDistPurchases
265434    +          +     0.14479416923691 * S_NumStorePurchases
265435    +          +     0.22886116861382 * S_NumWebPurchases
265436    +          +    -1.05452266604504 * S_NumWebVisitsMonth
265437    +          +     0.11426625648846 * S_RFMstat  +    -0.46845377036873 *
265438    +        S_RMntFrq  +     1.39805990084367 * S_Recency
265439    +          +     0.91325795567367 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.49268542152723 * S_AcceptedCmpTotal + -0.0481397514569 * S_Age 
+ -0.30437636824683 * S_Frq + -1.15179334457144 * S_Income + 0.52341833722719 * S_Kidhome + 
-0.21261714885662 * S_Mnt + -0.10196325382831 * S_MntFishProducts + 0.18788251887399 * 
S_MntFruits + 0.07877248271808 * S_MntGoldProds + -0.3554186123772 * S_MntMeatProducts + 
0.26810834903306 * S_MntSweetProducts + 0.7572736068799 * S_MntWines + -0.11619352540399 * 
S_MonthsAsCustomer + -0.46080176244829 * S_NumCatalogPurchases + -0.07601319156416 * 
S_NumDealsPurchases + -0.37691059923172 * S_NumDistPurchases + 0.14479416923691 * 
S_NumStorePurchases + 0.22886116861382 * S_NumWebPurchases + -1.05452266604504 * 
S_NumWebVisitsMonth + 0.11426625648846 * S_RFMstat + -0.46845377036873 * S_RMntFrq + 
1.39805990084367 * S_Recency + 0.91325795567367 * S_Teenhome ;
265440    +   H12  =     0.48640474281615 * S_AcceptedCmpTotal  +     0.03168788563965 *
265441    +        S_Age  +    -0.02802128226737 * S_Frq  +     0.52993214073901 *
265442    +        S_Income  +     0.24958351789577 * S_Kidhome
265443    +          +     0.25221072579725 * S_Mnt  +    -0.54431466149526 *
265444    +        S_MntFishProducts  +    -0.09969634201392 * S_MntFruits
265445    +          +     0.22251888175317 * S_MntGoldProds  +     2.21720479300716 *
265446    +        S_MntMeatProducts  +     0.08411214394291 * S_MntSweetProducts
265447    +          +    -0.83482542959891 * S_MntWines  +     0.06928323386075 *
265448    +        S_MonthsAsCustomer  +     1.61603076533547 * S_NumCatalogPurchases
265449    +          +     0.79919814392328 * S_NumDealsPurchases
265450    +          +     0.30394718497487 * S_NumDistPurchases
265451    +          +      -0.727130739278 * S_NumStorePurchases
265452    +          +    -0.92337052372179 * S_NumWebPurchases
265453    +          +     0.22125703025242 * S_NumWebVisitsMonth
265454    +          +     0.51615035692083 * S_RFMstat  +     0.09759485646525 *
265455    +        S_RMntFrq  +    -0.21632393786918 * S_Recency
265456    +          +    -0.09817720742254 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.48640474281615 * S_AcceptedCmpTotal + 0.03168788563965 * S_Age + 
-0.02802128226737 * S_Frq + 0.52993214073901 * S_Income + 0.24958351789577 * S_Kidhome + 
0.25221072579725 * S_Mnt + -0.54431466149526 * S_MntFishProducts + -0.09969634201392 * 
S_MntFruits + 0.22251888175317 * S_MntGoldProds + 2.21720479300716 * S_MntMeatProducts + 
0.08411214394291 * S_MntSweetProducts + -0.83482542959891 * S_MntWines + 0.06928323386075 * 
S_MonthsAsCustomer + 1.61603076533547 * S_NumCatalogPurchases + 0.79919814392328 * 
S_NumDealsPurchases + 0.30394718497487 * S_NumDistPurchases + -0.727130739278 * 
S_NumStorePurchases + -0.92337052372179 * S_NumWebPurchases + 0.22125703025242 * 
S_NumWebVisitsMonth + 0.51615035692083 * S_RFMstat + 0.09759485646525 * S_RMntFrq + 
-0.21632393786918 * S_Recency + -0.09817720742254 * S_Teenhome ;
265457    +   H13  =    -0.14277955421105 * S_AcceptedCmpTotal  +     0.01891543541262 *
265458    +        S_Age  +    -0.09449326498218 * S_Frq  +    -0.03060296052615 *
265459    +        S_Income  +    -0.02210730279852 * S_Kidhome
265460    +          +     0.15705631910101 * S_Mnt  +     0.08573647183827 *
265461    +        S_MntFishProducts  +    -0.07727594473101 * S_MntFruits
265462    +          +     0.10800565745981 * S_MntGoldProds  +     0.16136844354024 *
265463    +        S_MntMeatProducts  +    -0.27592138838926 * S_MntSweetProducts
265464    +          +    -0.28884862043521 * S_MntWines  +    -0.26221449264568 *
265465    +        S_MonthsAsCustomer  +    -0.12893818317268 * S_NumCatalogPurchases
265466    +          +    -0.07260787713046 * S_NumDealsPurchases
265467    +          +    -0.11357594278299 * S_NumDistPurchases
265468    +          +    -0.12187788759653 * S_NumStorePurchases
265469    +          +    -0.12854188822638 * S_NumWebPurchases
265470    +          +     0.19328484993193 * S_NumWebVisitsMonth
265471    +          +     0.29126701299369 * S_RFMstat  +       0.295572030551 *
265472    +        S_RMntFrq  +    -0.17474693596234 * S_Recency
265473    +          +    -0.15767296223747 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.14277955421105 * S_AcceptedCmpTotal + 0.01891543541262 * S_Age 
+ -0.09449326498218 * S_Frq + -0.03060296052615 * S_Income + -0.02210730279852 * S_Kidhome + 
0.15705631910101 * S_Mnt + 0.08573647183827 * S_MntFishProducts + -0.07727594473101 * 
S_MntFruits + 0.10800565745981 * S_MntGoldProds + 0.16136844354024 * S_MntMeatProducts + 
-0.27592138838926 * S_MntSweetProducts + -0.28884862043521 * S_MntWines + -0.26221449264568 * 
S_MonthsAsCustomer + -0.12893818317268 * S_NumCatalogPurchases + -0.07260787713046 * 
S_NumDealsPurchases + -0.11357594278299 * S_NumDistPurchases + -0.12187788759653 * 
S_NumStorePurchases + -0.12854188822638 * S_NumWebPurchases + 0.19328484993193 * 
S_NumWebVisitsMonth + 0.29126701299369 * S_RFMstat + 0.295572030551 * S_RMntFrq + 
-0.17474693596234 * S_Recency + -0.15767296223747 * S_Teenhome ;
265474    +   H14  =     0.02882140654096 * S_AcceptedCmpTotal  +     0.22754549790851 *
265475    +        S_Age  +     0.62237954814905 * S_Frq  +     0.32094678094502 *
265476    +        S_Income  +     -0.5159289111115 * S_Kidhome
265477    +          +    -0.06660708376246 * S_Mnt  +     0.23505454155784 *
265478    +        S_MntFishProducts  +     -0.1751094914934 * S_MntFruits
265479    +          +     0.28529181082906 * S_MntGoldProds  +    -0.86064239437512 *
265480    +        S_MntMeatProducts  +    -0.11869244038768 * S_MntSweetProducts
265481    +          +     0.54178192135459 * S_MntWines  +     0.01320164526542 *
265482    +        S_MonthsAsCustomer  +     -0.8775343676818 * S_NumCatalogPurchases
265483    +          +    -0.76643907891635 * S_NumDealsPurchases
265484    +          +     0.28173289049322 * S_NumDistPurchases
265485    +          +     0.65522454520442 * S_NumStorePurchases
265486    +          +     0.68112901460293 * S_NumWebPurchases
265487    +          +    -0.49101731268641 * S_NumWebVisitsMonth
265488    +          +    -0.19434806570231 * S_RFMstat  +    -0.00086194515061 *
265489    +        S_RMntFrq  +     0.47432332222746 * S_Recency
265490    +          +    -0.05016870847242 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 0.02882140654096 * S_AcceptedCmpTotal + 0.22754549790851 * S_Age + 
0.62237954814905 * S_Frq + 0.32094678094502 * S_Income + -0.5159289111115 * S_Kidhome + 
-0.06660708376246 * S_Mnt + 0.23505454155784 * S_MntFishProducts + -0.1751094914934 * 
S_MntFruits + 0.28529181082906 * S_MntGoldProds + -0.86064239437512 * S_MntMeatProducts + 
-0.11869244038768 * S_MntSweetProducts + 0.54178192135459 * S_MntWines + 0.01320164526542 * 
S_MonthsAsCustomer + -0.8775343676818 * S_NumCatalogPurchases + -0.76643907891635 * 
S_NumDealsPurchases + 0.28173289049322 * S_NumDistPurchases + 0.65522454520442 * 
S_NumStorePurchases + 0.68112901460293 * S_NumWebPurchases + -0.49101731268641 * 
S_NumWebVisitsMonth + -0.19434806570231 * S_RFMstat + -0.00086194515061 * S_RMntFrq + 
0.47432332222746 * S_Recency + -0.05016870847242 * S_Teenhome ;
265491    +   H15  =    -0.53993167927046 * S_AcceptedCmpTotal  +    -0.01376485869661 *
265492    +        S_Age  +     0.13417021721762 * S_Frq  +    -0.46098316120524 *
265493    +        S_Income  +     0.79883165437194 * S_Kidhome
265494    +          +    -0.08868062204795 * S_Mnt  +     0.27921118443695 *
265495    +        S_MntFishProducts  +     0.07333408727108 * S_MntFruits
265496    +          +    -0.12699517331566 * S_MntGoldProds  +    -0.83076183794341 *
265497    +        S_MntMeatProducts  +     0.07046050445165 * S_MntSweetProducts
265498    +          +     0.39887580122915 * S_MntWines  +     0.22266979348172 *
265499    +        S_MonthsAsCustomer  +    -0.63148593968536 * S_NumCatalogPurchases
265500    +          +    -0.54240596184474 * S_NumDealsPurchases
265501    +          +     0.07214067132859 * S_NumDistPurchases
265502    +          +     0.63136920851698 * S_NumStorePurchases
265503    +          +     0.67036298761526 * S_NumWebPurchases
265504    +          +     -1.5590147163003 * S_NumWebVisitsMonth
265505    +          +    -0.14672746638498 * S_RFMstat  +     0.45614757001513 *
265506    +        S_RMntFrq  +     1.43166375146019 * S_Recency
265507    +          +     0.33608033306213 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = -0.53993167927046 * S_AcceptedCmpTotal + -0.01376485869661 * S_Age 
+ 0.13417021721762 * S_Frq + -0.46098316120524 * S_Income + 0.79883165437194 * S_Kidhome + 
-0.08868062204795 * S_Mnt + 0.27921118443695 * S_MntFishProducts + 0.07333408727108 * 
S_MntFruits + -0.12699517331566 * S_MntGoldProds + -0.83076183794341 * S_MntMeatProducts + 
0.07046050445165 * S_MntSweetProducts + 0.39887580122915 * S_MntWines + 0.22266979348172 * 
S_MonthsAsCustomer + -0.63148593968536 * S_NumCatalogPurchases + -0.54240596184474 * 
S_NumDealsPurchases + 0.07214067132859 * S_NumDistPurchases + 0.63136920851698 * 
S_NumStorePurchases + 0.67036298761526 * S_NumWebPurchases + -1.5590147163003 * 
S_NumWebVisitsMonth + -0.14672746638498 * S_RFMstat + 0.45614757001513 * S_RMntFrq + 
1.43166375146019 * S_Recency + 0.33608033306213 * S_Teenhome ;
265508    +   H11  = H11  +     0.00378267229722 * AcceptedCmp10
265509    +          +     0.35869089787338 * AcceptedCmp20  +     0.34289379925327 *
265510    +        AcceptedCmp30  +     0.52644241458012 * AcceptedCmp40
265511    +          +    -0.13608418232323 * AcceptedCmp50  +      0.0959964311844 *
265512    +        Complain0  +    -0.33986310453812 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.00378267229722 * AcceptedCmp10 + 0.35869089787338 * 
AcceptedCmp20 + 0.34289379925327 * AcceptedCmp30 + 0.52644241458012 * AcceptedCmp40 + 
-0.13608418232323 * AcceptedCmp50 + 0.0959964311844 * Complain0 + -0.33986310453812 * 
HigherEducationBinary0 ;
265513    +   H12  = H12  +    -0.20844623079893 * AcceptedCmp10
265514    +          +      0.2510523434536 * AcceptedCmp20  +     0.23001544402014 *
265515    +        AcceptedCmp30  +     0.31575100635625 * AcceptedCmp40
265516    +          +    -0.27770609908664 * AcceptedCmp50  +     0.23396693724368 *
265517    +        Complain0  +    -0.14587691179074 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.20844623079893 * AcceptedCmp10 + 0.2510523434536 * 
AcceptedCmp20 + 0.23001544402014 * AcceptedCmp30 + 0.31575100635625 * AcceptedCmp40 + 
-0.27770609908664 * AcceptedCmp50 + 0.23396693724368 * Complain0 + -0.14587691179074 * 
HigherEducationBinary0 ;
265518    +   H13  = H13  +    -0.01749375115567 * AcceptedCmp10
265519    +          +     0.03272810660889 * AcceptedCmp20  +     0.05919744501073 *
265520    +        AcceptedCmp30  +    -0.05281709288559 * AcceptedCmp40
265521    +          +     0.17878522964245 * AcceptedCmp50  +    -0.15875476707826 *
265522    +        Complain0  +     0.12807090869788 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.01749375115567 * AcceptedCmp10 + 0.03272810660889 * 
AcceptedCmp20 + 0.05919744501073 * AcceptedCmp30 + -0.05281709288559 * AcceptedCmp40 + 
0.17878522964245 * AcceptedCmp50 + -0.15875476707826 * Complain0 + 0.12807090869788 * 
HigherEducationBinary0 ;
265523    +   H14  = H14  +     0.09851664636541 * AcceptedCmp10
265524    +          +     0.31377564249189 * AcceptedCmp20  +     0.52269532116349 *
265525    +        AcceptedCmp30  +     0.02591777861146 * AcceptedCmp40
265526    +          +     0.32944924737684 * AcceptedCmp50  +     0.47187246513641 *
265527    +        Complain0  +     0.20705632210077 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.09851664636541 * AcceptedCmp10 + 0.31377564249189 * 
AcceptedCmp20 + 0.52269532116349 * AcceptedCmp30 + 0.02591777861146 * AcceptedCmp40 + 
0.32944924737684 * AcceptedCmp50 + 0.47187246513641 * Complain0 + 0.20705632210077 * 
HigherEducationBinary0 ;
265528    +   H15  = H15  +     0.25267160740134 * AcceptedCmp10
265529    +          +     0.37928521134817 * AcceptedCmp20  +     0.14104403552359 *
265530    +        AcceptedCmp30  +     0.11544762492946 * AcceptedCmp40
265531    +          +     0.50603978517673 * AcceptedCmp50  +    -0.00034162341159 *
265532    +        Complain0  +    -0.00425270701284 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.25267160740134 * AcceptedCmp10 + 0.37928521134817 * 
AcceptedCmp20 + 0.14104403552359 * AcceptedCmp30 + 0.11544762492946 * AcceptedCmp40 + 
0.50603978517673 * AcceptedCmp50 + -0.00034162341159 * Complain0 + -0.00425270701284 * 
HigherEducationBinary0 ;
265533    +   H11  = H11  +     0.21764897070728 * Education2n_Cycle
265534    +          +    -0.08901311303506 * EducationBasic  +      0.0272878010337 *
265535    +        EducationGraduation  +     0.05103320060897 * EducationMaster
265536    +          +    -0.43880138896132 * Marital_StatusDivorced
265537    +          +     1.07801970957052 * Marital_StatusMarried
265538    +          +    -1.01564319756795 * Marital_StatusSingle
265539    +          +     1.06803078970545 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.21764897070728 * Education2n_Cycle + -0.08901311303506 * 
EducationBasic + 0.0272878010337 * EducationGraduation + 0.05103320060897 * EducationMaster + 
-0.43880138896132 * Marital_StatusDivorced + 1.07801970957052 * Marital_StatusMarried + 
-1.01564319756795 * Marital_StatusSingle + 1.06803078970545 * Marital_StatusTogether ;
265540    +   H12  = H12  +     0.20450416319293 * Education2n_Cycle
265541    +          +    -0.09602008725654 * EducationBasic  +     0.01841737017681 *
265542    +        EducationGraduation  +     0.06732737733154 * EducationMaster
265543    +          +    -0.26753605060913 * Marital_StatusDivorced
265544    +          +     0.38107608670301 * Marital_StatusMarried
265545    +          +     -0.1436641790467 * Marital_StatusSingle
265546    +          +     0.51604025961093 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.20450416319293 * Education2n_Cycle + -0.09602008725654 * 
EducationBasic + 0.01841737017681 * EducationGraduation + 0.06732737733154 * EducationMaster + 
-0.26753605060913 * Marital_StatusDivorced + 0.38107608670301 * Marital_StatusMarried + 
-0.1436641790467 * Marital_StatusSingle + 0.51604025961093 * Marital_StatusTogether ;
265547    +   H13  = H13  +     0.06208521737633 * Education2n_Cycle
265548    +          +    -0.33631443686566 * EducationBasic  +     0.16608152113657 *
265549    +        EducationGraduation  +     0.12802026359779 * EducationMaster
265550    +          +    -0.08001329849816 * Marital_StatusDivorced
265551    +          +      0.0371075570789 * Marital_StatusMarried
265552    +          +     0.00370467546319 * Marital_StatusSingle
265553    +          +    -0.00676233309382 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.06208521737633 * Education2n_Cycle + -0.33631443686566 * 
EducationBasic + 0.16608152113657 * EducationGraduation + 0.12802026359779 * EducationMaster + 
-0.08001329849816 * Marital_StatusDivorced + 0.0371075570789 * Marital_StatusMarried + 
0.00370467546319 * Marital_StatusSingle + -0.00676233309382 * Marital_StatusTogether ;
265554    +   H14  = H14  +     0.23121044223136 * Education2n_Cycle
265555    +          +     0.20063897603031 * EducationBasic  +    -0.03690411024016 *
265556    +        EducationGraduation  +    -0.05893576310907 * EducationMaster
265557    +          +     0.13587543683769 * Marital_StatusDivorced
265558    +          +    -0.45903453868087 * Marital_StatusMarried
265559    +          +      0.3498299821692 * Marital_StatusSingle
265560    +          +    -0.24987552246214 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.23121044223136 * Education2n_Cycle + 0.20063897603031 * 
EducationBasic + -0.03690411024016 * EducationGraduation + -0.05893576310907 * EducationMaster 
+ 0.13587543683769 * Marital_StatusDivorced + -0.45903453868087 * Marital_StatusMarried + 
0.3498299821692 * Marital_StatusSingle + -0.24987552246214 * Marital_StatusTogether ;
265561    +   H15  = H15  +    -0.25453618071143 * Education2n_Cycle
265562    +          +     0.10531942203707 * EducationBasic  +    -0.11067812258079 *
265563    +        EducationGraduation  +     0.22861584696672 * EducationMaster
265564    +          +    -0.23512394203797 * Marital_StatusDivorced
265565    +          +       0.710701930681 * Marital_StatusMarried
265566    +          +    -0.56116525410203 * Marital_StatusSingle
265567    +          +     0.87274230285244 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.25453618071143 * Education2n_Cycle + 0.10531942203707 * 
EducationBasic + -0.11067812258079 * EducationGraduation + 0.22861584696672 * EducationMaster 
+ -0.23512394203797 * Marital_StatusDivorced + 0.710701930681 * Marital_StatusMarried + 
-0.56116525410203 * Marital_StatusSingle + 0.87274230285244 * Marital_StatusTogether ;
265568    +   H11  =     1.97354382834855 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 1.97354382834855 + H11 ;
265569    +   H12  =     0.19040674177137 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.19040674177137 + H12 ;
265570    +   H13  =    -2.95812486901971 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -2.95812486901971 + H13 ;
265571    +   H14  =     0.68206105329025 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.68206105329025 + H14 ;
265572    +   H15  =    -0.15880184648294 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -0.15880184648294 + H15 ;
265573    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
265574    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
265575    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
265576    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
265577    +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
265578    +END;
MPRINT(EM_DIAGRAM):   END;
265579    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
265580    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
265581    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
265582    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
265583    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
265584    +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
265585    +END;
MPRINT(EM_DIAGRAM):   END;
265586    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
265587    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
265588    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
265589    +
265590    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
265591    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
265592    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
265593    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
265594    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
265595    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
265596    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
265597    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
265598    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
265599    +end;
MPRINT(EM_DIAGRAM):   end;
265600    +else do;
MPRINT(EM_DIAGRAM):   else do;
265601    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
265602    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
265603    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
265604    +   end;
MPRINT(EM_DIAGRAM):   end;
265605    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
265606    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
265607    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
265608    +   end;
MPRINT(EM_DIAGRAM):   end;
265609    +   else do;
MPRINT(EM_DIAGRAM):   else do;
265610    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
265611    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
265612    +   end;
MPRINT(EM_DIAGRAM):   end;
265613    +end;
MPRINT(EM_DIAGRAM):   end;
265614    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
265615    +   P_DepVar1  =    -3.25756779032103 * H11  +     3.11613473869222 * H12
265616    +          +     0.05860782492357 * H13  +    -2.24562119342825 * H14
265617    +          +    -3.55426417229617 * H15 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.25756779032103 * H11 + 3.11613473869222 * H12 + 
0.05860782492357 * H13 + -2.24562119342825 * H14 + -3.55426417229617 * H15 ;
265618    +   P_DepVar1  =    -1.11502795304759 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.11502795304759 + P_DepVar1 ;
265619    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
265620    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
265621    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
265622    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
265623    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
265624    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
265625    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
265626    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
265627    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
265628    +END;
MPRINT(EM_DIAGRAM):   END;
265629    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
265630    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
265631    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
265632    +END;
MPRINT(EM_DIAGRAM):   END;
265633    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
265634    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
265635    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
265636    +END;
MPRINT(EM_DIAGRAM):   END;
265637    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
265638    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
265639    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
265640    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
265641    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
265642    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
265643    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
265644    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
265645    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
265646    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
265647    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
265648    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
265649    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
265650    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
265651    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
265652    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
265653    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
265654    +END;
MPRINT(EM_DIAGRAM):   END;
265655    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
265656    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
265657    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
265658    +drop
265659    +H11
265660    +H12
265661    +H13
265662    +H14
265663    +H15
265664    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 ;
265665    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
265666     run;

NOTE: DATA STEP view saved on file EMWS8.NEURAL7_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.META_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.06 seconds
      

MPRINT(EM_DIAGRAM):   quit;
265667     quit;
265668     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
265669     filename emflow
265669   ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural7\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural7\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural7: Scoring VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
265670     *------------------------------------------------------------*;
265671     * Neural7: Scoring VALIDATE data;
265672     *------------------------------------------------------------*;
265673     data EMWS8.Neural7_VALIDATE
265674     / view=EMWS8.Neural7_VALIDATE
265675     ;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural7_VALIDATE / view=EMWS8.Neural7_VALIDATE ;
265676     set EMWS8.Meta_VALIDATE
265677     ;
MPRINT(EM_DIAGRAM):   set EMWS8.Meta_VALIDATE ;
265678     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural7\EMFLOWSCORE.sas.
265679    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
265680    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
265681    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
265682    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
265683    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
265684    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
265685    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
265686    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
265687    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
265688    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
265689    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
265690    +LENGTH _WARN_ $4
265691    +      F_DepVar  $ 12
265692    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
265693    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
265694    +
265695    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
265696    +
265697    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
265698    +
265699    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
265700    +
265701    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
265702    +
265703    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
265704    +
265705    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
265706    +
265707    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
265708    +
265709    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
265710    +
265711    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
265712    +
265713    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
265714    +
265715    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
265716    +
265717    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
265718    +
265719    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
265720    +
265721    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
265722    +
265723    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
265724    +
265725    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
265726    +
265727    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
265728    +
265729    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
265730    +
265731    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
265732    +
265733    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
265734    +
265735    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
265736    +
265737    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
265738    +
265739    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
265740    +
265741    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
265742    +
265743    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
265744    +
265745    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
265746    +
265747    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
265748    +
265749    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
265750    +
265751    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
265752    +
265753    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
265754    +
265755    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
265756    +
265757    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
265758    +
265759    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
265760    +
265761    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
265762    +
265763    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
265764    +
265765    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
265766    +
265767    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
265768    +
265769    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
265770    +
265771    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
265772    +
265773    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
265774    +
265775    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
265776    +
265777    +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
265778    +
265779    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
265780    +
265781    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
265782    +
265783    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
265784    +
265785    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
265786    +
265787    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
265788    +
265789    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
265790    +
265791    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
265792    +
265793    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
265794    +
265795    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
265796    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
265797    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
265798    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
265799    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
265800    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
265801    +end;
MPRINT(EM_DIAGRAM):   end;
265802    +else do;
MPRINT(EM_DIAGRAM):   else do;
265803    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
265804    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
265805    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
265806    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
265807    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
265808    +   end;
MPRINT(EM_DIAGRAM):   end;
265809    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
265810    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
265811    +   end;
MPRINT(EM_DIAGRAM):   end;
265812    +   else do;
MPRINT(EM_DIAGRAM):   else do;
265813    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
265814    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
265815    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
265816    +   end;
MPRINT(EM_DIAGRAM):   end;
265817    +end;
MPRINT(EM_DIAGRAM):   end;
265818    +
265819    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
265820    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
265821    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
265822    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
265823    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
265824    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
265825    +end;
MPRINT(EM_DIAGRAM):   end;
265826    +else do;
MPRINT(EM_DIAGRAM):   else do;
265827    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
265828    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
265829    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
265830    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
265831    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
265832    +   end;
MPRINT(EM_DIAGRAM):   end;
265833    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
265834    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
265835    +   end;
MPRINT(EM_DIAGRAM):   end;
265836    +   else do;
MPRINT(EM_DIAGRAM):   else do;
265837    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
265838    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
265839    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
265840    +   end;
MPRINT(EM_DIAGRAM):   end;
265841    +end;
MPRINT(EM_DIAGRAM):   end;
265842    +
265843    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
265844    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
265845    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
265846    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
265847    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
265848    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
265849    +end;
MPRINT(EM_DIAGRAM):   end;
265850    +else do;
MPRINT(EM_DIAGRAM):   else do;
265851    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
265852    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
265853    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
265854    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
265855    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
265856    +   end;
MPRINT(EM_DIAGRAM):   end;
265857    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
265858    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
265859    +   end;
MPRINT(EM_DIAGRAM):   end;
265860    +   else do;
MPRINT(EM_DIAGRAM):   else do;
265861    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
265862    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
265863    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
265864    +   end;
MPRINT(EM_DIAGRAM):   end;
265865    +end;
MPRINT(EM_DIAGRAM):   end;
265866    +
265867    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
265868    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
265869    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
265870    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
265871    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
265872    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
265873    +end;
MPRINT(EM_DIAGRAM):   end;
265874    +else do;
MPRINT(EM_DIAGRAM):   else do;
265875    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
265876    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
265877    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
265878    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
265879    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
265880    +   end;
MPRINT(EM_DIAGRAM):   end;
265881    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
265882    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
265883    +   end;
MPRINT(EM_DIAGRAM):   end;
265884    +   else do;
MPRINT(EM_DIAGRAM):   else do;
265885    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
265886    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
265887    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
265888    +   end;
MPRINT(EM_DIAGRAM):   end;
265889    +end;
MPRINT(EM_DIAGRAM):   end;
265890    +
265891    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
265892    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
265893    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
265894    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
265895    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
265896    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
265897    +end;
MPRINT(EM_DIAGRAM):   end;
265898    +else do;
MPRINT(EM_DIAGRAM):   else do;
265899    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
265900    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
265901    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
265902    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
265903    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
265904    +   end;
MPRINT(EM_DIAGRAM):   end;
265905    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
265906    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
265907    +   end;
MPRINT(EM_DIAGRAM):   end;
265908    +   else do;
MPRINT(EM_DIAGRAM):   else do;
265909    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
265910    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
265911    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
265912    +   end;
MPRINT(EM_DIAGRAM):   end;
265913    +end;
MPRINT(EM_DIAGRAM):   end;
265914    +
265915    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
265916    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
265917    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
265918    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
265919    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
265920    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
265921    +end;
MPRINT(EM_DIAGRAM):   end;
265922    +else do;
MPRINT(EM_DIAGRAM):   else do;
265923    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
265924    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
265925    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
265926    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
265927    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
265928    +   end;
MPRINT(EM_DIAGRAM):   end;
265929    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
265930    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
265931    +   end;
MPRINT(EM_DIAGRAM):   end;
265932    +   else do;
MPRINT(EM_DIAGRAM):   else do;
265933    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
265934    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
265935    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
265936    +   end;
MPRINT(EM_DIAGRAM):   end;
265937    +end;
MPRINT(EM_DIAGRAM):   end;
265938    +
265939    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
265940    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
265941    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
265942    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
265943    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
265944    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
265945    +end;
MPRINT(EM_DIAGRAM):   end;
265946    +else do;
MPRINT(EM_DIAGRAM):   else do;
265947    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
265948    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
265949    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
265950    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
265951    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
265952    +   end;
MPRINT(EM_DIAGRAM):   end;
265953    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
265954    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
265955    +   end;
MPRINT(EM_DIAGRAM):   end;
265956    +   else do;
MPRINT(EM_DIAGRAM):   else do;
265957    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
265958    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
265959    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
265960    +   end;
MPRINT(EM_DIAGRAM):   end;
265961    +end;
MPRINT(EM_DIAGRAM):   end;
265962    +
265963    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
265964    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
265965    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
265966    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
265967    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
265968    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
265969    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
265970    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
265971    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
265972    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
265973    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
265974    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
265975    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
265976    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
265977    +end;
MPRINT(EM_DIAGRAM):   end;
265978    +else do;
MPRINT(EM_DIAGRAM):   else do;
265979    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
265980    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
265981    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
265982    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
265983    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
265984    +   end;
MPRINT(EM_DIAGRAM):   end;
265985    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
265986    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
265987    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
265988    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
265989    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
265990    +   end;
MPRINT(EM_DIAGRAM):   end;
265991    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
265992    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
265993    +   end;
MPRINT(EM_DIAGRAM):   end;
265994    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
265995    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
265996    +   end;
MPRINT(EM_DIAGRAM):   end;
265997    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
265998    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
265999    +   end;
MPRINT(EM_DIAGRAM):   end;
266000    +   else do;
MPRINT(EM_DIAGRAM):   else do;
266001    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
266002    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
266003    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
266004    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
266005    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
266006    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
266007    +   end;
MPRINT(EM_DIAGRAM):   end;
266008    +end;
MPRINT(EM_DIAGRAM):   end;
266009    +
266010    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
266011    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
266012    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
266013    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
266014    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
266015    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
266016    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
266017    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
266018    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
266019    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
266020    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
266021    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
266022    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
266023    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
266024    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
266025    +end;
MPRINT(EM_DIAGRAM):   end;
266026    +else do;
MPRINT(EM_DIAGRAM):   else do;
266027    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
266028    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
266029    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
266030    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
266031    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
266032    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
266033    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
266034    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
266035    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
266036    +         end;
MPRINT(EM_DIAGRAM):   end;
266037    +         else do;
MPRINT(EM_DIAGRAM):   else do;
266038    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
266039    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
266040    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
266041    +            end;
MPRINT(EM_DIAGRAM):   end;
266042    +         end;
MPRINT(EM_DIAGRAM):   end;
266043    +      end;
MPRINT(EM_DIAGRAM):   end;
266044    +      else do;
MPRINT(EM_DIAGRAM):   else do;
266045    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
266046    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
266047    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
266048    +         end;
MPRINT(EM_DIAGRAM):   end;
266049    +      end;
MPRINT(EM_DIAGRAM):   end;
266050    +   end;
MPRINT(EM_DIAGRAM):   end;
266051    +   else do;
MPRINT(EM_DIAGRAM):   else do;
266052    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
266053    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
266054    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
266055    +      end;
MPRINT(EM_DIAGRAM):   end;
266056    +      else do;
MPRINT(EM_DIAGRAM):   else do;
266057    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
266058    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
266059    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
266060    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
266061    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
266062    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
266063    +         end;
MPRINT(EM_DIAGRAM):   end;
266064    +      end;
MPRINT(EM_DIAGRAM):   end;
266065    +   end;
MPRINT(EM_DIAGRAM):   end;
266066    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
266067    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
266068    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
266069    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
266070    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
266071    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
266072    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
266073    +   end;
MPRINT(EM_DIAGRAM):   end;
266074    +end;
MPRINT(EM_DIAGRAM):   end;
266075    +
266076    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
266077    +*** Checking missing input Interval
266078    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
266079    +
266080    +IF NMISS(
266081    +   AcceptedCmpTotal ,
266082    +   Age ,
266083    +   Frq ,
266084    +   Income ,
266085    +   Kidhome ,
266086    +   Mnt ,
266087    +   MntFishProducts ,
266088    +   MntFruits ,
266089    +   MntGoldProds ,
266090    +   MntMeatProducts ,
266091    +   MntSweetProducts ,
266092    +   MntWines ,
266093    +   MonthsAsCustomer ,
266094    +   NumCatalogPurchases ,
266095    +   NumDealsPurchases ,
266096    +   NumDistPurchases ,
266097    +   NumStorePurchases ,
266098    +   NumWebPurchases ,
266099    +   NumWebVisitsMonth ,
266100    +   RFMstat ,
266101    +   RMntFrq ,
266102    +   Recency ,
266103    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
266104    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
266105    +
266106    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
266107    +END;
MPRINT(EM_DIAGRAM):   END;
266108    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
266109    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
266110    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
266111    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
266112    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
266113    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
266114    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
266115    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
266116    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
266117    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
266118    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
266119    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
266120    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
266121    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
266122    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
266123    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
266124    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
266125    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
266126    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
266127    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
266128    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
266129    +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
266130    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
266131    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
266132    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
266133    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
266134    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
266135    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
266136    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
266137    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
266138    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
266139    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
266140    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
266141    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
266142    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
266143    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
266144    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
266145    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
266146    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
266147    +END;
MPRINT(EM_DIAGRAM):   END;
266148    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
266149    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
266150    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
266151    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
266152    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
266153    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
266154    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
266155    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
266156    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
266157    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
266158    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
266159    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
266160    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
266161    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
266162    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
266163    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
266164    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
266165    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
266166    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
266167    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
266168    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
266169    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
266170    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
266171    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
266172    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
266173    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
266174    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
266175    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
266176    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
266177    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
266178    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
266179    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
266180    +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
266181    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
266182    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
266183    +   ELSE S_NumCatalogPurchases
266184    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
266185    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
266186    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
266187    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
266188    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
266189    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
266190    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
266191    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
266192    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
266193    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
266194    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
266195    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
266196    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
266197    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
266198    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
266199    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
266200    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
266201    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
266202    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
266203    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
266204    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
266205    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
266206    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
266207    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
266208    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
266209    +END;
MPRINT(EM_DIAGRAM):   END;
266210    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
266211    +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
266212    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
266213    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
266214    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
266215    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
266216    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
266217    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
266218    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
266219    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
266220    +   H11  =    -0.49268542152723 * S_AcceptedCmpTotal  +     -0.0481397514569 *
266221    +        S_Age  +    -0.30437636824683 * S_Frq  +    -1.15179334457144 *
266222    +        S_Income  +     0.52341833722719 * S_Kidhome
266223    +          +    -0.21261714885662 * S_Mnt  +    -0.10196325382831 *
266224    +        S_MntFishProducts  +     0.18788251887399 * S_MntFruits
266225    +          +     0.07877248271808 * S_MntGoldProds  +     -0.3554186123772 *
266226    +        S_MntMeatProducts  +     0.26810834903306 * S_MntSweetProducts
266227    +          +      0.7572736068799 * S_MntWines  +    -0.11619352540399 *
266228    +        S_MonthsAsCustomer  +    -0.46080176244829 * S_NumCatalogPurchases
266229    +          +    -0.07601319156416 * S_NumDealsPurchases
266230    +          +    -0.37691059923172 * S_NumDistPurchases
266231    +          +     0.14479416923691 * S_NumStorePurchases
266232    +          +     0.22886116861382 * S_NumWebPurchases
266233    +          +    -1.05452266604504 * S_NumWebVisitsMonth
266234    +          +     0.11426625648846 * S_RFMstat  +    -0.46845377036873 *
266235    +        S_RMntFrq  +     1.39805990084367 * S_Recency
266236    +          +     0.91325795567367 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.49268542152723 * S_AcceptedCmpTotal + -0.0481397514569 * S_Age 
+ -0.30437636824683 * S_Frq + -1.15179334457144 * S_Income + 0.52341833722719 * S_Kidhome + 
-0.21261714885662 * S_Mnt + -0.10196325382831 * S_MntFishProducts + 0.18788251887399 * 
S_MntFruits + 0.07877248271808 * S_MntGoldProds + -0.3554186123772 * S_MntMeatProducts + 
0.26810834903306 * S_MntSweetProducts + 0.7572736068799 * S_MntWines + -0.11619352540399 * 
S_MonthsAsCustomer + -0.46080176244829 * S_NumCatalogPurchases + -0.07601319156416 * 
S_NumDealsPurchases + -0.37691059923172 * S_NumDistPurchases + 0.14479416923691 * 
S_NumStorePurchases + 0.22886116861382 * S_NumWebPurchases + -1.05452266604504 * 
S_NumWebVisitsMonth + 0.11426625648846 * S_RFMstat + -0.46845377036873 * S_RMntFrq + 
1.39805990084367 * S_Recency + 0.91325795567367 * S_Teenhome ;
266237    +   H12  =     0.48640474281615 * S_AcceptedCmpTotal  +     0.03168788563965 *
266238    +        S_Age  +    -0.02802128226737 * S_Frq  +     0.52993214073901 *
266239    +        S_Income  +     0.24958351789577 * S_Kidhome
266240    +          +     0.25221072579725 * S_Mnt  +    -0.54431466149526 *
266241    +        S_MntFishProducts  +    -0.09969634201392 * S_MntFruits
266242    +          +     0.22251888175317 * S_MntGoldProds  +     2.21720479300716 *
266243    +        S_MntMeatProducts  +     0.08411214394291 * S_MntSweetProducts
266244    +          +    -0.83482542959891 * S_MntWines  +     0.06928323386075 *
266245    +        S_MonthsAsCustomer  +     1.61603076533547 * S_NumCatalogPurchases
266246    +          +     0.79919814392328 * S_NumDealsPurchases
266247    +          +     0.30394718497487 * S_NumDistPurchases
266248    +          +      -0.727130739278 * S_NumStorePurchases
266249    +          +    -0.92337052372179 * S_NumWebPurchases
266250    +          +     0.22125703025242 * S_NumWebVisitsMonth
266251    +          +     0.51615035692083 * S_RFMstat  +     0.09759485646525 *
266252    +        S_RMntFrq  +    -0.21632393786918 * S_Recency
266253    +          +    -0.09817720742254 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.48640474281615 * S_AcceptedCmpTotal + 0.03168788563965 * S_Age + 
-0.02802128226737 * S_Frq + 0.52993214073901 * S_Income + 0.24958351789577 * S_Kidhome + 
0.25221072579725 * S_Mnt + -0.54431466149526 * S_MntFishProducts + -0.09969634201392 * 
S_MntFruits + 0.22251888175317 * S_MntGoldProds + 2.21720479300716 * S_MntMeatProducts + 
0.08411214394291 * S_MntSweetProducts + -0.83482542959891 * S_MntWines + 0.06928323386075 * 
S_MonthsAsCustomer + 1.61603076533547 * S_NumCatalogPurchases + 0.79919814392328 * 
S_NumDealsPurchases + 0.30394718497487 * S_NumDistPurchases + -0.727130739278 * 
S_NumStorePurchases + -0.92337052372179 * S_NumWebPurchases + 0.22125703025242 * 
S_NumWebVisitsMonth + 0.51615035692083 * S_RFMstat + 0.09759485646525 * S_RMntFrq + 
-0.21632393786918 * S_Recency + -0.09817720742254 * S_Teenhome ;
266254    +   H13  =    -0.14277955421105 * S_AcceptedCmpTotal  +     0.01891543541262 *
266255    +        S_Age  +    -0.09449326498218 * S_Frq  +    -0.03060296052615 *
266256    +        S_Income  +    -0.02210730279852 * S_Kidhome
266257    +          +     0.15705631910101 * S_Mnt  +     0.08573647183827 *
266258    +        S_MntFishProducts  +    -0.07727594473101 * S_MntFruits
266259    +          +     0.10800565745981 * S_MntGoldProds  +     0.16136844354024 *
266260    +        S_MntMeatProducts  +    -0.27592138838926 * S_MntSweetProducts
266261    +          +    -0.28884862043521 * S_MntWines  +    -0.26221449264568 *
266262    +        S_MonthsAsCustomer  +    -0.12893818317268 * S_NumCatalogPurchases
266263    +          +    -0.07260787713046 * S_NumDealsPurchases
266264    +          +    -0.11357594278299 * S_NumDistPurchases
266265    +          +    -0.12187788759653 * S_NumStorePurchases
266266    +          +    -0.12854188822638 * S_NumWebPurchases
266267    +          +     0.19328484993193 * S_NumWebVisitsMonth
266268    +          +     0.29126701299369 * S_RFMstat  +       0.295572030551 *
266269    +        S_RMntFrq  +    -0.17474693596234 * S_Recency
266270    +          +    -0.15767296223747 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.14277955421105 * S_AcceptedCmpTotal + 0.01891543541262 * S_Age 
+ -0.09449326498218 * S_Frq + -0.03060296052615 * S_Income + -0.02210730279852 * S_Kidhome + 
0.15705631910101 * S_Mnt + 0.08573647183827 * S_MntFishProducts + -0.07727594473101 * 
S_MntFruits + 0.10800565745981 * S_MntGoldProds + 0.16136844354024 * S_MntMeatProducts + 
-0.27592138838926 * S_MntSweetProducts + -0.28884862043521 * S_MntWines + -0.26221449264568 * 
S_MonthsAsCustomer + -0.12893818317268 * S_NumCatalogPurchases + -0.07260787713046 * 
S_NumDealsPurchases + -0.11357594278299 * S_NumDistPurchases + -0.12187788759653 * 
S_NumStorePurchases + -0.12854188822638 * S_NumWebPurchases + 0.19328484993193 * 
S_NumWebVisitsMonth + 0.29126701299369 * S_RFMstat + 0.295572030551 * S_RMntFrq + 
-0.17474693596234 * S_Recency + -0.15767296223747 * S_Teenhome ;
266271    +   H14  =     0.02882140654096 * S_AcceptedCmpTotal  +     0.22754549790851 *
266272    +        S_Age  +     0.62237954814905 * S_Frq  +     0.32094678094502 *
266273    +        S_Income  +     -0.5159289111115 * S_Kidhome
266274    +          +    -0.06660708376246 * S_Mnt  +     0.23505454155784 *
266275    +        S_MntFishProducts  +     -0.1751094914934 * S_MntFruits
266276    +          +     0.28529181082906 * S_MntGoldProds  +    -0.86064239437512 *
266277    +        S_MntMeatProducts  +    -0.11869244038768 * S_MntSweetProducts
266278    +          +     0.54178192135459 * S_MntWines  +     0.01320164526542 *
266279    +        S_MonthsAsCustomer  +     -0.8775343676818 * S_NumCatalogPurchases
266280    +          +    -0.76643907891635 * S_NumDealsPurchases
266281    +          +     0.28173289049322 * S_NumDistPurchases
266282    +          +     0.65522454520442 * S_NumStorePurchases
266283    +          +     0.68112901460293 * S_NumWebPurchases
266284    +          +    -0.49101731268641 * S_NumWebVisitsMonth
266285    +          +    -0.19434806570231 * S_RFMstat  +    -0.00086194515061 *
266286    +        S_RMntFrq  +     0.47432332222746 * S_Recency
266287    +          +    -0.05016870847242 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 0.02882140654096 * S_AcceptedCmpTotal + 0.22754549790851 * S_Age + 
0.62237954814905 * S_Frq + 0.32094678094502 * S_Income + -0.5159289111115 * S_Kidhome + 
-0.06660708376246 * S_Mnt + 0.23505454155784 * S_MntFishProducts + -0.1751094914934 * 
S_MntFruits + 0.28529181082906 * S_MntGoldProds + -0.86064239437512 * S_MntMeatProducts + 
-0.11869244038768 * S_MntSweetProducts + 0.54178192135459 * S_MntWines + 0.01320164526542 * 
S_MonthsAsCustomer + -0.8775343676818 * S_NumCatalogPurchases + -0.76643907891635 * 
S_NumDealsPurchases + 0.28173289049322 * S_NumDistPurchases + 0.65522454520442 * 
S_NumStorePurchases + 0.68112901460293 * S_NumWebPurchases + -0.49101731268641 * 
S_NumWebVisitsMonth + -0.19434806570231 * S_RFMstat + -0.00086194515061 * S_RMntFrq + 
0.47432332222746 * S_Recency + -0.05016870847242 * S_Teenhome ;
266288    +   H15  =    -0.53993167927046 * S_AcceptedCmpTotal  +    -0.01376485869661 *
266289    +        S_Age  +     0.13417021721762 * S_Frq  +    -0.46098316120524 *
266290    +        S_Income  +     0.79883165437194 * S_Kidhome
266291    +          +    -0.08868062204795 * S_Mnt  +     0.27921118443695 *
266292    +        S_MntFishProducts  +     0.07333408727108 * S_MntFruits
266293    +          +    -0.12699517331566 * S_MntGoldProds  +    -0.83076183794341 *
266294    +        S_MntMeatProducts  +     0.07046050445165 * S_MntSweetProducts
266295    +          +     0.39887580122915 * S_MntWines  +     0.22266979348172 *
266296    +        S_MonthsAsCustomer  +    -0.63148593968536 * S_NumCatalogPurchases
266297    +          +    -0.54240596184474 * S_NumDealsPurchases
266298    +          +     0.07214067132859 * S_NumDistPurchases
266299    +          +     0.63136920851698 * S_NumStorePurchases
266300    +          +     0.67036298761526 * S_NumWebPurchases
266301    +          +     -1.5590147163003 * S_NumWebVisitsMonth
266302    +          +    -0.14672746638498 * S_RFMstat  +     0.45614757001513 *
266303    +        S_RMntFrq  +     1.43166375146019 * S_Recency
266304    +          +     0.33608033306213 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = -0.53993167927046 * S_AcceptedCmpTotal + -0.01376485869661 * S_Age 
+ 0.13417021721762 * S_Frq + -0.46098316120524 * S_Income + 0.79883165437194 * S_Kidhome + 
-0.08868062204795 * S_Mnt + 0.27921118443695 * S_MntFishProducts + 0.07333408727108 * 
S_MntFruits + -0.12699517331566 * S_MntGoldProds + -0.83076183794341 * S_MntMeatProducts + 
0.07046050445165 * S_MntSweetProducts + 0.39887580122915 * S_MntWines + 0.22266979348172 * 
S_MonthsAsCustomer + -0.63148593968536 * S_NumCatalogPurchases + -0.54240596184474 * 
S_NumDealsPurchases + 0.07214067132859 * S_NumDistPurchases + 0.63136920851698 * 
S_NumStorePurchases + 0.67036298761526 * S_NumWebPurchases + -1.5590147163003 * 
S_NumWebVisitsMonth + -0.14672746638498 * S_RFMstat + 0.45614757001513 * S_RMntFrq + 
1.43166375146019 * S_Recency + 0.33608033306213 * S_Teenhome ;
266305    +   H11  = H11  +     0.00378267229722 * AcceptedCmp10
266306    +          +     0.35869089787338 * AcceptedCmp20  +     0.34289379925327 *
266307    +        AcceptedCmp30  +     0.52644241458012 * AcceptedCmp40
266308    +          +    -0.13608418232323 * AcceptedCmp50  +      0.0959964311844 *
266309    +        Complain0  +    -0.33986310453812 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.00378267229722 * AcceptedCmp10 + 0.35869089787338 * 
AcceptedCmp20 + 0.34289379925327 * AcceptedCmp30 + 0.52644241458012 * AcceptedCmp40 + 
-0.13608418232323 * AcceptedCmp50 + 0.0959964311844 * Complain0 + -0.33986310453812 * 
HigherEducationBinary0 ;
266310    +   H12  = H12  +    -0.20844623079893 * AcceptedCmp10
266311    +          +      0.2510523434536 * AcceptedCmp20  +     0.23001544402014 *
266312    +        AcceptedCmp30  +     0.31575100635625 * AcceptedCmp40
266313    +          +    -0.27770609908664 * AcceptedCmp50  +     0.23396693724368 *
266314    +        Complain0  +    -0.14587691179074 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.20844623079893 * AcceptedCmp10 + 0.2510523434536 * 
AcceptedCmp20 + 0.23001544402014 * AcceptedCmp30 + 0.31575100635625 * AcceptedCmp40 + 
-0.27770609908664 * AcceptedCmp50 + 0.23396693724368 * Complain0 + -0.14587691179074 * 
HigherEducationBinary0 ;
266315    +   H13  = H13  +    -0.01749375115567 * AcceptedCmp10
266316    +          +     0.03272810660889 * AcceptedCmp20  +     0.05919744501073 *
266317    +        AcceptedCmp30  +    -0.05281709288559 * AcceptedCmp40
266318    +          +     0.17878522964245 * AcceptedCmp50  +    -0.15875476707826 *
266319    +        Complain0  +     0.12807090869788 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.01749375115567 * AcceptedCmp10 + 0.03272810660889 * 
AcceptedCmp20 + 0.05919744501073 * AcceptedCmp30 + -0.05281709288559 * AcceptedCmp40 + 
0.17878522964245 * AcceptedCmp50 + -0.15875476707826 * Complain0 + 0.12807090869788 * 
HigherEducationBinary0 ;
266320    +   H14  = H14  +     0.09851664636541 * AcceptedCmp10
266321    +          +     0.31377564249189 * AcceptedCmp20  +     0.52269532116349 *
266322    +        AcceptedCmp30  +     0.02591777861146 * AcceptedCmp40
266323    +          +     0.32944924737684 * AcceptedCmp50  +     0.47187246513641 *
266324    +        Complain0  +     0.20705632210077 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.09851664636541 * AcceptedCmp10 + 0.31377564249189 * 
AcceptedCmp20 + 0.52269532116349 * AcceptedCmp30 + 0.02591777861146 * AcceptedCmp40 + 
0.32944924737684 * AcceptedCmp50 + 0.47187246513641 * Complain0 + 0.20705632210077 * 
HigherEducationBinary0 ;
266325    +   H15  = H15  +     0.25267160740134 * AcceptedCmp10
266326    +          +     0.37928521134817 * AcceptedCmp20  +     0.14104403552359 *
266327    +        AcceptedCmp30  +     0.11544762492946 * AcceptedCmp40
266328    +          +     0.50603978517673 * AcceptedCmp50  +    -0.00034162341159 *
266329    +        Complain0  +    -0.00425270701284 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.25267160740134 * AcceptedCmp10 + 0.37928521134817 * 
AcceptedCmp20 + 0.14104403552359 * AcceptedCmp30 + 0.11544762492946 * AcceptedCmp40 + 
0.50603978517673 * AcceptedCmp50 + -0.00034162341159 * Complain0 + -0.00425270701284 * 
HigherEducationBinary0 ;
266330    +   H11  = H11  +     0.21764897070728 * Education2n_Cycle
266331    +          +    -0.08901311303506 * EducationBasic  +      0.0272878010337 *
266332    +        EducationGraduation  +     0.05103320060897 * EducationMaster
266333    +          +    -0.43880138896132 * Marital_StatusDivorced
266334    +          +     1.07801970957052 * Marital_StatusMarried
266335    +          +    -1.01564319756795 * Marital_StatusSingle
266336    +          +     1.06803078970545 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.21764897070728 * Education2n_Cycle + -0.08901311303506 * 
EducationBasic + 0.0272878010337 * EducationGraduation + 0.05103320060897 * EducationMaster + 
-0.43880138896132 * Marital_StatusDivorced + 1.07801970957052 * Marital_StatusMarried + 
-1.01564319756795 * Marital_StatusSingle + 1.06803078970545 * Marital_StatusTogether ;
266337    +   H12  = H12  +     0.20450416319293 * Education2n_Cycle
266338    +          +    -0.09602008725654 * EducationBasic  +     0.01841737017681 *
266339    +        EducationGraduation  +     0.06732737733154 * EducationMaster
266340    +          +    -0.26753605060913 * Marital_StatusDivorced
266341    +          +     0.38107608670301 * Marital_StatusMarried
266342    +          +     -0.1436641790467 * Marital_StatusSingle
266343    +          +     0.51604025961093 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.20450416319293 * Education2n_Cycle + -0.09602008725654 * 
EducationBasic + 0.01841737017681 * EducationGraduation + 0.06732737733154 * EducationMaster + 
-0.26753605060913 * Marital_StatusDivorced + 0.38107608670301 * Marital_StatusMarried + 
-0.1436641790467 * Marital_StatusSingle + 0.51604025961093 * Marital_StatusTogether ;
266344    +   H13  = H13  +     0.06208521737633 * Education2n_Cycle
266345    +          +    -0.33631443686566 * EducationBasic  +     0.16608152113657 *
266346    +        EducationGraduation  +     0.12802026359779 * EducationMaster
266347    +          +    -0.08001329849816 * Marital_StatusDivorced
266348    +          +      0.0371075570789 * Marital_StatusMarried
266349    +          +     0.00370467546319 * Marital_StatusSingle
266350    +          +    -0.00676233309382 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.06208521737633 * Education2n_Cycle + -0.33631443686566 * 
EducationBasic + 0.16608152113657 * EducationGraduation + 0.12802026359779 * EducationMaster + 
-0.08001329849816 * Marital_StatusDivorced + 0.0371075570789 * Marital_StatusMarried + 
0.00370467546319 * Marital_StatusSingle + -0.00676233309382 * Marital_StatusTogether ;
266351    +   H14  = H14  +     0.23121044223136 * Education2n_Cycle
266352    +          +     0.20063897603031 * EducationBasic  +    -0.03690411024016 *
266353    +        EducationGraduation  +    -0.05893576310907 * EducationMaster
266354    +          +     0.13587543683769 * Marital_StatusDivorced
266355    +          +    -0.45903453868087 * Marital_StatusMarried
266356    +          +      0.3498299821692 * Marital_StatusSingle
266357    +          +    -0.24987552246214 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.23121044223136 * Education2n_Cycle + 0.20063897603031 * 
EducationBasic + -0.03690411024016 * EducationGraduation + -0.05893576310907 * EducationMaster 
+ 0.13587543683769 * Marital_StatusDivorced + -0.45903453868087 * Marital_StatusMarried + 
0.3498299821692 * Marital_StatusSingle + -0.24987552246214 * Marital_StatusTogether ;
266358    +   H15  = H15  +    -0.25453618071143 * Education2n_Cycle
266359    +          +     0.10531942203707 * EducationBasic  +    -0.11067812258079 *
266360    +        EducationGraduation  +     0.22861584696672 * EducationMaster
266361    +          +    -0.23512394203797 * Marital_StatusDivorced
266362    +          +       0.710701930681 * Marital_StatusMarried
266363    +          +    -0.56116525410203 * Marital_StatusSingle
266364    +          +     0.87274230285244 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.25453618071143 * Education2n_Cycle + 0.10531942203707 * 
EducationBasic + -0.11067812258079 * EducationGraduation + 0.22861584696672 * EducationMaster 
+ -0.23512394203797 * Marital_StatusDivorced + 0.710701930681 * Marital_StatusMarried + 
-0.56116525410203 * Marital_StatusSingle + 0.87274230285244 * Marital_StatusTogether ;
266365    +   H11  =     1.97354382834855 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 1.97354382834855 + H11 ;
266366    +   H12  =     0.19040674177137 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.19040674177137 + H12 ;
266367    +   H13  =    -2.95812486901971 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -2.95812486901971 + H13 ;
266368    +   H14  =     0.68206105329025 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.68206105329025 + H14 ;
266369    +   H15  =    -0.15880184648294 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -0.15880184648294 + H15 ;
266370    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
266371    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
266372    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
266373    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
266374    +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
266375    +END;
MPRINT(EM_DIAGRAM):   END;
266376    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
266377    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
266378    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
266379    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
266380    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
266381    +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
266382    +END;
MPRINT(EM_DIAGRAM):   END;
266383    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
266384    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
266385    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
266386    +
266387    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
266388    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
266389    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
266390    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
266391    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
266392    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
266393    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
266394    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
266395    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
266396    +end;
MPRINT(EM_DIAGRAM):   end;
266397    +else do;
MPRINT(EM_DIAGRAM):   else do;
266398    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
266399    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
266400    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
266401    +   end;
MPRINT(EM_DIAGRAM):   end;
266402    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
266403    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
266404    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
266405    +   end;
MPRINT(EM_DIAGRAM):   end;
266406    +   else do;
MPRINT(EM_DIAGRAM):   else do;
266407    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
266408    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
266409    +   end;
MPRINT(EM_DIAGRAM):   end;
266410    +end;
MPRINT(EM_DIAGRAM):   end;
266411    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
266412    +   P_DepVar1  =    -3.25756779032103 * H11  +     3.11613473869222 * H12
266413    +          +     0.05860782492357 * H13  +    -2.24562119342825 * H14
266414    +          +    -3.55426417229617 * H15 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.25756779032103 * H11 + 3.11613473869222 * H12 + 
0.05860782492357 * H13 + -2.24562119342825 * H14 + -3.55426417229617 * H15 ;
266415    +   P_DepVar1  =    -1.11502795304759 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.11502795304759 + P_DepVar1 ;
266416    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
266417    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
266418    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
266419    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
266420    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
266421    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
266422    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
266423    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
266424    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
266425    +END;
MPRINT(EM_DIAGRAM):   END;
266426    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
266427    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
266428    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
266429    +END;
MPRINT(EM_DIAGRAM):   END;
266430    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
266431    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
266432    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
266433    +END;
MPRINT(EM_DIAGRAM):   END;
266434    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
266435    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
266436    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
266437    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
266438    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
266439    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
266440    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
266441    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
266442    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
266443    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
266444    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
266445    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
266446    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
266447    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
266448    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
266449    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
266450    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
266451    +END;
MPRINT(EM_DIAGRAM):   END;
266452    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
266453    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
266454    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
266455    +drop
266456    +H11
266457    +H12
266458    +H13
266459    +H14
266460    +H15
266461    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 ;
266462    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
266463     run;

NOTE: DATA STEP view saved on file EMWS8.NEURAL7_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.META_VALIDATE.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_DIAGRAM):   quit;
266464     quit;
266465     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
266466     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
266467     * Neural7: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Neural7: Computing metadata for TRAIN data;
266468     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS8.NEURAL7_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural7\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.Neural7_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.Neural7_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.Neural7_TRAIN out=WORK.M3OLB1LO noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3OLB1LO;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M3OLB1LO(keep=name type length label format formatl 
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = 
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3OLB1LO;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M3OLB1LO;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M12RRBHM NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M12RRBHM;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M12RRBHM;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M36YRXPH(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M12RRBHM;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M12RRBHM;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M12RRBHM;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = 
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) 
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" 
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then 
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ 
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M12RRBHM;
MPRINT(EMADVISECOLUMNS):   set WORK.M12RRBHM;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Meta_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Meta_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural7_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT 
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Neural7";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "Neural7";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "Neural7";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "Neural7";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "Neural7";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "Neural7";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "Neural7";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "Neural7";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "Neural7";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "Neural7";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural7: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
266780     data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
266781     set EMWS8.Neural7_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural7_EMINFO;
266782     where DATA='Neural7' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='Neural7' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 
'MODEL');
266783     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.NEURAL7_EMINFO.
      WHERE (DATA='Neural7') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

266784     data EMWS8.Neural7_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.Neural7_EMINFO;
266785     length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
266786     input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
266787     cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS8.NEURAL7_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   run;
266791     run;
266792     data EMWS8.Neural7_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural7_EMINFO;
266793     set EMWS8.Neural7_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural7_EMINFO WORK.MODELTEMP_INFO;
266794     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.NEURAL7_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.NEURAL7_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

266795     proc sort data = EMWS8.Neural7_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Neural7_EMINFO NOTHREADS;
266796     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
266797     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.NEURAL7_EMINFO.
NOTE: The data set EMWS8.NEURAL7_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

266798     proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
266799     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
266800     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS8.FIMPORT_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

266801     proc sort data = EMWS8.Neural7_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.Neural7_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
266802     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
266803     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.NEURAL7_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

266804     data EMWS8.Neural7_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural7_EMINFO;
266805     merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
266806     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
266807     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.NEURAL7_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

266808     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
266809     delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
266810     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
266811     quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

NOTE: View EMWS8.NEURAL7_TRAIN.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
      
NOTE: View EMWS8.NEURAL7_VALIDATE.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
