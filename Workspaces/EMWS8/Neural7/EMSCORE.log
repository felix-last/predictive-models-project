MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "16. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "20.11 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                16. April 2016
Time:                20.11 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O1HAT3TM 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural7\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O1HAT3TM new;
MPRINT(EM_DIAGRAM):   run;
173944     data work.outkey;
MPRINT(EM_DIAGRAM):    data work.outkey;
173945     set EMWS8.Neural7_OUTKEY;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural7_OUTKEY;
173946     if upcase(ROLE) = 'HIDDEN';
MPRINT(EM_DIAGRAM):   if upcase(ROLE) = 'HIDDEN';
173947     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 46 observations read from the data set EMWS8.NEURAL7_OUTKEY.
NOTE: The data set WORK.OUTKEY has 5 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

173948     filename emflow
173948   ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural7\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural7\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural7: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
173949     *------------------------------------------------------------*;
173950     * Neural7: Scoring DATA data;
173951     *------------------------------------------------------------*;
173952     data EMWS8.Neural7_TRAIN
173953     / view=EMWS8.Neural7_TRAIN
173954     ;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural7_TRAIN / view=EMWS8.Neural7_TRAIN ;
173955     set EMWS8.Meta_TRAIN
173956     ;
MPRINT(EM_DIAGRAM):   set EMWS8.Meta_TRAIN ;
173957     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural7\EMFLOWSCORE.sas.
173958    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
173959    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
173960    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
173961    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
173962    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
173963    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
173964    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
173965    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
173966    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
173967    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
173968    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
173969    +LENGTH _WARN_ $4
173970    +      F_DepVar  $ 12
173971    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
173972    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
173973    +
173974    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
173975    +
173976    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
173977    +
173978    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
173979    +
173980    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
173981    +
173982    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
173983    +
173984    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
173985    +
173986    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
173987    +
173988    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
173989    +
173990    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
173991    +
173992    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
173993    +
173994    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
173995    +
173996    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
173997    +
173998    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
173999    +
174000    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
174001    +
174002    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
174003    +
174004    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
174005    +
174006    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
174007    +
174008    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
174009    +
174010    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
174011    +
174012    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
174013    +
174014    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
174015    +
174016    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
174017    +
174018    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
174019    +
174020    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
174021    +
174022    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
174023    +
174024    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
174025    +
174026    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
174027    +
174028    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
174029    +
174030    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
174031    +
174032    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
174033    +
174034    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
174035    +
174036    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
174037    +
174038    +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
174039    +
174040    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
174041    +
174042    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
174043    +
174044    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
174045    +
174046    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
174047    +
174048    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
174049    +
174050    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
174051    +
174052    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
174053    +
174054    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
174055    +
174056    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
174057    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
174058    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
174059    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
174060    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
174061    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
174062    +end;
MPRINT(EM_DIAGRAM):   end;
174063    +else do;
MPRINT(EM_DIAGRAM):   else do;
174064    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
174065    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
174066    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
174067    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
174068    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
174069    +   end;
MPRINT(EM_DIAGRAM):   end;
174070    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
174071    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
174072    +   end;
MPRINT(EM_DIAGRAM):   end;
174073    +   else do;
MPRINT(EM_DIAGRAM):   else do;
174074    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
174075    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
174076    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
174077    +   end;
MPRINT(EM_DIAGRAM):   end;
174078    +end;
MPRINT(EM_DIAGRAM):   end;
174079    +
174080    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
174081    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
174082    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
174083    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
174084    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
174085    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
174086    +end;
MPRINT(EM_DIAGRAM):   end;
174087    +else do;
MPRINT(EM_DIAGRAM):   else do;
174088    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
174089    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
174090    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
174091    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
174092    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
174093    +   end;
MPRINT(EM_DIAGRAM):   end;
174094    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
174095    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
174096    +   end;
MPRINT(EM_DIAGRAM):   end;
174097    +   else do;
MPRINT(EM_DIAGRAM):   else do;
174098    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
174099    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
174100    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
174101    +   end;
MPRINT(EM_DIAGRAM):   end;
174102    +end;
MPRINT(EM_DIAGRAM):   end;
174103    +
174104    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
174105    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
174106    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
174107    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
174108    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
174109    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
174110    +end;
MPRINT(EM_DIAGRAM):   end;
174111    +else do;
MPRINT(EM_DIAGRAM):   else do;
174112    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
174113    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
174114    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
174115    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
174116    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
174117    +   end;
MPRINT(EM_DIAGRAM):   end;
174118    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
174119    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
174120    +   end;
MPRINT(EM_DIAGRAM):   end;
174121    +   else do;
MPRINT(EM_DIAGRAM):   else do;
174122    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
174123    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
174124    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
174125    +   end;
MPRINT(EM_DIAGRAM):   end;
174126    +end;
MPRINT(EM_DIAGRAM):   end;
174127    +
174128    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
174129    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
174130    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
174131    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
174132    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
174133    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
174134    +end;
MPRINT(EM_DIAGRAM):   end;
174135    +else do;
MPRINT(EM_DIAGRAM):   else do;
174136    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
174137    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
174138    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
174139    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
174140    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
174141    +   end;
MPRINT(EM_DIAGRAM):   end;
174142    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
174143    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
174144    +   end;
MPRINT(EM_DIAGRAM):   end;
174145    +   else do;
MPRINT(EM_DIAGRAM):   else do;
174146    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
174147    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
174148    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
174149    +   end;
MPRINT(EM_DIAGRAM):   end;
174150    +end;
MPRINT(EM_DIAGRAM):   end;
174151    +
174152    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
174153    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
174154    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
174155    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
174156    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
174157    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
174158    +end;
MPRINT(EM_DIAGRAM):   end;
174159    +else do;
MPRINT(EM_DIAGRAM):   else do;
174160    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
174161    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
174162    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
174163    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
174164    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
174165    +   end;
MPRINT(EM_DIAGRAM):   end;
174166    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
174167    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
174168    +   end;
MPRINT(EM_DIAGRAM):   end;
174169    +   else do;
MPRINT(EM_DIAGRAM):   else do;
174170    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
174171    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
174172    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
174173    +   end;
MPRINT(EM_DIAGRAM):   end;
174174    +end;
MPRINT(EM_DIAGRAM):   end;
174175    +
174176    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
174177    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
174178    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
174179    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
174180    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
174181    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
174182    +end;
MPRINT(EM_DIAGRAM):   end;
174183    +else do;
MPRINT(EM_DIAGRAM):   else do;
174184    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
174185    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
174186    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
174187    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
174188    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
174189    +   end;
MPRINT(EM_DIAGRAM):   end;
174190    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
174191    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
174192    +   end;
MPRINT(EM_DIAGRAM):   end;
174193    +   else do;
MPRINT(EM_DIAGRAM):   else do;
174194    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
174195    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
174196    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
174197    +   end;
MPRINT(EM_DIAGRAM):   end;
174198    +end;
MPRINT(EM_DIAGRAM):   end;
174199    +
174200    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
174201    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
174202    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
174203    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
174204    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
174205    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
174206    +end;
MPRINT(EM_DIAGRAM):   end;
174207    +else do;
MPRINT(EM_DIAGRAM):   else do;
174208    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
174209    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
174210    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
174211    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
174212    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
174213    +   end;
MPRINT(EM_DIAGRAM):   end;
174214    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
174215    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
174216    +   end;
MPRINT(EM_DIAGRAM):   end;
174217    +   else do;
MPRINT(EM_DIAGRAM):   else do;
174218    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
174219    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
174220    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
174221    +   end;
MPRINT(EM_DIAGRAM):   end;
174222    +end;
MPRINT(EM_DIAGRAM):   end;
174223    +
174224    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
174225    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
174226    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
174227    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
174228    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
174229    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
174230    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
174231    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
174232    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
174233    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
174234    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
174235    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
174236    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
174237    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
174238    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
174239    +end;
MPRINT(EM_DIAGRAM):   end;
174240    +else do;
MPRINT(EM_DIAGRAM):   else do;
174241    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
174242    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
174243    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
174244    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
174245    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
174246    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
174247    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
174248    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
174249    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
174250    +         end;
MPRINT(EM_DIAGRAM):   end;
174251    +         else do;
MPRINT(EM_DIAGRAM):   else do;
174252    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
174253    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
174254    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
174255    +            end;
MPRINT(EM_DIAGRAM):   end;
174256    +         end;
MPRINT(EM_DIAGRAM):   end;
174257    +      end;
MPRINT(EM_DIAGRAM):   end;
174258    +      else do;
MPRINT(EM_DIAGRAM):   else do;
174259    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
174260    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
174261    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
174262    +         end;
MPRINT(EM_DIAGRAM):   end;
174263    +      end;
MPRINT(EM_DIAGRAM):   end;
174264    +   end;
MPRINT(EM_DIAGRAM):   end;
174265    +   else do;
MPRINT(EM_DIAGRAM):   else do;
174266    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
174267    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
174268    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
174269    +      end;
MPRINT(EM_DIAGRAM):   end;
174270    +      else do;
MPRINT(EM_DIAGRAM):   else do;
174271    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
174272    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
174273    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
174274    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
174275    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
174276    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
174277    +         end;
MPRINT(EM_DIAGRAM):   end;
174278    +      end;
MPRINT(EM_DIAGRAM):   end;
174279    +   end;
MPRINT(EM_DIAGRAM):   end;
174280    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
174281    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
174282    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
174283    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
174284    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
174285    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
174286    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
174287    +   end;
MPRINT(EM_DIAGRAM):   end;
174288    +end;
MPRINT(EM_DIAGRAM):   end;
174289    +
174290    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
174291    +*** Checking missing input Interval
174292    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
174293    +
174294    +IF NMISS(
174295    +   AcceptedCmpTotal ,
174296    +   Kidhome ,
174297    +   Mnt ,
174298    +   MntFishProducts ,
174299    +   MntFruits ,
174300    +   MntGoldProds ,
174301    +   MntMeatProducts ,
174302    +   MntSweetProducts ,
174303    +   MntWines ,
174304    +   NumCatalogPurchases ,
174305    +   NumDealsPurchases ,
174306    +   NumDistPurchases ,
174307    +   NumStorePurchases ,
174308    +   NumWebPurchases ,
174309    +   NumWebVisitsMonth ,
174310    +   RFMstat ,
174311    +   Recency ,
174312    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Kidhome , Mnt , MntFishProducts , MntFruits 
, MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , 
NumDealsPurchases , NumDistPurchases , NumStorePurchases , NumWebPurchases , NumWebVisitsMonth 
, RFMstat , Recency , Teenhome ) THEN DO;
174313    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
174314    +
174315    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
174316    +END;
MPRINT(EM_DIAGRAM):   END;
174317    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
174318    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
174319    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
174320    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
174321    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
174322    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
174323    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
174324    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
174325    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
174326    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
174327    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
174328    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
174329    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
174330    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
174331    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
174332    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
174333    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
174334    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
174335    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
174336    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
174337    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
174338    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
174339    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
174340    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
174341    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
174342    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
174343    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
174344    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
174345    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
174346    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
174347    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
174348    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
174349    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
174350    +END;
MPRINT(EM_DIAGRAM):   END;
174351    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
174352    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
174353    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
174354    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
174355    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
174356    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
174357    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
174358    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
174359    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
174360    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
174361    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
174362    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
174363    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
174364    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
174365    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
174366    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
174367    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
174368    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
174369    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
174370    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
174371    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
174372    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
174373    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
174374    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
174375    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
174376    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
174377    +   ELSE S_NumCatalogPurchases
174378    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
174379    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
174380    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
174381    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
174382    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
174383    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
174384    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
174385    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
174386    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
174387    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
174388    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
174389    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
174390    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
174391    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
174392    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
174393    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
174394    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
174395    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
174396    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
174397    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
174398    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
174399    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
174400    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
174401    +END;
MPRINT(EM_DIAGRAM):   END;
174402    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
174403    +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
174404    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
174405    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
174406    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
174407    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
174408    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
174409    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
174410    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
174411    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
174412    +   H11  =    -0.31336975179768 * S_AcceptedCmpTotal  +     0.55217606948262 *
174413    +        S_Kidhome  +     0.30934248519275 * S_Mnt  +     0.21704081651602 *
174414    +        S_MntFishProducts  +      0.0286842970037 * S_MntFruits
174415    +          +     -0.0428936614026 * S_MntGoldProds  +     0.04106839234795 *
174416    +        S_MntMeatProducts  +     -0.2219223463878 * S_MntSweetProducts
174417    +          +     0.07714161131062 * S_MntWines  +    -0.47043004421243 *
174418    +        S_NumCatalogPurchases  +    -0.34552756945236 * S_NumDealsPurchases
174419    +          +    -0.08565162229542 * S_NumDistPurchases
174420    +          +      0.2498966077742 * S_NumStorePurchases
174421    +          +    -0.03810974523517 * S_NumWebPurchases
174422    +          +     0.50983692369041 * S_NumWebVisitsMonth
174423    +          +     0.08815778320903 * S_RFMstat  +     0.09119895780804 *
174424    +        S_Recency  +     0.13511958264343 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.31336975179768 * S_AcceptedCmpTotal + 0.55217606948262 * 
S_Kidhome + 0.30934248519275 * S_Mnt + 0.21704081651602 * S_MntFishProducts + 0.0286842970037 
* S_MntFruits + -0.0428936614026 * S_MntGoldProds + 0.04106839234795 * S_MntMeatProducts + 
-0.2219223463878 * S_MntSweetProducts + 0.07714161131062 * S_MntWines + -0.47043004421243 * 
S_NumCatalogPurchases + -0.34552756945236 * S_NumDealsPurchases + -0.08565162229542 * 
S_NumDistPurchases + 0.2498966077742 * S_NumStorePurchases + -0.03810974523517 * 
S_NumWebPurchases + 0.50983692369041 * S_NumWebVisitsMonth + 0.08815778320903 * S_RFMstat + 
0.09119895780804 * S_Recency + 0.13511958264343 * S_Teenhome ;
174425    +   H12  =    -0.24937709830237 * S_AcceptedCmpTotal  +    -0.24749428309219 *
174426    +        S_Kidhome  +    -0.12930178120586 * S_Mnt  +     0.13546025995573 *
174427    +        S_MntFishProducts  +     0.28360186554431 * S_MntFruits
174428    +          +    -0.05241802314535 * S_MntGoldProds  +    -0.66941662270923 *
174429    +        S_MntMeatProducts  +     0.15336628351126 * S_MntSweetProducts
174430    +          +      0.4032078630799 * S_MntWines  +    -0.56890394617047 *
174431    +        S_NumCatalogPurchases  +    -0.64950384504567 * S_NumDealsPurchases
174432    +          +     0.23154666595931 * S_NumDistPurchases
174433    +          +     0.54534387610808 * S_NumStorePurchases
174434    +          +     0.41139490970672 * S_NumWebPurchases
174435    +          +    -0.55413387763351 * S_NumWebVisitsMonth
174436    +          +    -0.26075003734578 * S_RFMstat  +     0.49052010543197 *
174437    +        S_Recency  +     -0.0404801860777 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.24937709830237 * S_AcceptedCmpTotal + -0.24749428309219 * 
S_Kidhome + -0.12930178120586 * S_Mnt + 0.13546025995573 * S_MntFishProducts + 
0.28360186554431 * S_MntFruits + -0.05241802314535 * S_MntGoldProds + -0.66941662270923 * 
S_MntMeatProducts + 0.15336628351126 * S_MntSweetProducts + 0.4032078630799 * S_MntWines + 
-0.56890394617047 * S_NumCatalogPurchases + -0.64950384504567 * S_NumDealsPurchases + 
0.23154666595931 * S_NumDistPurchases + 0.54534387610808 * S_NumStorePurchases + 
0.41139490970672 * S_NumWebPurchases + -0.55413387763351 * S_NumWebVisitsMonth + 
-0.26075003734578 * S_RFMstat + 0.49052010543197 * S_Recency + -0.0404801860777 * S_Teenhome ;
174438    +   H13  =     0.21315421089843 * S_AcceptedCmpTotal  +    -0.40934954273162 *
174439    +        S_Kidhome  +    -0.14257980270562 * S_Mnt  +    -0.02326723710858 *
174440    +        S_MntFishProducts  +     0.03093571619826 * S_MntFruits
174441    +          +    -0.09540637054036 * S_MntGoldProds  +       0.216562837751 *
174442    +        S_MntMeatProducts  +    -0.06578520743957 * S_MntSweetProducts
174443    +          +    -0.45983147514787 * S_MntWines  +     0.28991677967619 *
174444    +        S_NumCatalogPurchases  +     -0.0581811780876 * S_NumDealsPurchases
174445    +          +     0.05120135471729 * S_NumDistPurchases
174446    +          +    -0.26556926910649 * S_NumStorePurchases
174447    +          +    -0.44351155109785 * S_NumWebPurchases
174448    +          +     0.88609841670248 * S_NumWebVisitsMonth
174449    +          +    -0.05355058809893 * S_RFMstat  +    -0.73370046845716 *
174450    +        S_Recency  +    -0.20220070524982 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = 0.21315421089843 * S_AcceptedCmpTotal + -0.40934954273162 * 
S_Kidhome + -0.14257980270562 * S_Mnt + -0.02326723710858 * S_MntFishProducts + 
0.03093571619826 * S_MntFruits + -0.09540637054036 * S_MntGoldProds + 0.216562837751 * 
S_MntMeatProducts + -0.06578520743957 * S_MntSweetProducts + -0.45983147514787 * S_MntWines + 
0.28991677967619 * S_NumCatalogPurchases + -0.0581811780876 * S_NumDealsPurchases + 
0.05120135471729 * S_NumDistPurchases + -0.26556926910649 * S_NumStorePurchases + 
-0.44351155109785 * S_NumWebPurchases + 0.88609841670248 * S_NumWebVisitsMonth + 
-0.05355058809893 * S_RFMstat + -0.73370046845716 * S_Recency + -0.20220070524982 * S_Teenhome 
;
174451    +   H14  =     0.39698224199543 * S_AcceptedCmpTotal  +    -0.20120366596375 *
174452    +        S_Kidhome  +      0.3167228298887 * S_Mnt  +     0.01157053818495 *
174453    +        S_MntFishProducts  +    -0.01328592356982 * S_MntFruits
174454    +          +     0.00886948034365 * S_MntGoldProds  +     1.21666314524043 *
174455    +        S_MntMeatProducts  +    -0.09283019720022 * S_MntSweetProducts
174456    +          +    -0.09586722258183 * S_MntWines  +    -0.01785512232978 *
174457    +        S_NumCatalogPurchases  +    -0.21291958246407 * S_NumDealsPurchases
174458    +          +     0.39404855135103 * S_NumDistPurchases
174459    +          +    -0.07248752877179 * S_NumStorePurchases
174460    +          +    -0.10123700375349 * S_NumWebPurchases
174461    +          +     0.42450276314027 * S_NumWebVisitsMonth
174462    +          +     0.24279716857154 * S_RFMstat  +    -0.58955338934321 *
174463    +        S_Recency  +    -0.30629869350731 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 0.39698224199543 * S_AcceptedCmpTotal + -0.20120366596375 * 
S_Kidhome + 0.3167228298887 * S_Mnt + 0.01157053818495 * S_MntFishProducts + -0.01328592356982 
* S_MntFruits + 0.00886948034365 * S_MntGoldProds + 1.21666314524043 * S_MntMeatProducts + 
-0.09283019720022 * S_MntSweetProducts + -0.09586722258183 * S_MntWines + -0.01785512232978 * 
S_NumCatalogPurchases + -0.21291958246407 * S_NumDealsPurchases + 0.39404855135103 * 
S_NumDistPurchases + -0.07248752877179 * S_NumStorePurchases + -0.10123700375349 * 
S_NumWebPurchases + 0.42450276314027 * S_NumWebVisitsMonth + 0.24279716857154 * S_RFMstat + 
-0.58955338934321 * S_Recency + -0.30629869350731 * S_Teenhome ;
174464    +   H15  =     0.30758619083232 * S_AcceptedCmpTotal  +     -0.0124289721914 *
174465    +        S_Kidhome  +    -0.05376010749039 * S_Mnt  +    -0.00466013129163 *
174466    +        S_MntFishProducts  +     -0.0128351925647 * S_MntFruits
174467    +          +       0.418369814853 * S_MntGoldProds  +    -0.44302877451838 *
174468    +        S_MntMeatProducts  +     0.10514229364725 * S_MntSweetProducts
174469    +          +     0.34164846881132 * S_MntWines  +    -0.02137843790281 *
174470    +        S_NumCatalogPurchases  +     -0.0656649517507 * S_NumDealsPurchases
174471    +          +     0.27175946433967 * S_NumDistPurchases
174472    +          +     0.16942067472984 * S_NumStorePurchases
174473    +          +     0.16250565660711 * S_NumWebPurchases
174474    +          +    -0.20203561703211 * S_NumWebVisitsMonth
174475    +          +     0.14491189794214 * S_RFMstat  +    -0.22675112064568 *
174476    +        S_Recency  +      0.1811664309815 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = 0.30758619083232 * S_AcceptedCmpTotal + -0.0124289721914 * 
S_Kidhome + -0.05376010749039 * S_Mnt + -0.00466013129163 * S_MntFishProducts + 
-0.0128351925647 * S_MntFruits + 0.418369814853 * S_MntGoldProds + -0.44302877451838 * 
S_MntMeatProducts + 0.10514229364725 * S_MntSweetProducts + 0.34164846881132 * S_MntWines + 
-0.02137843790281 * S_NumCatalogPurchases + -0.0656649517507 * S_NumDealsPurchases + 
0.27175946433967 * S_NumDistPurchases + 0.16942067472984 * S_NumStorePurchases + 
0.16250565660711 * S_NumWebPurchases + -0.20203561703211 * S_NumWebVisitsMonth + 
0.14491189794214 * S_RFMstat + -0.22675112064568 * S_Recency + 0.1811664309815 * S_Teenhome ;
174477    +   H11  = H11  +    -0.26538416697651 * AcceptedCmp10
174478    +          +    -0.28983118331232 * AcceptedCmp20  +    -0.32322818178704 *
174479    +        AcceptedCmp30  +    -0.03993661807643 * AcceptedCmp40
174480    +          +     0.06994002730973 * AcceptedCmp50  +    -0.07716774247605 *
174481    +        Complain0  +      0.2585392734779 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.26538416697651 * AcceptedCmp10 + -0.28983118331232 * 
AcceptedCmp20 + -0.32322818178704 * AcceptedCmp30 + -0.03993661807643 * AcceptedCmp40 + 
0.06994002730973 * AcceptedCmp50 + -0.07716774247605 * Complain0 + 0.2585392734779 * 
HigherEducationBinary0 ;
174482    +   H12  = H12  +     0.26018307810736 * AcceptedCmp10
174483    +          +     0.04049534355706 * AcceptedCmp20  +     0.11270892132762 *
174484    +        AcceptedCmp30  +     0.11221187249984 * AcceptedCmp40
174485    +          +     0.17472976197603 * AcceptedCmp50  +     0.15606486866287 *
174486    +        Complain0  +     0.08065554959159 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.26018307810736 * AcceptedCmp10 + 0.04049534355706 * 
AcceptedCmp20 + 0.11270892132762 * AcceptedCmp30 + 0.11221187249984 * AcceptedCmp40 + 
0.17472976197603 * AcceptedCmp50 + 0.15606486866287 * Complain0 + 0.08065554959159 * 
HigherEducationBinary0 ;
174487    +   H13  = H13  +     0.02279534546007 * AcceptedCmp10
174488    +          +    -0.27459928968957 * AcceptedCmp20  +    -0.15207279864055 *
174489    +        AcceptedCmp30  +    -0.07324517817975 * AcceptedCmp40
174490    +          +     -0.4186492052078 * AcceptedCmp50  +     0.22766105161511 *
174491    +        Complain0  +    -0.00716085865509 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.02279534546007 * AcceptedCmp10 + -0.27459928968957 * 
AcceptedCmp20 + -0.15207279864055 * AcceptedCmp30 + -0.07324517817975 * AcceptedCmp40 + 
-0.4186492052078 * AcceptedCmp50 + 0.22766105161511 * Complain0 + -0.00716085865509 * 
HigherEducationBinary0 ;
174492    +   H14  = H14  +    -0.30447666177293 * AcceptedCmp10
174493    +          +     0.07907637737546 * AcceptedCmp20  +    -0.01358906665622 *
174494    +        AcceptedCmp30  +     0.04426640297686 * AcceptedCmp40
174495    +          +     0.00911097068478 * AcceptedCmp50  +    -0.10112384137038 *
174496    +        Complain0  +     0.05359674201133 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.30447666177293 * AcceptedCmp10 + 0.07907637737546 * 
AcceptedCmp20 + -0.01358906665622 * AcceptedCmp30 + 0.04426640297686 * AcceptedCmp40 + 
0.00911097068478 * AcceptedCmp50 + -0.10112384137038 * Complain0 + 0.05359674201133 * 
HigherEducationBinary0 ;
174497    +   H15  = H15  +    -0.31560065228661 * AcceptedCmp10
174498    +          +     0.17796753054999 * AcceptedCmp20  +    -0.30736861931223 *
174499    +        AcceptedCmp30  +    -0.26334867599652 * AcceptedCmp40
174500    +          +    -0.19775668628356 * AcceptedCmp50  +     0.09156081270418 *
174501    +        Complain0  +     0.16300151411284 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.31560065228661 * AcceptedCmp10 + 0.17796753054999 * 
AcceptedCmp20 + -0.30736861931223 * AcceptedCmp30 + -0.26334867599652 * AcceptedCmp40 + 
-0.19775668628356 * AcceptedCmp50 + 0.09156081270418 * Complain0 + 0.16300151411284 * 
HigherEducationBinary0 ;
174502    +   H11  = H11  +     0.17457297183466 * Marital_StatusDivorced
174503    +          +    -0.18709572120712 * Marital_StatusMarried
174504    +          +    -0.17856903026629 * Marital_StatusSingle
174505    +          +     0.13783214631264 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.17457297183466 * Marital_StatusDivorced + 
-0.18709572120712 * Marital_StatusMarried + -0.17856903026629 * Marital_StatusSingle + 
0.13783214631264 * Marital_StatusTogether ;
174506    +   H12  = H12  +    -0.00304373365465 * Marital_StatusDivorced
174507    +          +    -0.16741351681675 * Marital_StatusMarried
174508    +          +      0.0768369461222 * Marital_StatusSingle
174509    +          +    -0.24741602840563 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.00304373365465 * Marital_StatusDivorced + 
-0.16741351681675 * Marital_StatusMarried + 0.0768369461222 * Marital_StatusSingle + 
-0.24741602840563 * Marital_StatusTogether ;
174510    +   H13  = H13  +     0.30534805329266 * Marital_StatusDivorced
174511    +          +    -0.85130030031409 * Marital_StatusMarried
174512    +          +     0.57365531089483 * Marital_StatusSingle
174513    +          +    -0.94902600797801 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.30534805329266 * Marital_StatusDivorced + 
-0.85130030031409 * Marital_StatusMarried + 0.57365531089483 * Marital_StatusSingle + 
-0.94902600797801 * Marital_StatusTogether ;
174514    +   H14  = H14  +     0.13923025215159 * Marital_StatusDivorced
174515    +          +    -0.10273688858818 * Marital_StatusMarried
174516    +          +     0.37267011958223 * Marital_StatusSingle
174517    +          +    -0.03704936024152 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.13923025215159 * Marital_StatusDivorced + 
-0.10273688858818 * Marital_StatusMarried + 0.37267011958223 * Marital_StatusSingle + 
-0.03704936024152 * Marital_StatusTogether ;
174518    +   H15  = H15  +     -0.1497917828097 * Marital_StatusDivorced
174519    +          +    -0.12309472866952 * Marital_StatusMarried
174520    +          +      0.0895004316905 * Marital_StatusSingle
174521    +          +    -0.06693333133964 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.1497917828097 * Marital_StatusDivorced + 
-0.12309472866952 * Marital_StatusMarried + 0.0895004316905 * Marital_StatusSingle + 
-0.06693333133964 * Marital_StatusTogether ;
174522    +   H11  =    -0.25731444426672 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.25731444426672 + H11 ;
174523    +   H12  =     0.87003179402118 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.87003179402118 + H12 ;
174524    +   H13  =     0.90055724527443 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 0.90055724527443 + H13 ;
174525    +   H14  =    -0.88878585940926 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -0.88878585940926 + H14 ;
174526    +   H15  =    -1.06135597773699 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -1.06135597773699 + H15 ;
174527    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
174528    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
174529    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
174530    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
174531    +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
174532    +END;
MPRINT(EM_DIAGRAM):   END;
174533    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
174534    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
174535    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
174536    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
174537    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
174538    +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
174539    +END;
MPRINT(EM_DIAGRAM):   END;
174540    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
174541    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
174542    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
174543    +
174544    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
174545    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
174546    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
174547    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
174548    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
174549    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
174550    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
174551    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
174552    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
174553    +end;
MPRINT(EM_DIAGRAM):   end;
174554    +else do;
MPRINT(EM_DIAGRAM):   else do;
174555    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
174556    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
174557    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
174558    +   end;
MPRINT(EM_DIAGRAM):   end;
174559    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
174560    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
174561    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
174562    +   end;
MPRINT(EM_DIAGRAM):   end;
174563    +   else do;
MPRINT(EM_DIAGRAM):   else do;
174564    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
174565    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
174566    +   end;
MPRINT(EM_DIAGRAM):   end;
174567    +end;
MPRINT(EM_DIAGRAM):   end;
174568    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
174569    +   P_DepVar1  =    -2.23627327600133 * H11  +    -5.23001272777429 * H12
174570    +          +     3.61561162996052 * H13  +     4.27940030557467 * H14
174571    +          +     0.95777699944459 * H15 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.23627327600133 * H11 + -5.23001272777429 * H12 + 
3.61561162996052 * H13 + 4.27940030557467 * H14 + 0.95777699944459 * H15 ;
174572    +   P_DepVar1  =    -1.37696256001086 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.37696256001086 + P_DepVar1 ;
174573    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
174574    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
174575    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
174576    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
174577    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
174578    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
174579    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
174580    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
174581    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
174582    +END;
MPRINT(EM_DIAGRAM):   END;
174583    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
174584    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
174585    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
174586    +END;
MPRINT(EM_DIAGRAM):   END;
174587    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
174588    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
174589    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
174590    +END;
MPRINT(EM_DIAGRAM):   END;
174591    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
174592    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
174593    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
174594    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
174595    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
174596    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
174597    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
174598    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
174599    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
174600    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
174601    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
174602    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
174603    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
174604    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
174605    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
174606    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
174607    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
174608    +END;
MPRINT(EM_DIAGRAM):   END;
174609    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
174610    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
174611    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
174612    +drop
174613    +H11
174614    +H12
174615    +H13
174616    +H14
174617    +H15
174618    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 ;
174619    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
174620     run;

NOTE: DATA STEP view saved on file EMWS8.NEURAL7_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.META_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_DIAGRAM):   quit;
174621     quit;
174622     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
174623     filename emflow
174623   ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural7\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural7\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural7: Scoring VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
174624     *------------------------------------------------------------*;
174625     * Neural7: Scoring VALIDATE data;
174626     *------------------------------------------------------------*;
174627     data EMWS8.Neural7_VALIDATE
174628     / view=EMWS8.Neural7_VALIDATE
174629     ;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural7_VALIDATE / view=EMWS8.Neural7_VALIDATE ;
174630     set EMWS8.Meta_VALIDATE
174631     ;
MPRINT(EM_DIAGRAM):   set EMWS8.Meta_VALIDATE ;
174632     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural7\EMFLOWSCORE.sas.
174633    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
174634    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
174635    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
174636    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
174637    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
174638    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
174639    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
174640    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
174641    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
174642    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
174643    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
174644    +LENGTH _WARN_ $4
174645    +      F_DepVar  $ 12
174646    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
174647    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
174648    +
174649    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
174650    +
174651    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
174652    +
174653    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
174654    +
174655    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
174656    +
174657    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
174658    +
174659    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
174660    +
174661    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
174662    +
174663    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
174664    +
174665    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
174666    +
174667    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
174668    +
174669    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
174670    +
174671    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
174672    +
174673    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
174674    +
174675    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
174676    +
174677    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
174678    +
174679    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
174680    +
174681    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
174682    +
174683    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
174684    +
174685    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
174686    +
174687    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
174688    +
174689    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
174690    +
174691    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
174692    +
174693    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
174694    +
174695    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
174696    +
174697    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
174698    +
174699    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
174700    +
174701    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
174702    +
174703    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
174704    +
174705    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
174706    +
174707    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
174708    +
174709    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
174710    +
174711    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
174712    +
174713    +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
174714    +
174715    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
174716    +
174717    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
174718    +
174719    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
174720    +
174721    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
174722    +
174723    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
174724    +
174725    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
174726    +
174727    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
174728    +
174729    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
174730    +
174731    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
174732    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
174733    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
174734    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
174735    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
174736    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
174737    +end;
MPRINT(EM_DIAGRAM):   end;
174738    +else do;
MPRINT(EM_DIAGRAM):   else do;
174739    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
174740    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
174741    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
174742    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
174743    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
174744    +   end;
MPRINT(EM_DIAGRAM):   end;
174745    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
174746    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
174747    +   end;
MPRINT(EM_DIAGRAM):   end;
174748    +   else do;
MPRINT(EM_DIAGRAM):   else do;
174749    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
174750    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
174751    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
174752    +   end;
MPRINT(EM_DIAGRAM):   end;
174753    +end;
MPRINT(EM_DIAGRAM):   end;
174754    +
174755    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
174756    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
174757    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
174758    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
174759    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
174760    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
174761    +end;
MPRINT(EM_DIAGRAM):   end;
174762    +else do;
MPRINT(EM_DIAGRAM):   else do;
174763    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
174764    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
174765    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
174766    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
174767    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
174768    +   end;
MPRINT(EM_DIAGRAM):   end;
174769    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
174770    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
174771    +   end;
MPRINT(EM_DIAGRAM):   end;
174772    +   else do;
MPRINT(EM_DIAGRAM):   else do;
174773    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
174774    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
174775    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
174776    +   end;
MPRINT(EM_DIAGRAM):   end;
174777    +end;
MPRINT(EM_DIAGRAM):   end;
174778    +
174779    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
174780    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
174781    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
174782    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
174783    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
174784    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
174785    +end;
MPRINT(EM_DIAGRAM):   end;
174786    +else do;
MPRINT(EM_DIAGRAM):   else do;
174787    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
174788    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
174789    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
174790    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
174791    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
174792    +   end;
MPRINT(EM_DIAGRAM):   end;
174793    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
174794    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
174795    +   end;
MPRINT(EM_DIAGRAM):   end;
174796    +   else do;
MPRINT(EM_DIAGRAM):   else do;
174797    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
174798    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
174799    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
174800    +   end;
MPRINT(EM_DIAGRAM):   end;
174801    +end;
MPRINT(EM_DIAGRAM):   end;
174802    +
174803    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
174804    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
174805    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
174806    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
174807    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
174808    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
174809    +end;
MPRINT(EM_DIAGRAM):   end;
174810    +else do;
MPRINT(EM_DIAGRAM):   else do;
174811    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
174812    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
174813    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
174814    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
174815    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
174816    +   end;
MPRINT(EM_DIAGRAM):   end;
174817    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
174818    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
174819    +   end;
MPRINT(EM_DIAGRAM):   end;
174820    +   else do;
MPRINT(EM_DIAGRAM):   else do;
174821    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
174822    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
174823    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
174824    +   end;
MPRINT(EM_DIAGRAM):   end;
174825    +end;
MPRINT(EM_DIAGRAM):   end;
174826    +
174827    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
174828    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
174829    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
174830    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
174831    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
174832    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
174833    +end;
MPRINT(EM_DIAGRAM):   end;
174834    +else do;
MPRINT(EM_DIAGRAM):   else do;
174835    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
174836    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
174837    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
174838    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
174839    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
174840    +   end;
MPRINT(EM_DIAGRAM):   end;
174841    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
174842    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
174843    +   end;
MPRINT(EM_DIAGRAM):   end;
174844    +   else do;
MPRINT(EM_DIAGRAM):   else do;
174845    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
174846    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
174847    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
174848    +   end;
MPRINT(EM_DIAGRAM):   end;
174849    +end;
MPRINT(EM_DIAGRAM):   end;
174850    +
174851    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
174852    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
174853    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
174854    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
174855    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
174856    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
174857    +end;
MPRINT(EM_DIAGRAM):   end;
174858    +else do;
MPRINT(EM_DIAGRAM):   else do;
174859    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
174860    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
174861    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
174862    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
174863    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
174864    +   end;
MPRINT(EM_DIAGRAM):   end;
174865    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
174866    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
174867    +   end;
MPRINT(EM_DIAGRAM):   end;
174868    +   else do;
MPRINT(EM_DIAGRAM):   else do;
174869    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
174870    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
174871    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
174872    +   end;
MPRINT(EM_DIAGRAM):   end;
174873    +end;
MPRINT(EM_DIAGRAM):   end;
174874    +
174875    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
174876    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
174877    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
174878    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
174879    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
174880    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
174881    +end;
MPRINT(EM_DIAGRAM):   end;
174882    +else do;
MPRINT(EM_DIAGRAM):   else do;
174883    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
174884    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
174885    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
174886    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
174887    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
174888    +   end;
MPRINT(EM_DIAGRAM):   end;
174889    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
174890    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
174891    +   end;
MPRINT(EM_DIAGRAM):   end;
174892    +   else do;
MPRINT(EM_DIAGRAM):   else do;
174893    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
174894    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
174895    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
174896    +   end;
MPRINT(EM_DIAGRAM):   end;
174897    +end;
MPRINT(EM_DIAGRAM):   end;
174898    +
174899    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
174900    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
174901    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
174902    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
174903    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
174904    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
174905    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
174906    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
174907    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
174908    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
174909    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
174910    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
174911    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
174912    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
174913    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
174914    +end;
MPRINT(EM_DIAGRAM):   end;
174915    +else do;
MPRINT(EM_DIAGRAM):   else do;
174916    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
174917    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
174918    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
174919    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
174920    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
174921    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
174922    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
174923    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
174924    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
174925    +         end;
MPRINT(EM_DIAGRAM):   end;
174926    +         else do;
MPRINT(EM_DIAGRAM):   else do;
174927    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
174928    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
174929    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
174930    +            end;
MPRINT(EM_DIAGRAM):   end;
174931    +         end;
MPRINT(EM_DIAGRAM):   end;
174932    +      end;
MPRINT(EM_DIAGRAM):   end;
174933    +      else do;
MPRINT(EM_DIAGRAM):   else do;
174934    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
174935    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
174936    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
174937    +         end;
MPRINT(EM_DIAGRAM):   end;
174938    +      end;
MPRINT(EM_DIAGRAM):   end;
174939    +   end;
MPRINT(EM_DIAGRAM):   end;
174940    +   else do;
MPRINT(EM_DIAGRAM):   else do;
174941    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
174942    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
174943    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
174944    +      end;
MPRINT(EM_DIAGRAM):   end;
174945    +      else do;
MPRINT(EM_DIAGRAM):   else do;
174946    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
174947    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
174948    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
174949    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
174950    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
174951    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
174952    +         end;
MPRINT(EM_DIAGRAM):   end;
174953    +      end;
MPRINT(EM_DIAGRAM):   end;
174954    +   end;
MPRINT(EM_DIAGRAM):   end;
174955    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
174956    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
174957    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
174958    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
174959    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
174960    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
174961    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
174962    +   end;
MPRINT(EM_DIAGRAM):   end;
174963    +end;
MPRINT(EM_DIAGRAM):   end;
174964    +
174965    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
174966    +*** Checking missing input Interval
174967    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
174968    +
174969    +IF NMISS(
174970    +   AcceptedCmpTotal ,
174971    +   Kidhome ,
174972    +   Mnt ,
174973    +   MntFishProducts ,
174974    +   MntFruits ,
174975    +   MntGoldProds ,
174976    +   MntMeatProducts ,
174977    +   MntSweetProducts ,
174978    +   MntWines ,
174979    +   NumCatalogPurchases ,
174980    +   NumDealsPurchases ,
174981    +   NumDistPurchases ,
174982    +   NumStorePurchases ,
174983    +   NumWebPurchases ,
174984    +   NumWebVisitsMonth ,
174985    +   RFMstat ,
174986    +   Recency ,
174987    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Kidhome , Mnt , MntFishProducts , MntFruits 
, MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , 
NumDealsPurchases , NumDistPurchases , NumStorePurchases , NumWebPurchases , NumWebVisitsMonth 
, RFMstat , Recency , Teenhome ) THEN DO;
174988    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
174989    +
174990    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
174991    +END;
MPRINT(EM_DIAGRAM):   END;
174992    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
174993    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
174994    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
174995    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
174996    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
174997    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
174998    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
174999    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
175000    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
175001    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
175002    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
175003    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
175004    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
175005    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
175006    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
175007    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
175008    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
175009    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
175010    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
175011    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
175012    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
175013    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
175014    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
175015    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
175016    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
175017    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
175018    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
175019    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
175020    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
175021    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
175022    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
175023    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
175024    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
175025    +END;
MPRINT(EM_DIAGRAM):   END;
175026    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
175027    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
175028    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
175029    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
175030    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
175031    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
175032    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
175033    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
175034    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
175035    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
175036    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
175037    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
175038    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
175039    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
175040    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
175041    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
175042    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
175043    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
175044    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
175045    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
175046    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
175047    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
175048    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
175049    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
175050    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
175051    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
175052    +   ELSE S_NumCatalogPurchases
175053    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
175054    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
175055    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
175056    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
175057    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
175058    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
175059    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
175060    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
175061    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
175062    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
175063    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
175064    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
175065    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
175066    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
175067    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
175068    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
175069    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
175070    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
175071    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
175072    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
175073    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
175074    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
175075    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
175076    +END;
MPRINT(EM_DIAGRAM):   END;
175077    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
175078    +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
175079    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
175080    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
175081    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
175082    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
175083    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
175084    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
175085    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
175086    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
175087    +   H11  =    -0.31336975179768 * S_AcceptedCmpTotal  +     0.55217606948262 *
175088    +        S_Kidhome  +     0.30934248519275 * S_Mnt  +     0.21704081651602 *
175089    +        S_MntFishProducts  +      0.0286842970037 * S_MntFruits
175090    +          +     -0.0428936614026 * S_MntGoldProds  +     0.04106839234795 *
175091    +        S_MntMeatProducts  +     -0.2219223463878 * S_MntSweetProducts
175092    +          +     0.07714161131062 * S_MntWines  +    -0.47043004421243 *
175093    +        S_NumCatalogPurchases  +    -0.34552756945236 * S_NumDealsPurchases
175094    +          +    -0.08565162229542 * S_NumDistPurchases
175095    +          +      0.2498966077742 * S_NumStorePurchases
175096    +          +    -0.03810974523517 * S_NumWebPurchases
175097    +          +     0.50983692369041 * S_NumWebVisitsMonth
175098    +          +     0.08815778320903 * S_RFMstat  +     0.09119895780804 *
175099    +        S_Recency  +     0.13511958264343 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.31336975179768 * S_AcceptedCmpTotal + 0.55217606948262 * 
S_Kidhome + 0.30934248519275 * S_Mnt + 0.21704081651602 * S_MntFishProducts + 0.0286842970037 
* S_MntFruits + -0.0428936614026 * S_MntGoldProds + 0.04106839234795 * S_MntMeatProducts + 
-0.2219223463878 * S_MntSweetProducts + 0.07714161131062 * S_MntWines + -0.47043004421243 * 
S_NumCatalogPurchases + -0.34552756945236 * S_NumDealsPurchases + -0.08565162229542 * 
S_NumDistPurchases + 0.2498966077742 * S_NumStorePurchases + -0.03810974523517 * 
S_NumWebPurchases + 0.50983692369041 * S_NumWebVisitsMonth + 0.08815778320903 * S_RFMstat + 
0.09119895780804 * S_Recency + 0.13511958264343 * S_Teenhome ;
175100    +   H12  =    -0.24937709830237 * S_AcceptedCmpTotal  +    -0.24749428309219 *
175101    +        S_Kidhome  +    -0.12930178120586 * S_Mnt  +     0.13546025995573 *
175102    +        S_MntFishProducts  +     0.28360186554431 * S_MntFruits
175103    +          +    -0.05241802314535 * S_MntGoldProds  +    -0.66941662270923 *
175104    +        S_MntMeatProducts  +     0.15336628351126 * S_MntSweetProducts
175105    +          +      0.4032078630799 * S_MntWines  +    -0.56890394617047 *
175106    +        S_NumCatalogPurchases  +    -0.64950384504567 * S_NumDealsPurchases
175107    +          +     0.23154666595931 * S_NumDistPurchases
175108    +          +     0.54534387610808 * S_NumStorePurchases
175109    +          +     0.41139490970672 * S_NumWebPurchases
175110    +          +    -0.55413387763351 * S_NumWebVisitsMonth
175111    +          +    -0.26075003734578 * S_RFMstat  +     0.49052010543197 *
175112    +        S_Recency  +     -0.0404801860777 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.24937709830237 * S_AcceptedCmpTotal + -0.24749428309219 * 
S_Kidhome + -0.12930178120586 * S_Mnt + 0.13546025995573 * S_MntFishProducts + 
0.28360186554431 * S_MntFruits + -0.05241802314535 * S_MntGoldProds + -0.66941662270923 * 
S_MntMeatProducts + 0.15336628351126 * S_MntSweetProducts + 0.4032078630799 * S_MntWines + 
-0.56890394617047 * S_NumCatalogPurchases + -0.64950384504567 * S_NumDealsPurchases + 
0.23154666595931 * S_NumDistPurchases + 0.54534387610808 * S_NumStorePurchases + 
0.41139490970672 * S_NumWebPurchases + -0.55413387763351 * S_NumWebVisitsMonth + 
-0.26075003734578 * S_RFMstat + 0.49052010543197 * S_Recency + -0.0404801860777 * S_Teenhome ;
175113    +   H13  =     0.21315421089843 * S_AcceptedCmpTotal  +    -0.40934954273162 *
175114    +        S_Kidhome  +    -0.14257980270562 * S_Mnt  +    -0.02326723710858 *
175115    +        S_MntFishProducts  +     0.03093571619826 * S_MntFruits
175116    +          +    -0.09540637054036 * S_MntGoldProds  +       0.216562837751 *
175117    +        S_MntMeatProducts  +    -0.06578520743957 * S_MntSweetProducts
175118    +          +    -0.45983147514787 * S_MntWines  +     0.28991677967619 *
175119    +        S_NumCatalogPurchases  +     -0.0581811780876 * S_NumDealsPurchases
175120    +          +     0.05120135471729 * S_NumDistPurchases
175121    +          +    -0.26556926910649 * S_NumStorePurchases
175122    +          +    -0.44351155109785 * S_NumWebPurchases
175123    +          +     0.88609841670248 * S_NumWebVisitsMonth
175124    +          +    -0.05355058809893 * S_RFMstat  +    -0.73370046845716 *
175125    +        S_Recency  +    -0.20220070524982 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = 0.21315421089843 * S_AcceptedCmpTotal + -0.40934954273162 * 
S_Kidhome + -0.14257980270562 * S_Mnt + -0.02326723710858 * S_MntFishProducts + 
0.03093571619826 * S_MntFruits + -0.09540637054036 * S_MntGoldProds + 0.216562837751 * 
S_MntMeatProducts + -0.06578520743957 * S_MntSweetProducts + -0.45983147514787 * S_MntWines + 
0.28991677967619 * S_NumCatalogPurchases + -0.0581811780876 * S_NumDealsPurchases + 
0.05120135471729 * S_NumDistPurchases + -0.26556926910649 * S_NumStorePurchases + 
-0.44351155109785 * S_NumWebPurchases + 0.88609841670248 * S_NumWebVisitsMonth + 
-0.05355058809893 * S_RFMstat + -0.73370046845716 * S_Recency + -0.20220070524982 * S_Teenhome 
;
175126    +   H14  =     0.39698224199543 * S_AcceptedCmpTotal  +    -0.20120366596375 *
175127    +        S_Kidhome  +      0.3167228298887 * S_Mnt  +     0.01157053818495 *
175128    +        S_MntFishProducts  +    -0.01328592356982 * S_MntFruits
175129    +          +     0.00886948034365 * S_MntGoldProds  +     1.21666314524043 *
175130    +        S_MntMeatProducts  +    -0.09283019720022 * S_MntSweetProducts
175131    +          +    -0.09586722258183 * S_MntWines  +    -0.01785512232978 *
175132    +        S_NumCatalogPurchases  +    -0.21291958246407 * S_NumDealsPurchases
175133    +          +     0.39404855135103 * S_NumDistPurchases
175134    +          +    -0.07248752877179 * S_NumStorePurchases
175135    +          +    -0.10123700375349 * S_NumWebPurchases
175136    +          +     0.42450276314027 * S_NumWebVisitsMonth
175137    +          +     0.24279716857154 * S_RFMstat  +    -0.58955338934321 *
175138    +        S_Recency  +    -0.30629869350731 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 0.39698224199543 * S_AcceptedCmpTotal + -0.20120366596375 * 
S_Kidhome + 0.3167228298887 * S_Mnt + 0.01157053818495 * S_MntFishProducts + -0.01328592356982 
* S_MntFruits + 0.00886948034365 * S_MntGoldProds + 1.21666314524043 * S_MntMeatProducts + 
-0.09283019720022 * S_MntSweetProducts + -0.09586722258183 * S_MntWines + -0.01785512232978 * 
S_NumCatalogPurchases + -0.21291958246407 * S_NumDealsPurchases + 0.39404855135103 * 
S_NumDistPurchases + -0.07248752877179 * S_NumStorePurchases + -0.10123700375349 * 
S_NumWebPurchases + 0.42450276314027 * S_NumWebVisitsMonth + 0.24279716857154 * S_RFMstat + 
-0.58955338934321 * S_Recency + -0.30629869350731 * S_Teenhome ;
175139    +   H15  =     0.30758619083232 * S_AcceptedCmpTotal  +     -0.0124289721914 *
175140    +        S_Kidhome  +    -0.05376010749039 * S_Mnt  +    -0.00466013129163 *
175141    +        S_MntFishProducts  +     -0.0128351925647 * S_MntFruits
175142    +          +       0.418369814853 * S_MntGoldProds  +    -0.44302877451838 *
175143    +        S_MntMeatProducts  +     0.10514229364725 * S_MntSweetProducts
175144    +          +     0.34164846881132 * S_MntWines  +    -0.02137843790281 *
175145    +        S_NumCatalogPurchases  +     -0.0656649517507 * S_NumDealsPurchases
175146    +          +     0.27175946433967 * S_NumDistPurchases
175147    +          +     0.16942067472984 * S_NumStorePurchases
175148    +          +     0.16250565660711 * S_NumWebPurchases
175149    +          +    -0.20203561703211 * S_NumWebVisitsMonth
175150    +          +     0.14491189794214 * S_RFMstat  +    -0.22675112064568 *
175151    +        S_Recency  +      0.1811664309815 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = 0.30758619083232 * S_AcceptedCmpTotal + -0.0124289721914 * 
S_Kidhome + -0.05376010749039 * S_Mnt + -0.00466013129163 * S_MntFishProducts + 
-0.0128351925647 * S_MntFruits + 0.418369814853 * S_MntGoldProds + -0.44302877451838 * 
S_MntMeatProducts + 0.10514229364725 * S_MntSweetProducts + 0.34164846881132 * S_MntWines + 
-0.02137843790281 * S_NumCatalogPurchases + -0.0656649517507 * S_NumDealsPurchases + 
0.27175946433967 * S_NumDistPurchases + 0.16942067472984 * S_NumStorePurchases + 
0.16250565660711 * S_NumWebPurchases + -0.20203561703211 * S_NumWebVisitsMonth + 
0.14491189794214 * S_RFMstat + -0.22675112064568 * S_Recency + 0.1811664309815 * S_Teenhome ;
175152    +   H11  = H11  +    -0.26538416697651 * AcceptedCmp10
175153    +          +    -0.28983118331232 * AcceptedCmp20  +    -0.32322818178704 *
175154    +        AcceptedCmp30  +    -0.03993661807643 * AcceptedCmp40
175155    +          +     0.06994002730973 * AcceptedCmp50  +    -0.07716774247605 *
175156    +        Complain0  +      0.2585392734779 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.26538416697651 * AcceptedCmp10 + -0.28983118331232 * 
AcceptedCmp20 + -0.32322818178704 * AcceptedCmp30 + -0.03993661807643 * AcceptedCmp40 + 
0.06994002730973 * AcceptedCmp50 + -0.07716774247605 * Complain0 + 0.2585392734779 * 
HigherEducationBinary0 ;
175157    +   H12  = H12  +     0.26018307810736 * AcceptedCmp10
175158    +          +     0.04049534355706 * AcceptedCmp20  +     0.11270892132762 *
175159    +        AcceptedCmp30  +     0.11221187249984 * AcceptedCmp40
175160    +          +     0.17472976197603 * AcceptedCmp50  +     0.15606486866287 *
175161    +        Complain0  +     0.08065554959159 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.26018307810736 * AcceptedCmp10 + 0.04049534355706 * 
AcceptedCmp20 + 0.11270892132762 * AcceptedCmp30 + 0.11221187249984 * AcceptedCmp40 + 
0.17472976197603 * AcceptedCmp50 + 0.15606486866287 * Complain0 + 0.08065554959159 * 
HigherEducationBinary0 ;
175162    +   H13  = H13  +     0.02279534546007 * AcceptedCmp10
175163    +          +    -0.27459928968957 * AcceptedCmp20  +    -0.15207279864055 *
175164    +        AcceptedCmp30  +    -0.07324517817975 * AcceptedCmp40
175165    +          +     -0.4186492052078 * AcceptedCmp50  +     0.22766105161511 *
175166    +        Complain0  +    -0.00716085865509 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.02279534546007 * AcceptedCmp10 + -0.27459928968957 * 
AcceptedCmp20 + -0.15207279864055 * AcceptedCmp30 + -0.07324517817975 * AcceptedCmp40 + 
-0.4186492052078 * AcceptedCmp50 + 0.22766105161511 * Complain0 + -0.00716085865509 * 
HigherEducationBinary0 ;
175167    +   H14  = H14  +    -0.30447666177293 * AcceptedCmp10
175168    +          +     0.07907637737546 * AcceptedCmp20  +    -0.01358906665622 *
175169    +        AcceptedCmp30  +     0.04426640297686 * AcceptedCmp40
175170    +          +     0.00911097068478 * AcceptedCmp50  +    -0.10112384137038 *
175171    +        Complain0  +     0.05359674201133 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.30447666177293 * AcceptedCmp10 + 0.07907637737546 * 
AcceptedCmp20 + -0.01358906665622 * AcceptedCmp30 + 0.04426640297686 * AcceptedCmp40 + 
0.00911097068478 * AcceptedCmp50 + -0.10112384137038 * Complain0 + 0.05359674201133 * 
HigherEducationBinary0 ;
175172    +   H15  = H15  +    -0.31560065228661 * AcceptedCmp10
175173    +          +     0.17796753054999 * AcceptedCmp20  +    -0.30736861931223 *
175174    +        AcceptedCmp30  +    -0.26334867599652 * AcceptedCmp40
175175    +          +    -0.19775668628356 * AcceptedCmp50  +     0.09156081270418 *
175176    +        Complain0  +     0.16300151411284 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.31560065228661 * AcceptedCmp10 + 0.17796753054999 * 
AcceptedCmp20 + -0.30736861931223 * AcceptedCmp30 + -0.26334867599652 * AcceptedCmp40 + 
-0.19775668628356 * AcceptedCmp50 + 0.09156081270418 * Complain0 + 0.16300151411284 * 
HigherEducationBinary0 ;
175177    +   H11  = H11  +     0.17457297183466 * Marital_StatusDivorced
175178    +          +    -0.18709572120712 * Marital_StatusMarried
175179    +          +    -0.17856903026629 * Marital_StatusSingle
175180    +          +     0.13783214631264 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.17457297183466 * Marital_StatusDivorced + 
-0.18709572120712 * Marital_StatusMarried + -0.17856903026629 * Marital_StatusSingle + 
0.13783214631264 * Marital_StatusTogether ;
175181    +   H12  = H12  +    -0.00304373365465 * Marital_StatusDivorced
175182    +          +    -0.16741351681675 * Marital_StatusMarried
175183    +          +      0.0768369461222 * Marital_StatusSingle
175184    +          +    -0.24741602840563 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.00304373365465 * Marital_StatusDivorced + 
-0.16741351681675 * Marital_StatusMarried + 0.0768369461222 * Marital_StatusSingle + 
-0.24741602840563 * Marital_StatusTogether ;
175185    +   H13  = H13  +     0.30534805329266 * Marital_StatusDivorced
175186    +          +    -0.85130030031409 * Marital_StatusMarried
175187    +          +     0.57365531089483 * Marital_StatusSingle
175188    +          +    -0.94902600797801 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.30534805329266 * Marital_StatusDivorced + 
-0.85130030031409 * Marital_StatusMarried + 0.57365531089483 * Marital_StatusSingle + 
-0.94902600797801 * Marital_StatusTogether ;
175189    +   H14  = H14  +     0.13923025215159 * Marital_StatusDivorced
175190    +          +    -0.10273688858818 * Marital_StatusMarried
175191    +          +     0.37267011958223 * Marital_StatusSingle
175192    +          +    -0.03704936024152 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.13923025215159 * Marital_StatusDivorced + 
-0.10273688858818 * Marital_StatusMarried + 0.37267011958223 * Marital_StatusSingle + 
-0.03704936024152 * Marital_StatusTogether ;
175193    +   H15  = H15  +     -0.1497917828097 * Marital_StatusDivorced
175194    +          +    -0.12309472866952 * Marital_StatusMarried
175195    +          +      0.0895004316905 * Marital_StatusSingle
175196    +          +    -0.06693333133964 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.1497917828097 * Marital_StatusDivorced + 
-0.12309472866952 * Marital_StatusMarried + 0.0895004316905 * Marital_StatusSingle + 
-0.06693333133964 * Marital_StatusTogether ;
175197    +   H11  =    -0.25731444426672 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.25731444426672 + H11 ;
175198    +   H12  =     0.87003179402118 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.87003179402118 + H12 ;
175199    +   H13  =     0.90055724527443 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 0.90055724527443 + H13 ;
175200    +   H14  =    -0.88878585940926 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -0.88878585940926 + H14 ;
175201    +   H15  =    -1.06135597773699 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -1.06135597773699 + H15 ;
175202    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
175203    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
175204    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
175205    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
175206    +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
175207    +END;
MPRINT(EM_DIAGRAM):   END;
175208    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
175209    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
175210    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
175211    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
175212    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
175213    +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
175214    +END;
MPRINT(EM_DIAGRAM):   END;
175215    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
175216    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
175217    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
175218    +
175219    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
175220    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
175221    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
175222    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
175223    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
175224    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
175225    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
175226    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
175227    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
175228    +end;
MPRINT(EM_DIAGRAM):   end;
175229    +else do;
MPRINT(EM_DIAGRAM):   else do;
175230    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
175231    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
175232    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
175233    +   end;
MPRINT(EM_DIAGRAM):   end;
175234    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
175235    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
175236    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
175237    +   end;
MPRINT(EM_DIAGRAM):   end;
175238    +   else do;
MPRINT(EM_DIAGRAM):   else do;
175239    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
175240    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
175241    +   end;
MPRINT(EM_DIAGRAM):   end;
175242    +end;
MPRINT(EM_DIAGRAM):   end;
175243    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
175244    +   P_DepVar1  =    -2.23627327600133 * H11  +    -5.23001272777429 * H12
175245    +          +     3.61561162996052 * H13  +     4.27940030557467 * H14
175246    +          +     0.95777699944459 * H15 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.23627327600133 * H11 + -5.23001272777429 * H12 + 
3.61561162996052 * H13 + 4.27940030557467 * H14 + 0.95777699944459 * H15 ;
175247    +   P_DepVar1  =    -1.37696256001086 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.37696256001086 + P_DepVar1 ;
175248    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
175249    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
175250    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
175251    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
175252    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
175253    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
175254    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
175255    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
175256    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
175257    +END;
MPRINT(EM_DIAGRAM):   END;
175258    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
175259    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
175260    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
175261    +END;
MPRINT(EM_DIAGRAM):   END;
175262    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
175263    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
175264    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
175265    +END;
MPRINT(EM_DIAGRAM):   END;
175266    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
175267    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
175268    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
175269    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
175270    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
175271    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
175272    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
175273    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
175274    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
175275    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
175276    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
175277    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
175278    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
175279    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
175280    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
175281    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
175282    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
175283    +END;
MPRINT(EM_DIAGRAM):   END;
175284    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
175285    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
175286    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
175287    +drop
175288    +H11
175289    +H12
175290    +H13
175291    +H14
175292    +H15
175293    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 ;
175294    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
175295     run;

NOTE: DATA STEP view saved on file EMWS8.NEURAL7_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.META_VALIDATE.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
175296     quit;
175297     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
175298     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
175299     * Neural7: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Neural7: Computing metadata for TRAIN data;
175300     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS8.NEURAL7_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural7\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.Neural7_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.Neural7_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.Neural7_TRAIN out=WORK.M1FOPWJQ noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1FOPWJQ;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M1FOPWJQ(keep=name type length label format formatl 
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = 
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1FOPWJQ;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M1FOPWJQ;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M2X3XGBD NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2X3XGBD;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M2X3XGBD;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1N2K4JE(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M2X3XGBD;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2X3XGBD;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M2X3XGBD;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = 
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) 
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" 
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then 
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ 
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2X3XGBD;
MPRINT(EMADVISECOLUMNS):   set WORK.M2X3XGBD;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Meta_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Meta_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural7_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT 
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Neural7";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "Neural7";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "Neural7";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "Neural7";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "Neural7";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "Neural7";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "Neural7";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "Neural7";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "Neural7";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "Neural7";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural7: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
175612     data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
175613     set EMWS8.Neural7_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural7_EMINFO;
175614     where DATA='Neural7' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='Neural7' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 
'MODEL');
175615     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.NEURAL7_EMINFO.
      WHERE (DATA='Neural7') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

175616     data EMWS8.Neural7_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.Neural7_EMINFO;
175617     length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
175618     input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
175619     cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS8.NEURAL7_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   run;
175623     run;
175624     data EMWS8.Neural7_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural7_EMINFO;
175625     set EMWS8.Neural7_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural7_EMINFO WORK.MODELTEMP_INFO;
175626     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.NEURAL7_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.NEURAL7_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

175627     proc sort data = EMWS8.Neural7_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Neural7_EMINFO NOTHREADS;
175628     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
175629     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.NEURAL7_EMINFO.
NOTE: The data set EMWS8.NEURAL7_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

175630     proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
175631     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
175632     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS8.FIMPORT_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

175633     proc sort data = EMWS8.Neural7_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.Neural7_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
175634     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
175635     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.NEURAL7_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

175636     data EMWS8.Neural7_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural7_EMINFO;
175637     merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
175638     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
175639     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.NEURAL7_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

175640     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
175641     delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
175642     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
175643     quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

NOTE: View EMWS8.NEURAL7_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: View EMWS8.NEURAL7_VALIDATE.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
