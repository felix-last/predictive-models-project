MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "19. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "13.28 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                19. April 2016
Time:                13.28 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O1YUYD0C 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural7\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O1YUYD0C new;
MPRINT(EM_DIAGRAM):   run;
79169      data work.outkey;
MPRINT(EM_DIAGRAM):    data work.outkey;
79170      set EMWS8.Neural7_OUTKEY;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural7_OUTKEY;
79171      if upcase(ROLE) = 'HIDDEN';
MPRINT(EM_DIAGRAM):   if upcase(ROLE) = 'HIDDEN';
79172      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 55 observations read from the data set EMWS8.NEURAL7_OUTKEY.
NOTE: The data set WORK.OUTKEY has 5 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

79173      filename emflow
79173    ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural7\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural7\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural7: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
79174      *------------------------------------------------------------*;
79175      * Neural7: Scoring DATA data;
79176      *------------------------------------------------------------*;
79177      data EMWS8.Neural7_TRAIN
79178      / view=EMWS8.Neural7_TRAIN
79179      ;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural7_TRAIN / view=EMWS8.Neural7_TRAIN ;
79180      set EMWS8.Meta_TRAIN
79181      ;
MPRINT(EM_DIAGRAM):   set EMWS8.Meta_TRAIN ;
79182      %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural7\EMFLOWSCORE.sas.
79183     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
79184     +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
79185     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
79186     +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
79187     + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
79188     + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
79189     + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
79190     + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
79191     + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
79192     + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
79193     + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
79194     +LENGTH _WARN_ $4
79195     +      F_DepVar  $ 12
79196     +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
79197     +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
79198     +
79199     +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
79200     +
79201     +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
79202     +
79203     +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
79204     +
79205     +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
79206     +
79207     +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
79208     +
79209     +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
79210     +
79211     +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
79212     +
79213     +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
79214     +
79215     +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
79216     +
79217     +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
79218     +
79219     +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
79220     +
79221     +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
79222     +
79223     +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
79224     +
79225     +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
79226     +
79227     +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
79228     +
79229     +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
79230     +
79231     +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
79232     +
79233     +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
79234     +
79235     +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
79236     +
79237     +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
79238     +
79239     +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
79240     +
79241     +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
79242     +
79243     +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
79244     +
79245     +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
79246     +
79247     +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
79248     +
79249     +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
79250     +
79251     +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
79252     +
79253     +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
79254     +
79255     +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
79256     +
79257     +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
79258     +
79259     +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
79260     +
79261     +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
79262     +
79263     +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
79264     +
79265     +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
79266     +
79267     +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
79268     +
79269     +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
79270     +
79271     +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
79272     +
79273     +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
79274     +
79275     +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
79276     +
79277     +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
79278     +
79279     +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
79280     +
79281     +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
79282     +
79283     +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
79284     +
79285     +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
79286     +
79287     +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
79288     +
79289     +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
79290     +
79291     +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
79292     +
79293     +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
79294     +
79295     +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
79296     +
79297     +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
79298     +
79299     +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
79300     +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
79301     +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
79302     +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
79303     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
79304     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
79305     +end;
MPRINT(EM_DIAGRAM):   end;
79306     +else do;
MPRINT(EM_DIAGRAM):   else do;
79307     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
79308     +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
79309     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
79310     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
79311     +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
79312     +   end;
MPRINT(EM_DIAGRAM):   end;
79313     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
79314     +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
79315     +   end;
MPRINT(EM_DIAGRAM):   end;
79316     +   else do;
MPRINT(EM_DIAGRAM):   else do;
79317     +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
79318     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
79319     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
79320     +   end;
MPRINT(EM_DIAGRAM):   end;
79321     +end;
MPRINT(EM_DIAGRAM):   end;
79322     +
79323     +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
79324     +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
79325     +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
79326     +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
79327     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
79328     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
79329     +end;
MPRINT(EM_DIAGRAM):   end;
79330     +else do;
MPRINT(EM_DIAGRAM):   else do;
79331     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
79332     +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
79333     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
79334     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
79335     +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
79336     +   end;
MPRINT(EM_DIAGRAM):   end;
79337     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
79338     +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
79339     +   end;
MPRINT(EM_DIAGRAM):   end;
79340     +   else do;
MPRINT(EM_DIAGRAM):   else do;
79341     +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
79342     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
79343     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
79344     +   end;
MPRINT(EM_DIAGRAM):   end;
79345     +end;
MPRINT(EM_DIAGRAM):   end;
79346     +
79347     +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
79348     +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
79349     +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
79350     +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
79351     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
79352     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
79353     +end;
MPRINT(EM_DIAGRAM):   end;
79354     +else do;
MPRINT(EM_DIAGRAM):   else do;
79355     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
79356     +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
79357     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
79358     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
79359     +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
79360     +   end;
MPRINT(EM_DIAGRAM):   end;
79361     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
79362     +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
79363     +   end;
MPRINT(EM_DIAGRAM):   end;
79364     +   else do;
MPRINT(EM_DIAGRAM):   else do;
79365     +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
79366     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
79367     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
79368     +   end;
MPRINT(EM_DIAGRAM):   end;
79369     +end;
MPRINT(EM_DIAGRAM):   end;
79370     +
79371     +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
79372     +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
79373     +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
79374     +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
79375     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
79376     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
79377     +end;
MPRINT(EM_DIAGRAM):   end;
79378     +else do;
MPRINT(EM_DIAGRAM):   else do;
79379     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
79380     +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
79381     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
79382     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
79383     +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
79384     +   end;
MPRINT(EM_DIAGRAM):   end;
79385     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
79386     +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
79387     +   end;
MPRINT(EM_DIAGRAM):   end;
79388     +   else do;
MPRINT(EM_DIAGRAM):   else do;
79389     +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
79390     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
79391     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
79392     +   end;
MPRINT(EM_DIAGRAM):   end;
79393     +end;
MPRINT(EM_DIAGRAM):   end;
79394     +
79395     +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
79396     +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
79397     +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
79398     +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
79399     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
79400     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
79401     +end;
MPRINT(EM_DIAGRAM):   end;
79402     +else do;
MPRINT(EM_DIAGRAM):   else do;
79403     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
79404     +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
79405     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
79406     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
79407     +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
79408     +   end;
MPRINT(EM_DIAGRAM):   end;
79409     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
79410     +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
79411     +   end;
MPRINT(EM_DIAGRAM):   end;
79412     +   else do;
MPRINT(EM_DIAGRAM):   else do;
79413     +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
79414     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
79415     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
79416     +   end;
MPRINT(EM_DIAGRAM):   end;
79417     +end;
MPRINT(EM_DIAGRAM):   end;
79418     +
79419     +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
79420     +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
79421     +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
79422     +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
79423     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
79424     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
79425     +end;
MPRINT(EM_DIAGRAM):   end;
79426     +else do;
MPRINT(EM_DIAGRAM):   else do;
79427     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
79428     +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
79429     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
79430     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
79431     +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
79432     +   end;
MPRINT(EM_DIAGRAM):   end;
79433     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
79434     +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
79435     +   end;
MPRINT(EM_DIAGRAM):   end;
79436     +   else do;
MPRINT(EM_DIAGRAM):   else do;
79437     +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
79438     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
79439     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
79440     +   end;
MPRINT(EM_DIAGRAM):   end;
79441     +end;
MPRINT(EM_DIAGRAM):   end;
79442     +
79443     +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
79444     +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
79445     +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
79446     +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
79447     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
79448     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
79449     +end;
MPRINT(EM_DIAGRAM):   end;
79450     +else do;
MPRINT(EM_DIAGRAM):   else do;
79451     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
79452     +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
79453     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
79454     +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
79455     +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
79456     +   end;
MPRINT(EM_DIAGRAM):   end;
79457     +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
79458     +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
79459     +   end;
MPRINT(EM_DIAGRAM):   end;
79460     +   else do;
MPRINT(EM_DIAGRAM):   else do;
79461     +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
79462     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
79463     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
79464     +   end;
MPRINT(EM_DIAGRAM):   end;
79465     +end;
MPRINT(EM_DIAGRAM):   end;
79466     +
79467     +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
79468     +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
79469     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
79470     +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
79471     +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
79472     +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
79473     +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
79474     +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
79475     +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
79476     +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
79477     +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
79478     +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
79479     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
79480     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
79481     +end;
MPRINT(EM_DIAGRAM):   end;
79482     +else do;
MPRINT(EM_DIAGRAM):   else do;
79483     +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
79484     +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
79485     +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
79486     +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
79487     +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
79488     +   end;
MPRINT(EM_DIAGRAM):   end;
79489     +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
79490     +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
79491     +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
79492     +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
79493     +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
79494     +   end;
MPRINT(EM_DIAGRAM):   end;
79495     +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
79496     +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
79497     +   end;
MPRINT(EM_DIAGRAM):   end;
79498     +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
79499     +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
79500     +   end;
MPRINT(EM_DIAGRAM):   end;
79501     +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
79502     +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
79503     +   end;
MPRINT(EM_DIAGRAM):   end;
79504     +   else do;
MPRINT(EM_DIAGRAM):   else do;
79505     +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
79506     +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
79507     +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
79508     +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
79509     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
79510     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
79511     +   end;
MPRINT(EM_DIAGRAM):   end;
79512     +end;
MPRINT(EM_DIAGRAM):   end;
79513     +
79514     +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
79515     +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
79516     +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
79517     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
79518     +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
79519     +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
79520     +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
79521     +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
79522     +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
79523     +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
79524     +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
79525     +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
79526     +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
79527     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
79528     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
79529     +end;
MPRINT(EM_DIAGRAM):   end;
79530     +else do;
MPRINT(EM_DIAGRAM):   else do;
79531     +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
79532     +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
79533     +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
79534     +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
79535     +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
79536     +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
79537     +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
79538     +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
79539     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
79540     +         end;
MPRINT(EM_DIAGRAM):   end;
79541     +         else do;
MPRINT(EM_DIAGRAM):   else do;
79542     +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
79543     +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
79544     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
79545     +            end;
MPRINT(EM_DIAGRAM):   end;
79546     +         end;
MPRINT(EM_DIAGRAM):   end;
79547     +      end;
MPRINT(EM_DIAGRAM):   end;
79548     +      else do;
MPRINT(EM_DIAGRAM):   else do;
79549     +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
79550     +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
79551     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
79552     +         end;
MPRINT(EM_DIAGRAM):   end;
79553     +      end;
MPRINT(EM_DIAGRAM):   end;
79554     +   end;
MPRINT(EM_DIAGRAM):   end;
79555     +   else do;
MPRINT(EM_DIAGRAM):   else do;
79556     +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
79557     +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
79558     +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
79559     +      end;
MPRINT(EM_DIAGRAM):   end;
79560     +      else do;
MPRINT(EM_DIAGRAM):   else do;
79561     +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
79562     +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
79563     +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
79564     +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
79565     +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
79566     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
79567     +         end;
MPRINT(EM_DIAGRAM):   end;
79568     +      end;
MPRINT(EM_DIAGRAM):   end;
79569     +   end;
MPRINT(EM_DIAGRAM):   end;
79570     +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
79571     +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
79572     +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
79573     +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
79574     +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
79575     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
79576     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
79577     +   end;
MPRINT(EM_DIAGRAM):   end;
79578     +end;
MPRINT(EM_DIAGRAM):   end;
79579     +
79580     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
79581     +*** Checking missing input Interval
79582     +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
79583     +
79584     +IF NMISS(
79585     +   AcceptedCmpTotal ,
79586     +   Age ,
79587     +   Frq ,
79588     +   Income ,
79589     +   Kidhome ,
79590     +   Mnt ,
79591     +   MntFishProducts ,
79592     +   MntFruits ,
79593     +   MntGoldProds ,
79594     +   MntMeatProducts ,
79595     +   MntSweetProducts ,
79596     +   MntWines ,
79597     +   MonthsAsCustomer ,
79598     +   NumCatalogPurchases ,
79599     +   NumDealsPurchases ,
79600     +   NumDistPurchases ,
79601     +   NumStorePurchases ,
79602     +   NumWebPurchases ,
79603     +   NumWebVisitsMonth ,
79604     +   RFMstat ,
79605     +   RMntFrq ,
79606     +   Recency ,
79607     +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
79608     +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
79609     +
79610     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
79611     +END;
MPRINT(EM_DIAGRAM):   END;
79612     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
79613     +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
79614     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
79615     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
79616     +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
79617     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
79618     +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
79619     +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
79620     +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
79621     +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
79622     +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
79623     +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
79624     +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
79625     +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
79626     +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
79627     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
79628     +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
79629     +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
79630     +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
79631     +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
79632     +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
79633     +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
79634     +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
79635     +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
79636     +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
79637     +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
79638     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
79639     +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
79640     +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
79641     +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
79642     +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
79643     +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
79644     +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
79645     +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
79646     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
79647     +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
79648     +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
79649     +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
79650     +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
79651     +END;
MPRINT(EM_DIAGRAM):   END;
79652     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
79653     +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
79654     +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
79655     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
79656     +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
79657     +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
79658     +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
79659     +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
79660     +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
79661     +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
79662     +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
79663     +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
79664     +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
79665     +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
79666     +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
79667     +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
79668     +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
79669     +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
79670     +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
79671     +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
79672     +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
79673     +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
79674     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
79675     +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
79676     +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
79677     +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
79678     +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
79679     +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
79680     +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
79681     +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
79682     +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
79683     +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
79684     +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
79685     +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
79686     +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
79687     +   ELSE S_NumCatalogPurchases
79688     +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
79689     +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
79690     +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
79691     +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
79692     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
79693     +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
79694     +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
79695     +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
79696     +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
79697     +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
79698     +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
79699     +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
79700     +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
79701     +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
79702     +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
79703     +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
79704     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
79705     +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
79706     +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
79707     +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
79708     +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
79709     +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
79710     +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
79711     +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
79712     +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
79713     +END;
MPRINT(EM_DIAGRAM):   END;
79714     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
79715     +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
79716     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
79717     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
79718     +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
79719     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
79720     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
79721     +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
79722     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
79723     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
79724     +   H11  =     0.13594465912127 * S_AcceptedCmpTotal  +    -0.04369874222877 *
79725     +        S_Age  +     -0.0222974124172 * S_Frq  +    -0.11043551468483 *
79726     +        S_Income  +    -0.32248758927071 * S_Kidhome
79727     +          +      0.0776161679259 * S_Mnt  +    -0.08725654580836 *
79728     +        S_MntFishProducts  +     0.14236031403157 * S_MntFruits
79729     +          +    -0.48581570899412 * S_MntGoldProds  +     0.03414406983139 *
79730     +        S_MntMeatProducts  +    -0.23271736394479 * S_MntSweetProducts
79731     +          +     0.43105893695077 * S_MntWines  +     0.31123874593742 *
79732     +        S_MonthsAsCustomer  +    -0.19669815006873 * S_NumCatalogPurchases
79733     +          +    -0.68207513361313 * S_NumDealsPurchases
79734     +          +    -0.37964850256921 * S_NumDistPurchases
79735     +          +     0.36066480603854 * S_NumStorePurchases
79736     +          +     0.25966011307033 * S_NumWebPurchases
79737     +          +    -0.03958464718959 * S_NumWebVisitsMonth
79738     +          +    -0.12441133162569 * S_RFMstat  +     0.05838942731159 *
79739     +        S_RMntFrq  +      0.2807801943237 * S_Recency
79740     +          +    -0.10186253847778 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.13594465912127 * S_AcceptedCmpTotal + -0.04369874222877 * S_Age 
+ -0.0222974124172 * S_Frq + -0.11043551468483 * S_Income + -0.32248758927071 * S_Kidhome + 
0.0776161679259 * S_Mnt + -0.08725654580836 * S_MntFishProducts + 0.14236031403157 * 
S_MntFruits + -0.48581570899412 * S_MntGoldProds + 0.03414406983139 * S_MntMeatProducts + 
-0.23271736394479 * S_MntSweetProducts + 0.43105893695077 * S_MntWines + 0.31123874593742 * 
S_MonthsAsCustomer + -0.19669815006873 * S_NumCatalogPurchases + -0.68207513361313 * 
S_NumDealsPurchases + -0.37964850256921 * S_NumDistPurchases + 0.36066480603854 * 
S_NumStorePurchases + 0.25966011307033 * S_NumWebPurchases + -0.03958464718959 * 
S_NumWebVisitsMonth + -0.12441133162569 * S_RFMstat + 0.05838942731159 * S_RMntFrq + 
0.2807801943237 * S_Recency + -0.10186253847778 * S_Teenhome ;
79741     +   H12  =     0.03443433887324 * S_AcceptedCmpTotal  +    -0.33034112884719 *
79742     +        S_Age  +    -0.29426561048486 * S_Frq  +      0.1259913339118 *
79743     +        S_Income  +    -0.01525271628925 * S_Kidhome
79744     +          +     0.12125196820394 * S_Mnt  +     0.27499561817138 *
79745     +        S_MntFishProducts  +     0.02702998039497 * S_MntFruits
79746     +          +     0.19117237676118 * S_MntGoldProds  +     0.14988798454777 *
79747     +        S_MntMeatProducts  +    -0.12004881951738 * S_MntSweetProducts
79748     +          +     0.21492388287889 * S_MntWines  +    -0.32645982553718 *
79749     +        S_MonthsAsCustomer  +     0.33162536777041 * S_NumCatalogPurchases
79750     +          +    -0.05060212016961 * S_NumDealsPurchases
79751     +          +    -0.14809619066524 * S_NumDistPurchases
79752     +          +    -0.02428798408125 * S_NumStorePurchases
79753     +          +     0.05554695337353 * S_NumWebPurchases
79754     +          +     -0.3347797414912 * S_NumWebVisitsMonth
79755     +          +    -0.08694305340873 * S_RFMstat  +    -0.34566171030649 *
79756     +        S_RMntFrq  +     0.34878481829389 * S_Recency
79757     +          +     0.10894516705031 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.03443433887324 * S_AcceptedCmpTotal + -0.33034112884719 * S_Age 
+ -0.29426561048486 * S_Frq + 0.1259913339118 * S_Income + -0.01525271628925 * S_Kidhome + 
0.12125196820394 * S_Mnt + 0.27499561817138 * S_MntFishProducts + 0.02702998039497 * 
S_MntFruits + 0.19117237676118 * S_MntGoldProds + 0.14988798454777 * S_MntMeatProducts + 
-0.12004881951738 * S_MntSweetProducts + 0.21492388287889 * S_MntWines + -0.32645982553718 * 
S_MonthsAsCustomer + 0.33162536777041 * S_NumCatalogPurchases + -0.05060212016961 * 
S_NumDealsPurchases + -0.14809619066524 * S_NumDistPurchases + -0.02428798408125 * 
S_NumStorePurchases + 0.05554695337353 * S_NumWebPurchases + -0.3347797414912 * 
S_NumWebVisitsMonth + -0.08694305340873 * S_RFMstat + -0.34566171030649 * S_RMntFrq + 
0.34878481829389 * S_Recency + 0.10894516705031 * S_Teenhome ;
79758     +   H13  =     0.00370096998686 * S_AcceptedCmpTotal  +    -0.51953611125691 *
79759     +        S_Age  +     0.17877016433586 * S_Frq  +     0.06789251642015 *
79760     +        S_Income  +    -0.05479760920776 * S_Kidhome
79761     +          +    -0.03872422009017 * S_Mnt  +    -0.14541111406951 *
79762     +        S_MntFishProducts  +     0.02855123883129 * S_MntFruits
79763     +          +     0.25306699654279 * S_MntGoldProds  +     0.08795222920616 *
79764     +        S_MntMeatProducts  +    -0.02903225924096 * S_MntSweetProducts
79765     +          +     0.15553330295402 * S_MntWines  +     0.02888022983016 *
79766     +        S_MonthsAsCustomer  +    -0.17290950123626 * S_NumCatalogPurchases
79767     +          +     0.18029447475323 * S_NumDealsPurchases
79768     +          +     0.05934542805435 * S_NumDistPurchases
79769     +          +     0.11232970412862 * S_NumStorePurchases
79770     +          +    -0.10916601726159 * S_NumWebPurchases
79771     +          +    -0.01910812243665 * S_NumWebVisitsMonth
79772     +          +    -0.21344753217364 * S_RFMstat  +      0.1645823437477 *
79773     +        S_RMntFrq  +    -0.40799689263706 * S_Recency
79774     +          +     0.02511588992095 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = 0.00370096998686 * S_AcceptedCmpTotal + -0.51953611125691 * S_Age 
+ 0.17877016433586 * S_Frq + 0.06789251642015 * S_Income + -0.05479760920776 * S_Kidhome + 
-0.03872422009017 * S_Mnt + -0.14541111406951 * S_MntFishProducts + 0.02855123883129 * 
S_MntFruits + 0.25306699654279 * S_MntGoldProds + 0.08795222920616 * S_MntMeatProducts + 
-0.02903225924096 * S_MntSweetProducts + 0.15553330295402 * S_MntWines + 0.02888022983016 * 
S_MonthsAsCustomer + -0.17290950123626 * S_NumCatalogPurchases + 0.18029447475323 * 
S_NumDealsPurchases + 0.05934542805435 * S_NumDistPurchases + 0.11232970412862 * 
S_NumStorePurchases + -0.10916601726159 * S_NumWebPurchases + -0.01910812243665 * 
S_NumWebVisitsMonth + -0.21344753217364 * S_RFMstat + 0.1645823437477 * S_RMntFrq + 
-0.40799689263706 * S_Recency + 0.02511588992095 * S_Teenhome ;
79775     +   H14  =    -0.61829421083246 * S_AcceptedCmpTotal  +    -0.16873052249719 *
79776     +        S_Age  +     0.13439351408573 * S_Frq  +    -0.50103344614666 *
79777     +        S_Income  +     0.31726096463976 * S_Kidhome
79778     +          +    -0.15181042208759 * S_Mnt  +     0.31922880035738 *
79779     +        S_MntFishProducts  +     0.09386333655585 * S_MntFruits
79780     +          +    -0.12620631685892 * S_MntGoldProds  +    -0.92555808639473 *
79781     +        S_MntMeatProducts  +    -0.15556710025124 * S_MntSweetProducts
79782     +          +     0.59625872106317 * S_MntWines  +    -0.14105032907988 *
79783     +        S_MonthsAsCustomer  +    -0.27105883046781 * S_NumCatalogPurchases
79784     +          +    -0.05889648319294 * S_NumDealsPurchases
79785     +          +     0.04297768152043 * S_NumDistPurchases
79786     +          +     0.08289772168464 * S_NumStorePurchases
79787     +          +     0.02925451736459 * S_NumWebPurchases
79788     +          +    -0.34806744064693 * S_NumWebVisitsMonth
79789     +          +    -0.10075155542626 * S_RFMstat  +    -0.54230386384017 *
79790     +        S_RMntFrq  +     0.54567939140523 * S_Recency
79791     +          +     0.75126712310981 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = -0.61829421083246 * S_AcceptedCmpTotal + -0.16873052249719 * S_Age 
+ 0.13439351408573 * S_Frq + -0.50103344614666 * S_Income + 0.31726096463976 * S_Kidhome + 
-0.15181042208759 * S_Mnt + 0.31922880035738 * S_MntFishProducts + 0.09386333655585 * 
S_MntFruits + -0.12620631685892 * S_MntGoldProds + -0.92555808639473 * S_MntMeatProducts + 
-0.15556710025124 * S_MntSweetProducts + 0.59625872106317 * S_MntWines + -0.14105032907988 * 
S_MonthsAsCustomer + -0.27105883046781 * S_NumCatalogPurchases + -0.05889648319294 * 
S_NumDealsPurchases + 0.04297768152043 * S_NumDistPurchases + 0.08289772168464 * 
S_NumStorePurchases + 0.02925451736459 * S_NumWebPurchases + -0.34806744064693 * 
S_NumWebVisitsMonth + -0.10075155542626 * S_RFMstat + -0.54230386384017 * S_RMntFrq + 
0.54567939140523 * S_Recency + 0.75126712310981 * S_Teenhome ;
79792     +   H15  =     0.47250221965687 * S_AcceptedCmpTotal  +    -0.07487325745499 *
79793     +        S_Age  +      0.0382122049104 * S_Frq  +     0.55347292090838 *
79794     +        S_Income  +     -0.1831746721838 * S_Kidhome
79795     +          +    -0.12974904479016 * S_Mnt  +    -0.03773564357475 *
79796     +        S_MntFishProducts  +    -0.08740721632052 * S_MntFruits
79797     +          +    -0.10157053454184 * S_MntGoldProds  +     0.52457296443385 *
79798     +        S_MntMeatProducts  +    -0.13287009184486 * S_MntSweetProducts
79799     +          +    -0.37745748357546 * S_MntWines  +    -0.04143657431262 *
79800     +        S_MonthsAsCustomer  +     0.67758682109997 * S_NumCatalogPurchases
79801     +          +     0.46814119938755 * S_NumDealsPurchases
79802     +          +     0.03182241038425 * S_NumDistPurchases
79803     +          +    -0.51911846047007 * S_NumStorePurchases
79804     +          +    -0.53954754105242 * S_NumWebPurchases
79805     +          +     1.07208473057077 * S_NumWebVisitsMonth
79806     +          +     0.12556098363101 * S_RFMstat  +    -0.05748040855256 *
79807     +        S_RMntFrq  +    -0.95916513053649 * S_Recency
79808     +          +    -0.24142268692108 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = 0.47250221965687 * S_AcceptedCmpTotal + -0.07487325745499 * S_Age 
+ 0.0382122049104 * S_Frq + 0.55347292090838 * S_Income + -0.1831746721838 * S_Kidhome + 
-0.12974904479016 * S_Mnt + -0.03773564357475 * S_MntFishProducts + -0.08740721632052 * 
S_MntFruits + -0.10157053454184 * S_MntGoldProds + 0.52457296443385 * S_MntMeatProducts + 
-0.13287009184486 * S_MntSweetProducts + -0.37745748357546 * S_MntWines + -0.04143657431262 * 
S_MonthsAsCustomer + 0.67758682109997 * S_NumCatalogPurchases + 0.46814119938755 * 
S_NumDealsPurchases + 0.03182241038425 * S_NumDistPurchases + -0.51911846047007 * 
S_NumStorePurchases + -0.53954754105242 * S_NumWebPurchases + 1.07208473057077 * 
S_NumWebVisitsMonth + 0.12556098363101 * S_RFMstat + -0.05748040855256 * S_RMntFrq + 
-0.95916513053649 * S_Recency + -0.24142268692108 * S_Teenhome ;
79809     +   H11  = H11  +      0.0203211213932 * AcceptedCmp10
79810     +          +    -0.24671835063904 * AcceptedCmp20  +    -0.16470646765907 *
79811     +        AcceptedCmp30  +     -0.4099897223583 * AcceptedCmp40
79812     +          +    -0.11336081432536 * AcceptedCmp50  +    -0.42649732753042 *
79813     +        Complain0  +     -0.0416551568273 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.0203211213932 * AcceptedCmp10 + -0.24671835063904 * 
AcceptedCmp20 + -0.16470646765907 * AcceptedCmp30 + -0.4099897223583 * AcceptedCmp40 + 
-0.11336081432536 * AcceptedCmp50 + -0.42649732753042 * Complain0 + -0.0416551568273 * 
HigherEducationBinary0 ;
79814     +   H12  = H12  +     0.02213559506685 * AcceptedCmp10
79815     +          +      0.0220571091041 * AcceptedCmp20  +     0.17399856069521 *
79816     +        AcceptedCmp30  +    -0.18257604858416 * AcceptedCmp40
79817     +          +    -0.18091572749617 * AcceptedCmp50  +     0.05174557804497 *
79818     +        Complain0  +    -0.05809342634244 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.02213559506685 * AcceptedCmp10 + 0.0220571091041 * 
AcceptedCmp20 + 0.17399856069521 * AcceptedCmp30 + -0.18257604858416 * AcceptedCmp40 + 
-0.18091572749617 * AcceptedCmp50 + 0.05174557804497 * Complain0 + -0.05809342634244 * 
HigherEducationBinary0 ;
79819     +   H13  = H13  +     0.18240929240485 * AcceptedCmp10
79820     +          +     0.08046156423197 * AcceptedCmp20  +    -0.09196288275429 *
79821     +        AcceptedCmp30  +     0.22693642674212 * AcceptedCmp40
79822     +          +    -0.22127877339648 * AcceptedCmp50  +     0.22787694199297 *
79823     +        Complain0  +    -0.20447728360836 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.18240929240485 * AcceptedCmp10 + 0.08046156423197 * 
AcceptedCmp20 + -0.09196288275429 * AcceptedCmp30 + 0.22693642674212 * AcceptedCmp40 + 
-0.22127877339648 * AcceptedCmp50 + 0.22787694199297 * Complain0 + -0.20447728360836 * 
HigherEducationBinary0 ;
79824     +   H14  = H14  +     0.15760334306304 * AcceptedCmp10
79825     +          +     0.25177195217647 * AcceptedCmp20  +     0.58646837477387 *
79826     +        AcceptedCmp30  +     0.35808865186096 * AcceptedCmp40
79827     +          +     0.24279152213079 * AcceptedCmp50  +    -0.03682926397711 *
79828     +        Complain0  +    -0.42398917474831 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.15760334306304 * AcceptedCmp10 + 0.25177195217647 * 
AcceptedCmp20 + 0.58646837477387 * AcceptedCmp30 + 0.35808865186096 * AcceptedCmp40 + 
0.24279152213079 * AcceptedCmp50 + -0.03682926397711 * Complain0 + -0.42398917474831 * 
HigherEducationBinary0 ;
79829     +   H15  = H15  +    -0.09968006776007 * AcceptedCmp10
79830     +          +     0.09022158834293 * AcceptedCmp20  +    -0.10842101964798 *
79831     +        AcceptedCmp30  +    -0.13099813140438 * AcceptedCmp40
79832     +          +    -0.22167423223515 * AcceptedCmp50  +    -0.04428927537039 *
79833     +        Complain0  +    -0.26182339546076 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.09968006776007 * AcceptedCmp10 + 0.09022158834293 * 
AcceptedCmp20 + -0.10842101964798 * AcceptedCmp30 + -0.13099813140438 * AcceptedCmp40 + 
-0.22167423223515 * AcceptedCmp50 + -0.04428927537039 * Complain0 + -0.26182339546076 * 
HigherEducationBinary0 ;
79834     +   H11  = H11  +    -0.01959847584448 * Education2n_Cycle
79835     +          +    -0.23759194699722 * EducationBasic  +    -0.09694759635569 *
79836     +        EducationGraduation  +     0.16905118469563 * EducationMaster
79837     +          +     0.09920310143649 * Marital_StatusDivorced
79838     +          +    -0.03469710828426 * Marital_StatusMarried
79839     +          +     0.04524816569771 * Marital_StatusSingle
79840     +          +    -0.00616333143464 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.01959847584448 * Education2n_Cycle + -0.23759194699722 * 
EducationBasic + -0.09694759635569 * EducationGraduation + 0.16905118469563 * EducationMaster 
+ 0.09920310143649 * Marital_StatusDivorced + -0.03469710828426 * Marital_StatusMarried + 
0.04524816569771 * Marital_StatusSingle + -0.00616333143464 * Marital_StatusTogether ;
79841     +   H12  = H12  +     0.05721184485318 * Education2n_Cycle
79842     +          +    -0.04983755787599 * EducationBasic  +    -0.05003868555341 *
79843     +        EducationGraduation  +     0.14755035027548 * EducationMaster
79844     +          +     0.15544361606364 * Marital_StatusDivorced
79845     +          +    -0.04549024479337 * Marital_StatusMarried
79846     +          +    -0.22192209058914 * Marital_StatusSingle
79847     +          +     0.27320991984549 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.05721184485318 * Education2n_Cycle + -0.04983755787599 * 
EducationBasic + -0.05003868555341 * EducationGraduation + 0.14755035027548 * EducationMaster 
+ 0.15544361606364 * Marital_StatusDivorced + -0.04549024479337 * Marital_StatusMarried + 
-0.22192209058914 * Marital_StatusSingle + 0.27320991984549 * Marital_StatusTogether ;
79848     +   H13  = H13  +     0.00075033011137 * Education2n_Cycle
79849     +          +    -0.11503072939964 * EducationBasic  +     -0.4136153442156 *
79850     +        EducationGraduation  +    -0.10472711185558 * EducationMaster
79851     +          +     0.06080683366118 * Marital_StatusDivorced
79852     +          +    -0.29971612034722 * Marital_StatusMarried
79853     +          +    -0.28960939443613 * Marital_StatusSingle
79854     +          +     0.03465872178588 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.00075033011137 * Education2n_Cycle + -0.11503072939964 * 
EducationBasic + -0.4136153442156 * EducationGraduation + -0.10472711185558 * EducationMaster 
+ 0.06080683366118 * Marital_StatusDivorced + -0.29971612034722 * Marital_StatusMarried + 
-0.28960939443613 * Marital_StatusSingle + 0.03465872178588 * Marital_StatusTogether ;
79855     +   H14  = H14  +      0.0962498664542 * Education2n_Cycle
79856     +          +     0.07755075978175 * EducationBasic  +     0.06918862821828 *
79857     +        EducationGraduation  +    -0.19451337075589 * EducationMaster
79858     +          +    -0.27877133922419 * Marital_StatusDivorced
79859     +          +     0.25867038797563 * Marital_StatusMarried
79860     +          +    -0.17854477297284 * Marital_StatusSingle
79861     +          +     0.35391632150142 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.0962498664542 * Education2n_Cycle + 0.07755075978175 * 
EducationBasic + 0.06918862821828 * EducationGraduation + -0.19451337075589 * EducationMaster 
+ -0.27877133922419 * Marital_StatusDivorced + 0.25867038797563 * Marital_StatusMarried + 
-0.17854477297284 * Marital_StatusSingle + 0.35391632150142 * Marital_StatusTogether ;
79862     +   H15  = H15  +     0.17326731400139 * Education2n_Cycle
79863     +          +    -0.09586091586548 * EducationBasic  +     0.08664696951776 *
79864     +        EducationGraduation  +    -0.05191600320717 * EducationMaster
79865     +          +     0.30169513410559 * Marital_StatusDivorced
79866     +          +    -0.33752566748869 * Marital_StatusMarried
79867     +          +     0.43876556032036 * Marital_StatusSingle
79868     +          +    -0.37953091676086 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.17326731400139 * Education2n_Cycle + -0.09586091586548 * 
EducationBasic + 0.08664696951776 * EducationGraduation + -0.05191600320717 * EducationMaster 
+ 0.30169513410559 * Marital_StatusDivorced + -0.33752566748869 * Marital_StatusMarried + 
0.43876556032036 * Marital_StatusSingle + -0.37953091676086 * Marital_StatusTogether ;
79869     +   H11  =     1.66971140546954 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 1.66971140546954 + H11 ;
79870     +   H12  =    -2.00390550356371 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -2.00390550356371 + H12 ;
79871     +   H13  =    -1.90761416182049 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -1.90761416182049 + H13 ;
79872     +   H14  =     0.27067485542842 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.27067485542842 + H14 ;
79873     +   H15  =       -0.78426510761 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -0.78426510761 + H15 ;
79874     +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
79875     +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
79876     +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
79877     +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
79878     +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
79879     +END;
MPRINT(EM_DIAGRAM):   END;
79880     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
79881     +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
79882     +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
79883     +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
79884     +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
79885     +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
79886     +END;
MPRINT(EM_DIAGRAM):   END;
79887     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
79888     +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
79889     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
79890     +
79891     +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
79892     +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
79893     +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
79894     +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
79895     +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
79896     +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
79897     +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
79898     +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
79899     +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
79900     +end;
MPRINT(EM_DIAGRAM):   end;
79901     +else do;
MPRINT(EM_DIAGRAM):   else do;
79902     +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
79903     +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
79904     +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
79905     +   end;
MPRINT(EM_DIAGRAM):   end;
79906     +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
79907     +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
79908     +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
79909     +   end;
MPRINT(EM_DIAGRAM):   end;
79910     +   else do;
MPRINT(EM_DIAGRAM):   else do;
79911     +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
79912     +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
79913     +   end;
MPRINT(EM_DIAGRAM):   end;
79914     +end;
MPRINT(EM_DIAGRAM):   end;
79915     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
79916     +   P_DepVar1  =    -0.93198210671128 * H11  +    -0.73339280381433 * H12
79917     +          +     0.55985350295663 * H13  +    -2.31937062548345 * H14
79918     +          +     3.74909670300365 * H15 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.93198210671128 * H11 + -0.73339280381433 * H12 + 
0.55985350295663 * H13 + -2.31937062548345 * H14 + 3.74909670300365 * H15 ;
79919     +   P_DepVar1  =    -1.27659529547813 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.27659529547813 + P_DepVar1 ;
79920     +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
79921     +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
79922     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
79923     +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
79924     +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
79925     +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
79926     +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
79927     +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
79928     +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
79929     +END;
MPRINT(EM_DIAGRAM):   END;
79930     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
79931     +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
79932     +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
79933     +END;
MPRINT(EM_DIAGRAM):   END;
79934     +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
79935     +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
79936     +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
79937     +END;
MPRINT(EM_DIAGRAM):   END;
79938     +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
79939     +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
79940     +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
79941     +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
79942     +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
79943     +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
79944     +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
79945     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
79946     +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
79947     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
79948     +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
79949     +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
79950     +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
79951     +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
79952     +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
79953     +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
79954     +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
79955     +END;
MPRINT(EM_DIAGRAM):   END;
79956     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
79957     +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
79958     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
79959     +drop
79960     +H11
79961     +H12
79962     +H13
79963     +H14
79964     +H15
79965     +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 ;
79966     +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
79967      run;

NOTE: DATA STEP view saved on file EMWS8.NEURAL7_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.META_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
79968      quit;
79969      filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
79970      filename emflow
79970    ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural7\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural7\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural7: Scoring VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
79971      *------------------------------------------------------------*;
79972      * Neural7: Scoring VALIDATE data;
79973      *------------------------------------------------------------*;
79974      data EMWS8.Neural7_VALIDATE
79975      / view=EMWS8.Neural7_VALIDATE
79976      ;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural7_VALIDATE / view=EMWS8.Neural7_VALIDATE ;
79977      set EMWS8.Meta_VALIDATE
79978      ;
MPRINT(EM_DIAGRAM):   set EMWS8.Meta_VALIDATE ;
79979      %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural7\EMFLOWSCORE.sas.
79980     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
79981     +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
79982     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
79983     +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
79984     + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
79985     + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
79986     + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
79987     + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
79988     + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
79989     + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
79990     + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
79991     +LENGTH _WARN_ $4
79992     +      F_DepVar  $ 12
79993     +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
79994     +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
79995     +
79996     +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
79997     +
79998     +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
79999     +
80000     +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
80001     +
80002     +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
80003     +
80004     +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
80005     +
80006     +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
80007     +
80008     +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
80009     +
80010     +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
80011     +
80012     +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
80013     +
80014     +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
80015     +
80016     +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
80017     +
80018     +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
80019     +
80020     +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
80021     +
80022     +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
80023     +
80024     +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
80025     +
80026     +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
80027     +
80028     +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
80029     +
80030     +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
80031     +
80032     +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
80033     +
80034     +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
80035     +
80036     +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
80037     +
80038     +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
80039     +
80040     +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
80041     +
80042     +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
80043     +
80044     +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
80045     +
80046     +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
80047     +
80048     +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
80049     +
80050     +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
80051     +
80052     +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
80053     +
80054     +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
80055     +
80056     +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
80057     +
80058     +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
80059     +
80060     +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
80061     +
80062     +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
80063     +
80064     +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
80065     +
80066     +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
80067     +
80068     +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
80069     +
80070     +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
80071     +
80072     +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
80073     +
80074     +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
80075     +
80076     +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
80077     +
80078     +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
80079     +
80080     +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
80081     +
80082     +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
80083     +
80084     +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
80085     +
80086     +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
80087     +
80088     +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
80089     +
80090     +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
80091     +
80092     +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
80093     +
80094     +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
80095     +
80096     +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
80097     +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
80098     +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
80099     +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
80100     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
80101     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
80102     +end;
MPRINT(EM_DIAGRAM):   end;
80103     +else do;
MPRINT(EM_DIAGRAM):   else do;
80104     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
80105     +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
80106     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
80107     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
80108     +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
80109     +   end;
MPRINT(EM_DIAGRAM):   end;
80110     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
80111     +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
80112     +   end;
MPRINT(EM_DIAGRAM):   end;
80113     +   else do;
MPRINT(EM_DIAGRAM):   else do;
80114     +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
80115     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
80116     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
80117     +   end;
MPRINT(EM_DIAGRAM):   end;
80118     +end;
MPRINT(EM_DIAGRAM):   end;
80119     +
80120     +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
80121     +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
80122     +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
80123     +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
80124     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
80125     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
80126     +end;
MPRINT(EM_DIAGRAM):   end;
80127     +else do;
MPRINT(EM_DIAGRAM):   else do;
80128     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
80129     +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
80130     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
80131     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
80132     +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
80133     +   end;
MPRINT(EM_DIAGRAM):   end;
80134     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
80135     +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
80136     +   end;
MPRINT(EM_DIAGRAM):   end;
80137     +   else do;
MPRINT(EM_DIAGRAM):   else do;
80138     +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
80139     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
80140     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
80141     +   end;
MPRINT(EM_DIAGRAM):   end;
80142     +end;
MPRINT(EM_DIAGRAM):   end;
80143     +
80144     +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
80145     +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
80146     +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
80147     +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
80148     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
80149     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
80150     +end;
MPRINT(EM_DIAGRAM):   end;
80151     +else do;
MPRINT(EM_DIAGRAM):   else do;
80152     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
80153     +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
80154     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
80155     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
80156     +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
80157     +   end;
MPRINT(EM_DIAGRAM):   end;
80158     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
80159     +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
80160     +   end;
MPRINT(EM_DIAGRAM):   end;
80161     +   else do;
MPRINT(EM_DIAGRAM):   else do;
80162     +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
80163     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
80164     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
80165     +   end;
MPRINT(EM_DIAGRAM):   end;
80166     +end;
MPRINT(EM_DIAGRAM):   end;
80167     +
80168     +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
80169     +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
80170     +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
80171     +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
80172     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
80173     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
80174     +end;
MPRINT(EM_DIAGRAM):   end;
80175     +else do;
MPRINT(EM_DIAGRAM):   else do;
80176     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
80177     +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
80178     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
80179     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
80180     +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
80181     +   end;
MPRINT(EM_DIAGRAM):   end;
80182     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
80183     +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
80184     +   end;
MPRINT(EM_DIAGRAM):   end;
80185     +   else do;
MPRINT(EM_DIAGRAM):   else do;
80186     +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
80187     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
80188     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
80189     +   end;
MPRINT(EM_DIAGRAM):   end;
80190     +end;
MPRINT(EM_DIAGRAM):   end;
80191     +
80192     +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
80193     +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
80194     +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
80195     +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
80196     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
80197     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
80198     +end;
MPRINT(EM_DIAGRAM):   end;
80199     +else do;
MPRINT(EM_DIAGRAM):   else do;
80200     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
80201     +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
80202     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
80203     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
80204     +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
80205     +   end;
MPRINT(EM_DIAGRAM):   end;
80206     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
80207     +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
80208     +   end;
MPRINT(EM_DIAGRAM):   end;
80209     +   else do;
MPRINT(EM_DIAGRAM):   else do;
80210     +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
80211     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
80212     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
80213     +   end;
MPRINT(EM_DIAGRAM):   end;
80214     +end;
MPRINT(EM_DIAGRAM):   end;
80215     +
80216     +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
80217     +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
80218     +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
80219     +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
80220     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
80221     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
80222     +end;
MPRINT(EM_DIAGRAM):   end;
80223     +else do;
MPRINT(EM_DIAGRAM):   else do;
80224     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
80225     +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
80226     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
80227     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
80228     +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
80229     +   end;
MPRINT(EM_DIAGRAM):   end;
80230     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
80231     +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
80232     +   end;
MPRINT(EM_DIAGRAM):   end;
80233     +   else do;
MPRINT(EM_DIAGRAM):   else do;
80234     +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
80235     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
80236     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
80237     +   end;
MPRINT(EM_DIAGRAM):   end;
80238     +end;
MPRINT(EM_DIAGRAM):   end;
80239     +
80240     +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
80241     +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
80242     +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
80243     +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
80244     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
80245     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
80246     +end;
MPRINT(EM_DIAGRAM):   end;
80247     +else do;
MPRINT(EM_DIAGRAM):   else do;
80248     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
80249     +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
80250     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
80251     +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
80252     +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
80253     +   end;
MPRINT(EM_DIAGRAM):   end;
80254     +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
80255     +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
80256     +   end;
MPRINT(EM_DIAGRAM):   end;
80257     +   else do;
MPRINT(EM_DIAGRAM):   else do;
80258     +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
80259     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
80260     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
80261     +   end;
MPRINT(EM_DIAGRAM):   end;
80262     +end;
MPRINT(EM_DIAGRAM):   end;
80263     +
80264     +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
80265     +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
80266     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
80267     +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
80268     +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
80269     +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
80270     +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
80271     +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
80272     +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
80273     +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
80274     +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
80275     +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
80276     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
80277     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
80278     +end;
MPRINT(EM_DIAGRAM):   end;
80279     +else do;
MPRINT(EM_DIAGRAM):   else do;
80280     +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
80281     +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
80282     +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
80283     +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
80284     +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
80285     +   end;
MPRINT(EM_DIAGRAM):   end;
80286     +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
80287     +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
80288     +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
80289     +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
80290     +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
80291     +   end;
MPRINT(EM_DIAGRAM):   end;
80292     +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
80293     +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
80294     +   end;
MPRINT(EM_DIAGRAM):   end;
80295     +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
80296     +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
80297     +   end;
MPRINT(EM_DIAGRAM):   end;
80298     +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
80299     +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
80300     +   end;
MPRINT(EM_DIAGRAM):   end;
80301     +   else do;
MPRINT(EM_DIAGRAM):   else do;
80302     +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
80303     +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
80304     +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
80305     +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
80306     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
80307     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
80308     +   end;
MPRINT(EM_DIAGRAM):   end;
80309     +end;
MPRINT(EM_DIAGRAM):   end;
80310     +
80311     +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
80312     +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
80313     +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
80314     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
80315     +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
80316     +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
80317     +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
80318     +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
80319     +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
80320     +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
80321     +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
80322     +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
80323     +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
80324     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
80325     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
80326     +end;
MPRINT(EM_DIAGRAM):   end;
80327     +else do;
MPRINT(EM_DIAGRAM):   else do;
80328     +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
80329     +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
80330     +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
80331     +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
80332     +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
80333     +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
80334     +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
80335     +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
80336     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
80337     +         end;
MPRINT(EM_DIAGRAM):   end;
80338     +         else do;
MPRINT(EM_DIAGRAM):   else do;
80339     +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
80340     +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
80341     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
80342     +            end;
MPRINT(EM_DIAGRAM):   end;
80343     +         end;
MPRINT(EM_DIAGRAM):   end;
80344     +      end;
MPRINT(EM_DIAGRAM):   end;
80345     +      else do;
MPRINT(EM_DIAGRAM):   else do;
80346     +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
80347     +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
80348     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
80349     +         end;
MPRINT(EM_DIAGRAM):   end;
80350     +      end;
MPRINT(EM_DIAGRAM):   end;
80351     +   end;
MPRINT(EM_DIAGRAM):   end;
80352     +   else do;
MPRINT(EM_DIAGRAM):   else do;
80353     +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
80354     +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
80355     +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
80356     +      end;
MPRINT(EM_DIAGRAM):   end;
80357     +      else do;
MPRINT(EM_DIAGRAM):   else do;
80358     +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
80359     +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
80360     +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
80361     +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
80362     +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
80363     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
80364     +         end;
MPRINT(EM_DIAGRAM):   end;
80365     +      end;
MPRINT(EM_DIAGRAM):   end;
80366     +   end;
MPRINT(EM_DIAGRAM):   end;
80367     +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
80368     +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
80369     +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
80370     +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
80371     +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
80372     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
80373     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
80374     +   end;
MPRINT(EM_DIAGRAM):   end;
80375     +end;
MPRINT(EM_DIAGRAM):   end;
80376     +
80377     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
80378     +*** Checking missing input Interval
80379     +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
80380     +
80381     +IF NMISS(
80382     +   AcceptedCmpTotal ,
80383     +   Age ,
80384     +   Frq ,
80385     +   Income ,
80386     +   Kidhome ,
80387     +   Mnt ,
80388     +   MntFishProducts ,
80389     +   MntFruits ,
80390     +   MntGoldProds ,
80391     +   MntMeatProducts ,
80392     +   MntSweetProducts ,
80393     +   MntWines ,
80394     +   MonthsAsCustomer ,
80395     +   NumCatalogPurchases ,
80396     +   NumDealsPurchases ,
80397     +   NumDistPurchases ,
80398     +   NumStorePurchases ,
80399     +   NumWebPurchases ,
80400     +   NumWebVisitsMonth ,
80401     +   RFMstat ,
80402     +   RMntFrq ,
80403     +   Recency ,
80404     +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
80405     +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
80406     +
80407     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
80408     +END;
MPRINT(EM_DIAGRAM):   END;
80409     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
80410     +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
80411     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
80412     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
80413     +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
80414     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
80415     +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
80416     +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
80417     +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
80418     +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
80419     +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
80420     +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
80421     +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
80422     +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
80423     +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
80424     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
80425     +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
80426     +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
80427     +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
80428     +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
80429     +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
80430     +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
80431     +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
80432     +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
80433     +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
80434     +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
80435     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
80436     +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
80437     +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
80438     +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
80439     +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
80440     +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
80441     +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
80442     +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
80443     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
80444     +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
80445     +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
80446     +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
80447     +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
80448     +END;
MPRINT(EM_DIAGRAM):   END;
80449     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
80450     +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
80451     +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
80452     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
80453     +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
80454     +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
80455     +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
80456     +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
80457     +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
80458     +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
80459     +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
80460     +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
80461     +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
80462     +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
80463     +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
80464     +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
80465     +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
80466     +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
80467     +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
80468     +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
80469     +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
80470     +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
80471     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
80472     +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
80473     +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
80474     +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
80475     +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
80476     +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
80477     +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
80478     +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
80479     +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
80480     +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
80481     +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
80482     +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
80483     +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
80484     +   ELSE S_NumCatalogPurchases
80485     +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
80486     +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
80487     +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
80488     +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
80489     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
80490     +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
80491     +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
80492     +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
80493     +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
80494     +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
80495     +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
80496     +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
80497     +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
80498     +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
80499     +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
80500     +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
80501     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
80502     +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
80503     +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
80504     +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
80505     +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
80506     +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
80507     +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
80508     +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
80509     +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
80510     +END;
MPRINT(EM_DIAGRAM):   END;
80511     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
80512     +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
80513     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
80514     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
80515     +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
80516     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
80517     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
80518     +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
80519     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
80520     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
80521     +   H11  =     0.13594465912127 * S_AcceptedCmpTotal  +    -0.04369874222877 *
80522     +        S_Age  +     -0.0222974124172 * S_Frq  +    -0.11043551468483 *
80523     +        S_Income  +    -0.32248758927071 * S_Kidhome
80524     +          +      0.0776161679259 * S_Mnt  +    -0.08725654580836 *
80525     +        S_MntFishProducts  +     0.14236031403157 * S_MntFruits
80526     +          +    -0.48581570899412 * S_MntGoldProds  +     0.03414406983139 *
80527     +        S_MntMeatProducts  +    -0.23271736394479 * S_MntSweetProducts
80528     +          +     0.43105893695077 * S_MntWines  +     0.31123874593742 *
80529     +        S_MonthsAsCustomer  +    -0.19669815006873 * S_NumCatalogPurchases
80530     +          +    -0.68207513361313 * S_NumDealsPurchases
80531     +          +    -0.37964850256921 * S_NumDistPurchases
80532     +          +     0.36066480603854 * S_NumStorePurchases
80533     +          +     0.25966011307033 * S_NumWebPurchases
80534     +          +    -0.03958464718959 * S_NumWebVisitsMonth
80535     +          +    -0.12441133162569 * S_RFMstat  +     0.05838942731159 *
80536     +        S_RMntFrq  +      0.2807801943237 * S_Recency
80537     +          +    -0.10186253847778 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.13594465912127 * S_AcceptedCmpTotal + -0.04369874222877 * S_Age 
+ -0.0222974124172 * S_Frq + -0.11043551468483 * S_Income + -0.32248758927071 * S_Kidhome + 
0.0776161679259 * S_Mnt + -0.08725654580836 * S_MntFishProducts + 0.14236031403157 * 
S_MntFruits + -0.48581570899412 * S_MntGoldProds + 0.03414406983139 * S_MntMeatProducts + 
-0.23271736394479 * S_MntSweetProducts + 0.43105893695077 * S_MntWines + 0.31123874593742 * 
S_MonthsAsCustomer + -0.19669815006873 * S_NumCatalogPurchases + -0.68207513361313 * 
S_NumDealsPurchases + -0.37964850256921 * S_NumDistPurchases + 0.36066480603854 * 
S_NumStorePurchases + 0.25966011307033 * S_NumWebPurchases + -0.03958464718959 * 
S_NumWebVisitsMonth + -0.12441133162569 * S_RFMstat + 0.05838942731159 * S_RMntFrq + 
0.2807801943237 * S_Recency + -0.10186253847778 * S_Teenhome ;
80538     +   H12  =     0.03443433887324 * S_AcceptedCmpTotal  +    -0.33034112884719 *
80539     +        S_Age  +    -0.29426561048486 * S_Frq  +      0.1259913339118 *
80540     +        S_Income  +    -0.01525271628925 * S_Kidhome
80541     +          +     0.12125196820394 * S_Mnt  +     0.27499561817138 *
80542     +        S_MntFishProducts  +     0.02702998039497 * S_MntFruits
80543     +          +     0.19117237676118 * S_MntGoldProds  +     0.14988798454777 *
80544     +        S_MntMeatProducts  +    -0.12004881951738 * S_MntSweetProducts
80545     +          +     0.21492388287889 * S_MntWines  +    -0.32645982553718 *
80546     +        S_MonthsAsCustomer  +     0.33162536777041 * S_NumCatalogPurchases
80547     +          +    -0.05060212016961 * S_NumDealsPurchases
80548     +          +    -0.14809619066524 * S_NumDistPurchases
80549     +          +    -0.02428798408125 * S_NumStorePurchases
80550     +          +     0.05554695337353 * S_NumWebPurchases
80551     +          +     -0.3347797414912 * S_NumWebVisitsMonth
80552     +          +    -0.08694305340873 * S_RFMstat  +    -0.34566171030649 *
80553     +        S_RMntFrq  +     0.34878481829389 * S_Recency
80554     +          +     0.10894516705031 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.03443433887324 * S_AcceptedCmpTotal + -0.33034112884719 * S_Age 
+ -0.29426561048486 * S_Frq + 0.1259913339118 * S_Income + -0.01525271628925 * S_Kidhome + 
0.12125196820394 * S_Mnt + 0.27499561817138 * S_MntFishProducts + 0.02702998039497 * 
S_MntFruits + 0.19117237676118 * S_MntGoldProds + 0.14988798454777 * S_MntMeatProducts + 
-0.12004881951738 * S_MntSweetProducts + 0.21492388287889 * S_MntWines + -0.32645982553718 * 
S_MonthsAsCustomer + 0.33162536777041 * S_NumCatalogPurchases + -0.05060212016961 * 
S_NumDealsPurchases + -0.14809619066524 * S_NumDistPurchases + -0.02428798408125 * 
S_NumStorePurchases + 0.05554695337353 * S_NumWebPurchases + -0.3347797414912 * 
S_NumWebVisitsMonth + -0.08694305340873 * S_RFMstat + -0.34566171030649 * S_RMntFrq + 
0.34878481829389 * S_Recency + 0.10894516705031 * S_Teenhome ;
80555     +   H13  =     0.00370096998686 * S_AcceptedCmpTotal  +    -0.51953611125691 *
80556     +        S_Age  +     0.17877016433586 * S_Frq  +     0.06789251642015 *
80557     +        S_Income  +    -0.05479760920776 * S_Kidhome
80558     +          +    -0.03872422009017 * S_Mnt  +    -0.14541111406951 *
80559     +        S_MntFishProducts  +     0.02855123883129 * S_MntFruits
80560     +          +     0.25306699654279 * S_MntGoldProds  +     0.08795222920616 *
80561     +        S_MntMeatProducts  +    -0.02903225924096 * S_MntSweetProducts
80562     +          +     0.15553330295402 * S_MntWines  +     0.02888022983016 *
80563     +        S_MonthsAsCustomer  +    -0.17290950123626 * S_NumCatalogPurchases
80564     +          +     0.18029447475323 * S_NumDealsPurchases
80565     +          +     0.05934542805435 * S_NumDistPurchases
80566     +          +     0.11232970412862 * S_NumStorePurchases
80567     +          +    -0.10916601726159 * S_NumWebPurchases
80568     +          +    -0.01910812243665 * S_NumWebVisitsMonth
80569     +          +    -0.21344753217364 * S_RFMstat  +      0.1645823437477 *
80570     +        S_RMntFrq  +    -0.40799689263706 * S_Recency
80571     +          +     0.02511588992095 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = 0.00370096998686 * S_AcceptedCmpTotal + -0.51953611125691 * S_Age 
+ 0.17877016433586 * S_Frq + 0.06789251642015 * S_Income + -0.05479760920776 * S_Kidhome + 
-0.03872422009017 * S_Mnt + -0.14541111406951 * S_MntFishProducts + 0.02855123883129 * 
S_MntFruits + 0.25306699654279 * S_MntGoldProds + 0.08795222920616 * S_MntMeatProducts + 
-0.02903225924096 * S_MntSweetProducts + 0.15553330295402 * S_MntWines + 0.02888022983016 * 
S_MonthsAsCustomer + -0.17290950123626 * S_NumCatalogPurchases + 0.18029447475323 * 
The SAS System

S_NumDealsPurchases + 0.05934542805435 * S_NumDistPurchases + 0.11232970412862 * 
S_NumStorePurchases + -0.10916601726159 * S_NumWebPurchases + -0.01910812243665 * 
S_NumWebVisitsMonth + -0.21344753217364 * S_RFMstat + 0.1645823437477 * S_RMntFrq + 
-0.40799689263706 * S_Recency + 0.02511588992095 * S_Teenhome ;
80572     +   H14  =    -0.61829421083246 * S_AcceptedCmpTotal  +    -0.16873052249719 *
80573     +        S_Age  +     0.13439351408573 * S_Frq  +    -0.50103344614666 *
80574     +        S_Income  +     0.31726096463976 * S_Kidhome
80575     +          +    -0.15181042208759 * S_Mnt  +     0.31922880035738 *
80576     +        S_MntFishProducts  +     0.09386333655585 * S_MntFruits
80577     +          +    -0.12620631685892 * S_MntGoldProds  +    -0.92555808639473 *
80578     +        S_MntMeatProducts  +    -0.15556710025124 * S_MntSweetProducts
80579     +          +     0.59625872106317 * S_MntWines  +    -0.14105032907988 *
80580     +        S_MonthsAsCustomer  +    -0.27105883046781 * S_NumCatalogPurchases
80581     +          +    -0.05889648319294 * S_NumDealsPurchases
80582     +          +     0.04297768152043 * S_NumDistPurchases
80583     +          +     0.08289772168464 * S_NumStorePurchases
80584     +          +     0.02925451736459 * S_NumWebPurchases
80585     +          +    -0.34806744064693 * S_NumWebVisitsMonth
80586     +          +    -0.10075155542626 * S_RFMstat  +    -0.54230386384017 *
80587     +        S_RMntFrq  +     0.54567939140523 * S_Recency
80588     +          +     0.75126712310981 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = -0.61829421083246 * S_AcceptedCmpTotal + -0.16873052249719 * S_Age 
+ 0.13439351408573 * S_Frq + -0.50103344614666 * S_Income + 0.31726096463976 * S_Kidhome + 
-0.15181042208759 * S_Mnt + 0.31922880035738 * S_MntFishProducts + 0.09386333655585 * 
S_MntFruits + -0.12620631685892 * S_MntGoldProds + -0.92555808639473 * S_MntMeatProducts + 
-0.15556710025124 * S_MntSweetProducts + 0.59625872106317 * S_MntWines + -0.14105032907988 * 
S_MonthsAsCustomer + -0.27105883046781 * S_NumCatalogPurchases + -0.05889648319294 * 
S_NumDealsPurchases + 0.04297768152043 * S_NumDistPurchases + 0.08289772168464 * 
S_NumStorePurchases + 0.02925451736459 * S_NumWebPurchases + -0.34806744064693 * 
S_NumWebVisitsMonth + -0.10075155542626 * S_RFMstat + -0.54230386384017 * S_RMntFrq + 
0.54567939140523 * S_Recency + 0.75126712310981 * S_Teenhome ;
80589     +   H15  =     0.47250221965687 * S_AcceptedCmpTotal  +    -0.07487325745499 *
80590     +        S_Age  +      0.0382122049104 * S_Frq  +     0.55347292090838 *
80591     +        S_Income  +     -0.1831746721838 * S_Kidhome
80592     +          +    -0.12974904479016 * S_Mnt  +    -0.03773564357475 *
80593     +        S_MntFishProducts  +    -0.08740721632052 * S_MntFruits
80594     +          +    -0.10157053454184 * S_MntGoldProds  +     0.52457296443385 *
80595     +        S_MntMeatProducts  +    -0.13287009184486 * S_MntSweetProducts
80596     +          +    -0.37745748357546 * S_MntWines  +    -0.04143657431262 *
80597     +        S_MonthsAsCustomer  +     0.67758682109997 * S_NumCatalogPurchases
80598     +          +     0.46814119938755 * S_NumDealsPurchases
80599     +          +     0.03182241038425 * S_NumDistPurchases
80600     +          +    -0.51911846047007 * S_NumStorePurchases
80601     +          +    -0.53954754105242 * S_NumWebPurchases
80602     +          +     1.07208473057077 * S_NumWebVisitsMonth
80603     +          +     0.12556098363101 * S_RFMstat  +    -0.05748040855256 *
80604     +        S_RMntFrq  +    -0.95916513053649 * S_Recency
80605     +          +    -0.24142268692108 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = 0.47250221965687 * S_AcceptedCmpTotal + -0.07487325745499 * S_Age 
+ 0.0382122049104 * S_Frq + 0.55347292090838 * S_Income + -0.1831746721838 * S_Kidhome + 
-0.12974904479016 * S_Mnt + -0.03773564357475 * S_MntFishProducts + -0.08740721632052 * 
S_MntFruits + -0.10157053454184 * S_MntGoldProds + 0.52457296443385 * S_MntMeatProducts + 
-0.13287009184486 * S_MntSweetProducts + -0.37745748357546 * S_MntWines + -0.04143657431262 * 
S_MonthsAsCustomer + 0.67758682109997 * S_NumCatalogPurchases + 0.46814119938755 * 
S_NumDealsPurchases + 0.03182241038425 * S_NumDistPurchases + -0.51911846047007 * 
S_NumStorePurchases + -0.53954754105242 * S_NumWebPurchases + 1.07208473057077 * 
S_NumWebVisitsMonth + 0.12556098363101 * S_RFMstat + -0.05748040855256 * S_RMntFrq + 
-0.95916513053649 * S_Recency + -0.24142268692108 * S_Teenhome ;
80606     +   H11  = H11  +      0.0203211213932 * AcceptedCmp10
80607     +          +    -0.24671835063904 * AcceptedCmp20  +    -0.16470646765907 *
80608     +        AcceptedCmp30  +     -0.4099897223583 * AcceptedCmp40
80609     +          +    -0.11336081432536 * AcceptedCmp50  +    -0.42649732753042 *
80610     +        Complain0  +     -0.0416551568273 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.0203211213932 * AcceptedCmp10 + -0.24671835063904 * 
AcceptedCmp20 + -0.16470646765907 * AcceptedCmp30 + -0.4099897223583 * AcceptedCmp40 + 
-0.11336081432536 * AcceptedCmp50 + -0.42649732753042 * Complain0 + -0.0416551568273 * 
HigherEducationBinary0 ;
80611     +   H12  = H12  +     0.02213559506685 * AcceptedCmp10
80612     +          +      0.0220571091041 * AcceptedCmp20  +     0.17399856069521 *
80613     +        AcceptedCmp30  +    -0.18257604858416 * AcceptedCmp40
80614     +          +    -0.18091572749617 * AcceptedCmp50  +     0.05174557804497 *
80615     +        Complain0  +    -0.05809342634244 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.02213559506685 * AcceptedCmp10 + 0.0220571091041 * 
AcceptedCmp20 + 0.17399856069521 * AcceptedCmp30 + -0.18257604858416 * AcceptedCmp40 + 
-0.18091572749617 * AcceptedCmp50 + 0.05174557804497 * Complain0 + -0.05809342634244 * 
HigherEducationBinary0 ;
80616     +   H13  = H13  +     0.18240929240485 * AcceptedCmp10
80617     +          +     0.08046156423197 * AcceptedCmp20  +    -0.09196288275429 *
80618     +        AcceptedCmp30  +     0.22693642674212 * AcceptedCmp40
80619     +          +    -0.22127877339648 * AcceptedCmp50  +     0.22787694199297 *
80620     +        Complain0  +    -0.20447728360836 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.18240929240485 * AcceptedCmp10 + 0.08046156423197 * 
AcceptedCmp20 + -0.09196288275429 * AcceptedCmp30 + 0.22693642674212 * AcceptedCmp40 + 
-0.22127877339648 * AcceptedCmp50 + 0.22787694199297 * Complain0 + -0.20447728360836 * 
HigherEducationBinary0 ;
80621     +   H14  = H14  +     0.15760334306304 * AcceptedCmp10
80622     +          +     0.25177195217647 * AcceptedCmp20  +     0.58646837477387 *
80623     +        AcceptedCmp30  +     0.35808865186096 * AcceptedCmp40
80624     +          +     0.24279152213079 * AcceptedCmp50  +    -0.03682926397711 *
80625     +        Complain0  +    -0.42398917474831 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.15760334306304 * AcceptedCmp10 + 0.25177195217647 * 
AcceptedCmp20 + 0.58646837477387 * AcceptedCmp30 + 0.35808865186096 * AcceptedCmp40 + 
0.24279152213079 * AcceptedCmp50 + -0.03682926397711 * Complain0 + -0.42398917474831 * 
HigherEducationBinary0 ;
80626     +   H15  = H15  +    -0.09968006776007 * AcceptedCmp10
80627     +          +     0.09022158834293 * AcceptedCmp20  +    -0.10842101964798 *
80628     +        AcceptedCmp30  +    -0.13099813140438 * AcceptedCmp40
80629     +          +    -0.22167423223515 * AcceptedCmp50  +    -0.04428927537039 *
80630     +        Complain0  +    -0.26182339546076 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.09968006776007 * AcceptedCmp10 + 0.09022158834293 * 
AcceptedCmp20 + -0.10842101964798 * AcceptedCmp30 + -0.13099813140438 * AcceptedCmp40 + 
-0.22167423223515 * AcceptedCmp50 + -0.04428927537039 * Complain0 + -0.26182339546076 * 
HigherEducationBinary0 ;
80631     +   H11  = H11  +    -0.01959847584448 * Education2n_Cycle
80632     +          +    -0.23759194699722 * EducationBasic  +    -0.09694759635569 *
80633     +        EducationGraduation  +     0.16905118469563 * EducationMaster
80634     +          +     0.09920310143649 * Marital_StatusDivorced
80635     +          +    -0.03469710828426 * Marital_StatusMarried
80636     +          +     0.04524816569771 * Marital_StatusSingle
80637     +          +    -0.00616333143464 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.01959847584448 * Education2n_Cycle + -0.23759194699722 * 
EducationBasic + -0.09694759635569 * EducationGraduation + 0.16905118469563 * EducationMaster 
+ 0.09920310143649 * Marital_StatusDivorced + -0.03469710828426 * Marital_StatusMarried + 
0.04524816569771 * Marital_StatusSingle + -0.00616333143464 * Marital_StatusTogether ;
80638     +   H12  = H12  +     0.05721184485318 * Education2n_Cycle
80639     +          +    -0.04983755787599 * EducationBasic  +    -0.05003868555341 *
80640     +        EducationGraduation  +     0.14755035027548 * EducationMaster
80641     +          +     0.15544361606364 * Marital_StatusDivorced
80642     +          +    -0.04549024479337 * Marital_StatusMarried
80643     +          +    -0.22192209058914 * Marital_StatusSingle
80644     +          +     0.27320991984549 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.05721184485318 * Education2n_Cycle + -0.04983755787599 * 
EducationBasic + -0.05003868555341 * EducationGraduation + 0.14755035027548 * EducationMaster 
+ 0.15544361606364 * Marital_StatusDivorced + -0.04549024479337 * Marital_StatusMarried + 
-0.22192209058914 * Marital_StatusSingle + 0.27320991984549 * Marital_StatusTogether ;
80645     +   H13  = H13  +     0.00075033011137 * Education2n_Cycle
80646     +          +    -0.11503072939964 * EducationBasic  +     -0.4136153442156 *
80647     +        EducationGraduation  +    -0.10472711185558 * EducationMaster
80648     +          +     0.06080683366118 * Marital_StatusDivorced
80649     +          +    -0.29971612034722 * Marital_StatusMarried
80650     +          +    -0.28960939443613 * Marital_StatusSingle
80651     +          +     0.03465872178588 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.00075033011137 * Education2n_Cycle + -0.11503072939964 * 
EducationBasic + -0.4136153442156 * EducationGraduation + -0.10472711185558 * EducationMaster 
+ 0.06080683366118 * Marital_StatusDivorced + -0.29971612034722 * Marital_StatusMarried + 
-0.28960939443613 * Marital_StatusSingle + 0.03465872178588 * Marital_StatusTogether ;
80652     +   H14  = H14  +      0.0962498664542 * Education2n_Cycle
80653     +          +     0.07755075978175 * EducationBasic  +     0.06918862821828 *
80654     +        EducationGraduation  +    -0.19451337075589 * EducationMaster
80655     +          +    -0.27877133922419 * Marital_StatusDivorced
80656     +          +     0.25867038797563 * Marital_StatusMarried
80657     +          +    -0.17854477297284 * Marital_StatusSingle
80658     +          +     0.35391632150142 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.0962498664542 * Education2n_Cycle + 0.07755075978175 * 
EducationBasic + 0.06918862821828 * EducationGraduation + -0.19451337075589 * EducationMaster 
+ -0.27877133922419 * Marital_StatusDivorced + 0.25867038797563 * Marital_StatusMarried + 
-0.17854477297284 * Marital_StatusSingle + 0.35391632150142 * Marital_StatusTogether ;
80659     +   H15  = H15  +     0.17326731400139 * Education2n_Cycle
80660     +          +    -0.09586091586548 * EducationBasic  +     0.08664696951776 *
80661     +        EducationGraduation  +    -0.05191600320717 * EducationMaster
80662     +          +     0.30169513410559 * Marital_StatusDivorced
80663     +          +    -0.33752566748869 * Marital_StatusMarried
80664     +          +     0.43876556032036 * Marital_StatusSingle
80665     +          +    -0.37953091676086 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.17326731400139 * Education2n_Cycle + -0.09586091586548 * 
EducationBasic + 0.08664696951776 * EducationGraduation + -0.05191600320717 * EducationMaster 
+ 0.30169513410559 * Marital_StatusDivorced + -0.33752566748869 * Marital_StatusMarried + 
0.43876556032036 * Marital_StatusSingle + -0.37953091676086 * Marital_StatusTogether ;
80666     +   H11  =     1.66971140546954 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 1.66971140546954 + H11 ;
80667     +   H12  =    -2.00390550356371 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -2.00390550356371 + H12 ;
80668     +   H13  =    -1.90761416182049 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -1.90761416182049 + H13 ;
80669     +   H14  =     0.27067485542842 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.27067485542842 + H14 ;
80670     +   H15  =       -0.78426510761 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -0.78426510761 + H15 ;
80671     +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
80672     +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
80673     +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
80674     +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
80675     +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
80676     +END;
MPRINT(EM_DIAGRAM):   END;
80677     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
80678     +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
80679     +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
80680     +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
80681     +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
80682     +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
80683     +END;
MPRINT(EM_DIAGRAM):   END;
80684     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
80685     +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
80686     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
80687     +
80688     +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
80689     +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
80690     +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
80691     +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
80692     +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
80693     +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
80694     +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
80695     +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
80696     +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
80697     +end;
MPRINT(EM_DIAGRAM):   end;
80698     +else do;
MPRINT(EM_DIAGRAM):   else do;
80699     +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
80700     +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
80701     +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
80702     +   end;
MPRINT(EM_DIAGRAM):   end;
80703     +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
80704     +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
80705     +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
80706     +   end;
MPRINT(EM_DIAGRAM):   end;
80707     +   else do;
MPRINT(EM_DIAGRAM):   else do;
80708     +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
80709     +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
80710     +   end;
MPRINT(EM_DIAGRAM):   end;
80711     +end;
MPRINT(EM_DIAGRAM):   end;
80712     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
80713     +   P_DepVar1  =    -0.93198210671128 * H11  +    -0.73339280381433 * H12
80714     +          +     0.55985350295663 * H13  +    -2.31937062548345 * H14
80715     +          +     3.74909670300365 * H15 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.93198210671128 * H11 + -0.73339280381433 * H12 + 
0.55985350295663 * H13 + -2.31937062548345 * H14 + 3.74909670300365 * H15 ;
80716     +   P_DepVar1  =    -1.27659529547813 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.27659529547813 + P_DepVar1 ;
80717     +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
80718     +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
80719     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
80720     +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
80721     +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
80722     +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
80723     +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
80724     +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
80725     +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
80726     +END;
MPRINT(EM_DIAGRAM):   END;
80727     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
80728     +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
80729     +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
80730     +END;
MPRINT(EM_DIAGRAM):   END;
80731     +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
80732     +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
80733     +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
80734     +END;
MPRINT(EM_DIAGRAM):   END;
80735     +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
80736     +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
80737     +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
80738     +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
80739     +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
80740     +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
80741     +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
80742     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
80743     +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
80744     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
80745     +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
80746     +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
80747     +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
80748     +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
80749     +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
80750     +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
80751     +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
80752     +END;
MPRINT(EM_DIAGRAM):   END;
80753     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
80754     +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
80755     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
80756     +drop
80757     +H11
80758     +H12
80759     +H13
80760     +H14
80761     +H15
80762     +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 ;
80763     +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
80764      run;

NOTE: DATA STEP view saved on file EMWS8.NEURAL7_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.META_VALIDATE.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_DIAGRAM):   quit;
80765      quit;
80766      filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
80767      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
80768      * Neural7: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Neural7: Computing metadata for TRAIN data;
80769      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS8.NEURAL7_TRAIN.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural7\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.Neural7_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.Neural7_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.Neural7_TRAIN out=WORK.M0XYVGO8 noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0XYVGO8;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M0XYVGO8(keep=name type length label format formatl 
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = 
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0XYVGO8;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M0XYVGO8;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M3BB109R NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3BB109R;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M3BB109R;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M17XBLNV(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M3BB109R;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3BB109R;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M3BB109R;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = 
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) 
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" 
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then 
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ 
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3BB109R;
MPRINT(EMADVISECOLUMNS):   set WORK.M3BB109R;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Meta_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Meta_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural7_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT 
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Neural7";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "Neural7";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "Neural7";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "Neural7";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "Neural7";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "Neural7";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "Neural7";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "Neural7";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "Neural7";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "Neural7";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural7: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
81081      data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
81082      set EMWS8.Neural7_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural7_EMINFO;
81083      where DATA='Neural7' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='Neural7' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 
'MODEL');
81084      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.NEURAL7_EMINFO.
      WHERE (DATA='Neural7') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

81085      data EMWS8.Neural7_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.Neural7_EMINFO;
81086      length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
81087      input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
81088      cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS8.NEURAL7_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   run;
81092      run;
81093      data EMWS8.Neural7_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural7_EMINFO;
81094      set EMWS8.Neural7_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural7_EMINFO WORK.MODELTEMP_INFO;
81095      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.NEURAL7_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.NEURAL7_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

81096      proc sort data = EMWS8.Neural7_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Neural7_EMINFO NOTHREADS;
81097      by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
81098      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.NEURAL7_EMINFO.
NOTE: The data set EMWS8.NEURAL7_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

81099      proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
81100      by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
81101      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS8.FIMPORT_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

81102      proc sort data = EMWS8.Neural7_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.Neural7_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
81103      by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
81104      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.NEURAL7_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

81105      data EMWS8.Neural7_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural7_EMINFO;
81106      merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
81107      by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
81108      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.NEURAL7_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

81109      proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
81110      delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
81111      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
81112      quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

NOTE: View EMWS8.NEURAL7_TRAIN.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      
NOTE: View EMWS8.NEURAL7_VALIDATE.VIEW used (Total process time):
      real time           0.01 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
