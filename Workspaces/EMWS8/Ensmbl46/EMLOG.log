*------------------------------------------------------------*
User:                Lukas Fahr
Date:                21. April 2016
Time:                19.06 Uhr
Site:                70107571
Platform:            X64_7PRO
Maintenance Release: 9.03.01M2P081512
EM Version:          12.1
* 
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "21. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "19.06 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Training Log
Date:                21. April 2016
Time:                19.06 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O35KK7CD
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl46\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O35KK7CD new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOG
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl46\EMLOG.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "21. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "19.06 Uhr" );
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                Lukas Fahr";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Site:                70107571";
MPRINT(EM_DIAGRAM):   put "Platform:            X64_7PRO";
MPRINT(EM_DIAGRAM):   put "Maintenance Release: 9.03.01M2P081512";
MPRINT(EM_DIAGRAM):   put "EM Version:          12.1";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl46\EMTRAIN.log" encoding="UTF-8" NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _LOGIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl46\EMSCORE.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl46\EMREPORT.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl46\EMOUTPUT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "21. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "19.06 Uhr" );
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                Lukas Fahr";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl46\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl46\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl46\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_
'C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl46\EMRUNSTATUS.xml' encoding="UTF-8"
NOBOM;
(FREQ=(WHERE='ROLE = "FREQ"' DEFAULT='Y' RULE=(RULE1=(DESCRIPTION='USEATMOST1FREQ'
VALUES=(VALUE1='Y' )[298985] MAX=1 EXCEEDMAXVALUE='' )[298989] )[298983]
VALIDCHOICES=(CHOICE1='Y' )[298987] )[299271] INPUTREJECT=(WHERE='ROLE in("INPUT",
"REJECTED")' DEFAULT='D' VALIDCHOICES=(CHOICE1='D' )[298993]
RULE=(RULE1=(DESCRIPTION='USEATLEAST1INPUTREJECT' WHERE='(ROLE = "INPUT" and USE in("Y" "D"))
or (ROLE = "REJECTED" and USE = "Y")' MIN=. )[298997] )[298995] )[298991] TARGET=(WHERE='ROLE
= "TARGET"' DEFAULT='Y' VALIDCHOICES=(CHOICE1='Y' CHOICE2='N' )[299001]
RULE=(RULE1=(DESCRIPTION='METADATA.USE1TARGET' VALUES=(VALUE1='Y' )[299007] MIN=1 MAX=1
EXCEEDMAXVALUE='N' )[299005] )[299003] )[298999] )[298981]
2456991    proc freq data=EMWS8.Ensmbl46_VariableSet noprint;
MPRINT(EM_DIAGRAM):    proc freq data=EMWS8.Ensmbl46_VariableSet noprint;
2456992    table ROLE*LEVEL/out=WORK.Ensmbl46META;
MPRINT(EM_DIAGRAM):   table ROLE*LEVEL/out=WORK.Ensmbl46META;
2456993    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 38 observations read from the data set EMWS8.ENSMBL46_VARIABLESET.
NOTE: The data set WORK.ENSMBL46META has 5 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
2456994    proc print data=WORK.Ensmbl46META label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.Ensmbl46META label noobs;
2456995    var ROLE LEVEL COUNT;
MPRINT(EM_DIAGRAM):   var ROLE LEVEL COUNT;
2456996    label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL =
2456996  ! "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT =
2456996  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label ROLE = "Role" LEVEL = "Measurement Level" COUNT = "Frequency
Count";
2456997    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
2456998    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Variable Summary";
MPRINT(EM_DIAGRAM):   run;
2456999    run;
 
NOTE: There were 5 observations read from the data set WORK.ENSMBL46META.
NOTE: The PROCEDURE PRINT printed page 1621.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2457000    title10;
MPRINT(EM_DIAGRAM):   title10;
2457001    %let EMNORLEN = %DMNORLEN;
MPRINT(EM_DIAGRAM):
EMWS8.AutoNeural9_TRAIN EMWS8.AutoNeural9_TRAIN
EMWS8.AutoNeural9_TRAIN EMWS8.AutoNeural9_TRAIN EMWS8 AutoNeural9_TRAIN
EMWS8.AutoNeural9_TRAIN EMWS8.AutoNeural9_TRAIN
EMWS8.AutoNeural9_TRAIN EMWS8.AutoNeural9_TRAIN EMWS8 AutoNeural9_TRAIN
MPRINT(EM_DIAGRAM):    proc dmdb data=EMWS8.AutoNeural9_TRAIN
classout=WORK._DMDBCLASSTARGET(keep=NAME NRAW CRAW LEVEL FREQUENCY NMISSPERCENT);
MPRINT(EM_DIAGRAM):   class DepVar(DESC) ;
MPRINT(EM_DIAGRAM):   run;
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _INIT >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _term >>
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set WORK._DMDBCLASSTARGET;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   if _N_=1 then call symput('_newevent', strip(LEVEL));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK._DMDBCLASSTARGET out=_TEMPCLASS(keep=LEVEL FREQUENCY
NMISSPERCENT rename=(LEVEL=DepVar));
MPRINT(EM_DIAGRAM):   by LEVEL;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _TEMPCLASS;
MPRINT(EM_DIAGRAM):   set _TEMPCLASS;
MPRINT(EM_DIAGRAM):   NMISSPERCENT= NMISSPERCENT/100;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.AutoNeural9_DepVar_DD out=_sortedDecdata;
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   merge _TEMPCLASS(in=_a) _sortedDecdata(in=_b);
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   if (_a and ^_b) or (^_a and _b) then call symput('_emresetDec', '1');
MPRINT(EM_DIAGRAM):   run;
2457030    data WORK.Ensmbl46_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS ORDER);
MPRINT(EM_DIAGRAM):    data WORK.Ensmbl46_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS
ORDER);
2457031    length ORDER $20;
MPRINT(EM_DIAGRAM):   length ORDER $20;
2457032    label VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel,  NOQUOTE))"
2457032  ! EVENT = "%sysfunc(sasmsg(sashelp.dmine, assmt_event_vlabel, NOQUOTE))" NUMLEVELS =
2457032  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_numcat_vlabel, NOQUOTE))" LEVEL =
2457033       "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" ORDER =
2457033  ! "%sysfunc(sasmsg(sashelp.dmine, meta_order_vlabel, NOQUOTE))" LABEL =
2457033  ! "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label VARIABLE = "Target" EVENT = "Event" NUMLEVELS = "Number of Levels"
LEVEL = "Measurement Level" ORDER = "Order" LABEL = "Label";
2457034    set EMWS8.AUTONEURAL9_DEPVAR_DM( where=(_TYPE_="TARGET"));
MPRINT(EM_DIAGRAM):   set EMWS8.AUTONEURAL9_DEPVAR_DM( where=(_TYPE_="TARGET"));
2457035    NumLevels=2;
MPRINT(EM_DIAGRAM):   NumLevels=2;
2457036    select(upcase(ORDER));
MPRINT(EM_DIAGRAM):   select(upcase(ORDER));
2457037    when('DESC') ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   when('DESC') ORDER = 'Descending';
2457038    when('ASC') ORDER = 'Ascending';
MPRINT(EM_DIAGRAM):   when('ASC') ORDER = 'Ascending';
2457039    when('FMTDESC') ORDER = 'Formatted Descending';
MPRINT(EM_DIAGRAM):   when('FMTDESC') ORDER = 'Formatted Descending';
2457040    when('FMTASC') ORDER = 'Formatted Ascending';
MPRINT(EM_DIAGRAM):   when('FMTASC') ORDER = 'Formatted Ascending';
2457041    otherwise ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   otherwise ORDER = 'Descending';
2457042    end;
MPRINT(EM_DIAGRAM):   end;
2457043    output;
MPRINT(EM_DIAGRAM):   output;
2457044    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL9_DEPVAR_DM.
      WHERE _TYPE_='TARGET';
NOTE: The data set WORK.ENSMBL46_EVENT has 1 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2457045    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
2457046    proc print data=WORK.Ensmbl46_EVENT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=WORK.Ensmbl46_EVENT noobs label;
2457047    var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
MPRINT(EM_DIAGRAM):   var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
2457048    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
2457049    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_modelEvent_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Model Events";
MPRINT(EM_DIAGRAM):   run;
2457050    run;
 
NOTE: There were 1 observations read from the data set WORK.ENSMBL46_EVENT.
NOTE: The PROCEDURE PRINT printed page 1622.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2457051    title10;
MPRINT(EM_DIAGRAM):   title10;
"No decisions defined for target "DepVar"."
2457052    proc print data = EMWS8.AutoNeural9_DepVar_DM noobs label;
MPRINT(EM_DIAGRAM):    proc print data = EMWS8.AutoNeural9_DepVar_DM noobs label;
2457053    var _type_ variable label;
MPRINT(EM_DIAGRAM):   var _type_ variable label;
2457054    where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR', 'DECPRIOR');
MPRINT(EM_DIAGRAM):   where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR',
'DECPRIOR');
2457055    label _TYPE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_type_vlabel,     NOQUOTE))"
2457055  ! VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))" LABEL =
2457055  ! "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Type" VARIABLE = "Variable" LABEL = "Label";
2457056    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
2457057    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_predDecVars_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Predicted and decision variables";
MPRINT(EM_DIAGRAM):   run;
2457058    run;
 
NOTE: There were 7 observations read from the data set EMWS8.AUTONEURAL9_DEPVAR_DM.
      WHERE _type_ not in ('DATAPRIOR', 'DECISION', 'DECPRIOR', 'MATRIX', 'TRAINPRIOR');
NOTE: The PROCEDURE PRINT printed page 1623.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2457059    title10;
MPRINT(EM_DIAGRAM):   title10;
2457060    %let groupid =;
2457061    %let endGroupid =;
2457062    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
2457063    set EMWS8.AutoNeural9_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural9_EMINFO;
2457064    where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
2457064  ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
2457065    if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
2457066    else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
2457067    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.AUTONEURAL9_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2457068    %let groupid =;
2457069    %let endGroupid =;
2457070    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
2457071    set EMWS8.AutoNeural11_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_EMINFO;
2457072    where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
2457072  ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
2457073    if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
2457074    else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
2457075    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.AUTONEURAL11_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2457076    %let groupid =;
2457077    %let endGroupid =;
2457078    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
2457079    set EMWS8.AutoNeural12_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural12_EMINFO;
2457080    where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
2457080  ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
2457081    if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
2457082    else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
2457083    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.AUTONEURAL12_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2457084    %let groupid =;
2457085    %let endGroupid =;
2457086    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
2457087    set EMWS8.AutoNeural7_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural7_EMINFO;
2457088    where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
2457088  ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
2457089    if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
2457090    else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
2457091    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.AUTONEURAL7_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2457092    %let groupid =;
2457093    %let endGroupid =;
2457094    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
2457095    set EMWS8.AutoNeural10_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_EMINFO;
2457096    where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
2457096  ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
2457097    if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
2457098    else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
2457099    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.AUTONEURAL10_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2457100    data WORK.Ensmbl46;
MPRINT(EM_DIAGRAM):    data WORK.Ensmbl46;
2457101    length NodeId $32 Model $64;
MPRINT(EM_DIAGRAM):   length NodeId $32 Model $64;
2457102    label Nodeid = "%sysfunc(sasmsg(sashelp.dmine, rpt_nodeId_vlabel,  NOQUOTE))" Model
2457102  ! = "%sysfunc(sasmsg(sashelp.dmine, rpt_modeltype,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label Nodeid = "Node Id" Model = "rpt_modeltype";
2457103    nodeid="AUTONEURAL9";
MPRINT(EM_DIAGRAM):   nodeid="AUTONEURAL9";
2457104    model="AutoNeural";
MPRINT(EM_DIAGRAM):   model="AutoNeural";
2457105    output;
MPRINT(EM_DIAGRAM):   output;
2457106    nodeid="AUTONEURAL11";
MPRINT(EM_DIAGRAM):   nodeid="AUTONEURAL11";
2457107    model="AutoNeural";
MPRINT(EM_DIAGRAM):   model="AutoNeural";
2457108    output;
MPRINT(EM_DIAGRAM):   output;
2457109    nodeid="AUTONEURAL12";
MPRINT(EM_DIAGRAM):   nodeid="AUTONEURAL12";
2457110    model="AutoNeural";
MPRINT(EM_DIAGRAM):   model="AutoNeural";
2457111    output;
MPRINT(EM_DIAGRAM):   output;
2457112    nodeid="AUTONEURAL7";
MPRINT(EM_DIAGRAM):   nodeid="AUTONEURAL7";
2457113    model="AutoNeural";
MPRINT(EM_DIAGRAM):   model="AutoNeural";
2457114    output;
MPRINT(EM_DIAGRAM):   output;
2457115    nodeid="AUTONEURAL10";
MPRINT(EM_DIAGRAM):   nodeid="AUTONEURAL10";
2457116    model="AutoNeural";
MPRINT(EM_DIAGRAM):   model="AutoNeural";
2457117    output;
MPRINT(EM_DIAGRAM):   output;
2457118    ;
MPRINT(EM_DIAGRAM):   ;
2457119    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK.ENSMBL46 has 5 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2457120    title;
MPRINT(EM_DIAGRAM):   title;
2457121    proc print data=WORK.Ensmbl46 label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.Ensmbl46 label noobs;
2457122    title9 "%sysfunc(sasmsg(sashelp.dmine, rpt_combinemodels_title,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   title9 "Imported Models to be Combined";
2457123    title10 "Probability Function: Maximum";
MPRINT(EM_DIAGRAM):   title10 "Probability Function: Maximum";
MPRINT(EM_DIAGRAM):   run;
2457124    run;
 
NOTE: There were 5 observations read from the data set WORK.ENSMBL46.
NOTE: The PROCEDURE PRINT printed page 1624.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2457125    title9;
MPRINT(EM_DIAGRAM):   title9;
2457126    title10;
MPRINT(EM_DIAGRAM):   title10;
2457127    data WORK.M1QUDYHY;
MPRINT(EM_DIAGRAM):    data WORK.M1QUDYHY;
2457128    set WORK.M1QUDYHY;
MPRINT(EM_DIAGRAM):   set WORK.M1QUDYHY;
2457129    where NAME = "DepVar";
MPRINT(EM_DIAGRAM):   where NAME = "DepVar";
2457130    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.M1QUDYHY.
      WHERE NAME='DepVar';
NOTE: The data set WORK.M1QUDYHY has 1 observations and 22 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2457131    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------* ;
2457132    * EM: DMDBClass Macro ;
MPRINT(EM_DIAGRAM):   * EM: DMDBClass Macro ;
2457133    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
2457134    %macro DMDBClass;
2457135        DepVar(DESC)
2457136    %mend DMDBClass;
2457137    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
2457138    * EM: DMDBVar Macro ;
MPRINT(EM_DIAGRAM):   * EM: DMDBVar Macro ;
2457139    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
2457140    %macro DMDBVar;
2457141
2457142    %mend DMDBVar;
2457143    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2457144    * EM: Create DMDB;
MPRINT(EM_DIAGRAM):   * EM: Create DMDB;
2457145    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2457146    proc dmdb batch data=EMWS8.AutoNeural9_TRAIN
2457147    dmdbcat=WORK.EM_DMDB
2457148    maxlevel = 513
2457149    ;
MPRINT(EM_DIAGRAM):   proc dmdb batch data=EMWS8.AutoNeural9_TRAIN dmdbcat=WORK.EM_DMDB
maxlevel = 513 ;
2457150    class %DMDBClass;
MPRINT(EM_DIAGRAM):   class
MPRINT(DMDBCLASS):   DepVar(DESC)
MPRINT(EM_DIAGRAM):  ;
2457151    target
2457152    DepVar
2457153    ;
MPRINT(EM_DIAGRAM):   target DepVar ;
2457154    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Records processed = 2374   Memory used = 511K.
NOTE: There were 2374 observations read from the data set EMWS8.PART_TRAIN.
NOTE: View EMWS8.AUTONEURAL9_TRAIN.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
 
NOTE: There were 2374 observations read from the data set EMWS8.META_TRAIN.
NOTE: There were 2374 observations read from the data set EMWS8.AUTONEURAL9_TRAIN.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.06 seconds
      cpu time            0.07 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *--- end code ---*;
2457155    quit;
2457156    *--- end code ---*;
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "21. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "19.06 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                21. April 2016
Time:                19.06 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O2BB1MEW
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl46\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O2BB1MEW new;
MPRINT(EM_DIAGRAM):   run;
2457258    filename emflow
2457258  ! "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl46\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl46\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl46: Scoring AUTONEURAL9_TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2457259    *------------------------------------------------------------*;
2457260    * Ensmbl46: Scoring AUTONEURAL9_TRAIN data;
2457261    *------------------------------------------------------------*;
2457262    data EMWS8.Ensmbl46_TRAIN
2457263    / view=EMWS8.Ensmbl46_TRAIN
2457264    ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl46_TRAIN / view=EMWS8.Ensmbl46_TRAIN ;
2457265    set EMWS8.AutoNeural9_TRAIN
2457266    ;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural9_TRAIN ;
2457267    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file
      C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl46\EMFLOWSCORE.sas.
2457268   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2457269   +* Ensmbl46: Combine model for DepVar;
MPRINT(EM_DIAGRAM):   * Ensmbl46: Combine model for DepVar;
2457270   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2457271   +* Ensmbl46: Scoring Code of model 1 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl46: Scoring Code of model 1 of 5;
2457272   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2457273   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2457274   +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
2457275   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
2457276   +* NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
2457277   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2457278   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2457279   +* TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
2457280   +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
2457281   +* NODE: Stat;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
2457282   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2457283   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2457284   +* TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
2457285   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
2457286   +* NODE: Filter;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
2457287   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2457288   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2457289   +* TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
2457290   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
2457291   +* NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
2457292   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2457293   +
2457294   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
2457295   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
2457295  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
2457296   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
2457297   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
2457298   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
2457299   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
2457300   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
2457301   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2457302   +* TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
2457303   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
2457304   +* NODE: Trans;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
2457305   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2457306   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2457307   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
2457308   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2457309   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
2457310   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
2457311   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
2457312   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2457313   +* TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
2457314   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
2457315   +* NODE: Part;
MPRINT(EM_DIAGRAM):   * NODE: Part;
2457316   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2457317   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2457318   +* TOOL: Metadata Node;
MPRINT(EM_DIAGRAM):   * TOOL: Metadata Node;
2457319   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
2457320   +* NODE: Meta;
MPRINT(EM_DIAGRAM):   * NODE: Meta;
2457321   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2457322   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2457323   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
2457324   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2457325   +* NODE: AutoNeural9;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural9;
2457326   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2457327   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2457328   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2457329   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2457330   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2457331   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2457332   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2457333   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2457334   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2457335   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2457336   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2457337   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2457338   +LENGTH _WARN_ $4
2457339   +      F_DepVar  $ 12
2457340   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2457341   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2457342   +
2457343   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2457344   +
2457345   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2457346   +
2457347   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2457348   +
2457349   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2457350   +
2457351   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2457352   +
2457353   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2457354   +
2457355   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2457356   +
2457357   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2457358   +
2457359   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2457360   +
2457361   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2457362   +
2457363   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2457364   +
2457365   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2457366   +
2457367   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2457368   +
2457369   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2457370   +
2457371   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2457372   +
2457373   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2457374   +
2457375   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2457376   +
2457377   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2457378   +
2457379   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2457380   +
2457381   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2457382   +
2457383   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2457384   +
2457385   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2457386   +
2457387   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2457388   +
2457389   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2457390   +
2457391   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2457392   +
2457393   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2457394   +
2457395   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2457396   +
2457397   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2457398   +
2457399   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2457400   +
2457401   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2457402   +
2457403   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2457404   +
2457405   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2457406   +
2457407   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2457408   +
2457409   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2457410   +
2457411   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2457412   +
2457413   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2457414   +
2457415   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2457416   +
2457417   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2457418   +
2457419   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2457420   +
2457421   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2457422   +
2457423   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2457424   +
2457425   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2457426   +
2457427   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2457428   +
2457429   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2457430   +
2457431   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2457432   +
2457433   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2457434   +
2457435   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2457436   +
2457437   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2457438   +
2457439   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2457440   +
2457441   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2457442   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2457443   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2457444   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2457445   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2457446   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2457447   +end;
MPRINT(EM_DIAGRAM):   end;
2457448   +else do;
MPRINT(EM_DIAGRAM):   else do;
2457449   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2457450   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2457451   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2457452   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2457453   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2457454   +   end;
MPRINT(EM_DIAGRAM):   end;
2457455   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2457456   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2457457   +   end;
MPRINT(EM_DIAGRAM):   end;
2457458   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2457459   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2457460   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2457461   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2457462   +   end;
MPRINT(EM_DIAGRAM):   end;
2457463   +end;
MPRINT(EM_DIAGRAM):   end;
2457464   +
2457465   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2457466   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2457467   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2457468   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2457469   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2457470   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2457471   +end;
MPRINT(EM_DIAGRAM):   end;
2457472   +else do;
MPRINT(EM_DIAGRAM):   else do;
2457473   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2457474   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2457475   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2457476   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2457477   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2457478   +   end;
MPRINT(EM_DIAGRAM):   end;
2457479   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2457480   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2457481   +   end;
MPRINT(EM_DIAGRAM):   end;
2457482   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2457483   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2457484   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2457485   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2457486   +   end;
MPRINT(EM_DIAGRAM):   end;
2457487   +end;
MPRINT(EM_DIAGRAM):   end;
2457488   +
2457489   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2457490   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2457491   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2457492   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2457493   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2457494   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2457495   +end;
MPRINT(EM_DIAGRAM):   end;
2457496   +else do;
MPRINT(EM_DIAGRAM):   else do;
2457497   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2457498   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2457499   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2457500   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2457501   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2457502   +   end;
MPRINT(EM_DIAGRAM):   end;
2457503   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2457504   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2457505   +   end;
MPRINT(EM_DIAGRAM):   end;
2457506   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2457507   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2457508   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2457509   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2457510   +   end;
MPRINT(EM_DIAGRAM):   end;
2457511   +end;
MPRINT(EM_DIAGRAM):   end;
2457512   +
2457513   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2457514   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2457515   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2457516   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2457517   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2457518   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2457519   +end;
MPRINT(EM_DIAGRAM):   end;
2457520   +else do;
MPRINT(EM_DIAGRAM):   else do;
2457521   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2457522   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2457523   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2457524   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2457525   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2457526   +   end;
MPRINT(EM_DIAGRAM):   end;
2457527   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2457528   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2457529   +   end;
MPRINT(EM_DIAGRAM):   end;
2457530   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2457531   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2457532   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2457533   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2457534   +   end;
MPRINT(EM_DIAGRAM):   end;
2457535   +end;
MPRINT(EM_DIAGRAM):   end;
2457536   +
2457537   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2457538   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2457539   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2457540   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2457541   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2457542   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2457543   +end;
MPRINT(EM_DIAGRAM):   end;
2457544   +else do;
MPRINT(EM_DIAGRAM):   else do;
2457545   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2457546   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2457547   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2457548   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2457549   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2457550   +   end;
MPRINT(EM_DIAGRAM):   end;
2457551   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2457552   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2457553   +   end;
MPRINT(EM_DIAGRAM):   end;
2457554   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2457555   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2457556   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2457557   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2457558   +   end;
MPRINT(EM_DIAGRAM):   end;
2457559   +end;
MPRINT(EM_DIAGRAM):   end;
2457560   +
2457561   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2457562   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2457563   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2457564   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2457565   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2457566   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2457567   +end;
MPRINT(EM_DIAGRAM):   end;
2457568   +else do;
MPRINT(EM_DIAGRAM):   else do;
2457569   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2457570   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2457571   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2457572   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2457573   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2457574   +   end;
MPRINT(EM_DIAGRAM):   end;
2457575   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2457576   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2457577   +   end;
MPRINT(EM_DIAGRAM):   end;
2457578   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2457579   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2457580   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2457581   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2457582   +   end;
MPRINT(EM_DIAGRAM):   end;
2457583   +end;
MPRINT(EM_DIAGRAM):   end;
2457584   +
2457585   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2457586   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2457587   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2457588   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2457589   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2457590   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2457591   +end;
MPRINT(EM_DIAGRAM):   end;
2457592   +else do;
MPRINT(EM_DIAGRAM):   else do;
2457593   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2457594   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2457595   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2457596   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2457597   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2457598   +   end;
MPRINT(EM_DIAGRAM):   end;
2457599   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2457600   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2457601   +   end;
MPRINT(EM_DIAGRAM):   end;
2457602   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2457603   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2457604   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2457605   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2457606   +   end;
MPRINT(EM_DIAGRAM):   end;
2457607   +end;
MPRINT(EM_DIAGRAM):   end;
2457608   +
2457609   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2457610   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
2457611   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2457612   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2457613   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2457614   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2457615   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2457616   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2457617   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2457618   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2457619   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2457620   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2457621   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2457622   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2457623   +end;
MPRINT(EM_DIAGRAM):   end;
2457624   +else do;
MPRINT(EM_DIAGRAM):   else do;
2457625   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2457626   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2457627   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2457628   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2457629   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2457630   +   end;
MPRINT(EM_DIAGRAM):   end;
2457631   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2457632   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2457633   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2457634   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2457635   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2457636   +   end;
MPRINT(EM_DIAGRAM):   end;
2457637   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2457638   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2457639   +   end;
MPRINT(EM_DIAGRAM):   end;
2457640   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2457641   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2457642   +   end;
MPRINT(EM_DIAGRAM):   end;
2457643   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2457644   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2457645   +   end;
MPRINT(EM_DIAGRAM):   end;
2457646   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2457647   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2457648   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2457649   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2457650   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2457651   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2457652   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2457653   +   end;
MPRINT(EM_DIAGRAM):   end;
2457654   +end;
MPRINT(EM_DIAGRAM):   end;
2457655   +
2457656   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2457657   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2457658   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
2457659   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2457660   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2457661   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2457662   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2457663   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2457664   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2457665   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2457666   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2457667   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2457668   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2457669   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2457670   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2457671   +end;
MPRINT(EM_DIAGRAM):   end;
2457672   +else do;
MPRINT(EM_DIAGRAM):   else do;
2457673   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2457674   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2457675   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2457676   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2457677   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2457678   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2457679   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2457680   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2457681   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2457682   +         end;
MPRINT(EM_DIAGRAM):   end;
2457683   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2457684   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2457685   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2457686   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2457687   +            end;
MPRINT(EM_DIAGRAM):   end;
2457688   +         end;
MPRINT(EM_DIAGRAM):   end;
2457689   +      end;
MPRINT(EM_DIAGRAM):   end;
2457690   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2457691   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2457692   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2457693   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2457694   +         end;
MPRINT(EM_DIAGRAM):   end;
2457695   +      end;
MPRINT(EM_DIAGRAM):   end;
2457696   +   end;
MPRINT(EM_DIAGRAM):   end;
2457697   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2457698   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2457699   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2457700   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2457701   +      end;
MPRINT(EM_DIAGRAM):   end;
2457702   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2457703   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2457704   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2457705   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2457706   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2457707   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2457708   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2457709   +         end;
MPRINT(EM_DIAGRAM):   end;
2457710   +      end;
MPRINT(EM_DIAGRAM):   end;
2457711   +   end;
MPRINT(EM_DIAGRAM):   end;
2457712   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2457713   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2457714   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2457715   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2457716   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2457717   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2457718   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2457719   +   end;
MPRINT(EM_DIAGRAM):   end;
2457720   +end;
MPRINT(EM_DIAGRAM):   end;
2457721   +
2457722   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2457723   +*** Checking missing input Interval
2457724   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2457725   +
2457726   +IF NMISS(
2457727   +   AcceptedCmpTotal ,
2457728   +   Age ,
2457729   +   Frq ,
2457730   +   Income ,
2457731   +   Kidhome ,
2457732   +   Mnt ,
2457733   +   MntFishProducts ,
2457734   +   MntFruits ,
2457735   +   MntGoldProds ,
2457736   +   MntMeatProducts ,
2457737   +   MntSweetProducts ,
2457738   +   MntWines ,
2457739   +   MonthsAsCustomer ,
2457740   +   NumCatalogPurchases ,
2457741   +   NumDealsPurchases ,
2457742   +   NumDistPurchases ,
2457743   +   NumStorePurchases ,
2457744   +   NumWebPurchases ,
2457745   +   NumWebVisitsMonth ,
2457746   +   RFMstat ,
2457747   +   RMntFrq ,
2457748   +   Recency ,
2457749   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
2457750   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2457751   +
2457752   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2457753   +END;
MPRINT(EM_DIAGRAM):   END;
2457754   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2457755   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2457756   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2457757   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2457758   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2457759   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2457760   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2457761   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2457762   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2457763   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2457764   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2457765   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2457766   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2457767   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2457768   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2457769   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2457770   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2457771   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2457772   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2457773   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2457774   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2457775   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2457776   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 *
MonthsAsCustomer ;
2457777   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2457778   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2457779   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2457780   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2457781   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2457782   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2457783   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2457784   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2457785   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2457786   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2457787   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2457788   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2457789   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2457790   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2457791   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2457792   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2457793   +END;
MPRINT(EM_DIAGRAM):   END;
2457794   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2457795   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2457796   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2457797   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2457798   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2457799   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2457800   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2457801   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2457802   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2457803   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2457804   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2457805   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2457806   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2457807   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2457808   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2457809   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2457810   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2457811   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2457812   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2457813   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2457814   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2457815   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2457816   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
2457817   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2457818   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2457819   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2457820   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2457821   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2457822   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2457823   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2457824   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2457825   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2457826   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2457827   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 *
MonthsAsCustomer ;
2457828   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2457829   +   ELSE S_NumCatalogPurchases
2457830   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2457831   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2457832   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2457833   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2457834   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2457835   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2457836   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2457837   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2457838   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2457839   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2457840   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2457841   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2457842   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2457843   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2457844   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2457845   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2457846   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2457847   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2457848   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2457849   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2457850   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2457851   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2457852   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2457853   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2457854   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2457855   +END;
MPRINT(EM_DIAGRAM):   END;
2457856   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2457857   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2457858   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2457859   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2457860   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2457861   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2457862   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2457863   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2457864   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2457865   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2457866   +   H1x1_1  =    -0.78941671657664 * S_AcceptedCmpTotal
2457867   +          +     0.31767378900448 * S_Age  +      -0.450304150539 * S_Frq
2457868   +          +     0.13641886985589 * S_Income  +    -0.76390352240561 *
2457869   +        S_Kidhome  +    -0.84654868800943 * S_Mnt  +     0.96945558052651 *
2457870   +        S_MntFishProducts  +     0.16268958674432 * S_MntFruits
2457871   +          +     0.02144447788014 * S_MntGoldProds  +    -3.75090210449464 *
2457872   +        S_MntMeatProducts  +    -0.22086629229442 * S_MntSweetProducts
2457873   +          +      0.8352178457402 * S_MntWines  +     0.16493907873466 *
2457874   +        S_MonthsAsCustomer  +    -1.54607390993048 * S_NumCatalogPurchases
2457875   +          +    -1.12130210731541 * S_NumDealsPurchases
2457876   +          +    -0.12343505299726 * S_NumDistPurchases
2457877   +          +     0.11863092868196 * S_NumStorePurchases
2457878   +          +       0.583917993314 * S_NumWebPurchases
2457879   +          +     0.75529732848146 * S_NumWebVisitsMonth
2457880   +          +    -0.49784215446785 * S_RFMstat  +     0.40580477815146 *
2457881   +        S_RMntFrq  +    -0.95519170979342 * S_Recency
2457882   +          +    -0.44895196625502 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.78941671657664 * S_AcceptedCmpTotal + 0.31767378900448 *
S_Age + -0.450304150539 * S_Frq + 0.13641886985589 * S_Income + -0.76390352240561 * S_Kidhome
+ -0.84654868800943 * S_Mnt + 0.96945558052651 * S_MntFishProducts + 0.16268958674432 *
S_MntFruits + 0.02144447788014 * S_MntGoldProds + -3.75090210449464 * S_MntMeatProducts +
-0.22086629229442 * S_MntSweetProducts + 0.8352178457402 * S_MntWines + 0.16493907873466 *
S_MonthsAsCustomer + -1.54607390993048 * S_NumCatalogPurchases + -1.12130210731541 *
S_NumDealsPurchases + -0.12343505299726 * S_NumDistPurchases + 0.11863092868196 *
S_NumStorePurchases + 0.583917993314 * S_NumWebPurchases + 0.75529732848146 *
S_NumWebVisitsMonth + -0.49784215446785 * S_RFMstat + 0.40580477815146 * S_RMntFrq +
-0.95519170979342 * S_Recency + -0.44895196625502 * S_Teenhome ;
2457883   +   H1x1_2  =    -0.22984864633102 * S_AcceptedCmpTotal
2457884   +          +     0.08901810463204 * S_Age  +    -0.13007664741542 * S_Frq
2457885   +          +    -0.64174617524704 * S_Income  +     0.26599968715733 *
2457886   +        S_Kidhome  +     0.57486260655125 * S_Mnt  +    -0.56033337110694 *
2457887   +        S_MntFishProducts  +     0.16060716517673 * S_MntFruits
2457888   +          +      0.4349197289782 * S_MntGoldProds  +     1.41079767517969 *
2457889   +        S_MntMeatProducts  +      0.0615730534741 * S_MntSweetProducts
2457890   +          +    -0.09057901886639 * S_MntWines  +     0.20260454891291 *
2457891   +        S_MonthsAsCustomer  +    -1.17048742280721 * S_NumCatalogPurchases
2457892   +          +    -0.84113790640734 * S_NumDealsPurchases
2457893   +          +    -0.10512672747147 * S_NumDistPurchases
2457894   +          +     0.07268711782494 * S_NumStorePurchases
2457895   +          +     0.57578331257439 * S_NumWebPurchases
2457896   +          +    -1.34334433506558 * S_NumWebVisitsMonth
2457897   +          +     0.50079465494904 * S_RFMstat  +     0.77329849238514 *
2457898   +        S_RMntFrq  +      1.2759588366983 * S_Recency
2457899   +          +     0.17722493443222 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.22984864633102 * S_AcceptedCmpTotal + 0.08901810463204 *
S_Age + -0.13007664741542 * S_Frq + -0.64174617524704 * S_Income + 0.26599968715733 *
S_Kidhome + 0.57486260655125 * S_Mnt + -0.56033337110694 * S_MntFishProducts +
0.16060716517673 * S_MntFruits + 0.4349197289782 * S_MntGoldProds + 1.41079767517969 *
S_MntMeatProducts + 0.0615730534741 * S_MntSweetProducts + -0.09057901886639 * S_MntWines +
0.20260454891291 * S_MonthsAsCustomer + -1.17048742280721 * S_NumCatalogPurchases +
-0.84113790640734 * S_NumDealsPurchases + -0.10512672747147 * S_NumDistPurchases +
0.07268711782494 * S_NumStorePurchases + 0.57578331257439 * S_NumWebPurchases +
-1.34334433506558 * S_NumWebVisitsMonth + 0.50079465494904 * S_RFMstat + 0.77329849238514 *
S_RMntFrq + 1.2759588366983 * S_Recency + 0.17722493443222 * S_Teenhome ;
2457900   +   H1x1_3  =      1.1751297152411 * S_AcceptedCmpTotal
2457901   +          +     0.14380060376858 * S_Age  +    -0.90459868540245 * S_Frq
2457902   +          +     0.65570498233801 * S_Income  +    -0.66078213466597 *
2457903   +        S_Kidhome  +      0.5364727654141 * S_Mnt  +    -0.56452823521458 *
2457904   +        S_MntFishProducts  +     0.11401811215013 * S_MntFruits
2457905   +          +     0.42809239636494 * S_MntGoldProds  +     3.28485519579047 *
2457906   +        S_MntMeatProducts  +    -0.10959477301368 * S_MntSweetProducts
2457907   +          +     -0.5779524716069 * S_MntWines  +     0.08256957915579 *
2457908   +        S_MonthsAsCustomer  +     0.48195221766948 * S_NumCatalogPurchases
2457909   +          +     0.45924983504762 * S_NumDealsPurchases
2457910   +          +    -0.25508041581692 * S_NumDistPurchases
2457911   +          +    -1.34901283858526 * S_NumStorePurchases
2457912   +          +    -0.86388975031663 * S_NumWebPurchases
2457913   +          +     1.86136110391797 * S_NumWebVisitsMonth
2457914   +          +     0.39724376701426 * S_RFMstat  +    -1.08648755949459 *
2457915   +        S_RMntFrq  +    -2.06955456943047 * S_Recency
2457916   +          +     -0.6524420065858 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.1751297152411 * S_AcceptedCmpTotal + 0.14380060376858 * S_Age
+ -0.90459868540245 * S_Frq + 0.65570498233801 * S_Income + -0.66078213466597 * S_Kidhome +
0.5364727654141 * S_Mnt + -0.56452823521458 * S_MntFishProducts + 0.11401811215013 *
S_MntFruits + 0.42809239636494 * S_MntGoldProds + 3.28485519579047 * S_MntMeatProducts +
-0.10959477301368 * S_MntSweetProducts + -0.5779524716069 * S_MntWines + 0.08256957915579 *
S_MonthsAsCustomer + 0.48195221766948 * S_NumCatalogPurchases + 0.45924983504762 *
S_NumDealsPurchases + -0.25508041581692 * S_NumDistPurchases + -1.34901283858526 *
S_NumStorePurchases + -0.86388975031663 * S_NumWebPurchases + 1.86136110391797 *
S_NumWebVisitsMonth + 0.39724376701426 * S_RFMstat + -1.08648755949459 * S_RMntFrq +
-2.06955456943047 * S_Recency + -0.6524420065858 * S_Teenhome ;
2457917   +   H1x1_1  = H1x1_1  +     0.80545309346785 * AcceptedCmp10
2457918   +          +    -0.33518398776018 * AcceptedCmp20  +    -0.58961939502901 *
2457919   +        AcceptedCmp30  +    -0.89675052404295 * AcceptedCmp40
2457920   +          +     0.75506592249683 * AcceptedCmp50  +    -0.07335613460961 *
2457921   +        Complain0  +     0.34255762261501 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.80545309346785 * AcceptedCmp10 + -0.33518398776018 *
AcceptedCmp20 + -0.58961939502901 * AcceptedCmp30 + -0.89675052404295 * AcceptedCmp40 +
0.75506592249683 * AcceptedCmp50 + -0.07335613460961 * Complain0 + 0.34255762261501 *
HigherEducationBinary0 ;
2457922   +   H1x1_2  = H1x1_2  +    -0.17834267108797 * AcceptedCmp10
2457923   +          +    -0.54414628806984 * AcceptedCmp20  +      0.8037591997808 *
2457924   +        AcceptedCmp30  +     0.37789561997689 * AcceptedCmp40
2457925   +          +    -1.39910847665731 * AcceptedCmp50  +    -0.44783176263268 *
2457926   +        Complain0  +     0.36763760090773 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.17834267108797 * AcceptedCmp10 + -0.54414628806984
* AcceptedCmp20 + 0.8037591997808 * AcceptedCmp30 + 0.37789561997689 * AcceptedCmp40 +
-1.39910847665731 * AcceptedCmp50 + -0.44783176263268 * Complain0 + 0.36763760090773 *
HigherEducationBinary0 ;
2457927   +   H1x1_3  = H1x1_3  +    -0.20323890063703 * AcceptedCmp10
2457928   +          +    -0.08537895761507 * AcceptedCmp20  +     0.22533818089504 *
2457929   +        AcceptedCmp30  +    -0.22195995100127 * AcceptedCmp40
2457930   +          +    -2.01371926977123 * AcceptedCmp50  +    -0.17097719978842 *
2457931   +        Complain0  +     0.34016905753094 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.20323890063703 * AcceptedCmp10 + -0.08537895761507
* AcceptedCmp20 + 0.22533818089504 * AcceptedCmp30 + -0.22195995100127 * AcceptedCmp40 +
-2.01371926977123 * AcceptedCmp50 + -0.17097719978842 * Complain0 + 0.34016905753094 *
HigherEducationBinary0 ;
2457932   +   H1x1_1  = H1x1_1  +    -0.03394180683805 * Education2n_Cycle
2457933   +          +    -0.38224926448988 * EducationBasic  +    -0.42512289883041 *
2457934   +        EducationGraduation  +    -0.59708578424036 * EducationMaster
2457935   +          +     0.48853068455666 * Marital_StatusDivorced
2457936   +          +    -0.54903474026465 * Marital_StatusMarried
2457937   +          +    -0.34079188373939 * Marital_StatusSingle
2457938   +          +    -0.64602969938868 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.03394180683805 * Education2n_Cycle +
-0.38224926448988 * EducationBasic + -0.42512289883041 * EducationGraduation +
-0.59708578424036 * EducationMaster + 0.48853068455666 * Marital_StatusDivorced +
-0.54903474026465 * Marital_StatusMarried + -0.34079188373939 * Marital_StatusSingle +
-0.64602969938868 * Marital_StatusTogether ;
2457939   +   H1x1_2  = H1x1_2  +    -0.26170943801998 * Education2n_Cycle
2457940   +          +     0.06893871459175 * EducationBasic  +    -0.84123174187664 *
2457941   +        EducationGraduation  +     0.19038549912088 * EducationMaster
2457942   +          +    -1.03547689902027 * Marital_StatusDivorced
2457943   +          +     2.42164864610471 * Marital_StatusMarried
2457944   +          +    -1.95342561304942 * Marital_StatusSingle
2457945   +          +      2.1397185142046 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.26170943801998 * Education2n_Cycle +
0.06893871459175 * EducationBasic + -0.84123174187664 * EducationGraduation + 0.19038549912088
* EducationMaster + -1.03547689902027 * Marital_StatusDivorced + 2.42164864610471 *
Marital_StatusMarried + -1.95342561304942 * Marital_StatusSingle + 2.1397185142046 *
Marital_StatusTogether ;
2457946   +   H1x1_3  = H1x1_3  +    -0.04236694810886 * Education2n_Cycle
2457947   +          +    -0.57404276980591 * EducationBasic  +     -0.1441989834351 *
2457948   +        EducationGraduation  +    -0.31867831184924 * EducationMaster
2457949   +          +      0.4337638747935 * Marital_StatusDivorced
2457950   +          +    -0.38508657017615 * Marital_StatusMarried
2457951   +          +     -0.0160269708326 * Marital_StatusSingle
2457952   +          +    -0.57491004270903 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.04236694810886 * Education2n_Cycle +
-0.57404276980591 * EducationBasic + -0.1441989834351 * EducationGraduation +
-0.31867831184924 * EducationMaster + 0.4337638747935 * Marital_StatusDivorced +
-0.38508657017615 * Marital_StatusMarried + -0.0160269708326 * Marital_StatusSingle +
-0.57491004270903 * Marital_StatusTogether ;
2457953   +   H1x1_1  =    -0.53426188790968 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.53426188790968 + H1x1_1 ;
2457954   +   H1x1_2  =     0.98557066823746 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.98557066823746 + H1x1_2 ;
2457955   +   H1x1_3  =     1.81937688438175 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.81937688438175 + H1x1_3 ;
2457956   +   H1x1_4  = 0;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0;
2457957   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
2457958   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2457959   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
2457960   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
2457961   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
2457962   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
2457963   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
2457964   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
2457965   +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
2457966   +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
2457967   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
2457968   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
2457969   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
2457970   +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
2457971   +END;
MPRINT(EM_DIAGRAM):   END;
2457972   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2457973   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2457974   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2457975   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2457976   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2457977   +END;
MPRINT(EM_DIAGRAM):   END;
2457978   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2457979   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2457980   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2457981   +
2457982   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2457983   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2457984   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2457985   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2457986   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2457987   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2457988   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2457989   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2457990   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2457991   +end;
MPRINT(EM_DIAGRAM):   end;
2457992   +else do;
MPRINT(EM_DIAGRAM):   else do;
2457993   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2457994   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2457995   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2457996   +   end;
MPRINT(EM_DIAGRAM):   end;
2457997   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2457998   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2457999   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2458000   +   end;
MPRINT(EM_DIAGRAM):   end;
2458001   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2458002   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2458003   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2458004   +   end;
MPRINT(EM_DIAGRAM):   end;
2458005   +end;
MPRINT(EM_DIAGRAM):   end;
2458006   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2458007   +   P_DepVar1  =    -3.43702380277695 * H1x1_1  +    -7.14235896425537 * H1x1_2
2458008   +          +     10.8296305415538 * H1x1_3  +    -2.20824183229369 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.43702380277695 * H1x1_1 + -7.14235896425537 * H1x1_2 +
10.8296305415538 * H1x1_3 + -2.20824183229369 * H1x1_4 ;
2458009   +   P_DepVar1  =    -3.68304614366462 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.68304614366462 + P_DepVar1 ;
2458010   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2458011   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2458012   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2458013   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2458014   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2458015   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2458016   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2458017   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2458018   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2458019   +END;
MPRINT(EM_DIAGRAM):   END;
2458020   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2458021   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2458022   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2458023   +END;
MPRINT(EM_DIAGRAM):   END;
2458024   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2458025   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2458026   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2458027   +END;
MPRINT(EM_DIAGRAM):   END;
2458028   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2458029   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2458030   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2458031   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2458032   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2458033   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2458034   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2458035   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2458036   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2458037   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2458038   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2458039   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2458040   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2458041   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2458042   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2458043   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2458044   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2458045   +END;
MPRINT(EM_DIAGRAM):   END;
2458046   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2458047   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2458048   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2458049   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2458050   +* Renaming variables for AutoNeural9;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural9;
2458051   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2458052   +* Renaming Posterior variables for AutoNeural9;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural9;
2458053   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2458054   +drop AutoNeural9_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_P_DepVar1;
2458055   +AutoNeural9_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural9_P_DepVar1 = P_DepVar1;
2458056   +drop AutoNeural9_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_P_DepVar0;
2458057   +AutoNeural9_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural9_P_DepVar0 = P_DepVar0;
2458058   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2458059   +* Renaming _WARN_ variable for AutoNeural9;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural9;
2458060   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2458061   +length AutoNeural9_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural9_WARN_ $4;
2458062   +drop AutoNeural9_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_WARN_;
2458063   +AutoNeural9_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural9_WARN_ = _WARN_;
2458064   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2458065   +* Ensmbl46: Scoring Code of model 2 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl46: Scoring Code of model 2 of 5;
2458066   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2458067   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2458068   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
2458069   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2458070   +* NODE: AutoNeural11;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural11;
2458071   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2458072   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2458073   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2458074   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2458075   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2458076   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2458077   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2458078   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2458079   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2458080   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2458081   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2458082   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2458083   +LENGTH _WARN_ $4
2458084   +      F_DepVar  $ 12
2458085   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2458086   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2458087   +
2458088   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2458089   +
2458090   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2458091   +
2458092   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2458093   +
2458094   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2458095   +
2458096   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2458097   +
2458098   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2458099   +
2458100   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2458101   +
2458102   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2458103   +
2458104   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2458105   +
2458106   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2458107   +
2458108   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2458109   +
2458110   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2458111   +
2458112   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2458113   +
2458114   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2458115   +
2458116   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2458117   +
2458118   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2458119   +
2458120   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2458121   +
2458122   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2458123   +
2458124   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2458125   +
2458126   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2458127   +
2458128   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2458129   +
2458130   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2458131   +
2458132   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2458133   +
2458134   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2458135   +
2458136   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2458137   +
2458138   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2458139   +
2458140   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2458141   +
2458142   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2458143   +
2458144   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2458145   +
2458146   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2458147   +
2458148   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2458149   +
2458150   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2458151   +
2458152   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2458153   +
2458154   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2458155   +
2458156   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2458157   +
2458158   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2458159   +
2458160   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2458161   +
2458162   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2458163   +
2458164   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2458165   +
2458166   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2458167   +
2458168   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2458169   +
2458170   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
2458171   +
2458172   +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
2458173   +
2458174   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
2458175   +
2458176   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
2458177   +
2458178   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
2458179   +
2458180   +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
2458181   +
2458182   +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
2458183   +
2458184   +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
2458185   +
2458186   +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
2458187   +
2458188   +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
2458189   +
2458190   +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
2458191   +
2458192   +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
2458193   +
2458194   +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
2458195   +
2458196   +      label H2x1_6 = 'Hidden: H2x1_=6' ;
MPRINT(EM_DIAGRAM):   label H2x1_6 = 'Hidden: H2x1_=6' ;
2458197   +
2458198   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2458199   +
2458200   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2458201   +
2458202   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2458203   +
2458204   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2458205   +
2458206   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2458207   +
2458208   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2458209   +
2458210   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2458211   +
2458212   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2458213   +
2458214   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2458215   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2458216   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2458217   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2458218   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2458219   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2458220   +end;
MPRINT(EM_DIAGRAM):   end;
2458221   +else do;
MPRINT(EM_DIAGRAM):   else do;
2458222   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2458223   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2458224   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2458225   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2458226   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2458227   +   end;
MPRINT(EM_DIAGRAM):   end;
2458228   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2458229   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2458230   +   end;
MPRINT(EM_DIAGRAM):   end;
2458231   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2458232   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2458233   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2458234   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2458235   +   end;
MPRINT(EM_DIAGRAM):   end;
2458236   +end;
MPRINT(EM_DIAGRAM):   end;
2458237   +
2458238   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2458239   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2458240   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2458241   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2458242   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2458243   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2458244   +end;
MPRINT(EM_DIAGRAM):   end;
2458245   +else do;
MPRINT(EM_DIAGRAM):   else do;
2458246   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2458247   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2458248   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2458249   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2458250   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2458251   +   end;
MPRINT(EM_DIAGRAM):   end;
2458252   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2458253   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2458254   +   end;
MPRINT(EM_DIAGRAM):   end;
2458255   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2458256   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2458257   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2458258   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2458259   +   end;
MPRINT(EM_DIAGRAM):   end;
2458260   +end;
MPRINT(EM_DIAGRAM):   end;
2458261   +
2458262   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2458263   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2458264   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2458265   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2458266   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2458267   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2458268   +end;
MPRINT(EM_DIAGRAM):   end;
2458269   +else do;
MPRINT(EM_DIAGRAM):   else do;
2458270   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2458271   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2458272   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2458273   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2458274   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2458275   +   end;
MPRINT(EM_DIAGRAM):   end;
2458276   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2458277   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2458278   +   end;
MPRINT(EM_DIAGRAM):   end;
2458279   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2458280   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2458281   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2458282   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2458283   +   end;
MPRINT(EM_DIAGRAM):   end;
2458284   +end;
MPRINT(EM_DIAGRAM):   end;
2458285   +
2458286   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2458287   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2458288   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2458289   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2458290   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2458291   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2458292   +end;
MPRINT(EM_DIAGRAM):   end;
2458293   +else do;
MPRINT(EM_DIAGRAM):   else do;
2458294   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2458295   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2458296   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2458297   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2458298   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2458299   +   end;
MPRINT(EM_DIAGRAM):   end;
2458300   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2458301   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2458302   +   end;
MPRINT(EM_DIAGRAM):   end;
2458303   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2458304   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2458305   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2458306   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2458307   +   end;
MPRINT(EM_DIAGRAM):   end;
2458308   +end;
MPRINT(EM_DIAGRAM):   end;
2458309   +
2458310   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2458311   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2458312   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2458313   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2458314   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2458315   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2458316   +end;
MPRINT(EM_DIAGRAM):   end;
2458317   +else do;
MPRINT(EM_DIAGRAM):   else do;
2458318   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2458319   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2458320   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2458321   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2458322   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2458323   +   end;
MPRINT(EM_DIAGRAM):   end;
2458324   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2458325   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2458326   +   end;
MPRINT(EM_DIAGRAM):   end;
2458327   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2458328   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2458329   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2458330   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2458331   +   end;
MPRINT(EM_DIAGRAM):   end;
2458332   +end;
MPRINT(EM_DIAGRAM):   end;
2458333   +
2458334   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2458335   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2458336   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2458337   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2458338   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2458339   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2458340   +end;
MPRINT(EM_DIAGRAM):   end;
2458341   +else do;
MPRINT(EM_DIAGRAM):   else do;
2458342   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2458343   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2458344   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2458345   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2458346   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2458347   +   end;
MPRINT(EM_DIAGRAM):   end;
2458348   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2458349   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2458350   +   end;
MPRINT(EM_DIAGRAM):   end;
2458351   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2458352   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2458353   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2458354   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2458355   +   end;
MPRINT(EM_DIAGRAM):   end;
2458356   +end;
MPRINT(EM_DIAGRAM):   end;
2458357   +
2458358   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2458359   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2458360   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2458361   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2458362   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2458363   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2458364   +end;
MPRINT(EM_DIAGRAM):   end;
2458365   +else do;
MPRINT(EM_DIAGRAM):   else do;
2458366   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2458367   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2458368   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2458369   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2458370   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2458371   +   end;
MPRINT(EM_DIAGRAM):   end;
2458372   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2458373   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2458374   +   end;
MPRINT(EM_DIAGRAM):   end;
2458375   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2458376   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2458377   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2458378   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2458379   +   end;
MPRINT(EM_DIAGRAM):   end;
2458380   +end;
MPRINT(EM_DIAGRAM):   end;
2458381   +
2458382   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2458383   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
2458384   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2458385   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2458386   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2458387   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2458388   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2458389   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2458390   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2458391   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2458392   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2458393   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2458394   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2458395   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2458396   +end;
MPRINT(EM_DIAGRAM):   end;
2458397   +else do;
MPRINT(EM_DIAGRAM):   else do;
2458398   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2458399   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2458400   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2458401   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2458402   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2458403   +   end;
MPRINT(EM_DIAGRAM):   end;
2458404   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2458405   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2458406   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2458407   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2458408   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2458409   +   end;
MPRINT(EM_DIAGRAM):   end;
2458410   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2458411   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2458412   +   end;
MPRINT(EM_DIAGRAM):   end;
2458413   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2458414   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2458415   +   end;
MPRINT(EM_DIAGRAM):   end;
2458416   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2458417   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2458418   +   end;
MPRINT(EM_DIAGRAM):   end;
2458419   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2458420   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2458421   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2458422   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2458423   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2458424   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2458425   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2458426   +   end;
MPRINT(EM_DIAGRAM):   end;
2458427   +end;
MPRINT(EM_DIAGRAM):   end;
2458428   +
2458429   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2458430   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2458431   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
2458432   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2458433   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2458434   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2458435   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2458436   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2458437   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2458438   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2458439   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2458440   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2458441   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2458442   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2458443   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2458444   +end;
MPRINT(EM_DIAGRAM):   end;
2458445   +else do;
MPRINT(EM_DIAGRAM):   else do;
2458446   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2458447   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2458448   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2458449   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2458450   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2458451   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2458452   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2458453   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2458454   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2458455   +         end;
MPRINT(EM_DIAGRAM):   end;
2458456   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2458457   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2458458   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2458459   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2458460   +            end;
MPRINT(EM_DIAGRAM):   end;
2458461   +         end;
MPRINT(EM_DIAGRAM):   end;
2458462   +      end;
MPRINT(EM_DIAGRAM):   end;
2458463   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2458464   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2458465   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2458466   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2458467   +         end;
MPRINT(EM_DIAGRAM):   end;
2458468   +      end;
MPRINT(EM_DIAGRAM):   end;
2458469   +   end;
MPRINT(EM_DIAGRAM):   end;
2458470   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2458471   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2458472   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2458473   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2458474   +      end;
MPRINT(EM_DIAGRAM):   end;
2458475   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2458476   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2458477   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2458478   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2458479   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2458480   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2458481   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2458482   +         end;
MPRINT(EM_DIAGRAM):   end;
2458483   +      end;
MPRINT(EM_DIAGRAM):   end;
2458484   +   end;
MPRINT(EM_DIAGRAM):   end;
2458485   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2458486   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2458487   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2458488   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2458489   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2458490   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2458491   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2458492   +   end;
MPRINT(EM_DIAGRAM):   end;
2458493   +end;
MPRINT(EM_DIAGRAM):   end;
2458494   +
2458495   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2458496   +*** Checking missing input Interval
2458497   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2458498   +
2458499   +IF NMISS(
2458500   +   AcceptedCmpTotal ,
2458501   +   Age ,
2458502   +   Frq ,
2458503   +   Income ,
2458504   +   Kidhome ,
2458505   +   Mnt ,
2458506   +   MntFishProducts ,
2458507   +   MntFruits ,
2458508   +   MntGoldProds ,
2458509   +   MntMeatProducts ,
2458510   +   MntSweetProducts ,
2458511   +   MntWines ,
2458512   +   MonthsAsCustomer ,
2458513   +   NumCatalogPurchases ,
2458514   +   NumDealsPurchases ,
2458515   +   NumDistPurchases ,
2458516   +   NumStorePurchases ,
2458517   +   NumWebPurchases ,
2458518   +   NumWebVisitsMonth ,
2458519   +   RFMstat ,
2458520   +   RMntFrq ,
2458521   +   Recency ,
2458522   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
2458523   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2458524   +
2458525   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2458526   +END;
MPRINT(EM_DIAGRAM):   END;
2458527   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2458528   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2458529   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2458530   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2458531   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2458532   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2458533   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2458534   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2458535   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2458536   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2458537   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2458538   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2458539   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2458540   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2458541   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2458542   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2458543   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2458544   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2458545   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2458546   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2458547   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2458548   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2458549   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 *
MonthsAsCustomer ;
2458550   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2458551   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2458552   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2458553   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2458554   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2458555   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2458556   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2458557   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2458558   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2458559   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2458560   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2458561   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2458562   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2458563   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2458564   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2458565   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2458566   +END;
MPRINT(EM_DIAGRAM):   END;
2458567   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2458568   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2458569   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2458570   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2458571   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2458572   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2458573   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2458574   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2458575   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2458576   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2458577   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2458578   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2458579   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2458580   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2458581   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2458582   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2458583   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2458584   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2458585   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2458586   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2458587   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2458588   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2458589   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
2458590   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2458591   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2458592   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2458593   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2458594   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2458595   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2458596   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2458597   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2458598   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2458599   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2458600   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 *
MonthsAsCustomer ;
2458601   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2458602   +   ELSE S_NumCatalogPurchases
2458603   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2458604   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2458605   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2458606   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2458607   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2458608   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2458609   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2458610   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2458611   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2458612   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2458613   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2458614   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2458615   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2458616   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2458617   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2458618   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2458619   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2458620   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2458621   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2458622   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2458623   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2458624   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2458625   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2458626   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2458627   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2458628   +END;
MPRINT(EM_DIAGRAM):   END;
2458629   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2458630   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2458631   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2458632   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2458633   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2458634   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2458635   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2458636   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2458637   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2458638   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2458639   +   H1x1_1  =     0.16786131610493 * S_AcceptedCmpTotal
2458640   +          +     0.08150129707008 * S_Age  +    -0.00076335149511 * S_Frq
2458641   +          +     2.37648351383272 * S_Income  +    -1.63260278456818 *
2458642   +        S_Kidhome  +     -0.6720941090663 * S_Mnt  +    -0.03176174297509 *
2458643   +        S_MntFishProducts  +    -0.03796990721617 * S_MntFruits
2458644   +          +    -0.17020485447842 * S_MntGoldProds  +      0.7709093878281 *
2458645   +        S_MntMeatProducts  +    -0.26168538456938 * S_MntSweetProducts
2458646   +          +    -1.36275284328546 * S_MntWines  +    -0.30344694826738 *
2458647   +        S_MonthsAsCustomer  +     1.68662611500615 * S_NumCatalogPurchases
2458648   +          +     1.32037113020393 * S_NumDealsPurchases
2458649   +          +     0.42879249227132 * S_NumDistPurchases
2458650   +          +    -0.89190172778783 * S_NumStorePurchases
2458651   +          +    -0.87975442613962 * S_NumWebPurchases
2458652   +          +     2.98977282825831 * S_NumWebVisitsMonth
2458653   +          +     0.16388418187981 * S_RFMstat  +     0.63858980984599 *
2458654   +        S_RMntFrq  +    -2.53833222281652 * S_Recency
2458655   +          +    -2.72141665283523 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.16786131610493 * S_AcceptedCmpTotal + 0.08150129707008 *
S_Age + -0.00076335149511 * S_Frq + 2.37648351383272 * S_Income + -1.63260278456818 *
S_Kidhome + -0.6720941090663 * S_Mnt + -0.03176174297509 * S_MntFishProducts +
-0.03796990721617 * S_MntFruits + -0.17020485447842 * S_MntGoldProds + 0.7709093878281 *
S_MntMeatProducts + -0.26168538456938 * S_MntSweetProducts + -1.36275284328546 * S_MntWines +
-0.30344694826738 * S_MonthsAsCustomer + 1.68662611500615 * S_NumCatalogPurchases +
1.32037113020393 * S_NumDealsPurchases + 0.42879249227132 * S_NumDistPurchases +
-0.89190172778783 * S_NumStorePurchases + -0.87975442613962 * S_NumWebPurchases +
2.98977282825831 * S_NumWebVisitsMonth + 0.16388418187981 * S_RFMstat + 0.63858980984599 *
S_RMntFrq + -2.53833222281652 * S_Recency + -2.72141665283523 * S_Teenhome ;
2458656   +   H1x1_2  =    -1.16140709294501 * S_AcceptedCmpTotal
2458657   +          +    -0.87210661607894 * S_Age  +    -0.15365607228782 * S_Frq
2458658   +          +    -1.14855351318782 * S_Income  +     -0.3792851632462 *
2458659   +        S_Kidhome  +    -1.20412080219233 * S_Mnt  +     0.98615533034973 *
2458660   +        S_MntFishProducts  +     0.44541456963703 * S_MntFruits
2458661   +          +    -0.86465923336111 * S_MntGoldProds  +    -5.15063925950455 *
2458662   +        S_MntMeatProducts  +     0.54937255903381 * S_MntSweetProducts
2458663   +          +      1.1566197343428 * S_MntWines  +     1.05956341559861 *
2458664   +        S_MonthsAsCustomer  +    -1.51353620179805 * S_NumCatalogPurchases
2458665   +          +    -1.16737670931605 * S_NumDealsPurchases
2458666   +          +     0.08205195039242 * S_NumDistPurchases
2458667   +          +    -0.65367044520084 * S_NumStorePurchases
2458668   +          +     2.39693083674757 * S_NumWebPurchases
2458669   +          +     0.18432526469897 * S_NumWebVisitsMonth
2458670   +          +    -0.81660690569703 * S_RFMstat  +      0.2679378370467 *
2458671   +        S_RMntFrq  +    -0.12214066685673 * S_Recency
2458672   +          +     1.80138107382539 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -1.16140709294501 * S_AcceptedCmpTotal + -0.87210661607894 *
S_Age + -0.15365607228782 * S_Frq + -1.14855351318782 * S_Income + -0.3792851632462 *
S_Kidhome + -1.20412080219233 * S_Mnt + 0.98615533034973 * S_MntFishProducts +
0.44541456963703 * S_MntFruits + -0.86465923336111 * S_MntGoldProds + -5.15063925950455 *
S_MntMeatProducts + 0.54937255903381 * S_MntSweetProducts + 1.1566197343428 * S_MntWines +
1.05956341559861 * S_MonthsAsCustomer + -1.51353620179805 * S_NumCatalogPurchases +
-1.16737670931605 * S_NumDealsPurchases + 0.08205195039242 * S_NumDistPurchases +
-0.65367044520084 * S_NumStorePurchases + 2.39693083674757 * S_NumWebPurchases +
0.18432526469897 * S_NumWebVisitsMonth + -0.81660690569703 * S_RFMstat + 0.2679378370467 *
S_RMntFrq + -0.12214066685673 * S_Recency + 1.80138107382539 * S_Teenhome ;
2458673   +   H1x1_3  =      2.0905555295419 * S_AcceptedCmpTotal
2458674   +          +    -0.23515107640805 * S_Age  +    -0.34980320997139 * S_Frq
2458675   +          +     0.96612788543649 * S_Income  +    -0.57035066115881 *
2458676   +        S_Kidhome  +     0.22762934410578 * S_Mnt  +    -0.52536382903021 *
2458677   +        S_MntFishProducts  +    -1.18451511831956 * S_MntFruits
2458678   +          +     0.15600368092559 * S_MntGoldProds  +     2.66964572205551 *
2458679   +        S_MntMeatProducts  +    -0.66381928008493 * S_MntSweetProducts
2458680   +          +    -1.34669953562975 * S_MntWines  +     1.35404821514849 *
2458681   +        S_MonthsAsCustomer  +     1.74839628716461 * S_NumCatalogPurchases
2458682   +          +     0.76616480025024 * S_NumDealsPurchases
2458683   +          +     0.42823368706255 * S_NumDistPurchases
2458684   +          +    -1.16998364854907 * S_NumStorePurchases
2458685   +          +     -1.0841896541746 * S_NumWebPurchases
2458686   +          +     2.74837744375079 * S_NumWebVisitsMonth
2458687   +          +    -0.12893804494501 * S_RFMstat  +    -0.62922223536042 *
2458688   +        S_RMntFrq  +    -5.13438280616518 * S_Recency
2458689   +          +    -0.03717013845941 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 2.0905555295419 * S_AcceptedCmpTotal + -0.23515107640805 *
S_Age + -0.34980320997139 * S_Frq + 0.96612788543649 * S_Income + -0.57035066115881 *
S_Kidhome + 0.22762934410578 * S_Mnt + -0.52536382903021 * S_MntFishProducts +
-1.18451511831956 * S_MntFruits + 0.15600368092559 * S_MntGoldProds + 2.66964572205551 *
S_MntMeatProducts + -0.66381928008493 * S_MntSweetProducts + -1.34669953562975 * S_MntWines +
1.35404821514849 * S_MonthsAsCustomer + 1.74839628716461 * S_NumCatalogPurchases +
0.76616480025024 * S_NumDealsPurchases + 0.42823368706255 * S_NumDistPurchases +
-1.16998364854907 * S_NumStorePurchases + -1.0841896541746 * S_NumWebPurchases +
2.74837744375079 * S_NumWebVisitsMonth + -0.12893804494501 * S_RFMstat + -0.62922223536042 *
S_RMntFrq + -5.13438280616518 * S_Recency + -0.03717013845941 * S_Teenhome ;
2458690   +   H1x1_4  =     0.00721395593412 * S_AcceptedCmpTotal
2458691   +          +    -0.01540387767211 * S_Age  +    -0.84860703860633 * S_Frq
2458692   +          +    -1.02288627805121 * S_Income  +    -1.09101870516967 *
2458693   +        S_Kidhome  +    -0.49364597366691 * S_Mnt  +    -0.46832600024559 *
2458694   +        S_MntFishProducts  +     0.18419647776638 * S_MntFruits
2458695   +          +     0.08548650236624 * S_MntGoldProds  +      3.4353205628246 *
2458696   +        S_MntMeatProducts  +    -0.34836704949861 * S_MntSweetProducts
2458697   +          +    -2.43294028965601 * S_MntWines  +       -0.52018014955 *
2458698   +        S_MonthsAsCustomer  +     0.64700842330282 * S_NumCatalogPurchases
2458699   +          +     0.78421010501058 * S_NumDealsPurchases
2458700   +          +     0.01075885160671 * S_NumDistPurchases
2458701   +          +    -1.99395040717832 * S_NumStorePurchases
2458702   +          +    -1.02908330834262 * S_NumWebPurchases
2458703   +          +     2.79163466516477 * S_NumWebVisitsMonth
2458704   +          +    -0.02537920152644 * S_RFMstat  +    -0.42457000565561 *
2458705   +        S_RMntFrq  +     -2.0907247135068 * S_Recency
2458706   +          +     0.74119954026621 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.00721395593412 * S_AcceptedCmpTotal + -0.01540387767211 *
S_Age + -0.84860703860633 * S_Frq + -1.02288627805121 * S_Income + -1.09101870516967 *
S_Kidhome + -0.49364597366691 * S_Mnt + -0.46832600024559 * S_MntFishProducts +
0.18419647776638 * S_MntFruits + 0.08548650236624 * S_MntGoldProds + 3.4353205628246 *
S_MntMeatProducts + -0.34836704949861 * S_MntSweetProducts + -2.43294028965601 * S_MntWines +
-0.52018014955 * S_MonthsAsCustomer + 0.64700842330282 * S_NumCatalogPurchases +
0.78421010501058 * S_NumDealsPurchases + 0.01075885160671 * S_NumDistPurchases +
-1.99395040717832 * S_NumStorePurchases + -1.02908330834262 * S_NumWebPurchases +
2.79163466516477 * S_NumWebVisitsMonth + -0.02537920152644 * S_RFMstat + -0.42457000565561 *
S_RMntFrq + -2.0907247135068 * S_Recency + 0.74119954026621 * S_Teenhome ;
2458707   +   H1x1_5  =    -1.61701205426558 * S_AcceptedCmpTotal
2458708   +          +     0.08257295395479 * S_Age  +    -0.68185680658717 * S_Frq
2458709   +          +    -1.39465125759406 * S_Income  +    -1.25029109577242 *
2458710   +        S_Kidhome  +    -1.09090107886966 * S_Mnt  +     1.64350195586938 *
2458711   +        S_MntFishProducts  +      0.5087421773332 * S_MntFruits
2458712   +          +      0.4047616469084 * S_MntGoldProds  +    -7.16241250715453 *
2458713   +        S_MntMeatProducts  +    -0.92562420397097 * S_MntSweetProducts
2458714   +          +     1.87307481667927 * S_MntWines  +    -0.53417946416471 *
2458715   +        S_MonthsAsCustomer  +    -1.53123660652072 * S_NumCatalogPurchases
2458716   +          +    -1.04219068390022 * S_NumDealsPurchases
2458717   +          +    -0.45770204483973 * S_NumDistPurchases
2458718   +          +    -0.04941442229195 * S_NumStorePurchases
2458719   +          +     0.67187353161183 * S_NumWebPurchases
2458720   +          +     2.01907760553871 * S_NumWebVisitsMonth
2458721   +          +    -1.68329765100269 * S_RFMstat  +     0.29244142334331 *
2458722   +        S_RMntFrq  +    -1.12913051410394 * S_Recency
2458723   +          +     0.43082751824484 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.61701205426558 * S_AcceptedCmpTotal + 0.08257295395479 *
S_Age + -0.68185680658717 * S_Frq + -1.39465125759406 * S_Income + -1.25029109577242 *
S_Kidhome + -1.09090107886966 * S_Mnt + 1.64350195586938 * S_MntFishProducts + 0.5087421773332
* S_MntFruits + 0.4047616469084 * S_MntGoldProds + -7.16241250715453 * S_MntMeatProducts +
-0.92562420397097 * S_MntSweetProducts + 1.87307481667927 * S_MntWines + -0.53417946416471 *
S_MonthsAsCustomer + -1.53123660652072 * S_NumCatalogPurchases + -1.04219068390022 *
S_NumDealsPurchases + -0.45770204483973 * S_NumDistPurchases + -0.04941442229195 *
S_NumStorePurchases + 0.67187353161183 * S_NumWebPurchases + 2.01907760553871 *
S_NumWebVisitsMonth + -1.68329765100269 * S_RFMstat + 0.29244142334331 * S_RMntFrq +
-1.12913051410394 * S_Recency + 0.43082751824484 * S_Teenhome ;
2458724   +   H1x1_1  = H1x1_1  +    -0.44646416045725 * AcceptedCmp10
2458725   +          +    -0.51992887099168 * AcceptedCmp20  +    -1.12974688442196 *
2458726   +        AcceptedCmp30  +    -0.25247614927616 * AcceptedCmp40
2458727   +          +     -1.0839587453165 * AcceptedCmp50  +    -0.37542128912082 *
2458728   +        Complain0  +     0.50509109375746 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.44646416045725 * AcceptedCmp10 + -0.51992887099168
* AcceptedCmp20 + -1.12974688442196 * AcceptedCmp30 + -0.25247614927616 * AcceptedCmp40 +
-1.0839587453165 * AcceptedCmp50 + -0.37542128912082 * Complain0 + 0.50509109375746 *
HigherEducationBinary0 ;
2458729   +   H1x1_2  = H1x1_2  +     1.41785862418118 * AcceptedCmp10
2458730   +          +     0.14869386732553 * AcceptedCmp20  +    -0.34292007253529 *
2458731   +        AcceptedCmp30  +    -0.46450669830265 * AcceptedCmp40
2458732   +          +    -0.84675597945703 * AcceptedCmp50  +     -0.0664649548734 *
2458733   +        Complain0  +    -0.45532665777266 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 1.41785862418118 * AcceptedCmp10 + 0.14869386732553 *
AcceptedCmp20 + -0.34292007253529 * AcceptedCmp30 + -0.46450669830265 * AcceptedCmp40 +
-0.84675597945703 * AcceptedCmp50 + -0.0664649548734 * Complain0 + -0.45532665777266 *
HigherEducationBinary0 ;
2458734   +   H1x1_3  = H1x1_3  +    -0.77549230890552 * AcceptedCmp10
2458735   +          +    -1.36005205352388 * AcceptedCmp20  +    -0.77268925112364 *
2458736   +        AcceptedCmp30  +    -1.48651970256564 * AcceptedCmp40
2458737   +          +    -1.49771960438108 * AcceptedCmp50  +     0.05855673938529 *
2458738   +        Complain0  +      0.5650947463497 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.77549230890552 * AcceptedCmp10 + -1.36005205352388
* AcceptedCmp20 + -0.77268925112364 * AcceptedCmp30 + -1.48651970256564 * AcceptedCmp40 +
-1.49771960438108 * AcceptedCmp50 + 0.05855673938529 * Complain0 + 0.5650947463497 *
HigherEducationBinary0 ;
2458739   +   H1x1_4  = H1x1_4  +    -0.67577364181798 * AcceptedCmp10
2458740   +          +    -0.90920539880387 * AcceptedCmp20  +    -0.10856872028934 *
2458741   +        AcceptedCmp30  +    -0.17408320421731 * AcceptedCmp40
2458742   +          +    -0.40718112138881 * AcceptedCmp50  +    -1.15772819875829 *
2458743   +        Complain0  +    -0.63688652305256 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.67577364181798 * AcceptedCmp10 + -0.90920539880387
* AcceptedCmp20 + -0.10856872028934 * AcceptedCmp30 + -0.17408320421731 * AcceptedCmp40 +
-0.40718112138881 * AcceptedCmp50 + -1.15772819875829 * Complain0 + -0.63688652305256 *
HigherEducationBinary0 ;
2458744   +   H1x1_5  = H1x1_5  +      -0.257461635853 * AcceptedCmp10
2458745   +          +    -0.53931888306725 * AcceptedCmp20  +    -0.18314917937273 *
2458746   +        AcceptedCmp30  +    -0.63373606551928 * AcceptedCmp40
2458747   +          +    -0.22117496766649 * AcceptedCmp50  +    -0.96313784449205 *
2458748   +        Complain0  +    -0.42031825118642 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.257461635853 * AcceptedCmp10 + -0.53931888306725 *
AcceptedCmp20 + -0.18314917937273 * AcceptedCmp30 + -0.63373606551928 * AcceptedCmp40 +
-0.22117496766649 * AcceptedCmp50 + -0.96313784449205 * Complain0 + -0.42031825118642 *
HigherEducationBinary0 ;
2458749   +   H1x1_1  = H1x1_1  +    -0.61947659516101 * Education2n_Cycle
2458750   +          +     0.35542867116569 * EducationBasic  +    -0.40115062807285 *
2458751   +        EducationGraduation  +     0.09596442360106 * EducationMaster
2458752   +          +     2.58907527032049 * Marital_StatusDivorced
2458753   +          +    -2.45549008158921 * Marital_StatusMarried
2458754   +          +     2.56223650840768 * Marital_StatusSingle
2458755   +          +    -2.57680442835747 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.61947659516101 * Education2n_Cycle +
0.35542867116569 * EducationBasic + -0.40115062807285 * EducationGraduation + 0.09596442360106
* EducationMaster + 2.58907527032049 * Marital_StatusDivorced + -2.45549008158921 *
Marital_StatusMarried + 2.56223650840768 * Marital_StatusSingle + -2.57680442835747 *
Marital_StatusTogether ;
2458756   +   H1x1_2  = H1x1_2  +    -0.89996232033524 * Education2n_Cycle
2458757   +          +     0.51901949778729 * EducationBasic  +     0.48428543845596 *
2458758   +        EducationGraduation  +     0.29249899969052 * EducationMaster
2458759   +          +     0.83917299191368 * Marital_StatusDivorced
2458760   +          +    -0.62624692699191 * Marital_StatusMarried
2458761   +          +    -0.22585060624911 * Marital_StatusSingle
2458762   +          +    -1.13600554287291 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.89996232033524 * Education2n_Cycle +
0.51901949778729 * EducationBasic + 0.48428543845596 * EducationGraduation + 0.29249899969052
* EducationMaster + 0.83917299191368 * Marital_StatusDivorced + -0.62624692699191 *
Marital_StatusMarried + -0.22585060624911 * Marital_StatusSingle + -1.13600554287291 *
Marital_StatusTogether ;
2458763   +   H1x1_3  = H1x1_3  +    -0.14267095105584 * Education2n_Cycle
2458764   +          +    -0.02301358792856 * EducationBasic  +     0.52040244367562 *
2458765   +        EducationGraduation  +     -1.3163356801876 * EducationMaster
2458766   +          +    -0.65063506696715 * Marital_StatusDivorced
2458767   +          +    -2.37495865381256 * Marital_StatusMarried
2458768   +          +    -0.54954654146904 * Marital_StatusSingle
2458769   +          +    -2.20184943463859 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.14267095105584 * Education2n_Cycle +
-0.02301358792856 * EducationBasic + 0.52040244367562 * EducationGraduation + -1.3163356801876
* EducationMaster + -0.65063506696715 * Marital_StatusDivorced + -2.37495865381256 *
Marital_StatusMarried + -0.54954654146904 * Marital_StatusSingle + -2.20184943463859 *
Marital_StatusTogether ;
2458770   +   H1x1_4  = H1x1_4  +     0.07824072331908 * Education2n_Cycle
2458771   +          +    -0.70728597193571 * EducationBasic  +    -0.08522817414387 *
2458772   +        EducationGraduation  +     0.07916018399549 * EducationMaster
2458773   +          +     0.16185824798364 * Marital_StatusDivorced
2458774   +          +    -0.08142416735136 * Marital_StatusMarried
2458775   +          +    -0.20392270385969 * Marital_StatusSingle
2458776   +          +    -0.16702436233017 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.07824072331908 * Education2n_Cycle +
-0.70728597193571 * EducationBasic + -0.08522817414387 * EducationGraduation +
0.07916018399549 * EducationMaster + 0.16185824798364 * Marital_StatusDivorced +
-0.08142416735136 * Marital_StatusMarried + -0.20392270385969 * Marital_StatusSingle +
-0.16702436233017 * Marital_StatusTogether ;
2458777   +   H1x1_5  = H1x1_5  +    -0.24374540557838 * Education2n_Cycle
2458778   +          +    -0.69820143786999 * EducationBasic  +    -0.60198982003005 *
2458779   +        EducationGraduation  +     0.28107355175103 * EducationMaster
2458780   +          +      -0.516522631078 * Marital_StatusDivorced
2458781   +          +    -0.61661247789976 * Marital_StatusMarried
2458782   +          +    -0.99533130308294 * Marital_StatusSingle
2458783   +          +    -0.36897004084592 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.24374540557838 * Education2n_Cycle +
-0.69820143786999 * EducationBasic + -0.60198982003005 * EducationGraduation +
0.28107355175103 * EducationMaster + -0.516522631078 * Marital_StatusDivorced +
-0.61661247789976 * Marital_StatusMarried + -0.99533130308294 * Marital_StatusSingle +
-0.36897004084592 * Marital_StatusTogether ;
2458784   +   H1x1_1  =    -2.48464133714558 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -2.48464133714558 + H1x1_1 ;
2458785   +   H1x1_2  =    -1.27353840480002 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -1.27353840480002 + H1x1_2 ;
2458786   +   H1x1_3  =    -1.74000879961851 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -1.74000879961851 + H1x1_3 ;
2458787   +   H1x1_4  =    -0.38838285632991 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.38838285632991 + H1x1_4 ;
2458788   +   H1x1_5  =    -0.14124488553728 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.14124488553728 + H1x1_5 ;
2458789   +   H1x1_6  = 0;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0;
2458790   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
2458791   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2458792   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
2458793   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
2458794   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
2458795   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
2458796   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
2458797   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
2458798   +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
2458799   +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
2458800   +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
2458801   +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
2458802   +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
2458803   +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
2458804   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
2458805   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
2458806   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
2458807   +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
2458808   +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
2458809   +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
2458810   +END;
MPRINT(EM_DIAGRAM):   END;
2458811   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2458812   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2458813   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2458814   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2458815   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2458816   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
2458817   +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
2458818   +END;
MPRINT(EM_DIAGRAM):   END;
2458819   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2458820   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
2458821   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2458822   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2458823   +   H1x2_1  =     0.48404108721156 * S_AcceptedCmpTotal
2458824   +          +    -0.27070568741648 * S_Age  +    -0.78729393257177 * S_Frq
2458825   +          +    -0.22841203379079 * S_Income  +      1.7948359601764 *
2458826   +        S_Kidhome  +     0.16415271082275 * S_Mnt  +     0.68709045116477 *
2458827   +        S_MntFishProducts  +     1.40499150479431 * S_MntFruits
2458828   +          +     1.76690927096327 * S_MntGoldProds  +    -0.47805967324795 *
2458829   +        S_MntMeatProducts  +    -1.98462171861386 * S_MntSweetProducts
2458830   +          +     0.17732042205332 * S_MntWines  +    -2.68647979937092 *
2458831   +        S_MonthsAsCustomer  +     0.66724634672152 * S_NumCatalogPurchases
2458832   +          +    -0.03801022287706 * S_NumDealsPurchases
2458833   +          +    -1.50723574966419 * S_NumDistPurchases
2458834   +          +    -0.21514545448485 * S_NumStorePurchases
2458835   +          +    -0.50179555233865 * S_NumWebPurchases
2458836   +          +    -0.68226572560161 * S_NumWebVisitsMonth
2458837   +          +    -1.16287961930374 * S_RFMstat  +    -0.10835316604382 *
2458838   +        S_RMntFrq  +     0.78178939203913 * S_Recency
2458839   +          +     0.99430928489958 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.48404108721156 * S_AcceptedCmpTotal + -0.27070568741648 *
S_Age + -0.78729393257177 * S_Frq + -0.22841203379079 * S_Income + 1.7948359601764 * S_Kidhome
+ 0.16415271082275 * S_Mnt + 0.68709045116477 * S_MntFishProducts + 1.40499150479431 *
S_MntFruits + 1.76690927096327 * S_MntGoldProds + -0.47805967324795 * S_MntMeatProducts +
-1.98462171861386 * S_MntSweetProducts + 0.17732042205332 * S_MntWines + -2.68647979937092 *
S_MonthsAsCustomer + 0.66724634672152 * S_NumCatalogPurchases + -0.03801022287706 *
S_NumDealsPurchases + -1.50723574966419 * S_NumDistPurchases + -0.21514545448485 *
S_NumStorePurchases + -0.50179555233865 * S_NumWebPurchases + -0.68226572560161 *
S_NumWebVisitsMonth + -1.16287961930374 * S_RFMstat + -0.10835316604382 * S_RMntFrq +
0.78178939203913 * S_Recency + 0.99430928489958 * S_Teenhome ;
2458840   +   H1x2_2  =    -0.36352858735119 * S_AcceptedCmpTotal
2458841   +          +    -0.57224467079409 * S_Age  +    -1.50170848997829 * S_Frq
2458842   +          +    -0.38902839025885 * S_Income  +     -1.1798795668612 *
2458843   +        S_Kidhome  +     -0.1290183198617 * S_Mnt  +     0.76723261406072 *
2458844   +        S_MntFishProducts  +     -0.2940014517298 * S_MntFruits
2458845   +          +     1.10823983171432 * S_MntGoldProds  +    -0.31483479967732 *
2458846   +        S_MntMeatProducts  +     1.52044892546638 * S_MntSweetProducts
2458847   +          +     0.93667207634948 * S_MntWines  +     1.38654947651763 *
2458848   +        S_MonthsAsCustomer  +     0.60618457384701 * S_NumCatalogPurchases
2458849   +          +     0.70551335536975 * S_NumDealsPurchases
2458850   +          +     0.02824488988803 * S_NumDistPurchases
2458851   +          +    -0.47958123842808 * S_NumStorePurchases
2458852   +          +     1.04559003239583 * S_NumWebPurchases
2458853   +          +    -0.58386087813772 * S_NumWebVisitsMonth
2458854   +          +     0.30550498646512 * S_RFMstat  +     0.30157778523343 *
2458855   +        S_RMntFrq  +    -0.05848082255965 * S_Recency
2458856   +          +     1.93017367885145 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.36352858735119 * S_AcceptedCmpTotal + -0.57224467079409 *
S_Age + -1.50170848997829 * S_Frq + -0.38902839025885 * S_Income + -1.1798795668612 *
S_Kidhome + -0.1290183198617 * S_Mnt + 0.76723261406072 * S_MntFishProducts + -0.2940014517298
* S_MntFruits + 1.10823983171432 * S_MntGoldProds + -0.31483479967732 * S_MntMeatProducts +
1.52044892546638 * S_MntSweetProducts + 0.93667207634948 * S_MntWines + 1.38654947651763 *
S_MonthsAsCustomer + 0.60618457384701 * S_NumCatalogPurchases + 0.70551335536975 *
S_NumDealsPurchases + 0.02824488988803 * S_NumDistPurchases + -0.47958123842808 *
S_NumStorePurchases + 1.04559003239583 * S_NumWebPurchases + -0.58386087813772 *
S_NumWebVisitsMonth + 0.30550498646512 * S_RFMstat + 0.30157778523343 * S_RMntFrq +
-0.05848082255965 * S_Recency + 1.93017367885145 * S_Teenhome ;
2458857   +   H1x2_3  =    -1.42573562358231 * S_AcceptedCmpTotal
2458858   +          +    -1.32139459670271 * S_Age  +    -0.65089374259133 * S_Frq
2458859   +          +     0.40762251828155 * S_Income  +     0.07844400105703 *
2458860   +        S_Kidhome  +     0.50965373569965 * S_Mnt  +     0.16029734923155 *
2458861   +        S_MntFishProducts  +     0.09920766855666 * S_MntFruits
2458862   +          +     1.72613699296152 * S_MntGoldProds  +    -0.05634715837952 *
2458863   +        S_MntMeatProducts  +    -0.46288044931269 * S_MntSweetProducts
2458864   +          +    -1.56275217321856 * S_MntWines  +     0.47573724745363 *
2458865   +        S_MonthsAsCustomer  +     0.24362096681468 * S_NumCatalogPurchases
2458866   +          +    -0.28907339261907 * S_NumDealsPurchases
2458867   +          +     0.04310505858352 * S_NumDistPurchases
2458868   +          +    -0.99594604666889 * S_NumStorePurchases
2458869   +          +    -0.58870940220114 * S_NumWebPurchases
2458870   +          +     0.84018399925148 * S_NumWebVisitsMonth
2458871   +          +    -0.19517311010454 * S_RFMstat  +     -0.3463233802461 *
2458872   +        S_RMntFrq  +    -1.47730936960999 * S_Recency
2458873   +          +    -0.88597688046705 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -1.42573562358231 * S_AcceptedCmpTotal + -1.32139459670271 *
S_Age + -0.65089374259133 * S_Frq + 0.40762251828155 * S_Income + 0.07844400105703 * S_Kidhome
+ 0.50965373569965 * S_Mnt + 0.16029734923155 * S_MntFishProducts + 0.09920766855666 *
S_MntFruits + 1.72613699296152 * S_MntGoldProds + -0.05634715837952 * S_MntMeatProducts +
-0.46288044931269 * S_MntSweetProducts + -1.56275217321856 * S_MntWines + 0.47573724745363 *
S_MonthsAsCustomer + 0.24362096681468 * S_NumCatalogPurchases + -0.28907339261907 *
S_NumDealsPurchases + 0.04310505858352 * S_NumDistPurchases + -0.99594604666889 *
S_NumStorePurchases + -0.58870940220114 * S_NumWebPurchases + 0.84018399925148 *
S_NumWebVisitsMonth + -0.19517311010454 * S_RFMstat + -0.3463233802461 * S_RMntFrq +
-1.47730936960999 * S_Recency + -0.88597688046705 * S_Teenhome ;
2458874   +   H1x2_4  =     0.11016580381662 * S_AcceptedCmpTotal
2458875   +          +     0.30908576425954 * S_Age  +     0.34179480828109 * S_Frq
2458876   +          +     0.40584056795753 * S_Income  +    -0.45712899846476 *
2458877   +        S_Kidhome  +     1.12080510316382 * S_Mnt  +     0.48988466623601 *
2458878   +        S_MntFishProducts  +    -0.33589219598754 * S_MntFruits
2458879   +          +     0.89305356089927 * S_MntGoldProds  +    -2.00512215642683 *
2458880   +        S_MntMeatProducts  +     1.10859074670332 * S_MntSweetProducts
2458881   +          +     -1.0064133988839 * S_MntWines  +      0.7768603559605 *
2458882   +        S_MonthsAsCustomer  +     0.97922554259242 * S_NumCatalogPurchases
2458883   +          +     0.52917289878604 * S_NumDealsPurchases
2458884   +          +     0.30974142545809 * S_NumDistPurchases
2458885   +          +    -0.36081450643799 * S_NumStorePurchases
2458886   +          +    -0.28418053386759 * S_NumWebPurchases
2458887   +          +    -0.80759462497096 * S_NumWebVisitsMonth
2458888   +          +    -1.12633439579018 * S_RFMstat  +    -0.14662678398603 *
2458889   +        S_RMntFrq  +    -0.02418118976368 * S_Recency
2458890   +          +    -0.46548253671298 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.11016580381662 * S_AcceptedCmpTotal + 0.30908576425954 *
S_Age + 0.34179480828109 * S_Frq + 0.40584056795753 * S_Income + -0.45712899846476 * S_Kidhome
+ 1.12080510316382 * S_Mnt + 0.48988466623601 * S_MntFishProducts + -0.33589219598754 *
S_MntFruits + 0.89305356089927 * S_MntGoldProds + -2.00512215642683 * S_MntMeatProducts +
1.10859074670332 * S_MntSweetProducts + -1.0064133988839 * S_MntWines + 0.7768603559605 *
S_MonthsAsCustomer + 0.97922554259242 * S_NumCatalogPurchases + 0.52917289878604 *
S_NumDealsPurchases + 0.30974142545809 * S_NumDistPurchases + -0.36081450643799 *
S_NumStorePurchases + -0.28418053386759 * S_NumWebPurchases + -0.80759462497096 *
S_NumWebVisitsMonth + -1.12633439579018 * S_RFMstat + -0.14662678398603 * S_RMntFrq +
-0.02418118976368 * S_Recency + -0.46548253671298 * S_Teenhome ;
2458891   +   H1x2_5  =    -0.55551536908819 * S_AcceptedCmpTotal
2458892   +          +    -0.09163465220674 * S_Age  +    -0.35937602626275 * S_Frq
2458893   +          +     0.61145646041534 * S_Income  +     0.28920493959955 *
2458894   +        S_Kidhome  +     0.71661843805688 * S_Mnt  +     0.25254041554237 *
2458895   +        S_MntFishProducts  +    -0.38704785732563 * S_MntFruits
2458896   +          +    -0.16912995068939 * S_MntGoldProds  +     0.21440191729631 *
2458897   +        S_MntMeatProducts  +    -0.49507693220329 * S_MntSweetProducts
2458898   +          +      0.3153765288287 * S_MntWines  +    -0.15329574285112 *
2458899   +        S_MonthsAsCustomer  +     1.28722879296429 * S_NumCatalogPurchases
2458900   +          +    -0.47500053723253 * S_NumDealsPurchases
2458901   +          +     0.41421086319635 * S_NumDistPurchases
2458902   +          +     0.69664835428137 * S_NumStorePurchases
2458903   +          +     0.66359306812968 * S_NumWebPurchases
2458904   +          +     0.77931462528741 * S_NumWebVisitsMonth
2458905   +          +     0.05868786291548 * S_RFMstat  +     0.77672802649379 *
2458906   +        S_RMntFrq  +    -1.91226042675868 * S_Recency
2458907   +          +     1.79227856637688 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.55551536908819 * S_AcceptedCmpTotal + -0.09163465220674 *
S_Age + -0.35937602626275 * S_Frq + 0.61145646041534 * S_Income + 0.28920493959955 * S_Kidhome
+ 0.71661843805688 * S_Mnt + 0.25254041554237 * S_MntFishProducts + -0.38704785732563 *
S_MntFruits + -0.16912995068939 * S_MntGoldProds + 0.21440191729631 * S_MntMeatProducts +
-0.49507693220329 * S_MntSweetProducts + 0.3153765288287 * S_MntWines + -0.15329574285112 *
S_MonthsAsCustomer + 1.28722879296429 * S_NumCatalogPurchases + -0.47500053723253 *
S_NumDealsPurchases + 0.41421086319635 * S_NumDistPurchases + 0.69664835428137 *
S_NumStorePurchases + 0.66359306812968 * S_NumWebPurchases + 0.77931462528741 *
S_NumWebVisitsMonth + 0.05868786291548 * S_RFMstat + 0.77672802649379 * S_RMntFrq +
-1.91226042675868 * S_Recency + 1.79227856637688 * S_Teenhome ;
2458908   +   H1x2_1  = H1x2_1  +     1.13471289065691 * AcceptedCmp10
2458909   +          +     0.65974383309652 * AcceptedCmp20  +    -1.87292531678796 *
2458910   +        AcceptedCmp30  +      -1.353797047409 * AcceptedCmp40
2458911   +          +     0.20616786486771 * AcceptedCmp50  +    -0.38264326101775 *
2458912   +        Complain0  +    -0.17807638061615 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 1.13471289065691 * AcceptedCmp10 + 0.65974383309652 *
AcceptedCmp20 + -1.87292531678796 * AcceptedCmp30 + -1.353797047409 * AcceptedCmp40 +
0.20616786486771 * AcceptedCmp50 + -0.38264326101775 * Complain0 + -0.17807638061615 *
HigherEducationBinary0 ;
2458913   +   H1x2_2  = H1x2_2  +     1.21347348622419 * AcceptedCmp10
2458914   +          +    -0.25372740217388 * AcceptedCmp20  +     1.86937589112006 *
2458915   +        AcceptedCmp30  +    -0.04754722838516 * AcceptedCmp40
2458916   +          +    -0.08078800460742 * AcceptedCmp50  +     1.62387969342769 *
2458917   +        Complain0  +    -0.78004732229344 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 1.21347348622419 * AcceptedCmp10 + -0.25372740217388 *
AcceptedCmp20 + 1.86937589112006 * AcceptedCmp30 + -0.04754722838516 * AcceptedCmp40 +
-0.08078800460742 * AcceptedCmp50 + 1.62387969342769 * Complain0 + -0.78004732229344 *
HigherEducationBinary0 ;
2458918   +   H1x2_3  = H1x2_3  +    -0.02152665189186 * AcceptedCmp10
2458919   +          +     0.57207081192818 * AcceptedCmp20  +      0.6212177562119 *
2458920   +        AcceptedCmp30  +    -0.73691462528053 * AcceptedCmp40
2458921   +          +    -0.35326427815838 * AcceptedCmp50  +     0.14875513793176 *
2458922   +        Complain0  +    -0.13978395235915 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -0.02152665189186 * AcceptedCmp10 + 0.57207081192818 *
AcceptedCmp20 + 0.6212177562119 * AcceptedCmp30 + -0.73691462528053 * AcceptedCmp40 +
-0.35326427815838 * AcceptedCmp50 + 0.14875513793176 * Complain0 + -0.13978395235915 *
HigherEducationBinary0 ;
2458923   +   H1x2_4  = H1x2_4  +     0.87315450122595 * AcceptedCmp10
2458924   +          +      0.7868322457627 * AcceptedCmp20  +    -0.23332719513906 *
2458925   +        AcceptedCmp30  +    -0.68817918979928 * AcceptedCmp40
2458926   +          +    -0.57204462412445 * AcceptedCmp50  +    -0.86223238269616 *
2458927   +        Complain0  +     -0.3126348645458 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.87315450122595 * AcceptedCmp10 + 0.7868322457627 *
AcceptedCmp20 + -0.23332719513906 * AcceptedCmp30 + -0.68817918979928 * AcceptedCmp40 +
-0.57204462412445 * AcceptedCmp50 + -0.86223238269616 * Complain0 + -0.3126348645458 *
HigherEducationBinary0 ;
2458928   +   H1x2_5  = H1x2_5  +     0.29282165496733 * AcceptedCmp10
2458929   +          +     1.51708756092369 * AcceptedCmp20  +     1.20268215158483 *
2458930   +        AcceptedCmp30  +     0.30521477351547 * AcceptedCmp40
2458931   +          +    -0.58691162701837 * AcceptedCmp50  +     0.75641665624817 *
2458932   +        Complain0  +      0.7018761099345 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.29282165496733 * AcceptedCmp10 + 1.51708756092369 *
AcceptedCmp20 + 1.20268215158483 * AcceptedCmp30 + 0.30521477351547 * AcceptedCmp40 +
-0.58691162701837 * AcceptedCmp50 + 0.75641665624817 * Complain0 + 0.7018761099345 *
HigherEducationBinary0 ;
2458933   +   H1x2_1  = H1x2_1  +    -0.68955031483686 * Education2n_Cycle
2458934   +          +    -1.63162976419312 * EducationBasic  +     1.58569020932253 *
2458935   +        EducationGraduation  +     0.89392741557091 * EducationMaster
2458936   +          +    -1.34742914042312 * Marital_StatusDivorced
2458937   +          +    -0.75378934918763 * Marital_StatusMarried
2458938   +          +    -1.85411678929217 * Marital_StatusSingle
2458939   +          +     0.34579160965376 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.68955031483686 * Education2n_Cycle +
-1.63162976419312 * EducationBasic + 1.58569020932253 * EducationGraduation + 0.89392741557091
* EducationMaster + -1.34742914042312 * Marital_StatusDivorced + -0.75378934918763 *
Marital_StatusMarried + -1.85411678929217 * Marital_StatusSingle + 0.34579160965376 *
Marital_StatusTogether ;
2458940   +   H1x2_2  = H1x2_2  +     0.91842441316819 * Education2n_Cycle
2458941   +          +    -0.10372785737624 * EducationBasic  +     1.79022097342125 *
2458942   +        EducationGraduation  +      1.4602485898642 * EducationMaster
2458943   +          +     0.47958659206261 * Marital_StatusDivorced
2458944   +          +     -0.9665584294045 * Marital_StatusMarried
2458945   +          +      0.9733784530538 * Marital_StatusSingle
2458946   +          +     0.19258101270915 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.91842441316819 * Education2n_Cycle +
-0.10372785737624 * EducationBasic + 1.79022097342125 * EducationGraduation + 1.4602485898642
* EducationMaster + 0.47958659206261 * Marital_StatusDivorced + -0.9665584294045 *
Marital_StatusMarried + 0.9733784530538 * Marital_StatusSingle + 0.19258101270915 *
Marital_StatusTogether ;
2458947   +   H1x2_3  = H1x2_3  +     1.26817216331303 * Education2n_Cycle
2458948   +          +    -1.60153781162075 * EducationBasic  +    -0.32068567398782 *
2458949   +        EducationGraduation  +     1.49772418974753 * EducationMaster
2458950   +          +    -0.56894207908284 * Marital_StatusDivorced
2458951   +          +    -0.96715106987195 * Marital_StatusMarried
2458952   +          +     1.18678144721443 * Marital_StatusSingle
2458953   +          +     1.05940264255347 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 1.26817216331303 * Education2n_Cycle +
-1.60153781162075 * EducationBasic + -0.32068567398782 * EducationGraduation +
1.49772418974753 * EducationMaster + -0.56894207908284 * Marital_StatusDivorced +
-0.96715106987195 * Marital_StatusMarried + 1.18678144721443 * Marital_StatusSingle +
1.05940264255347 * Marital_StatusTogether ;
2458954   +   H1x2_4  = H1x2_4  +    -1.19824707240276 * Education2n_Cycle
2458955   +          +     0.43905907692169 * EducationBasic  +    -1.18279972023424 *
2458956   +        EducationGraduation  +    -2.01250798855133 * EducationMaster
2458957   +          +     -0.6061959224661 * Marital_StatusDivorced
2458958   +          +     0.03495844244684 * Marital_StatusMarried
2458959   +          +    -0.63896361063244 * Marital_StatusSingle
2458960   +          +     0.74357887057422 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + -1.19824707240276 * Education2n_Cycle +
0.43905907692169 * EducationBasic + -1.18279972023424 * EducationGraduation +
-2.01250798855133 * EducationMaster + -0.6061959224661 * Marital_StatusDivorced +
0.03495844244684 * Marital_StatusMarried + -0.63896361063244 * Marital_StatusSingle +
0.74357887057422 * Marital_StatusTogether ;
2458961   +   H1x2_5  = H1x2_5  +     -0.6530237200396 * Education2n_Cycle
2458962   +          +     0.90062473169279 * EducationBasic  +    -3.01933913602199 *
2458963   +        EducationGraduation  +     -0.1598988619204 * EducationMaster
2458964   +          +     0.82178907301319 * Marital_StatusDivorced
2458965   +          +     1.69543553114589 * Marital_StatusMarried
2458966   +          +     -2.1272067363559 * Marital_StatusSingle
2458967   +          +     0.24274508474634 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + -0.6530237200396 * Education2n_Cycle +
0.90062473169279 * EducationBasic + -3.01933913602199 * EducationGraduation + -0.1598988619204
* EducationMaster + 0.82178907301319 * Marital_StatusDivorced + 1.69543553114589 *
Marital_StatusMarried + -2.1272067363559 * Marital_StatusSingle + 0.24274508474634 *
Marital_StatusTogether ;
2458968   +   H1x2_1  =     0.30842509451224 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.30842509451224 + H1x2_1 ;
2458969   +   H1x2_2  =     1.79200699407075 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 1.79200699407075 + H1x2_2 ;
2458970   +   H1x2_3  =     0.66706944906809 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = 0.66706944906809 + H1x2_3 ;
2458971   +   H1x2_4  =     -0.7356254138015 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.7356254138015 + H1x2_4 ;
2458972   +   H1x2_5  =    -0.68066575174095 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.68066575174095 + H1x2_5 ;
2458973   +   H1x2_6  = 0;
MPRINT(EM_DIAGRAM):   H1x2_6 = 0;
2458974   +   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 );
2458975   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2458976   +   H1x2_1  = EXP(H1x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(H1x2_1 - _MAX_);
2458977   +   _SUM_ = _SUM_ + H1x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_1 ;
2458978   +   H1x2_2  = EXP(H1x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(H1x2_2 - _MAX_);
2458979   +   _SUM_ = _SUM_ + H1x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_2 ;
2458980   +   H1x2_3  = EXP(H1x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(H1x2_3 - _MAX_);
2458981   +   _SUM_ = _SUM_ + H1x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_3 ;
2458982   +   H1x2_4  = EXP(H1x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(H1x2_4 - _MAX_);
2458983   +   _SUM_ = _SUM_ + H1x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_4 ;
2458984   +   H1x2_5  = EXP(H1x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(H1x2_5 - _MAX_);
2458985   +   _SUM_ = _SUM_ + H1x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_5 ;
2458986   +   H1x2_6  = EXP(H1x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(H1x2_6 - _MAX_);
2458987   +   _SUM_ = _SUM_ + H1x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_6 ;
2458988   +   H1x2_1  = H1x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 / _SUM_;
2458989   +   H1x2_2  = H1x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 / _SUM_;
2458990   +   H1x2_3  = H1x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 / _SUM_;
2458991   +   H1x2_4  = H1x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 / _SUM_;
2458992   +   H1x2_5  = H1x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 / _SUM_;
2458993   +   H1x2_6  = H1x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 / _SUM_;
2458994   +END;
MPRINT(EM_DIAGRAM):   END;
2458995   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2458996   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
2458997   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
2458998   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
2458999   +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
2459000   +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
2459001   +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
2459002   +END;
MPRINT(EM_DIAGRAM):   END;
2459003   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2459004   +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
2459005   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2459006   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2459007   +   H2x1_1  =      0.7656278374321 * H1x1_1  +     1.18988619460831 * H1x1_2
2459008   +          +    -0.68458045558713 * H1x1_3  +     0.49093980591245 * H1x1_4
2459009   +          +    -1.27959429919804 * H1x1_5  +    -1.38760297105319 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 0.7656278374321 * H1x1_1 + 1.18988619460831 * H1x1_2 +
-0.68458045558713 * H1x1_3 + 0.49093980591245 * H1x1_4 + -1.27959429919804 * H1x1_5 +
-1.38760297105319 * H1x1_6 ;
2459010   +   H2x1_2  =    -1.48941810274544 * H1x1_1  +     1.75443095464294 * H1x1_2
2459011   +          +    -1.63478694878031 * H1x1_3  +    -0.69296364459258 * H1x1_4
2459012   +          +     3.14007823471691 * H1x1_5  +     2.71965753640902 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -1.48941810274544 * H1x1_1 + 1.75443095464294 * H1x1_2 +
-1.63478694878031 * H1x1_3 + -0.69296364459258 * H1x1_4 + 3.14007823471691 * H1x1_5 +
2.71965753640902 * H1x1_6 ;
2459013   +   H2x1_3  =     1.07426996100463 * H1x1_1  +    -1.76796943416489 * H1x1_2
2459014   +          +    -0.11946940948224 * H1x1_3  +     1.25457449221991 * H1x1_4
2459015   +          +     -1.4079980040852 * H1x1_5  +    -0.94725163293394 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.07426996100463 * H1x1_1 + -1.76796943416489 * H1x1_2 +
-0.11946940948224 * H1x1_3 + 1.25457449221991 * H1x1_4 + -1.4079980040852 * H1x1_5 +
-0.94725163293394 * H1x1_6 ;
2459016   +   H2x1_4  =    -0.00078893231548 * H1x1_1  +     0.06396324179717 * H1x1_2
2459017   +          +    -0.13674165204668 * H1x1_3  +    -0.26576379023249 * H1x1_4
2459018   +          +     0.44513643867194 * H1x1_5  +     0.66585878141635 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -0.00078893231548 * H1x1_1 + 0.06396324179717 * H1x1_2 +
-0.13674165204668 * H1x1_3 + -0.26576379023249 * H1x1_4 + 0.44513643867194 * H1x1_5 +
0.66585878141635 * H1x1_6 ;
2459019   +   H2x1_5  =     -2.8467581879118 * H1x1_1  +     2.94182061339515 * H1x1_2
2459020   +          +    -3.43021438685063 * H1x1_3  +    -4.00045607730935 * H1x1_4
2459021   +          +     3.09230566797337 * H1x1_5  +     3.57592566919388 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -2.8467581879118 * H1x1_1 + 2.94182061339515 * H1x1_2 +
-3.43021438685063 * H1x1_3 + -4.00045607730935 * H1x1_4 + 3.09230566797337 * H1x1_5 +
3.57592566919388 * H1x1_6 ;
2459022   +   H2x1_6  =    -0.29912975132561 * H1x1_1  +     0.25554634262501 * H1x1_2
2459023   +          +    -0.62666868576544 * H1x1_3  +     1.54567563696489 * H1x1_4
2459024   +          +     1.87530466579189 * H1x1_5  +    -0.32006241006585 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = -0.29912975132561 * H1x1_1 + 0.25554634262501 * H1x1_2 +
-0.62666868576544 * H1x1_3 + 1.54567563696489 * H1x1_4 + 1.87530466579189 * H1x1_5 +
-0.32006241006585 * H1x1_6 ;
2459025   +   H2x1_1  = H2x1_1  +    -0.53923803948063 * H1x2_1
2459026   +          +    -0.14551996067575 * H1x2_2  +     1.15730137448351 * H1x2_3
2459027   +          +     0.02585401686791 * H1x2_4  +     -0.9274056409194 * H1x2_5
2459028   +          +    -0.07237646966438 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -0.53923803948063 * H1x2_1 + -0.14551996067575 *
H1x2_2 + 1.15730137448351 * H1x2_3 + 0.02585401686791 * H1x2_4 + -0.9274056409194 * H1x2_5 +
-0.07237646966438 * H1x2_6 ;
2459029   +   H2x1_2  = H2x1_2  +     -0.1441321293455 * H1x2_1
2459030   +          +    -0.53271770203833 * H1x2_2  +    -2.80064282115477 * H1x2_3
2459031   +          +    -1.05759395901612 * H1x2_4  +    -0.55127059339304 * H1x2_5
2459032   +          +     0.35471332651631 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -0.1441321293455 * H1x2_1 + -0.53271770203833 * H1x2_2
+ -2.80064282115477 * H1x2_3 + -1.05759395901612 * H1x2_4 + -0.55127059339304 * H1x2_5 +
0.35471332651631 * H1x2_6 ;
2459033   +   H2x1_3  = H2x1_3  +     -0.5351190580444 * H1x2_1
2459034   +          +    -0.02107048725988 * H1x2_2  +    -0.83389437376968 * H1x2_3
2459035   +          +    -0.80183937400902 * H1x2_4  +    -0.66588385104453 * H1x2_5
2459036   +          +      0.5218140468737 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -0.5351190580444 * H1x2_1 + -0.02107048725988 * H1x2_2
+ -0.83389437376968 * H1x2_3 + -0.80183937400902 * H1x2_4 + -0.66588385104453 * H1x2_5 +
0.5218140468737 * H1x2_6 ;
2459037   +   H2x1_4  = H2x1_4  +     1.89050022127485 * H1x2_1
2459038   +          +     -2.6557601537516 * H1x2_2  +     0.99126360053411 * H1x2_3
2459039   +          +    -0.44091776054792 * H1x2_4  +    -1.48547403065153 * H1x2_5
2459040   +          +    -0.67920869444907 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 1.89050022127485 * H1x2_1 + -2.6557601537516 * H1x2_2
+ 0.99126360053411 * H1x2_3 + -0.44091776054792 * H1x2_4 + -1.48547403065153 * H1x2_5 +
-0.67920869444907 * H1x2_6 ;
2459041   +   H2x1_5  = H2x1_5  +      0.2827883572995 * H1x2_1
2459042   +          +    -0.68177519072226 * H1x2_2  +    -1.62062483607713 * H1x2_3
2459043   +          +     0.24454579481466 * H1x2_4  +    -0.07591553404219 * H1x2_5
2459044   +          +      1.1175989027563 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + 0.2827883572995 * H1x2_1 + -0.68177519072226 * H1x2_2
+ -1.62062483607713 * H1x2_3 + 0.24454579481466 * H1x2_4 + -0.07591553404219 * H1x2_5 +
1.1175989027563 * H1x2_6 ;
2459045   +   H2x1_6  = H2x1_6  +    -0.00603649892235 * H1x2_1
2459046   +          +    -1.39053357060307 * H1x2_2  +    -1.34023350990878 * H1x2_3
2459047   +          +    -0.76811804565852 * H1x2_4  +    -1.40869786147662 * H1x2_5
2459048   +          +     1.54589390085972 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + -0.00603649892235 * H1x2_1 + -1.39053357060307 *
H1x2_2 + -1.34023350990878 * H1x2_3 + -0.76811804565852 * H1x2_4 + -1.40869786147662 * H1x2_5
+ 1.54589390085972 * H1x2_6 ;
2459049   +   H2x1_1  =     0.47873396703524 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 0.47873396703524 + H2x1_1 ;
2459050   +   H2x1_2  =     -0.0000340630035 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -0.0000340630035 + H2x1_2 ;
2459051   +   H2x1_3  =     0.35556259592214 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 0.35556259592214 + H2x1_3 ;
2459052   +   H2x1_4  =     1.01896219314016 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.01896219314016 + H2x1_4 ;
2459053   +   H2x1_5  =     0.72195082860145 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = 0.72195082860145 + H2x1_5 ;
2459054   +   H2x1_6  =     0.24171639764515 + H2x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 0.24171639764515 + H2x1_6 ;
2459055   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2459056   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2459057   +   H2x1_1  = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
2459058   +   H2x1_2  = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
2459059   +   H2x1_3  = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
2459060   +   H2x1_4  = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
2459061   +   H2x1_5  = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_5 = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
2459062   +   H2x1_6  = 1.0 / (1.0 + EXP(MIN( - H2x1_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.0 / (1.0 + EXP(MIN( - H2x1_6 , _EXP_BAR)));
2459063   +END;
MPRINT(EM_DIAGRAM):   END;
2459064   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2459065   +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
2459066   +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
2459067   +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
2459068   +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
2459069   +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
2459070   +   H2x1_6  = .;
MPRINT(EM_DIAGRAM):   H2x1_6 = .;
2459071   +END;
MPRINT(EM_DIAGRAM):   END;
2459072   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2459073   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2459074   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2459075   +
2459076   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2459077   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2459078   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2459079   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2459080   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2459081   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2459082   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2459083   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2459084   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2459085   +end;
MPRINT(EM_DIAGRAM):   end;
2459086   +else do;
MPRINT(EM_DIAGRAM):   else do;
2459087   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2459088   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2459089   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2459090   +   end;
MPRINT(EM_DIAGRAM):   end;
2459091   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2459092   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2459093   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2459094   +   end;
MPRINT(EM_DIAGRAM):   end;
2459095   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2459096   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2459097   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2459098   +   end;
MPRINT(EM_DIAGRAM):   end;
2459099   +end;
MPRINT(EM_DIAGRAM):   end;
2459100   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2459101   +   P_DepVar1  =     7.13056975005701 * H2x1_1  +    -9.26714696465882 * H2x1_2
2459102   +          +     9.36351037194964 * H2x1_3  +     2.76582940055979 * H2x1_4
2459103   +          +    -20.1354182036801 * H2x1_5  +     1.54726164498938 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 7.13056975005701 * H2x1_1 + -9.26714696465882 * H2x1_2 +
9.36351037194964 * H2x1_3 + 2.76582940055979 * H2x1_4 + -20.1354182036801 * H2x1_5 +
1.54726164498938 * H2x1_6 ;
2459104   +   P_DepVar1  =     5.03726079820845 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 5.03726079820845 + P_DepVar1 ;
2459105   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2459106   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2459107   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2459108   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2459109   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2459110   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2459111   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2459112   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2459113   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2459114   +END;
MPRINT(EM_DIAGRAM):   END;
2459115   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2459116   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2459117   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2459118   +END;
MPRINT(EM_DIAGRAM):   END;
2459119   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2459120   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2459121   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2459122   +END;
MPRINT(EM_DIAGRAM):   END;
2459123   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2459124   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2459125   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2459126   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2459127   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2459128   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2459129   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2459130   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2459131   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2459132   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2459133   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2459134   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2459135   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2459136   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2459137   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2459138   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2459139   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2459140   +END;
MPRINT(EM_DIAGRAM):   END;
2459141   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2459142   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2459143   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2459144   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2459145   +* Renaming variables for AutoNeural11;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural11;
2459146   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2459147   +* Renaming Posterior variables for AutoNeural11;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural11;
2459148   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2459149   +drop AutoNeural11_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural11_P_DepVar1;
2459150   +AutoNeural11_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural11_P_DepVar1 = P_DepVar1;
2459151   +drop AutoNeural11_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural11_P_DepVar0;
2459152   +AutoNeural11_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural11_P_DepVar0 = P_DepVar0;
2459153   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2459154   +* Renaming _WARN_ variable for AutoNeural11;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural11;
2459155   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2459156   +length AutoNeural11_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural11_WARN_ $4;
2459157   +drop AutoNeural11_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural11_WARN_;
2459158   +AutoNeural11_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural11_WARN_ = _WARN_;
2459159   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2459160   +* Ensmbl46: Scoring Code of model 3 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl46: Scoring Code of model 3 of 5;
2459161   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2459162   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2459163   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
2459164   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2459165   +* NODE: AutoNeural12;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural12;
2459166   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2459167   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2459168   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2459169   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2459170   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2459171   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2459172   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2459173   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2459174   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2459175   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2459176   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2459177   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2459178   +LENGTH _WARN_ $4
2459179   +      F_DepVar  $ 12
2459180   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2459181   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2459182   +
2459183   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2459184   +
2459185   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2459186   +
2459187   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2459188   +
2459189   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2459190   +
2459191   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2459192   +
2459193   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2459194   +
2459195   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2459196   +
2459197   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2459198   +
2459199   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2459200   +
2459201   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2459202   +
2459203   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2459204   +
2459205   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2459206   +
2459207   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2459208   +
2459209   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2459210   +
2459211   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2459212   +
2459213   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2459214   +
2459215   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2459216   +
2459217   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2459218   +
2459219   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2459220   +
2459221   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2459222   +
2459223   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2459224   +
2459225   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2459226   +
2459227   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2459228   +
2459229   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2459230   +
2459231   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2459232   +
2459233   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2459234   +
2459235   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2459236   +
2459237   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2459238   +
2459239   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2459240   +
2459241   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2459242   +
2459243   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2459244   +
2459245   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2459246   +
2459247   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2459248   +
2459249   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2459250   +
2459251   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2459252   +
2459253   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2459254   +
2459255   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2459256   +
2459257   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2459258   +
2459259   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2459260   +
2459261   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2459262   +
2459263   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2459264   +
2459265   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
2459266   +
2459267   +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
2459268   +
2459269   +      label H1x1_7 = 'Hidden: H1x1_=7' ;
MPRINT(EM_DIAGRAM):   label H1x1_7 = 'Hidden: H1x1_=7' ;
2459270   +
2459271   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
2459272   +
2459273   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
2459274   +
2459275   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
2459276   +
2459277   +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
2459278   +
2459279   +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
2459280   +
2459281   +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
2459282   +
2459283   +      label H1x2_7 = 'Hidden: H1x2_=7' ;
MPRINT(EM_DIAGRAM):   label H1x2_7 = 'Hidden: H1x2_=7' ;
2459284   +
2459285   +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
2459286   +
2459287   +      label H1x3_2 = 'Hidden: H1x3_=2' ;
MPRINT(EM_DIAGRAM):   label H1x3_2 = 'Hidden: H1x3_=2' ;
2459288   +
2459289   +      label H1x3_3 = 'Hidden: H1x3_=3' ;
MPRINT(EM_DIAGRAM):   label H1x3_3 = 'Hidden: H1x3_=3' ;
2459290   +
2459291   +      label H1x3_4 = 'Hidden: H1x3_=4' ;
MPRINT(EM_DIAGRAM):   label H1x3_4 = 'Hidden: H1x3_=4' ;
2459292   +
2459293   +      label H1x3_5 = 'Hidden: H1x3_=5' ;
MPRINT(EM_DIAGRAM):   label H1x3_5 = 'Hidden: H1x3_=5' ;
2459294   +
2459295   +      label H1x3_6 = 'Hidden: H1x3_=6' ;
MPRINT(EM_DIAGRAM):   label H1x3_6 = 'Hidden: H1x3_=6' ;
2459296   +
2459297   +      label H1x3_7 = 'Hidden: H1x3_=7' ;
MPRINT(EM_DIAGRAM):   label H1x3_7 = 'Hidden: H1x3_=7' ;
2459298   +
2459299   +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
2459300   +
2459301   +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
2459302   +
2459303   +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
2459304   +
2459305   +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
2459306   +
2459307   +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
2459308   +
2459309   +      label H2x1_6 = 'Hidden: H2x1_=6' ;
MPRINT(EM_DIAGRAM):   label H2x1_6 = 'Hidden: H2x1_=6' ;
2459310   +
2459311   +      label H2x1_7 = 'Hidden: H2x1_=7' ;
MPRINT(EM_DIAGRAM):   label H2x1_7 = 'Hidden: H2x1_=7' ;
2459312   +
2459313   +      label H2x2_1 = 'Hidden: H2x2_=1' ;
MPRINT(EM_DIAGRAM):   label H2x2_1 = 'Hidden: H2x2_=1' ;
2459314   +
2459315   +      label H2x2_2 = 'Hidden: H2x2_=2' ;
MPRINT(EM_DIAGRAM):   label H2x2_2 = 'Hidden: H2x2_=2' ;
2459316   +
2459317   +      label H2x2_3 = 'Hidden: H2x2_=3' ;
MPRINT(EM_DIAGRAM):   label H2x2_3 = 'Hidden: H2x2_=3' ;
2459318   +
2459319   +      label H2x2_4 = 'Hidden: H2x2_=4' ;
MPRINT(EM_DIAGRAM):   label H2x2_4 = 'Hidden: H2x2_=4' ;
2459320   +
2459321   +      label H2x2_5 = 'Hidden: H2x2_=5' ;
MPRINT(EM_DIAGRAM):   label H2x2_5 = 'Hidden: H2x2_=5' ;
2459322   +
2459323   +      label H2x2_6 = 'Hidden: H2x2_=6' ;
MPRINT(EM_DIAGRAM):   label H2x2_6 = 'Hidden: H2x2_=6' ;
2459324   +
2459325   +      label H2x2_7 = 'Hidden: H2x2_=7' ;
MPRINT(EM_DIAGRAM):   label H2x2_7 = 'Hidden: H2x2_=7' ;
2459326   +
2459327   +      label H3x1_1 = 'Hidden: H3x1_=1' ;
MPRINT(EM_DIAGRAM):   label H3x1_1 = 'Hidden: H3x1_=1' ;
2459328   +
2459329   +      label H3x1_2 = 'Hidden: H3x1_=2' ;
MPRINT(EM_DIAGRAM):   label H3x1_2 = 'Hidden: H3x1_=2' ;
2459330   +
2459331   +      label H3x1_3 = 'Hidden: H3x1_=3' ;
MPRINT(EM_DIAGRAM):   label H3x1_3 = 'Hidden: H3x1_=3' ;
2459332   +
2459333   +      label H3x1_4 = 'Hidden: H3x1_=4' ;
MPRINT(EM_DIAGRAM):   label H3x1_4 = 'Hidden: H3x1_=4' ;
2459334   +
2459335   +      label H3x1_5 = 'Hidden: H3x1_=5' ;
MPRINT(EM_DIAGRAM):   label H3x1_5 = 'Hidden: H3x1_=5' ;
2459336   +
2459337   +      label H3x1_6 = 'Hidden: H3x1_=6' ;
MPRINT(EM_DIAGRAM):   label H3x1_6 = 'Hidden: H3x1_=6' ;
2459338   +
2459339   +      label H3x1_7 = 'Hidden: H3x1_=7' ;
MPRINT(EM_DIAGRAM):   label H3x1_7 = 'Hidden: H3x1_=7' ;
2459340   +
2459341   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2459342   +
2459343   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2459344   +
2459345   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2459346   +
2459347   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2459348   +
2459349   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2459350   +
2459351   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2459352   +
2459353   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2459354   +
2459355   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2459356   +
2459357   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2459358   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2459359   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2459360   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2459361   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2459362   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2459363   +end;
MPRINT(EM_DIAGRAM):   end;
2459364   +else do;
MPRINT(EM_DIAGRAM):   else do;
2459365   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2459366   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2459367   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2459368   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2459369   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2459370   +   end;
MPRINT(EM_DIAGRAM):   end;
2459371   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2459372   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2459373   +   end;
MPRINT(EM_DIAGRAM):   end;
2459374   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2459375   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2459376   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2459377   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2459378   +   end;
MPRINT(EM_DIAGRAM):   end;
2459379   +end;
MPRINT(EM_DIAGRAM):   end;
2459380   +
2459381   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2459382   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2459383   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2459384   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2459385   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2459386   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2459387   +end;
MPRINT(EM_DIAGRAM):   end;
2459388   +else do;
MPRINT(EM_DIAGRAM):   else do;
2459389   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2459390   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2459391   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2459392   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2459393   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2459394   +   end;
MPRINT(EM_DIAGRAM):   end;
2459395   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2459396   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2459397   +   end;
MPRINT(EM_DIAGRAM):   end;
2459398   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2459399   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2459400   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2459401   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2459402   +   end;
MPRINT(EM_DIAGRAM):   end;
2459403   +end;
MPRINT(EM_DIAGRAM):   end;
2459404   +
2459405   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2459406   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2459407   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2459408   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2459409   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2459410   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2459411   +end;
MPRINT(EM_DIAGRAM):   end;
2459412   +else do;
MPRINT(EM_DIAGRAM):   else do;
2459413   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2459414   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2459415   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2459416   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2459417   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2459418   +   end;
MPRINT(EM_DIAGRAM):   end;
2459419   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2459420   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2459421   +   end;
MPRINT(EM_DIAGRAM):   end;
2459422   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2459423   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2459424   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2459425   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2459426   +   end;
MPRINT(EM_DIAGRAM):   end;
2459427   +end;
MPRINT(EM_DIAGRAM):   end;
2459428   +
2459429   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2459430   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2459431   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2459432   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2459433   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2459434   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2459435   +end;
MPRINT(EM_DIAGRAM):   end;
2459436   +else do;
MPRINT(EM_DIAGRAM):   else do;
2459437   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2459438   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2459439   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2459440   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2459441   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2459442   +   end;
MPRINT(EM_DIAGRAM):   end;
2459443   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2459444   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2459445   +   end;
MPRINT(EM_DIAGRAM):   end;
2459446   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2459447   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2459448   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2459449   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2459450   +   end;
MPRINT(EM_DIAGRAM):   end;
2459451   +end;
MPRINT(EM_DIAGRAM):   end;
2459452   +
2459453   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2459454   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2459455   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2459456   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2459457   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2459458   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2459459   +end;
MPRINT(EM_DIAGRAM):   end;
2459460   +else do;
MPRINT(EM_DIAGRAM):   else do;
2459461   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2459462   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2459463   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2459464   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2459465   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2459466   +   end;
MPRINT(EM_DIAGRAM):   end;
2459467   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2459468   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2459469   +   end;
MPRINT(EM_DIAGRAM):   end;
2459470   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2459471   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2459472   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2459473   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2459474   +   end;
MPRINT(EM_DIAGRAM):   end;
2459475   +end;
MPRINT(EM_DIAGRAM):   end;
2459476   +
2459477   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2459478   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2459479   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2459480   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2459481   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2459482   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2459483   +end;
MPRINT(EM_DIAGRAM):   end;
2459484   +else do;
MPRINT(EM_DIAGRAM):   else do;
2459485   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2459486   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2459487   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2459488   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2459489   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2459490   +   end;
MPRINT(EM_DIAGRAM):   end;
2459491   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2459492   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2459493   +   end;
MPRINT(EM_DIAGRAM):   end;
2459494   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2459495   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2459496   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2459497   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2459498   +   end;
MPRINT(EM_DIAGRAM):   end;
2459499   +end;
MPRINT(EM_DIAGRAM):   end;
2459500   +
2459501   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2459502   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2459503   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2459504   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2459505   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2459506   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2459507   +end;
MPRINT(EM_DIAGRAM):   end;
2459508   +else do;
MPRINT(EM_DIAGRAM):   else do;
2459509   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2459510   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2459511   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2459512   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2459513   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2459514   +   end;
MPRINT(EM_DIAGRAM):   end;
2459515   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2459516   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2459517   +   end;
MPRINT(EM_DIAGRAM):   end;
2459518   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2459519   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2459520   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2459521   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2459522   +   end;
MPRINT(EM_DIAGRAM):   end;
2459523   +end;
MPRINT(EM_DIAGRAM):   end;
2459524   +
2459525   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2459526   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
2459527   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2459528   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2459529   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2459530   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2459531   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2459532   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2459533   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2459534   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2459535   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2459536   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2459537   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2459538   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2459539   +end;
MPRINT(EM_DIAGRAM):   end;
2459540   +else do;
MPRINT(EM_DIAGRAM):   else do;
2459541   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2459542   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2459543   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2459544   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2459545   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2459546   +   end;
MPRINT(EM_DIAGRAM):   end;
2459547   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2459548   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2459549   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2459550   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2459551   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2459552   +   end;
MPRINT(EM_DIAGRAM):   end;
2459553   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2459554   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2459555   +   end;
MPRINT(EM_DIAGRAM):   end;
2459556   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2459557   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2459558   +   end;
MPRINT(EM_DIAGRAM):   end;
2459559   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2459560   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2459561   +   end;
MPRINT(EM_DIAGRAM):   end;
2459562   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2459563   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2459564   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2459565   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2459566   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2459567   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2459568   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2459569   +   end;
MPRINT(EM_DIAGRAM):   end;
2459570   +end;
MPRINT(EM_DIAGRAM):   end;
2459571   +
2459572   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2459573   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2459574   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
2459575   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2459576   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2459577   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2459578   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2459579   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2459580   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2459581   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2459582   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2459583   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2459584   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2459585   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2459586   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2459587   +end;
MPRINT(EM_DIAGRAM):   end;
2459588   +else do;
MPRINT(EM_DIAGRAM):   else do;
2459589   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2459590   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2459591   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2459592   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2459593   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2459594   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2459595   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2459596   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2459597   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2459598   +         end;
MPRINT(EM_DIAGRAM):   end;
2459599   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2459600   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2459601   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2459602   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2459603   +            end;
MPRINT(EM_DIAGRAM):   end;
2459604   +         end;
MPRINT(EM_DIAGRAM):   end;
2459605   +      end;
MPRINT(EM_DIAGRAM):   end;
2459606   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2459607   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2459608   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2459609   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2459610   +         end;
MPRINT(EM_DIAGRAM):   end;
2459611   +      end;
MPRINT(EM_DIAGRAM):   end;
2459612   +   end;
MPRINT(EM_DIAGRAM):   end;
2459613   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2459614   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2459615   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2459616   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2459617   +      end;
MPRINT(EM_DIAGRAM):   end;
2459618   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2459619   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2459620   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2459621   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2459622   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2459623   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2459624   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2459625   +         end;
MPRINT(EM_DIAGRAM):   end;
2459626   +      end;
MPRINT(EM_DIAGRAM):   end;
2459627   +   end;
MPRINT(EM_DIAGRAM):   end;
2459628   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2459629   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2459630   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2459631   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2459632   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2459633   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2459634   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2459635   +   end;
MPRINT(EM_DIAGRAM):   end;
2459636   +end;
MPRINT(EM_DIAGRAM):   end;
2459637   +
2459638   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2459639   +*** Checking missing input Interval
2459640   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2459641   +
2459642   +IF NMISS(
2459643   +   AcceptedCmpTotal ,
2459644   +   Age ,
2459645   +   Frq ,
2459646   +   Income ,
2459647   +   Kidhome ,
2459648   +   Mnt ,
2459649   +   MntFishProducts ,
2459650   +   MntFruits ,
2459651   +   MntGoldProds ,
2459652   +   MntMeatProducts ,
2459653   +   MntSweetProducts ,
2459654   +   MntWines ,
2459655   +   MonthsAsCustomer ,
2459656   +   NumCatalogPurchases ,
2459657   +   NumDealsPurchases ,
2459658   +   NumDistPurchases ,
2459659   +   NumStorePurchases ,
2459660   +   NumWebPurchases ,
2459661   +   NumWebVisitsMonth ,
2459662   +   RFMstat ,
2459663   +   RMntFrq ,
2459664   +   Recency ,
2459665   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
2459666   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2459667   +
2459668   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2459669   +END;
MPRINT(EM_DIAGRAM):   END;
2459670   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2459671   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2459672   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2459673   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2459674   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2459675   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2459676   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2459677   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2459678   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2459679   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2459680   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2459681   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2459682   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2459683   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2459684   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2459685   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2459686   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2459687   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2459688   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2459689   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2459690   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2459691   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2459692   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 *
MonthsAsCustomer ;
2459693   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2459694   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2459695   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2459696   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2459697   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2459698   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2459699   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2459700   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2459701   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2459702   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2459703   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2459704   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2459705   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2459706   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2459707   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2459708   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2459709   +END;
MPRINT(EM_DIAGRAM):   END;
2459710   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2459711   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2459712   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2459713   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2459714   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2459715   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2459716   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2459717   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2459718   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2459719   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2459720   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2459721   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2459722   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2459723   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2459724   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2459725   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2459726   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2459727   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2459728   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2459729   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2459730   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2459731   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2459732   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
2459733   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2459734   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2459735   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2459736   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2459737   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2459738   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2459739   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2459740   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2459741   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2459742   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2459743   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 *
MonthsAsCustomer ;
2459744   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2459745   +   ELSE S_NumCatalogPurchases
2459746   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2459747   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2459748   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2459749   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2459750   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2459751   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2459752   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2459753   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2459754   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2459755   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2459756   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2459757   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2459758   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2459759   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2459760   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2459761   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2459762   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2459763   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2459764   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2459765   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2459766   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2459767   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2459768   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2459769   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2459770   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2459771   +END;
MPRINT(EM_DIAGRAM):   END;
2459772   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2459773   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2459774   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2459775   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2459776   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2459777   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2459778   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2459779   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2459780   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2459781   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2459782   +   H1x1_1  =    -1.22979702388871 * S_AcceptedCmpTotal
2459783   +          +    -0.43104795266139 * S_Age  +     0.86889278443529 * S_Frq
2459784   +          +    -1.60769879195759 * S_Income  +     0.50863205564081 *
2459785   +        S_Kidhome  +     0.63485396330815 * S_Mnt  +     1.54715964931126 *
2459786   +        S_MntFishProducts  +     0.75185279130369 * S_MntFruits
2459787   +          +    -0.00997586610757 * S_MntGoldProds  +    -2.37203493907401 *
2459788   +        S_MntMeatProducts  +     0.38638626403468 * S_MntSweetProducts
2459789   +          +     2.26121903773395 * S_MntWines  +    -0.59651789183067 *
2459790   +        S_MonthsAsCustomer  +    -1.52699943820196 * S_NumCatalogPurchases
2459791   +          +    -1.18466001117424 * S_NumDealsPurchases
2459792   +          +     -0.1371252133567 * S_NumDistPurchases
2459793   +          +     1.92719775731123 * S_NumStorePurchases
2459794   +          +     1.23184249192116 * S_NumWebPurchases
2459795   +          +    -1.55583843197424 * S_NumWebVisitsMonth
2459796   +          +    -0.47773207532121 * S_RFMstat  +    -0.35513231558649 *
2459797   +        S_RMntFrq  +     1.63863392145333 * S_Recency
2459798   +          +     0.67173275608308 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.22979702388871 * S_AcceptedCmpTotal + -0.43104795266139 *
S_Age + 0.86889278443529 * S_Frq + -1.60769879195759 * S_Income + 0.50863205564081 * S_Kidhome
+ 0.63485396330815 * S_Mnt + 1.54715964931126 * S_MntFishProducts + 0.75185279130369 *
S_MntFruits + -0.00997586610757 * S_MntGoldProds + -2.37203493907401 * S_MntMeatProducts +
0.38638626403468 * S_MntSweetProducts + 2.26121903773395 * S_MntWines + -0.59651789183067 *
S_MonthsAsCustomer + -1.52699943820196 * S_NumCatalogPurchases + -1.18466001117424 *
S_NumDealsPurchases + -0.1371252133567 * S_NumDistPurchases + 1.92719775731123 *
S_NumStorePurchases + 1.23184249192116 * S_NumWebPurchases + -1.55583843197424 *
S_NumWebVisitsMonth + -0.47773207532121 * S_RFMstat + -0.35513231558649 * S_RMntFrq +
1.63863392145333 * S_Recency + 0.67173275608308 * S_Teenhome ;
2459799   +   H1x1_2  =    -0.02716121128584 * S_AcceptedCmpTotal
2459800   +          +     0.11518566588792 * S_Age  +    -0.03446898150571 * S_Frq
2459801   +          +    -0.19022324523346 * S_Income  +     1.06549395713708 *
2459802   +        S_Kidhome  +    -0.75490876357951 * S_Mnt  +    -0.25515163712879 *
2459803   +        S_MntFishProducts  +    -0.33372388118122 * S_MntFruits
2459804   +          +    -1.35673933518218 * S_MntGoldProds  +    -2.95766948640442 *
2459805   +        S_MntMeatProducts  +      0.2681792093191 * S_MntSweetProducts
2459806   +          +     0.68376629766032 * S_MntWines  +     1.19853579057819 *
2459807   +        S_MonthsAsCustomer  +    -1.27282116370987 * S_NumCatalogPurchases
2459808   +          +     0.63616523425865 * S_NumDealsPurchases
2459809   +          +     0.45460056261546 * S_NumDistPurchases
2459810   +          +    -0.61009999017225 * S_NumStorePurchases
2459811   +          +     1.85193755731081 * S_NumWebPurchases
2459812   +          +    -2.47698404964319 * S_NumWebVisitsMonth
2459813   +          +     -0.6995834208607 * S_RFMstat  +    -0.25646177956568 *
2459814   +        S_RMntFrq  +     1.07962222419254 * S_Recency
2459815   +          +     0.63257022999179 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.02716121128584 * S_AcceptedCmpTotal + 0.11518566588792 *
S_Age + -0.03446898150571 * S_Frq + -0.19022324523346 * S_Income + 1.06549395713708 *
S_Kidhome + -0.75490876357951 * S_Mnt + -0.25515163712879 * S_MntFishProducts +
-0.33372388118122 * S_MntFruits + -1.35673933518218 * S_MntGoldProds + -2.95766948640442 *
S_MntMeatProducts + 0.2681792093191 * S_MntSweetProducts + 0.68376629766032 * S_MntWines +
1.19853579057819 * S_MonthsAsCustomer + -1.27282116370987 * S_NumCatalogPurchases +
0.63616523425865 * S_NumDealsPurchases + 0.45460056261546 * S_NumDistPurchases +
-0.61009999017225 * S_NumStorePurchases + 1.85193755731081 * S_NumWebPurchases +
-2.47698404964319 * S_NumWebVisitsMonth + -0.6995834208607 * S_RFMstat + -0.25646177956568 *
S_RMntFrq + 1.07962222419254 * S_Recency + 0.63257022999179 * S_Teenhome ;
2459816   +   H1x1_3  =     2.21390028099752 * S_AcceptedCmpTotal
2459817   +          +     0.05331556426178 * S_Age  +    -0.65514579137956 * S_Frq
2459818   +          +     0.64307304324121 * S_Income  +    -0.74572098598993 *
2459819   +        S_Kidhome  +     0.72146088814601 * S_Mnt  +    -0.35292583888573 *
2459820   +        S_MntFishProducts  +    -0.60011862194755 * S_MntFruits
2459821   +          +     0.41187011131735 * S_MntGoldProds  +     6.59297713742725 *
2459822   +        S_MntMeatProducts  +    -0.24427365286575 * S_MntSweetProducts
2459823   +          +    -2.72258930476853 * S_MntWines  +     0.14880721485001 *
2459824   +        S_MonthsAsCustomer  +     1.43710120897606 * S_NumCatalogPurchases
2459825   +          +      1.8907968580473 * S_NumDealsPurchases
2459826   +          +     0.01244124801764 * S_NumDistPurchases
2459827   +          +    -2.34409118104622 * S_NumStorePurchases
2459828   +          +    -1.80820043087435 * S_NumWebPurchases
2459829   +          +     2.40219682136039 * S_NumWebVisitsMonth
2459830   +          +     0.64272295101175 * S_RFMstat  +    -2.37583346151401 *
2459831   +        S_RMntFrq  +    -2.05893311376628 * S_Recency
2459832   +          +    -0.09539892763273 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 2.21390028099752 * S_AcceptedCmpTotal + 0.05331556426178 *
S_Age + -0.65514579137956 * S_Frq + 0.64307304324121 * S_Income + -0.74572098598993 *
S_Kidhome + 0.72146088814601 * S_Mnt + -0.35292583888573 * S_MntFishProducts +
-0.60011862194755 * S_MntFruits + 0.41187011131735 * S_MntGoldProds + 6.59297713742725 *
S_MntMeatProducts + -0.24427365286575 * S_MntSweetProducts + -2.72258930476853 * S_MntWines +
0.14880721485001 * S_MonthsAsCustomer + 1.43710120897606 * S_NumCatalogPurchases +
1.8907968580473 * S_NumDealsPurchases + 0.01244124801764 * S_NumDistPurchases +
-2.34409118104622 * S_NumStorePurchases + -1.80820043087435 * S_NumWebPurchases +
2.40219682136039 * S_NumWebVisitsMonth + 0.64272295101175 * S_RFMstat + -2.37583346151401 *
S_RMntFrq + -2.05893311376628 * S_Recency + -0.09539892763273 * S_Teenhome ;
2459833   +   H1x1_4  =     0.39967052173479 * S_AcceptedCmpTotal
2459834   +          +    -0.07923444459672 * S_Age  +     0.62339138041893 * S_Frq
2459835   +          +     1.61789948058771 * S_Income  +     -1.4543646851274 *
2459836   +        S_Kidhome  +      0.0674362517919 * S_Mnt  +    -0.01747401903722 *
2459837   +        S_MntFishProducts  +     0.35122931976599 * S_MntFruits
2459838   +          +     0.49479569666837 * S_MntGoldProds  +     0.96598079382568 *
2459839   +        S_MntMeatProducts  +     0.00966238843619 * S_MntSweetProducts
2459840   +          +    -1.04781861730336 * S_MntWines  +    -0.60232527705864 *
2459841   +        S_MonthsAsCustomer  +     1.64183850526139 * S_NumCatalogPurchases
2459842   +          +     0.28209537604198 * S_NumDealsPurchases
2459843   +          +      0.6450277971767 * S_NumDistPurchases
2459844   +          +     0.85050092520609 * S_NumStorePurchases
2459845   +          +    -0.53920307215941 * S_NumWebPurchases
2459846   +          +     3.01106015100147 * S_NumWebVisitsMonth
2459847   +          +     0.35454480730832 * S_RFMstat  +     2.44126135489059 *
2459848   +        S_RMntFrq  +    -3.15497765450512 * S_Recency
2459849   +          +    -1.52912100940198 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.39967052173479 * S_AcceptedCmpTotal + -0.07923444459672 *
S_Age + 0.62339138041893 * S_Frq + 1.61789948058771 * S_Income + -1.4543646851274 * S_Kidhome
+ 0.0674362517919 * S_Mnt + -0.01747401903722 * S_MntFishProducts + 0.35122931976599 *
S_MntFruits + 0.49479569666837 * S_MntGoldProds + 0.96598079382568 * S_MntMeatProducts +
0.00966238843619 * S_MntSweetProducts + -1.04781861730336 * S_MntWines + -0.60232527705864 *
S_MonthsAsCustomer + 1.64183850526139 * S_NumCatalogPurchases + 0.28209537604198 *
S_NumDealsPurchases + 0.6450277971767 * S_NumDistPurchases + 0.85050092520609 *
S_NumStorePurchases + -0.53920307215941 * S_NumWebPurchases + 3.01106015100147 *
S_NumWebVisitsMonth + 0.35454480730832 * S_RFMstat + 2.44126135489059 * S_RMntFrq +
-3.15497765450512 * S_Recency + -1.52912100940198 * S_Teenhome ;
2459850   +   H1x1_5  =    -1.36246601888598 * S_AcceptedCmpTotal
2459851   +          +     0.18494970680372 * S_Age  +    -0.48239316237012 * S_Frq
2459852   +          +    -0.07754710635082 * S_Income  +    -1.12988783865284 *
2459853   +        S_Kidhome  +    -0.99389820487435 * S_Mnt  +     0.97730928948588 *
2459854   +        S_MntFishProducts  +     0.22400827772102 * S_MntFruits
2459855   +          +     0.74486626223136 * S_MntGoldProds  +    -5.09299340099429 *
2459856   +        S_MntMeatProducts  +     -0.9293665551505 * S_MntSweetProducts
2459857   +          +     2.05621056740754 * S_MntWines  +     0.13751326047818 *
2459858   +        S_MonthsAsCustomer  +    -0.78748700520409 * S_NumCatalogPurchases
2459859   +          +    -0.36642526324451 * S_NumDealsPurchases
2459860   +          +     -0.6091014843932 * S_NumDistPurchases
2459861   +          +    -0.21154626182088 * S_NumStorePurchases
2459862   +          +    -0.10361347071364 * S_NumWebPurchases
2459863   +          +     1.36358817627784 * S_NumWebVisitsMonth
2459864   +          +    -1.12999319551924 * S_RFMstat  +    -0.19491430019245 *
2459865   +        S_RMntFrq  +    -1.04649498091784 * S_Recency
2459866   +          +     0.17452738843544 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.36246601888598 * S_AcceptedCmpTotal + 0.18494970680372 *
S_Age + -0.48239316237012 * S_Frq + -0.07754710635082 * S_Income + -1.12988783865284 *
S_Kidhome + -0.99389820487435 * S_Mnt + 0.97730928948588 * S_MntFishProducts +
0.22400827772102 * S_MntFruits + 0.74486626223136 * S_MntGoldProds + -5.09299340099429 *
S_MntMeatProducts + -0.9293665551505 * S_MntSweetProducts + 2.05621056740754 * S_MntWines +
0.13751326047818 * S_MonthsAsCustomer + -0.78748700520409 * S_NumCatalogPurchases +
-0.36642526324451 * S_NumDealsPurchases + -0.6091014843932 * S_NumDistPurchases +
-0.21154626182088 * S_NumStorePurchases + -0.10361347071364 * S_NumWebPurchases +
1.36358817627784 * S_NumWebVisitsMonth + -1.12999319551924 * S_RFMstat + -0.19491430019245 *
S_RMntFrq + -1.04649498091784 * S_Recency + 0.17452738843544 * S_Teenhome ;
2459867   +   H1x1_6  =    -0.61844696407508 * S_AcceptedCmpTotal
2459868   +          +    -0.13181297602063 * S_Age  +        0.68456903056 * S_Frq
2459869   +          +    -0.34991774042788 * S_Income  +     1.46159955002315 *
2459870   +        S_Kidhome  +     0.21200077233877 * S_Mnt  +    -1.25754094670769 *
2459871   +        S_MntFishProducts  +    -0.09204195787339 * S_MntFruits
2459872   +          +     0.30860507694466 * S_MntGoldProds  +     2.47956356836605 *
2459873   +        S_MntMeatProducts  +     0.40882561010395 * S_MntSweetProducts
2459874   +          +    -0.31319819026957 * S_MntWines  +    -0.35678594664106 *
2459875   +        S_MonthsAsCustomer  +     0.01690494248971 * S_NumCatalogPurchases
2459876   +          +    -0.14868505161718 * S_NumDealsPurchases
2459877   +          +    -0.08395384711805 * S_NumDistPurchases
2459878   +          +     0.60525238179245 * S_NumStorePurchases
2459879   +          +     0.04555100214276 * S_NumWebPurchases
2459880   +          +    -2.31888436784305 * S_NumWebVisitsMonth
2459881   +          +     0.04533094777373 * S_RFMstat  +     1.45047684433196 *
2459882   +        S_RMntFrq  +     3.02439474266744 * S_Recency
2459883   +          +     1.00458920115313 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -0.61844696407508 * S_AcceptedCmpTotal + -0.13181297602063 *
S_Age + 0.68456903056 * S_Frq + -0.34991774042788 * S_Income + 1.46159955002315 * S_Kidhome +
0.21200077233877 * S_Mnt + -1.25754094670769 * S_MntFishProducts + -0.09204195787339 *
S_MntFruits + 0.30860507694466 * S_MntGoldProds + 2.47956356836605 * S_MntMeatProducts +
0.40882561010395 * S_MntSweetProducts + -0.31319819026957 * S_MntWines + -0.35678594664106 *
S_MonthsAsCustomer + 0.01690494248971 * S_NumCatalogPurchases + -0.14868505161718 *
S_NumDealsPurchases + -0.08395384711805 * S_NumDistPurchases + 0.60525238179245 *
S_NumStorePurchases + 0.04555100214276 * S_NumWebPurchases + -2.31888436784305 *
S_NumWebVisitsMonth + 0.04533094777373 * S_RFMstat + 1.45047684433196 * S_RMntFrq +
3.02439474266744 * S_Recency + 1.00458920115313 * S_Teenhome ;
2459884   +   H1x1_1  = H1x1_1  +     1.44647846478949 * AcceptedCmp10
2459885   +          +     0.96385529143297 * AcceptedCmp20  +     0.80013060089317 *
2459886   +        AcceptedCmp30  +     1.84770198014032 * AcceptedCmp40
2459887   +          +     0.80401446607714 * AcceptedCmp50  +     0.54049538978821 *
2459888   +        Complain0  +     0.10087163212641 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 1.44647846478949 * AcceptedCmp10 + 0.96385529143297 *
AcceptedCmp20 + 0.80013060089317 * AcceptedCmp30 + 1.84770198014032 * AcceptedCmp40 +
0.80401446607714 * AcceptedCmp50 + 0.54049538978821 * Complain0 + 0.10087163212641 *
HigherEducationBinary0 ;
2459889   +   H1x1_2  = H1x1_2  +    -1.68777270512099 * AcceptedCmp10
2459890   +          +     0.54885195015877 * AcceptedCmp20  +    -0.90402264974928 *
2459891   +        AcceptedCmp30  +    -0.42358682267334 * AcceptedCmp40
2459892   +          +     0.87016183962004 * AcceptedCmp50  +     0.42082407002478 *
2459893   +        Complain0  +    -0.37999025234308 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -1.68777270512099 * AcceptedCmp10 + 0.54885195015877 *
AcceptedCmp20 + -0.90402264974928 * AcceptedCmp30 + -0.42358682267334 * AcceptedCmp40 +
0.87016183962004 * AcceptedCmp50 + 0.42082407002478 * Complain0 + -0.37999025234308 *
HigherEducationBinary0 ;
2459894   +   H1x1_3  = H1x1_3  +    -0.40437631159129 * AcceptedCmp10
2459895   +          +      0.0972205308159 * AcceptedCmp20  +     0.81983130325412 *
2459896   +        AcceptedCmp30  +     0.11521626741585 * AcceptedCmp40
2459897   +          +    -0.67384158900854 * AcceptedCmp50  +    -0.08888648111628 *
2459898   +        Complain0  +    -0.12489144574555 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.40437631159129 * AcceptedCmp10 + 0.0972205308159 *
AcceptedCmp20 + 0.81983130325412 * AcceptedCmp30 + 0.11521626741585 * AcceptedCmp40 +
-0.67384158900854 * AcceptedCmp50 + -0.08888648111628 * Complain0 + -0.12489144574555 *
HigherEducationBinary0 ;
2459899   +   H1x1_4  = H1x1_4  +    -0.11861456940351 * AcceptedCmp10
2459900   +          +    -0.84401831403342 * AcceptedCmp20  +    -0.99900514370547 *
2459901   +        AcceptedCmp30  +     0.03311277744337 * AcceptedCmp40
2459902   +          +    -0.89369182681709 * AcceptedCmp50  +    -0.46321923883787 *
2459903   +        Complain0  +     0.73698890563732 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.11861456940351 * AcceptedCmp10 + -0.84401831403342
* AcceptedCmp20 + -0.99900514370547 * AcceptedCmp30 + 0.03311277744337 * AcceptedCmp40 +
-0.89369182681709 * AcceptedCmp50 + -0.46321923883787 * Complain0 + 0.73698890563732 *
HigherEducationBinary0 ;
2459904   +   H1x1_5  = H1x1_5  +     1.36740346673871 * AcceptedCmp10
2459905   +          +    -0.09307995102939 * AcceptedCmp20  +    -0.99727975675265 *
2459906   +        AcceptedCmp30  +    -1.64006559974507 * AcceptedCmp40
2459907   +          +    -0.12164496778613 * AcceptedCmp50  +    -0.20852398947217 *
2459908   +        Complain0  +    -0.12903157145588 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 1.36740346673871 * AcceptedCmp10 + -0.09307995102939 *
AcceptedCmp20 + -0.99727975675265 * AcceptedCmp30 + -1.64006559974507 * AcceptedCmp40 +
-0.12164496778613 * AcceptedCmp50 + -0.20852398947217 * Complain0 + -0.12903157145588 *
HigherEducationBinary0 ;
2459909   +   H1x1_6  = H1x1_6  +    -0.18375336439178 * AcceptedCmp10
2459910   +          +    -0.61320886099742 * AcceptedCmp20  +     1.46384578641555 *
2459911   +        AcceptedCmp30  +     1.07211075480456 * AcceptedCmp40
2459912   +          +      0.1814894663676 * AcceptedCmp50  +     0.61050756961671 *
2459913   +        Complain0  +     0.18598381049052 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + -0.18375336439178 * AcceptedCmp10 + -0.61320886099742
* AcceptedCmp20 + 1.46384578641555 * AcceptedCmp30 + 1.07211075480456 * AcceptedCmp40 +
0.1814894663676 * AcceptedCmp50 + 0.61050756961671 * Complain0 + 0.18598381049052 *
HigherEducationBinary0 ;
2459914   +   H1x1_1  = H1x1_1  +    -0.85219855086228 * Education2n_Cycle
2459915   +          +     0.72409647993559 * EducationBasic  +    -1.69896726220399 *
2459916   +        EducationGraduation  +     0.96924197858068 * EducationMaster
2459917   +          +     -0.7180104021039 * Marital_StatusDivorced
2459918   +          +      0.5957373170744 * Marital_StatusMarried
2459919   +          +    -0.86183942803988 * Marital_StatusSingle
2459920   +          +     0.92994743994713 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.85219855086228 * Education2n_Cycle +
0.72409647993559 * EducationBasic + -1.69896726220399 * EducationGraduation + 0.96924197858068
* EducationMaster + -0.7180104021039 * Marital_StatusDivorced + 0.5957373170744 *
Marital_StatusMarried + -0.86183942803988 * Marital_StatusSingle + 0.92994743994713 *
Marital_StatusTogether ;
2459921   +   H1x1_2  = H1x1_2  +    -0.29863788783823 * Education2n_Cycle
2459922   +          +    -0.03492398661463 * EducationBasic  +     1.96491183828121 *
2459923   +        EducationGraduation  +    -1.23733321574678 * EducationMaster
2459924   +          +     0.84772700244021 * Marital_StatusDivorced
2459925   +          +    -0.37049970188511 * Marital_StatusMarried
2459926   +          +     1.54291641732063 * Marital_StatusSingle
2459927   +          +      0.2036514883055 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.29863788783823 * Education2n_Cycle +
-0.03492398661463 * EducationBasic + 1.96491183828121 * EducationGraduation +
-1.23733321574678 * EducationMaster + 0.84772700244021 * Marital_StatusDivorced +
-0.37049970188511 * Marital_StatusMarried + 1.54291641732063 * Marital_StatusSingle +
0.2036514883055 * Marital_StatusTogether ;
2459928   +   H1x1_3  = H1x1_3  +     0.21600870420184 * Education2n_Cycle
2459929   +          +    -0.41247138958506 * EducationBasic  +    -0.04710356650237 *
2459930   +        EducationGraduation  +     0.02093123351397 * EducationMaster
2459931   +          +     0.73222548496385 * Marital_StatusDivorced
2459932   +          +    -0.50102202656102 * Marital_StatusMarried
2459933   +          +    -0.07207130428422 * Marital_StatusSingle
2459934   +          +     0.17349558515949 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.21600870420184 * Education2n_Cycle +
-0.41247138958506 * EducationBasic + -0.04710356650237 * EducationGraduation +
0.02093123351397 * EducationMaster + 0.73222548496385 * Marital_StatusDivorced +
-0.50102202656102 * Marital_StatusMarried + -0.07207130428422 * Marital_StatusSingle +
0.17349558515949 * Marital_StatusTogether ;
2459935   +   H1x1_4  = H1x1_4  +    -0.26695942691152 * Education2n_Cycle
2459936   +          +     0.08346486410021 * EducationBasic  +    -1.19880044804188 *
2459937   +        EducationGraduation  +     0.65366032471107 * EducationMaster
2459938   +          +     0.25894719464799 * Marital_StatusDivorced
2459939   +          +    -1.95576501275834 * Marital_StatusMarried
2459940   +          +     2.65422185276746 * Marital_StatusSingle
2459941   +          +    -3.75373924980398 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.26695942691152 * Education2n_Cycle +
0.08346486410021 * EducationBasic + -1.19880044804188 * EducationGraduation + 0.65366032471107
* EducationMaster + 0.25894719464799 * Marital_StatusDivorced + -1.95576501275834 *
Marital_StatusMarried + 2.65422185276746 * Marital_StatusSingle + -3.75373924980398 *
Marital_StatusTogether ;
2459942   +   H1x1_5  = H1x1_5  +     0.17586479935526 * Education2n_Cycle
2459943   +          +    -0.60926722758624 * EducationBasic  +    -0.09613529218096 *
2459944   +        EducationGraduation  +    -0.28683119112285 * EducationMaster
2459945   +          +     0.60936191204707 * Marital_StatusDivorced
2459946   +          +    -0.52190111190458 * Marital_StatusMarried
2459947   +          +    -0.60982305233136 * Marital_StatusSingle
2459948   +          +     0.44659686388318 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 0.17586479935526 * Education2n_Cycle +
-0.60926722758624 * EducationBasic + -0.09613529218096 * EducationGraduation +
-0.28683119112285 * EducationMaster + 0.60936191204707 * Marital_StatusDivorced +
-0.52190111190458 * Marital_StatusMarried + -0.60982305233136 * Marital_StatusSingle +
0.44659686388318 * Marital_StatusTogether ;
2459949   +   H1x1_6  = H1x1_6  +     0.16067502362228 * Education2n_Cycle
2459950   +          +     0.18937855703296 * EducationBasic  +     0.06386817095607 *
2459951   +        EducationGraduation  +     0.51538853297606 * EducationMaster
2459952   +          +    -1.44614502228294 * Marital_StatusDivorced
2459953   +          +      2.9001493892928 * Marital_StatusMarried
2459954   +          +    -2.60467399972513 * Marital_StatusSingle
2459955   +          +     2.31815156650258 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + 0.16067502362228 * Education2n_Cycle +
0.18937855703296 * EducationBasic + 0.06386817095607 * EducationGraduation + 0.51538853297606
* EducationMaster + -1.44614502228294 * Marital_StatusDivorced + 2.9001493892928 *
Marital_StatusMarried + -2.60467399972513 * Marital_StatusSingle + 2.31815156650258 *
Marital_StatusTogether ;
2459956   +   H1x1_1  =     2.01245018737649 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 2.01245018737649 + H1x1_1 ;
2459957   +   H1x1_2  =    -0.13724223857423 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.13724223857423 + H1x1_2 ;
2459958   +   H1x1_3  =     0.82934879006547 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.82934879006547 + H1x1_3 ;
2459959   +   H1x1_4  =    -0.21545557935699 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.21545557935699 + H1x1_4 ;
2459960   +   H1x1_5  =     0.44835497486542 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0.44835497486542 + H1x1_5 ;
2459961   +   H1x1_6  =     0.11792774897936 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0.11792774897936 + H1x1_6 ;
2459962   +   H1x1_7  = 0;
MPRINT(EM_DIAGRAM):   H1x1_7 = 0;
2459963   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 , H1x1_7
2459964   +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 ,
H1x1_7 );
2459965   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2459966   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
2459967   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
2459968   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
2459969   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
2459970   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
2459971   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
2459972   +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
2459973   +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
2459974   +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
2459975   +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
2459976   +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
2459977   +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
2459978   +   H1x1_7  = EXP(H1x1_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_7 = EXP(H1x1_7 - _MAX_);
2459979   +   _SUM_ = _SUM_ + H1x1_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_7 ;
2459980   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
2459981   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
2459982   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
2459983   +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
2459984   +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
2459985   +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
2459986   +   H1x1_7  = H1x1_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_7 = H1x1_7 / _SUM_;
2459987   +END;
MPRINT(EM_DIAGRAM):   END;
2459988   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2459989   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2459990   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2459991   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2459992   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2459993   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
2459994   +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
2459995   +   H1x1_7  = .;
MPRINT(EM_DIAGRAM):   H1x1_7 = .;
2459996   +END;
MPRINT(EM_DIAGRAM):   END;
2459997   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2459998   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
2459999   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2460000   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2460001   +   H1x2_1  =    -0.51245281628488 * S_AcceptedCmpTotal
2460002   +          +     0.29586551487242 * S_Age  +     1.34531593814589 * S_Frq
2460003   +          +     1.40753230099536 * S_Income  +    -1.01979935776675 *
2460004   +        S_Kidhome  +      1.0655533203194 * S_Mnt  +     0.74171867275429 *
2460005   +        S_MntFishProducts  +    -0.77881282886264 * S_MntFruits
2460006   +          +    -0.58546798489474 * S_MntGoldProds  +     0.93410444049208 *
2460007   +        S_MntMeatProducts  +     1.10536507959221 * S_MntSweetProducts
2460008   +          +     2.08723894920384 * S_MntWines  +    -0.64437193401661 *
2460009   +        S_MonthsAsCustomer  +     1.49880648713252 * S_NumCatalogPurchases
2460010   +          +    -0.46483717253931 * S_NumDealsPurchases
2460011   +          +    -0.53329008421157 * S_NumDistPurchases
2460012   +          +      0.2490774300193 * S_NumStorePurchases
2460013   +          +    -0.82755150673885 * S_NumWebPurchases
2460014   +          +     0.04007223822389 * S_NumWebVisitsMonth
2460015   +          +    -0.21044923749124 * S_RFMstat  +     0.27791352512351 *
2460016   +        S_RMntFrq  +     0.43434806411249 * S_Recency
2460017   +          +    -1.25974784572932 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.51245281628488 * S_AcceptedCmpTotal + 0.29586551487242 *
S_Age + 1.34531593814589 * S_Frq + 1.40753230099536 * S_Income + -1.01979935776675 * S_Kidhome
+ 1.0655533203194 * S_Mnt + 0.74171867275429 * S_MntFishProducts + -0.77881282886264 *
S_MntFruits + -0.58546798489474 * S_MntGoldProds + 0.93410444049208 * S_MntMeatProducts +
1.10536507959221 * S_MntSweetProducts + 2.08723894920384 * S_MntWines + -0.64437193401661 *
S_MonthsAsCustomer + 1.49880648713252 * S_NumCatalogPurchases + -0.46483717253931 *
S_NumDealsPurchases + -0.53329008421157 * S_NumDistPurchases + 0.2490774300193 *
S_NumStorePurchases + -0.82755150673885 * S_NumWebPurchases + 0.04007223822389 *
S_NumWebVisitsMonth + -0.21044923749124 * S_RFMstat + 0.27791352512351 * S_RMntFrq +
0.43434806411249 * S_Recency + -1.25974784572932 * S_Teenhome ;
2460018   +   H1x2_2  =     0.30117516029562 * S_AcceptedCmpTotal
2460019   +          +     0.16042149118905 * S_Age  +    -2.59350323749407 * S_Frq
2460020   +          +    -0.29940842910223 * S_Income  +    -0.09168883019219 *
2460021   +        S_Kidhome  +    -0.39758312303322 * S_Mnt  +     -0.4138816285287 *
2460022   +        S_MntFishProducts  +        0.18555623351 * S_MntFruits
2460023   +          +    -0.28024159914959 * S_MntGoldProds  +     1.08084875123781 *
2460024   +        S_MntMeatProducts  +     0.29032828446632 * S_MntSweetProducts
2460025   +          +     0.47556687393839 * S_MntWines  +    -0.89795441591329 *
2460026   +        S_MonthsAsCustomer  +    -0.47081176716106 * S_NumCatalogPurchases
2460027   +          +     0.75855101382458 * S_NumDealsPurchases
2460028   +          +     1.61754951768262 * S_NumDistPurchases
2460029   +          +    -0.48146714929729 * S_NumStorePurchases
2460030   +          +    -0.76460728035552 * S_NumWebPurchases
2460031   +          +    -0.71146787112442 * S_NumWebVisitsMonth
2460032   +          +     0.42381866124588 * S_RFMstat  +     -0.3894818400451 *
2460033   +        S_RMntFrq  +    -0.01528916550509 * S_Recency
2460034   +          +     0.38823136254948 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.30117516029562 * S_AcceptedCmpTotal + 0.16042149118905 *
S_Age + -2.59350323749407 * S_Frq + -0.29940842910223 * S_Income + -0.09168883019219 *
S_Kidhome + -0.39758312303322 * S_Mnt + -0.4138816285287 * S_MntFishProducts + 0.18555623351 *
S_MntFruits + -0.28024159914959 * S_MntGoldProds + 1.08084875123781 * S_MntMeatProducts +
0.29032828446632 * S_MntSweetProducts + 0.47556687393839 * S_MntWines + -0.89795441591329 *
S_MonthsAsCustomer + -0.47081176716106 * S_NumCatalogPurchases + 0.75855101382458 *
S_NumDealsPurchases + 1.61754951768262 * S_NumDistPurchases + -0.48146714929729 *
S_NumStorePurchases + -0.76460728035552 * S_NumWebPurchases + -0.71146787112442 *
S_NumWebVisitsMonth + 0.42381866124588 * S_RFMstat + -0.3894818400451 * S_RMntFrq +
-0.01528916550509 * S_Recency + 0.38823136254948 * S_Teenhome ;
2460035   +   H1x2_3  =    -1.28283712556699 * S_AcceptedCmpTotal
2460036   +          +    -0.62214066983867 * S_Age  +      0.0675653313166 * S_Frq
2460037   +          +     0.77098495841918 * S_Income  +    -1.36225954388119 *
2460038   +        S_Kidhome  +      0.0552831076081 * S_Mnt  +    -0.21387512812296 *
2460039   +        S_MntFishProducts  +    -1.14715718471691 * S_MntFruits
2460040   +          +    -1.15507787000433 * S_MntGoldProds  +     0.87571107504211 *
2460041   +        S_MntMeatProducts  +     0.28274178198443 * S_MntSweetProducts
2460042   +          +     0.23070204507311 * S_MntWines  +    -1.88342889522874 *
2460043   +        S_MonthsAsCustomer  +    -0.19127945486903 * S_NumCatalogPurchases
2460044   +          +     0.75255317965748 * S_NumDealsPurchases
2460045   +          +     1.34900588315783 * S_NumDistPurchases
2460046   +          +    -0.17717469778048 * S_NumStorePurchases
2460047   +          +    -0.01560551546553 * S_NumWebPurchases
2460048   +          +     1.24315988674343 * S_NumWebVisitsMonth
2460049   +          +     2.23854910235018 * S_RFMstat  +     0.55516131558838 *
2460050   +        S_RMntFrq  +    -2.01558015490584 * S_Recency
2460051   +          +     1.34178435587014 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -1.28283712556699 * S_AcceptedCmpTotal + -0.62214066983867 *
S_Age + 0.0675653313166 * S_Frq + 0.77098495841918 * S_Income + -1.36225954388119 * S_Kidhome
+ 0.0552831076081 * S_Mnt + -0.21387512812296 * S_MntFishProducts + -1.14715718471691 *
S_MntFruits + -1.15507787000433 * S_MntGoldProds + 0.87571107504211 * S_MntMeatProducts +
0.28274178198443 * S_MntSweetProducts + 0.23070204507311 * S_MntWines + -1.88342889522874 *
S_MonthsAsCustomer + -0.19127945486903 * S_NumCatalogPurchases + 0.75255317965748 *
S_NumDealsPurchases + 1.34900588315783 * S_NumDistPurchases + -0.17717469778048 *
S_NumStorePurchases + -0.01560551546553 * S_NumWebPurchases + 1.24315988674343 *
S_NumWebVisitsMonth + 2.23854910235018 * S_RFMstat + 0.55516131558838 * S_RMntFrq +
-2.01558015490584 * S_Recency + 1.34178435587014 * S_Teenhome ;
2460052   +   H1x2_4  =     1.35706411211536 * S_AcceptedCmpTotal
2460053   +          +    -0.73374940975123 * S_Age  +     2.10445428870671 * S_Frq
2460054   +          +    -1.60133766439775 * S_Income  +     0.02861907512789 *
2460055   +        S_Kidhome  +    -1.61837693250001 * S_Mnt  +       0.209751533263 *
2460056   +        S_MntFishProducts  +     1.82411973889656 * S_MntFruits
2460057   +          +     1.12172774431408 * S_MntGoldProds  +     1.09610288046573 *
2460058   +        S_MntMeatProducts  +    -0.86671874280949 * S_MntSweetProducts
2460059   +          +    -0.11602638812541 * S_MntWines  +    -0.30074020863435 *
2460060   +        S_MonthsAsCustomer  +     0.46044258716085 * S_NumCatalogPurchases
2460061   +          +    -1.71127148178768 * S_NumDealsPurchases
2460062   +          +    -1.77527355221308 * S_NumDistPurchases
2460063   +          +    -1.40009594349363 * S_NumStorePurchases
2460064   +          +    -0.46471012062697 * S_NumWebPurchases
2460065   +          +     0.04619891083228 * S_NumWebVisitsMonth
2460066   +          +     0.34715614649891 * S_RFMstat  +    -0.74983051176564 *
2460067   +        S_RMntFrq  +     0.84880186653433 * S_Recency
2460068   +          +     0.20218341857265 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 1.35706411211536 * S_AcceptedCmpTotal + -0.73374940975123 *
S_Age + 2.10445428870671 * S_Frq + -1.60133766439775 * S_Income + 0.02861907512789 * S_Kidhome
+ -1.61837693250001 * S_Mnt + 0.209751533263 * S_MntFishProducts + 1.82411973889656 *
S_MntFruits + 1.12172774431408 * S_MntGoldProds + 1.09610288046573 * S_MntMeatProducts +
-0.86671874280949 * S_MntSweetProducts + -0.11602638812541 * S_MntWines + -0.30074020863435 *
S_MonthsAsCustomer + 0.46044258716085 * S_NumCatalogPurchases + -1.71127148178768 *
S_NumDealsPurchases + -1.77527355221308 * S_NumDistPurchases + -1.40009594349363 *
S_NumStorePurchases + -0.46471012062697 * S_NumWebPurchases + 0.04619891083228 *
S_NumWebVisitsMonth + 0.34715614649891 * S_RFMstat + -0.74983051176564 * S_RMntFrq +
0.84880186653433 * S_Recency + 0.20218341857265 * S_Teenhome ;
2460069   +   H1x2_5  =     1.79452363233333 * S_AcceptedCmpTotal
2460070   +          +     1.70826835028511 * S_Age  +     0.08241717907016 * S_Frq
2460071   +          +    -1.15275600314196 * S_Income  +     0.87736096074094 *
2460072   +        S_Kidhome  +     0.90821427722502 * S_Mnt  +    -0.84055732556964 *
2460073   +        S_MntFishProducts  +    -0.74245639083939 * S_MntFruits
2460074   +          +     0.00204325095854 * S_MntGoldProds  +     0.37597102500134 *
2460075   +        S_MntMeatProducts  +     0.28586076288454 * S_MntSweetProducts
2460076   +          +    -1.38194310174269 * S_MntWines  +     0.10286181254259 *
2460077   +        S_MonthsAsCustomer  +    -0.82469018226034 * S_NumCatalogPurchases
2460078   +          +    -0.22204470395056 * S_NumDealsPurchases
2460079   +          +    -1.74490476011984 * S_NumDistPurchases
2460080   +          +     1.93538420108324 * S_NumStorePurchases
2460081   +          +     1.04892631742152 * S_NumWebPurchases
2460082   +          +     1.50717841566047 * S_NumWebVisitsMonth
2460083   +          +     0.61249250909375 * S_RFMstat  +    -0.54764212165911 *
2460084   +        S_RMntFrq  +      1.9918829185386 * S_Recency
2460085   +          +     0.64908540313947 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.79452363233333 * S_AcceptedCmpTotal + 1.70826835028511 *
S_Age + 0.08241717907016 * S_Frq + -1.15275600314196 * S_Income + 0.87736096074094 * S_Kidhome
+ 0.90821427722502 * S_Mnt + -0.84055732556964 * S_MntFishProducts + -0.74245639083939 *
S_MntFruits + 0.00204325095854 * S_MntGoldProds + 0.37597102500134 * S_MntMeatProducts +
0.28586076288454 * S_MntSweetProducts + -1.38194310174269 * S_MntWines + 0.10286181254259 *
S_MonthsAsCustomer + -0.82469018226034 * S_NumCatalogPurchases + -0.22204470395056 *
S_NumDealsPurchases + -1.74490476011984 * S_NumDistPurchases + 1.93538420108324 *
S_NumStorePurchases + 1.04892631742152 * S_NumWebPurchases + 1.50717841566047 *
S_NumWebVisitsMonth + 0.61249250909375 * S_RFMstat + -0.54764212165911 * S_RMntFrq +
1.9918829185386 * S_Recency + 0.64908540313947 * S_Teenhome ;
2460086   +   H1x2_6  =     1.38705263280369 * S_AcceptedCmpTotal
2460087   +          +    -0.70531523704191 * S_Age  +     0.59125500807205 * S_Frq
2460088   +          +     0.89549490842249 * S_Income  +     1.07240562425698 *
2460089   +        S_Kidhome  +    -0.25050185694258 * S_Mnt  +    -0.77552207934024 *
2460090   +        S_MntFishProducts  +     0.18087757744856 * S_MntFruits
2460091   +          +    -1.37618517481144 * S_MntGoldProds  +      0.6557488228355 *
2460092   +        S_MntMeatProducts  +    -1.40834207395949 * S_MntSweetProducts
2460093   +          +    -0.76196689750388 * S_MntWines  +     0.85144735274506 *
2460094   +        S_MonthsAsCustomer  +     0.66349954778428 * S_NumCatalogPurchases
2460095   +          +    -0.94690420785776 * S_NumDealsPurchases
2460096   +          +     1.87932706342204 * S_NumDistPurchases
2460097   +          +     0.31232717416487 * S_NumStorePurchases
2460098   +          +     1.51889492693355 * S_NumWebPurchases
2460099   +          +     0.04376853689795 * S_NumWebVisitsMonth
2460100   +          +    -2.53979043374029 * S_RFMstat  +     1.33915580029494 *
2460101   +        S_RMntFrq  +    -1.21983510008829 * S_Recency
2460102   +          +     0.36122230024433 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_6 = 1.38705263280369 * S_AcceptedCmpTotal + -0.70531523704191 *
S_Age + 0.59125500807205 * S_Frq + 0.89549490842249 * S_Income + 1.07240562425698 * S_Kidhome
+ -0.25050185694258 * S_Mnt + -0.77552207934024 * S_MntFishProducts + 0.18087757744856 *
S_MntFruits + -1.37618517481144 * S_MntGoldProds + 0.6557488228355 * S_MntMeatProducts +
-1.40834207395949 * S_MntSweetProducts + -0.76196689750388 * S_MntWines + 0.85144735274506 *
S_MonthsAsCustomer + 0.66349954778428 * S_NumCatalogPurchases + -0.94690420785776 *
S_NumDealsPurchases + 1.87932706342204 * S_NumDistPurchases + 0.31232717416487 *
S_NumStorePurchases + 1.51889492693355 * S_NumWebPurchases + 0.04376853689795 *
S_NumWebVisitsMonth + -2.53979043374029 * S_RFMstat + 1.33915580029494 * S_RMntFrq +
-1.21983510008829 * S_Recency + 0.36122230024433 * S_Teenhome ;
2460103   +   H1x2_1  = H1x2_1  +     1.89852147155601 * AcceptedCmp10
2460104   +          +     0.03501265764204 * AcceptedCmp20  +    -0.45070218241239 *
2460105   +        AcceptedCmp30  +    -1.27257966336041 * AcceptedCmp40
2460106   +          +     0.86175125820023 * AcceptedCmp50  +     1.42864024461581 *
2460107   +        Complain0  +     0.34417315915901 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 1.89852147155601 * AcceptedCmp10 + 0.03501265764204 *
AcceptedCmp20 + -0.45070218241239 * AcceptedCmp30 + -1.27257966336041 * AcceptedCmp40 +
0.86175125820023 * AcceptedCmp50 + 1.42864024461581 * Complain0 + 0.34417315915901 *
HigherEducationBinary0 ;
2460108   +   H1x2_2  = H1x2_2  +     0.41672679168374 * AcceptedCmp10
2460109   +          +     0.10769233314512 * AcceptedCmp20  +     0.42374549876289 *
2460110   +        AcceptedCmp30  +     0.65697535989046 * AcceptedCmp40
2460111   +          +     1.49817201460948 * AcceptedCmp50  +     0.46039378640249 *
2460112   +        Complain0  +     1.34709525059573 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.41672679168374 * AcceptedCmp10 + 0.10769233314512 *
AcceptedCmp20 + 0.42374549876289 * AcceptedCmp30 + 0.65697535989046 * AcceptedCmp40 +
1.49817201460948 * AcceptedCmp50 + 0.46039378640249 * Complain0 + 1.34709525059573 *
HigherEducationBinary0 ;
2460113   +   H1x2_3  = H1x2_3  +     0.75388522027745 * AcceptedCmp10
2460114   +          +     2.63069611253058 * AcceptedCmp20  +     0.30907626174766 *
2460115   +        AcceptedCmp30  +     1.10100873408666 * AcceptedCmp40
2460116   +          +    -1.08824297693055 * AcceptedCmp50  +     1.05059014395924 *
2460117   +        Complain0  +     0.67869922391732 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.75388522027745 * AcceptedCmp10 + 2.63069611253058 *
AcceptedCmp20 + 0.30907626174766 * AcceptedCmp30 + 1.10100873408666 * AcceptedCmp40 +
-1.08824297693055 * AcceptedCmp50 + 1.05059014395924 * Complain0 + 0.67869922391732 *
HigherEducationBinary0 ;
2460118   +   H1x2_4  = H1x2_4  +    -0.22033664091288 * AcceptedCmp10
2460119   +          +     1.34914301916376 * AcceptedCmp20  +    -0.91465085581504 *
2460120   +        AcceptedCmp30  +    -0.19686441685837 * AcceptedCmp40
2460121   +          +     0.10683331864009 * AcceptedCmp50  +    -0.00754824810979 *
2460122   +        Complain0  +     1.52033864172921 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + -0.22033664091288 * AcceptedCmp10 + 1.34914301916376 *
AcceptedCmp20 + -0.91465085581504 * AcceptedCmp30 + -0.19686441685837 * AcceptedCmp40 +
0.10683331864009 * AcceptedCmp50 + -0.00754824810979 * Complain0 + 1.52033864172921 *
HigherEducationBinary0 ;
2460123   +   H1x2_5  = H1x2_5  +     0.83049886541915 * AcceptedCmp10
2460124   +          +    -0.74079162208987 * AcceptedCmp20  +    -0.67792505698297 *
2460125   +        AcceptedCmp30  +     0.07081190269168 * AcceptedCmp40
2460126   +          +     0.18720033568684 * AcceptedCmp50  +      2.6531318197812 *
2460127   +        Complain0  +     0.89741230471087 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.83049886541915 * AcceptedCmp10 + -0.74079162208987 *
AcceptedCmp20 + -0.67792505698297 * AcceptedCmp30 + 0.07081190269168 * AcceptedCmp40 +
0.18720033568684 * AcceptedCmp50 + 2.6531318197812 * Complain0 + 0.89741230471087 *
HigherEducationBinary0 ;
2460128   +   H1x2_6  = H1x2_6  +    -0.56781516290501 * AcceptedCmp10
2460129   +          +    -1.51874938874937 * AcceptedCmp20  +     1.28621778326033 *
2460130   +        AcceptedCmp30  +    -0.68769482686243 * AcceptedCmp40
2460131   +          +     0.35592893389946 * AcceptedCmp50  +    -1.30827608061077 *
2460132   +        Complain0  +     0.32980103195099 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + -0.56781516290501 * AcceptedCmp10 + -1.51874938874937
* AcceptedCmp20 + 1.28621778326033 * AcceptedCmp30 + -0.68769482686243 * AcceptedCmp40 +
0.35592893389946 * AcceptedCmp50 + -1.30827608061077 * Complain0 + 0.32980103195099 *
HigherEducationBinary0 ;
2460133   +   H1x2_1  = H1x2_1  +     -1.3799101073197 * Education2n_Cycle
2460134   +          +     0.02501135207931 * EducationBasic  +     1.13490660748682 *
2460135   +        EducationGraduation  +    -0.11344307008943 * EducationMaster
2460136   +          +     0.56030871857835 * Marital_StatusDivorced
2460137   +          +    -1.22448534379831 * Marital_StatusMarried
2460138   +          +     0.78141783495855 * Marital_StatusSingle
2460139   +          +    -1.35807438297575 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -1.3799101073197 * Education2n_Cycle +
0.02501135207931 * EducationBasic + 1.13490660748682 * EducationGraduation + -0.11344307008943
* EducationMaster + 0.56030871857835 * Marital_StatusDivorced + -1.22448534379831 *
Marital_StatusMarried + 0.78141783495855 * Marital_StatusSingle + -1.35807438297575 *
Marital_StatusTogether ;
2460140   +   H1x2_2  = H1x2_2  +    -0.29912132201198 * Education2n_Cycle
2460141   +          +    -0.97227735746604 * EducationBasic  +     1.05541395347718 *
2460142   +        EducationGraduation  +     0.69607179798453 * EducationMaster
2460143   +          +    -2.63452071552997 * Marital_StatusDivorced
2460144   +          +     0.61829054779121 * Marital_StatusMarried
2460145   +          +    -2.20743370246315 * Marital_StatusSingle
2460146   +          +     0.56930072654252 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.29912132201198 * Education2n_Cycle +
-0.97227735746604 * EducationBasic + 1.05541395347718 * EducationGraduation + 0.69607179798453
* EducationMaster + -2.63452071552997 * Marital_StatusDivorced + 0.61829054779121 *
Marital_StatusMarried + -2.20743370246315 * Marital_StatusSingle + 0.56930072654252 *
Marital_StatusTogether ;
2460147   +   H1x2_3  = H1x2_3  +     0.65046688904352 * Education2n_Cycle
2460148   +          +     0.03854232912474 * EducationBasic  +     0.59545004622858 *
2460149   +        EducationGraduation  +    -1.68638824011899 * EducationMaster
2460150   +          +      -1.454102516731 * Marital_StatusDivorced
2460151   +          +     0.71488291465759 * Marital_StatusMarried
2460152   +          +     0.96038830049792 * Marital_StatusSingle
2460153   +          +    -0.85244216490853 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.65046688904352 * Education2n_Cycle +
0.03854232912474 * EducationBasic + 0.59545004622858 * EducationGraduation + -1.68638824011899
* EducationMaster + -1.454102516731 * Marital_StatusDivorced + 0.71488291465759 *
Marital_StatusMarried + 0.96038830049792 * Marital_StatusSingle + -0.85244216490853 *
Marital_StatusTogether ;
2460154   +   H1x2_4  = H1x2_4  +     0.37430673318658 * Education2n_Cycle
2460155   +          +    -0.25373979771478 * EducationBasic  +    -1.65617377693247 *
2460156   +        EducationGraduation  +    -1.12481097095571 * EducationMaster
2460157   +          +    -0.01160394891598 * Marital_StatusDivorced
2460158   +          +    -1.09054636482951 * Marital_StatusMarried
2460159   +          +      0.7793855479379 * Marital_StatusSingle
2460160   +          +    -0.40649435490654 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.37430673318658 * Education2n_Cycle +
-0.25373979771478 * EducationBasic + -1.65617377693247 * EducationGraduation +
-1.12481097095571 * EducationMaster + -0.01160394891598 * Marital_StatusDivorced +
-1.09054636482951 * Marital_StatusMarried + 0.7793855479379 * Marital_StatusSingle +
-0.40649435490654 * Marital_StatusTogether ;
2460161   +   H1x2_5  = H1x2_5  +     -0.1016827992735 * Education2n_Cycle
2460162   +          +     1.07194596228219 * EducationBasic  +    -1.05800808905557 *
2460163   +        EducationGraduation  +     0.09666597691691 * EducationMaster
2460164   +          +    -0.73414854875115 * Marital_StatusDivorced
2460165   +          +     0.46421425621114 * Marital_StatusMarried
2460166   +          +    -0.54512730625469 * Marital_StatusSingle
2460167   +          +     0.76568726267448 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + -0.1016827992735 * Education2n_Cycle +
1.07194596228219 * EducationBasic + -1.05800808905557 * EducationGraduation + 0.09666597691691
* EducationMaster + -0.73414854875115 * Marital_StatusDivorced + 0.46421425621114 *
Marital_StatusMarried + -0.54512730625469 * Marital_StatusSingle + 0.76568726267448 *
Marital_StatusTogether ;
2460168   +   H1x2_6  = H1x2_6  +    -1.15957084181454 * Education2n_Cycle
2460169   +          +     0.00847667341235 * EducationBasic  +    -1.58463832529749 *
2460170   +        EducationGraduation  +     0.56518194582557 * EducationMaster
2460171   +          +     0.25131188683384 * Marital_StatusDivorced
2460172   +          +     2.38279806963807 * Marital_StatusMarried
2460173   +          +     0.28897706448348 * Marital_StatusSingle
2460174   +          +     0.89118497255856 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + -1.15957084181454 * Education2n_Cycle +
0.00847667341235 * EducationBasic + -1.58463832529749 * EducationGraduation + 0.56518194582557
* EducationMaster + 0.25131188683384 * Marital_StatusDivorced + 2.38279806963807 *
Marital_StatusMarried + 0.28897706448348 * Marital_StatusSingle + 0.89118497255856 *
Marital_StatusTogether ;
2460175   +   H1x2_1  =    -1.58113759763481 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -1.58113759763481 + H1x2_1 ;
2460176   +   H1x2_2  =    -1.19307731012977 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -1.19307731012977 + H1x2_2 ;
2460177   +   H1x2_3  =     0.35767811974231 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = 0.35767811974231 + H1x2_3 ;
2460178   +   H1x2_4  =    -0.20241610577527 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.20241610577527 + H1x2_4 ;
2460179   +   H1x2_5  =     0.30120348602955 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 0.30120348602955 + H1x2_5 ;
2460180   +   H1x2_6  =     1.04145053611779 + H1x2_6 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = 1.04145053611779 + H1x2_6 ;
2460181   +   H1x2_7  = 0;
MPRINT(EM_DIAGRAM):   H1x2_7 = 0;
2460182   +   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 , H1x2_7
2460183   +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 ,
H1x2_7 );
2460184   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2460185   +   H1x2_1  = EXP(H1x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(H1x2_1 - _MAX_);
2460186   +   _SUM_ = _SUM_ + H1x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_1 ;
2460187   +   H1x2_2  = EXP(H1x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(H1x2_2 - _MAX_);
2460188   +   _SUM_ = _SUM_ + H1x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_2 ;
2460189   +   H1x2_3  = EXP(H1x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(H1x2_3 - _MAX_);
2460190   +   _SUM_ = _SUM_ + H1x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_3 ;
2460191   +   H1x2_4  = EXP(H1x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(H1x2_4 - _MAX_);
2460192   +   _SUM_ = _SUM_ + H1x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_4 ;
2460193   +   H1x2_5  = EXP(H1x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(H1x2_5 - _MAX_);
2460194   +   _SUM_ = _SUM_ + H1x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_5 ;
2460195   +   H1x2_6  = EXP(H1x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(H1x2_6 - _MAX_);
2460196   +   _SUM_ = _SUM_ + H1x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_6 ;
2460197   +   H1x2_7  = EXP(H1x2_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_7 = EXP(H1x2_7 - _MAX_);
2460198   +   _SUM_ = _SUM_ + H1x2_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_7 ;
2460199   +   H1x2_1  = H1x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 / _SUM_;
2460200   +   H1x2_2  = H1x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 / _SUM_;
2460201   +   H1x2_3  = H1x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 / _SUM_;
2460202   +   H1x2_4  = H1x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 / _SUM_;
2460203   +   H1x2_5  = H1x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 / _SUM_;
2460204   +   H1x2_6  = H1x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 / _SUM_;
2460205   +   H1x2_7  = H1x2_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_7 = H1x2_7 / _SUM_;
2460206   +END;
MPRINT(EM_DIAGRAM):   END;
2460207   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2460208   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
2460209   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
2460210   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
2460211   +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
2460212   +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
2460213   +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
2460214   +   H1x2_7  = .;
MPRINT(EM_DIAGRAM):   H1x2_7 = .;
2460215   +END;
MPRINT(EM_DIAGRAM):   END;
2460216   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2460217   +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
2460218   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2460219   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2460220   +   H1x3_1  =    -0.17891338426869 * S_AcceptedCmpTotal
2460221   +          +     0.25935021287808 * S_Age  +     -0.4211584261256 * S_Frq
2460222   +          +    -1.91007620895221 * S_Income  +     0.38954955842314 *
2460223   +        S_Kidhome  +     0.07674351412771 * S_Mnt  +    -0.00193662324959 *
2460224   +        S_MntFishProducts  +    -0.05912563364557 * S_MntFruits
2460225   +          +     0.34447908349796 * S_MntGoldProds  +      1.8146796379351 *
2460226   +        S_MntMeatProducts  +    -0.28617584915758 * S_MntSweetProducts
2460227   +          +    -0.25003395507837 * S_MntWines  +     2.70698456342857 *
2460228   +        S_MonthsAsCustomer  +     0.61560315312621 * S_NumCatalogPurchases
2460229   +          +     1.11855402225797 * S_NumDealsPurchases
2460230   +          +     0.39150287442005 * S_NumDistPurchases
2460231   +          +     0.00160244551627 * S_NumStorePurchases
2460232   +          +     1.54380043731879 * S_NumWebPurchases
2460233   +          +      0.6462755347813 * S_NumWebVisitsMonth
2460234   +          +      0.3712356571744 * S_RFMstat  +     0.31930000498313 *
2460235   +        S_RMntFrq  +     0.91533450209744 * S_Recency
2460236   +          +    -1.15144971921837 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_1 = -0.17891338426869 * S_AcceptedCmpTotal + 0.25935021287808 *
S_Age + -0.4211584261256 * S_Frq + -1.91007620895221 * S_Income + 0.38954955842314 * S_Kidhome
+ 0.07674351412771 * S_Mnt + -0.00193662324959 * S_MntFishProducts + -0.05912563364557 *
S_MntFruits + 0.34447908349796 * S_MntGoldProds + 1.8146796379351 * S_MntMeatProducts +
-0.28617584915758 * S_MntSweetProducts + -0.25003395507837 * S_MntWines + 2.70698456342857 *
S_MonthsAsCustomer + 0.61560315312621 * S_NumCatalogPurchases + 1.11855402225797 *
S_NumDealsPurchases + 0.39150287442005 * S_NumDistPurchases + 0.00160244551627 *
S_NumStorePurchases + 1.54380043731879 * S_NumWebPurchases + 0.6462755347813 *
S_NumWebVisitsMonth + 0.3712356571744 * S_RFMstat + 0.31930000498313 * S_RMntFrq +
0.91533450209744 * S_Recency + -1.15144971921837 * S_Teenhome ;
2460237   +   H1x3_2  =     0.70342217458269 * S_AcceptedCmpTotal
2460238   +          +     1.00269567168731 * S_Age  +     0.28237778780972 * S_Frq
2460239   +          +     1.85610950568833 * S_Income  +    -0.88627540559449 *
2460240   +        S_Kidhome  +      -0.681406495446 * S_Mnt  +    -0.52884566607488 *
2460241   +        S_MntFishProducts  +    -1.55540056999822 * S_MntFruits
2460242   +          +    -0.86530238267543 * S_MntGoldProds  +     0.50288889191395 *
2460243   +        S_MntMeatProducts  +     0.42795025747297 * S_MntSweetProducts
2460244   +          +     1.65622561769832 * S_MntWines  +    -0.40506757052255 *
2460245   +        S_MonthsAsCustomer  +    -0.45283667973478 * S_NumCatalogPurchases
2460246   +          +     0.01911815525287 * S_NumDealsPurchases
2460247   +          +    -1.07196707915227 * S_NumDistPurchases
2460248   +          +      0.6452048321682 * S_NumStorePurchases
2460249   +          +    -0.15818575353955 * S_NumWebPurchases
2460250   +          +    -0.82586162051382 * S_NumWebVisitsMonth
2460251   +          +     0.35914598433318 * S_RFMstat  +     0.14754646817335 *
2460252   +        S_RMntFrq  +     0.23398669008843 * S_Recency
2460253   +          +      0.1494741245474 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_2 = 0.70342217458269 * S_AcceptedCmpTotal + 1.00269567168731 *
S_Age + 0.28237778780972 * S_Frq + 1.85610950568833 * S_Income + -0.88627540559449 * S_Kidhome
+ -0.681406495446 * S_Mnt + -0.52884566607488 * S_MntFishProducts + -1.55540056999822 *
S_MntFruits + -0.86530238267543 * S_MntGoldProds + 0.50288889191395 * S_MntMeatProducts +
0.42795025747297 * S_MntSweetProducts + 1.65622561769832 * S_MntWines + -0.40506757052255 *
S_MonthsAsCustomer + -0.45283667973478 * S_NumCatalogPurchases + 0.01911815525287 *
S_NumDealsPurchases + -1.07196707915227 * S_NumDistPurchases + 0.6452048321682 *
S_NumStorePurchases + -0.15818575353955 * S_NumWebPurchases + -0.82586162051382 *
S_NumWebVisitsMonth + 0.35914598433318 * S_RFMstat + 0.14754646817335 * S_RMntFrq +
0.23398669008843 * S_Recency + 0.1494741245474 * S_Teenhome ;
2460254   +   H1x3_3  =     0.54929571619315 * S_AcceptedCmpTotal
2460255   +          +      -0.751329127583 * S_Age  +    -0.94592306727941 * S_Frq
2460256   +          +    -1.17625421122138 * S_Income  +     0.74760015734698 *
2460257   +        S_Kidhome  +    -1.31055967085841 * S_Mnt  +     -0.5844789069547 *
2460258   +        S_MntFishProducts  +     0.29563811382096 * S_MntFruits
2460259   +          +      2.0486671645084 * S_MntGoldProds  +      0.4596153519541 *
2460260   +        S_MntMeatProducts  +     0.43182048706593 * S_MntSweetProducts
2460261   +          +     0.06319773540648 * S_MntWines  +     -0.9320658068644 *
2460262   +        S_MonthsAsCustomer  +     0.97208201647088 * S_NumCatalogPurchases
2460263   +          +     1.56893739271853 * S_NumDealsPurchases
2460264   +          +      0.6745865425238 * S_NumDistPurchases
2460265   +          +    -0.26848765783548 * S_NumStorePurchases
2460266   +          +     0.79227081430227 * S_NumWebPurchases
2460267   +          +     0.83054874267768 * S_NumWebVisitsMonth
2460268   +          +    -0.28363014203077 * S_RFMstat  +    -0.71879552423951 *
2460269   +        S_RMntFrq  +     0.80917480816898 * S_Recency
2460270   +          +    -0.52052715034272 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_3 = 0.54929571619315 * S_AcceptedCmpTotal + -0.751329127583 * S_Age
+ -0.94592306727941 * S_Frq + -1.17625421122138 * S_Income + 0.74760015734698 * S_Kidhome +
-1.31055967085841 * S_Mnt + -0.5844789069547 * S_MntFishProducts + 0.29563811382096 *
S_MntFruits + 2.0486671645084 * S_MntGoldProds + 0.4596153519541 * S_MntMeatProducts +
0.43182048706593 * S_MntSweetProducts + 0.06319773540648 * S_MntWines + -0.9320658068644 *
S_MonthsAsCustomer + 0.97208201647088 * S_NumCatalogPurchases + 1.56893739271853 *
S_NumDealsPurchases + 0.6745865425238 * S_NumDistPurchases + -0.26848765783548 *
S_NumStorePurchases + 0.79227081430227 * S_NumWebPurchases + 0.83054874267768 *
S_NumWebVisitsMonth + -0.28363014203077 * S_RFMstat + -0.71879552423951 * S_RMntFrq +
0.80917480816898 * S_Recency + -0.52052715034272 * S_Teenhome ;
2460271   +   H1x3_4  =     1.71480641781959 * S_AcceptedCmpTotal
2460272   +          +    -0.98495603767618 * S_Age  +     -0.0459665945886 * S_Frq
2460273   +          +     1.19396539246615 * S_Income  +     0.51326452746824 *
2460274   +        S_Kidhome  +    -0.22663230333642 * S_Mnt  +     0.27256846012963 *
2460275   +        S_MntFishProducts  +    -0.50661455153622 * S_MntFruits
2460276   +          +     -0.3498057126965 * S_MntGoldProds  +    -2.87000075082987 *
2460277   +        S_MntMeatProducts  +    -0.09413391100844 * S_MntSweetProducts
2460278   +          +     1.15010664811376 * S_MntWines  +    -0.48501392658783 *
2460279   +        S_MonthsAsCustomer  +      0.2688077310392 * S_NumCatalogPurchases
2460280   +          +    -0.23954856030467 * S_NumDealsPurchases
2460281   +          +    -1.61914390483829 * S_NumDistPurchases
2460282   +          +      -1.014570623016 * S_NumStorePurchases
2460283   +          +    -0.36828642098701 * S_NumWebPurchases
2460284   +          +    -0.04976922659227 * S_NumWebVisitsMonth
2460285   +          +     0.87811344320757 * S_RFMstat  +    -1.70999928232532 *
2460286   +        S_RMntFrq  +    -0.40880481304369 * S_Recency
2460287   +          +     0.75806578113158 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_4 = 1.71480641781959 * S_AcceptedCmpTotal + -0.98495603767618 *
S_Age + -0.0459665945886 * S_Frq + 1.19396539246615 * S_Income + 0.51326452746824 * S_Kidhome
+ -0.22663230333642 * S_Mnt + 0.27256846012963 * S_MntFishProducts + -0.50661455153622 *
S_MntFruits + -0.3498057126965 * S_MntGoldProds + -2.87000075082987 * S_MntMeatProducts +
-0.09413391100844 * S_MntSweetProducts + 1.15010664811376 * S_MntWines + -0.48501392658783 *
S_MonthsAsCustomer + 0.2688077310392 * S_NumCatalogPurchases + -0.23954856030467 *
S_NumDealsPurchases + -1.61914390483829 * S_NumDistPurchases + -1.014570623016 *
S_NumStorePurchases + -0.36828642098701 * S_NumWebPurchases + -0.04976922659227 *
S_NumWebVisitsMonth + 0.87811344320757 * S_RFMstat + -1.70999928232532 * S_RMntFrq +
-0.40880481304369 * S_Recency + 0.75806578113158 * S_Teenhome ;
2460288   +   H1x3_5  =    -0.35033091531835 * S_AcceptedCmpTotal
2460289   +          +    -1.18148775203733 * S_Age  +    -0.17374293038138 * S_Frq
2460290   +          +    -0.36680516767012 * S_Income  +     0.57186890691757 *
2460291   +        S_Kidhome  +    -0.02612042491922 * S_Mnt  +     0.84551697375819 *
2460292   +        S_MntFishProducts  +     0.44255296354709 * S_MntFruits
2460293   +          +    -1.35259485807243 * S_MntGoldProds  +      0.3377329409199 *
2460294   +        S_MntMeatProducts  +    -1.06135100840202 * S_MntSweetProducts
2460295   +          +     0.15771394796649 * S_MntWines  +     1.55754960780486 *
2460296   +        S_MonthsAsCustomer  +    -0.76896921785988 * S_NumCatalogPurchases
2460297   +          +     1.00094082424204 * S_NumDealsPurchases
2460298   +          +      0.2724785290725 * S_NumDistPurchases
2460299   +          +     0.13170237783486 * S_NumStorePurchases
2460300   +          +    -1.31447792523743 * S_NumWebPurchases
2460301   +          +    -0.09121088371438 * S_NumWebVisitsMonth
2460302   +          +     1.46860488573551 * S_RFMstat  +     0.46491504994651 *
2460303   +        S_RMntFrq  +      0.6767512513985 * S_Recency
2460304   +          +    -1.74995034763966 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_5 = -0.35033091531835 * S_AcceptedCmpTotal + -1.18148775203733 *
S_Age + -0.17374293038138 * S_Frq + -0.36680516767012 * S_Income + 0.57186890691757 *
S_Kidhome + -0.02612042491922 * S_Mnt + 0.84551697375819 * S_MntFishProducts +
0.44255296354709 * S_MntFruits + -1.35259485807243 * S_MntGoldProds + 0.3377329409199 *
The SAS System
 
S_MntMeatProducts + -1.06135100840202 * S_MntSweetProducts + 0.15771394796649 * S_MntWines +
1.55754960780486 * S_MonthsAsCustomer + -0.76896921785988 * S_NumCatalogPurchases +
1.00094082424204 * S_NumDealsPurchases + 0.2724785290725 * S_NumDistPurchases +
0.13170237783486 * S_NumStorePurchases + -1.31447792523743 * S_NumWebPurchases +
-0.09121088371438 * S_NumWebVisitsMonth + 1.46860488573551 * S_RFMstat + 0.46491504994651 *
S_RMntFrq + 0.6767512513985 * S_Recency + -1.74995034763966 * S_Teenhome ;
2460305   +   H1x3_6  =     1.05520309715672 * S_AcceptedCmpTotal
2460306   +          +    -1.05930507843633 * S_Age  +     0.07032294102853 * S_Frq
2460307   +          +    -0.05932294137503 * S_Income  +    -1.47206442598932 *
2460308   +        S_Kidhome  +     0.56661112816398 * S_Mnt  +    -0.11340132210258 *
2460309   +        S_MntFishProducts  +    -0.32177484313741 * S_MntFruits
2460310   +          +    -0.32378384178804 * S_MntGoldProds  +     0.00540737819175 *
2460311   +        S_MntMeatProducts  +     0.14834467568566 * S_MntSweetProducts
2460312   +          +    -0.95841169333668 * S_MntWines  +    -0.62902099823048 *
2460313   +        S_MonthsAsCustomer  +    -0.67434201898155 * S_NumCatalogPurchases
2460314   +          +    -0.73198872336344 * S_NumDealsPurchases
2460315   +          +     0.29368958872361 * S_NumDistPurchases
2460316   +          +     1.52772046446908 * S_NumStorePurchases
2460317   +          +    -1.75065469134874 * S_NumWebPurchases
2460318   +          +      0.0264954621772 * S_NumWebVisitsMonth
2460319   +          +    -0.88054137065815 * S_RFMstat  +     0.70371760194946 *
2460320   +        S_RMntFrq  +     1.14219878739476 * S_Recency
2460321   +          +    -1.15240998118906 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_6 = 1.05520309715672 * S_AcceptedCmpTotal + -1.05930507843633 *
S_Age + 0.07032294102853 * S_Frq + -0.05932294137503 * S_Income + -1.47206442598932 *
S_Kidhome + 0.56661112816398 * S_Mnt + -0.11340132210258 * S_MntFishProducts +
-0.32177484313741 * S_MntFruits + -0.32378384178804 * S_MntGoldProds + 0.00540737819175 *
S_MntMeatProducts + 0.14834467568566 * S_MntSweetProducts + -0.95841169333668 * S_MntWines +
-0.62902099823048 * S_MonthsAsCustomer + -0.67434201898155 * S_NumCatalogPurchases +
-0.73198872336344 * S_NumDealsPurchases + 0.29368958872361 * S_NumDistPurchases +
1.52772046446908 * S_NumStorePurchases + -1.75065469134874 * S_NumWebPurchases +
0.0264954621772 * S_NumWebVisitsMonth + -0.88054137065815 * S_RFMstat + 0.70371760194946 *
S_RMntFrq + 1.14219878739476 * S_Recency + -1.15240998118906 * S_Teenhome ;
2460322   +   H1x3_1  = H1x3_1  +     0.60800466481517 * AcceptedCmp10
2460323   +          +     0.33187245535701 * AcceptedCmp20  +    -0.13888343551044 *
2460324   +        AcceptedCmp30  +     0.93663925029857 * AcceptedCmp40
2460325   +          +     1.09340622621085 * AcceptedCmp50  +    -0.49132743156126 *
2460326   +        Complain0  +     0.45196197584946 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + 0.60800466481517 * AcceptedCmp10 + 0.33187245535701 *
AcceptedCmp20 + -0.13888343551044 * AcceptedCmp30 + 0.93663925029857 * AcceptedCmp40 +
1.09340622621085 * AcceptedCmp50 + -0.49132743156126 * Complain0 + 0.45196197584946 *
HigherEducationBinary0 ;
2460327   +   H1x3_2  = H1x3_2  +     1.40275485940553 * AcceptedCmp10
2460328   +          +    -0.15035102140746 * AcceptedCmp20  +    -0.53574064147206 *
2460329   +        AcceptedCmp30  +    -1.67324904853563 * AcceptedCmp40
2460330   +          +     0.05636486780046 * AcceptedCmp50  +    -0.39032867538703 *
2460331   +        Complain0  +    -0.74980603736258 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + 1.40275485940553 * AcceptedCmp10 + -0.15035102140746 *
AcceptedCmp20 + -0.53574064147206 * AcceptedCmp30 + -1.67324904853563 * AcceptedCmp40 +
0.05636486780046 * AcceptedCmp50 + -0.39032867538703 * Complain0 + -0.74980603736258 *
HigherEducationBinary0 ;
2460332   +   H1x3_3  = H1x3_3  +     0.26722647672682 * AcceptedCmp10
2460333   +          +      0.6216449242511 * AcceptedCmp20  +     0.76635966126463 *
2460334   +        AcceptedCmp30  +    -2.48978919706551 * AcceptedCmp40
2460335   +          +     0.98619070514978 * AcceptedCmp50  +    -0.19244215041297 *
2460336   +        Complain0  +    -1.19045127506692 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 + 0.26722647672682 * AcceptedCmp10 + 0.6216449242511 *
AcceptedCmp20 + 0.76635966126463 * AcceptedCmp30 + -2.48978919706551 * AcceptedCmp40 +
0.98619070514978 * AcceptedCmp50 + -0.19244215041297 * Complain0 + -1.19045127506692 *
HigherEducationBinary0 ;
2460337   +   H1x3_4  = H1x3_4  +    -1.73915810074841 * AcceptedCmp10
2460338   +          +     0.72244354389321 * AcceptedCmp20  +     1.07200246076684 *
2460339   +        AcceptedCmp30  +     0.24242315318429 * AcceptedCmp40
2460340   +          +     0.48717202781909 * AcceptedCmp50  +    -1.18600714935645 *
2460341   +        Complain0  +     -1.0752062632729 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 + -1.73915810074841 * AcceptedCmp10 + 0.72244354389321 *
AcceptedCmp20 + 1.07200246076684 * AcceptedCmp30 + 0.24242315318429 * AcceptedCmp40 +
0.48717202781909 * AcceptedCmp50 + -1.18600714935645 * Complain0 + -1.0752062632729 *
HigherEducationBinary0 ;
2460342   +   H1x3_5  = H1x3_5  +     1.07972020322696 * AcceptedCmp10
2460343   +          +     0.38275266830165 * AcceptedCmp20  +     0.45959913551609 *
2460344   +        AcceptedCmp30  +    -0.30891288234597 * AcceptedCmp40
2460345   +          +    -0.35568820567134 * AcceptedCmp50  +     -1.8045223309162 *
2460346   +        Complain0  +    -0.29380313969195 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 + 1.07972020322696 * AcceptedCmp10 + 0.38275266830165 *
AcceptedCmp20 + 0.45959913551609 * AcceptedCmp30 + -0.30891288234597 * AcceptedCmp40 +
-0.35568820567134 * AcceptedCmp50 + -1.8045223309162 * Complain0 + -0.29380313969195 *
HigherEducationBinary0 ;
2460347   +   H1x3_6  = H1x3_6  +    -2.40002597755125 * AcceptedCmp10
2460348   +          +     0.61725427642794 * AcceptedCmp20  +      1.3438972982524 *
2460349   +        AcceptedCmp30  +    -0.66766212489049 * AcceptedCmp40
2460350   +          +     1.10709227053258 * AcceptedCmp50  +    -0.98301865424423 *
2460351   +        Complain0  +     0.83512874944952 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_6 = H1x3_6 + -2.40002597755125 * AcceptedCmp10 + 0.61725427642794 *
AcceptedCmp20 + 1.3438972982524 * AcceptedCmp30 + -0.66766212489049 * AcceptedCmp40 +
1.10709227053258 * AcceptedCmp50 + -0.98301865424423 * Complain0 + 0.83512874944952 *
HigherEducationBinary0 ;
2460352   +   H1x3_1  = H1x3_1  +    -0.49604077640433 * Education2n_Cycle
2460353   +          +    -0.60803139475446 * EducationBasic  +     0.39029834300888 *
2460354   +        EducationGraduation  +     1.49476669226441 * EducationMaster
2460355   +          +     0.32207432513904 * Marital_StatusDivorced
2460356   +          +      0.6397913221395 * Marital_StatusMarried
2460357   +          +    -0.25330032559918 * Marital_StatusSingle
2460358   +          +      0.6826963146507 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + -0.49604077640433 * Education2n_Cycle +
-0.60803139475446 * EducationBasic + 0.39029834300888 * EducationGraduation + 1.49476669226441
* EducationMaster + 0.32207432513904 * Marital_StatusDivorced + 0.6397913221395 *
Marital_StatusMarried + -0.25330032559918 * Marital_StatusSingle + 0.6826963146507 *
Marital_StatusTogether ;
2460359   +   H1x3_2  = H1x3_2  +     0.70727271276171 * Education2n_Cycle
2460360   +          +    -0.74539861835467 * EducationBasic  +    -1.09813520505203 *
2460361   +        EducationGraduation  +      0.0913616986494 * EducationMaster
2460362   +          +     0.79430904713493 * Marital_StatusDivorced
2460363   +          +     2.54456429102799 * Marital_StatusMarried
2460364   +          +     0.59410742352499 * Marital_StatusSingle
2460365   +          +     0.62339810371964 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + 0.70727271276171 * Education2n_Cycle +
-0.74539861835467 * EducationBasic + -1.09813520505203 * EducationGraduation + 0.0913616986494
* EducationMaster + 0.79430904713493 * Marital_StatusDivorced + 2.54456429102799 *
Marital_StatusMarried + 0.59410742352499 * Marital_StatusSingle + 0.62339810371964 *
Marital_StatusTogether ;
2460366   +   H1x3_3  = H1x3_3  +     0.41739931776571 * Education2n_Cycle
2460367   +          +     0.90042318812458 * EducationBasic  +    -0.30863999735161 *
2460368   +        EducationGraduation  +    -0.07080985966069 * EducationMaster
2460369   +          +    -0.43081775693595 * Marital_StatusDivorced
2460370   +          +    -0.78485102174552 * Marital_StatusMarried
2460371   +          +    -1.56581090110813 * Marital_StatusSingle
2460372   +          +     1.31552735466691 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 + 0.41739931776571 * Education2n_Cycle +
0.90042318812458 * EducationBasic + -0.30863999735161 * EducationGraduation +
-0.07080985966069 * EducationMaster + -0.43081775693595 * Marital_StatusDivorced +
-0.78485102174552 * Marital_StatusMarried + -1.56581090110813 * Marital_StatusSingle +
1.31552735466691 * Marital_StatusTogether ;
2460373   +   H1x3_4  = H1x3_4  +    -1.03450070870223 * Education2n_Cycle
2460374   +          +     0.12962104594991 * EducationBasic  +    -2.08320982697158 *
2460375   +        EducationGraduation  +     1.01633562820676 * EducationMaster
2460376   +          +     0.38226706522151 * Marital_StatusDivorced
2460377   +          +     0.96666958079914 * Marital_StatusMarried
2460378   +          +    -0.07771259761555 * Marital_StatusSingle
2460379   +          +    -0.15667080607342 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 + -1.03450070870223 * Education2n_Cycle +
0.12962104594991 * EducationBasic + -2.08320982697158 * EducationGraduation + 1.01633562820676
* EducationMaster + 0.38226706522151 * Marital_StatusDivorced + 0.96666958079914 *
Marital_StatusMarried + -0.07771259761555 * Marital_StatusSingle + -0.15667080607342 *
Marital_StatusTogether ;
2460380   +   H1x3_5  = H1x3_5  +     0.42350784953316 * Education2n_Cycle
2460381   +          +    -0.47409869250049 * EducationBasic  +     0.22752853959532 *
2460382   +        EducationGraduation  +     0.05813076059598 * EducationMaster
2460383   +          +    -0.38325393606947 * Marital_StatusDivorced
2460384   +          +    -1.43303056163299 * Marital_StatusMarried
2460385   +          +     0.11571941757387 * Marital_StatusSingle
2460386   +          +     0.42633042000729 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 + 0.42350784953316 * Education2n_Cycle +
-0.47409869250049 * EducationBasic + 0.22752853959532 * EducationGraduation + 0.05813076059598
* EducationMaster + -0.38325393606947 * Marital_StatusDivorced + -1.43303056163299 *
Marital_StatusMarried + 0.11571941757387 * Marital_StatusSingle + 0.42633042000729 *
Marital_StatusTogether ;
2460387   +   H1x3_6  = H1x3_6  +     1.11214831415741 * Education2n_Cycle
2460388   +          +      0.8877309144454 * EducationBasic  +     0.87390674413956 *
2460389   +        EducationGraduation  +     0.90837023676142 * EducationMaster
2460390   +          +    -0.36491799765765 * Marital_StatusDivorced
2460391   +          +     0.14142786767503 * Marital_StatusMarried
2460392   +          +     0.22643970468805 * Marital_StatusSingle
2460393   +          +     0.74162870756295 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_6 = H1x3_6 + 1.11214831415741 * Education2n_Cycle + 0.8877309144454
* EducationBasic + 0.87390674413956 * EducationGraduation + 0.90837023676142 * EducationMaster
+ -0.36491799765765 * Marital_StatusDivorced + 0.14142786767503 * Marital_StatusMarried +
0.22643970468805 * Marital_StatusSingle + 0.74162870756295 * Marital_StatusTogether ;
2460394   +   H1x3_1  =        0.17121674502 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.17121674502 + H1x3_1 ;
2460395   +   H1x3_2  =    -0.07858073871761 + H1x3_2 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = -0.07858073871761 + H1x3_2 ;
2460396   +   H1x3_3  =     -0.1687483376367 + H1x3_3 ;
MPRINT(EM_DIAGRAM):   H1x3_3 = -0.1687483376367 + H1x3_3 ;
2460397   +   H1x3_4  =     0.92501573900148 + H1x3_4 ;
MPRINT(EM_DIAGRAM):   H1x3_4 = 0.92501573900148 + H1x3_4 ;
2460398   +   H1x3_5  =    -0.04765930254307 + H1x3_5 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = -0.04765930254307 + H1x3_5 ;
2460399   +   H1x3_6  =     0.29532221854366 + H1x3_6 ;
MPRINT(EM_DIAGRAM):   H1x3_6 = 0.29532221854366 + H1x3_6 ;
2460400   +   H1x3_7  = 0;
MPRINT(EM_DIAGRAM):   H1x3_7 = 0;
2460401   +   _MAX_ = MAX (H1x3_1 , H1x3_2 , H1x3_3 , H1x3_4 , H1x3_5 , H1x3_6 , H1x3_7
2460402   +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x3_1 , H1x3_2 , H1x3_3 , H1x3_4 , H1x3_5 , H1x3_6 ,
H1x3_7 );
2460403   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2460404   +   H1x3_1  = EXP(H1x3_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_1 = EXP(H1x3_1 - _MAX_);
2460405   +   _SUM_ = _SUM_ + H1x3_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_1 ;
2460406   +   H1x3_2  = EXP(H1x3_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_2 = EXP(H1x3_2 - _MAX_);
2460407   +   _SUM_ = _SUM_ + H1x3_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_2 ;
2460408   +   H1x3_3  = EXP(H1x3_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_3 = EXP(H1x3_3 - _MAX_);
2460409   +   _SUM_ = _SUM_ + H1x3_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_3 ;
2460410   +   H1x3_4  = EXP(H1x3_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_4 = EXP(H1x3_4 - _MAX_);
2460411   +   _SUM_ = _SUM_ + H1x3_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_4 ;
2460412   +   H1x3_5  = EXP(H1x3_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_5 = EXP(H1x3_5 - _MAX_);
2460413   +   _SUM_ = _SUM_ + H1x3_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_5 ;
2460414   +   H1x3_6  = EXP(H1x3_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_6 = EXP(H1x3_6 - _MAX_);
2460415   +   _SUM_ = _SUM_ + H1x3_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_6 ;
2460416   +   H1x3_7  = EXP(H1x3_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_7 = EXP(H1x3_7 - _MAX_);
2460417   +   _SUM_ = _SUM_ + H1x3_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_7 ;
2460418   +   H1x3_1  = H1x3_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 / _SUM_;
2460419   +   H1x3_2  = H1x3_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 / _SUM_;
2460420   +   H1x3_3  = H1x3_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 / _SUM_;
2460421   +   H1x3_4  = H1x3_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 / _SUM_;
2460422   +   H1x3_5  = H1x3_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 / _SUM_;
2460423   +   H1x3_6  = H1x3_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_6 = H1x3_6 / _SUM_;
2460424   +   H1x3_7  = H1x3_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_7 = H1x3_7 / _SUM_;
2460425   +END;
MPRINT(EM_DIAGRAM):   END;
2460426   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2460427   +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
2460428   +   H1x3_2  = .;
MPRINT(EM_DIAGRAM):   H1x3_2 = .;
2460429   +   H1x3_3  = .;
MPRINT(EM_DIAGRAM):   H1x3_3 = .;
2460430   +   H1x3_4  = .;
MPRINT(EM_DIAGRAM):   H1x3_4 = .;
2460431   +   H1x3_5  = .;
MPRINT(EM_DIAGRAM):   H1x3_5 = .;
2460432   +   H1x3_6  = .;
MPRINT(EM_DIAGRAM):   H1x3_6 = .;
2460433   +   H1x3_7  = .;
MPRINT(EM_DIAGRAM):   H1x3_7 = .;
2460434   +END;
MPRINT(EM_DIAGRAM):   END;
2460435   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2460436   +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
2460437   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2460438   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2460439   +   H2x1_1  =    -0.59397690687549 * H1x1_1  +     0.10790242485513 * H1x1_2
2460440   +          +     1.34957997338147 * H1x1_3  +     0.98783879769831 * H1x1_4
2460441   +          +    -1.73131698691915 * H1x1_5  +    -0.04920424431591 * H1x1_6
2460442   +          +    -0.75229173661277 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -0.59397690687549 * H1x1_1 + 0.10790242485513 * H1x1_2 +
1.34957997338147 * H1x1_3 + 0.98783879769831 * H1x1_4 + -1.73131698691915 * H1x1_5 +
-0.04920424431591 * H1x1_6 + -0.75229173661277 * H1x1_7 ;
2460443   +   H2x1_2  =    -0.98729009516736 * H1x1_1  +     0.08491210993613 * H1x1_2
2460444   +          +     0.08027654554575 * H1x1_3  +     0.06189432860142 * H1x1_4
2460445   +          +    -1.23526842489276 * H1x1_5  +    -0.17600169070197 * H1x1_6
2460446   +          +     0.70746372975481 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -0.98729009516736 * H1x1_1 + 0.08491210993613 * H1x1_2 +
0.08027654554575 * H1x1_3 + 0.06189432860142 * H1x1_4 + -1.23526842489276 * H1x1_5 +
-0.17600169070197 * H1x1_6 + 0.70746372975481 * H1x1_7 ;
2460447   +   H2x1_3  =    -0.91861478701429 * H1x1_1  +     0.18513565366261 * H1x1_2
2460448   +          +    -0.18629587955963 * H1x1_3  +     0.76802660507034 * H1x1_4
2460449   +          +    -0.47979525657638 * H1x1_5  +     0.06968142422923 * H1x1_6
2460450   +          +     2.18264864713501 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -0.91861478701429 * H1x1_1 + 0.18513565366261 * H1x1_2 +
-0.18629587955963 * H1x1_3 + 0.76802660507034 * H1x1_4 + -0.47979525657638 * H1x1_5 +
0.06968142422923 * H1x1_6 + 2.18264864713501 * H1x1_7 ;
2460451   +   H2x1_4  =     1.02774363171853 * H1x1_1  +     1.08006636098136 * H1x1_2
2460452   +          +    -2.27078540572539 * H1x1_3  +    -0.54968089382258 * H1x1_4
2460453   +          +     2.11477012099075 * H1x1_5  +     1.91368944483056 * H1x1_6
2460454   +          +     0.22313799249268 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.02774363171853 * H1x1_1 + 1.08006636098136 * H1x1_2 +
-2.27078540572539 * H1x1_3 + -0.54968089382258 * H1x1_4 + 2.11477012099075 * H1x1_5 +
1.91368944483056 * H1x1_6 + 0.22313799249268 * H1x1_7 ;
2460455   +   H2x1_5  =    -1.06933000183778 * H1x1_1  +     0.73081558484415 * H1x1_2
2460456   +          +    -0.78012012951065 * H1x1_3  +     0.81916081920412 * H1x1_4
2460457   +          +    -1.46358608086032 * H1x1_5  +     1.83492870022704 * H1x1_6
2460458   +          +     0.75554005406859 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -1.06933000183778 * H1x1_1 + 0.73081558484415 * H1x1_2 +
-0.78012012951065 * H1x1_3 + 0.81916081920412 * H1x1_4 + -1.46358608086032 * H1x1_5 +
1.83492870022704 * H1x1_6 + 0.75554005406859 * H1x1_7 ;
2460459   +   H2x1_6  =    -2.28576277725334 * H1x1_1  +    -0.32249555333061 * H1x1_2
2460460   +          +     3.41388795688866 * H1x1_3  +     3.30305437699117 * H1x1_4
2460461   +          +    -1.49237136034665 * H1x1_5  +    -1.64329313023006 * H1x1_6
2460462   +          +     3.08746595768905 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = -2.28576277725334 * H1x1_1 + -0.32249555333061 * H1x1_2 +
3.41388795688866 * H1x1_3 + 3.30305437699117 * H1x1_4 + -1.49237136034665 * H1x1_5 +
-1.64329313023006 * H1x1_6 + 3.08746595768905 * H1x1_7 ;
2460463   +   H2x1_1  = H2x1_1  +    -2.56424783943845 * H1x2_1
2460464   +          +    -1.00213973107436 * H1x2_2  +    -0.47445930434013 * H1x2_3
2460465   +          +    -1.62372689856618 * H1x2_4  +     -1.1856250348479 * H1x2_5
2460466   +          +     0.04266758405533 * H1x2_6  +    -0.60071538153471 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -2.56424783943845 * H1x2_1 + -1.00213973107436 *
H1x2_2 + -0.47445930434013 * H1x2_3 + -1.62372689856618 * H1x2_4 + -1.1856250348479 * H1x2_5 +
0.04266758405533 * H1x2_6 + -0.60071538153471 * H1x2_7 ;
2460467   +   H2x1_2  = H2x1_2  +     0.00935939453146 * H1x2_1
2460468   +          +     0.55542862749222 * H1x2_2  +     -0.6066128025675 * H1x2_3
2460469   +          +    -0.53196514301497 * H1x2_4  +    -1.40549473181231 * H1x2_5
2460470   +          +    -0.08595621526876 * H1x2_6  +    -1.03953618328756 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 0.00935939453146 * H1x2_1 + 0.55542862749222 * H1x2_2
+ -0.6066128025675 * H1x2_3 + -0.53196514301497 * H1x2_4 + -1.40549473181231 * H1x2_5 +
-0.08595621526876 * H1x2_6 + -1.03953618328756 * H1x2_7 ;
2460471   +   H2x1_3  = H2x1_3  +    -1.41069312035355 * H1x2_1
2460472   +          +     0.56124490780446 * H1x2_2  +    -0.00472279335297 * H1x2_3
2460473   +          +    -1.10441771442377 * H1x2_4  +    -0.27090019786185 * H1x2_5
2460474   +          +    -0.15206855618217 * H1x2_6  +     -1.6035395520507 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -1.41069312035355 * H1x2_1 + 0.56124490780446 * H1x2_2
+ -0.00472279335297 * H1x2_3 + -1.10441771442377 * H1x2_4 + -0.27090019786185 * H1x2_5 +
-0.15206855618217 * H1x2_6 + -1.6035395520507 * H1x2_7 ;
2460475   +   H2x1_4  = H2x1_4  +    -0.55045399339183 * H1x2_1
2460476   +          +     0.02477552373088 * H1x2_2  +     0.19400769235958 * H1x2_3
2460477   +          +    -0.38264537483702 * H1x2_4  +     0.63479720884458 * H1x2_5
2460478   +          +    -0.60194629301645 * H1x2_6  +    -0.83490097285651 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + -0.55045399339183 * H1x2_1 + 0.02477552373088 * H1x2_2
+ 0.19400769235958 * H1x2_3 + -0.38264537483702 * H1x2_4 + 0.63479720884458 * H1x2_5 +
-0.60194629301645 * H1x2_6 + -0.83490097285651 * H1x2_7 ;
2460479   +   H2x1_5  = H2x1_5  +    -1.03176133074695 * H1x2_1
2460480   +          +    -0.59926889064506 * H1x2_2  +    -1.07077012847053 * H1x2_3
2460481   +          +    -1.18998920291096 * H1x2_4  +     0.39150574258439 * H1x2_5
2460482   +          +     0.05580574741832 * H1x2_6  +    -0.32272109045259 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + -1.03176133074695 * H1x2_1 + -0.59926889064506 *
H1x2_2 + -1.07077012847053 * H1x2_3 + -1.18998920291096 * H1x2_4 + 0.39150574258439 * H1x2_5 +
0.05580574741832 * H1x2_6 + -0.32272109045259 * H1x2_7 ;
2460483   +   H2x1_6  = H2x1_6  +    -0.61952040538587 * H1x2_1
2460484   +          +     0.35510185028829 * H1x2_2  +    -0.23901935720129 * H1x2_3
2460485   +          +     0.31752417497209 * H1x2_4  +    -1.20101515562967 * H1x2_5
2460486   +          +     0.95004398218762 * H1x2_6  +    -0.60363955740244 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + -0.61952040538587 * H1x2_1 + 0.35510185028829 * H1x2_2
+ -0.23901935720129 * H1x2_3 + 0.31752417497209 * H1x2_4 + -1.20101515562967 * H1x2_5 +
0.95004398218762 * H1x2_6 + -0.60363955740244 * H1x2_7 ;
2460487   +   H2x1_1  = H2x1_1  +     0.74378922258523 * H1x3_1
2460488   +          +      0.4693103426831 * H1x3_2  +     0.82071786194731 * H1x3_3
2460489   +          +     0.46432194238141 * H1x3_4  +    -1.39760250161206 * H1x3_5
2460490   +          +     0.68725250578779 * H1x3_6  +    -0.98986331205144 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 0.74378922258523 * H1x3_1 + 0.4693103426831 * H1x3_2 +
0.82071786194731 * H1x3_3 + 0.46432194238141 * H1x3_4 + -1.39760250161206 * H1x3_5 +
0.68725250578779 * H1x3_6 + -0.98986331205144 * H1x3_7 ;
2460491   +   H2x1_2  = H2x1_2  +     0.48406734142754 * H1x3_1
2460492   +          +     1.24032575331626 * H1x3_2  +     0.10072816620895 * H1x3_3
2460493   +          +     -2.4915795108808 * H1x3_4  +    -1.20085587739472 * H1x3_5
2460494   +          +     2.57480977795816 * H1x3_6  +    -0.36127801521801 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 0.48406734142754 * H1x3_1 + 1.24032575331626 * H1x3_2
+ 0.10072816620895 * H1x3_3 + -2.4915795108808 * H1x3_4 + -1.20085587739472 * H1x3_5 +
2.57480977795816 * H1x3_6 + -0.36127801521801 * H1x3_7 ;
2460495   +   H2x1_3  = H2x1_3  +    -0.29392518978638 * H1x3_1
2460496   +          +     0.02884163093827 * H1x3_2  +     -0.7595494999576 * H1x3_3
2460497   +          +     0.32536537321799 * H1x3_4  +    -0.01283695014976 * H1x3_5
2460498   +          +     0.76895275927405 * H1x3_6  +     -0.2802859993784 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -0.29392518978638 * H1x3_1 + 0.02884163093827 * H1x3_2
+ -0.7595494999576 * H1x3_3 + 0.32536537321799 * H1x3_4 + -0.01283695014976 * H1x3_5 +
0.76895275927405 * H1x3_6 + -0.2802859993784 * H1x3_7 ;
2460499   +   H2x1_4  = H2x1_4  +     2.19833784150068 * H1x3_1
2460500   +          +     0.25528651098746 * H1x3_2  +    -0.72296156297186 * H1x3_3
2460501   +          +    -0.14360138590872 * H1x3_4  +     0.77657569331577 * H1x3_5
2460502   +          +    -1.57969278343415 * H1x3_6  +    -0.92288304588247 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 2.19833784150068 * H1x3_1 + 0.25528651098746 * H1x3_2
+ -0.72296156297186 * H1x3_3 + -0.14360138590872 * H1x3_4 + 0.77657569331577 * H1x3_5 +
-1.57969278343415 * H1x3_6 + -0.92288304588247 * H1x3_7 ;
2460503   +   H2x1_5  = H2x1_5  +     2.11753865409831 * H1x3_1
2460504   +          +     0.83654766112935 * H1x3_2  +     0.97472534941535 * H1x3_3
2460505   +          +     1.35030042962655 * H1x3_4  +     1.24680664824079 * H1x3_5
2460506   +          +     0.19234112612264 * H1x3_6  +    -0.90680244689294 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + 2.11753865409831 * H1x3_1 + 0.83654766112935 * H1x3_2
+ 0.97472534941535 * H1x3_3 + 1.35030042962655 * H1x3_4 + 1.24680664824079 * H1x3_5 +
0.19234112612264 * H1x3_6 + -0.90680244689294 * H1x3_7 ;
2460507   +   H2x1_6  = H2x1_6  +     2.07923724911848 * H1x3_1
2460508   +          +     1.62526758922217 * H1x3_2  +    -0.68837627923045 * H1x3_3
2460509   +          +    -0.21127837456631 * H1x3_4  +    -1.47138526111866 * H1x3_5
2460510   +          +    -0.52275521204408 * H1x3_6  +    -0.36639952580044 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + 2.07923724911848 * H1x3_1 + 1.62526758922217 * H1x3_2
+ -0.68837627923045 * H1x3_3 + -0.21127837456631 * H1x3_4 + -1.47138526111866 * H1x3_5 +
-0.52275521204408 * H1x3_6 + -0.36639952580044 * H1x3_7 ;
2460511   +   H2x1_1  =    -1.05059672372056 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -1.05059672372056 + H2x1_1 ;
2460512   +   H2x1_2  =    -1.18404209429335 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -1.18404209429335 + H2x1_2 ;
2460513   +   H2x1_3  =    -0.76285494175137 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -0.76285494175137 + H2x1_3 ;
2460514   +   H2x1_4  =     2.22362261707253 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 2.22362261707253 + H2x1_4 ;
2460515   +   H2x1_5  =    -0.98793149966854 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -0.98793149966854 + H2x1_5 ;
2460516   +   H2x1_6  =     1.51370254076672 + H2x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.51370254076672 + H2x1_6 ;
2460517   +   H2x1_7  = 0;
MPRINT(EM_DIAGRAM):   H2x1_7 = 0;
2460518   +   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 , H2x1_6 , H2x1_7
2460519   +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 , H2x1_6 ,
H2x1_7 );
2460520   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2460521   +   H2x1_1  = EXP(H2x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_1 = EXP(H2x1_1 - _MAX_);
2460522   +   _SUM_ = _SUM_ + H2x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_1 ;
2460523   +   H2x1_2  = EXP(H2x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_2 = EXP(H2x1_2 - _MAX_);
2460524   +   _SUM_ = _SUM_ + H2x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_2 ;
2460525   +   H2x1_3  = EXP(H2x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_3 = EXP(H2x1_3 - _MAX_);
2460526   +   _SUM_ = _SUM_ + H2x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_3 ;
2460527   +   H2x1_4  = EXP(H2x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_4 = EXP(H2x1_4 - _MAX_);
2460528   +   _SUM_ = _SUM_ + H2x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_4 ;
2460529   +   H2x1_5  = EXP(H2x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_5 = EXP(H2x1_5 - _MAX_);
2460530   +   _SUM_ = _SUM_ + H2x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_5 ;
2460531   +   H2x1_6  = EXP(H2x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_6 = EXP(H2x1_6 - _MAX_);
2460532   +   _SUM_ = _SUM_ + H2x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_6 ;
2460533   +   H2x1_7  = EXP(H2x1_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_7 = EXP(H2x1_7 - _MAX_);
2460534   +   _SUM_ = _SUM_ + H2x1_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_7 ;
2460535   +   H2x1_1  = H2x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 / _SUM_;
2460536   +   H2x1_2  = H2x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 / _SUM_;
2460537   +   H2x1_3  = H2x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 / _SUM_;
2460538   +   H2x1_4  = H2x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 / _SUM_;
2460539   +   H2x1_5  = H2x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 / _SUM_;
2460540   +   H2x1_6  = H2x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 / _SUM_;
2460541   +   H2x1_7  = H2x1_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_7 = H2x1_7 / _SUM_;
2460542   +END;
MPRINT(EM_DIAGRAM):   END;
2460543   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2460544   +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
2460545   +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
2460546   +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
2460547   +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
2460548   +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
2460549   +   H2x1_6  = .;
MPRINT(EM_DIAGRAM):   H2x1_6 = .;
2460550   +   H2x1_7  = .;
MPRINT(EM_DIAGRAM):   H2x1_7 = .;
2460551   +END;
MPRINT(EM_DIAGRAM):   END;
2460552   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2460553   +*** Writing the Node H2x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x2_ ;
2460554   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2460555   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2460556   +   H2x2_1  =    -0.47079896252387 * H1x1_1  +      0.6132734714958 * H1x1_2
2460557   +          +     1.50300753820512 * H1x1_3  +     -0.1812621169129 * H1x1_4
2460558   +          +    -0.18531614991208 * H1x1_5  +     -0.2905105845089 * H1x1_6
2460559   +          +     1.33158539183491 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = -0.47079896252387 * H1x1_1 + 0.6132734714958 * H1x1_2 +
1.50300753820512 * H1x1_3 + -0.1812621169129 * H1x1_4 + -0.18531614991208 * H1x1_5 +
-0.2905105845089 * H1x1_6 + 1.33158539183491 * H1x1_7 ;
2460560   +   H2x2_2  =    -1.90834701790953 * H1x1_1  +      0.6177658514697 * H1x1_2
2460561   +          +     0.36465199316418 * H1x1_3  +     0.85911870587838 * H1x1_4
2460562   +          +     0.02147610114602 * H1x1_5  +     0.32326590534391 * H1x1_6
2460563   +          +    -1.04241581652278 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = -1.90834701790953 * H1x1_1 + 0.6177658514697 * H1x1_2 +
0.36465199316418 * H1x1_3 + 0.85911870587838 * H1x1_4 + 0.02147610114602 * H1x1_5 +
0.32326590534391 * H1x1_6 + -1.04241581652278 * H1x1_7 ;
2460564   +   H2x2_3  =       0.471130277999 * H1x1_1  +     0.96694465336161 * H1x1_2
2460565   +          +       0.141582035067 * H1x1_3  +     0.53325844993783 * H1x1_4
2460566   +          +     -0.0659115060565 * H1x1_5  +     0.38141753021852 * H1x1_6
2460567   +          +    -1.14139437080586 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = 0.471130277999 * H1x1_1 + 0.96694465336161 * H1x1_2 +
0.141582035067 * H1x1_3 + 0.53325844993783 * H1x1_4 + -0.0659115060565 * H1x1_5 +
0.38141753021852 * H1x1_6 + -1.14139437080586 * H1x1_7 ;
2460568   +   H2x2_4  =     0.97070926632973 * H1x1_1  +    -0.13619191199121 * H1x1_2
2460569   +          +       0.111155554391 * H1x1_3  +    -0.50119055939436 * H1x1_4
2460570   +          +     -0.4478264228864 * H1x1_5  +    -0.07373167561096 * H1x1_6
2460571   +          +    -0.48838853015257 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = 0.97070926632973 * H1x1_1 + -0.13619191199121 * H1x1_2 +
0.111155554391 * H1x1_3 + -0.50119055939436 * H1x1_4 + -0.4478264228864 * H1x1_5 +
-0.07373167561096 * H1x1_6 + -0.48838853015257 * H1x1_7 ;
2460572   +   H2x2_5  =    -0.97151785477215 * H1x1_1  +     0.21189203541458 * H1x1_2
2460573   +          +    -0.19596886882434 * H1x1_3  +      1.3474130560719 * H1x1_4
2460574   +          +     1.73119417991798 * H1x1_5  +    -0.03726270753922 * H1x1_6
2460575   +          +    -1.41850405567364 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = -0.97151785477215 * H1x1_1 + 0.21189203541458 * H1x1_2 +
-0.19596886882434 * H1x1_3 + 1.3474130560719 * H1x1_4 + 1.73119417991798 * H1x1_5 +
-0.03726270753922 * H1x1_6 + -1.41850405567364 * H1x1_7 ;
2460576   +   H2x2_6  =     0.64188298957992 * H1x1_1  +     0.87835723870887 * H1x1_2
2460577   +          +     0.65705195530326 * H1x1_3  +    -1.37039626769544 * H1x1_4
2460578   +          +    -0.32238737127781 * H1x1_5  +     0.33986547881641 * H1x1_6
2460579   +          +    -0.39788950643812 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = 0.64188298957992 * H1x1_1 + 0.87835723870887 * H1x1_2 +
0.65705195530326 * H1x1_3 + -1.37039626769544 * H1x1_4 + -0.32238737127781 * H1x1_5 +
0.33986547881641 * H1x1_6 + -0.39788950643812 * H1x1_7 ;
2460580   +   H2x2_1  = H2x2_1  +    -0.69934298550944 * H1x2_1
2460581   +          +    -0.34972890643898 * H1x2_2  +     0.13067071374168 * H1x2_3
2460582   +          +    -0.35163870866778 * H1x2_4  +     0.68739106758866 * H1x2_5
2460583   +          +    -0.13482628170329 * H1x2_6  +    -0.03659282127619 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + -0.69934298550944 * H1x2_1 + -0.34972890643898 *
H1x2_2 + 0.13067071374168 * H1x2_3 + -0.35163870866778 * H1x2_4 + 0.68739106758866 * H1x2_5 +
-0.13482628170329 * H1x2_6 + -0.03659282127619 * H1x2_7 ;
2460584   +   H2x2_2  = H2x2_2  +    -0.16537065948373 * H1x2_1
2460585   +          +     1.88602375412723 * H1x2_2  +     0.00246313998608 * H1x2_3
2460586   +          +    -0.38678545162214 * H1x2_4  +     1.62314892910576 * H1x2_5
2460587   +          +     1.14369813266427 * H1x2_6  +    -0.04547589616076 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + -0.16537065948373 * H1x2_1 + 1.88602375412723 * H1x2_2
+ 0.00246313998608 * H1x2_3 + -0.38678545162214 * H1x2_4 + 1.62314892910576 * H1x2_5 +
1.14369813266427 * H1x2_6 + -0.04547589616076 * H1x2_7 ;
2460588   +   H2x2_3  = H2x2_3  +     0.25040248389011 * H1x2_1
2460589   +          +    -1.56534319969402 * H1x2_2  +     0.07686150326519 * H1x2_3
2460590   +          +     -0.9279505919723 * H1x2_4  +    -0.40426942169792 * H1x2_5
2460591   +          +      0.0625082015929 * H1x2_6  +    -1.06140294711643 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 + 0.25040248389011 * H1x2_1 + -1.56534319969402 * H1x2_2
+ 0.07686150326519 * H1x2_3 + -0.9279505919723 * H1x2_4 + -0.40426942169792 * H1x2_5 +
0.0625082015929 * H1x2_6 + -1.06140294711643 * H1x2_7 ;
2460592   +   H2x2_4  = H2x2_4  +     -0.4384763018657 * H1x2_1
2460593   +          +    -1.45966734038116 * H1x2_2  +      -2.034771072409 * H1x2_3
2460594   +          +    -0.09055740067076 * H1x2_4  +     1.51504299287048 * H1x2_5
2460595   +          +     0.15439799867788 * H1x2_6  +    -1.11828371545771 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 + -0.4384763018657 * H1x2_1 + -1.45966734038116 * H1x2_2
+ -2.034771072409 * H1x2_3 + -0.09055740067076 * H1x2_4 + 1.51504299287048 * H1x2_5 +
0.15439799867788 * H1x2_6 + -1.11828371545771 * H1x2_7 ;
2460596   +   H2x2_5  = H2x2_5  +     1.25750321874643 * H1x2_1
2460597   +          +    -0.65639925770112 * H1x2_2  +     -1.7659580690496 * H1x2_3
2460598   +          +       0.375442412611 * H1x2_4  +     0.00802128415855 * H1x2_5
2460599   +          +     0.75342656671485 * H1x2_6  +     1.64939805941174 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 + 1.25750321874643 * H1x2_1 + -0.65639925770112 * H1x2_2
+ -1.7659580690496 * H1x2_3 + 0.375442412611 * H1x2_4 + 0.00802128415855 * H1x2_5 +
0.75342656671485 * H1x2_6 + 1.64939805941174 * H1x2_7 ;
2460600   +   H2x2_6  = H2x2_6  +     1.32293752617916 * H1x2_1
2460601   +          +     0.48969975153948 * H1x2_2  +    -0.72928783660254 * H1x2_3
2460602   +          +     0.84727905047749 * H1x2_4  +     0.04670520107938 * H1x2_5
2460603   +          +     2.02862934142232 * H1x2_6  +    -0.56510756043393 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = H2x2_6 + 1.32293752617916 * H1x2_1 + 0.48969975153948 * H1x2_2
+ -0.72928783660254 * H1x2_3 + 0.84727905047749 * H1x2_4 + 0.04670520107938 * H1x2_5 +
2.02862934142232 * H1x2_6 + -0.56510756043393 * H1x2_7 ;
2460604   +   H2x2_1  = H2x2_1  +       1.744725276854 * H1x3_1
2460605   +          +     0.13060858789431 * H1x3_2  +    -0.96737787454303 * H1x3_3
2460606   +          +    -0.33966254732699 * H1x3_4  +     2.39360262119688 * H1x3_5
2460607   +          +     2.58016170780679 * H1x3_6  +    -0.61611732156494 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + 1.744725276854 * H1x3_1 + 0.13060858789431 * H1x3_2 +
-0.96737787454303 * H1x3_3 + -0.33966254732699 * H1x3_4 + 2.39360262119688 * H1x3_5 +
2.58016170780679 * H1x3_6 + -0.61611732156494 * H1x3_7 ;
2460608   +   H2x2_2  = H2x2_2  +    -0.81180308935434 * H1x3_1
2460609   +          +    -1.15566778124471 * H1x3_2  +     0.08550916456261 * H1x3_3
2460610   +          +     0.54919117407314 * H1x3_4  +     0.18927188150893 * H1x3_5
2460611   +          +    -0.15464567766004 * H1x3_6  +     0.22152383228096 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + -0.81180308935434 * H1x3_1 + -1.15566778124471 *
H1x3_2 + 0.08550916456261 * H1x3_3 + 0.54919117407314 * H1x3_4 + 0.18927188150893 * H1x3_5 +
-0.15464567766004 * H1x3_6 + 0.22152383228096 * H1x3_7 ;
2460612   +   H2x2_3  = H2x2_3  +    -0.57155391194888 * H1x3_1
2460613   +          +    -0.80109748621438 * H1x3_2  +     -1.0755749661031 * H1x3_3
2460614   +          +     1.03082070302539 * H1x3_4  +    -2.00320570042417 * H1x3_5
2460615   +          +    -1.96298435256616 * H1x3_6  +     1.02097262601001 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 + -0.57155391194888 * H1x3_1 + -0.80109748621438 *
H1x3_2 + -1.0755749661031 * H1x3_3 + 1.03082070302539 * H1x3_4 + -2.00320570042417 * H1x3_5 +
-1.96298435256616 * H1x3_6 + 1.02097262601001 * H1x3_7 ;
2460616   +   H2x2_4  = H2x2_4  +     0.24801772968599 * H1x3_1
2460617   +          +    -2.13175914157416 * H1x3_2  +    -0.52172370749235 * H1x3_3
2460618   +          +     2.04158456409986 * H1x3_4  +     1.02332318578438 * H1x3_5
2460619   +          +      -0.428263055638 * H1x3_6  +    -0.10602300040145 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 + 0.24801772968599 * H1x3_1 + -2.13175914157416 * H1x3_2
+ -0.52172370749235 * H1x3_3 + 2.04158456409986 * H1x3_4 + 1.02332318578438 * H1x3_5 +
-0.428263055638 * H1x3_6 + -0.10602300040145 * H1x3_7 ;
2460620   +   H2x2_5  = H2x2_5  +    -1.00177979562809 * H1x3_1
2460621   +          +    -0.45285333413007 * H1x3_2  +    -0.35882884863392 * H1x3_3
2460622   +          +     0.23001711273663 * H1x3_4  +     0.77235765656369 * H1x3_5
2460623   +          +    -0.04383242140243 * H1x3_6  +    -0.25926963615252 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 + -1.00177979562809 * H1x3_1 + -0.45285333413007 *
H1x3_2 + -0.35882884863392 * H1x3_3 + 0.23001711273663 * H1x3_4 + 0.77235765656369 * H1x3_5 +
-0.04383242140243 * H1x3_6 + -0.25926963615252 * H1x3_7 ;
2460624   +   H2x2_6  = H2x2_6  +     0.84797826043534 * H1x3_1
2460625   +          +    -0.46927154831713 * H1x3_2  +    -1.09865845985096 * H1x3_3
2460626   +          +     0.59699123454307 * H1x3_4  +     1.59564014754161 * H1x3_5
2460627   +          +     1.33413776227036 * H1x3_6  +     0.33047800872361 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = H2x2_6 + 0.84797826043534 * H1x3_1 + -0.46927154831713 * H1x3_2
+ -1.09865845985096 * H1x3_3 + 0.59699123454307 * H1x3_4 + 1.59564014754161 * H1x3_5 +
1.33413776227036 * H1x3_6 + 0.33047800872361 * H1x3_7 ;
2460628   +   H2x2_1  =    -3.05344936388855 + H2x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = -3.05344936388855 + H2x2_1 ;
2460629   +   H2x2_2  =     0.31382645894355 + H2x2_2 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = 0.31382645894355 + H2x2_2 ;
2460630   +   H2x2_3  =     0.31718668306888 + H2x2_3 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = 0.31718668306888 + H2x2_3 ;
2460631   +   H2x2_4  =    -0.72340666209054 + H2x2_4 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = -0.72340666209054 + H2x2_4 ;
2460632   +   H2x2_5  =    -0.59585228872544 + H2x2_5 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = -0.59585228872544 + H2x2_5 ;
2460633   +   H2x2_6  =    -1.34027540207713 + H2x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = -1.34027540207713 + H2x2_6 ;
2460634   +   H2x2_7  = 0;
MPRINT(EM_DIAGRAM):   H2x2_7 = 0;
2460635   +   _MAX_ = MAX (H2x2_1 , H2x2_2 , H2x2_3 , H2x2_4 , H2x2_5 , H2x2_6 , H2x2_7
2460636   +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x2_1 , H2x2_2 , H2x2_3 , H2x2_4 , H2x2_5 , H2x2_6 ,
H2x2_7 );
2460637   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2460638   +   H2x2_1  = EXP(H2x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_1 = EXP(H2x2_1 - _MAX_);
2460639   +   _SUM_ = _SUM_ + H2x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_1 ;
2460640   +   H2x2_2  = EXP(H2x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_2 = EXP(H2x2_2 - _MAX_);
2460641   +   _SUM_ = _SUM_ + H2x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_2 ;
2460642   +   H2x2_3  = EXP(H2x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_3 = EXP(H2x2_3 - _MAX_);
2460643   +   _SUM_ = _SUM_ + H2x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_3 ;
2460644   +   H2x2_4  = EXP(H2x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_4 = EXP(H2x2_4 - _MAX_);
2460645   +   _SUM_ = _SUM_ + H2x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_4 ;
2460646   +   H2x2_5  = EXP(H2x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_5 = EXP(H2x2_5 - _MAX_);
2460647   +   _SUM_ = _SUM_ + H2x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_5 ;
2460648   +   H2x2_6  = EXP(H2x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_6 = EXP(H2x2_6 - _MAX_);
2460649   +   _SUM_ = _SUM_ + H2x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_6 ;
2460650   +   H2x2_7  = EXP(H2x2_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_7 = EXP(H2x2_7 - _MAX_);
2460651   +   _SUM_ = _SUM_ + H2x2_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_7 ;
2460652   +   H2x2_1  = H2x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 / _SUM_;
2460653   +   H2x2_2  = H2x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 / _SUM_;
2460654   +   H2x2_3  = H2x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 / _SUM_;
2460655   +   H2x2_4  = H2x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 / _SUM_;
2460656   +   H2x2_5  = H2x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 / _SUM_;
2460657   +   H2x2_6  = H2x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_6 = H2x2_6 / _SUM_;
2460658   +   H2x2_7  = H2x2_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_7 = H2x2_7 / _SUM_;
2460659   +END;
MPRINT(EM_DIAGRAM):   END;
2460660   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2460661   +   H2x2_1  = .;
MPRINT(EM_DIAGRAM):   H2x2_1 = .;
2460662   +   H2x2_2  = .;
MPRINT(EM_DIAGRAM):   H2x2_2 = .;
2460663   +   H2x2_3  = .;
MPRINT(EM_DIAGRAM):   H2x2_3 = .;
2460664   +   H2x2_4  = .;
MPRINT(EM_DIAGRAM):   H2x2_4 = .;
2460665   +   H2x2_5  = .;
MPRINT(EM_DIAGRAM):   H2x2_5 = .;
2460666   +   H2x2_6  = .;
MPRINT(EM_DIAGRAM):   H2x2_6 = .;
2460667   +   H2x2_7  = .;
MPRINT(EM_DIAGRAM):   H2x2_7 = .;
2460668   +END;
MPRINT(EM_DIAGRAM):   END;
2460669   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2460670   +*** Writing the Node H3x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H3x1_ ;
2460671   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2460672   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2460673   +   H3x1_1  =    -0.39436867680464 * H2x1_1  +    -0.20604911710368 * H2x1_2
2460674   +          +     0.29458107927185 * H2x1_3  +     0.66102662477481 * H2x1_4
2460675   +          +     0.62143406345506 * H2x1_5  +     2.63969484891539 * H2x1_6
2460676   +          +     2.03785323055294 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = -0.39436867680464 * H2x1_1 + -0.20604911710368 * H2x1_2 +
0.29458107927185 * H2x1_3 + 0.66102662477481 * H2x1_4 + 0.62143406345506 * H2x1_5 +
2.63969484891539 * H2x1_6 + 2.03785323055294 * H2x1_7 ;
2460677   +   H3x1_2  =     0.14668618790671 * H2x1_1  +     0.53251535375334 * H2x1_2
2460678   +          +     1.73802487245889 * H2x1_3  +    -0.48818058655944 * H2x1_4
2460679   +          +     -0.6987810213409 * H2x1_5  +     1.61216865707221 * H2x1_6
2460680   +          +     0.02086486846601 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = 0.14668618790671 * H2x1_1 + 0.53251535375334 * H2x1_2 +
1.73802487245889 * H2x1_3 + -0.48818058655944 * H2x1_4 + -0.6987810213409 * H2x1_5 +
1.61216865707221 * H2x1_6 + 0.02086486846601 * H2x1_7 ;
2460681   +   H3x1_3  =    -1.14054963328594 * H2x1_1  +    -0.75433574423253 * H2x1_2
2460682   +          +     0.06268113862558 * H2x1_3  +     -0.3981826777811 * H2x1_4
2460683   +          +    -0.04081627474016 * H2x1_5  +    -0.18547979458266 * H2x1_6
2460684   +          +     0.40248247309716 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = -1.14054963328594 * H2x1_1 + -0.75433574423253 * H2x1_2 +
0.06268113862558 * H2x1_3 + -0.3981826777811 * H2x1_4 + -0.04081627474016 * H2x1_5 +
-0.18547979458266 * H2x1_6 + 0.40248247309716 * H2x1_7 ;
2460685   +   H3x1_4  =    -0.41046431364634 * H2x1_1  +     0.53558649664528 * H2x1_2
2460686   +          +     0.25426413492282 * H2x1_3  +     2.32537388539524 * H2x1_4
2460687   +          +    -0.95624400041487 * H2x1_5  +     -2.1423043357326 * H2x1_6
2460688   +          +     0.70189203885946 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = -0.41046431364634 * H2x1_1 + 0.53558649664528 * H2x1_2 +
0.25426413492282 * H2x1_3 + 2.32537388539524 * H2x1_4 + -0.95624400041487 * H2x1_5 +
-2.1423043357326 * H2x1_6 + 0.70189203885946 * H2x1_7 ;
2460689   +   H3x1_5  =    -0.21139932639331 * H2x1_1  +      0.8853172209881 * H2x1_2
2460690   +          +    -0.23025284278478 * H2x1_3  +     1.30433450594503 * H2x1_4
2460691   +          +     1.26145590014333 * H2x1_5  +     0.63126627865104 * H2x1_6
2460692   +          +    -1.88455429451452 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = -0.21139932639331 * H2x1_1 + 0.8853172209881 * H2x1_2 +
-0.23025284278478 * H2x1_3 + 1.30433450594503 * H2x1_4 + 1.26145590014333 * H2x1_5 +
0.63126627865104 * H2x1_6 + -1.88455429451452 * H2x1_7 ;
2460693   +   H3x1_6  =     0.99645242104414 * H2x1_1  +    -0.17835964967148 * H2x1_2
2460694   +          +     0.06539648561603 * H2x1_3  +     0.97412284078325 * H2x1_4
2460695   +          +     -1.3247680635275 * H2x1_5  +      0.8723025918678 * H2x1_6
2460696   +          +    -0.04328836172134 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_6 = 0.99645242104414 * H2x1_1 + -0.17835964967148 * H2x1_2 +
0.06539648561603 * H2x1_3 + 0.97412284078325 * H2x1_4 + -1.3247680635275 * H2x1_5 +
0.8723025918678 * H2x1_6 + -0.04328836172134 * H2x1_7 ;
2460697   +   H3x1_7  =     2.66887548952929 * H2x1_1  +    -0.86289888310949 * H2x1_2
2460698   +          +     1.58137421487648 * H2x1_3  +    -1.37105839507635 * H2x1_4
2460699   +          +    -0.65069986041129 * H2x1_5  +     2.50322156288062 * H2x1_6
2460700   +          +     0.75157328436087 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_7 = 2.66887548952929 * H2x1_1 + -0.86289888310949 * H2x1_2 +
1.58137421487648 * H2x1_3 + -1.37105839507635 * H2x1_4 + -0.65069986041129 * H2x1_5 +
2.50322156288062 * H2x1_6 + 0.75157328436087 * H2x1_7 ;
2460701   +   H3x1_1  = H3x1_1  +     1.55317132694755 * H2x2_1
2460702   +          +     1.75656976582641 * H2x2_2  +    -1.25361089552085 * H2x2_3
2460703   +          +    -0.52984461837677 * H2x2_4  +     1.29915117873447 * H2x2_5
2460704   +          +    -1.03942372926622 * H2x2_6  +     0.13722887717178 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 + 1.55317132694755 * H2x2_1 + 1.75656976582641 * H2x2_2
+ -1.25361089552085 * H2x2_3 + -0.52984461837677 * H2x2_4 + 1.29915117873447 * H2x2_5 +
-1.03942372926622 * H2x2_6 + 0.13722887717178 * H2x2_7 ;
2460705   +   H3x1_2  = H3x1_2  +     0.88902418392614 * H2x2_1
2460706   +          +     1.35198205638356 * H2x2_2  +     1.49845421410078 * H2x2_3
2460707   +          +    -1.22318137674998 * H2x2_4  +     1.03485654068494 * H2x2_5
2460708   +          +    -0.88760495649169 * H2x2_6  +    -1.94135868960024 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = H3x1_2 + 0.88902418392614 * H2x2_1 + 1.35198205638356 * H2x2_2
+ 1.49845421410078 * H2x2_3 + -1.22318137674998 * H2x2_4 + 1.03485654068494 * H2x2_5 +
-0.88760495649169 * H2x2_6 + -1.94135868960024 * H2x2_7 ;
2460709   +   H3x1_3  = H3x1_3  +     -0.5232166311723 * H2x2_1
2460710   +          +    -0.49154441995792 * H2x2_2  +     1.21222773866672 * H2x2_3
2460711   +          +     0.88954765096374 * H2x2_4  +     0.32666743913318 * H2x2_5
2460712   +          +     1.26201705110892 * H2x2_6  +    -2.46564869578322 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = H3x1_3 + -0.5232166311723 * H2x2_1 + -0.49154441995792 * H2x2_2
+ 1.21222773866672 * H2x2_3 + 0.88954765096374 * H2x2_4 + 0.32666743913318 * H2x2_5 +
1.26201705110892 * H2x2_6 + -2.46564869578322 * H2x2_7 ;
2460713   +   H3x1_4  = H3x1_4  +     0.93897688204524 * H2x2_1
2460714   +          +    -0.56396325682963 * H2x2_2  +     0.60312223662348 * H2x2_3
2460715   +          +     0.05506195666559 * H2x2_4  +    -1.19478701476792 * H2x2_5
2460716   +          +     1.11111060864544 * H2x2_6  +     0.07602420470068 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = H3x1_4 + 0.93897688204524 * H2x2_1 + -0.56396325682963 * H2x2_2
+ 0.60312223662348 * H2x2_3 + 0.05506195666559 * H2x2_4 + -1.19478701476792 * H2x2_5 +
1.11111060864544 * H2x2_6 + 0.07602420470068 * H2x2_7 ;
2460717   +   H3x1_5  = H3x1_5  +    -2.04067007195299 * H2x2_1
2460718   +          +    -0.24511447740547 * H2x2_2  +      1.1403782608351 * H2x2_3
2460719   +          +     0.28313253531571 * H2x2_4  +    -0.31001305293935 * H2x2_5
2460720   +          +     1.43972694265244 * H2x2_6  +     0.27081966717726 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = H3x1_5 + -2.04067007195299 * H2x2_1 + -0.24511447740547 *
H2x2_2 + 1.1403782608351 * H2x2_3 + 0.28313253531571 * H2x2_4 + -0.31001305293935 * H2x2_5 +
1.43972694265244 * H2x2_6 + 0.27081966717726 * H2x2_7 ;
2460721   +   H3x1_6  = H3x1_6  +     1.53918759970091 * H2x2_1
2460722   +          +    -1.36834652818881 * H2x2_2  +    -0.97354088259421 * H2x2_3
2460723   +          +     0.73052173697294 * H2x2_4  +     1.34716412811946 * H2x2_5
2460724   +          +     1.66261041249676 * H2x2_6  +    -0.99719318696356 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_6 = H3x1_6 + 1.53918759970091 * H2x2_1 + -1.36834652818881 * H2x2_2
+ -0.97354088259421 * H2x2_3 + 0.73052173697294 * H2x2_4 + 1.34716412811946 * H2x2_5 +
1.66261041249676 * H2x2_6 + -0.99719318696356 * H2x2_7 ;
2460725   +   H3x1_7  = H3x1_7  +     1.11994694673604 * H2x2_1
2460726   +          +     -1.6803356528873 * H2x2_2  +    -0.12962793678977 * H2x2_3
2460727   +          +    -0.71896094589725 * H2x2_4  +     0.46037684620833 * H2x2_5
2460728   +          +     0.25911483872618 * H2x2_6  +     1.00876479730932 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_7 = H3x1_7 + 1.11994694673604 * H2x2_1 + -1.6803356528873 * H2x2_2
+ -0.12962793678977 * H2x2_3 + -0.71896094589725 * H2x2_4 + 0.46037684620833 * H2x2_5 +
0.25911483872618 * H2x2_6 + 1.00876479730932 * H2x2_7 ;
2460729   +   H3x1_1  =     1.52228889950912 + H3x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = 1.52228889950912 + H3x1_1 ;
2460730   +   H3x1_2  =    -0.46625781761332 + H3x1_2 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = -0.46625781761332 + H3x1_2 ;
2460731   +   H3x1_3  =     0.11008388635615 + H3x1_3 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = 0.11008388635615 + H3x1_3 ;
2460732   +   H3x1_4  =    -0.38333236869719 + H3x1_4 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = -0.38333236869719 + H3x1_4 ;
2460733   +   H3x1_5  =    -1.36620648378402 + H3x1_5 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = -1.36620648378402 + H3x1_5 ;
2460734   +   H3x1_6  =     0.41780608126276 + H3x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_6 = 0.41780608126276 + H3x1_6 ;
2460735   +   H3x1_7  =    -0.69490040783623 + H3x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_7 = -0.69490040783623 + H3x1_7 ;
2460736   +   H3x1_1  = SIN(H3x1_1 );
MPRINT(EM_DIAGRAM):   H3x1_1 = SIN(H3x1_1 );
2460737   +   H3x1_2  = SIN(H3x1_2 );
MPRINT(EM_DIAGRAM):   H3x1_2 = SIN(H3x1_2 );
2460738   +   H3x1_3  = SIN(H3x1_3 );
MPRINT(EM_DIAGRAM):   H3x1_3 = SIN(H3x1_3 );
2460739   +   H3x1_4  = SIN(H3x1_4 );
MPRINT(EM_DIAGRAM):   H3x1_4 = SIN(H3x1_4 );
2460740   +   H3x1_5  = SIN(H3x1_5 );
MPRINT(EM_DIAGRAM):   H3x1_5 = SIN(H3x1_5 );
2460741   +   H3x1_6  = SIN(H3x1_6 );
MPRINT(EM_DIAGRAM):   H3x1_6 = SIN(H3x1_6 );
2460742   +   H3x1_7  = SIN(H3x1_7 );
MPRINT(EM_DIAGRAM):   H3x1_7 = SIN(H3x1_7 );
2460743   +END;
MPRINT(EM_DIAGRAM):   END;
2460744   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2460745   +   H3x1_1  = .;
MPRINT(EM_DIAGRAM):   H3x1_1 = .;
2460746   +   H3x1_2  = .;
MPRINT(EM_DIAGRAM):   H3x1_2 = .;
2460747   +   H3x1_3  = .;
MPRINT(EM_DIAGRAM):   H3x1_3 = .;
2460748   +   H3x1_4  = .;
MPRINT(EM_DIAGRAM):   H3x1_4 = .;
2460749   +   H3x1_5  = .;
MPRINT(EM_DIAGRAM):   H3x1_5 = .;
2460750   +   H3x1_6  = .;
MPRINT(EM_DIAGRAM):   H3x1_6 = .;
2460751   +   H3x1_7  = .;
MPRINT(EM_DIAGRAM):   H3x1_7 = .;
2460752   +END;
MPRINT(EM_DIAGRAM):   END;
2460753   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2460754   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2460755   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2460756   +
2460757   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2460758   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2460759   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2460760   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2460761   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2460762   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2460763   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2460764   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2460765   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2460766   +end;
MPRINT(EM_DIAGRAM):   end;
2460767   +else do;
MPRINT(EM_DIAGRAM):   else do;
2460768   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2460769   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2460770   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2460771   +   end;
MPRINT(EM_DIAGRAM):   end;
2460772   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2460773   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2460774   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2460775   +   end;
MPRINT(EM_DIAGRAM):   end;
2460776   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2460777   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2460778   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2460779   +   end;
MPRINT(EM_DIAGRAM):   end;
2460780   +end;
MPRINT(EM_DIAGRAM):   end;
2460781   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2460782   +   P_DepVar1  =    -2.07102874283902 * H3x1_1  +     2.04799607124649 * H3x1_2
2460783   +          +    -0.05444449856749 * H3x1_3  +    -3.76440287030853 * H3x1_4
2460784   +          +    -0.62776678498994 * H3x1_5  +    -1.00383135301243 * H3x1_6
2460785   +          +     2.26027843968818 * H3x1_7 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.07102874283902 * H3x1_1 + 2.04799607124649 * H3x1_2 +
-0.05444449856749 * H3x1_3 + -3.76440287030853 * H3x1_4 + -0.62776678498994 * H3x1_5 +
-1.00383135301243 * H3x1_6 + 2.26027843968818 * H3x1_7 ;
2460786   +   P_DepVar1  =     0.51137297979162 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.51137297979162 + P_DepVar1 ;
2460787   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2460788   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2460789   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2460790   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2460791   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2460792   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2460793   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2460794   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2460795   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2460796   +END;
MPRINT(EM_DIAGRAM):   END;
2460797   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2460798   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2460799   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2460800   +END;
MPRINT(EM_DIAGRAM):   END;
2460801   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2460802   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2460803   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2460804   +END;
MPRINT(EM_DIAGRAM):   END;
2460805   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2460806   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2460807   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2460808   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2460809   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2460810   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2460811   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2460812   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2460813   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2460814   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2460815   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2460816   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2460817   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2460818   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2460819   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2460820   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2460821   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2460822   +END;
MPRINT(EM_DIAGRAM):   END;
2460823   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2460824   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2460825   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2460826   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2460827   +* Renaming variables for AutoNeural12;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural12;
2460828   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2460829   +* Renaming Posterior variables for AutoNeural12;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural12;
2460830   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2460831   +drop AutoNeural12_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_P_DepVar1;
2460832   +AutoNeural12_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural12_P_DepVar1 = P_DepVar1;
2460833   +drop AutoNeural12_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_P_DepVar0;
2460834   +AutoNeural12_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural12_P_DepVar0 = P_DepVar0;
2460835   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2460836   +* Renaming _WARN_ variable for AutoNeural12;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural12;
2460837   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2460838   +length AutoNeural12_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural12_WARN_ $4;
2460839   +drop AutoNeural12_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_WARN_;
2460840   +AutoNeural12_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural12_WARN_ = _WARN_;
2460841   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2460842   +* Ensmbl46: Scoring Code of model 4 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl46: Scoring Code of model 4 of 5;
2460843   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2460844   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2460845   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
2460846   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2460847   +* NODE: AutoNeural7;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural7;
2460848   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2460849   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2460850   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2460851   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2460852   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2460853   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2460854   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2460855   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2460856   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2460857   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2460858   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2460859   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2460860   +LENGTH _WARN_ $4
2460861   +      F_DepVar  $ 12
2460862   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2460863   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2460864   +
2460865   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2460866   +
2460867   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2460868   +
2460869   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2460870   +
2460871   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2460872   +
2460873   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2460874   +
2460875   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2460876   +
2460877   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2460878   +
2460879   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2460880   +
2460881   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2460882   +
2460883   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2460884   +
2460885   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2460886   +
2460887   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2460888   +
2460889   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2460890   +
2460891   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2460892   +
2460893   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2460894   +
2460895   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2460896   +
2460897   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2460898   +
2460899   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2460900   +
2460901   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2460902   +
2460903   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2460904   +
2460905   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2460906   +
2460907   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2460908   +
2460909   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2460910   +
2460911   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2460912   +
2460913   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2460914   +
2460915   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2460916   +
2460917   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2460918   +
2460919   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2460920   +
2460921   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2460922   +
2460923   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2460924   +
2460925   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2460926   +
2460927   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2460928   +
2460929   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2460930   +
2460931   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2460932   +
2460933   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2460934   +
2460935   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2460936   +
2460937   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2460938   +
2460939   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2460940   +
2460941   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2460942   +
2460943   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2460944   +
2460945   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2460946   +
2460947   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2460948   +
2460949   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2460950   +
2460951   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2460952   +
2460953   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2460954   +
2460955   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2460956   +
2460957   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2460958   +
2460959   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2460960   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2460961   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2460962   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2460963   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2460964   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2460965   +end;
MPRINT(EM_DIAGRAM):   end;
2460966   +else do;
MPRINT(EM_DIAGRAM):   else do;
2460967   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2460968   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2460969   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2460970   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2460971   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2460972   +   end;
MPRINT(EM_DIAGRAM):   end;
2460973   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2460974   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2460975   +   end;
MPRINT(EM_DIAGRAM):   end;
2460976   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2460977   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2460978   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2460979   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2460980   +   end;
MPRINT(EM_DIAGRAM):   end;
2460981   +end;
MPRINT(EM_DIAGRAM):   end;
2460982   +
2460983   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2460984   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2460985   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2460986   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2460987   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2460988   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2460989   +end;
MPRINT(EM_DIAGRAM):   end;
2460990   +else do;
MPRINT(EM_DIAGRAM):   else do;
2460991   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2460992   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2460993   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2460994   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2460995   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2460996   +   end;
MPRINT(EM_DIAGRAM):   end;
2460997   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2460998   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2460999   +   end;
MPRINT(EM_DIAGRAM):   end;
2461000   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2461001   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2461002   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2461003   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2461004   +   end;
MPRINT(EM_DIAGRAM):   end;
2461005   +end;
MPRINT(EM_DIAGRAM):   end;
2461006   +
2461007   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2461008   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2461009   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2461010   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2461011   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2461012   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2461013   +end;
MPRINT(EM_DIAGRAM):   end;
2461014   +else do;
MPRINT(EM_DIAGRAM):   else do;
2461015   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2461016   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2461017   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2461018   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2461019   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2461020   +   end;
MPRINT(EM_DIAGRAM):   end;
2461021   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2461022   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2461023   +   end;
MPRINT(EM_DIAGRAM):   end;
2461024   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2461025   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2461026   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2461027   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2461028   +   end;
MPRINT(EM_DIAGRAM):   end;
2461029   +end;
MPRINT(EM_DIAGRAM):   end;
2461030   +
2461031   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2461032   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2461033   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2461034   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2461035   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2461036   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2461037   +end;
MPRINT(EM_DIAGRAM):   end;
2461038   +else do;
MPRINT(EM_DIAGRAM):   else do;
2461039   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2461040   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2461041   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2461042   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2461043   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2461044   +   end;
MPRINT(EM_DIAGRAM):   end;
2461045   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2461046   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2461047   +   end;
MPRINT(EM_DIAGRAM):   end;
2461048   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2461049   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2461050   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2461051   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2461052   +   end;
MPRINT(EM_DIAGRAM):   end;
2461053   +end;
MPRINT(EM_DIAGRAM):   end;
2461054   +
2461055   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2461056   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2461057   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2461058   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2461059   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2461060   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2461061   +end;
MPRINT(EM_DIAGRAM):   end;
2461062   +else do;
MPRINT(EM_DIAGRAM):   else do;
2461063   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2461064   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2461065   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2461066   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2461067   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2461068   +   end;
MPRINT(EM_DIAGRAM):   end;
2461069   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2461070   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2461071   +   end;
MPRINT(EM_DIAGRAM):   end;
2461072   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2461073   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2461074   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2461075   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2461076   +   end;
MPRINT(EM_DIAGRAM):   end;
2461077   +end;
MPRINT(EM_DIAGRAM):   end;
2461078   +
2461079   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2461080   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2461081   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2461082   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2461083   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2461084   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2461085   +end;
MPRINT(EM_DIAGRAM):   end;
2461086   +else do;
MPRINT(EM_DIAGRAM):   else do;
2461087   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2461088   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2461089   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2461090   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2461091   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2461092   +   end;
MPRINT(EM_DIAGRAM):   end;
2461093   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2461094   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2461095   +   end;
MPRINT(EM_DIAGRAM):   end;
2461096   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2461097   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2461098   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2461099   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2461100   +   end;
MPRINT(EM_DIAGRAM):   end;
2461101   +end;
MPRINT(EM_DIAGRAM):   end;
2461102   +
2461103   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2461104   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2461105   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2461106   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2461107   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2461108   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2461109   +end;
MPRINT(EM_DIAGRAM):   end;
2461110   +else do;
MPRINT(EM_DIAGRAM):   else do;
2461111   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2461112   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2461113   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2461114   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2461115   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2461116   +   end;
MPRINT(EM_DIAGRAM):   end;
2461117   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2461118   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2461119   +   end;
MPRINT(EM_DIAGRAM):   end;
2461120   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2461121   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2461122   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2461123   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2461124   +   end;
MPRINT(EM_DIAGRAM):   end;
2461125   +end;
MPRINT(EM_DIAGRAM):   end;
2461126   +
2461127   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2461128   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
2461129   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2461130   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2461131   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2461132   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2461133   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2461134   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2461135   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2461136   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2461137   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2461138   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2461139   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2461140   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2461141   +end;
MPRINT(EM_DIAGRAM):   end;
2461142   +else do;
MPRINT(EM_DIAGRAM):   else do;
2461143   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2461144   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2461145   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2461146   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2461147   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2461148   +   end;
MPRINT(EM_DIAGRAM):   end;
2461149   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2461150   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2461151   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2461152   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2461153   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2461154   +   end;
MPRINT(EM_DIAGRAM):   end;
2461155   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2461156   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2461157   +   end;
MPRINT(EM_DIAGRAM):   end;
2461158   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2461159   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2461160   +   end;
MPRINT(EM_DIAGRAM):   end;
2461161   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2461162   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2461163   +   end;
MPRINT(EM_DIAGRAM):   end;
2461164   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2461165   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2461166   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2461167   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2461168   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2461169   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2461170   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2461171   +   end;
MPRINT(EM_DIAGRAM):   end;
2461172   +end;
MPRINT(EM_DIAGRAM):   end;
2461173   +
2461174   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2461175   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2461176   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
2461177   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2461178   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2461179   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2461180   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2461181   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2461182   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2461183   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2461184   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2461185   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2461186   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2461187   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2461188   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2461189   +end;
MPRINT(EM_DIAGRAM):   end;
2461190   +else do;
MPRINT(EM_DIAGRAM):   else do;
2461191   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2461192   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2461193   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2461194   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2461195   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2461196   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2461197   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2461198   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2461199   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2461200   +         end;
MPRINT(EM_DIAGRAM):   end;
2461201   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2461202   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2461203   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2461204   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2461205   +            end;
MPRINT(EM_DIAGRAM):   end;
2461206   +         end;
MPRINT(EM_DIAGRAM):   end;
2461207   +      end;
MPRINT(EM_DIAGRAM):   end;
2461208   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2461209   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2461210   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2461211   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2461212   +         end;
MPRINT(EM_DIAGRAM):   end;
2461213   +      end;
MPRINT(EM_DIAGRAM):   end;
2461214   +   end;
MPRINT(EM_DIAGRAM):   end;
2461215   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2461216   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2461217   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2461218   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2461219   +      end;
MPRINT(EM_DIAGRAM):   end;
2461220   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2461221   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2461222   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2461223   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2461224   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2461225   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2461226   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2461227   +         end;
MPRINT(EM_DIAGRAM):   end;
2461228   +      end;
MPRINT(EM_DIAGRAM):   end;
2461229   +   end;
MPRINT(EM_DIAGRAM):   end;
2461230   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2461231   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2461232   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2461233   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2461234   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2461235   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2461236   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2461237   +   end;
MPRINT(EM_DIAGRAM):   end;
2461238   +end;
MPRINT(EM_DIAGRAM):   end;
2461239   +
2461240   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2461241   +*** Checking missing input Interval
2461242   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2461243   +
2461244   +IF NMISS(
2461245   +   AcceptedCmpTotal ,
2461246   +   Age ,
2461247   +   Frq ,
2461248   +   Income ,
2461249   +   Kidhome ,
2461250   +   Mnt ,
2461251   +   MntFishProducts ,
2461252   +   MntFruits ,
2461253   +   MntGoldProds ,
2461254   +   MntMeatProducts ,
2461255   +   MntSweetProducts ,
2461256   +   MntWines ,
2461257   +   MonthsAsCustomer ,
2461258   +   NumCatalogPurchases ,
2461259   +   NumDealsPurchases ,
2461260   +   NumDistPurchases ,
2461261   +   NumStorePurchases ,
2461262   +   NumWebPurchases ,
2461263   +   NumWebVisitsMonth ,
2461264   +   RFMstat ,
2461265   +   RMntFrq ,
2461266   +   Recency ,
2461267   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
2461268   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2461269   +
2461270   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2461271   +END;
MPRINT(EM_DIAGRAM):   END;
2461272   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2461273   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2461274   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2461275   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2461276   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2461277   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2461278   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2461279   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2461280   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2461281   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2461282   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2461283   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2461284   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2461285   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2461286   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2461287   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2461288   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2461289   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2461290   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2461291   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2461292   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2461293   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2461294   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 *
MonthsAsCustomer ;
2461295   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2461296   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2461297   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2461298   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2461299   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2461300   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2461301   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2461302   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2461303   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2461304   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2461305   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2461306   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2461307   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2461308   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2461309   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2461310   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2461311   +END;
MPRINT(EM_DIAGRAM):   END;
2461312   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2461313   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2461314   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2461315   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2461316   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2461317   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2461318   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2461319   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2461320   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2461321   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2461322   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2461323   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2461324   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2461325   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2461326   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2461327   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2461328   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2461329   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2461330   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2461331   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2461332   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2461333   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2461334   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
2461335   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2461336   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2461337   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2461338   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2461339   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2461340   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2461341   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2461342   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2461343   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2461344   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2461345   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 *
MonthsAsCustomer ;
2461346   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2461347   +   ELSE S_NumCatalogPurchases
2461348   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2461349   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2461350   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2461351   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2461352   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2461353   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2461354   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2461355   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2461356   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2461357   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2461358   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2461359   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2461360   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2461361   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2461362   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2461363   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2461364   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2461365   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2461366   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2461367   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2461368   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2461369   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2461370   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2461371   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2461372   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2461373   +END;
MPRINT(EM_DIAGRAM):   END;
2461374   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2461375   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2461376   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2461377   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2461378   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2461379   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2461380   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2461381   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2461382   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2461383   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2461384   +   H1x1_1  =     0.27051750628107 * S_AcceptedCmpTotal
2461385   +          +    -0.01552488999587 * S_Age  +    -0.19918933236131 * S_Frq
2461386   +          +    -0.18053367989037 * S_Income  +     0.17934470816975 *
2461387   +        S_Kidhome  +    -0.27914859130186 * S_Mnt  +    -0.05331142159606 *
2461388   +        S_MntFishProducts  +    -0.03730503814111 * S_MntFruits
2461389   +          +     0.01217897476566 * S_MntGoldProds  +       0.241005967683 *
2461390   +        S_MntMeatProducts  +    -0.02873172523867 * S_MntSweetProducts
2461391   +          +    -0.35773732926132 * S_MntWines  +    -0.00800625524539 *
2461392   +        S_MonthsAsCustomer  +     0.14253720708201 * S_NumCatalogPurchases
2461393   +          +     0.09634439105648 * S_NumDealsPurchases
2461394   +          +     -0.2727389064287 * S_NumDistPurchases
2461395   +          +    -0.14179871978162 * S_NumStorePurchases
2461396   +          +     0.11008049559527 * S_NumWebPurchases
2461397   +          +    -0.16791463027749 * S_NumWebVisitsMonth
2461398   +          +     0.12827091331546 * S_RFMstat  +    -0.05819422771336 *
2461399   +        S_RMntFrq  +     0.17192522504917 * S_Recency
2461400   +          +     0.13379709932247 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.27051750628107 * S_AcceptedCmpTotal + -0.01552488999587 *
S_Age + -0.19918933236131 * S_Frq + -0.18053367989037 * S_Income + 0.17934470816975 *
S_Kidhome + -0.27914859130186 * S_Mnt + -0.05331142159606 * S_MntFishProducts +
-0.03730503814111 * S_MntFruits + 0.01217897476566 * S_MntGoldProds + 0.241005967683 *
S_MntMeatProducts + -0.02873172523867 * S_MntSweetProducts + -0.35773732926132 * S_MntWines +
-0.00800625524539 * S_MonthsAsCustomer + 0.14253720708201 * S_NumCatalogPurchases +
0.09634439105648 * S_NumDealsPurchases + -0.2727389064287 * S_NumDistPurchases +
-0.14179871978162 * S_NumStorePurchases + 0.11008049559527 * S_NumWebPurchases +
-0.16791463027749 * S_NumWebVisitsMonth + 0.12827091331546 * S_RFMstat + -0.05819422771336 *
S_RMntFrq + 0.17192522504917 * S_Recency + 0.13379709932247 * S_Teenhome ;
2461401   +   H1x1_2  =      0.2625003002792 * S_AcceptedCmpTotal
2461402   +          +    -0.00409648963127 * S_Age  +    -0.08422560024107 * S_Frq
2461403   +          +      0.1678148652095 * S_Income  +      -0.122580580609 *
2461404   +        S_Kidhome  +    -0.41368311141801 * S_Mnt  +     -0.0649787838725 *
2461405   +        S_MntFishProducts  +    -0.06363287766971 * S_MntFruits
2461406   +          +     0.00810850196464 * S_MntGoldProds  +      0.2984971941271 *
2461407   +        S_MntMeatProducts  +     -0.0651075315757 * S_MntSweetProducts
2461408   +          +    -0.42717799596572 * S_MntWines  +    -0.00945771129633 *
2461409   +        S_MonthsAsCustomer  +     0.33346839008681 * S_NumCatalogPurchases
2461410   +          +     0.15835936877168 * S_NumDealsPurchases
2461411   +          +     0.04229992769587 * S_NumDistPurchases
2461412   +          +    -0.04051362547639 * S_NumStorePurchases
2461413   +          +    -0.01791546488406 * S_NumWebPurchases
2461414   +          +     0.28833008597045 * S_NumWebVisitsMonth
2461415   +          +     0.08007709098478 * S_RFMstat  +     0.37677948418886 *
2461416   +        S_RMntFrq  +    -0.32542265112765 * S_Recency
2461417   +          +    -0.10763248273834 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.2625003002792 * S_AcceptedCmpTotal + -0.00409648963127 *
S_Age + -0.08422560024107 * S_Frq + 0.1678148652095 * S_Income + -0.122580580609 * S_Kidhome +
-0.41368311141801 * S_Mnt + -0.0649787838725 * S_MntFishProducts + -0.06363287766971 *
S_MntFruits + 0.00810850196464 * S_MntGoldProds + 0.2984971941271 * S_MntMeatProducts +
-0.0651075315757 * S_MntSweetProducts + -0.42717799596572 * S_MntWines + -0.00945771129633 *
S_MonthsAsCustomer + 0.33346839008681 * S_NumCatalogPurchases + 0.15835936877168 *
S_NumDealsPurchases + 0.04229992769587 * S_NumDistPurchases + -0.04051362547639 *
S_NumStorePurchases + -0.01791546488406 * S_NumWebPurchases + 0.28833008597045 *
S_NumWebVisitsMonth + 0.08007709098478 * S_RFMstat + 0.37677948418886 * S_RMntFrq +
-0.32542265112765 * S_Recency + -0.10763248273834 * S_Teenhome ;
2461418   +   H1x1_1  = H1x1_1  +     0.17927888078386 * AcceptedCmp10
2461419   +          +       0.309097592234 * AcceptedCmp20  +     0.30005706470617 *
2461420   +        AcceptedCmp30  +     0.30534843193785 * AcceptedCmp40
2461421   +          +     0.19575142296602 * AcceptedCmp50  +    -0.26930325741881 *
2461422   +        Complain0  +    -0.07193220591551 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.17927888078386 * AcceptedCmp10 + 0.309097592234 *
AcceptedCmp20 + 0.30005706470617 * AcceptedCmp30 + 0.30534843193785 * AcceptedCmp40 +
0.19575142296602 * AcceptedCmp50 + -0.26930325741881 * Complain0 + -0.07193220591551 *
HigherEducationBinary0 ;
2461423   +   H1x1_2  = H1x1_2  +     0.01282806481889 * AcceptedCmp10
2461424   +          +     0.01542710847454 * AcceptedCmp20  +     0.03576476827309 *
2461425   +        AcceptedCmp30  +     0.04230610697529 * AcceptedCmp40
2461426   +          +     0.03405078302469 * AcceptedCmp50  +     0.13002166919554 *
2461427   +        Complain0  +    -0.08203696285033 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.01282806481889 * AcceptedCmp10 + 0.01542710847454 *
AcceptedCmp20 + 0.03576476827309 * AcceptedCmp30 + 0.04230610697529 * AcceptedCmp40 +
0.03405078302469 * AcceptedCmp50 + 0.13002166919554 * Complain0 + -0.08203696285033 *
HigherEducationBinary0 ;
2461428   +   H1x1_1  = H1x1_1  +    -0.04471063478028 * Education2n_Cycle
2461429   +          +     0.15571809437849 * EducationBasic  +    -0.00113978624206 *
2461430   +        EducationGraduation  +     0.00750750981266 * EducationMaster
2461431   +          +     -0.0504367274898 * Marital_StatusDivorced
2461432   +          +     0.28345714390306 * Marital_StatusMarried
2461433   +          +     -0.2012923780435 * Marital_StatusSingle
2461434   +          +     0.20022167903492 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.04471063478028 * Education2n_Cycle +
0.15571809437849 * EducationBasic + -0.00113978624206 * EducationGraduation + 0.00750750981266
* EducationMaster + -0.0504367274898 * Marital_StatusDivorced + 0.28345714390306 *
Marital_StatusMarried + -0.2012923780435 * Marital_StatusSingle + 0.20022167903492 *
Marital_StatusTogether ;
2461435   +   H1x1_2  = H1x1_2  +     0.12691361812265 * Education2n_Cycle
2461436   +          +       0.003205191831 * EducationBasic  +    -0.04323354449955 *
2461437   +        EducationGraduation  +    -0.06699429239126 * EducationMaster
2461438   +          +     0.06828937261262 * Marital_StatusDivorced
2461439   +          +     -0.1520862543536 * Marital_StatusMarried
2461440   +          +      0.1392808464716 * Marital_StatusSingle
2461441   +          +    -0.12406922875482 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.12691361812265 * Education2n_Cycle + 0.003205191831
* EducationBasic + -0.04323354449955 * EducationGraduation + -0.06699429239126 *
EducationMaster + 0.06828937261262 * Marital_StatusDivorced + -0.1520862543536 *
Marital_StatusMarried + 0.1392808464716 * Marital_StatusSingle + -0.12406922875482 *
Marital_StatusTogether ;
2461442   +   H1x1_1  =     0.89722634972069 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.89722634972069 + H1x1_1 ;
2461443   +   H1x1_2  =     -0.5979471913364 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.5979471913364 + H1x1_2 ;
2461444   +   H1x1_1  = SIN(H1x1_1 );
MPRINT(EM_DIAGRAM):   H1x1_1 = SIN(H1x1_1 );
2461445   +   H1x1_2  = SIN(H1x1_2 );
MPRINT(EM_DIAGRAM):   H1x1_2 = SIN(H1x1_2 );
2461446   +END;
MPRINT(EM_DIAGRAM):   END;
2461447   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2461448   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2461449   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2461450   +END;
MPRINT(EM_DIAGRAM):   END;
2461451   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2461452   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2461453   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2461454   +
2461455   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2461456   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2461457   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2461458   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2461459   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2461460   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2461461   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2461462   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2461463   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2461464   +end;
MPRINT(EM_DIAGRAM):   end;
2461465   +else do;
MPRINT(EM_DIAGRAM):   else do;
2461466   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2461467   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2461468   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2461469   +   end;
MPRINT(EM_DIAGRAM):   end;
2461470   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2461471   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2461472   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2461473   +   end;
MPRINT(EM_DIAGRAM):   end;
2461474   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2461475   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2461476   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2461477   +   end;
MPRINT(EM_DIAGRAM):   end;
2461478   +end;
MPRINT(EM_DIAGRAM):   end;
2461479   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2461480   +   P_DepVar1  =     -11.533020189097 * H1x1_1  +     17.2320065402955 * H1x1_2
2461481   +         ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -11.533020189097 * H1x1_1 + 17.2320065402955 * H1x1_2 ;
2461482   +   P_DepVar1  =     2.37722840752042 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.37722840752042 + P_DepVar1 ;
2461483   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2461484   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2461485   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2461486   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2461487   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2461488   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2461489   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2461490   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2461491   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2461492   +END;
MPRINT(EM_DIAGRAM):   END;
2461493   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2461494   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2461495   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2461496   +END;
MPRINT(EM_DIAGRAM):   END;
2461497   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2461498   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2461499   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2461500   +END;
MPRINT(EM_DIAGRAM):   END;
2461501   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2461502   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2461503   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2461504   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2461505   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2461506   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2461507   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2461508   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2461509   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2461510   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2461511   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2461512   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2461513   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2461514   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2461515   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2461516   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2461517   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2461518   +END;
MPRINT(EM_DIAGRAM):   END;
2461519   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2461520   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2461521   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2461522   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2461523   +* Renaming variables for AutoNeural7;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural7;
2461524   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2461525   +* Renaming Posterior variables for AutoNeural7;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural7;
2461526   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2461527   +drop AutoNeural7_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural7_P_DepVar1;
2461528   +AutoNeural7_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural7_P_DepVar1 = P_DepVar1;
2461529   +drop AutoNeural7_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural7_P_DepVar0;
2461530   +AutoNeural7_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural7_P_DepVar0 = P_DepVar0;
2461531   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2461532   +* Renaming _WARN_ variable for AutoNeural7;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural7;
2461533   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2461534   +length AutoNeural7_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural7_WARN_ $4;
2461535   +drop AutoNeural7_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural7_WARN_;
2461536   +AutoNeural7_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural7_WARN_ = _WARN_;
2461537   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2461538   +* Ensmbl46: Scoring Code of model 5 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl46: Scoring Code of model 5 of 5;
2461539   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2461540   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2461541   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
2461542   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2461543   +* NODE: AutoNeural10;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural10;
2461544   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2461545   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2461546   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2461547   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2461548   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2461549   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2461550   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2461551   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2461552   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2461553   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2461554   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2461555   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2461556   +LENGTH _WARN_ $4
2461557   +      F_DepVar  $ 12
2461558   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2461559   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2461560   +
2461561   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2461562   +
2461563   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2461564   +
2461565   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2461566   +
2461567   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2461568   +
2461569   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2461570   +
2461571   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2461572   +
2461573   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2461574   +
2461575   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2461576   +
2461577   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2461578   +
2461579   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2461580   +
2461581   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2461582   +
2461583   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2461584   +
2461585   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2461586   +
2461587   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2461588   +
2461589   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2461590   +
2461591   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2461592   +
2461593   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2461594   +
2461595   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2461596   +
2461597   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2461598   +
2461599   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2461600   +
2461601   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2461602   +
2461603   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2461604   +
2461605   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2461606   +
2461607   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2461608   +
2461609   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2461610   +
2461611   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2461612   +
2461613   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2461614   +
2461615   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2461616   +
2461617   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2461618   +
2461619   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2461620   +
2461621   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2461622   +
2461623   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2461624   +
2461625   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2461626   +
2461627   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2461628   +
2461629   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2461630   +
2461631   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2461632   +
2461633   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2461634   +
2461635   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2461636   +
2461637   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2461638   +
2461639   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2461640   +
2461641   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2461642   +
2461643   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
2461644   +
2461645   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
2461646   +
2461647   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
2461648   +
2461649   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
2461650   +
2461651   +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
2461652   +
2461653   +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
2461654   +
2461655   +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
2461656   +
2461657   +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
2461658   +
2461659   +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
2461660   +
2461661   +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
2461662   +
2461663   +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
2461664   +
2461665   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2461666   +
2461667   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2461668   +
2461669   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2461670   +
2461671   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2461672   +
2461673   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2461674   +
2461675   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2461676   +
2461677   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2461678   +
2461679   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2461680   +
2461681   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2461682   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2461683   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2461684   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2461685   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2461686   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2461687   +end;
MPRINT(EM_DIAGRAM):   end;
2461688   +else do;
MPRINT(EM_DIAGRAM):   else do;
2461689   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2461690   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2461691   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2461692   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2461693   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2461694   +   end;
MPRINT(EM_DIAGRAM):   end;
2461695   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2461696   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2461697   +   end;
MPRINT(EM_DIAGRAM):   end;
2461698   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2461699   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2461700   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2461701   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2461702   +   end;
MPRINT(EM_DIAGRAM):   end;
2461703   +end;
MPRINT(EM_DIAGRAM):   end;
2461704   +
2461705   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2461706   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2461707   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2461708   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2461709   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2461710   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2461711   +end;
MPRINT(EM_DIAGRAM):   end;
2461712   +else do;
MPRINT(EM_DIAGRAM):   else do;
2461713   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2461714   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2461715   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2461716   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2461717   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2461718   +   end;
MPRINT(EM_DIAGRAM):   end;
2461719   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2461720   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2461721   +   end;
MPRINT(EM_DIAGRAM):   end;
2461722   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2461723   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2461724   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2461725   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2461726   +   end;
MPRINT(EM_DIAGRAM):   end;
2461727   +end;
MPRINT(EM_DIAGRAM):   end;
2461728   +
2461729   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2461730   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2461731   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2461732   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2461733   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2461734   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2461735   +end;
MPRINT(EM_DIAGRAM):   end;
2461736   +else do;
MPRINT(EM_DIAGRAM):   else do;
2461737   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2461738   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2461739   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2461740   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2461741   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2461742   +   end;
MPRINT(EM_DIAGRAM):   end;
2461743   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2461744   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2461745   +   end;
MPRINT(EM_DIAGRAM):   end;
2461746   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2461747   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2461748   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2461749   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2461750   +   end;
MPRINT(EM_DIAGRAM):   end;
2461751   +end;
MPRINT(EM_DIAGRAM):   end;
2461752   +
2461753   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2461754   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2461755   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2461756   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2461757   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2461758   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2461759   +end;
MPRINT(EM_DIAGRAM):   end;
2461760   +else do;
MPRINT(EM_DIAGRAM):   else do;
2461761   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2461762   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2461763   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2461764   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2461765   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2461766   +   end;
MPRINT(EM_DIAGRAM):   end;
2461767   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2461768   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2461769   +   end;
MPRINT(EM_DIAGRAM):   end;
2461770   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2461771   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2461772   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2461773   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2461774   +   end;
MPRINT(EM_DIAGRAM):   end;
2461775   +end;
MPRINT(EM_DIAGRAM):   end;
2461776   +
2461777   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2461778   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2461779   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2461780   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2461781   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2461782   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2461783   +end;
MPRINT(EM_DIAGRAM):   end;
2461784   +else do;
MPRINT(EM_DIAGRAM):   else do;
2461785   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2461786   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2461787   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2461788   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2461789   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2461790   +   end;
MPRINT(EM_DIAGRAM):   end;
2461791   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2461792   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2461793   +   end;
MPRINT(EM_DIAGRAM):   end;
2461794   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2461795   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2461796   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2461797   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2461798   +   end;
MPRINT(EM_DIAGRAM):   end;
2461799   +end;
MPRINT(EM_DIAGRAM):   end;
2461800   +
2461801   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2461802   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2461803   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2461804   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2461805   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2461806   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2461807   +end;
MPRINT(EM_DIAGRAM):   end;
2461808   +else do;
MPRINT(EM_DIAGRAM):   else do;
2461809   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2461810   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2461811   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2461812   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2461813   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2461814   +   end;
MPRINT(EM_DIAGRAM):   end;
2461815   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2461816   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2461817   +   end;
MPRINT(EM_DIAGRAM):   end;
2461818   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2461819   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2461820   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2461821   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2461822   +   end;
MPRINT(EM_DIAGRAM):   end;
2461823   +end;
MPRINT(EM_DIAGRAM):   end;
2461824   +
2461825   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2461826   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2461827   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2461828   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2461829   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2461830   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2461831   +end;
MPRINT(EM_DIAGRAM):   end;
2461832   +else do;
MPRINT(EM_DIAGRAM):   else do;
2461833   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2461834   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2461835   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2461836   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2461837   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2461838   +   end;
MPRINT(EM_DIAGRAM):   end;
2461839   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2461840   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2461841   +   end;
MPRINT(EM_DIAGRAM):   end;
2461842   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2461843   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2461844   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2461845   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2461846   +   end;
MPRINT(EM_DIAGRAM):   end;
2461847   +end;
MPRINT(EM_DIAGRAM):   end;
2461848   +
2461849   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2461850   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
2461851   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2461852   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2461853   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2461854   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2461855   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2461856   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2461857   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2461858   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2461859   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2461860   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2461861   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2461862   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2461863   +end;
MPRINT(EM_DIAGRAM):   end;
2461864   +else do;
MPRINT(EM_DIAGRAM):   else do;
2461865   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2461866   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2461867   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2461868   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2461869   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2461870   +   end;
MPRINT(EM_DIAGRAM):   end;
2461871   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2461872   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2461873   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2461874   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2461875   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2461876   +   end;
MPRINT(EM_DIAGRAM):   end;
2461877   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2461878   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2461879   +   end;
MPRINT(EM_DIAGRAM):   end;
2461880   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2461881   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2461882   +   end;
MPRINT(EM_DIAGRAM):   end;
2461883   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2461884   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2461885   +   end;
MPRINT(EM_DIAGRAM):   end;
2461886   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2461887   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2461888   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2461889   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2461890   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2461891   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2461892   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2461893   +   end;
MPRINT(EM_DIAGRAM):   end;
2461894   +end;
MPRINT(EM_DIAGRAM):   end;
2461895   +
2461896   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2461897   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2461898   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
2461899   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2461900   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2461901   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2461902   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2461903   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2461904   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2461905   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2461906   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2461907   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2461908   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2461909   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2461910   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2461911   +end;
MPRINT(EM_DIAGRAM):   end;
2461912   +else do;
MPRINT(EM_DIAGRAM):   else do;
2461913   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2461914   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2461915   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2461916   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2461917   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2461918   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2461919   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2461920   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2461921   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2461922   +         end;
MPRINT(EM_DIAGRAM):   end;
2461923   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2461924   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2461925   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2461926   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2461927   +            end;
MPRINT(EM_DIAGRAM):   end;
2461928   +         end;
MPRINT(EM_DIAGRAM):   end;
2461929   +      end;
MPRINT(EM_DIAGRAM):   end;
2461930   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2461931   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2461932   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2461933   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2461934   +         end;
MPRINT(EM_DIAGRAM):   end;
2461935   +      end;
MPRINT(EM_DIAGRAM):   end;
2461936   +   end;
MPRINT(EM_DIAGRAM):   end;
2461937   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2461938   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2461939   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2461940   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2461941   +      end;
MPRINT(EM_DIAGRAM):   end;
2461942   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2461943   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2461944   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2461945   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2461946   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2461947   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2461948   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2461949   +         end;
MPRINT(EM_DIAGRAM):   end;
2461950   +      end;
MPRINT(EM_DIAGRAM):   end;
2461951   +   end;
MPRINT(EM_DIAGRAM):   end;
2461952   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2461953   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2461954   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2461955   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2461956   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2461957   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2461958   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2461959   +   end;
MPRINT(EM_DIAGRAM):   end;
2461960   +end;
MPRINT(EM_DIAGRAM):   end;
2461961   +
2461962   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2461963   +*** Checking missing input Interval
2461964   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2461965   +
2461966   +IF NMISS(
2461967   +   AcceptedCmpTotal ,
2461968   +   Age ,
2461969   +   Frq ,
2461970   +   Income ,
2461971   +   Kidhome ,
2461972   +   Mnt ,
2461973   +   MntFishProducts ,
2461974   +   MntFruits ,
2461975   +   MntGoldProds ,
2461976   +   MntMeatProducts ,
2461977   +   MntSweetProducts ,
2461978   +   MntWines ,
2461979   +   MonthsAsCustomer ,
2461980   +   NumCatalogPurchases ,
2461981   +   NumDealsPurchases ,
2461982   +   NumDistPurchases ,
2461983   +   NumStorePurchases ,
2461984   +   NumWebPurchases ,
2461985   +   NumWebVisitsMonth ,
2461986   +   RFMstat ,
2461987   +   RMntFrq ,
2461988   +   Recency ,
2461989   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
2461990   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2461991   +
2461992   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2461993   +END;
MPRINT(EM_DIAGRAM):   END;
2461994   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2461995   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2461996   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2461997   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2461998   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2461999   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2462000   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2462001   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2462002   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2462003   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2462004   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2462005   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2462006   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2462007   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2462008   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2462009   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2462010   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2462011   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2462012   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2462013   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2462014   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2462015   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2462016   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 *
MonthsAsCustomer ;
2462017   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2462018   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2462019   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2462020   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2462021   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2462022   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2462023   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2462024   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2462025   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2462026   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2462027   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2462028   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2462029   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2462030   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2462031   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2462032   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2462033   +END;
MPRINT(EM_DIAGRAM):   END;
2462034   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2462035   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2462036   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2462037   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2462038   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2462039   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2462040   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2462041   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2462042   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2462043   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2462044   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2462045   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2462046   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2462047   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2462048   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2462049   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2462050   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2462051   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2462052   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2462053   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2462054   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2462055   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2462056   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
2462057   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2462058   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2462059   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2462060   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2462061   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2462062   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2462063   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2462064   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2462065   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2462066   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2462067   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 *
MonthsAsCustomer ;
2462068   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2462069   +   ELSE S_NumCatalogPurchases
2462070   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2462071   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2462072   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2462073   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2462074   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2462075   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2462076   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2462077   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2462078   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2462079   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2462080   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2462081   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2462082   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2462083   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2462084   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2462085   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2462086   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2462087   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2462088   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2462089   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2462090   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2462091   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2462092   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2462093   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2462094   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2462095   +END;
MPRINT(EM_DIAGRAM):   END;
2462096   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2462097   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2462098   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2462099   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2462100   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2462101   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2462102   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2462103   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2462104   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2462105   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2462106   +   H1x1_1  =     -2.0588471958351 * S_AcceptedCmpTotal
2462107   +          +     0.38628980389456 * S_Age  +     -0.8545617733777 * S_Frq
2462108   +          +    -1.37557200210661 * S_Income  +     1.58583945545125 *
2462109   +        S_Kidhome  +    -1.49250871593186 * S_Mnt  +    -2.02986091068301 *
2462110   +        S_MntFishProducts  +     0.28845511703412 * S_MntFruits
2462111   +          +    -0.62495372005095 * S_MntGoldProds  +     3.22144698444712 *
2462112   +        S_MntMeatProducts  +    -2.67158036653801 * S_MntSweetProducts
2462113   +          +    -4.30837863985493 * S_MntWines  +     0.39603200162704 *
2462114   +        S_MonthsAsCustomer  +      1.8259166147951 * S_NumCatalogPurchases
2462115   +          +      3.4758215776031 * S_NumDealsPurchases
2462116   +          +     0.17094021755289 * S_NumDistPurchases
2462117   +          +    -2.72090095694641 * S_NumStorePurchases
2462118   +          +    -0.31877935826328 * S_NumWebPurchases
2462119   +          +    -2.03399974412918 * S_NumWebVisitsMonth
2462120   +          +     2.74309130038659 * S_RFMstat  +    -0.74941844935268 *
2462121   +        S_RMntFrq  +     0.29064555076615 * S_Recency
2462122   +          +    -0.57040700827247 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -2.0588471958351 * S_AcceptedCmpTotal + 0.38628980389456 *
S_Age + -0.8545617733777 * S_Frq + -1.37557200210661 * S_Income + 1.58583945545125 * S_Kidhome
+ -1.49250871593186 * S_Mnt + -2.02986091068301 * S_MntFishProducts + 0.28845511703412 *
S_MntFruits + -0.62495372005095 * S_MntGoldProds + 3.22144698444712 * S_MntMeatProducts +
-2.67158036653801 * S_MntSweetProducts + -4.30837863985493 * S_MntWines + 0.39603200162704 *
S_MonthsAsCustomer + 1.8259166147951 * S_NumCatalogPurchases + 3.4758215776031 *
S_NumDealsPurchases + 0.17094021755289 * S_NumDistPurchases + -2.72090095694641 *
S_NumStorePurchases + -0.31877935826328 * S_NumWebPurchases + -2.03399974412918 *
S_NumWebVisitsMonth + 2.74309130038659 * S_RFMstat + -0.74941844935268 * S_RMntFrq +
0.29064555076615 * S_Recency + -0.57040700827247 * S_Teenhome ;
2462123   +   H1x1_2  =     -0.5995699177824 * S_AcceptedCmpTotal
2462124   +          +    -1.17769485933608 * S_Age  +     0.95998296288295 * S_Frq
2462125   +          +     -2.2343179478513 * S_Income  +     3.17436638275163 *
2462126   +        S_Kidhome  +     0.46987648124346 * S_Mnt  +     0.07213935656698 *
2462127   +        S_MntFishProducts  +    -1.38055808108069 * S_MntFruits
2462128   +          +     0.62140960451545 * S_MntGoldProds  +     -1.9000500396873 *
2462129   +        S_MntMeatProducts  +    -0.35707372583597 * S_MntSweetProducts
2462130   +          +     1.99720917743483 * S_MntWines  +     0.89245096364062 *
2462131   +        S_MonthsAsCustomer  +    -0.61497875715928 * S_NumCatalogPurchases
2462132   +          +    -1.21013804197082 * S_NumDealsPurchases
2462133   +          +     0.59974279122188 * S_NumDistPurchases
2462134   +          +     1.92425710681156 * S_NumStorePurchases
2462135   +          +     1.02413182452324 * S_NumWebPurchases
2462136   +          +    -3.63276285340174 * S_NumWebVisitsMonth
2462137   +          +     0.33919100670479 * S_RFMstat  +     0.84767315208026 *
2462138   +        S_RMntFrq  +     3.87352563099005 * S_Recency
2462139   +          +     2.74174964084917 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.5995699177824 * S_AcceptedCmpTotal + -1.17769485933608 *
S_Age + 0.95998296288295 * S_Frq + -2.2343179478513 * S_Income + 3.17436638275163 * S_Kidhome
+ 0.46987648124346 * S_Mnt + 0.07213935656698 * S_MntFishProducts + -1.38055808108069 *
S_MntFruits + 0.62140960451545 * S_MntGoldProds + -1.9000500396873 * S_MntMeatProducts +
-0.35707372583597 * S_MntSweetProducts + 1.99720917743483 * S_MntWines + 0.89245096364062 *
S_MonthsAsCustomer + -0.61497875715928 * S_NumCatalogPurchases + -1.21013804197082 *
S_NumDealsPurchases + 0.59974279122188 * S_NumDistPurchases + 1.92425710681156 *
S_NumStorePurchases + 1.02413182452324 * S_NumWebPurchases + -3.63276285340174 *
S_NumWebVisitsMonth + 0.33919100670479 * S_RFMstat + 0.84767315208026 * S_RMntFrq +
3.87352563099005 * S_Recency + 2.74174964084917 * S_Teenhome ;
2462140   +   H1x1_3  =    -2.27029708882419 * S_AcceptedCmpTotal
2462141   +          +     0.57558817521081 * S_Age  +     0.03666022895146 * S_Frq
2462142   +          +    -0.43764949843184 * S_Income  +     0.05202039236868 *
2462143   +        S_Kidhome  +    -0.17515517773197 * S_Mnt  +      2.1454579331563 *
2462144   +        S_MntFishProducts  +     -0.0544472234117 * S_MntFruits
2462145   +          +    -0.24751372889101 * S_MntGoldProds  +    -7.95986512066472 *
2462146   +        S_MntMeatProducts  +    -0.42258869313323 * S_MntSweetProducts
2462147   +          +      4.6542173574208 * S_MntWines  +     0.27973663838423 *
2462148   +        S_MonthsAsCustomer  +    -0.92923468464154 * S_NumCatalogPurchases
2462149   +          +      0.4928343071801 * S_NumDealsPurchases
2462150   +          +     -0.0196677325409 * S_NumDistPurchases
2462151   +          +     0.44395828164873 * S_NumStorePurchases
2462152   +          +     0.86947051591224 * S_NumWebPurchases
2462153   +          +    -0.96787241206077 * S_NumWebVisitsMonth
2462154   +          +     -0.9429396337834 * S_RFMstat  +    -1.69298966254302 *
2462155   +        S_RMntFrq  +     0.24582117217188 * S_Recency
2462156   +          +    -1.08471509540368 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -2.27029708882419 * S_AcceptedCmpTotal + 0.57558817521081 *
S_Age + 0.03666022895146 * S_Frq + -0.43764949843184 * S_Income + 0.05202039236868 * S_Kidhome
+ -0.17515517773197 * S_Mnt + 2.1454579331563 * S_MntFishProducts + -0.0544472234117 *
S_MntFruits + -0.24751372889101 * S_MntGoldProds + -7.95986512066472 * S_MntMeatProducts +
-0.42258869313323 * S_MntSweetProducts + 4.6542173574208 * S_MntWines + 0.27973663838423 *
S_MonthsAsCustomer + -0.92923468464154 * S_NumCatalogPurchases + 0.4928343071801 *
S_NumDealsPurchases + -0.0196677325409 * S_NumDistPurchases + 0.44395828164873 *
S_NumStorePurchases + 0.86947051591224 * S_NumWebPurchases + -0.96787241206077 *
S_NumWebVisitsMonth + -0.9429396337834 * S_RFMstat + -1.69298966254302 * S_RMntFrq +
0.24582117217188 * S_Recency + -1.08471509540368 * S_Teenhome ;
2462157   +   H1x1_4  =     0.54181596412096 * S_AcceptedCmpTotal
2462158   +          +    -1.19331526818752 * S_Age  +     0.79853759822324 * S_Frq
2462159   +          +     0.73370928178794 * S_Income  +     0.38661834479377 *
2462160   +        S_Kidhome  +      0.3442876988888 * S_Mnt  +    -0.58769739655035 *
2462161   +        S_MntFishProducts  +     -0.8703586573687 * S_MntFruits
2462162   +          +    -0.06073044217122 * S_MntGoldProds  +     1.06031608775663 *
2462163   +        S_MntMeatProducts  +      0.1600438561366 * S_MntSweetProducts
2462164   +          +    -0.10937637342015 * S_MntWines  +     0.44423445817796 *
2462165   +        S_MonthsAsCustomer  +     2.20653376632749 * S_NumCatalogPurchases
2462166   +          +     1.10280977051932 * S_NumDealsPurchases
2462167   +          +     0.99310057404036 * S_NumDistPurchases
2462168   +          +    -0.05647459609331 * S_NumStorePurchases
2462169   +          +    -0.89852483938631 * S_NumWebPurchases
2462170   +          +     2.63022480227445 * S_NumWebVisitsMonth
2462171   +          +      0.0081819695781 * S_RFMstat  +     1.19338523211724 *
2462172   +        S_RMntFrq  +    -4.46436997560659 * S_Recency
2462173   +          +    -2.03251171372039 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.54181596412096 * S_AcceptedCmpTotal + -1.19331526818752 *
S_Age + 0.79853759822324 * S_Frq + 0.73370928178794 * S_Income + 0.38661834479377 * S_Kidhome
+ 0.3442876988888 * S_Mnt + -0.58769739655035 * S_MntFishProducts + -0.8703586573687 *
S_MntFruits + -0.06073044217122 * S_MntGoldProds + 1.06031608775663 * S_MntMeatProducts +
0.1600438561366 * S_MntSweetProducts + -0.10937637342015 * S_MntWines + 0.44423445817796 *
S_MonthsAsCustomer + 2.20653376632749 * S_NumCatalogPurchases + 1.10280977051932 *
S_NumDealsPurchases + 0.99310057404036 * S_NumDistPurchases + -0.05647459609331 *
S_NumStorePurchases + -0.89852483938631 * S_NumWebPurchases + 2.63022480227445 *
S_NumWebVisitsMonth + 0.0081819695781 * S_RFMstat + 1.19338523211724 * S_RMntFrq +
-4.46436997560659 * S_Recency + -2.03251171372039 * S_Teenhome ;
2462174   +   H1x1_5  =    -1.03227948250072 * S_AcceptedCmpTotal
2462175   +          +     0.25510562405413 * S_Age  +     0.11938172756061 * S_Frq
2462176   +          +    -0.88855927472898 * S_Income  +    -0.98732962014399 *
2462177   +        S_Kidhome  +     0.57537935682752 * S_Mnt  +     0.07702692666996 *
2462178   +        S_MntFishProducts  +     0.69541223905843 * S_MntFruits
2462179   +          +    -0.26720187465927 * S_MntGoldProds  +    -0.03938241662919 *
2462180   +        S_MntMeatProducts  +     1.08781093588885 * S_MntSweetProducts
2462181   +          +     1.16253823123182 * S_MntWines  +    -1.60607722651025 *
2462182   +        S_MonthsAsCustomer  +    -1.69043794225498 * S_NumCatalogPurchases
2462183   +          +    -2.62220616180571 * S_NumDealsPurchases
2462184   +          +    -0.51737930835331 * S_NumDistPurchases
2462185   +          +     0.88655783158133 * S_NumStorePurchases
2462186   +          +     0.35132468809969 * S_NumWebPurchases
2462187   +          +     -1.6320869675862 * S_NumWebVisitsMonth
2462188   +          +     0.33776958473405 * S_RFMstat  +    -0.42290181425075 *
2462189   +        S_RMntFrq  +     1.06226028677401 * S_Recency
2462190   +          +     1.11855899514962 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.03227948250072 * S_AcceptedCmpTotal + 0.25510562405413 *
S_Age + 0.11938172756061 * S_Frq + -0.88855927472898 * S_Income + -0.98732962014399 *
S_Kidhome + 0.57537935682752 * S_Mnt + 0.07702692666996 * S_MntFishProducts + 0.69541223905843
* S_MntFruits + -0.26720187465927 * S_MntGoldProds + -0.03938241662919 * S_MntMeatProducts +
1.08781093588885 * S_MntSweetProducts + 1.16253823123182 * S_MntWines + -1.60607722651025 *
S_MonthsAsCustomer + -1.69043794225498 * S_NumCatalogPurchases + -2.62220616180571 *
S_NumDealsPurchases + -0.51737930835331 * S_NumDistPurchases + 0.88655783158133 *
S_NumStorePurchases + 0.35132468809969 * S_NumWebPurchases + -1.6320869675862 *
S_NumWebVisitsMonth + 0.33776958473405 * S_RFMstat + -0.42290181425075 * S_RMntFrq +
1.06226028677401 * S_Recency + 1.11855899514962 * S_Teenhome ;
2462191   +   H1x1_1  = H1x1_1  +     0.53637737817097 * AcceptedCmp10
2462192   +          +    -1.85405146733588 * AcceptedCmp20  +    -1.47621046566649 *
2462193   +        AcceptedCmp30  +    -1.37767318086242 * AcceptedCmp40
2462194   +          +    -0.96348396070145 * AcceptedCmp50  +    -1.30976546088379 *
2462195   +        Complain0  +    -0.54848314184314 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.53637737817097 * AcceptedCmp10 + -1.85405146733588 *
AcceptedCmp20 + -1.47621046566649 * AcceptedCmp30 + -1.37767318086242 * AcceptedCmp40 +
-0.96348396070145 * AcceptedCmp50 + -1.30976546088379 * Complain0 + -0.54848314184314 *
HigherEducationBinary0 ;
2462196   +   H1x1_2  = H1x1_2  +     0.18445380584184 * AcceptedCmp10
2462197   +          +    -0.69257274561716 * AcceptedCmp20  +     0.17226038285159 *
2462198   +        AcceptedCmp30  +    -1.06145995435722 * AcceptedCmp40
2462199   +          +     1.23459262841144 * AcceptedCmp50  +    -0.14674063302587 *
2462200   +        Complain0  +    -1.08422405648698 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.18445380584184 * AcceptedCmp10 + -0.69257274561716 *
AcceptedCmp20 + 0.17226038285159 * AcceptedCmp30 + -1.06145995435722 * AcceptedCmp40 +
1.23459262841144 * AcceptedCmp50 + -0.14674063302587 * Complain0 + -1.08422405648698 *
HigherEducationBinary0 ;
2462201   +   H1x1_3  = H1x1_3  +     0.81272808689375 * AcceptedCmp10
2462202   +          +    -0.37057950605918 * AcceptedCmp20  +    -1.75364708883985 *
2462203   +        AcceptedCmp30  +     -1.9879502333289 * AcceptedCmp40
2462204   +          +     2.82649108460951 * AcceptedCmp50  +    -0.14219031901768 *
2462205   +        Complain0  +     -0.5514346363694 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.81272808689375 * AcceptedCmp10 + -0.37057950605918 *
AcceptedCmp20 + -1.75364708883985 * AcceptedCmp30 + -1.9879502333289 * AcceptedCmp40 +
2.82649108460951 * AcceptedCmp50 + -0.14219031901768 * Complain0 + -0.5514346363694 *
HigherEducationBinary0 ;
2462206   +   H1x1_4  = H1x1_4  +    -1.12354567881562 * AcceptedCmp10
2462207   +          +    -1.64564861831306 * AcceptedCmp20  +    -1.84950171464501 *
2462208   +        AcceptedCmp30  +    -2.60581164673686 * AcceptedCmp40
2462209   +          +    -0.53568003317161 * AcceptedCmp50  +    -0.13929928866767 *
2462210   +        Complain0  +     1.18053116626218 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -1.12354567881562 * AcceptedCmp10 + -1.64564861831306
* AcceptedCmp20 + -1.84950171464501 * AcceptedCmp30 + -2.60581164673686 * AcceptedCmp40 +
-0.53568003317161 * AcceptedCmp50 + -0.13929928866767 * Complain0 + 1.18053116626218 *
HigherEducationBinary0 ;
2462211   +   H1x1_5  = H1x1_5  +     -0.3006993305802 * AcceptedCmp10
2462212   +          +    -0.67101949915278 * AcceptedCmp20  +     0.48950637221178 *
2462213   +        AcceptedCmp30  +     0.25937105093078 * AcceptedCmp40
2462214   +          +       0.650714225549 * AcceptedCmp50  +    -0.53543482850089 *
2462215   +        Complain0  +     0.62014708316206 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.3006993305802 * AcceptedCmp10 + -0.67101949915278 *
AcceptedCmp20 + 0.48950637221178 * AcceptedCmp30 + 0.25937105093078 * AcceptedCmp40 +
0.650714225549 * AcceptedCmp50 + -0.53543482850089 * Complain0 + 0.62014708316206 *
HigherEducationBinary0 ;
2462216   +   H1x1_1  = H1x1_1  +     0.78710932360637 * Education2n_Cycle
2462217   +          +    -0.34656604802235 * EducationBasic  +     0.11820082193221 *
2462218   +        EducationGraduation  +     1.42539292513854 * EducationMaster
2462219   +          +     0.34809919741136 * Marital_StatusDivorced
2462220   +          +    -0.26594093535929 * Marital_StatusMarried
2462221   +          +     0.70249715999987 * Marital_StatusSingle
2462222   +          +    -0.45710525283449 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.78710932360637 * Education2n_Cycle +
-0.34656604802235 * EducationBasic + 0.11820082193221 * EducationGraduation + 1.42539292513854
* EducationMaster + 0.34809919741136 * Marital_StatusDivorced + -0.26594093535929 *
Marital_StatusMarried + 0.70249715999987 * Marital_StatusSingle + -0.45710525283449 *
Marital_StatusTogether ;
2462223   +   H1x1_2  = H1x1_2  +    -1.00496261512915 * Education2n_Cycle
2462224   +          +     0.66783492956492 * EducationBasic  +     0.91185122922538 *
2462225   +        EducationGraduation  +    -0.28204692640004 * EducationMaster
2462226   +          +    -0.20448765627193 * Marital_StatusDivorced
2462227   +          +     1.73231344674733 * Marital_StatusMarried
2462228   +          +    -0.70956480480373 * Marital_StatusSingle
2462229   +          +      1.0926428215879 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -1.00496261512915 * Education2n_Cycle +
0.66783492956492 * EducationBasic + 0.91185122922538 * EducationGraduation + -0.28204692640004
* EducationMaster + -0.20448765627193 * Marital_StatusDivorced + 1.73231344674733 *
Marital_StatusMarried + -0.70956480480373 * Marital_StatusSingle + 1.0926428215879 *
Marital_StatusTogether ;
2462230   +   H1x1_3  = H1x1_3  +    -0.06222681334412 * Education2n_Cycle
2462231   +          +    -0.00009122618999 * EducationBasic  +    -0.07444046529217 *
2462232   +        EducationGraduation  +     1.01284161768787 * EducationMaster
2462233   +          +     0.30333818684353 * Marital_StatusDivorced
2462234   +          +    -1.44603535988199 * Marital_StatusMarried
2462235   +          +     0.48409598426383 * Marital_StatusSingle
2462236   +          +    -1.14528682521622 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.06222681334412 * Education2n_Cycle +
-0.00009122618999 * EducationBasic + -0.07444046529217 * EducationGraduation +
1.01284161768787 * EducationMaster + 0.30333818684353 * Marital_StatusDivorced +
-1.44603535988199 * Marital_StatusMarried + 0.48409598426383 * Marital_StatusSingle +
-1.14528682521622 * Marital_StatusTogether ;
2462237   +   H1x1_4  = H1x1_4  +    -0.92316818310935 * Education2n_Cycle
2462238   +          +     0.93590924020503 * EducationBasic  +     0.36762108040277 *
2462239   +        EducationGraduation  +    -1.17735200022013 * EducationMaster
2462240   +          +     -1.5342907846297 * Marital_StatusDivorced
2462241   +          +    -1.79544684592172 * Marital_StatusMarried
2462242   +          +     0.65604313645117 * Marital_StatusSingle
2462243   +          +    -2.08172869142628 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.92316818310935 * Education2n_Cycle +
0.93590924020503 * EducationBasic + 0.36762108040277 * EducationGraduation + -1.17735200022013
* EducationMaster + -1.5342907846297 * Marital_StatusDivorced + -1.79544684592172 *
Marital_StatusMarried + 0.65604313645117 * Marital_StatusSingle + -2.08172869142628 *
Marital_StatusTogether ;
2462244   +   H1x1_5  = H1x1_5  +    -0.56328800945753 * Education2n_Cycle
2462245   +          +    -0.06918346311418 * EducationBasic  +     -1.5176897786776 *
2462246   +        EducationGraduation  +     0.09618331198762 * EducationMaster
2462247   +          +    -3.97940893560267 * Marital_StatusDivorced
2462248   +          +      3.5880254142663 * Marital_StatusMarried
2462249   +          +     -2.9897737730927 * Marital_StatusSingle
2462250   +          +     3.75098376776525 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.56328800945753 * Education2n_Cycle +
-0.06918346311418 * EducationBasic + -1.5176897786776 * EducationGraduation + 0.09618331198762
* EducationMaster + -3.97940893560267 * Marital_StatusDivorced + 3.5880254142663 *
Marital_StatusMarried + -2.9897737730927 * Marital_StatusSingle + 3.75098376776525 *
Marital_StatusTogether ;
2462251   +   H1x1_1  =    -2.89135496095875 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -2.89135496095875 + H1x1_1 ;
2462252   +   H1x1_2  =     0.39943637099295 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.39943637099295 + H1x1_2 ;
2462253   +   H1x1_3  =    -1.08093114818147 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -1.08093114818147 + H1x1_3 ;
2462254   +   H1x1_4  =    -3.29426643182948 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -3.29426643182948 + H1x1_4 ;
2462255   +   H1x1_5  =    -1.76822552726746 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.76822552726746 + H1x1_5 ;
2462256   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2462257   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2462258   +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
2462259   +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
2462260   +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
2462261   +   H1x1_4  = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
2462262   +   H1x1_5  = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_5 = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
2462263   +END;
MPRINT(EM_DIAGRAM):   END;
2462264   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2462265   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2462266   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2462267   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2462268   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2462269   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
2462270   +END;
MPRINT(EM_DIAGRAM):   END;
2462271   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2462272   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
2462273   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2462274   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2462275   +   H1x2_1  =     1.01981866144831 * S_AcceptedCmpTotal
2462276   +          +    -1.47346125364319 * S_Age  +    -0.08669650492194 * S_Frq
2462277   +          +    -0.51585471637562 * S_Income  +     1.40711190452923 *
2462278   +        S_Kidhome  +    -0.21341957199148 * S_Mnt  +    -0.31211158173505 *
2462279   +        S_MntFishProducts  +    -0.77126486046129 * S_MntFruits
2462280   +          +     -0.4503905849175 * S_MntGoldProds  +     1.01090165857015 *
2462281   +        S_MntMeatProducts  +    -0.05554268249583 * S_MntSweetProducts
2462282   +          +     2.72203992871966 * S_MntWines  +    -0.46212144021719 *
2462283   +        S_MonthsAsCustomer  +    -0.10495120677935 * S_NumCatalogPurchases
2462284   +          +     0.07279889333775 * S_NumDealsPurchases
2462285   +          +     0.07542203992452 * S_NumDistPurchases
2462286   +          +     0.16296239303342 * S_NumStorePurchases
2462287   +          +     1.59193921229231 * S_NumWebPurchases
2462288   +          +    -0.35227839362603 * S_NumWebVisitsMonth
2462289   +          +      1.3224105019117 * S_RFMstat  +    -0.77035988511057 *
2462290   +        S_RMntFrq  +     0.43315770276588 * S_Recency
2462291   +          +     0.43447147039235 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.01981866144831 * S_AcceptedCmpTotal + -1.47346125364319 *
S_Age + -0.08669650492194 * S_Frq + -0.51585471637562 * S_Income + 1.40711190452923 *
S_Kidhome + -0.21341957199148 * S_Mnt + -0.31211158173505 * S_MntFishProducts +
-0.77126486046129 * S_MntFruits + -0.4503905849175 * S_MntGoldProds + 1.01090165857015 *
S_MntMeatProducts + -0.05554268249583 * S_MntSweetProducts + 2.72203992871966 * S_MntWines +
-0.46212144021719 * S_MonthsAsCustomer + -0.10495120677935 * S_NumCatalogPurchases +
0.07279889333775 * S_NumDealsPurchases + 0.07542203992452 * S_NumDistPurchases +
0.16296239303342 * S_NumStorePurchases + 1.59193921229231 * S_NumWebPurchases +
-0.35227839362603 * S_NumWebVisitsMonth + 1.3224105019117 * S_RFMstat + -0.77035988511057 *
S_RMntFrq + 0.43315770276588 * S_Recency + 0.43447147039235 * S_Teenhome ;
2462292   +   H1x2_2  =    -0.07629675162821 * S_AcceptedCmpTotal
2462293   +          +     0.81684969971216 * S_Age  +     0.52870818801428 * S_Frq
2462294   +          +     0.15358022485378 * S_Income  +    -0.64458879887927 *
2462295   +        S_Kidhome  +    -2.12225648421746 * S_Mnt  +     1.05240671673302 *
2462296   +        S_MntFishProducts  +    -0.89595336397918 * S_MntFruits
2462297   +          +    -0.28950558043577 * S_MntGoldProds  +     0.30996043499478 *
2462298   +        S_MntMeatProducts  +     1.27676485470274 * S_MntSweetProducts
2462299   +          +    -1.30045112439384 * S_MntWines  +     1.36110971826862 *
2462300   +        S_MonthsAsCustomer  +     -0.1778244163518 * S_NumCatalogPurchases
2462301   +          +    -0.37456959251084 * S_NumDealsPurchases
2462302   +          +    -1.15252469975668 * S_NumDistPurchases
2462303   +          +    -1.39822501888899 * S_NumStorePurchases
2462304   +          +    -0.32777847360723 * S_NumWebPurchases
2462305   +          +     0.84026499832926 * S_NumWebVisitsMonth
2462306   +          +    -1.47180193258497 * S_RFMstat  +     0.18801983980439 *
2462307   +        S_RMntFrq  +     1.21016626691186 * S_Recency
2462308   +          +    -0.82943594788748 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.07629675162821 * S_AcceptedCmpTotal + 0.81684969971216 *
S_Age + 0.52870818801428 * S_Frq + 0.15358022485378 * S_Income + -0.64458879887927 * S_Kidhome
+ -2.12225648421746 * S_Mnt + 1.05240671673302 * S_MntFishProducts + -0.89595336397918 *
S_MntFruits + -0.28950558043577 * S_MntGoldProds + 0.30996043499478 * S_MntMeatProducts +
1.27676485470274 * S_MntSweetProducts + -1.30045112439384 * S_MntWines + 1.36110971826862 *
S_MonthsAsCustomer + -0.1778244163518 * S_NumCatalogPurchases + -0.37456959251084 *
S_NumDealsPurchases + -1.15252469975668 * S_NumDistPurchases + -1.39822501888899 *
S_NumStorePurchases + -0.32777847360723 * S_NumWebPurchases + 0.84026499832926 *
S_NumWebVisitsMonth + -1.47180193258497 * S_RFMstat + 0.18801983980439 * S_RMntFrq +
1.21016626691186 * S_Recency + -0.82943594788748 * S_Teenhome ;
2462309   +   H1x2_3  =    -0.06736000283511 * S_AcceptedCmpTotal
2462310   +          +    -0.47270148030219 * S_Age  +      1.1959707178877 * S_Frq
2462311   +          +    -1.40081626653738 * S_Income  +     0.35085595025526 *
2462312   +        S_Kidhome  +    -0.43652344252181 * S_Mnt  +     1.12197802721591 *
2462313   +        S_MntFishProducts  +     1.27079634537799 * S_MntFruits
2462314   +          +    -0.03023683680758 * S_MntGoldProds  +     0.51289568088141 *
2462315   +        S_MntMeatProducts  +     1.12894900622408 * S_MntSweetProducts
2462316   +          +    -0.66940205871871 * S_MntWines  +    -1.57211003055303 *
2462317   +        S_MonthsAsCustomer  +     1.47778465205569 * S_NumCatalogPurchases
2462318   +          +     1.14090099538367 * S_NumDealsPurchases
2462319   +          +     -0.2600155774492 * S_NumDistPurchases
2462320   +          +     1.31362002392113 * S_NumStorePurchases
2462321   +          +     1.31465307763555 * S_NumWebPurchases
2462322   +          +    -0.18041623858351 * S_NumWebVisitsMonth
2462323   +          +    -0.12685084546738 * S_RFMstat  +     0.43500462904027 *
2462324   +        S_RMntFrq  +    -0.81910738140729 * S_Recency
2462325   +          +    -0.61936793661609 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.06736000283511 * S_AcceptedCmpTotal + -0.47270148030219 *
S_Age + 1.1959707178877 * S_Frq + -1.40081626653738 * S_Income + 0.35085595025526 * S_Kidhome
+ -0.43652344252181 * S_Mnt + 1.12197802721591 * S_MntFishProducts + 1.27079634537799 *
S_MntFruits + -0.03023683680758 * S_MntGoldProds + 0.51289568088141 * S_MntMeatProducts +
1.12894900622408 * S_MntSweetProducts + -0.66940205871871 * S_MntWines + -1.57211003055303 *
S_MonthsAsCustomer + 1.47778465205569 * S_NumCatalogPurchases + 1.14090099538367 *
S_NumDealsPurchases + -0.2600155774492 * S_NumDistPurchases + 1.31362002392113 *
S_NumStorePurchases + 1.31465307763555 * S_NumWebPurchases + -0.18041623858351 *
S_NumWebVisitsMonth + -0.12685084546738 * S_RFMstat + 0.43500462904027 * S_RMntFrq +
-0.81910738140729 * S_Recency + -0.61936793661609 * S_Teenhome ;
2462326   +   H1x2_4  =    -0.31415783692162 * S_AcceptedCmpTotal
2462327   +          +     0.11061423227332 * S_Age  +    -0.65722939551233 * S_Frq
2462328   +          +     -0.9063192568986 * S_Income  +      0.4013752851291 *
2462329   +        S_Kidhome  +    -1.06795963585271 * S_Mnt  +     0.24969441019479 *
2462330   +        S_MntFishProducts  +    -0.63550038240549 * S_MntFruits
2462331   +          +     1.04454010114015 * S_MntGoldProds  +     0.89912571026653 *
2462332   +        S_MntMeatProducts  +    -1.92356868621234 * S_MntSweetProducts
2462333   +          +     -1.8642245725538 * S_MntWines  +     0.13416556054779 *
2462334   +        S_MonthsAsCustomer  +    -1.01272407075887 * S_NumCatalogPurchases
2462335   +          +     1.06486073796679 * S_NumDealsPurchases
2462336   +          +    -0.04890191247577 * S_NumDistPurchases
2462337   +          +     0.86871320720698 * S_NumStorePurchases
2462338   +          +     0.03183587281884 * S_NumWebPurchases
2462339   +          +     -0.4863802923315 * S_NumWebVisitsMonth
2462340   +          +    -1.38034657666878 * S_RFMstat  +    -0.73640242597195 *
2462341   +        S_RMntFrq  +     0.17186861211542 * S_Recency
2462342   +          +    -0.39595339111048 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.31415783692162 * S_AcceptedCmpTotal + 0.11061423227332 *
S_Age + -0.65722939551233 * S_Frq + -0.9063192568986 * S_Income + 0.4013752851291 * S_Kidhome
+ -1.06795963585271 * S_Mnt + 0.24969441019479 * S_MntFishProducts + -0.63550038240549 *
S_MntFruits + 1.04454010114015 * S_MntGoldProds + 0.89912571026653 * S_MntMeatProducts +
-1.92356868621234 * S_MntSweetProducts + -1.8642245725538 * S_MntWines + 0.13416556054779 *
S_MonthsAsCustomer + -1.01272407075887 * S_NumCatalogPurchases + 1.06486073796679 *
S_NumDealsPurchases + -0.04890191247577 * S_NumDistPurchases + 0.86871320720698 *
S_NumStorePurchases + 0.03183587281884 * S_NumWebPurchases + -0.4863802923315 *
S_NumWebVisitsMonth + -1.38034657666878 * S_RFMstat + -0.73640242597195 * S_RMntFrq +
0.17186861211542 * S_Recency + -0.39595339111048 * S_Teenhome ;
2462343   +   H1x2_5  =     1.68315669988315 * S_AcceptedCmpTotal
2462344   +          +    -1.67467335764173 * S_Age  +     1.29921539173109 * S_Frq
2462345   +          +    -0.52305600367899 * S_Income  +     1.06261291858944 *
2462346   +        S_Kidhome  +     1.77049882170904 * S_Mnt  +    -0.27692609509601 *
2462347   +        S_MntFishProducts  +    -1.23166107817727 * S_MntFruits
2462348   +          +    -2.21476398466362 * S_MntGoldProds  +     1.02542528622621 *
2462349   +        S_MntMeatProducts  +     1.04913114036094 * S_MntSweetProducts
2462350   +          +     0.30606520702636 * S_MntWines  +    -1.15158074964406 *
2462351   +        S_MonthsAsCustomer  +     0.77918810586275 * S_NumCatalogPurchases
2462352   +          +    -0.01160267590349 * S_NumDealsPurchases
2462353   +          +    -0.92773075463083 * S_NumDistPurchases
2462354   +          +    -0.83326680533995 * S_NumStorePurchases
2462355   +          +    -1.16991058954473 * S_NumWebPurchases
2462356   +          +    -2.07771165573723 * S_NumWebVisitsMonth
2462357   +          +     0.59832456826177 * S_RFMstat  +     0.08151078945291 *
2462358   +        S_RMntFrq  +     0.80165981122986 * S_Recency
2462359   +          +     1.41798811088435 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.68315669988315 * S_AcceptedCmpTotal + -1.67467335764173 *
S_Age + 1.29921539173109 * S_Frq + -0.52305600367899 * S_Income + 1.06261291858944 * S_Kidhome
+ 1.77049882170904 * S_Mnt + -0.27692609509601 * S_MntFishProducts + -1.23166107817727 *
S_MntFruits + -2.21476398466362 * S_MntGoldProds + 1.02542528622621 * S_MntMeatProducts +
1.04913114036094 * S_MntSweetProducts + 0.30606520702636 * S_MntWines + -1.15158074964406 *
S_MonthsAsCustomer + 0.77918810586275 * S_NumCatalogPurchases + -0.01160267590349 *
S_NumDealsPurchases + -0.92773075463083 * S_NumDistPurchases + -0.83326680533995 *
S_NumStorePurchases + -1.16991058954473 * S_NumWebPurchases + -2.07771165573723 *
S_NumWebVisitsMonth + 0.59832456826177 * S_RFMstat + 0.08151078945291 * S_RMntFrq +
0.80165981122986 * S_Recency + 1.41798811088435 * S_Teenhome ;
2462360   +   H1x2_1  = H1x2_1  +    -0.16600737981926 * AcceptedCmp10
2462361   +          +     1.41264623988567 * AcceptedCmp20  +      1.0446306999234 *
2462362   +        AcceptedCmp30  +    -1.00688604631169 * AcceptedCmp40
2462363   +          +     0.64523782235527 * AcceptedCmp50  +    -1.76623980391232 *
2462364   +        Complain0  +     1.64644530449125 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.16600737981926 * AcceptedCmp10 + 1.41264623988567 *
AcceptedCmp20 + 1.0446306999234 * AcceptedCmp30 + -1.00688604631169 * AcceptedCmp40 +
0.64523782235527 * AcceptedCmp50 + -1.76623980391232 * Complain0 + 1.64644530449125 *
HigherEducationBinary0 ;
2462365   +   H1x2_2  = H1x2_2  +    -0.39493094663506 * AcceptedCmp10
2462366   +          +    -0.99095404154277 * AcceptedCmp20  +    -0.81166937096774 *
2462367   +        AcceptedCmp30  +     0.14520361414777 * AcceptedCmp40
2462368   +          +    -1.54302055254785 * AcceptedCmp50  +    -0.60600550413714 *
2462369   +        Complain0  +    -3.04730224174859 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.39493094663506 * AcceptedCmp10 + -0.99095404154277
* AcceptedCmp20 + -0.81166937096774 * AcceptedCmp30 + 0.14520361414777 * AcceptedCmp40 +
-1.54302055254785 * AcceptedCmp50 + -0.60600550413714 * Complain0 + -3.04730224174859 *
HigherEducationBinary0 ;
2462370   +   H1x2_3  = H1x2_3  +      1.8650016934441 * AcceptedCmp10
2462371   +          +     0.85335394099291 * AcceptedCmp20  +     0.47327521312159 *
2462372   +        AcceptedCmp30  +    -2.64862753506152 * AcceptedCmp40
2462373   +          +     0.65827168680229 * AcceptedCmp50  +     0.45516433167059 *
2462374   +        Complain0  +    -0.62891111222764 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 1.8650016934441 * AcceptedCmp10 + 0.85335394099291 *
AcceptedCmp20 + 0.47327521312159 * AcceptedCmp30 + -2.64862753506152 * AcceptedCmp40 +
0.65827168680229 * AcceptedCmp50 + 0.45516433167059 * Complain0 + -0.62891111222764 *
HigherEducationBinary0 ;
2462375   +   H1x2_4  = H1x2_4  +    -0.31781332022679 * AcceptedCmp10
2462376   +          +    -0.35773084257089 * AcceptedCmp20  +      0.0486072265688 *
2462377   +        AcceptedCmp30  +     1.50494203860483 * AcceptedCmp40
2462378   +          +     0.00499691981651 * AcceptedCmp50  +    -0.29977032190776 *
2462379   +        Complain0  +     0.76473087756218 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + -0.31781332022679 * AcceptedCmp10 + -0.35773084257089
* AcceptedCmp20 + 0.0486072265688 * AcceptedCmp30 + 1.50494203860483 * AcceptedCmp40 +
0.00499691981651 * AcceptedCmp50 + -0.29977032190776 * Complain0 + 0.76473087756218 *
HigherEducationBinary0 ;
2462380   +   H1x2_5  = H1x2_5  +     -0.4639041544815 * AcceptedCmp10
2462381   +          +    -1.28977231764453 * AcceptedCmp20  +    -0.03597660273531 *
2462382   +        AcceptedCmp30  +     0.17848986397338 * AcceptedCmp40
2462383   +          +     0.06649914015182 * AcceptedCmp50  +    -0.95633404051563 *
2462384   +        Complain0  +    -0.62555630659121 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + -0.4639041544815 * AcceptedCmp10 + -1.28977231764453 *
AcceptedCmp20 + -0.03597660273531 * AcceptedCmp30 + 0.17848986397338 * AcceptedCmp40 +
0.06649914015182 * AcceptedCmp50 + -0.95633404051563 * Complain0 + -0.62555630659121 *
HigherEducationBinary0 ;
2462385   +   H1x2_1  = H1x2_1  +    -1.75926153465974 * Education2n_Cycle
2462386   +          +     0.96255168005018 * EducationBasic  +     -1.2029563052774 *
2462387   +        EducationGraduation  +    -0.22397098444024 * EducationMaster
2462388   +          +    -0.10361472385198 * Marital_StatusDivorced
2462389   +          +     0.05574820877885 * Marital_StatusMarried
2462390   +          +     0.13130988205279 * Marital_StatusSingle
2462391   +          +    -1.51165564425323 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -1.75926153465974 * Education2n_Cycle +
0.96255168005018 * EducationBasic + -1.2029563052774 * EducationGraduation + -0.22397098444024
* EducationMaster + -0.10361472385198 * Marital_StatusDivorced + 0.05574820877885 *
Marital_StatusMarried + 0.13130988205279 * Marital_StatusSingle + -1.51165564425323 *
Marital_StatusTogether ;
2462392   +   H1x2_2  = H1x2_2  +     1.73281005101474 * Education2n_Cycle
2462393   +          +    -0.51397811328576 * EducationBasic  +     1.64296402934617 *
2462394   +        EducationGraduation  +     1.44983505587452 * EducationMaster
2462395   +          +      0.0059353523794 * Marital_StatusDivorced
2462396   +          +    -0.59379435051653 * Marital_StatusMarried
2462397   +          +    -1.93587108708999 * Marital_StatusSingle
2462398   +          +     2.02868236823401 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 1.73281005101474 * Education2n_Cycle +
-0.51397811328576 * EducationBasic + 1.64296402934617 * EducationGraduation + 1.44983505587452
* EducationMaster + 0.0059353523794 * Marital_StatusDivorced + -0.59379435051653 *
Marital_StatusMarried + -1.93587108708999 * Marital_StatusSingle + 2.02868236823401 *
Marital_StatusTogether ;
2462399   +   H1x2_3  = H1x2_3  +     0.11852280587389 * Education2n_Cycle
2462400   +          +    -0.87963137637159 * EducationBasic  +      0.3212539101977 *
2462401   +        EducationGraduation  +     0.16497026569775 * EducationMaster
2462402   +          +    -0.74333797840386 * Marital_StatusDivorced
2462403   +          +    -0.93061135117658 * Marital_StatusMarried
2462404   +          +     1.04024182655844 * Marital_StatusSingle
2462405   +          +     0.58313569749679 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.11852280587389 * Education2n_Cycle +
-0.87963137637159 * EducationBasic + 0.3212539101977 * EducationGraduation + 0.16497026569775
* EducationMaster + -0.74333797840386 * Marital_StatusDivorced + -0.93061135117658 *
Marital_StatusMarried + 1.04024182655844 * Marital_StatusSingle + 0.58313569749679 *
Marital_StatusTogether ;
2462406   +   H1x2_4  = H1x2_4  +     -1.2170050337036 * Education2n_Cycle
2462407   +          +    -0.83332588435502 * EducationBasic  +     0.43242117148542 *
2462408   +        EducationGraduation  +     1.71196178631559 * EducationMaster
2462409   +          +    -3.01050675344463 * Marital_StatusDivorced
2462410   +          +      0.1638723582239 * Marital_StatusMarried
2462411   +          +     0.94548468360304 * Marital_StatusSingle
2462412   +          +    -0.67333048623615 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + -1.2170050337036 * Education2n_Cycle +
-0.83332588435502 * EducationBasic + 0.43242117148542 * EducationGraduation + 1.71196178631559
* EducationMaster + -3.01050675344463 * Marital_StatusDivorced + 0.1638723582239 *
Marital_StatusMarried + 0.94548468360304 * Marital_StatusSingle + -0.67333048623615 *
Marital_StatusTogether ;
2462413   +   H1x2_5  = H1x2_5  +    -0.66774344191467 * Education2n_Cycle
2462414   +          +     0.75591270317285 * EducationBasic  +    -0.29337325355435 *
2462415   +        EducationGraduation  +     0.57450456442662 * EducationMaster
2462416   +          +    -1.37013926274158 * Marital_StatusDivorced
2462417   +          +    -0.34168970042779 * Marital_StatusMarried
2462418   +          +     0.63383683543962 * Marital_StatusSingle
2462419   +          +     0.75118887766443 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + -0.66774344191467 * Education2n_Cycle +
0.75591270317285 * EducationBasic + -0.29337325355435 * EducationGraduation + 0.57450456442662
* EducationMaster + -1.37013926274158 * Marital_StatusDivorced + -0.34168970042779 *
Marital_StatusMarried + 0.63383683543962 * Marital_StatusSingle + 0.75118887766443 *
Marital_StatusTogether ;
2462420   +   H1x2_1  =    -1.05245414685459 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -1.05245414685459 + H1x2_1 ;
2462421   +   H1x2_2  =    -2.03581716915326 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -2.03581716915326 + H1x2_2 ;
2462422   +   H1x2_3  =    -0.95118365599668 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.95118365599668 + H1x2_3 ;
2462423   +   H1x2_4  =    -1.36171328515396 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -1.36171328515396 + H1x2_4 ;
2462424   +   H1x2_5  =    -0.09438724866767 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.09438724866767 + H1x2_5 ;
2462425   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2462426   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2462427   +   H1x2_1  = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
2462428   +   H1x2_2  = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_2 = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
2462429   +   H1x2_3  = 1.0 / (1.0 + EXP(MIN( - H1x2_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_3 = 1.0 / (1.0 + EXP(MIN( - H1x2_3 , _EXP_BAR)));
2462430   +   H1x2_4  = 1.0 / (1.0 + EXP(MIN( - H1x2_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_4 = 1.0 / (1.0 + EXP(MIN( - H1x2_4 , _EXP_BAR)));
2462431   +   H1x2_5  = 1.0 / (1.0 + EXP(MIN( - H1x2_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.0 / (1.0 + EXP(MIN( - H1x2_5 , _EXP_BAR)));
2462432   +END;
MPRINT(EM_DIAGRAM):   END;
2462433   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2462434   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
2462435   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
2462436   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
2462437   +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
2462438   +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
2462439   +END;
MPRINT(EM_DIAGRAM):   END;
2462440   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2462441   +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
2462442   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2462443   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2462444   +   H2x1_1  =    -3.66869890196477 * H1x1_1  +     3.66276995899936 * H1x1_2
2462445   +          +      4.9852243803889 * H1x1_3  +    -3.40922134517979 * H1x1_4
2462446   +          +     2.26435924995065 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -3.66869890196477 * H1x1_1 + 3.66276995899936 * H1x1_2 +
4.9852243803889 * H1x1_3 + -3.40922134517979 * H1x1_4 + 2.26435924995065 * H1x1_5 ;
2462447   +   H2x1_2  =     1.35296027814603 * H1x1_1  +     0.16236277762099 * H1x1_2
2462448   +          +      0.4094634018093 * H1x1_3  +    -1.05233334297087 * H1x1_4
2462449   +          +    -0.51735435825901 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.35296027814603 * H1x1_1 + 0.16236277762099 * H1x1_2 +
0.4094634018093 * H1x1_3 + -1.05233334297087 * H1x1_4 + -0.51735435825901 * H1x1_5 ;
2462450   +   H2x1_3  =    -3.57467050540101 * H1x1_1  +     1.96738498758928 * H1x1_2
2462451   +          +      3.1519435691133 * H1x1_3  +    -2.73180541318793 * H1x1_4
2462452   +          +     2.53621803266955 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -3.57467050540101 * H1x1_1 + 1.96738498758928 * H1x1_2 +
3.1519435691133 * H1x1_3 + -2.73180541318793 * H1x1_4 + 2.53621803266955 * H1x1_5 ;
2462453   +   H2x1_4  =    -1.77897865469649 * H1x1_1  +    -0.34371813002239 * H1x1_2
2462454   +          +     0.97655076671381 * H1x1_3  +    -0.53022688394362 * H1x1_4
2462455   +          +     1.78452647837415 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -1.77897865469649 * H1x1_1 + -0.34371813002239 * H1x1_2 +
0.97655076671381 * H1x1_3 + -0.53022688394362 * H1x1_4 + 1.78452647837415 * H1x1_5 ;
2462456   +   H2x1_5  =    -2.37976522756638 * H1x1_1  +     2.07473947277607 * H1x1_2
2462457   +          +      3.6114905073808 * H1x1_3  +    -4.57668209905758 * H1x1_4
2462458   +          +     2.97931581645784 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -2.37976522756638 * H1x1_1 + 2.07473947277607 * H1x1_2 +
3.6114905073808 * H1x1_3 + -4.57668209905758 * H1x1_4 + 2.97931581645784 * H1x1_5 ;
2462459   +   H2x1_1  = H2x1_1  +      0.5090021095213 * H1x2_1
2462460   +          +    -0.99996599039586 * H1x2_2  +     0.09317756017156 * H1x2_3
2462461   +          +     0.07646136890595 * H1x2_4  +    -0.86729455140311 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 0.5090021095213 * H1x2_1 + -0.99996599039586 * H1x2_2
+ 0.09317756017156 * H1x2_3 + 0.07646136890595 * H1x2_4 + -0.86729455140311 * H1x2_5 ;
2462462   +   H2x1_2  = H2x1_2  +     0.54458122713319 * H1x2_1
2462463   +          +    -1.01527351866283 * H1x2_2  +    -1.05264779960249 * H1x2_3
2462464   +          +     2.00891057398994 * H1x2_4  +     0.23877185330348 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 0.54458122713319 * H1x2_1 + -1.01527351866283 * H1x2_2
+ -1.05264779960249 * H1x2_3 + 2.00891057398994 * H1x2_4 + 0.23877185330348 * H1x2_5 ;
2462465   +   H2x1_3  = H2x1_3  +     0.45936122831356 * H1x2_1
2462466   +          +    -0.78158455560098 * H1x2_2  +    -0.93755507764598 * H1x2_3
2462467   +          +    -0.41290092050446 * H1x2_4  +    -1.08076286104858 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + 0.45936122831356 * H1x2_1 + -0.78158455560098 * H1x2_2
+ -0.93755507764598 * H1x2_3 + -0.41290092050446 * H1x2_4 + -1.08076286104858 * H1x2_5 ;
2462468   +   H2x1_4  = H2x1_4  +     0.95365620475779 * H1x2_1
2462469   +          +    -0.84100294393078 * H1x2_2  +     0.70463413466954 * H1x2_3
2462470   +          +     1.80542761219637 * H1x2_4  +     0.45881360213194 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 0.95365620475779 * H1x2_1 + -0.84100294393078 * H1x2_2
+ 0.70463413466954 * H1x2_3 + 1.80542761219637 * H1x2_4 + 0.45881360213194 * H1x2_5 ;
2462471   +   H2x1_5  = H2x1_5  +     0.59629215620441 * H1x2_1
2462472   +          +    -0.66300910076078 * H1x2_2  +     0.53748646350811 * H1x2_3
2462473   +          +     0.40402787748621 * H1x2_4  +    -0.68066387330661 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + 0.59629215620441 * H1x2_1 + -0.66300910076078 * H1x2_2
+ 0.53748646350811 * H1x2_3 + 0.40402787748621 * H1x2_4 + -0.68066387330661 * H1x2_5 ;
2462474   +   H2x1_1  =    -1.36901208947371 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -1.36901208947371 + H2x1_1 ;
2462475   +   H2x1_2  =     1.02513270875023 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.02513270875023 + H2x1_2 ;
2462476   +   H2x1_3  =     0.21017025934674 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 0.21017025934674 + H2x1_3 ;
2462477   +   H2x1_4  =    -1.15214364807652 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -1.15214364807652 + H2x1_4 ;
2462478   +   H2x1_5  =    -1.32590257108023 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -1.32590257108023 + H2x1_5 ;
2462479   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2462480   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2462481   +   H2x1_1  = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
2462482   +   H2x1_2  = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
2462483   +   H2x1_3  = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
2462484   +   H2x1_4  = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
2462485   +   H2x1_5  = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_5 = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
2462486   +END;
MPRINT(EM_DIAGRAM):   END;
2462487   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2462488   +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
2462489   +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
2462490   +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
2462491   +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
2462492   +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
2462493   +END;
MPRINT(EM_DIAGRAM):   END;
2462494   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2462495   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2462496   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2462497   +
2462498   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2462499   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2462500   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2462501   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2462502   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2462503   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2462504   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2462505   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2462506   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2462507   +end;
MPRINT(EM_DIAGRAM):   end;
2462508   +else do;
MPRINT(EM_DIAGRAM):   else do;
2462509   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2462510   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2462511   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2462512   +   end;
MPRINT(EM_DIAGRAM):   end;
2462513   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2462514   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2462515   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2462516   +   end;
MPRINT(EM_DIAGRAM):   end;
2462517   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2462518   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2462519   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2462520   +   end;
MPRINT(EM_DIAGRAM):   end;
2462521   +end;
MPRINT(EM_DIAGRAM):   end;
2462522   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2462523   +   P_DepVar1  =    -9.23664553457504 * H2x1_1  +     1.34611690798114 * H2x1_2
2462524   +          +    -6.67077102946651 * H2x1_3  +    -1.67245227685142 * H2x1_4
2462525   +          +    -7.67053346287177 * H2x1_5 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -9.23664553457504 * H2x1_1 + 1.34611690798114 * H2x1_2 +
-6.67077102946651 * H2x1_3 + -1.67245227685142 * H2x1_4 + -7.67053346287177 * H2x1_5 ;
2462526   +   P_DepVar1  =      3.4145227149582 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 3.4145227149582 + P_DepVar1 ;
2462527   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2462528   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2462529   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2462530   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2462531   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2462532   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2462533   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2462534   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2462535   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2462536   +END;
MPRINT(EM_DIAGRAM):   END;
2462537   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2462538   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2462539   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2462540   +END;
MPRINT(EM_DIAGRAM):   END;
2462541   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2462542   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2462543   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2462544   +END;
MPRINT(EM_DIAGRAM):   END;
2462545   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2462546   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2462547   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2462548   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2462549   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2462550   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2462551   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2462552   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2462553   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2462554   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2462555   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2462556   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2462557   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2462558   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2462559   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2462560   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2462561   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2462562   +END;
MPRINT(EM_DIAGRAM):   END;
2462563   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2462564   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2462565   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2462566   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2462567   +* Renaming variables for AutoNeural10;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural10;
2462568   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2462569   +* Renaming Posterior variables for AutoNeural10;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural10;
2462570   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2462571   +drop AutoNeural10_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural10_P_DepVar1;
2462572   +AutoNeural10_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural10_P_DepVar1 = P_DepVar1;
2462573   +drop AutoNeural10_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural10_P_DepVar0;
2462574   +AutoNeural10_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural10_P_DepVar0 = P_DepVar0;
2462575   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2462576   +* Renaming _WARN_ variable for AutoNeural10;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural10;
2462577   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2462578   +length AutoNeural10_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural10_WARN_ $4;
2462579   +drop AutoNeural10_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural10_WARN_;
2462580   +AutoNeural10_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural10_WARN_ = _WARN_;
2462581   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2462582   +* Ensmbl46: Maximum Posteriors of 5 models;
MPRINT(EM_DIAGRAM):   * Ensmbl46: Maximum Posteriors of 5 models;
2462583   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2462584   +_psum = 0;
MPRINT(EM_DIAGRAM):   _psum = 0;
2462585   +drop _psum _premainder;
MPRINT(EM_DIAGRAM):   drop _psum _premainder;
2462586   +P_DepVar1 = max(
2462587   +AutoNeural9_P_DepVar1 ,
2462588   +AutoNeural11_P_DepVar1 ,
2462589   +AutoNeural12_P_DepVar1 ,
2462590   +AutoNeural7_P_DepVar1 ,
2462591   +AutoNeural10_P_DepVar1
2462592   +);
MPRINT(EM_DIAGRAM):   P_DepVar1 = max( AutoNeural9_P_DepVar1 , AutoNeural11_P_DepVar1 ,
AutoNeural12_P_DepVar1 , AutoNeural7_P_DepVar1 , AutoNeural10_P_DepVar1 );
2462593   +_premainder =1 - _psum;
MPRINT(EM_DIAGRAM):   _premainder =1 - _psum;
2462594   +if P_DepVar1 > _premainder then do;
MPRINT(EM_DIAGRAM):   if P_DepVar1 > _premainder then do;
2462595   +P_DepVar1 = _premainder;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _premainder;
2462596   +end;
MPRINT(EM_DIAGRAM):   end;
2462597   +_psum + P_DepVar1;
MPRINT(EM_DIAGRAM):   _psum + P_DepVar1;
2462598   +P_DepVar0 = max(
2462599   +AutoNeural9_P_DepVar0 ,
2462600   +AutoNeural11_P_DepVar0 ,
2462601   +AutoNeural12_P_DepVar0 ,
2462602   +AutoNeural7_P_DepVar0 ,
2462603   +AutoNeural10_P_DepVar0
2462604   +);
MPRINT(EM_DIAGRAM):   P_DepVar0 = max( AutoNeural9_P_DepVar0 , AutoNeural11_P_DepVar0 ,
AutoNeural12_P_DepVar0 , AutoNeural7_P_DepVar0 , AutoNeural10_P_DepVar0 );
2462605   +_premainder =1 - _psum;
MPRINT(EM_DIAGRAM):   _premainder =1 - _psum;
2462606   +if P_DepVar0 > _premainder then do;
MPRINT(EM_DIAGRAM):   if P_DepVar0 > _premainder then do;
2462607   +P_DepVar0 = _premainder;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _premainder;
2462608   +end;
MPRINT(EM_DIAGRAM):   end;
2462609   +_psum + P_DepVar0;
MPRINT(EM_DIAGRAM):   _psum + P_DepVar0;
2462610   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2462611   +* Ensmbl46: Computing Classification Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl46: Computing Classification Vars;
2462612   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2462613   +length I_DepVar $32;
MPRINT(EM_DIAGRAM):   length I_DepVar $32;
WARNING: Length of character variable I_DepVar has already been set.
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the
         length of a character variable.
2462614   +label I_DepVar = 'Into: DepVar';
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar';
2462615   +length _format $200;
MPRINT(EM_DIAGRAM):   length _format $200;
2462616   +drop _format;
MPRINT(EM_DIAGRAM):   drop _format;
2462617   +_format= ' ';
MPRINT(EM_DIAGRAM):   _format= ' ';
2462618   +_p_= 0;
MPRINT(EM_DIAGRAM):   _p_= 0;
2462619   +drop _p_;
MPRINT(EM_DIAGRAM):   drop _p_;
2462620   +if P_DepVar1 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar1 > _p_ then do;
2462621   +_p_= P_DepVar1;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar1;
2462622   +_format= '1';
MPRINT(EM_DIAGRAM):   _format= '1';
2462623   +end;
MPRINT(EM_DIAGRAM):   end;
2462624   +if P_DepVar0 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar0 > _p_ then do;
2462625   +_p_= P_DepVar0;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar0;
2462626   +_format= '0';
MPRINT(EM_DIAGRAM):   _format= '0';
2462627   +end;
MPRINT(EM_DIAGRAM):   end;
2462628   +%DMNORMCP(_format,I_DepVar);
MPRINT(DMNORMCP):   I_DepVar=dmnorm(_format,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2462629   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2462630   +* Ensmbl46: Producing Unformatted variable;
MPRINT(EM_DIAGRAM):   * Ensmbl46: Producing Unformatted variable;
2462631   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2462632   +label U_DepVar = "Unnormalized Into: DepVar";
MPRINT(EM_DIAGRAM):   label U_DepVar = "Unnormalized Into: DepVar";
2462633   +if I_DepVar = '1' then U_DepVar = 1;
MPRINT(EM_DIAGRAM):   if I_DepVar = '1' then U_DepVar = 1;
2462634   +else
2462635   +if I_DepVar = '0' then U_DepVar = 0;
MPRINT(EM_DIAGRAM):   else if I_DepVar = '0' then U_DepVar = 0;
2462636   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2462637   +* Ensmbl46: Computing _WARN_ Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl46: Computing _WARN_ Variable;
2462638   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2462639   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
2462640   +label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
2462641   +_WARN_ = '';
MPRINT(EM_DIAGRAM):   _WARN_ = '';
2462642   +if index(AUTONEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
2462642  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
2462643   +if index(AUTONEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
2462643  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
2462644   +if index(AUTONEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
2462644  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
2462645   +if index(AUTONEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
2462645  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
2462646   +if index(AUTONEURAL11_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
2462646  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
2462647   +if index(AUTONEURAL11_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
2462647  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
2462648   +if index(AUTONEURAL11_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
2462648  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
2462649   +if index(AUTONEURAL11_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
2462649  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
2462650   +if index(AUTONEURAL12_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
2462650  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
2462651   +if index(AUTONEURAL12_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
2462651  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
2462652   +if index(AUTONEURAL12_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
2462652  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
2462653   +if index(AUTONEURAL12_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
2462653  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
2462654   +if index(AUTONEURAL7_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
2462654  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL7_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
2462655   +if index(AUTONEURAL7_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
2462655  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL7_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
2462656   +if index(AUTONEURAL7_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
2462656  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL7_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
2462657   +if index(AUTONEURAL7_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
2462657  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL7_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
2462658   +if index(AUTONEURAL10_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
2462658  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL10_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
2462659   +if index(AUTONEURAL10_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
2462659  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL10_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
2462660   +if index(AUTONEURAL10_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
2462660  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL10_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
2462661   +if index(AUTONEURAL10_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
2462661  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL10_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
2462662   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2462663   +* Ensmbl46: Computing Residual Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl46: Computing Residual Vars;
2462664   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2462665   +if
2462666   +F_DepVar NE '1'
2462667   +AND F_DepVar NE '0'
2462668   +then do;
MPRINT(EM_DIAGRAM):   if F_DepVar NE '1' AND F_DepVar NE '0' then do;
2462669   +R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
2462670   +R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
2462671   +end;
MPRINT(EM_DIAGRAM):   end;
2462672   +else do;
MPRINT(EM_DIAGRAM):   else do;
2462673   +R_DepVar1 = -P_DepVar1;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1;
2462674   +R_DepVar0 = -P_DepVar0;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0;
2462675   +SELECT(F_DepVar);
MPRINT(EM_DIAGRAM):   SELECT(F_DepVar);
2462676   +WHEN('1') R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   WHEN('1') R_DepVar1 = R_DepVar1 +1;
2462677   +WHEN('0') R_DepVar0 = R_DepVar0 +1;
MPRINT(EM_DIAGRAM):   WHEN('0') R_DepVar0 = R_DepVar0 +1;
2462678   +OTHERWISE;
MPRINT(EM_DIAGRAM):   OTHERWISE;
2462679   +END;
MPRINT(EM_DIAGRAM):   END;
2462680   +END;
MPRINT(EM_DIAGRAM):   END;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2462681    run;
 
NOTE: DATA STEP view saved on file EMWS8.ENSMBL46_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.AUTONEURAL9_TRAIN.VIEW used (Total process time):
      real time           0.17 seconds
      cpu time            0.17 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.19 seconds
      cpu time            0.18 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2462682    quit;
2462683    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
2462684    filename emflow
2462684  ! "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl46\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl46\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl46: Scoring AUTONEURAL9_VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2462685    *------------------------------------------------------------*;
2462686    * Ensmbl46: Scoring AUTONEURAL9_VALIDATE data;
2462687    *------------------------------------------------------------*;
2462688    data EMWS8.Ensmbl46_VALIDATE
2462689    / view=EMWS8.Ensmbl46_VALIDATE
2462690    ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl46_VALIDATE / view=EMWS8.Ensmbl46_VALIDATE ;
2462691    set EMWS8.AutoNeural9_VALIDATE
2462692    ;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural9_VALIDATE ;
2462693    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file
      C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl46\EMFLOWSCORE.sas.
2462694   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2462695   +* Ensmbl46: Combine model for DepVar;
MPRINT(EM_DIAGRAM):   * Ensmbl46: Combine model for DepVar;
2462696   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2462697   +* Ensmbl46: Scoring Code of model 1 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl46: Scoring Code of model 1 of 5;
2462698   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2462699   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2462700   +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
2462701   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
2462702   +* NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
2462703   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2462704   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2462705   +* TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
2462706   +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
2462707   +* NODE: Stat;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
2462708   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2462709   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2462710   +* TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
2462711   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
2462712   +* NODE: Filter;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
2462713   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2462714   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2462715   +* TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
2462716   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
2462717   +* NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
2462718   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2462719   +
2462720   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
2462721   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
2462721  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
2462722   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
2462723   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
2462724   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
2462725   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
2462726   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
2462727   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2462728   +* TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
2462729   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
2462730   +* NODE: Trans;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
2462731   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2462732   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2462733   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
2462734   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2462735   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
2462736   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
2462737   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
2462738   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2462739   +* TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
2462740   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
2462741   +* NODE: Part;
MPRINT(EM_DIAGRAM):   * NODE: Part;
2462742   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2462743   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2462744   +* TOOL: Metadata Node;
MPRINT(EM_DIAGRAM):   * TOOL: Metadata Node;
2462745   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
2462746   +* NODE: Meta;
MPRINT(EM_DIAGRAM):   * NODE: Meta;
2462747   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2462748   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2462749   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
2462750   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2462751   +* NODE: AutoNeural9;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural9;
2462752   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2462753   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2462754   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2462755   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2462756   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2462757   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2462758   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2462759   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2462760   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2462761   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2462762   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2462763   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2462764   +LENGTH _WARN_ $4
2462765   +      F_DepVar  $ 12
2462766   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2462767   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2462768   +
2462769   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2462770   +
2462771   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2462772   +
2462773   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2462774   +
2462775   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2462776   +
2462777   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2462778   +
2462779   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2462780   +
2462781   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2462782   +
2462783   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2462784   +
2462785   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2462786   +
2462787   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2462788   +
2462789   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2462790   +
2462791   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2462792   +
2462793   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2462794   +
2462795   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2462796   +
2462797   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2462798   +
2462799   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2462800   +
2462801   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2462802   +
2462803   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2462804   +
2462805   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2462806   +
2462807   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2462808   +
2462809   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2462810   +
2462811   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2462812   +
2462813   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2462814   +
2462815   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2462816   +
2462817   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2462818   +
2462819   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2462820   +
2462821   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2462822   +
2462823   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2462824   +
2462825   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2462826   +
2462827   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2462828   +
2462829   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2462830   +
2462831   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2462832   +
2462833   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2462834   +
2462835   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2462836   +
2462837   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2462838   +
2462839   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2462840   +
2462841   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2462842   +
2462843   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2462844   +
2462845   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2462846   +
2462847   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2462848   +
2462849   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2462850   +
2462851   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2462852   +
2462853   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2462854   +
2462855   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2462856   +
2462857   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2462858   +
2462859   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2462860   +
2462861   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2462862   +
2462863   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2462864   +
2462865   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2462866   +
2462867   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2462868   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2462869   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2462870   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2462871   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2462872   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2462873   +end;
MPRINT(EM_DIAGRAM):   end;
2462874   +else do;
MPRINT(EM_DIAGRAM):   else do;
2462875   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2462876   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2462877   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2462878   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2462879   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2462880   +   end;
MPRINT(EM_DIAGRAM):   end;
2462881   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2462882   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2462883   +   end;
MPRINT(EM_DIAGRAM):   end;
2462884   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2462885   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2462886   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2462887   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2462888   +   end;
MPRINT(EM_DIAGRAM):   end;
2462889   +end;
MPRINT(EM_DIAGRAM):   end;
2462890   +
2462891   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2462892   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2462893   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2462894   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2462895   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2462896   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2462897   +end;
MPRINT(EM_DIAGRAM):   end;
2462898   +else do;
MPRINT(EM_DIAGRAM):   else do;
2462899   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2462900   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2462901   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2462902   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2462903   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2462904   +   end;
MPRINT(EM_DIAGRAM):   end;
2462905   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2462906   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2462907   +   end;
MPRINT(EM_DIAGRAM):   end;
2462908   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2462909   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2462910   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2462911   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2462912   +   end;
MPRINT(EM_DIAGRAM):   end;
2462913   +end;
MPRINT(EM_DIAGRAM):   end;
2462914   +
2462915   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2462916   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2462917   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2462918   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2462919   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2462920   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2462921   +end;
MPRINT(EM_DIAGRAM):   end;
2462922   +else do;
MPRINT(EM_DIAGRAM):   else do;
2462923   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2462924   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2462925   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2462926   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2462927   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2462928   +   end;
MPRINT(EM_DIAGRAM):   end;
2462929   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2462930   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2462931   +   end;
MPRINT(EM_DIAGRAM):   end;
2462932   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2462933   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2462934   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2462935   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2462936   +   end;
MPRINT(EM_DIAGRAM):   end;
2462937   +end;
MPRINT(EM_DIAGRAM):   end;
2462938   +
2462939   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2462940   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2462941   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2462942   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2462943   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2462944   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2462945   +end;
MPRINT(EM_DIAGRAM):   end;
2462946   +else do;
MPRINT(EM_DIAGRAM):   else do;
2462947   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2462948   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2462949   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2462950   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2462951   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2462952   +   end;
MPRINT(EM_DIAGRAM):   end;
2462953   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2462954   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2462955   +   end;
MPRINT(EM_DIAGRAM):   end;
2462956   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2462957   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2462958   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2462959   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2462960   +   end;
MPRINT(EM_DIAGRAM):   end;
2462961   +end;
MPRINT(EM_DIAGRAM):   end;
2462962   +
2462963   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2462964   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2462965   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2462966   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2462967   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2462968   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2462969   +end;
MPRINT(EM_DIAGRAM):   end;
2462970   +else do;
MPRINT(EM_DIAGRAM):   else do;
2462971   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2462972   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2462973   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2462974   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2462975   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2462976   +   end;
MPRINT(EM_DIAGRAM):   end;
2462977   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2462978   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2462979   +   end;
MPRINT(EM_DIAGRAM):   end;
2462980   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2462981   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2462982   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2462983   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2462984   +   end;
MPRINT(EM_DIAGRAM):   end;
2462985   +end;
MPRINT(EM_DIAGRAM):   end;
2462986   +
2462987   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2462988   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2462989   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2462990   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2462991   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2462992   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2462993   +end;
MPRINT(EM_DIAGRAM):   end;
2462994   +else do;
MPRINT(EM_DIAGRAM):   else do;
2462995   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2462996   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2462997   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2462998   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2462999   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2463000   +   end;
MPRINT(EM_DIAGRAM):   end;
2463001   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2463002   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2463003   +   end;
MPRINT(EM_DIAGRAM):   end;
2463004   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2463005   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2463006   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2463007   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2463008   +   end;
MPRINT(EM_DIAGRAM):   end;
2463009   +end;
MPRINT(EM_DIAGRAM):   end;
2463010   +
2463011   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2463012   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2463013   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2463014   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2463015   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2463016   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2463017   +end;
MPRINT(EM_DIAGRAM):   end;
2463018   +else do;
MPRINT(EM_DIAGRAM):   else do;
2463019   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2463020   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2463021   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2463022   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2463023   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2463024   +   end;
MPRINT(EM_DIAGRAM):   end;
2463025   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2463026   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2463027   +   end;
MPRINT(EM_DIAGRAM):   end;
2463028   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2463029   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2463030   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2463031   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2463032   +   end;
MPRINT(EM_DIAGRAM):   end;
2463033   +end;
MPRINT(EM_DIAGRAM):   end;
2463034   +
2463035   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2463036   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
2463037   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2463038   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2463039   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2463040   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2463041   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2463042   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2463043   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2463044   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2463045   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2463046   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2463047   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2463048   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2463049   +end;
MPRINT(EM_DIAGRAM):   end;
2463050   +else do;
MPRINT(EM_DIAGRAM):   else do;
2463051   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2463052   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2463053   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2463054   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2463055   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2463056   +   end;
MPRINT(EM_DIAGRAM):   end;
2463057   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2463058   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2463059   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2463060   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2463061   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2463062   +   end;
MPRINT(EM_DIAGRAM):   end;
2463063   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2463064   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2463065   +   end;
MPRINT(EM_DIAGRAM):   end;
2463066   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2463067   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2463068   +   end;
MPRINT(EM_DIAGRAM):   end;
2463069   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2463070   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2463071   +   end;
MPRINT(EM_DIAGRAM):   end;
2463072   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2463073   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2463074   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2463075   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2463076   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2463077   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2463078   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2463079   +   end;
MPRINT(EM_DIAGRAM):   end;
2463080   +end;
MPRINT(EM_DIAGRAM):   end;
2463081   +
2463082   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2463083   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2463084   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
2463085   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2463086   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2463087   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2463088   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2463089   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2463090   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2463091   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2463092   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2463093   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2463094   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2463095   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2463096   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2463097   +end;
MPRINT(EM_DIAGRAM):   end;
2463098   +else do;
MPRINT(EM_DIAGRAM):   else do;
2463099   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2463100   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2463101   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2463102   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2463103   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2463104   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2463105   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2463106   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2463107   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2463108   +         end;
MPRINT(EM_DIAGRAM):   end;
2463109   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2463110   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2463111   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2463112   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2463113   +            end;
MPRINT(EM_DIAGRAM):   end;
2463114   +         end;
MPRINT(EM_DIAGRAM):   end;
2463115   +      end;
MPRINT(EM_DIAGRAM):   end;
2463116   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2463117   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2463118   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2463119   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2463120   +         end;
MPRINT(EM_DIAGRAM):   end;
2463121   +      end;
MPRINT(EM_DIAGRAM):   end;
2463122   +   end;
MPRINT(EM_DIAGRAM):   end;
2463123   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2463124   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2463125   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2463126   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2463127   +      end;
MPRINT(EM_DIAGRAM):   end;
2463128   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2463129   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2463130   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2463131   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2463132   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2463133   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2463134   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2463135   +         end;
MPRINT(EM_DIAGRAM):   end;
2463136   +      end;
MPRINT(EM_DIAGRAM):   end;
2463137   +   end;
MPRINT(EM_DIAGRAM):   end;
2463138   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2463139   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2463140   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2463141   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2463142   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2463143   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2463144   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2463145   +   end;
MPRINT(EM_DIAGRAM):   end;
2463146   +end;
MPRINT(EM_DIAGRAM):   end;
2463147   +
2463148   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2463149   +*** Checking missing input Interval
2463150   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2463151   +
2463152   +IF NMISS(
2463153   +   AcceptedCmpTotal ,
2463154   +   Age ,
2463155   +   Frq ,
2463156   +   Income ,
2463157   +   Kidhome ,
2463158   +   Mnt ,
2463159   +   MntFishProducts ,
2463160   +   MntFruits ,
2463161   +   MntGoldProds ,
2463162   +   MntMeatProducts ,
2463163   +   MntSweetProducts ,
2463164   +   MntWines ,
2463165   +   MonthsAsCustomer ,
2463166   +   NumCatalogPurchases ,
2463167   +   NumDealsPurchases ,
2463168   +   NumDistPurchases ,
2463169   +   NumStorePurchases ,
2463170   +   NumWebPurchases ,
2463171   +   NumWebVisitsMonth ,
2463172   +   RFMstat ,
2463173   +   RMntFrq ,
2463174   +   Recency ,
2463175   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
2463176   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2463177   +
2463178   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2463179   +END;
MPRINT(EM_DIAGRAM):   END;
2463180   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2463181   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2463182   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2463183   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2463184   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2463185   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2463186   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2463187   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2463188   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2463189   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2463190   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2463191   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2463192   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2463193   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2463194   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2463195   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2463196   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2463197   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2463198   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2463199   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2463200   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2463201   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2463202   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 *
MonthsAsCustomer ;
2463203   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2463204   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2463205   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2463206   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2463207   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2463208   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2463209   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2463210   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2463211   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2463212   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2463213   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2463214   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2463215   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2463216   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2463217   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2463218   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2463219   +END;
MPRINT(EM_DIAGRAM):   END;
2463220   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2463221   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2463222   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2463223   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2463224   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2463225   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2463226   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2463227   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2463228   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2463229   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2463230   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2463231   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2463232   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2463233   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2463234   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2463235   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2463236   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2463237   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2463238   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2463239   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2463240   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2463241   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2463242   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
2463243   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2463244   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2463245   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2463246   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2463247   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2463248   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2463249   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2463250   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2463251   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2463252   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2463253   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 *
MonthsAsCustomer ;
2463254   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2463255   +   ELSE S_NumCatalogPurchases
2463256   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2463257   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2463258   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2463259   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2463260   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2463261   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2463262   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2463263   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2463264   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2463265   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2463266   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2463267   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2463268   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2463269   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2463270   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2463271   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2463272   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2463273   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2463274   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2463275   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2463276   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2463277   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2463278   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2463279   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2463280   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2463281   +END;
MPRINT(EM_DIAGRAM):   END;
2463282   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2463283   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2463284   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2463285   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2463286   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2463287   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2463288   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2463289   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2463290   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2463291   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2463292   +   H1x1_1  =    -0.78941671657664 * S_AcceptedCmpTotal
2463293   +          +     0.31767378900448 * S_Age  +      -0.450304150539 * S_Frq
2463294   +          +     0.13641886985589 * S_Income  +    -0.76390352240561 *
2463295   +        S_Kidhome  +    -0.84654868800943 * S_Mnt  +     0.96945558052651 *
2463296   +        S_MntFishProducts  +     0.16268958674432 * S_MntFruits
2463297   +          +     0.02144447788014 * S_MntGoldProds  +    -3.75090210449464 *
2463298   +        S_MntMeatProducts  +    -0.22086629229442 * S_MntSweetProducts
2463299   +          +      0.8352178457402 * S_MntWines  +     0.16493907873466 *
2463300   +        S_MonthsAsCustomer  +    -1.54607390993048 * S_NumCatalogPurchases
2463301   +          +    -1.12130210731541 * S_NumDealsPurchases
2463302   +          +    -0.12343505299726 * S_NumDistPurchases
2463303   +          +     0.11863092868196 * S_NumStorePurchases
2463304   +          +       0.583917993314 * S_NumWebPurchases
2463305   +          +     0.75529732848146 * S_NumWebVisitsMonth
2463306   +          +    -0.49784215446785 * S_RFMstat  +     0.40580477815146 *
2463307   +        S_RMntFrq  +    -0.95519170979342 * S_Recency
2463308   +          +    -0.44895196625502 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.78941671657664 * S_AcceptedCmpTotal + 0.31767378900448 *
S_Age + -0.450304150539 * S_Frq + 0.13641886985589 * S_Income + -0.76390352240561 * S_Kidhome
+ -0.84654868800943 * S_Mnt + 0.96945558052651 * S_MntFishProducts + 0.16268958674432 *
S_MntFruits + 0.02144447788014 * S_MntGoldProds + -3.75090210449464 * S_MntMeatProducts +
-0.22086629229442 * S_MntSweetProducts + 0.8352178457402 * S_MntWines + 0.16493907873466 *
S_MonthsAsCustomer + -1.54607390993048 * S_NumCatalogPurchases + -1.12130210731541 *
S_NumDealsPurchases + -0.12343505299726 * S_NumDistPurchases + 0.11863092868196 *
S_NumStorePurchases + 0.583917993314 * S_NumWebPurchases + 0.75529732848146 *
S_NumWebVisitsMonth + -0.49784215446785 * S_RFMstat + 0.40580477815146 * S_RMntFrq +
-0.95519170979342 * S_Recency + -0.44895196625502 * S_Teenhome ;
2463309   +   H1x1_2  =    -0.22984864633102 * S_AcceptedCmpTotal
2463310   +          +     0.08901810463204 * S_Age  +    -0.13007664741542 * S_Frq
2463311   +          +    -0.64174617524704 * S_Income  +     0.26599968715733 *
2463312   +        S_Kidhome  +     0.57486260655125 * S_Mnt  +    -0.56033337110694 *
2463313   +        S_MntFishProducts  +     0.16060716517673 * S_MntFruits
2463314   +          +      0.4349197289782 * S_MntGoldProds  +     1.41079767517969 *
2463315   +        S_MntMeatProducts  +      0.0615730534741 * S_MntSweetProducts
2463316   +          +    -0.09057901886639 * S_MntWines  +     0.20260454891291 *
2463317   +        S_MonthsAsCustomer  +    -1.17048742280721 * S_NumCatalogPurchases
2463318   +          +    -0.84113790640734 * S_NumDealsPurchases
2463319   +          +    -0.10512672747147 * S_NumDistPurchases
2463320   +          +     0.07268711782494 * S_NumStorePurchases
2463321   +          +     0.57578331257439 * S_NumWebPurchases
2463322   +          +    -1.34334433506558 * S_NumWebVisitsMonth
2463323   +          +     0.50079465494904 * S_RFMstat  +     0.77329849238514 *
2463324   +        S_RMntFrq  +      1.2759588366983 * S_Recency
2463325   +          +     0.17722493443222 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.22984864633102 * S_AcceptedCmpTotal + 0.08901810463204 *
S_Age + -0.13007664741542 * S_Frq + -0.64174617524704 * S_Income + 0.26599968715733 *
S_Kidhome + 0.57486260655125 * S_Mnt + -0.56033337110694 * S_MntFishProducts +
0.16060716517673 * S_MntFruits + 0.4349197289782 * S_MntGoldProds + 1.41079767517969 *
S_MntMeatProducts + 0.0615730534741 * S_MntSweetProducts + -0.09057901886639 * S_MntWines +
0.20260454891291 * S_MonthsAsCustomer + -1.17048742280721 * S_NumCatalogPurchases +
-0.84113790640734 * S_NumDealsPurchases + -0.10512672747147 * S_NumDistPurchases +
0.07268711782494 * S_NumStorePurchases + 0.57578331257439 * S_NumWebPurchases +
-1.34334433506558 * S_NumWebVisitsMonth + 0.50079465494904 * S_RFMstat + 0.77329849238514 *
S_RMntFrq + 1.2759588366983 * S_Recency + 0.17722493443222 * S_Teenhome ;
2463326   +   H1x1_3  =      1.1751297152411 * S_AcceptedCmpTotal
2463327   +          +     0.14380060376858 * S_Age  +    -0.90459868540245 * S_Frq
2463328   +          +     0.65570498233801 * S_Income  +    -0.66078213466597 *
2463329   +        S_Kidhome  +      0.5364727654141 * S_Mnt  +    -0.56452823521458 *
2463330   +        S_MntFishProducts  +     0.11401811215013 * S_MntFruits
2463331   +          +     0.42809239636494 * S_MntGoldProds  +     3.28485519579047 *
2463332   +        S_MntMeatProducts  +    -0.10959477301368 * S_MntSweetProducts
2463333   +          +     -0.5779524716069 * S_MntWines  +     0.08256957915579 *
2463334   +        S_MonthsAsCustomer  +     0.48195221766948 * S_NumCatalogPurchases
2463335   +          +     0.45924983504762 * S_NumDealsPurchases
2463336   +          +    -0.25508041581692 * S_NumDistPurchases
2463337   +          +    -1.34901283858526 * S_NumStorePurchases
2463338   +          +    -0.86388975031663 * S_NumWebPurchases
2463339   +          +     1.86136110391797 * S_NumWebVisitsMonth
2463340   +          +     0.39724376701426 * S_RFMstat  +    -1.08648755949459 *
2463341   +        S_RMntFrq  +    -2.06955456943047 * S_Recency
2463342   +          +     -0.6524420065858 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.1751297152411 * S_AcceptedCmpTotal + 0.14380060376858 * S_Age
+ -0.90459868540245 * S_Frq + 0.65570498233801 * S_Income + -0.66078213466597 * S_Kidhome +
0.5364727654141 * S_Mnt + -0.56452823521458 * S_MntFishProducts + 0.11401811215013 *
S_MntFruits + 0.42809239636494 * S_MntGoldProds + 3.28485519579047 * S_MntMeatProducts +
-0.10959477301368 * S_MntSweetProducts + -0.5779524716069 * S_MntWines + 0.08256957915579 *
S_MonthsAsCustomer + 0.48195221766948 * S_NumCatalogPurchases + 0.45924983504762 *
S_NumDealsPurchases + -0.25508041581692 * S_NumDistPurchases + -1.34901283858526 *
S_NumStorePurchases + -0.86388975031663 * S_NumWebPurchases + 1.86136110391797 *
S_NumWebVisitsMonth + 0.39724376701426 * S_RFMstat + -1.08648755949459 * S_RMntFrq +
-2.06955456943047 * S_Recency + -0.6524420065858 * S_Teenhome ;
2463343   +   H1x1_1  = H1x1_1  +     0.80545309346785 * AcceptedCmp10
2463344   +          +    -0.33518398776018 * AcceptedCmp20  +    -0.58961939502901 *
2463345   +        AcceptedCmp30  +    -0.89675052404295 * AcceptedCmp40
2463346   +          +     0.75506592249683 * AcceptedCmp50  +    -0.07335613460961 *
2463347   +        Complain0  +     0.34255762261501 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.80545309346785 * AcceptedCmp10 + -0.33518398776018 *
AcceptedCmp20 + -0.58961939502901 * AcceptedCmp30 + -0.89675052404295 * AcceptedCmp40 +
0.75506592249683 * AcceptedCmp50 + -0.07335613460961 * Complain0 + 0.34255762261501 *
HigherEducationBinary0 ;
2463348   +   H1x1_2  = H1x1_2  +    -0.17834267108797 * AcceptedCmp10
2463349   +          +    -0.54414628806984 * AcceptedCmp20  +      0.8037591997808 *
2463350   +        AcceptedCmp30  +     0.37789561997689 * AcceptedCmp40
2463351   +          +    -1.39910847665731 * AcceptedCmp50  +    -0.44783176263268 *
2463352   +        Complain0  +     0.36763760090773 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.17834267108797 * AcceptedCmp10 + -0.54414628806984
* AcceptedCmp20 + 0.8037591997808 * AcceptedCmp30 + 0.37789561997689 * AcceptedCmp40 +
-1.39910847665731 * AcceptedCmp50 + -0.44783176263268 * Complain0 + 0.36763760090773 *
HigherEducationBinary0 ;
2463353   +   H1x1_3  = H1x1_3  +    -0.20323890063703 * AcceptedCmp10
2463354   +          +    -0.08537895761507 * AcceptedCmp20  +     0.22533818089504 *
2463355   +        AcceptedCmp30  +    -0.22195995100127 * AcceptedCmp40
2463356   +          +    -2.01371926977123 * AcceptedCmp50  +    -0.17097719978842 *
2463357   +        Complain0  +     0.34016905753094 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.20323890063703 * AcceptedCmp10 + -0.08537895761507
* AcceptedCmp20 + 0.22533818089504 * AcceptedCmp30 + -0.22195995100127 * AcceptedCmp40 +
-2.01371926977123 * AcceptedCmp50 + -0.17097719978842 * Complain0 + 0.34016905753094 *
HigherEducationBinary0 ;
2463358   +   H1x1_1  = H1x1_1  +    -0.03394180683805 * Education2n_Cycle
2463359   +          +    -0.38224926448988 * EducationBasic  +    -0.42512289883041 *
2463360   +        EducationGraduation  +    -0.59708578424036 * EducationMaster
2463361   +          +     0.48853068455666 * Marital_StatusDivorced
2463362   +          +    -0.54903474026465 * Marital_StatusMarried
2463363   +          +    -0.34079188373939 * Marital_StatusSingle
2463364   +          +    -0.64602969938868 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.03394180683805 * Education2n_Cycle +
-0.38224926448988 * EducationBasic + -0.42512289883041 * EducationGraduation +
-0.59708578424036 * EducationMaster + 0.48853068455666 * Marital_StatusDivorced +
-0.54903474026465 * Marital_StatusMarried + -0.34079188373939 * Marital_StatusSingle +
-0.64602969938868 * Marital_StatusTogether ;
2463365   +   H1x1_2  = H1x1_2  +    -0.26170943801998 * Education2n_Cycle
2463366   +          +     0.06893871459175 * EducationBasic  +    -0.84123174187664 *
2463367   +        EducationGraduation  +     0.19038549912088 * EducationMaster
2463368   +          +    -1.03547689902027 * Marital_StatusDivorced
2463369   +          +     2.42164864610471 * Marital_StatusMarried
2463370   +          +    -1.95342561304942 * Marital_StatusSingle
2463371   +          +      2.1397185142046 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.26170943801998 * Education2n_Cycle +
0.06893871459175 * EducationBasic + -0.84123174187664 * EducationGraduation + 0.19038549912088
* EducationMaster + -1.03547689902027 * Marital_StatusDivorced + 2.42164864610471 *
Marital_StatusMarried + -1.95342561304942 * Marital_StatusSingle + 2.1397185142046 *
Marital_StatusTogether ;
2463372   +   H1x1_3  = H1x1_3  +    -0.04236694810886 * Education2n_Cycle
2463373   +          +    -0.57404276980591 * EducationBasic  +     -0.1441989834351 *
2463374   +        EducationGraduation  +    -0.31867831184924 * EducationMaster
2463375   +          +      0.4337638747935 * Marital_StatusDivorced
2463376   +          +    -0.38508657017615 * Marital_StatusMarried
2463377   +          +     -0.0160269708326 * Marital_StatusSingle
2463378   +          +    -0.57491004270903 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.04236694810886 * Education2n_Cycle +
-0.57404276980591 * EducationBasic + -0.1441989834351 * EducationGraduation +
-0.31867831184924 * EducationMaster + 0.4337638747935 * Marital_StatusDivorced +
-0.38508657017615 * Marital_StatusMarried + -0.0160269708326 * Marital_StatusSingle +
-0.57491004270903 * Marital_StatusTogether ;
2463379   +   H1x1_1  =    -0.53426188790968 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.53426188790968 + H1x1_1 ;
2463380   +   H1x1_2  =     0.98557066823746 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.98557066823746 + H1x1_2 ;
2463381   +   H1x1_3  =     1.81937688438175 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.81937688438175 + H1x1_3 ;
2463382   +   H1x1_4  = 0;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0;
2463383   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
2463384   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2463385   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
2463386   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
2463387   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
2463388   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
2463389   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
2463390   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
2463391   +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
2463392   +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
2463393   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
2463394   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
2463395   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
2463396   +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
2463397   +END;
MPRINT(EM_DIAGRAM):   END;
2463398   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2463399   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2463400   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2463401   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2463402   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2463403   +END;
MPRINT(EM_DIAGRAM):   END;
2463404   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2463405   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2463406   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2463407   +
2463408   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2463409   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2463410   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2463411   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2463412   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2463413   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2463414   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2463415   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2463416   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2463417   +end;
MPRINT(EM_DIAGRAM):   end;
2463418   +else do;
MPRINT(EM_DIAGRAM):   else do;
2463419   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2463420   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2463421   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2463422   +   end;
MPRINT(EM_DIAGRAM):   end;
2463423   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2463424   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2463425   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2463426   +   end;
MPRINT(EM_DIAGRAM):   end;
2463427   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2463428   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2463429   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2463430   +   end;
MPRINT(EM_DIAGRAM):   end;
2463431   +end;
MPRINT(EM_DIAGRAM):   end;
2463432   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2463433   +   P_DepVar1  =    -3.43702380277695 * H1x1_1  +    -7.14235896425537 * H1x1_2
2463434   +          +     10.8296305415538 * H1x1_3  +    -2.20824183229369 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.43702380277695 * H1x1_1 + -7.14235896425537 * H1x1_2 +
10.8296305415538 * H1x1_3 + -2.20824183229369 * H1x1_4 ;
2463435   +   P_DepVar1  =    -3.68304614366462 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.68304614366462 + P_DepVar1 ;
2463436   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2463437   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2463438   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2463439   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2463440   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2463441   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2463442   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2463443   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2463444   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2463445   +END;
MPRINT(EM_DIAGRAM):   END;
2463446   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2463447   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2463448   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2463449   +END;
MPRINT(EM_DIAGRAM):   END;
2463450   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2463451   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2463452   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2463453   +END;
MPRINT(EM_DIAGRAM):   END;
2463454   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2463455   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2463456   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2463457   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2463458   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2463459   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2463460   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2463461   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2463462   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2463463   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2463464   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2463465   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2463466   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2463467   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2463468   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2463469   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2463470   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2463471   +END;
MPRINT(EM_DIAGRAM):   END;
2463472   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2463473   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2463474   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2463475   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2463476   +* Renaming variables for AutoNeural9;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural9;
2463477   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2463478   +* Renaming Posterior variables for AutoNeural9;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural9;
2463479   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2463480   +drop AutoNeural9_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_P_DepVar1;
2463481   +AutoNeural9_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural9_P_DepVar1 = P_DepVar1;
2463482   +drop AutoNeural9_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_P_DepVar0;
2463483   +AutoNeural9_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural9_P_DepVar0 = P_DepVar0;
2463484   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2463485   +* Renaming _WARN_ variable for AutoNeural9;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural9;
2463486   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2463487   +length AutoNeural9_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural9_WARN_ $4;
2463488   +drop AutoNeural9_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_WARN_;
2463489   +AutoNeural9_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural9_WARN_ = _WARN_;
2463490   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2463491   +* Ensmbl46: Scoring Code of model 2 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl46: Scoring Code of model 2 of 5;
2463492   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2463493   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2463494   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
2463495   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2463496   +* NODE: AutoNeural11;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural11;
2463497   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2463498   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2463499   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2463500   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2463501   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2463502   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2463503   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2463504   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2463505   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2463506   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2463507   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2463508   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2463509   +LENGTH _WARN_ $4
2463510   +      F_DepVar  $ 12
2463511   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2463512   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2463513   +
2463514   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2463515   +
2463516   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2463517   +
2463518   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2463519   +
2463520   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2463521   +
2463522   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2463523   +
2463524   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2463525   +
2463526   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2463527   +
2463528   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2463529   +
2463530   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2463531   +
2463532   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2463533   +
2463534   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2463535   +
2463536   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2463537   +
2463538   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2463539   +
2463540   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2463541   +
2463542   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2463543   +
2463544   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2463545   +
2463546   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2463547   +
2463548   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2463549   +
2463550   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2463551   +
2463552   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2463553   +
2463554   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2463555   +
2463556   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2463557   +
2463558   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2463559   +
2463560   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2463561   +
2463562   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2463563   +
2463564   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2463565   +
2463566   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2463567   +
2463568   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2463569   +
2463570   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2463571   +
2463572   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2463573   +
2463574   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2463575   +
2463576   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2463577   +
2463578   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2463579   +
2463580   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2463581   +
2463582   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2463583   +
2463584   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2463585   +
2463586   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2463587   +
2463588   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2463589   +
2463590   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2463591   +
2463592   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2463593   +
2463594   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2463595   +
2463596   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
2463597   +
2463598   +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
2463599   +
2463600   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
2463601   +
2463602   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
2463603   +
2463604   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
2463605   +
2463606   +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
2463607   +
2463608   +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
2463609   +
2463610   +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
2463611   +
2463612   +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
2463613   +
2463614   +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
2463615   +
2463616   +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
2463617   +
2463618   +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
2463619   +
2463620   +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
2463621   +
2463622   +      label H2x1_6 = 'Hidden: H2x1_=6' ;
MPRINT(EM_DIAGRAM):   label H2x1_6 = 'Hidden: H2x1_=6' ;
2463623   +
2463624   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2463625   +
2463626   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2463627   +
2463628   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2463629   +
2463630   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2463631   +
2463632   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2463633   +
2463634   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2463635   +
2463636   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2463637   +
2463638   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2463639   +
2463640   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2463641   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2463642   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2463643   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2463644   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2463645   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2463646   +end;
MPRINT(EM_DIAGRAM):   end;
2463647   +else do;
MPRINT(EM_DIAGRAM):   else do;
2463648   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2463649   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2463650   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2463651   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2463652   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2463653   +   end;
MPRINT(EM_DIAGRAM):   end;
2463654   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2463655   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2463656   +   end;
MPRINT(EM_DIAGRAM):   end;
2463657   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2463658   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2463659   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2463660   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2463661   +   end;
MPRINT(EM_DIAGRAM):   end;
2463662   +end;
MPRINT(EM_DIAGRAM):   end;
2463663   +
2463664   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2463665   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2463666   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2463667   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2463668   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2463669   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2463670   +end;
MPRINT(EM_DIAGRAM):   end;
2463671   +else do;
MPRINT(EM_DIAGRAM):   else do;
2463672   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2463673   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2463674   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2463675   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2463676   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2463677   +   end;
MPRINT(EM_DIAGRAM):   end;
2463678   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2463679   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2463680   +   end;
MPRINT(EM_DIAGRAM):   end;
2463681   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2463682   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2463683   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2463684   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2463685   +   end;
MPRINT(EM_DIAGRAM):   end;
2463686   +end;
MPRINT(EM_DIAGRAM):   end;
2463687   +
2463688   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2463689   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2463690   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2463691   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2463692   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2463693   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2463694   +end;
MPRINT(EM_DIAGRAM):   end;
2463695   +else do;
MPRINT(EM_DIAGRAM):   else do;
2463696   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2463697   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2463698   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2463699   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2463700   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2463701   +   end;
MPRINT(EM_DIAGRAM):   end;
2463702   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2463703   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2463704   +   end;
MPRINT(EM_DIAGRAM):   end;
2463705   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2463706   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2463707   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2463708   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2463709   +   end;
MPRINT(EM_DIAGRAM):   end;
2463710   +end;
MPRINT(EM_DIAGRAM):   end;
2463711   +
2463712   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2463713   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2463714   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2463715   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2463716   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2463717   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2463718   +end;
MPRINT(EM_DIAGRAM):   end;
2463719   +else do;
MPRINT(EM_DIAGRAM):   else do;
2463720   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2463721   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2463722   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2463723   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2463724   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2463725   +   end;
MPRINT(EM_DIAGRAM):   end;
2463726   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2463727   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2463728   +   end;
MPRINT(EM_DIAGRAM):   end;
2463729   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2463730   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2463731   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2463732   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2463733   +   end;
MPRINT(EM_DIAGRAM):   end;
2463734   +end;
MPRINT(EM_DIAGRAM):   end;
2463735   +
2463736   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2463737   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2463738   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2463739   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2463740   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2463741   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2463742   +end;
MPRINT(EM_DIAGRAM):   end;
2463743   +else do;
MPRINT(EM_DIAGRAM):   else do;
2463744   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2463745   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2463746   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2463747   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2463748   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2463749   +   end;
MPRINT(EM_DIAGRAM):   end;
2463750   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2463751   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2463752   +   end;
MPRINT(EM_DIAGRAM):   end;
2463753   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2463754   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2463755   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2463756   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2463757   +   end;
MPRINT(EM_DIAGRAM):   end;
2463758   +end;
MPRINT(EM_DIAGRAM):   end;
2463759   +
2463760   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2463761   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2463762   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2463763   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2463764   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2463765   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2463766   +end;
MPRINT(EM_DIAGRAM):   end;
2463767   +else do;
MPRINT(EM_DIAGRAM):   else do;
2463768   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2463769   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2463770   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2463771   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2463772   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2463773   +   end;
MPRINT(EM_DIAGRAM):   end;
2463774   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2463775   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2463776   +   end;
MPRINT(EM_DIAGRAM):   end;
2463777   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2463778   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2463779   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2463780   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2463781   +   end;
MPRINT(EM_DIAGRAM):   end;
2463782   +end;
MPRINT(EM_DIAGRAM):   end;
2463783   +
2463784   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2463785   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2463786   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2463787   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2463788   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2463789   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2463790   +end;
MPRINT(EM_DIAGRAM):   end;
2463791   +else do;
MPRINT(EM_DIAGRAM):   else do;
2463792   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2463793   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2463794   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2463795   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2463796   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2463797   +   end;
MPRINT(EM_DIAGRAM):   end;
2463798   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2463799   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2463800   +   end;
MPRINT(EM_DIAGRAM):   end;
2463801   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2463802   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2463803   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2463804   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2463805   +   end;
MPRINT(EM_DIAGRAM):   end;
2463806   +end;
MPRINT(EM_DIAGRAM):   end;
2463807   +
2463808   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2463809   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
2463810   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2463811   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2463812   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2463813   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2463814   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2463815   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2463816   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2463817   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2463818   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2463819   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2463820   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2463821   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2463822   +end;
MPRINT(EM_DIAGRAM):   end;
2463823   +else do;
MPRINT(EM_DIAGRAM):   else do;
2463824   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2463825   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2463826   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2463827   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2463828   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2463829   +   end;
MPRINT(EM_DIAGRAM):   end;
2463830   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2463831   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2463832   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2463833   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2463834   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2463835   +   end;
MPRINT(EM_DIAGRAM):   end;
2463836   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2463837   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2463838   +   end;
MPRINT(EM_DIAGRAM):   end;
2463839   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2463840   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2463841   +   end;
MPRINT(EM_DIAGRAM):   end;
2463842   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2463843   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2463844   +   end;
MPRINT(EM_DIAGRAM):   end;
2463845   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2463846   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2463847   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2463848   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2463849   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2463850   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2463851   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2463852   +   end;
MPRINT(EM_DIAGRAM):   end;
2463853   +end;
MPRINT(EM_DIAGRAM):   end;
2463854   +
2463855   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2463856   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2463857   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
2463858   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2463859   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2463860   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2463861   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2463862   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2463863   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2463864   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2463865   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2463866   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2463867   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2463868   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2463869   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2463870   +end;
MPRINT(EM_DIAGRAM):   end;
2463871   +else do;
MPRINT(EM_DIAGRAM):   else do;
2463872   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2463873   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2463874   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2463875   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2463876   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2463877   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2463878   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2463879   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2463880   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2463881   +         end;
MPRINT(EM_DIAGRAM):   end;
2463882   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2463883   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2463884   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2463885   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2463886   +            end;
MPRINT(EM_DIAGRAM):   end;
2463887   +         end;
MPRINT(EM_DIAGRAM):   end;
2463888   +      end;
MPRINT(EM_DIAGRAM):   end;
2463889   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2463890   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2463891   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2463892   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2463893   +         end;
MPRINT(EM_DIAGRAM):   end;
2463894   +      end;
MPRINT(EM_DIAGRAM):   end;
2463895   +   end;
MPRINT(EM_DIAGRAM):   end;
2463896   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2463897   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2463898   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2463899   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2463900   +      end;
MPRINT(EM_DIAGRAM):   end;
2463901   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2463902   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2463903   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2463904   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2463905   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2463906   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2463907   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2463908   +         end;
MPRINT(EM_DIAGRAM):   end;
2463909   +      end;
MPRINT(EM_DIAGRAM):   end;
2463910   +   end;
MPRINT(EM_DIAGRAM):   end;
2463911   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2463912   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2463913   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2463914   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2463915   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2463916   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2463917   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2463918   +   end;
MPRINT(EM_DIAGRAM):   end;
2463919   +end;
MPRINT(EM_DIAGRAM):   end;
2463920   +
2463921   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2463922   +*** Checking missing input Interval
2463923   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2463924   +
2463925   +IF NMISS(
2463926   +   AcceptedCmpTotal ,
2463927   +   Age ,
2463928   +   Frq ,
2463929   +   Income ,
2463930   +   Kidhome ,
2463931   +   Mnt ,
2463932   +   MntFishProducts ,
2463933   +   MntFruits ,
2463934   +   MntGoldProds ,
2463935   +   MntMeatProducts ,
2463936   +   MntSweetProducts ,
2463937   +   MntWines ,
2463938   +   MonthsAsCustomer ,
2463939   +   NumCatalogPurchases ,
2463940   +   NumDealsPurchases ,
2463941   +   NumDistPurchases ,
2463942   +   NumStorePurchases ,
2463943   +   NumWebPurchases ,
2463944   +   NumWebVisitsMonth ,
2463945   +   RFMstat ,
2463946   +   RMntFrq ,
2463947   +   Recency ,
2463948   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
2463949   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2463950   +
2463951   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2463952   +END;
MPRINT(EM_DIAGRAM):   END;
2463953   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2463954   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2463955   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2463956   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2463957   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2463958   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2463959   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2463960   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2463961   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2463962   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2463963   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2463964   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2463965   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2463966   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2463967   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2463968   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2463969   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2463970   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2463971   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2463972   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2463973   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2463974   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2463975   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 *
MonthsAsCustomer ;
2463976   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2463977   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2463978   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2463979   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2463980   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2463981   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2463982   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2463983   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2463984   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2463985   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2463986   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2463987   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2463988   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2463989   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2463990   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2463991   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2463992   +END;
MPRINT(EM_DIAGRAM):   END;
2463993   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2463994   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2463995   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2463996   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2463997   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2463998   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2463999   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2464000   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2464001   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2464002   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2464003   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2464004   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2464005   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2464006   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2464007   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2464008   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2464009   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2464010   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2464011   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2464012   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2464013   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2464014   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2464015   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
2464016   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2464017   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2464018   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2464019   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2464020   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2464021   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2464022   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2464023   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2464024   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2464025   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2464026   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 *
MonthsAsCustomer ;
2464027   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2464028   +   ELSE S_NumCatalogPurchases
2464029   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2464030   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2464031   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2464032   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2464033   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2464034   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2464035   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2464036   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2464037   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2464038   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2464039   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2464040   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2464041   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2464042   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2464043   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2464044   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2464045   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2464046   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2464047   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2464048   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2464049   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2464050   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2464051   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2464052   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2464053   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2464054   +END;
MPRINT(EM_DIAGRAM):   END;
2464055   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2464056   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2464057   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2464058   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2464059   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2464060   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2464061   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2464062   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2464063   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2464064   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2464065   +   H1x1_1  =     0.16786131610493 * S_AcceptedCmpTotal
2464066   +          +     0.08150129707008 * S_Age  +    -0.00076335149511 * S_Frq
2464067   +          +     2.37648351383272 * S_Income  +    -1.63260278456818 *
2464068   +        S_Kidhome  +     -0.6720941090663 * S_Mnt  +    -0.03176174297509 *
2464069   +        S_MntFishProducts  +    -0.03796990721617 * S_MntFruits
2464070   +          +    -0.17020485447842 * S_MntGoldProds  +      0.7709093878281 *
2464071   +        S_MntMeatProducts  +    -0.26168538456938 * S_MntSweetProducts
2464072   +          +    -1.36275284328546 * S_MntWines  +    -0.30344694826738 *
2464073   +        S_MonthsAsCustomer  +     1.68662611500615 * S_NumCatalogPurchases
2464074   +          +     1.32037113020393 * S_NumDealsPurchases
2464075   +          +     0.42879249227132 * S_NumDistPurchases
2464076   +          +    -0.89190172778783 * S_NumStorePurchases
2464077   +          +    -0.87975442613962 * S_NumWebPurchases
2464078   +          +     2.98977282825831 * S_NumWebVisitsMonth
2464079   +          +     0.16388418187981 * S_RFMstat  +     0.63858980984599 *
2464080   +        S_RMntFrq  +    -2.53833222281652 * S_Recency
2464081   +          +    -2.72141665283523 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.16786131610493 * S_AcceptedCmpTotal + 0.08150129707008 *
S_Age + -0.00076335149511 * S_Frq + 2.37648351383272 * S_Income + -1.63260278456818 *
S_Kidhome + -0.6720941090663 * S_Mnt + -0.03176174297509 * S_MntFishProducts +
-0.03796990721617 * S_MntFruits + -0.17020485447842 * S_MntGoldProds + 0.7709093878281 *
S_MntMeatProducts + -0.26168538456938 * S_MntSweetProducts + -1.36275284328546 * S_MntWines +
-0.30344694826738 * S_MonthsAsCustomer + 1.68662611500615 * S_NumCatalogPurchases +
1.32037113020393 * S_NumDealsPurchases + 0.42879249227132 * S_NumDistPurchases +
-0.89190172778783 * S_NumStorePurchases + -0.87975442613962 * S_NumWebPurchases +
2.98977282825831 * S_NumWebVisitsMonth + 0.16388418187981 * S_RFMstat + 0.63858980984599 *
S_RMntFrq + -2.53833222281652 * S_Recency + -2.72141665283523 * S_Teenhome ;
2464082   +   H1x1_2  =    -1.16140709294501 * S_AcceptedCmpTotal
2464083   +          +    -0.87210661607894 * S_Age  +    -0.15365607228782 * S_Frq
2464084   +          +    -1.14855351318782 * S_Income  +     -0.3792851632462 *
2464085   +        S_Kidhome  +    -1.20412080219233 * S_Mnt  +     0.98615533034973 *
2464086   +        S_MntFishProducts  +     0.44541456963703 * S_MntFruits
2464087   +          +    -0.86465923336111 * S_MntGoldProds  +    -5.15063925950455 *
2464088   +        S_MntMeatProducts  +     0.54937255903381 * S_MntSweetProducts
2464089   +          +      1.1566197343428 * S_MntWines  +     1.05956341559861 *
2464090   +        S_MonthsAsCustomer  +    -1.51353620179805 * S_NumCatalogPurchases
2464091   +          +    -1.16737670931605 * S_NumDealsPurchases
2464092   +          +     0.08205195039242 * S_NumDistPurchases
2464093   +          +    -0.65367044520084 * S_NumStorePurchases
2464094   +          +     2.39693083674757 * S_NumWebPurchases
2464095   +          +     0.18432526469897 * S_NumWebVisitsMonth
2464096   +          +    -0.81660690569703 * S_RFMstat  +      0.2679378370467 *
2464097   +        S_RMntFrq  +    -0.12214066685673 * S_Recency
2464098   +          +     1.80138107382539 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -1.16140709294501 * S_AcceptedCmpTotal + -0.87210661607894 *
S_Age + -0.15365607228782 * S_Frq + -1.14855351318782 * S_Income + -0.3792851632462 *
S_Kidhome + -1.20412080219233 * S_Mnt + 0.98615533034973 * S_MntFishProducts +
0.44541456963703 * S_MntFruits + -0.86465923336111 * S_MntGoldProds + -5.15063925950455 *
S_MntMeatProducts + 0.54937255903381 * S_MntSweetProducts + 1.1566197343428 * S_MntWines +
1.05956341559861 * S_MonthsAsCustomer + -1.51353620179805 * S_NumCatalogPurchases +
-1.16737670931605 * S_NumDealsPurchases + 0.08205195039242 * S_NumDistPurchases +
-0.65367044520084 * S_NumStorePurchases + 2.39693083674757 * S_NumWebPurchases +
0.18432526469897 * S_NumWebVisitsMonth + -0.81660690569703 * S_RFMstat + 0.2679378370467 *
S_RMntFrq + -0.12214066685673 * S_Recency + 1.80138107382539 * S_Teenhome ;
2464099   +   H1x1_3  =      2.0905555295419 * S_AcceptedCmpTotal
2464100   +          +    -0.23515107640805 * S_Age  +    -0.34980320997139 * S_Frq
2464101   +          +     0.96612788543649 * S_Income  +    -0.57035066115881 *
2464102   +        S_Kidhome  +     0.22762934410578 * S_Mnt  +    -0.52536382903021 *
2464103   +        S_MntFishProducts  +    -1.18451511831956 * S_MntFruits
2464104   +          +     0.15600368092559 * S_MntGoldProds  +     2.66964572205551 *
2464105   +        S_MntMeatProducts  +    -0.66381928008493 * S_MntSweetProducts
2464106   +          +    -1.34669953562975 * S_MntWines  +     1.35404821514849 *
2464107   +        S_MonthsAsCustomer  +     1.74839628716461 * S_NumCatalogPurchases
2464108   +          +     0.76616480025024 * S_NumDealsPurchases
2464109   +          +     0.42823368706255 * S_NumDistPurchases
2464110   +          +    -1.16998364854907 * S_NumStorePurchases
2464111   +          +     -1.0841896541746 * S_NumWebPurchases
2464112   +          +     2.74837744375079 * S_NumWebVisitsMonth
2464113   +          +    -0.12893804494501 * S_RFMstat  +    -0.62922223536042 *
2464114   +        S_RMntFrq  +    -5.13438280616518 * S_Recency
2464115   +          +    -0.03717013845941 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 2.0905555295419 * S_AcceptedCmpTotal + -0.23515107640805 *
S_Age + -0.34980320997139 * S_Frq + 0.96612788543649 * S_Income + -0.57035066115881 *
S_Kidhome + 0.22762934410578 * S_Mnt + -0.52536382903021 * S_MntFishProducts +
-1.18451511831956 * S_MntFruits + 0.15600368092559 * S_MntGoldProds + 2.66964572205551 *
S_MntMeatProducts + -0.66381928008493 * S_MntSweetProducts + -1.34669953562975 * S_MntWines +
1.35404821514849 * S_MonthsAsCustomer + 1.74839628716461 * S_NumCatalogPurchases +
0.76616480025024 * S_NumDealsPurchases + 0.42823368706255 * S_NumDistPurchases +
-1.16998364854907 * S_NumStorePurchases + -1.0841896541746 * S_NumWebPurchases +
2.74837744375079 * S_NumWebVisitsMonth + -0.12893804494501 * S_RFMstat + -0.62922223536042 *
S_RMntFrq + -5.13438280616518 * S_Recency + -0.03717013845941 * S_Teenhome ;
2464116   +   H1x1_4  =     0.00721395593412 * S_AcceptedCmpTotal
2464117   +          +    -0.01540387767211 * S_Age  +    -0.84860703860633 * S_Frq
2464118   +          +    -1.02288627805121 * S_Income  +    -1.09101870516967 *
2464119   +        S_Kidhome  +    -0.49364597366691 * S_Mnt  +    -0.46832600024559 *
2464120   +        S_MntFishProducts  +     0.18419647776638 * S_MntFruits
2464121   +          +     0.08548650236624 * S_MntGoldProds  +      3.4353205628246 *
2464122   +        S_MntMeatProducts  +    -0.34836704949861 * S_MntSweetProducts
2464123   +          +    -2.43294028965601 * S_MntWines  +       -0.52018014955 *
2464124   +        S_MonthsAsCustomer  +     0.64700842330282 * S_NumCatalogPurchases
2464125   +          +     0.78421010501058 * S_NumDealsPurchases
2464126   +          +     0.01075885160671 * S_NumDistPurchases
2464127   +          +    -1.99395040717832 * S_NumStorePurchases
2464128   +          +    -1.02908330834262 * S_NumWebPurchases
2464129   +          +     2.79163466516477 * S_NumWebVisitsMonth
2464130   +          +    -0.02537920152644 * S_RFMstat  +    -0.42457000565561 *
2464131   +        S_RMntFrq  +     -2.0907247135068 * S_Recency
2464132   +          +     0.74119954026621 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.00721395593412 * S_AcceptedCmpTotal + -0.01540387767211 *
S_Age + -0.84860703860633 * S_Frq + -1.02288627805121 * S_Income + -1.09101870516967 *
S_Kidhome + -0.49364597366691 * S_Mnt + -0.46832600024559 * S_MntFishProducts +
0.18419647776638 * S_MntFruits + 0.08548650236624 * S_MntGoldProds + 3.4353205628246 *
S_MntMeatProducts + -0.34836704949861 * S_MntSweetProducts + -2.43294028965601 * S_MntWines +
-0.52018014955 * S_MonthsAsCustomer + 0.64700842330282 * S_NumCatalogPurchases +
0.78421010501058 * S_NumDealsPurchases + 0.01075885160671 * S_NumDistPurchases +
-1.99395040717832 * S_NumStorePurchases + -1.02908330834262 * S_NumWebPurchases +
2.79163466516477 * S_NumWebVisitsMonth + -0.02537920152644 * S_RFMstat + -0.42457000565561 *
S_RMntFrq + -2.0907247135068 * S_Recency + 0.74119954026621 * S_Teenhome ;
2464133   +   H1x1_5  =    -1.61701205426558 * S_AcceptedCmpTotal
2464134   +          +     0.08257295395479 * S_Age  +    -0.68185680658717 * S_Frq
2464135   +          +    -1.39465125759406 * S_Income  +    -1.25029109577242 *
2464136   +        S_Kidhome  +    -1.09090107886966 * S_Mnt  +     1.64350195586938 *
2464137   +        S_MntFishProducts  +      0.5087421773332 * S_MntFruits
2464138   +          +      0.4047616469084 * S_MntGoldProds  +    -7.16241250715453 *
2464139   +        S_MntMeatProducts  +    -0.92562420397097 * S_MntSweetProducts
2464140   +          +     1.87307481667927 * S_MntWines  +    -0.53417946416471 *
2464141   +        S_MonthsAsCustomer  +    -1.53123660652072 * S_NumCatalogPurchases
2464142   +          +    -1.04219068390022 * S_NumDealsPurchases
2464143   +          +    -0.45770204483973 * S_NumDistPurchases
2464144   +          +    -0.04941442229195 * S_NumStorePurchases
2464145   +          +     0.67187353161183 * S_NumWebPurchases
2464146   +          +     2.01907760553871 * S_NumWebVisitsMonth
2464147   +          +    -1.68329765100269 * S_RFMstat  +     0.29244142334331 *
2464148   +        S_RMntFrq  +    -1.12913051410394 * S_Recency
2464149   +          +     0.43082751824484 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.61701205426558 * S_AcceptedCmpTotal + 0.08257295395479 *
S_Age + -0.68185680658717 * S_Frq + -1.39465125759406 * S_Income + -1.25029109577242 *
S_Kidhome + -1.09090107886966 * S_Mnt + 1.64350195586938 * S_MntFishProducts + 0.5087421773332
* S_MntFruits + 0.4047616469084 * S_MntGoldProds + -7.16241250715453 * S_MntMeatProducts +
-0.92562420397097 * S_MntSweetProducts + 1.87307481667927 * S_MntWines + -0.53417946416471 *
S_MonthsAsCustomer + -1.53123660652072 * S_NumCatalogPurchases + -1.04219068390022 *
S_NumDealsPurchases + -0.45770204483973 * S_NumDistPurchases + -0.04941442229195 *
S_NumStorePurchases + 0.67187353161183 * S_NumWebPurchases + 2.01907760553871 *
S_NumWebVisitsMonth + -1.68329765100269 * S_RFMstat + 0.29244142334331 * S_RMntFrq +
-1.12913051410394 * S_Recency + 0.43082751824484 * S_Teenhome ;
2464150   +   H1x1_1  = H1x1_1  +    -0.44646416045725 * AcceptedCmp10
2464151   +          +    -0.51992887099168 * AcceptedCmp20  +    -1.12974688442196 *
2464152   +        AcceptedCmp30  +    -0.25247614927616 * AcceptedCmp40
2464153   +          +     -1.0839587453165 * AcceptedCmp50  +    -0.37542128912082 *
2464154   +        Complain0  +     0.50509109375746 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.44646416045725 * AcceptedCmp10 + -0.51992887099168
* AcceptedCmp20 + -1.12974688442196 * AcceptedCmp30 + -0.25247614927616 * AcceptedCmp40 +
-1.0839587453165 * AcceptedCmp50 + -0.37542128912082 * Complain0 + 0.50509109375746 *
HigherEducationBinary0 ;
2464155   +   H1x1_2  = H1x1_2  +     1.41785862418118 * AcceptedCmp10
2464156   +          +     0.14869386732553 * AcceptedCmp20  +    -0.34292007253529 *
2464157   +        AcceptedCmp30  +    -0.46450669830265 * AcceptedCmp40
2464158   +          +    -0.84675597945703 * AcceptedCmp50  +     -0.0664649548734 *
2464159   +        Complain0  +    -0.45532665777266 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 1.41785862418118 * AcceptedCmp10 + 0.14869386732553 *
AcceptedCmp20 + -0.34292007253529 * AcceptedCmp30 + -0.46450669830265 * AcceptedCmp40 +
-0.84675597945703 * AcceptedCmp50 + -0.0664649548734 * Complain0 + -0.45532665777266 *
HigherEducationBinary0 ;
2464160   +   H1x1_3  = H1x1_3  +    -0.77549230890552 * AcceptedCmp10
2464161   +          +    -1.36005205352388 * AcceptedCmp20  +    -0.77268925112364 *
2464162   +        AcceptedCmp30  +    -1.48651970256564 * AcceptedCmp40
2464163   +          +    -1.49771960438108 * AcceptedCmp50  +     0.05855673938529 *
2464164   +        Complain0  +      0.5650947463497 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.77549230890552 * AcceptedCmp10 + -1.36005205352388
* AcceptedCmp20 + -0.77268925112364 * AcceptedCmp30 + -1.48651970256564 * AcceptedCmp40 +
-1.49771960438108 * AcceptedCmp50 + 0.05855673938529 * Complain0 + 0.5650947463497 *
HigherEducationBinary0 ;
2464165   +   H1x1_4  = H1x1_4  +    -0.67577364181798 * AcceptedCmp10
2464166   +          +    -0.90920539880387 * AcceptedCmp20  +    -0.10856872028934 *
2464167   +        AcceptedCmp30  +    -0.17408320421731 * AcceptedCmp40
2464168   +          +    -0.40718112138881 * AcceptedCmp50  +    -1.15772819875829 *
2464169   +        Complain0  +    -0.63688652305256 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.67577364181798 * AcceptedCmp10 + -0.90920539880387
* AcceptedCmp20 + -0.10856872028934 * AcceptedCmp30 + -0.17408320421731 * AcceptedCmp40 +
-0.40718112138881 * AcceptedCmp50 + -1.15772819875829 * Complain0 + -0.63688652305256 *
HigherEducationBinary0 ;
2464170   +   H1x1_5  = H1x1_5  +      -0.257461635853 * AcceptedCmp10
2464171   +          +    -0.53931888306725 * AcceptedCmp20  +    -0.18314917937273 *
2464172   +        AcceptedCmp30  +    -0.63373606551928 * AcceptedCmp40
2464173   +          +    -0.22117496766649 * AcceptedCmp50  +    -0.96313784449205 *
2464174   +        Complain0  +    -0.42031825118642 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.257461635853 * AcceptedCmp10 + -0.53931888306725 *
AcceptedCmp20 + -0.18314917937273 * AcceptedCmp30 + -0.63373606551928 * AcceptedCmp40 +
-0.22117496766649 * AcceptedCmp50 + -0.96313784449205 * Complain0 + -0.42031825118642 *
HigherEducationBinary0 ;
2464175   +   H1x1_1  = H1x1_1  +    -0.61947659516101 * Education2n_Cycle
2464176   +          +     0.35542867116569 * EducationBasic  +    -0.40115062807285 *
2464177   +        EducationGraduation  +     0.09596442360106 * EducationMaster
2464178   +          +     2.58907527032049 * Marital_StatusDivorced
2464179   +          +    -2.45549008158921 * Marital_StatusMarried
2464180   +          +     2.56223650840768 * Marital_StatusSingle
2464181   +          +    -2.57680442835747 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.61947659516101 * Education2n_Cycle +
0.35542867116569 * EducationBasic + -0.40115062807285 * EducationGraduation + 0.09596442360106
* EducationMaster + 2.58907527032049 * Marital_StatusDivorced + -2.45549008158921 *
Marital_StatusMarried + 2.56223650840768 * Marital_StatusSingle + -2.57680442835747 *
Marital_StatusTogether ;
2464182   +   H1x1_2  = H1x1_2  +    -0.89996232033524 * Education2n_Cycle
2464183   +          +     0.51901949778729 * EducationBasic  +     0.48428543845596 *
2464184   +        EducationGraduation  +     0.29249899969052 * EducationMaster
2464185   +          +     0.83917299191368 * Marital_StatusDivorced
2464186   +          +    -0.62624692699191 * Marital_StatusMarried
2464187   +          +    -0.22585060624911 * Marital_StatusSingle
2464188   +          +    -1.13600554287291 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.89996232033524 * Education2n_Cycle +
0.51901949778729 * EducationBasic + 0.48428543845596 * EducationGraduation + 0.29249899969052
* EducationMaster + 0.83917299191368 * Marital_StatusDivorced + -0.62624692699191 *
Marital_StatusMarried + -0.22585060624911 * Marital_StatusSingle + -1.13600554287291 *
Marital_StatusTogether ;
2464189   +   H1x1_3  = H1x1_3  +    -0.14267095105584 * Education2n_Cycle
2464190   +          +    -0.02301358792856 * EducationBasic  +     0.52040244367562 *
2464191   +        EducationGraduation  +     -1.3163356801876 * EducationMaster
2464192   +          +    -0.65063506696715 * Marital_StatusDivorced
2464193   +          +    -2.37495865381256 * Marital_StatusMarried
2464194   +          +    -0.54954654146904 * Marital_StatusSingle
2464195   +          +    -2.20184943463859 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.14267095105584 * Education2n_Cycle +
-0.02301358792856 * EducationBasic + 0.52040244367562 * EducationGraduation + -1.3163356801876
* EducationMaster + -0.65063506696715 * Marital_StatusDivorced + -2.37495865381256 *
Marital_StatusMarried + -0.54954654146904 * Marital_StatusSingle + -2.20184943463859 *
Marital_StatusTogether ;
2464196   +   H1x1_4  = H1x1_4  +     0.07824072331908 * Education2n_Cycle
2464197   +          +    -0.70728597193571 * EducationBasic  +    -0.08522817414387 *
2464198   +        EducationGraduation  +     0.07916018399549 * EducationMaster
2464199   +          +     0.16185824798364 * Marital_StatusDivorced
2464200   +          +    -0.08142416735136 * Marital_StatusMarried
2464201   +          +    -0.20392270385969 * Marital_StatusSingle
2464202   +          +    -0.16702436233017 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.07824072331908 * Education2n_Cycle +
-0.70728597193571 * EducationBasic + -0.08522817414387 * EducationGraduation +
0.07916018399549 * EducationMaster + 0.16185824798364 * Marital_StatusDivorced +
-0.08142416735136 * Marital_StatusMarried + -0.20392270385969 * Marital_StatusSingle +
-0.16702436233017 * Marital_StatusTogether ;
2464203   +   H1x1_5  = H1x1_5  +    -0.24374540557838 * Education2n_Cycle
2464204   +          +    -0.69820143786999 * EducationBasic  +    -0.60198982003005 *
2464205   +        EducationGraduation  +     0.28107355175103 * EducationMaster
2464206   +          +      -0.516522631078 * Marital_StatusDivorced
2464207   +          +    -0.61661247789976 * Marital_StatusMarried
2464208   +          +    -0.99533130308294 * Marital_StatusSingle
2464209   +          +    -0.36897004084592 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.24374540557838 * Education2n_Cycle +
-0.69820143786999 * EducationBasic + -0.60198982003005 * EducationGraduation +
0.28107355175103 * EducationMaster + -0.516522631078 * Marital_StatusDivorced +
-0.61661247789976 * Marital_StatusMarried + -0.99533130308294 * Marital_StatusSingle +
-0.36897004084592 * Marital_StatusTogether ;
2464210   +   H1x1_1  =    -2.48464133714558 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -2.48464133714558 + H1x1_1 ;
2464211   +   H1x1_2  =    -1.27353840480002 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -1.27353840480002 + H1x1_2 ;
2464212   +   H1x1_3  =    -1.74000879961851 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -1.74000879961851 + H1x1_3 ;
2464213   +   H1x1_4  =    -0.38838285632991 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.38838285632991 + H1x1_4 ;
2464214   +   H1x1_5  =    -0.14124488553728 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.14124488553728 + H1x1_5 ;
2464215   +   H1x1_6  = 0;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0;
2464216   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
2464217   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2464218   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
2464219   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
2464220   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
2464221   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
2464222   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
2464223   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
2464224   +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
2464225   +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
2464226   +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
2464227   +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
2464228   +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
2464229   +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
2464230   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
2464231   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
2464232   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
2464233   +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
2464234   +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
2464235   +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
2464236   +END;
MPRINT(EM_DIAGRAM):   END;
2464237   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2464238   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2464239   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2464240   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2464241   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2464242   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
2464243   +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
2464244   +END;
MPRINT(EM_DIAGRAM):   END;
2464245   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2464246   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
2464247   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2464248   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2464249   +   H1x2_1  =     0.48404108721156 * S_AcceptedCmpTotal
2464250   +          +    -0.27070568741648 * S_Age  +    -0.78729393257177 * S_Frq
2464251   +          +    -0.22841203379079 * S_Income  +      1.7948359601764 *
2464252   +        S_Kidhome  +     0.16415271082275 * S_Mnt  +     0.68709045116477 *
2464253   +        S_MntFishProducts  +     1.40499150479431 * S_MntFruits
2464254   +          +     1.76690927096327 * S_MntGoldProds  +    -0.47805967324795 *
2464255   +        S_MntMeatProducts  +    -1.98462171861386 * S_MntSweetProducts
2464256   +          +     0.17732042205332 * S_MntWines  +    -2.68647979937092 *
2464257   +        S_MonthsAsCustomer  +     0.66724634672152 * S_NumCatalogPurchases
2464258   +          +    -0.03801022287706 * S_NumDealsPurchases
2464259   +          +    -1.50723574966419 * S_NumDistPurchases
2464260   +          +    -0.21514545448485 * S_NumStorePurchases
2464261   +          +    -0.50179555233865 * S_NumWebPurchases
2464262   +          +    -0.68226572560161 * S_NumWebVisitsMonth
2464263   +          +    -1.16287961930374 * S_RFMstat  +    -0.10835316604382 *
2464264   +        S_RMntFrq  +     0.78178939203913 * S_Recency
2464265   +          +     0.99430928489958 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.48404108721156 * S_AcceptedCmpTotal + -0.27070568741648 *
S_Age + -0.78729393257177 * S_Frq + -0.22841203379079 * S_Income + 1.7948359601764 * S_Kidhome
+ 0.16415271082275 * S_Mnt + 0.68709045116477 * S_MntFishProducts + 1.40499150479431 *
S_MntFruits + 1.76690927096327 * S_MntGoldProds + -0.47805967324795 * S_MntMeatProducts +
-1.98462171861386 * S_MntSweetProducts + 0.17732042205332 * S_MntWines + -2.68647979937092 *
S_MonthsAsCustomer + 0.66724634672152 * S_NumCatalogPurchases + -0.03801022287706 *
S_NumDealsPurchases + -1.50723574966419 * S_NumDistPurchases + -0.21514545448485 *
S_NumStorePurchases + -0.50179555233865 * S_NumWebPurchases + -0.68226572560161 *
S_NumWebVisitsMonth + -1.16287961930374 * S_RFMstat + -0.10835316604382 * S_RMntFrq +
0.78178939203913 * S_Recency + 0.99430928489958 * S_Teenhome ;
2464266   +   H1x2_2  =    -0.36352858735119 * S_AcceptedCmpTotal
2464267   +          +    -0.57224467079409 * S_Age  +    -1.50170848997829 * S_Frq
2464268   +          +    -0.38902839025885 * S_Income  +     -1.1798795668612 *
2464269   +        S_Kidhome  +     -0.1290183198617 * S_Mnt  +     0.76723261406072 *
2464270   +        S_MntFishProducts  +     -0.2940014517298 * S_MntFruits
2464271   +          +     1.10823983171432 * S_MntGoldProds  +    -0.31483479967732 *
2464272   +        S_MntMeatProducts  +     1.52044892546638 * S_MntSweetProducts
2464273   +          +     0.93667207634948 * S_MntWines  +     1.38654947651763 *
2464274   +        S_MonthsAsCustomer  +     0.60618457384701 * S_NumCatalogPurchases
2464275   +          +     0.70551335536975 * S_NumDealsPurchases
2464276   +          +     0.02824488988803 * S_NumDistPurchases
2464277   +          +    -0.47958123842808 * S_NumStorePurchases
2464278   +          +     1.04559003239583 * S_NumWebPurchases
2464279   +          +    -0.58386087813772 * S_NumWebVisitsMonth
2464280   +          +     0.30550498646512 * S_RFMstat  +     0.30157778523343 *
2464281   +        S_RMntFrq  +    -0.05848082255965 * S_Recency
2464282   +          +     1.93017367885145 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.36352858735119 * S_AcceptedCmpTotal + -0.57224467079409 *
S_Age + -1.50170848997829 * S_Frq + -0.38902839025885 * S_Income + -1.1798795668612 *
S_Kidhome + -0.1290183198617 * S_Mnt + 0.76723261406072 * S_MntFishProducts + -0.2940014517298
* S_MntFruits + 1.10823983171432 * S_MntGoldProds + -0.31483479967732 * S_MntMeatProducts +
1.52044892546638 * S_MntSweetProducts + 0.93667207634948 * S_MntWines + 1.38654947651763 *
S_MonthsAsCustomer + 0.60618457384701 * S_NumCatalogPurchases + 0.70551335536975 *
S_NumDealsPurchases + 0.02824488988803 * S_NumDistPurchases + -0.47958123842808 *
S_NumStorePurchases + 1.04559003239583 * S_NumWebPurchases + -0.58386087813772 *
S_NumWebVisitsMonth + 0.30550498646512 * S_RFMstat + 0.30157778523343 * S_RMntFrq +
-0.05848082255965 * S_Recency + 1.93017367885145 * S_Teenhome ;
2464283   +   H1x2_3  =    -1.42573562358231 * S_AcceptedCmpTotal
2464284   +          +    -1.32139459670271 * S_Age  +    -0.65089374259133 * S_Frq
2464285   +          +     0.40762251828155 * S_Income  +     0.07844400105703 *
2464286   +        S_Kidhome  +     0.50965373569965 * S_Mnt  +     0.16029734923155 *
2464287   +        S_MntFishProducts  +     0.09920766855666 * S_MntFruits
2464288   +          +     1.72613699296152 * S_MntGoldProds  +    -0.05634715837952 *
2464289   +        S_MntMeatProducts  +    -0.46288044931269 * S_MntSweetProducts
2464290   +          +    -1.56275217321856 * S_MntWines  +     0.47573724745363 *
2464291   +        S_MonthsAsCustomer  +     0.24362096681468 * S_NumCatalogPurchases
2464292   +          +    -0.28907339261907 * S_NumDealsPurchases
2464293   +          +     0.04310505858352 * S_NumDistPurchases
2464294   +          +    -0.99594604666889 * S_NumStorePurchases
2464295   +          +    -0.58870940220114 * S_NumWebPurchases
2464296   +          +     0.84018399925148 * S_NumWebVisitsMonth
2464297   +          +    -0.19517311010454 * S_RFMstat  +     -0.3463233802461 *
2464298   +        S_RMntFrq  +    -1.47730936960999 * S_Recency
2464299   +          +    -0.88597688046705 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -1.42573562358231 * S_AcceptedCmpTotal + -1.32139459670271 *
S_Age + -0.65089374259133 * S_Frq + 0.40762251828155 * S_Income + 0.07844400105703 * S_Kidhome
+ 0.50965373569965 * S_Mnt + 0.16029734923155 * S_MntFishProducts + 0.09920766855666 *
S_MntFruits + 1.72613699296152 * S_MntGoldProds + -0.05634715837952 * S_MntMeatProducts +
-0.46288044931269 * S_MntSweetProducts + -1.56275217321856 * S_MntWines + 0.47573724745363 *
S_MonthsAsCustomer + 0.24362096681468 * S_NumCatalogPurchases + -0.28907339261907 *
S_NumDealsPurchases + 0.04310505858352 * S_NumDistPurchases + -0.99594604666889 *
S_NumStorePurchases + -0.58870940220114 * S_NumWebPurchases + 0.84018399925148 *
S_NumWebVisitsMonth + -0.19517311010454 * S_RFMstat + -0.3463233802461 * S_RMntFrq +
-1.47730936960999 * S_Recency + -0.88597688046705 * S_Teenhome ;
2464300   +   H1x2_4  =     0.11016580381662 * S_AcceptedCmpTotal
2464301   +          +     0.30908576425954 * S_Age  +     0.34179480828109 * S_Frq
2464302   +          +     0.40584056795753 * S_Income  +    -0.45712899846476 *
2464303   +        S_Kidhome  +     1.12080510316382 * S_Mnt  +     0.48988466623601 *
2464304   +        S_MntFishProducts  +    -0.33589219598754 * S_MntFruits
2464305   +          +     0.89305356089927 * S_MntGoldProds  +    -2.00512215642683 *
2464306   +        S_MntMeatProducts  +     1.10859074670332 * S_MntSweetProducts
2464307   +          +     -1.0064133988839 * S_MntWines  +      0.7768603559605 *
2464308   +        S_MonthsAsCustomer  +     0.97922554259242 * S_NumCatalogPurchases
2464309   +          +     0.52917289878604 * S_NumDealsPurchases
2464310   +          +     0.30974142545809 * S_NumDistPurchases
2464311   +          +    -0.36081450643799 * S_NumStorePurchases
2464312   +          +    -0.28418053386759 * S_NumWebPurchases
2464313   +          +    -0.80759462497096 * S_NumWebVisitsMonth
2464314   +          +    -1.12633439579018 * S_RFMstat  +    -0.14662678398603 *
2464315   +        S_RMntFrq  +    -0.02418118976368 * S_Recency
2464316   +          +    -0.46548253671298 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.11016580381662 * S_AcceptedCmpTotal + 0.30908576425954 *
S_Age + 0.34179480828109 * S_Frq + 0.40584056795753 * S_Income + -0.45712899846476 * S_Kidhome
+ 1.12080510316382 * S_Mnt + 0.48988466623601 * S_MntFishProducts + -0.33589219598754 *
S_MntFruits + 0.89305356089927 * S_MntGoldProds + -2.00512215642683 * S_MntMeatProducts +
1.10859074670332 * S_MntSweetProducts + -1.0064133988839 * S_MntWines + 0.7768603559605 *
S_MonthsAsCustomer + 0.97922554259242 * S_NumCatalogPurchases + 0.52917289878604 *
S_NumDealsPurchases + 0.30974142545809 * S_NumDistPurchases + -0.36081450643799 *
S_NumStorePurchases + -0.28418053386759 * S_NumWebPurchases + -0.80759462497096 *
S_NumWebVisitsMonth + -1.12633439579018 * S_RFMstat + -0.14662678398603 * S_RMntFrq +
-0.02418118976368 * S_Recency + -0.46548253671298 * S_Teenhome ;
2464317   +   H1x2_5  =    -0.55551536908819 * S_AcceptedCmpTotal
2464318   +          +    -0.09163465220674 * S_Age  +    -0.35937602626275 * S_Frq
2464319   +          +     0.61145646041534 * S_Income  +     0.28920493959955 *
2464320   +        S_Kidhome  +     0.71661843805688 * S_Mnt  +     0.25254041554237 *
2464321   +        S_MntFishProducts  +    -0.38704785732563 * S_MntFruits
2464322   +          +    -0.16912995068939 * S_MntGoldProds  +     0.21440191729631 *
2464323   +        S_MntMeatProducts  +    -0.49507693220329 * S_MntSweetProducts
2464324   +          +      0.3153765288287 * S_MntWines  +    -0.15329574285112 *
2464325   +        S_MonthsAsCustomer  +     1.28722879296429 * S_NumCatalogPurchases
2464326   +          +    -0.47500053723253 * S_NumDealsPurchases
2464327   +          +     0.41421086319635 * S_NumDistPurchases
2464328   +          +     0.69664835428137 * S_NumStorePurchases
2464329   +          +     0.66359306812968 * S_NumWebPurchases
2464330   +          +     0.77931462528741 * S_NumWebVisitsMonth
2464331   +          +     0.05868786291548 * S_RFMstat  +     0.77672802649379 *
2464332   +        S_RMntFrq  +    -1.91226042675868 * S_Recency
2464333   +          +     1.79227856637688 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.55551536908819 * S_AcceptedCmpTotal + -0.09163465220674 *
S_Age + -0.35937602626275 * S_Frq + 0.61145646041534 * S_Income + 0.28920493959955 * S_Kidhome
+ 0.71661843805688 * S_Mnt + 0.25254041554237 * S_MntFishProducts + -0.38704785732563 *
S_MntFruits + -0.16912995068939 * S_MntGoldProds + 0.21440191729631 * S_MntMeatProducts +
-0.49507693220329 * S_MntSweetProducts + 0.3153765288287 * S_MntWines + -0.15329574285112 *
S_MonthsAsCustomer + 1.28722879296429 * S_NumCatalogPurchases + -0.47500053723253 *
S_NumDealsPurchases + 0.41421086319635 * S_NumDistPurchases + 0.69664835428137 *
S_NumStorePurchases + 0.66359306812968 * S_NumWebPurchases + 0.77931462528741 *
S_NumWebVisitsMonth + 0.05868786291548 * S_RFMstat + 0.77672802649379 * S_RMntFrq +
-1.91226042675868 * S_Recency + 1.79227856637688 * S_Teenhome ;
2464334   +   H1x2_1  = H1x2_1  +     1.13471289065691 * AcceptedCmp10
2464335   +          +     0.65974383309652 * AcceptedCmp20  +    -1.87292531678796 *
2464336   +        AcceptedCmp30  +      -1.353797047409 * AcceptedCmp40
2464337   +          +     0.20616786486771 * AcceptedCmp50  +    -0.38264326101775 *
2464338   +        Complain0  +    -0.17807638061615 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 1.13471289065691 * AcceptedCmp10 + 0.65974383309652 *
AcceptedCmp20 + -1.87292531678796 * AcceptedCmp30 + -1.353797047409 * AcceptedCmp40 +
0.20616786486771 * AcceptedCmp50 + -0.38264326101775 * Complain0 + -0.17807638061615 *
HigherEducationBinary0 ;
2464339   +   H1x2_2  = H1x2_2  +     1.21347348622419 * AcceptedCmp10
2464340   +          +    -0.25372740217388 * AcceptedCmp20  +     1.86937589112006 *
2464341   +        AcceptedCmp30  +    -0.04754722838516 * AcceptedCmp40
2464342   +          +    -0.08078800460742 * AcceptedCmp50  +     1.62387969342769 *
2464343   +        Complain0  +    -0.78004732229344 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 1.21347348622419 * AcceptedCmp10 + -0.25372740217388 *
AcceptedCmp20 + 1.86937589112006 * AcceptedCmp30 + -0.04754722838516 * AcceptedCmp40 +
-0.08078800460742 * AcceptedCmp50 + 1.62387969342769 * Complain0 + -0.78004732229344 *
HigherEducationBinary0 ;
2464344   +   H1x2_3  = H1x2_3  +    -0.02152665189186 * AcceptedCmp10
2464345   +          +     0.57207081192818 * AcceptedCmp20  +      0.6212177562119 *
2464346   +        AcceptedCmp30  +    -0.73691462528053 * AcceptedCmp40
2464347   +          +    -0.35326427815838 * AcceptedCmp50  +     0.14875513793176 *
2464348   +        Complain0  +    -0.13978395235915 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -0.02152665189186 * AcceptedCmp10 + 0.57207081192818 *
AcceptedCmp20 + 0.6212177562119 * AcceptedCmp30 + -0.73691462528053 * AcceptedCmp40 +
-0.35326427815838 * AcceptedCmp50 + 0.14875513793176 * Complain0 + -0.13978395235915 *
HigherEducationBinary0 ;
2464349   +   H1x2_4  = H1x2_4  +     0.87315450122595 * AcceptedCmp10
2464350   +          +      0.7868322457627 * AcceptedCmp20  +    -0.23332719513906 *
2464351   +        AcceptedCmp30  +    -0.68817918979928 * AcceptedCmp40
2464352   +          +    -0.57204462412445 * AcceptedCmp50  +    -0.86223238269616 *
2464353   +        Complain0  +     -0.3126348645458 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.87315450122595 * AcceptedCmp10 + 0.7868322457627 *
AcceptedCmp20 + -0.23332719513906 * AcceptedCmp30 + -0.68817918979928 * AcceptedCmp40 +
-0.57204462412445 * AcceptedCmp50 + -0.86223238269616 * Complain0 + -0.3126348645458 *
HigherEducationBinary0 ;
2464354   +   H1x2_5  = H1x2_5  +     0.29282165496733 * AcceptedCmp10
2464355   +          +     1.51708756092369 * AcceptedCmp20  +     1.20268215158483 *
2464356   +        AcceptedCmp30  +     0.30521477351547 * AcceptedCmp40
2464357   +          +    -0.58691162701837 * AcceptedCmp50  +     0.75641665624817 *
2464358   +        Complain0  +      0.7018761099345 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.29282165496733 * AcceptedCmp10 + 1.51708756092369 *
AcceptedCmp20 + 1.20268215158483 * AcceptedCmp30 + 0.30521477351547 * AcceptedCmp40 +
-0.58691162701837 * AcceptedCmp50 + 0.75641665624817 * Complain0 + 0.7018761099345 *
HigherEducationBinary0 ;
2464359   +   H1x2_1  = H1x2_1  +    -0.68955031483686 * Education2n_Cycle
2464360   +          +    -1.63162976419312 * EducationBasic  +     1.58569020932253 *
2464361   +        EducationGraduation  +     0.89392741557091 * EducationMaster
2464362   +          +    -1.34742914042312 * Marital_StatusDivorced
2464363   +          +    -0.75378934918763 * Marital_StatusMarried
2464364   +          +    -1.85411678929217 * Marital_StatusSingle
2464365   +          +     0.34579160965376 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.68955031483686 * Education2n_Cycle +
-1.63162976419312 * EducationBasic + 1.58569020932253 * EducationGraduation + 0.89392741557091
* EducationMaster + -1.34742914042312 * Marital_StatusDivorced + -0.75378934918763 *
Marital_StatusMarried + -1.85411678929217 * Marital_StatusSingle + 0.34579160965376 *
Marital_StatusTogether ;
2464366   +   H1x2_2  = H1x2_2  +     0.91842441316819 * Education2n_Cycle
2464367   +          +    -0.10372785737624 * EducationBasic  +     1.79022097342125 *
2464368   +        EducationGraduation  +      1.4602485898642 * EducationMaster
2464369   +          +     0.47958659206261 * Marital_StatusDivorced
2464370   +          +     -0.9665584294045 * Marital_StatusMarried
2464371   +          +      0.9733784530538 * Marital_StatusSingle
2464372   +          +     0.19258101270915 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.91842441316819 * Education2n_Cycle +
-0.10372785737624 * EducationBasic + 1.79022097342125 * EducationGraduation + 1.4602485898642
* EducationMaster + 0.47958659206261 * Marital_StatusDivorced + -0.9665584294045 *
Marital_StatusMarried + 0.9733784530538 * Marital_StatusSingle + 0.19258101270915 *
Marital_StatusTogether ;
2464373   +   H1x2_3  = H1x2_3  +     1.26817216331303 * Education2n_Cycle
2464374   +          +    -1.60153781162075 * EducationBasic  +    -0.32068567398782 *
2464375   +        EducationGraduation  +     1.49772418974753 * EducationMaster
2464376   +          +    -0.56894207908284 * Marital_StatusDivorced
2464377   +          +    -0.96715106987195 * Marital_StatusMarried
2464378   +          +     1.18678144721443 * Marital_StatusSingle
2464379   +          +     1.05940264255347 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 1.26817216331303 * Education2n_Cycle +
-1.60153781162075 * EducationBasic + -0.32068567398782 * EducationGraduation +
1.49772418974753 * EducationMaster + -0.56894207908284 * Marital_StatusDivorced +
-0.96715106987195 * Marital_StatusMarried + 1.18678144721443 * Marital_StatusSingle +
1.05940264255347 * Marital_StatusTogether ;
2464380   +   H1x2_4  = H1x2_4  +    -1.19824707240276 * Education2n_Cycle
2464381   +          +     0.43905907692169 * EducationBasic  +    -1.18279972023424 *
2464382   +        EducationGraduation  +    -2.01250798855133 * EducationMaster
2464383   +          +     -0.6061959224661 * Marital_StatusDivorced
2464384   +          +     0.03495844244684 * Marital_StatusMarried
2464385   +          +    -0.63896361063244 * Marital_StatusSingle
2464386   +          +     0.74357887057422 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + -1.19824707240276 * Education2n_Cycle +
0.43905907692169 * EducationBasic + -1.18279972023424 * EducationGraduation +
-2.01250798855133 * EducationMaster + -0.6061959224661 * Marital_StatusDivorced +
0.03495844244684 * Marital_StatusMarried + -0.63896361063244 * Marital_StatusSingle +
0.74357887057422 * Marital_StatusTogether ;
2464387   +   H1x2_5  = H1x2_5  +     -0.6530237200396 * Education2n_Cycle
2464388   +          +     0.90062473169279 * EducationBasic  +    -3.01933913602199 *
2464389   +        EducationGraduation  +     -0.1598988619204 * EducationMaster
2464390   +          +     0.82178907301319 * Marital_StatusDivorced
2464391   +          +     1.69543553114589 * Marital_StatusMarried
2464392   +          +     -2.1272067363559 * Marital_StatusSingle
2464393   +          +     0.24274508474634 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + -0.6530237200396 * Education2n_Cycle +
0.90062473169279 * EducationBasic + -3.01933913602199 * EducationGraduation + -0.1598988619204
* EducationMaster + 0.82178907301319 * Marital_StatusDivorced + 1.69543553114589 *
Marital_StatusMarried + -2.1272067363559 * Marital_StatusSingle + 0.24274508474634 *
Marital_StatusTogether ;
2464394   +   H1x2_1  =     0.30842509451224 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.30842509451224 + H1x2_1 ;
2464395   +   H1x2_2  =     1.79200699407075 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 1.79200699407075 + H1x2_2 ;
2464396   +   H1x2_3  =     0.66706944906809 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = 0.66706944906809 + H1x2_3 ;
2464397   +   H1x2_4  =     -0.7356254138015 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.7356254138015 + H1x2_4 ;
2464398   +   H1x2_5  =    -0.68066575174095 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.68066575174095 + H1x2_5 ;
2464399   +   H1x2_6  = 0;
MPRINT(EM_DIAGRAM):   H1x2_6 = 0;
2464400   +   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 );
2464401   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2464402   +   H1x2_1  = EXP(H1x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(H1x2_1 - _MAX_);
2464403   +   _SUM_ = _SUM_ + H1x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_1 ;
2464404   +   H1x2_2  = EXP(H1x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(H1x2_2 - _MAX_);
2464405   +   _SUM_ = _SUM_ + H1x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_2 ;
2464406   +   H1x2_3  = EXP(H1x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(H1x2_3 - _MAX_);
2464407   +   _SUM_ = _SUM_ + H1x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_3 ;
2464408   +   H1x2_4  = EXP(H1x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(H1x2_4 - _MAX_);
2464409   +   _SUM_ = _SUM_ + H1x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_4 ;
2464410   +   H1x2_5  = EXP(H1x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(H1x2_5 - _MAX_);
2464411   +   _SUM_ = _SUM_ + H1x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_5 ;
2464412   +   H1x2_6  = EXP(H1x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(H1x2_6 - _MAX_);
2464413   +   _SUM_ = _SUM_ + H1x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_6 ;
2464414   +   H1x2_1  = H1x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 / _SUM_;
2464415   +   H1x2_2  = H1x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 / _SUM_;
2464416   +   H1x2_3  = H1x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 / _SUM_;
2464417   +   H1x2_4  = H1x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 / _SUM_;
2464418   +   H1x2_5  = H1x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 / _SUM_;
2464419   +   H1x2_6  = H1x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 / _SUM_;
2464420   +END;
MPRINT(EM_DIAGRAM):   END;
2464421   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2464422   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
2464423   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
2464424   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
2464425   +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
2464426   +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
2464427   +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
2464428   +END;
MPRINT(EM_DIAGRAM):   END;
2464429   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2464430   +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
2464431   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2464432   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2464433   +   H2x1_1  =      0.7656278374321 * H1x1_1  +     1.18988619460831 * H1x1_2
2464434   +          +    -0.68458045558713 * H1x1_3  +     0.49093980591245 * H1x1_4
2464435   +          +    -1.27959429919804 * H1x1_5  +    -1.38760297105319 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 0.7656278374321 * H1x1_1 + 1.18988619460831 * H1x1_2 +
-0.68458045558713 * H1x1_3 + 0.49093980591245 * H1x1_4 + -1.27959429919804 * H1x1_5 +
-1.38760297105319 * H1x1_6 ;
2464436   +   H2x1_2  =    -1.48941810274544 * H1x1_1  +     1.75443095464294 * H1x1_2
2464437   +          +    -1.63478694878031 * H1x1_3  +    -0.69296364459258 * H1x1_4
2464438   +          +     3.14007823471691 * H1x1_5  +     2.71965753640902 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -1.48941810274544 * H1x1_1 + 1.75443095464294 * H1x1_2 +
-1.63478694878031 * H1x1_3 + -0.69296364459258 * H1x1_4 + 3.14007823471691 * H1x1_5 +
2.71965753640902 * H1x1_6 ;
2464439   +   H2x1_3  =     1.07426996100463 * H1x1_1  +    -1.76796943416489 * H1x1_2
2464440   +          +    -0.11946940948224 * H1x1_3  +     1.25457449221991 * H1x1_4
2464441   +          +     -1.4079980040852 * H1x1_5  +    -0.94725163293394 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.07426996100463 * H1x1_1 + -1.76796943416489 * H1x1_2 +
-0.11946940948224 * H1x1_3 + 1.25457449221991 * H1x1_4 + -1.4079980040852 * H1x1_5 +
-0.94725163293394 * H1x1_6 ;
2464442   +   H2x1_4  =    -0.00078893231548 * H1x1_1  +     0.06396324179717 * H1x1_2
2464443   +          +    -0.13674165204668 * H1x1_3  +    -0.26576379023249 * H1x1_4
2464444   +          +     0.44513643867194 * H1x1_5  +     0.66585878141635 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -0.00078893231548 * H1x1_1 + 0.06396324179717 * H1x1_2 +
-0.13674165204668 * H1x1_3 + -0.26576379023249 * H1x1_4 + 0.44513643867194 * H1x1_5 +
0.66585878141635 * H1x1_6 ;
2464445   +   H2x1_5  =     -2.8467581879118 * H1x1_1  +     2.94182061339515 * H1x1_2
2464446   +          +    -3.43021438685063 * H1x1_3  +    -4.00045607730935 * H1x1_4
2464447   +          +     3.09230566797337 * H1x1_5  +     3.57592566919388 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -2.8467581879118 * H1x1_1 + 2.94182061339515 * H1x1_2 +
-3.43021438685063 * H1x1_3 + -4.00045607730935 * H1x1_4 + 3.09230566797337 * H1x1_5 +
3.57592566919388 * H1x1_6 ;
2464448   +   H2x1_6  =    -0.29912975132561 * H1x1_1  +     0.25554634262501 * H1x1_2
2464449   +          +    -0.62666868576544 * H1x1_3  +     1.54567563696489 * H1x1_4
2464450   +          +     1.87530466579189 * H1x1_5  +    -0.32006241006585 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = -0.29912975132561 * H1x1_1 + 0.25554634262501 * H1x1_2 +
-0.62666868576544 * H1x1_3 + 1.54567563696489 * H1x1_4 + 1.87530466579189 * H1x1_5 +
-0.32006241006585 * H1x1_6 ;
2464451   +   H2x1_1  = H2x1_1  +    -0.53923803948063 * H1x2_1
2464452   +          +    -0.14551996067575 * H1x2_2  +     1.15730137448351 * H1x2_3
2464453   +          +     0.02585401686791 * H1x2_4  +     -0.9274056409194 * H1x2_5
2464454   +          +    -0.07237646966438 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -0.53923803948063 * H1x2_1 + -0.14551996067575 *
H1x2_2 + 1.15730137448351 * H1x2_3 + 0.02585401686791 * H1x2_4 + -0.9274056409194 * H1x2_5 +
-0.07237646966438 * H1x2_6 ;
2464455   +   H2x1_2  = H2x1_2  +     -0.1441321293455 * H1x2_1
2464456   +          +    -0.53271770203833 * H1x2_2  +    -2.80064282115477 * H1x2_3
2464457   +          +    -1.05759395901612 * H1x2_4  +    -0.55127059339304 * H1x2_5
2464458   +          +     0.35471332651631 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -0.1441321293455 * H1x2_1 + -0.53271770203833 * H1x2_2
+ -2.80064282115477 * H1x2_3 + -1.05759395901612 * H1x2_4 + -0.55127059339304 * H1x2_5 +
0.35471332651631 * H1x2_6 ;
2464459   +   H2x1_3  = H2x1_3  +     -0.5351190580444 * H1x2_1
2464460   +          +    -0.02107048725988 * H1x2_2  +    -0.83389437376968 * H1x2_3
2464461   +          +    -0.80183937400902 * H1x2_4  +    -0.66588385104453 * H1x2_5
2464462   +          +      0.5218140468737 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -0.5351190580444 * H1x2_1 + -0.02107048725988 * H1x2_2
+ -0.83389437376968 * H1x2_3 + -0.80183937400902 * H1x2_4 + -0.66588385104453 * H1x2_5 +
0.5218140468737 * H1x2_6 ;
2464463   +   H2x1_4  = H2x1_4  +     1.89050022127485 * H1x2_1
2464464   +          +     -2.6557601537516 * H1x2_2  +     0.99126360053411 * H1x2_3
2464465   +          +    -0.44091776054792 * H1x2_4  +    -1.48547403065153 * H1x2_5
2464466   +          +    -0.67920869444907 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 1.89050022127485 * H1x2_1 + -2.6557601537516 * H1x2_2
+ 0.99126360053411 * H1x2_3 + -0.44091776054792 * H1x2_4 + -1.48547403065153 * H1x2_5 +
-0.67920869444907 * H1x2_6 ;
2464467   +   H2x1_5  = H2x1_5  +      0.2827883572995 * H1x2_1
2464468   +          +    -0.68177519072226 * H1x2_2  +    -1.62062483607713 * H1x2_3
2464469   +          +     0.24454579481466 * H1x2_4  +    -0.07591553404219 * H1x2_5
2464470   +          +      1.1175989027563 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + 0.2827883572995 * H1x2_1 + -0.68177519072226 * H1x2_2
+ -1.62062483607713 * H1x2_3 + 0.24454579481466 * H1x2_4 + -0.07591553404219 * H1x2_5 +
1.1175989027563 * H1x2_6 ;
2464471   +   H2x1_6  = H2x1_6  +    -0.00603649892235 * H1x2_1
2464472   +          +    -1.39053357060307 * H1x2_2  +    -1.34023350990878 * H1x2_3
2464473   +          +    -0.76811804565852 * H1x2_4  +    -1.40869786147662 * H1x2_5
2464474   +          +     1.54589390085972 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + -0.00603649892235 * H1x2_1 + -1.39053357060307 *
H1x2_2 + -1.34023350990878 * H1x2_3 + -0.76811804565852 * H1x2_4 + -1.40869786147662 * H1x2_5
+ 1.54589390085972 * H1x2_6 ;
2464475   +   H2x1_1  =     0.47873396703524 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 0.47873396703524 + H2x1_1 ;
2464476   +   H2x1_2  =     -0.0000340630035 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -0.0000340630035 + H2x1_2 ;
2464477   +   H2x1_3  =     0.35556259592214 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 0.35556259592214 + H2x1_3 ;
2464478   +   H2x1_4  =     1.01896219314016 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.01896219314016 + H2x1_4 ;
2464479   +   H2x1_5  =     0.72195082860145 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = 0.72195082860145 + H2x1_5 ;
2464480   +   H2x1_6  =     0.24171639764515 + H2x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 0.24171639764515 + H2x1_6 ;
2464481   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2464482   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2464483   +   H2x1_1  = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
2464484   +   H2x1_2  = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
2464485   +   H2x1_3  = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
2464486   +   H2x1_4  = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
2464487   +   H2x1_5  = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_5 = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
2464488   +   H2x1_6  = 1.0 / (1.0 + EXP(MIN( - H2x1_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.0 / (1.0 + EXP(MIN( - H2x1_6 , _EXP_BAR)));
2464489   +END;
MPRINT(EM_DIAGRAM):   END;
2464490   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2464491   +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
2464492   +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
2464493   +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
2464494   +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
2464495   +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
2464496   +   H2x1_6  = .;
MPRINT(EM_DIAGRAM):   H2x1_6 = .;
2464497   +END;
MPRINT(EM_DIAGRAM):   END;
2464498   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2464499   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2464500   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2464501   +
2464502   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2464503   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2464504   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2464505   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2464506   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2464507   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2464508   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2464509   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2464510   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2464511   +end;
MPRINT(EM_DIAGRAM):   end;
2464512   +else do;
MPRINT(EM_DIAGRAM):   else do;
2464513   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2464514   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2464515   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2464516   +   end;
MPRINT(EM_DIAGRAM):   end;
2464517   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2464518   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2464519   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2464520   +   end;
MPRINT(EM_DIAGRAM):   end;
2464521   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2464522   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2464523   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2464524   +   end;
MPRINT(EM_DIAGRAM):   end;
2464525   +end;
MPRINT(EM_DIAGRAM):   end;
2464526   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2464527   +   P_DepVar1  =     7.13056975005701 * H2x1_1  +    -9.26714696465882 * H2x1_2
2464528   +          +     9.36351037194964 * H2x1_3  +     2.76582940055979 * H2x1_4
2464529   +          +    -20.1354182036801 * H2x1_5  +     1.54726164498938 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 7.13056975005701 * H2x1_1 + -9.26714696465882 * H2x1_2 +
9.36351037194964 * H2x1_3 + 2.76582940055979 * H2x1_4 + -20.1354182036801 * H2x1_5 +
1.54726164498938 * H2x1_6 ;
2464530   +   P_DepVar1  =     5.03726079820845 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 5.03726079820845 + P_DepVar1 ;
2464531   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2464532   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2464533   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2464534   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2464535   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2464536   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2464537   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2464538   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2464539   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2464540   +END;
MPRINT(EM_DIAGRAM):   END;
2464541   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2464542   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2464543   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2464544   +END;
MPRINT(EM_DIAGRAM):   END;
2464545   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2464546   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2464547   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2464548   +END;
MPRINT(EM_DIAGRAM):   END;
2464549   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2464550   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2464551   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2464552   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2464553   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2464554   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2464555   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2464556   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2464557   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2464558   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2464559   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2464560   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2464561   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2464562   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2464563   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2464564   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2464565   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2464566   +END;
MPRINT(EM_DIAGRAM):   END;
2464567   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2464568   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2464569   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2464570   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2464571   +* Renaming variables for AutoNeural11;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural11;
2464572   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2464573   +* Renaming Posterior variables for AutoNeural11;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural11;
2464574   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2464575   +drop AutoNeural11_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural11_P_DepVar1;
2464576   +AutoNeural11_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural11_P_DepVar1 = P_DepVar1;
2464577   +drop AutoNeural11_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural11_P_DepVar0;
2464578   +AutoNeural11_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural11_P_DepVar0 = P_DepVar0;
2464579   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2464580   +* Renaming _WARN_ variable for AutoNeural11;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural11;
2464581   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2464582   +length AutoNeural11_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural11_WARN_ $4;
2464583   +drop AutoNeural11_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural11_WARN_;
2464584   +AutoNeural11_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural11_WARN_ = _WARN_;
2464585   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2464586   +* Ensmbl46: Scoring Code of model 3 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl46: Scoring Code of model 3 of 5;
2464587   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2464588   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2464589   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
2464590   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2464591   +* NODE: AutoNeural12;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural12;
2464592   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2464593   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2464594   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2464595   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2464596   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2464597   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2464598   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2464599   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2464600   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2464601   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2464602   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2464603   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2464604   +LENGTH _WARN_ $4
2464605   +      F_DepVar  $ 12
2464606   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2464607   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2464608   +
2464609   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2464610   +
2464611   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2464612   +
2464613   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2464614   +
2464615   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2464616   +
2464617   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2464618   +
2464619   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2464620   +
2464621   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2464622   +
2464623   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2464624   +
2464625   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2464626   +
2464627   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2464628   +
2464629   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2464630   +
2464631   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2464632   +
2464633   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2464634   +
2464635   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2464636   +
2464637   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2464638   +
2464639   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2464640   +
2464641   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2464642   +
2464643   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2464644   +
2464645   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2464646   +
2464647   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2464648   +
2464649   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2464650   +
2464651   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2464652   +
2464653   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2464654   +
2464655   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2464656   +
2464657   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2464658   +
2464659   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2464660   +
2464661   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2464662   +
2464663   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2464664   +
2464665   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2464666   +
2464667   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2464668   +
2464669   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2464670   +
2464671   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2464672   +
2464673   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2464674   +
2464675   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2464676   +
2464677   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2464678   +
2464679   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2464680   +
2464681   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2464682   +
2464683   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2464684   +
2464685   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2464686   +
2464687   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2464688   +
2464689   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2464690   +
2464691   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
2464692   +
2464693   +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
2464694   +
2464695   +      label H1x1_7 = 'Hidden: H1x1_=7' ;
MPRINT(EM_DIAGRAM):   label H1x1_7 = 'Hidden: H1x1_=7' ;
2464696   +
2464697   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
2464698   +
2464699   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
2464700   +
2464701   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
2464702   +
2464703   +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
2464704   +
2464705   +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
2464706   +
2464707   +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
2464708   +
2464709   +      label H1x2_7 = 'Hidden: H1x2_=7' ;
MPRINT(EM_DIAGRAM):   label H1x2_7 = 'Hidden: H1x2_=7' ;
2464710   +
2464711   +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
2464712   +
2464713   +      label H1x3_2 = 'Hidden: H1x3_=2' ;
MPRINT(EM_DIAGRAM):   label H1x3_2 = 'Hidden: H1x3_=2' ;
2464714   +
2464715   +      label H1x3_3 = 'Hidden: H1x3_=3' ;
MPRINT(EM_DIAGRAM):   label H1x3_3 = 'Hidden: H1x3_=3' ;
2464716   +
2464717   +      label H1x3_4 = 'Hidden: H1x3_=4' ;
MPRINT(EM_DIAGRAM):   label H1x3_4 = 'Hidden: H1x3_=4' ;
2464718   +
2464719   +      label H1x3_5 = 'Hidden: H1x3_=5' ;
MPRINT(EM_DIAGRAM):   label H1x3_5 = 'Hidden: H1x3_=5' ;
2464720   +
2464721   +      label H1x3_6 = 'Hidden: H1x3_=6' ;
MPRINT(EM_DIAGRAM):   label H1x3_6 = 'Hidden: H1x3_=6' ;
2464722   +
2464723   +      label H1x3_7 = 'Hidden: H1x3_=7' ;
MPRINT(EM_DIAGRAM):   label H1x3_7 = 'Hidden: H1x3_=7' ;
2464724   +
2464725   +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
2464726   +
2464727   +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
2464728   +
2464729   +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
2464730   +
2464731   +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
2464732   +
2464733   +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
2464734   +
2464735   +      label H2x1_6 = 'Hidden: H2x1_=6' ;
MPRINT(EM_DIAGRAM):   label H2x1_6 = 'Hidden: H2x1_=6' ;
2464736   +
2464737   +      label H2x1_7 = 'Hidden: H2x1_=7' ;
MPRINT(EM_DIAGRAM):   label H2x1_7 = 'Hidden: H2x1_=7' ;
2464738   +
2464739   +      label H2x2_1 = 'Hidden: H2x2_=1' ;
MPRINT(EM_DIAGRAM):   label H2x2_1 = 'Hidden: H2x2_=1' ;
2464740   +
2464741   +      label H2x2_2 = 'Hidden: H2x2_=2' ;
MPRINT(EM_DIAGRAM):   label H2x2_2 = 'Hidden: H2x2_=2' ;
2464742   +
2464743   +      label H2x2_3 = 'Hidden: H2x2_=3' ;
MPRINT(EM_DIAGRAM):   label H2x2_3 = 'Hidden: H2x2_=3' ;
2464744   +
2464745   +      label H2x2_4 = 'Hidden: H2x2_=4' ;
MPRINT(EM_DIAGRAM):   label H2x2_4 = 'Hidden: H2x2_=4' ;
2464746   +
2464747   +      label H2x2_5 = 'Hidden: H2x2_=5' ;
MPRINT(EM_DIAGRAM):   label H2x2_5 = 'Hidden: H2x2_=5' ;
2464748   +
2464749   +      label H2x2_6 = 'Hidden: H2x2_=6' ;
MPRINT(EM_DIAGRAM):   label H2x2_6 = 'Hidden: H2x2_=6' ;
2464750   +
2464751   +      label H2x2_7 = 'Hidden: H2x2_=7' ;
MPRINT(EM_DIAGRAM):   label H2x2_7 = 'Hidden: H2x2_=7' ;
2464752   +
2464753   +      label H3x1_1 = 'Hidden: H3x1_=1' ;
MPRINT(EM_DIAGRAM):   label H3x1_1 = 'Hidden: H3x1_=1' ;
2464754   +
2464755   +      label H3x1_2 = 'Hidden: H3x1_=2' ;
MPRINT(EM_DIAGRAM):   label H3x1_2 = 'Hidden: H3x1_=2' ;
2464756   +
2464757   +      label H3x1_3 = 'Hidden: H3x1_=3' ;
MPRINT(EM_DIAGRAM):   label H3x1_3 = 'Hidden: H3x1_=3' ;
2464758   +
2464759   +      label H3x1_4 = 'Hidden: H3x1_=4' ;
MPRINT(EM_DIAGRAM):   label H3x1_4 = 'Hidden: H3x1_=4' ;
2464760   +
2464761   +      label H3x1_5 = 'Hidden: H3x1_=5' ;
MPRINT(EM_DIAGRAM):   label H3x1_5 = 'Hidden: H3x1_=5' ;
2464762   +
2464763   +      label H3x1_6 = 'Hidden: H3x1_=6' ;
MPRINT(EM_DIAGRAM):   label H3x1_6 = 'Hidden: H3x1_=6' ;
2464764   +
2464765   +      label H3x1_7 = 'Hidden: H3x1_=7' ;
MPRINT(EM_DIAGRAM):   label H3x1_7 = 'Hidden: H3x1_=7' ;
2464766   +
2464767   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2464768   +
2464769   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2464770   +
2464771   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2464772   +
2464773   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2464774   +
2464775   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2464776   +
2464777   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2464778   +
2464779   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2464780   +
2464781   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2464782   +
2464783   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2464784   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2464785   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2464786   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2464787   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2464788   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2464789   +end;
MPRINT(EM_DIAGRAM):   end;
2464790   +else do;
MPRINT(EM_DIAGRAM):   else do;
2464791   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2464792   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2464793   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2464794   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2464795   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2464796   +   end;
MPRINT(EM_DIAGRAM):   end;
2464797   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2464798   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2464799   +   end;
MPRINT(EM_DIAGRAM):   end;
2464800   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2464801   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2464802   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2464803   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2464804   +   end;
MPRINT(EM_DIAGRAM):   end;
2464805   +end;
MPRINT(EM_DIAGRAM):   end;
2464806   +
2464807   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2464808   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2464809   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2464810   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2464811   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2464812   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2464813   +end;
MPRINT(EM_DIAGRAM):   end;
2464814   +else do;
MPRINT(EM_DIAGRAM):   else do;
2464815   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2464816   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2464817   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2464818   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2464819   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2464820   +   end;
MPRINT(EM_DIAGRAM):   end;
2464821   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2464822   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2464823   +   end;
MPRINT(EM_DIAGRAM):   end;
2464824   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2464825   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2464826   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2464827   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2464828   +   end;
MPRINT(EM_DIAGRAM):   end;
2464829   +end;
MPRINT(EM_DIAGRAM):   end;
2464830   +
2464831   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2464832   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2464833   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2464834   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2464835   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2464836   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2464837   +end;
MPRINT(EM_DIAGRAM):   end;
2464838   +else do;
MPRINT(EM_DIAGRAM):   else do;
2464839   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2464840   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2464841   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2464842   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2464843   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2464844   +   end;
MPRINT(EM_DIAGRAM):   end;
2464845   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2464846   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2464847   +   end;
MPRINT(EM_DIAGRAM):   end;
2464848   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2464849   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2464850   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2464851   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2464852   +   end;
MPRINT(EM_DIAGRAM):   end;
2464853   +end;
MPRINT(EM_DIAGRAM):   end;
2464854   +
2464855   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2464856   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2464857   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2464858   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2464859   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2464860   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2464861   +end;
MPRINT(EM_DIAGRAM):   end;
2464862   +else do;
MPRINT(EM_DIAGRAM):   else do;
2464863   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2464864   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2464865   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2464866   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2464867   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2464868   +   end;
MPRINT(EM_DIAGRAM):   end;
2464869   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2464870   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2464871   +   end;
MPRINT(EM_DIAGRAM):   end;
2464872   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2464873   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2464874   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2464875   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2464876   +   end;
MPRINT(EM_DIAGRAM):   end;
2464877   +end;
MPRINT(EM_DIAGRAM):   end;
2464878   +
2464879   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2464880   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2464881   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2464882   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2464883   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2464884   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2464885   +end;
MPRINT(EM_DIAGRAM):   end;
2464886   +else do;
MPRINT(EM_DIAGRAM):   else do;
2464887   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2464888   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2464889   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2464890   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2464891   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2464892   +   end;
MPRINT(EM_DIAGRAM):   end;
2464893   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2464894   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2464895   +   end;
MPRINT(EM_DIAGRAM):   end;
2464896   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2464897   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2464898   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2464899   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2464900   +   end;
MPRINT(EM_DIAGRAM):   end;
2464901   +end;
MPRINT(EM_DIAGRAM):   end;
2464902   +
2464903   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2464904   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2464905   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2464906   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2464907   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2464908   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2464909   +end;
MPRINT(EM_DIAGRAM):   end;
2464910   +else do;
MPRINT(EM_DIAGRAM):   else do;
2464911   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2464912   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2464913   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2464914   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2464915   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2464916   +   end;
MPRINT(EM_DIAGRAM):   end;
2464917   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2464918   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2464919   +   end;
MPRINT(EM_DIAGRAM):   end;
2464920   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2464921   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2464922   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2464923   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2464924   +   end;
MPRINT(EM_DIAGRAM):   end;
2464925   +end;
MPRINT(EM_DIAGRAM):   end;
2464926   +
2464927   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2464928   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2464929   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2464930   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2464931   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2464932   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2464933   +end;
MPRINT(EM_DIAGRAM):   end;
2464934   +else do;
MPRINT(EM_DIAGRAM):   else do;
2464935   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2464936   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2464937   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2464938   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2464939   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2464940   +   end;
MPRINT(EM_DIAGRAM):   end;
2464941   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2464942   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2464943   +   end;
MPRINT(EM_DIAGRAM):   end;
2464944   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2464945   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2464946   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2464947   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2464948   +   end;
MPRINT(EM_DIAGRAM):   end;
2464949   +end;
MPRINT(EM_DIAGRAM):   end;
2464950   +
2464951   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2464952   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
2464953   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2464954   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2464955   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2464956   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2464957   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2464958   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2464959   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2464960   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2464961   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2464962   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2464963   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2464964   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2464965   +end;
MPRINT(EM_DIAGRAM):   end;
2464966   +else do;
MPRINT(EM_DIAGRAM):   else do;
2464967   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2464968   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2464969   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2464970   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2464971   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2464972   +   end;
MPRINT(EM_DIAGRAM):   end;
2464973   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2464974   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2464975   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2464976   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2464977   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2464978   +   end;
MPRINT(EM_DIAGRAM):   end;
2464979   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2464980   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2464981   +   end;
MPRINT(EM_DIAGRAM):   end;
2464982   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2464983   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2464984   +   end;
MPRINT(EM_DIAGRAM):   end;
2464985   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2464986   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2464987   +   end;
MPRINT(EM_DIAGRAM):   end;
2464988   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2464989   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2464990   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2464991   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2464992   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2464993   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2464994   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2464995   +   end;
MPRINT(EM_DIAGRAM):   end;
2464996   +end;
MPRINT(EM_DIAGRAM):   end;
2464997   +
2464998   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2464999   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2465000   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
2465001   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2465002   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2465003   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2465004   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2465005   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2465006   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2465007   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2465008   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2465009   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2465010   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2465011   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2465012   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2465013   +end;
MPRINT(EM_DIAGRAM):   end;
2465014   +else do;
MPRINT(EM_DIAGRAM):   else do;
2465015   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2465016   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2465017   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2465018   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2465019   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2465020   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2465021   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2465022   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2465023   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2465024   +         end;
MPRINT(EM_DIAGRAM):   end;
2465025   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2465026   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2465027   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2465028   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2465029   +            end;
MPRINT(EM_DIAGRAM):   end;
2465030   +         end;
MPRINT(EM_DIAGRAM):   end;
2465031   +      end;
MPRINT(EM_DIAGRAM):   end;
2465032   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2465033   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2465034   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2465035   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2465036   +         end;
MPRINT(EM_DIAGRAM):   end;
2465037   +      end;
MPRINT(EM_DIAGRAM):   end;
2465038   +   end;
MPRINT(EM_DIAGRAM):   end;
2465039   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2465040   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2465041   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2465042   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2465043   +      end;
MPRINT(EM_DIAGRAM):   end;
2465044   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2465045   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2465046   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2465047   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2465048   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2465049   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2465050   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2465051   +         end;
MPRINT(EM_DIAGRAM):   end;
2465052   +      end;
MPRINT(EM_DIAGRAM):   end;
2465053   +   end;
MPRINT(EM_DIAGRAM):   end;
2465054   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2465055   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2465056   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2465057   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2465058   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2465059   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2465060   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2465061   +   end;
MPRINT(EM_DIAGRAM):   end;
2465062   +end;
MPRINT(EM_DIAGRAM):   end;
2465063   +
2465064   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2465065   +*** Checking missing input Interval
2465066   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2465067   +
2465068   +IF NMISS(
2465069   +   AcceptedCmpTotal ,
2465070   +   Age ,
2465071   +   Frq ,
2465072   +   Income ,
2465073   +   Kidhome ,
2465074   +   Mnt ,
2465075   +   MntFishProducts ,
2465076   +   MntFruits ,
2465077   +   MntGoldProds ,
2465078   +   MntMeatProducts ,
2465079   +   MntSweetProducts ,
2465080   +   MntWines ,
2465081   +   MonthsAsCustomer ,
2465082   +   NumCatalogPurchases ,
2465083   +   NumDealsPurchases ,
2465084   +   NumDistPurchases ,
2465085   +   NumStorePurchases ,
2465086   +   NumWebPurchases ,
2465087   +   NumWebVisitsMonth ,
2465088   +   RFMstat ,
2465089   +   RMntFrq ,
2465090   +   Recency ,
2465091   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
2465092   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2465093   +
2465094   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2465095   +END;
MPRINT(EM_DIAGRAM):   END;
2465096   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2465097   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2465098   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2465099   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2465100   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2465101   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2465102   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2465103   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2465104   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2465105   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2465106   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2465107   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2465108   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2465109   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2465110   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2465111   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2465112   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2465113   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2465114   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2465115   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2465116   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2465117   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2465118   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 *
MonthsAsCustomer ;
2465119   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2465120   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2465121   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2465122   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2465123   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2465124   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2465125   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2465126   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2465127   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2465128   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2465129   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2465130   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2465131   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2465132   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2465133   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2465134   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2465135   +END;
MPRINT(EM_DIAGRAM):   END;
2465136   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2465137   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2465138   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2465139   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2465140   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2465141   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2465142   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2465143   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2465144   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2465145   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2465146   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2465147   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2465148   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2465149   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2465150   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2465151   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2465152   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2465153   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2465154   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2465155   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2465156   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2465157   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2465158   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
2465159   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2465160   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2465161   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2465162   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2465163   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2465164   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2465165   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2465166   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2465167   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2465168   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2465169   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 *
MonthsAsCustomer ;
2465170   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2465171   +   ELSE S_NumCatalogPurchases
2465172   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2465173   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2465174   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2465175   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2465176   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2465177   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2465178   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2465179   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2465180   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2465181   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2465182   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2465183   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2465184   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2465185   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2465186   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2465187   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2465188   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2465189   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2465190   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2465191   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2465192   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2465193   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2465194   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2465195   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2465196   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2465197   +END;
MPRINT(EM_DIAGRAM):   END;
2465198   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2465199   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2465200   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2465201   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2465202   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2465203   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2465204   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2465205   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2465206   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2465207   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2465208   +   H1x1_1  =    -1.22979702388871 * S_AcceptedCmpTotal
2465209   +          +    -0.43104795266139 * S_Age  +     0.86889278443529 * S_Frq
2465210   +          +    -1.60769879195759 * S_Income  +     0.50863205564081 *
2465211   +        S_Kidhome  +     0.63485396330815 * S_Mnt  +     1.54715964931126 *
2465212   +        S_MntFishProducts  +     0.75185279130369 * S_MntFruits
2465213   +          +    -0.00997586610757 * S_MntGoldProds  +    -2.37203493907401 *
2465214   +        S_MntMeatProducts  +     0.38638626403468 * S_MntSweetProducts
2465215   +          +     2.26121903773395 * S_MntWines  +    -0.59651789183067 *
2465216   +        S_MonthsAsCustomer  +    -1.52699943820196 * S_NumCatalogPurchases
2465217   +          +    -1.18466001117424 * S_NumDealsPurchases
2465218   +          +     -0.1371252133567 * S_NumDistPurchases
2465219   +          +     1.92719775731123 * S_NumStorePurchases
2465220   +          +     1.23184249192116 * S_NumWebPurchases
2465221   +          +    -1.55583843197424 * S_NumWebVisitsMonth
2465222   +          +    -0.47773207532121 * S_RFMstat  +    -0.35513231558649 *
2465223   +        S_RMntFrq  +     1.63863392145333 * S_Recency
2465224   +          +     0.67173275608308 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.22979702388871 * S_AcceptedCmpTotal + -0.43104795266139 *
S_Age + 0.86889278443529 * S_Frq + -1.60769879195759 * S_Income + 0.50863205564081 * S_Kidhome
+ 0.63485396330815 * S_Mnt + 1.54715964931126 * S_MntFishProducts + 0.75185279130369 *
S_MntFruits + -0.00997586610757 * S_MntGoldProds + -2.37203493907401 * S_MntMeatProducts +
0.38638626403468 * S_MntSweetProducts + 2.26121903773395 * S_MntWines + -0.59651789183067 *
S_MonthsAsCustomer + -1.52699943820196 * S_NumCatalogPurchases + -1.18466001117424 *
S_NumDealsPurchases + -0.1371252133567 * S_NumDistPurchases + 1.92719775731123 *
S_NumStorePurchases + 1.23184249192116 * S_NumWebPurchases + -1.55583843197424 *
S_NumWebVisitsMonth + -0.47773207532121 * S_RFMstat + -0.35513231558649 * S_RMntFrq +
1.63863392145333 * S_Recency + 0.67173275608308 * S_Teenhome ;
2465225   +   H1x1_2  =    -0.02716121128584 * S_AcceptedCmpTotal
2465226   +          +     0.11518566588792 * S_Age  +    -0.03446898150571 * S_Frq
2465227   +          +    -0.19022324523346 * S_Income  +     1.06549395713708 *
2465228   +        S_Kidhome  +    -0.75490876357951 * S_Mnt  +    -0.25515163712879 *
2465229   +        S_MntFishProducts  +    -0.33372388118122 * S_MntFruits
2465230   +          +    -1.35673933518218 * S_MntGoldProds  +    -2.95766948640442 *
2465231   +        S_MntMeatProducts  +      0.2681792093191 * S_MntSweetProducts
2465232   +          +     0.68376629766032 * S_MntWines  +     1.19853579057819 *
2465233   +        S_MonthsAsCustomer  +    -1.27282116370987 * S_NumCatalogPurchases
2465234   +          +     0.63616523425865 * S_NumDealsPurchases
2465235   +          +     0.45460056261546 * S_NumDistPurchases
2465236   +          +    -0.61009999017225 * S_NumStorePurchases
2465237   +          +     1.85193755731081 * S_NumWebPurchases
2465238   +          +    -2.47698404964319 * S_NumWebVisitsMonth
2465239   +          +     -0.6995834208607 * S_RFMstat  +    -0.25646177956568 *
2465240   +        S_RMntFrq  +     1.07962222419254 * S_Recency
2465241   +          +     0.63257022999179 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.02716121128584 * S_AcceptedCmpTotal + 0.11518566588792 *
S_Age + -0.03446898150571 * S_Frq + -0.19022324523346 * S_Income + 1.06549395713708 *
S_Kidhome + -0.75490876357951 * S_Mnt + -0.25515163712879 * S_MntFishProducts +
-0.33372388118122 * S_MntFruits + -1.35673933518218 * S_MntGoldProds + -2.95766948640442 *
S_MntMeatProducts + 0.2681792093191 * S_MntSweetProducts + 0.68376629766032 * S_MntWines +
1.19853579057819 * S_MonthsAsCustomer + -1.27282116370987 * S_NumCatalogPurchases +
0.63616523425865 * S_NumDealsPurchases + 0.45460056261546 * S_NumDistPurchases +
-0.61009999017225 * S_NumStorePurchases + 1.85193755731081 * S_NumWebPurchases +
-2.47698404964319 * S_NumWebVisitsMonth + -0.6995834208607 * S_RFMstat + -0.25646177956568 *
S_RMntFrq + 1.07962222419254 * S_Recency + 0.63257022999179 * S_Teenhome ;
2465242   +   H1x1_3  =     2.21390028099752 * S_AcceptedCmpTotal
2465243   +          +     0.05331556426178 * S_Age  +    -0.65514579137956 * S_Frq
2465244   +          +     0.64307304324121 * S_Income  +    -0.74572098598993 *
2465245   +        S_Kidhome  +     0.72146088814601 * S_Mnt  +    -0.35292583888573 *
2465246   +        S_MntFishProducts  +    -0.60011862194755 * S_MntFruits
2465247   +          +     0.41187011131735 * S_MntGoldProds  +     6.59297713742725 *
2465248   +        S_MntMeatProducts  +    -0.24427365286575 * S_MntSweetProducts
2465249   +          +    -2.72258930476853 * S_MntWines  +     0.14880721485001 *
2465250   +        S_MonthsAsCustomer  +     1.43710120897606 * S_NumCatalogPurchases
2465251   +          +      1.8907968580473 * S_NumDealsPurchases
2465252   +          +     0.01244124801764 * S_NumDistPurchases
2465253   +          +    -2.34409118104622 * S_NumStorePurchases
2465254   +          +    -1.80820043087435 * S_NumWebPurchases
2465255   +          +     2.40219682136039 * S_NumWebVisitsMonth
2465256   +          +     0.64272295101175 * S_RFMstat  +    -2.37583346151401 *
2465257   +        S_RMntFrq  +    -2.05893311376628 * S_Recency
2465258   +          +    -0.09539892763273 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 2.21390028099752 * S_AcceptedCmpTotal + 0.05331556426178 *
S_Age + -0.65514579137956 * S_Frq + 0.64307304324121 * S_Income + -0.74572098598993 *
S_Kidhome + 0.72146088814601 * S_Mnt + -0.35292583888573 * S_MntFishProducts +
-0.60011862194755 * S_MntFruits + 0.41187011131735 * S_MntGoldProds + 6.59297713742725 *
S_MntMeatProducts + -0.24427365286575 * S_MntSweetProducts + -2.72258930476853 * S_MntWines +
0.14880721485001 * S_MonthsAsCustomer + 1.43710120897606 * S_NumCatalogPurchases +
1.8907968580473 * S_NumDealsPurchases + 0.01244124801764 * S_NumDistPurchases +
-2.34409118104622 * S_NumStorePurchases + -1.80820043087435 * S_NumWebPurchases +
2.40219682136039 * S_NumWebVisitsMonth + 0.64272295101175 * S_RFMstat + -2.37583346151401 *
S_RMntFrq + -2.05893311376628 * S_Recency + -0.09539892763273 * S_Teenhome ;
2465259   +   H1x1_4  =     0.39967052173479 * S_AcceptedCmpTotal
2465260   +          +    -0.07923444459672 * S_Age  +     0.62339138041893 * S_Frq
2465261   +          +     1.61789948058771 * S_Income  +     -1.4543646851274 *
2465262   +        S_Kidhome  +      0.0674362517919 * S_Mnt  +    -0.01747401903722 *
2465263   +        S_MntFishProducts  +     0.35122931976599 * S_MntFruits
2465264   +          +     0.49479569666837 * S_MntGoldProds  +     0.96598079382568 *
2465265   +        S_MntMeatProducts  +     0.00966238843619 * S_MntSweetProducts
2465266   +          +    -1.04781861730336 * S_MntWines  +    -0.60232527705864 *
2465267   +        S_MonthsAsCustomer  +     1.64183850526139 * S_NumCatalogPurchases
2465268   +          +     0.28209537604198 * S_NumDealsPurchases
2465269   +          +      0.6450277971767 * S_NumDistPurchases
2465270   +          +     0.85050092520609 * S_NumStorePurchases
2465271   +          +    -0.53920307215941 * S_NumWebPurchases
2465272   +          +     3.01106015100147 * S_NumWebVisitsMonth
2465273   +          +     0.35454480730832 * S_RFMstat  +     2.44126135489059 *
2465274   +        S_RMntFrq  +    -3.15497765450512 * S_Recency
2465275   +          +    -1.52912100940198 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.39967052173479 * S_AcceptedCmpTotal + -0.07923444459672 *
S_Age + 0.62339138041893 * S_Frq + 1.61789948058771 * S_Income + -1.4543646851274 * S_Kidhome
+ 0.0674362517919 * S_Mnt + -0.01747401903722 * S_MntFishProducts + 0.35122931976599 *
S_MntFruits + 0.49479569666837 * S_MntGoldProds + 0.96598079382568 * S_MntMeatProducts +
0.00966238843619 * S_MntSweetProducts + -1.04781861730336 * S_MntWines + -0.60232527705864 *
S_MonthsAsCustomer + 1.64183850526139 * S_NumCatalogPurchases + 0.28209537604198 *
S_NumDealsPurchases + 0.6450277971767 * S_NumDistPurchases + 0.85050092520609 *
S_NumStorePurchases + -0.53920307215941 * S_NumWebPurchases + 3.01106015100147 *
S_NumWebVisitsMonth + 0.35454480730832 * S_RFMstat + 2.44126135489059 * S_RMntFrq +
-3.15497765450512 * S_Recency + -1.52912100940198 * S_Teenhome ;
2465276   +   H1x1_5  =    -1.36246601888598 * S_AcceptedCmpTotal
2465277   +          +     0.18494970680372 * S_Age  +    -0.48239316237012 * S_Frq
2465278   +          +    -0.07754710635082 * S_Income  +    -1.12988783865284 *
2465279   +        S_Kidhome  +    -0.99389820487435 * S_Mnt  +     0.97730928948588 *
2465280   +        S_MntFishProducts  +     0.22400827772102 * S_MntFruits
2465281   +          +     0.74486626223136 * S_MntGoldProds  +    -5.09299340099429 *
2465282   +        S_MntMeatProducts  +     -0.9293665551505 * S_MntSweetProducts
2465283   +          +     2.05621056740754 * S_MntWines  +     0.13751326047818 *
2465284   +        S_MonthsAsCustomer  +    -0.78748700520409 * S_NumCatalogPurchases
2465285   +          +    -0.36642526324451 * S_NumDealsPurchases
2465286   +          +     -0.6091014843932 * S_NumDistPurchases
2465287   +          +    -0.21154626182088 * S_NumStorePurchases
2465288   +          +    -0.10361347071364 * S_NumWebPurchases
2465289   +          +     1.36358817627784 * S_NumWebVisitsMonth
2465290   +          +    -1.12999319551924 * S_RFMstat  +    -0.19491430019245 *
2465291   +        S_RMntFrq  +    -1.04649498091784 * S_Recency
2465292   +          +     0.17452738843544 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.36246601888598 * S_AcceptedCmpTotal + 0.18494970680372 *
S_Age + -0.48239316237012 * S_Frq + -0.07754710635082 * S_Income + -1.12988783865284 *
S_Kidhome + -0.99389820487435 * S_Mnt + 0.97730928948588 * S_MntFishProducts +
0.22400827772102 * S_MntFruits + 0.74486626223136 * S_MntGoldProds + -5.09299340099429 *
S_MntMeatProducts + -0.9293665551505 * S_MntSweetProducts + 2.05621056740754 * S_MntWines +
0.13751326047818 * S_MonthsAsCustomer + -0.78748700520409 * S_NumCatalogPurchases +
-0.36642526324451 * S_NumDealsPurchases + -0.6091014843932 * S_NumDistPurchases +
-0.21154626182088 * S_NumStorePurchases + -0.10361347071364 * S_NumWebPurchases +
1.36358817627784 * S_NumWebVisitsMonth + -1.12999319551924 * S_RFMstat + -0.19491430019245 *
S_RMntFrq + -1.04649498091784 * S_Recency + 0.17452738843544 * S_Teenhome ;
2465293   +   H1x1_6  =    -0.61844696407508 * S_AcceptedCmpTotal
2465294   +          +    -0.13181297602063 * S_Age  +        0.68456903056 * S_Frq
2465295   +          +    -0.34991774042788 * S_Income  +     1.46159955002315 *
2465296   +        S_Kidhome  +     0.21200077233877 * S_Mnt  +    -1.25754094670769 *
2465297   +        S_MntFishProducts  +    -0.09204195787339 * S_MntFruits
2465298   +          +     0.30860507694466 * S_MntGoldProds  +     2.47956356836605 *
2465299   +        S_MntMeatProducts  +     0.40882561010395 * S_MntSweetProducts
2465300   +          +    -0.31319819026957 * S_MntWines  +    -0.35678594664106 *
2465301   +        S_MonthsAsCustomer  +     0.01690494248971 * S_NumCatalogPurchases
2465302   +          +    -0.14868505161718 * S_NumDealsPurchases
2465303   +          +    -0.08395384711805 * S_NumDistPurchases
2465304   +          +     0.60525238179245 * S_NumStorePurchases
2465305   +          +     0.04555100214276 * S_NumWebPurchases
2465306   +          +    -2.31888436784305 * S_NumWebVisitsMonth
2465307   +          +     0.04533094777373 * S_RFMstat  +     1.45047684433196 *
2465308   +        S_RMntFrq  +     3.02439474266744 * S_Recency
2465309   +          +     1.00458920115313 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -0.61844696407508 * S_AcceptedCmpTotal + -0.13181297602063 *
S_Age + 0.68456903056 * S_Frq + -0.34991774042788 * S_Income + 1.46159955002315 * S_Kidhome +
0.21200077233877 * S_Mnt + -1.25754094670769 * S_MntFishProducts + -0.09204195787339 *
S_MntFruits + 0.30860507694466 * S_MntGoldProds + 2.47956356836605 * S_MntMeatProducts +
0.40882561010395 * S_MntSweetProducts + -0.31319819026957 * S_MntWines + -0.35678594664106 *
S_MonthsAsCustomer + 0.01690494248971 * S_NumCatalogPurchases + -0.14868505161718 *
S_NumDealsPurchases + -0.08395384711805 * S_NumDistPurchases + 0.60525238179245 *
S_NumStorePurchases + 0.04555100214276 * S_NumWebPurchases + -2.31888436784305 *
S_NumWebVisitsMonth + 0.04533094777373 * S_RFMstat + 1.45047684433196 * S_RMntFrq +
3.02439474266744 * S_Recency + 1.00458920115313 * S_Teenhome ;
2465310   +   H1x1_1  = H1x1_1  +     1.44647846478949 * AcceptedCmp10
2465311   +          +     0.96385529143297 * AcceptedCmp20  +     0.80013060089317 *
2465312   +        AcceptedCmp30  +     1.84770198014032 * AcceptedCmp40
2465313   +          +     0.80401446607714 * AcceptedCmp50  +     0.54049538978821 *
2465314   +        Complain0  +     0.10087163212641 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 1.44647846478949 * AcceptedCmp10 + 0.96385529143297 *
AcceptedCmp20 + 0.80013060089317 * AcceptedCmp30 + 1.84770198014032 * AcceptedCmp40 +
0.80401446607714 * AcceptedCmp50 + 0.54049538978821 * Complain0 + 0.10087163212641 *
HigherEducationBinary0 ;
2465315   +   H1x1_2  = H1x1_2  +    -1.68777270512099 * AcceptedCmp10
2465316   +          +     0.54885195015877 * AcceptedCmp20  +    -0.90402264974928 *
2465317   +        AcceptedCmp30  +    -0.42358682267334 * AcceptedCmp40
2465318   +          +     0.87016183962004 * AcceptedCmp50  +     0.42082407002478 *
2465319   +        Complain0  +    -0.37999025234308 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -1.68777270512099 * AcceptedCmp10 + 0.54885195015877 *
AcceptedCmp20 + -0.90402264974928 * AcceptedCmp30 + -0.42358682267334 * AcceptedCmp40 +
0.87016183962004 * AcceptedCmp50 + 0.42082407002478 * Complain0 + -0.37999025234308 *
HigherEducationBinary0 ;
2465320   +   H1x1_3  = H1x1_3  +    -0.40437631159129 * AcceptedCmp10
2465321   +          +      0.0972205308159 * AcceptedCmp20  +     0.81983130325412 *
2465322   +        AcceptedCmp30  +     0.11521626741585 * AcceptedCmp40
2465323   +          +    -0.67384158900854 * AcceptedCmp50  +    -0.08888648111628 *
2465324   +        Complain0  +    -0.12489144574555 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.40437631159129 * AcceptedCmp10 + 0.0972205308159 *
AcceptedCmp20 + 0.81983130325412 * AcceptedCmp30 + 0.11521626741585 * AcceptedCmp40 +
-0.67384158900854 * AcceptedCmp50 + -0.08888648111628 * Complain0 + -0.12489144574555 *
HigherEducationBinary0 ;
2465325   +   H1x1_4  = H1x1_4  +    -0.11861456940351 * AcceptedCmp10
2465326   +          +    -0.84401831403342 * AcceptedCmp20  +    -0.99900514370547 *
2465327   +        AcceptedCmp30  +     0.03311277744337 * AcceptedCmp40
2465328   +          +    -0.89369182681709 * AcceptedCmp50  +    -0.46321923883787 *
2465329   +        Complain0  +     0.73698890563732 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.11861456940351 * AcceptedCmp10 + -0.84401831403342
* AcceptedCmp20 + -0.99900514370547 * AcceptedCmp30 + 0.03311277744337 * AcceptedCmp40 +
-0.89369182681709 * AcceptedCmp50 + -0.46321923883787 * Complain0 + 0.73698890563732 *
HigherEducationBinary0 ;
2465330   +   H1x1_5  = H1x1_5  +     1.36740346673871 * AcceptedCmp10
2465331   +          +    -0.09307995102939 * AcceptedCmp20  +    -0.99727975675265 *
2465332   +        AcceptedCmp30  +    -1.64006559974507 * AcceptedCmp40
2465333   +          +    -0.12164496778613 * AcceptedCmp50  +    -0.20852398947217 *
2465334   +        Complain0  +    -0.12903157145588 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 1.36740346673871 * AcceptedCmp10 + -0.09307995102939 *
AcceptedCmp20 + -0.99727975675265 * AcceptedCmp30 + -1.64006559974507 * AcceptedCmp40 +
-0.12164496778613 * AcceptedCmp50 + -0.20852398947217 * Complain0 + -0.12903157145588 *
HigherEducationBinary0 ;
2465335   +   H1x1_6  = H1x1_6  +    -0.18375336439178 * AcceptedCmp10
2465336   +          +    -0.61320886099742 * AcceptedCmp20  +     1.46384578641555 *
2465337   +        AcceptedCmp30  +     1.07211075480456 * AcceptedCmp40
2465338   +          +      0.1814894663676 * AcceptedCmp50  +     0.61050756961671 *
2465339   +        Complain0  +     0.18598381049052 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + -0.18375336439178 * AcceptedCmp10 + -0.61320886099742
* AcceptedCmp20 + 1.46384578641555 * AcceptedCmp30 + 1.07211075480456 * AcceptedCmp40 +
0.1814894663676 * AcceptedCmp50 + 0.61050756961671 * Complain0 + 0.18598381049052 *
HigherEducationBinary0 ;
2465340   +   H1x1_1  = H1x1_1  +    -0.85219855086228 * Education2n_Cycle
2465341   +          +     0.72409647993559 * EducationBasic  +    -1.69896726220399 *
2465342   +        EducationGraduation  +     0.96924197858068 * EducationMaster
2465343   +          +     -0.7180104021039 * Marital_StatusDivorced
2465344   +          +      0.5957373170744 * Marital_StatusMarried
2465345   +          +    -0.86183942803988 * Marital_StatusSingle
2465346   +          +     0.92994743994713 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.85219855086228 * Education2n_Cycle +
0.72409647993559 * EducationBasic + -1.69896726220399 * EducationGraduation + 0.96924197858068
* EducationMaster + -0.7180104021039 * Marital_StatusDivorced + 0.5957373170744 *
Marital_StatusMarried + -0.86183942803988 * Marital_StatusSingle + 0.92994743994713 *
Marital_StatusTogether ;
2465347   +   H1x1_2  = H1x1_2  +    -0.29863788783823 * Education2n_Cycle
2465348   +          +    -0.03492398661463 * EducationBasic  +     1.96491183828121 *
2465349   +        EducationGraduation  +    -1.23733321574678 * EducationMaster
2465350   +          +     0.84772700244021 * Marital_StatusDivorced
2465351   +          +    -0.37049970188511 * Marital_StatusMarried
2465352   +          +     1.54291641732063 * Marital_StatusSingle
2465353   +          +      0.2036514883055 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.29863788783823 * Education2n_Cycle +
-0.03492398661463 * EducationBasic + 1.96491183828121 * EducationGraduation +
-1.23733321574678 * EducationMaster + 0.84772700244021 * Marital_StatusDivorced +
-0.37049970188511 * Marital_StatusMarried + 1.54291641732063 * Marital_StatusSingle +
0.2036514883055 * Marital_StatusTogether ;
2465354   +   H1x1_3  = H1x1_3  +     0.21600870420184 * Education2n_Cycle
2465355   +          +    -0.41247138958506 * EducationBasic  +    -0.04710356650237 *
2465356   +        EducationGraduation  +     0.02093123351397 * EducationMaster
2465357   +          +     0.73222548496385 * Marital_StatusDivorced
2465358   +          +    -0.50102202656102 * Marital_StatusMarried
2465359   +          +    -0.07207130428422 * Marital_StatusSingle
2465360   +          +     0.17349558515949 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.21600870420184 * Education2n_Cycle +
-0.41247138958506 * EducationBasic + -0.04710356650237 * EducationGraduation +
0.02093123351397 * EducationMaster + 0.73222548496385 * Marital_StatusDivorced +
-0.50102202656102 * Marital_StatusMarried + -0.07207130428422 * Marital_StatusSingle +
0.17349558515949 * Marital_StatusTogether ;
2465361   +   H1x1_4  = H1x1_4  +    -0.26695942691152 * Education2n_Cycle
2465362   +          +     0.08346486410021 * EducationBasic  +    -1.19880044804188 *
2465363   +        EducationGraduation  +     0.65366032471107 * EducationMaster
2465364   +          +     0.25894719464799 * Marital_StatusDivorced
2465365   +          +    -1.95576501275834 * Marital_StatusMarried
2465366   +          +     2.65422185276746 * Marital_StatusSingle
2465367   +          +    -3.75373924980398 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.26695942691152 * Education2n_Cycle +
0.08346486410021 * EducationBasic + -1.19880044804188 * EducationGraduation + 0.65366032471107
* EducationMaster + 0.25894719464799 * Marital_StatusDivorced + -1.95576501275834 *
Marital_StatusMarried + 2.65422185276746 * Marital_StatusSingle + -3.75373924980398 *
Marital_StatusTogether ;
2465368   +   H1x1_5  = H1x1_5  +     0.17586479935526 * Education2n_Cycle
2465369   +          +    -0.60926722758624 * EducationBasic  +    -0.09613529218096 *
2465370   +        EducationGraduation  +    -0.28683119112285 * EducationMaster
2465371   +          +     0.60936191204707 * Marital_StatusDivorced
2465372   +          +    -0.52190111190458 * Marital_StatusMarried
2465373   +          +    -0.60982305233136 * Marital_StatusSingle
2465374   +          +     0.44659686388318 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 0.17586479935526 * Education2n_Cycle +
-0.60926722758624 * EducationBasic + -0.09613529218096 * EducationGraduation +
-0.28683119112285 * EducationMaster + 0.60936191204707 * Marital_StatusDivorced +
-0.52190111190458 * Marital_StatusMarried + -0.60982305233136 * Marital_StatusSingle +
0.44659686388318 * Marital_StatusTogether ;
2465375   +   H1x1_6  = H1x1_6  +     0.16067502362228 * Education2n_Cycle
2465376   +          +     0.18937855703296 * EducationBasic  +     0.06386817095607 *
2465377   +        EducationGraduation  +     0.51538853297606 * EducationMaster
2465378   +          +    -1.44614502228294 * Marital_StatusDivorced
2465379   +          +      2.9001493892928 * Marital_StatusMarried
2465380   +          +    -2.60467399972513 * Marital_StatusSingle
2465381   +          +     2.31815156650258 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + 0.16067502362228 * Education2n_Cycle +
0.18937855703296 * EducationBasic + 0.06386817095607 * EducationGraduation + 0.51538853297606
* EducationMaster + -1.44614502228294 * Marital_StatusDivorced + 2.9001493892928 *
Marital_StatusMarried + -2.60467399972513 * Marital_StatusSingle + 2.31815156650258 *
Marital_StatusTogether ;
2465382   +   H1x1_1  =     2.01245018737649 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 2.01245018737649 + H1x1_1 ;
2465383   +   H1x1_2  =    -0.13724223857423 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.13724223857423 + H1x1_2 ;
2465384   +   H1x1_3  =     0.82934879006547 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.82934879006547 + H1x1_3 ;
2465385   +   H1x1_4  =    -0.21545557935699 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.21545557935699 + H1x1_4 ;
2465386   +   H1x1_5  =     0.44835497486542 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0.44835497486542 + H1x1_5 ;
2465387   +   H1x1_6  =     0.11792774897936 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0.11792774897936 + H1x1_6 ;
2465388   +   H1x1_7  = 0;
MPRINT(EM_DIAGRAM):   H1x1_7 = 0;
2465389   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 , H1x1_7
2465390   +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 ,
H1x1_7 );
2465391   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2465392   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
2465393   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
2465394   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
2465395   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
2465396   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
2465397   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
2465398   +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
2465399   +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
2465400   +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
2465401   +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
2465402   +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
2465403   +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
2465404   +   H1x1_7  = EXP(H1x1_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_7 = EXP(H1x1_7 - _MAX_);
2465405   +   _SUM_ = _SUM_ + H1x1_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_7 ;
2465406   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
2465407   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
2465408   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
2465409   +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
2465410   +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
2465411   +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
2465412   +   H1x1_7  = H1x1_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_7 = H1x1_7 / _SUM_;
2465413   +END;
MPRINT(EM_DIAGRAM):   END;
2465414   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2465415   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2465416   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2465417   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2465418   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2465419   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
2465420   +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
2465421   +   H1x1_7  = .;
MPRINT(EM_DIAGRAM):   H1x1_7 = .;
2465422   +END;
MPRINT(EM_DIAGRAM):   END;
2465423   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2465424   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
2465425   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2465426   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2465427   +   H1x2_1  =    -0.51245281628488 * S_AcceptedCmpTotal
2465428   +          +     0.29586551487242 * S_Age  +     1.34531593814589 * S_Frq
2465429   +          +     1.40753230099536 * S_Income  +    -1.01979935776675 *
2465430   +        S_Kidhome  +      1.0655533203194 * S_Mnt  +     0.74171867275429 *
2465431   +        S_MntFishProducts  +    -0.77881282886264 * S_MntFruits
2465432   +          +    -0.58546798489474 * S_MntGoldProds  +     0.93410444049208 *
2465433   +        S_MntMeatProducts  +     1.10536507959221 * S_MntSweetProducts
2465434   +          +     2.08723894920384 * S_MntWines  +    -0.64437193401661 *
2465435   +        S_MonthsAsCustomer  +     1.49880648713252 * S_NumCatalogPurchases
2465436   +          +    -0.46483717253931 * S_NumDealsPurchases
2465437   +          +    -0.53329008421157 * S_NumDistPurchases
2465438   +          +      0.2490774300193 * S_NumStorePurchases
2465439   +          +    -0.82755150673885 * S_NumWebPurchases
2465440   +          +     0.04007223822389 * S_NumWebVisitsMonth
2465441   +          +    -0.21044923749124 * S_RFMstat  +     0.27791352512351 *
2465442   +        S_RMntFrq  +     0.43434806411249 * S_Recency
2465443   +          +    -1.25974784572932 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.51245281628488 * S_AcceptedCmpTotal + 0.29586551487242 *
S_Age + 1.34531593814589 * S_Frq + 1.40753230099536 * S_Income + -1.01979935776675 * S_Kidhome
+ 1.0655533203194 * S_Mnt + 0.74171867275429 * S_MntFishProducts + -0.77881282886264 *
S_MntFruits + -0.58546798489474 * S_MntGoldProds + 0.93410444049208 * S_MntMeatProducts +
1.10536507959221 * S_MntSweetProducts + 2.08723894920384 * S_MntWines + -0.64437193401661 *
S_MonthsAsCustomer + 1.49880648713252 * S_NumCatalogPurchases + -0.46483717253931 *
S_NumDealsPurchases + -0.53329008421157 * S_NumDistPurchases + 0.2490774300193 *
S_NumStorePurchases + -0.82755150673885 * S_NumWebPurchases + 0.04007223822389 *
S_NumWebVisitsMonth + -0.21044923749124 * S_RFMstat + 0.27791352512351 * S_RMntFrq +
0.43434806411249 * S_Recency + -1.25974784572932 * S_Teenhome ;
2465444   +   H1x2_2  =     0.30117516029562 * S_AcceptedCmpTotal
2465445   +          +     0.16042149118905 * S_Age  +    -2.59350323749407 * S_Frq
2465446   +          +    -0.29940842910223 * S_Income  +    -0.09168883019219 *
2465447   +        S_Kidhome  +    -0.39758312303322 * S_Mnt  +     -0.4138816285287 *
2465448   +        S_MntFishProducts  +        0.18555623351 * S_MntFruits
2465449   +          +    -0.28024159914959 * S_MntGoldProds  +     1.08084875123781 *
2465450   +        S_MntMeatProducts  +     0.29032828446632 * S_MntSweetProducts
2465451   +          +     0.47556687393839 * S_MntWines  +    -0.89795441591329 *
2465452   +        S_MonthsAsCustomer  +    -0.47081176716106 * S_NumCatalogPurchases
2465453   +          +     0.75855101382458 * S_NumDealsPurchases
2465454   +          +     1.61754951768262 * S_NumDistPurchases
2465455   +          +    -0.48146714929729 * S_NumStorePurchases
2465456   +          +    -0.76460728035552 * S_NumWebPurchases
2465457   +          +    -0.71146787112442 * S_NumWebVisitsMonth
2465458   +          +     0.42381866124588 * S_RFMstat  +     -0.3894818400451 *
2465459   +        S_RMntFrq  +    -0.01528916550509 * S_Recency
2465460   +          +     0.38823136254948 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.30117516029562 * S_AcceptedCmpTotal + 0.16042149118905 *
S_Age + -2.59350323749407 * S_Frq + -0.29940842910223 * S_Income + -0.09168883019219 *
S_Kidhome + -0.39758312303322 * S_Mnt + -0.4138816285287 * S_MntFishProducts + 0.18555623351 *
S_MntFruits + -0.28024159914959 * S_MntGoldProds + 1.08084875123781 * S_MntMeatProducts +
0.29032828446632 * S_MntSweetProducts + 0.47556687393839 * S_MntWines + -0.89795441591329 *
S_MonthsAsCustomer + -0.47081176716106 * S_NumCatalogPurchases + 0.75855101382458 *
S_NumDealsPurchases + 1.61754951768262 * S_NumDistPurchases + -0.48146714929729 *
S_NumStorePurchases + -0.76460728035552 * S_NumWebPurchases + -0.71146787112442 *
S_NumWebVisitsMonth + 0.42381866124588 * S_RFMstat + -0.3894818400451 * S_RMntFrq +
-0.01528916550509 * S_Recency + 0.38823136254948 * S_Teenhome ;
2465461   +   H1x2_3  =    -1.28283712556699 * S_AcceptedCmpTotal
2465462   +          +    -0.62214066983867 * S_Age  +      0.0675653313166 * S_Frq
2465463   +          +     0.77098495841918 * S_Income  +    -1.36225954388119 *
2465464   +        S_Kidhome  +      0.0552831076081 * S_Mnt  +    -0.21387512812296 *
2465465   +        S_MntFishProducts  +    -1.14715718471691 * S_MntFruits
2465466   +          +    -1.15507787000433 * S_MntGoldProds  +     0.87571107504211 *
2465467   +        S_MntMeatProducts  +     0.28274178198443 * S_MntSweetProducts
2465468   +          +     0.23070204507311 * S_MntWines  +    -1.88342889522874 *
2465469   +        S_MonthsAsCustomer  +    -0.19127945486903 * S_NumCatalogPurchases
2465470   +          +     0.75255317965748 * S_NumDealsPurchases
2465471   +          +     1.34900588315783 * S_NumDistPurchases
2465472   +          +    -0.17717469778048 * S_NumStorePurchases
2465473   +          +    -0.01560551546553 * S_NumWebPurchases
2465474   +          +     1.24315988674343 * S_NumWebVisitsMonth
2465475   +          +     2.23854910235018 * S_RFMstat  +     0.55516131558838 *
2465476   +        S_RMntFrq  +    -2.01558015490584 * S_Recency
2465477   +          +     1.34178435587014 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -1.28283712556699 * S_AcceptedCmpTotal + -0.62214066983867 *
S_Age + 0.0675653313166 * S_Frq + 0.77098495841918 * S_Income + -1.36225954388119 * S_Kidhome
+ 0.0552831076081 * S_Mnt + -0.21387512812296 * S_MntFishProducts + -1.14715718471691 *
S_MntFruits + -1.15507787000433 * S_MntGoldProds + 0.87571107504211 * S_MntMeatProducts +
0.28274178198443 * S_MntSweetProducts + 0.23070204507311 * S_MntWines + -1.88342889522874 *
S_MonthsAsCustomer + -0.19127945486903 * S_NumCatalogPurchases + 0.75255317965748 *
S_NumDealsPurchases + 1.34900588315783 * S_NumDistPurchases + -0.17717469778048 *
S_NumStorePurchases + -0.01560551546553 * S_NumWebPurchases + 1.24315988674343 *
S_NumWebVisitsMonth + 2.23854910235018 * S_RFMstat + 0.55516131558838 * S_RMntFrq +
-2.01558015490584 * S_Recency + 1.34178435587014 * S_Teenhome ;
2465478   +   H1x2_4  =     1.35706411211536 * S_AcceptedCmpTotal
2465479   +          +    -0.73374940975123 * S_Age  +     2.10445428870671 * S_Frq
2465480   +          +    -1.60133766439775 * S_Income  +     0.02861907512789 *
2465481   +        S_Kidhome  +    -1.61837693250001 * S_Mnt  +       0.209751533263 *
2465482   +        S_MntFishProducts  +     1.82411973889656 * S_MntFruits
2465483   +          +     1.12172774431408 * S_MntGoldProds  +     1.09610288046573 *
2465484   +        S_MntMeatProducts  +    -0.86671874280949 * S_MntSweetProducts
2465485   +          +    -0.11602638812541 * S_MntWines  +    -0.30074020863435 *
2465486   +        S_MonthsAsCustomer  +     0.46044258716085 * S_NumCatalogPurchases
2465487   +          +    -1.71127148178768 * S_NumDealsPurchases
2465488   +          +    -1.77527355221308 * S_NumDistPurchases
2465489   +          +    -1.40009594349363 * S_NumStorePurchases
2465490   +          +    -0.46471012062697 * S_NumWebPurchases
2465491   +          +     0.04619891083228 * S_NumWebVisitsMonth
2465492   +          +     0.34715614649891 * S_RFMstat  +    -0.74983051176564 *
2465493   +        S_RMntFrq  +     0.84880186653433 * S_Recency
2465494   +          +     0.20218341857265 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 1.35706411211536 * S_AcceptedCmpTotal + -0.73374940975123 *
S_Age + 2.10445428870671 * S_Frq + -1.60133766439775 * S_Income + 0.02861907512789 * S_Kidhome
+ -1.61837693250001 * S_Mnt + 0.209751533263 * S_MntFishProducts + 1.82411973889656 *
S_MntFruits + 1.12172774431408 * S_MntGoldProds + 1.09610288046573 * S_MntMeatProducts +
-0.86671874280949 * S_MntSweetProducts + -0.11602638812541 * S_MntWines + -0.30074020863435 *
S_MonthsAsCustomer + 0.46044258716085 * S_NumCatalogPurchases + -1.71127148178768 *
S_NumDealsPurchases + -1.77527355221308 * S_NumDistPurchases + -1.40009594349363 *
S_NumStorePurchases + -0.46471012062697 * S_NumWebPurchases + 0.04619891083228 *
S_NumWebVisitsMonth + 0.34715614649891 * S_RFMstat + -0.74983051176564 * S_RMntFrq +
0.84880186653433 * S_Recency + 0.20218341857265 * S_Teenhome ;
2465495   +   H1x2_5  =     1.79452363233333 * S_AcceptedCmpTotal
2465496   +          +     1.70826835028511 * S_Age  +     0.08241717907016 * S_Frq
2465497   +          +    -1.15275600314196 * S_Income  +     0.87736096074094 *
2465498   +        S_Kidhome  +     0.90821427722502 * S_Mnt  +    -0.84055732556964 *
2465499   +        S_MntFishProducts  +    -0.74245639083939 * S_MntFruits
2465500   +          +     0.00204325095854 * S_MntGoldProds  +     0.37597102500134 *
2465501   +        S_MntMeatProducts  +     0.28586076288454 * S_MntSweetProducts
2465502   +          +    -1.38194310174269 * S_MntWines  +     0.10286181254259 *
2465503   +        S_MonthsAsCustomer  +    -0.82469018226034 * S_NumCatalogPurchases
2465504   +          +    -0.22204470395056 * S_NumDealsPurchases
2465505   +          +    -1.74490476011984 * S_NumDistPurchases
2465506   +          +     1.93538420108324 * S_NumStorePurchases
2465507   +          +     1.04892631742152 * S_NumWebPurchases
2465508   +          +     1.50717841566047 * S_NumWebVisitsMonth
2465509   +          +     0.61249250909375 * S_RFMstat  +    -0.54764212165911 *
2465510   +        S_RMntFrq  +      1.9918829185386 * S_Recency
2465511   +          +     0.64908540313947 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.79452363233333 * S_AcceptedCmpTotal + 1.70826835028511 *
S_Age + 0.08241717907016 * S_Frq + -1.15275600314196 * S_Income + 0.87736096074094 * S_Kidhome
+ 0.90821427722502 * S_Mnt + -0.84055732556964 * S_MntFishProducts + -0.74245639083939 *
S_MntFruits + 0.00204325095854 * S_MntGoldProds + 0.37597102500134 * S_MntMeatProducts +
0.28586076288454 * S_MntSweetProducts + -1.38194310174269 * S_MntWines + 0.10286181254259 *
S_MonthsAsCustomer + -0.82469018226034 * S_NumCatalogPurchases + -0.22204470395056 *
S_NumDealsPurchases + -1.74490476011984 * S_NumDistPurchases + 1.93538420108324 *
S_NumStorePurchases + 1.04892631742152 * S_NumWebPurchases + 1.50717841566047 *
S_NumWebVisitsMonth + 0.61249250909375 * S_RFMstat + -0.54764212165911 * S_RMntFrq +
1.9918829185386 * S_Recency + 0.64908540313947 * S_Teenhome ;
2465512   +   H1x2_6  =     1.38705263280369 * S_AcceptedCmpTotal
2465513   +          +    -0.70531523704191 * S_Age  +     0.59125500807205 * S_Frq
2465514   +          +     0.89549490842249 * S_Income  +     1.07240562425698 *
2465515   +        S_Kidhome  +    -0.25050185694258 * S_Mnt  +    -0.77552207934024 *
2465516   +        S_MntFishProducts  +     0.18087757744856 * S_MntFruits
2465517   +          +    -1.37618517481144 * S_MntGoldProds  +      0.6557488228355 *
2465518   +        S_MntMeatProducts  +    -1.40834207395949 * S_MntSweetProducts
2465519   +          +    -0.76196689750388 * S_MntWines  +     0.85144735274506 *
2465520   +        S_MonthsAsCustomer  +     0.66349954778428 * S_NumCatalogPurchases
2465521   +          +    -0.94690420785776 * S_NumDealsPurchases
2465522   +          +     1.87932706342204 * S_NumDistPurchases
2465523   +          +     0.31232717416487 * S_NumStorePurchases
2465524   +          +     1.51889492693355 * S_NumWebPurchases
2465525   +          +     0.04376853689795 * S_NumWebVisitsMonth
2465526   +          +    -2.53979043374029 * S_RFMstat  +     1.33915580029494 *
2465527   +        S_RMntFrq  +    -1.21983510008829 * S_Recency
2465528   +          +     0.36122230024433 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_6 = 1.38705263280369 * S_AcceptedCmpTotal + -0.70531523704191 *
S_Age + 0.59125500807205 * S_Frq + 0.89549490842249 * S_Income + 1.07240562425698 * S_Kidhome
+ -0.25050185694258 * S_Mnt + -0.77552207934024 * S_MntFishProducts + 0.18087757744856 *
S_MntFruits + -1.37618517481144 * S_MntGoldProds + 0.6557488228355 * S_MntMeatProducts +
-1.40834207395949 * S_MntSweetProducts + -0.76196689750388 * S_MntWines + 0.85144735274506 *
S_MonthsAsCustomer + 0.66349954778428 * S_NumCatalogPurchases + -0.94690420785776 *
S_NumDealsPurchases + 1.87932706342204 * S_NumDistPurchases + 0.31232717416487 *
S_NumStorePurchases + 1.51889492693355 * S_NumWebPurchases + 0.04376853689795 *
S_NumWebVisitsMonth + -2.53979043374029 * S_RFMstat + 1.33915580029494 * S_RMntFrq +
-1.21983510008829 * S_Recency + 0.36122230024433 * S_Teenhome ;
2465529   +   H1x2_1  = H1x2_1  +     1.89852147155601 * AcceptedCmp10
2465530   +          +     0.03501265764204 * AcceptedCmp20  +    -0.45070218241239 *
2465531   +        AcceptedCmp30  +    -1.27257966336041 * AcceptedCmp40
2465532   +          +     0.86175125820023 * AcceptedCmp50  +     1.42864024461581 *
2465533   +        Complain0  +     0.34417315915901 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 1.89852147155601 * AcceptedCmp10 + 0.03501265764204 *
AcceptedCmp20 + -0.45070218241239 * AcceptedCmp30 + -1.27257966336041 * AcceptedCmp40 +
0.86175125820023 * AcceptedCmp50 + 1.42864024461581 * Complain0 + 0.34417315915901 *
HigherEducationBinary0 ;
2465534   +   H1x2_2  = H1x2_2  +     0.41672679168374 * AcceptedCmp10
2465535   +          +     0.10769233314512 * AcceptedCmp20  +     0.42374549876289 *
2465536   +        AcceptedCmp30  +     0.65697535989046 * AcceptedCmp40
2465537   +          +     1.49817201460948 * AcceptedCmp50  +     0.46039378640249 *
2465538   +        Complain0  +     1.34709525059573 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.41672679168374 * AcceptedCmp10 + 0.10769233314512 *
AcceptedCmp20 + 0.42374549876289 * AcceptedCmp30 + 0.65697535989046 * AcceptedCmp40 +
1.49817201460948 * AcceptedCmp50 + 0.46039378640249 * Complain0 + 1.34709525059573 *
HigherEducationBinary0 ;
2465539   +   H1x2_3  = H1x2_3  +     0.75388522027745 * AcceptedCmp10
2465540   +          +     2.63069611253058 * AcceptedCmp20  +     0.30907626174766 *
2465541   +        AcceptedCmp30  +     1.10100873408666 * AcceptedCmp40
2465542   +          +    -1.08824297693055 * AcceptedCmp50  +     1.05059014395924 *
2465543   +        Complain0  +     0.67869922391732 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.75388522027745 * AcceptedCmp10 + 2.63069611253058 *
AcceptedCmp20 + 0.30907626174766 * AcceptedCmp30 + 1.10100873408666 * AcceptedCmp40 +
-1.08824297693055 * AcceptedCmp50 + 1.05059014395924 * Complain0 + 0.67869922391732 *
HigherEducationBinary0 ;
2465544   +   H1x2_4  = H1x2_4  +    -0.22033664091288 * AcceptedCmp10
2465545   +          +     1.34914301916376 * AcceptedCmp20  +    -0.91465085581504 *
2465546   +        AcceptedCmp30  +    -0.19686441685837 * AcceptedCmp40
2465547   +          +     0.10683331864009 * AcceptedCmp50  +    -0.00754824810979 *
2465548   +        Complain0  +     1.52033864172921 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + -0.22033664091288 * AcceptedCmp10 + 1.34914301916376 *
AcceptedCmp20 + -0.91465085581504 * AcceptedCmp30 + -0.19686441685837 * AcceptedCmp40 +
0.10683331864009 * AcceptedCmp50 + -0.00754824810979 * Complain0 + 1.52033864172921 *
HigherEducationBinary0 ;
2465549   +   H1x2_5  = H1x2_5  +     0.83049886541915 * AcceptedCmp10
2465550   +          +    -0.74079162208987 * AcceptedCmp20  +    -0.67792505698297 *
2465551   +        AcceptedCmp30  +     0.07081190269168 * AcceptedCmp40
2465552   +          +     0.18720033568684 * AcceptedCmp50  +      2.6531318197812 *
2465553   +        Complain0  +     0.89741230471087 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.83049886541915 * AcceptedCmp10 + -0.74079162208987 *
AcceptedCmp20 + -0.67792505698297 * AcceptedCmp30 + 0.07081190269168 * AcceptedCmp40 +
0.18720033568684 * AcceptedCmp50 + 2.6531318197812 * Complain0 + 0.89741230471087 *
HigherEducationBinary0 ;
2465554   +   H1x2_6  = H1x2_6  +    -0.56781516290501 * AcceptedCmp10
2465555   +          +    -1.51874938874937 * AcceptedCmp20  +     1.28621778326033 *
2465556   +        AcceptedCmp30  +    -0.68769482686243 * AcceptedCmp40
2465557   +          +     0.35592893389946 * AcceptedCmp50  +    -1.30827608061077 *
2465558   +        Complain0  +     0.32980103195099 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + -0.56781516290501 * AcceptedCmp10 + -1.51874938874937
* AcceptedCmp20 + 1.28621778326033 * AcceptedCmp30 + -0.68769482686243 * AcceptedCmp40 +
0.35592893389946 * AcceptedCmp50 + -1.30827608061077 * Complain0 + 0.32980103195099 *
HigherEducationBinary0 ;
2465559   +   H1x2_1  = H1x2_1  +     -1.3799101073197 * Education2n_Cycle
2465560   +          +     0.02501135207931 * EducationBasic  +     1.13490660748682 *
2465561   +        EducationGraduation  +    -0.11344307008943 * EducationMaster
2465562   +          +     0.56030871857835 * Marital_StatusDivorced
2465563   +          +    -1.22448534379831 * Marital_StatusMarried
2465564   +          +     0.78141783495855 * Marital_StatusSingle
2465565   +          +    -1.35807438297575 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -1.3799101073197 * Education2n_Cycle +
0.02501135207931 * EducationBasic + 1.13490660748682 * EducationGraduation + -0.11344307008943
* EducationMaster + 0.56030871857835 * Marital_StatusDivorced + -1.22448534379831 *
Marital_StatusMarried + 0.78141783495855 * Marital_StatusSingle + -1.35807438297575 *
Marital_StatusTogether ;
2465566   +   H1x2_2  = H1x2_2  +    -0.29912132201198 * Education2n_Cycle
2465567   +          +    -0.97227735746604 * EducationBasic  +     1.05541395347718 *
2465568   +        EducationGraduation  +     0.69607179798453 * EducationMaster
2465569   +          +    -2.63452071552997 * Marital_StatusDivorced
2465570   +          +     0.61829054779121 * Marital_StatusMarried
2465571   +          +    -2.20743370246315 * Marital_StatusSingle
2465572   +          +     0.56930072654252 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.29912132201198 * Education2n_Cycle +
-0.97227735746604 * EducationBasic + 1.05541395347718 * EducationGraduation + 0.69607179798453
* EducationMaster + -2.63452071552997 * Marital_StatusDivorced + 0.61829054779121 *
Marital_StatusMarried + -2.20743370246315 * Marital_StatusSingle + 0.56930072654252 *
Marital_StatusTogether ;
2465573   +   H1x2_3  = H1x2_3  +     0.65046688904352 * Education2n_Cycle
2465574   +          +     0.03854232912474 * EducationBasic  +     0.59545004622858 *
2465575   +        EducationGraduation  +    -1.68638824011899 * EducationMaster
2465576   +          +      -1.454102516731 * Marital_StatusDivorced
2465577   +          +     0.71488291465759 * Marital_StatusMarried
2465578   +          +     0.96038830049792 * Marital_StatusSingle
2465579   +          +    -0.85244216490853 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.65046688904352 * Education2n_Cycle +
0.03854232912474 * EducationBasic + 0.59545004622858 * EducationGraduation + -1.68638824011899
* EducationMaster + -1.454102516731 * Marital_StatusDivorced + 0.71488291465759 *
Marital_StatusMarried + 0.96038830049792 * Marital_StatusSingle + -0.85244216490853 *
Marital_StatusTogether ;
2465580   +   H1x2_4  = H1x2_4  +     0.37430673318658 * Education2n_Cycle
2465581   +          +    -0.25373979771478 * EducationBasic  +    -1.65617377693247 *
2465582   +        EducationGraduation  +    -1.12481097095571 * EducationMaster
2465583   +          +    -0.01160394891598 * Marital_StatusDivorced
2465584   +          +    -1.09054636482951 * Marital_StatusMarried
2465585   +          +      0.7793855479379 * Marital_StatusSingle
2465586   +          +    -0.40649435490654 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.37430673318658 * Education2n_Cycle +
-0.25373979771478 * EducationBasic + -1.65617377693247 * EducationGraduation +
-1.12481097095571 * EducationMaster + -0.01160394891598 * Marital_StatusDivorced +
-1.09054636482951 * Marital_StatusMarried + 0.7793855479379 * Marital_StatusSingle +
-0.40649435490654 * Marital_StatusTogether ;
2465587   +   H1x2_5  = H1x2_5  +     -0.1016827992735 * Education2n_Cycle
2465588   +          +     1.07194596228219 * EducationBasic  +    -1.05800808905557 *
2465589   +        EducationGraduation  +     0.09666597691691 * EducationMaster
2465590   +          +    -0.73414854875115 * Marital_StatusDivorced
2465591   +          +     0.46421425621114 * Marital_StatusMarried
2465592   +          +    -0.54512730625469 * Marital_StatusSingle
2465593   +          +     0.76568726267448 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + -0.1016827992735 * Education2n_Cycle +
1.07194596228219 * EducationBasic + -1.05800808905557 * EducationGraduation + 0.09666597691691
* EducationMaster + -0.73414854875115 * Marital_StatusDivorced + 0.46421425621114 *
Marital_StatusMarried + -0.54512730625469 * Marital_StatusSingle + 0.76568726267448 *
Marital_StatusTogether ;
2465594   +   H1x2_6  = H1x2_6  +    -1.15957084181454 * Education2n_Cycle
2465595   +          +     0.00847667341235 * EducationBasic  +    -1.58463832529749 *
2465596   +        EducationGraduation  +     0.56518194582557 * EducationMaster
2465597   +          +     0.25131188683384 * Marital_StatusDivorced
2465598   +          +     2.38279806963807 * Marital_StatusMarried
2465599   +          +     0.28897706448348 * Marital_StatusSingle
2465600   +          +     0.89118497255856 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + -1.15957084181454 * Education2n_Cycle +
0.00847667341235 * EducationBasic + -1.58463832529749 * EducationGraduation + 0.56518194582557
* EducationMaster + 0.25131188683384 * Marital_StatusDivorced + 2.38279806963807 *
Marital_StatusMarried + 0.28897706448348 * Marital_StatusSingle + 0.89118497255856 *
Marital_StatusTogether ;
2465601   +   H1x2_1  =    -1.58113759763481 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -1.58113759763481 + H1x2_1 ;
2465602   +   H1x2_2  =    -1.19307731012977 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -1.19307731012977 + H1x2_2 ;
2465603   +   H1x2_3  =     0.35767811974231 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = 0.35767811974231 + H1x2_3 ;
2465604   +   H1x2_4  =    -0.20241610577527 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.20241610577527 + H1x2_4 ;
2465605   +   H1x2_5  =     0.30120348602955 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 0.30120348602955 + H1x2_5 ;
2465606   +   H1x2_6  =     1.04145053611779 + H1x2_6 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = 1.04145053611779 + H1x2_6 ;
2465607   +   H1x2_7  = 0;
MPRINT(EM_DIAGRAM):   H1x2_7 = 0;
2465608   +   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 , H1x2_7
2465609   +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 ,
H1x2_7 );
2465610   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2465611   +   H1x2_1  = EXP(H1x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(H1x2_1 - _MAX_);
2465612   +   _SUM_ = _SUM_ + H1x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_1 ;
2465613   +   H1x2_2  = EXP(H1x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(H1x2_2 - _MAX_);
2465614   +   _SUM_ = _SUM_ + H1x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_2 ;
2465615   +   H1x2_3  = EXP(H1x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(H1x2_3 - _MAX_);
2465616   +   _SUM_ = _SUM_ + H1x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_3 ;
2465617   +   H1x2_4  = EXP(H1x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(H1x2_4 - _MAX_);
2465618   +   _SUM_ = _SUM_ + H1x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_4 ;
2465619   +   H1x2_5  = EXP(H1x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(H1x2_5 - _MAX_);
2465620   +   _SUM_ = _SUM_ + H1x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_5 ;
2465621   +   H1x2_6  = EXP(H1x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(H1x2_6 - _MAX_);
2465622   +   _SUM_ = _SUM_ + H1x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_6 ;
2465623   +   H1x2_7  = EXP(H1x2_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_7 = EXP(H1x2_7 - _MAX_);
2465624   +   _SUM_ = _SUM_ + H1x2_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_7 ;
2465625   +   H1x2_1  = H1x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 / _SUM_;
2465626   +   H1x2_2  = H1x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 / _SUM_;
2465627   +   H1x2_3  = H1x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 / _SUM_;
2465628   +   H1x2_4  = H1x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 / _SUM_;
2465629   +   H1x2_5  = H1x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 / _SUM_;
2465630   +   H1x2_6  = H1x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 / _SUM_;
2465631   +   H1x2_7  = H1x2_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_7 = H1x2_7 / _SUM_;
2465632   +END;
MPRINT(EM_DIAGRAM):   END;
2465633   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2465634   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
2465635   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
2465636   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
2465637   +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
2465638   +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
2465639   +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
2465640   +   H1x2_7  = .;
MPRINT(EM_DIAGRAM):   H1x2_7 = .;
2465641   +END;
MPRINT(EM_DIAGRAM):   END;
2465642   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2465643   +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
2465644   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2465645   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2465646   +   H1x3_1  =    -0.17891338426869 * S_AcceptedCmpTotal
2465647   +          +     0.25935021287808 * S_Age  +     -0.4211584261256 * S_Frq
2465648   +          +    -1.91007620895221 * S_Income  +     0.38954955842314 *
2465649   +        S_Kidhome  +     0.07674351412771 * S_Mnt  +    -0.00193662324959 *
2465650   +        S_MntFishProducts  +    -0.05912563364557 * S_MntFruits
2465651   +          +     0.34447908349796 * S_MntGoldProds  +      1.8146796379351 *
2465652   +        S_MntMeatProducts  +    -0.28617584915758 * S_MntSweetProducts
2465653   +          +    -0.25003395507837 * S_MntWines  +     2.70698456342857 *
2465654   +        S_MonthsAsCustomer  +     0.61560315312621 * S_NumCatalogPurchases
2465655   +          +     1.11855402225797 * S_NumDealsPurchases
2465656   +          +     0.39150287442005 * S_NumDistPurchases
2465657   +          +     0.00160244551627 * S_NumStorePurchases
2465658   +          +     1.54380043731879 * S_NumWebPurchases
2465659   +          +      0.6462755347813 * S_NumWebVisitsMonth
2465660   +          +      0.3712356571744 * S_RFMstat  +     0.31930000498313 *
2465661   +        S_RMntFrq  +     0.91533450209744 * S_Recency
2465662   +          +    -1.15144971921837 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_1 = -0.17891338426869 * S_AcceptedCmpTotal + 0.25935021287808 *
S_Age + -0.4211584261256 * S_Frq + -1.91007620895221 * S_Income + 0.38954955842314 * S_Kidhome
+ 0.07674351412771 * S_Mnt + -0.00193662324959 * S_MntFishProducts + -0.05912563364557 *
S_MntFruits + 0.34447908349796 * S_MntGoldProds + 1.8146796379351 * S_MntMeatProducts +
-0.28617584915758 * S_MntSweetProducts + -0.25003395507837 * S_MntWines + 2.70698456342857 *
S_MonthsAsCustomer + 0.61560315312621 * S_NumCatalogPurchases + 1.11855402225797 *
S_NumDealsPurchases + 0.39150287442005 * S_NumDistPurchases + 0.00160244551627 *
S_NumStorePurchases + 1.54380043731879 * S_NumWebPurchases + 0.6462755347813 *
S_NumWebVisitsMonth + 0.3712356571744 * S_RFMstat + 0.31930000498313 * S_RMntFrq +
0.91533450209744 * S_Recency + -1.15144971921837 * S_Teenhome ;
2465663   +   H1x3_2  =     0.70342217458269 * S_AcceptedCmpTotal
2465664   +          +     1.00269567168731 * S_Age  +     0.28237778780972 * S_Frq
2465665   +          +     1.85610950568833 * S_Income  +    -0.88627540559449 *
2465666   +        S_Kidhome  +      -0.681406495446 * S_Mnt  +    -0.52884566607488 *
2465667   +        S_MntFishProducts  +    -1.55540056999822 * S_MntFruits
2465668   +          +    -0.86530238267543 * S_MntGoldProds  +     0.50288889191395 *
2465669   +        S_MntMeatProducts  +     0.42795025747297 * S_MntSweetProducts
2465670   +          +     1.65622561769832 * S_MntWines  +    -0.40506757052255 *
2465671   +        S_MonthsAsCustomer  +    -0.45283667973478 * S_NumCatalogPurchases
2465672   +          +     0.01911815525287 * S_NumDealsPurchases
2465673   +          +    -1.07196707915227 * S_NumDistPurchases
2465674   +          +      0.6452048321682 * S_NumStorePurchases
2465675   +          +    -0.15818575353955 * S_NumWebPurchases
2465676   +          +    -0.82586162051382 * S_NumWebVisitsMonth
2465677   +          +     0.35914598433318 * S_RFMstat  +     0.14754646817335 *
2465678   +        S_RMntFrq  +     0.23398669008843 * S_Recency
2465679   +          +      0.1494741245474 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_2 = 0.70342217458269 * S_AcceptedCmpTotal + 1.00269567168731 *
S_Age + 0.28237778780972 * S_Frq + 1.85610950568833 * S_Income + -0.88627540559449 * S_Kidhome
+ -0.681406495446 * S_Mnt + -0.52884566607488 * S_MntFishProducts + -1.55540056999822 *
S_MntFruits + -0.86530238267543 * S_MntGoldProds + 0.50288889191395 * S_MntMeatProducts +
0.42795025747297 * S_MntSweetProducts + 1.65622561769832 * S_MntWines + -0.40506757052255 *
S_MonthsAsCustomer + -0.45283667973478 * S_NumCatalogPurchases + 0.01911815525287 *
S_NumDealsPurchases + -1.07196707915227 * S_NumDistPurchases + 0.6452048321682 *
S_NumStorePurchases + -0.15818575353955 * S_NumWebPurchases + -0.82586162051382 *
S_NumWebVisitsMonth + 0.35914598433318 * S_RFMstat + 0.14754646817335 * S_RMntFrq +
0.23398669008843 * S_Recency + 0.1494741245474 * S_Teenhome ;
2465680   +   H1x3_3  =     0.54929571619315 * S_AcceptedCmpTotal
2465681   +          +      -0.751329127583 * S_Age  +    -0.94592306727941 * S_Frq
2465682   +          +    -1.17625421122138 * S_Income  +     0.74760015734698 *
2465683   +        S_Kidhome  +    -1.31055967085841 * S_Mnt  +     -0.5844789069547 *
2465684   +        S_MntFishProducts  +     0.29563811382096 * S_MntFruits
2465685   +          +      2.0486671645084 * S_MntGoldProds  +      0.4596153519541 *
2465686   +        S_MntMeatProducts  +     0.43182048706593 * S_MntSweetProducts
2465687   +          +     0.06319773540648 * S_MntWines  +     -0.9320658068644 *
2465688   +        S_MonthsAsCustomer  +     0.97208201647088 * S_NumCatalogPurchases
2465689   +          +     1.56893739271853 * S_NumDealsPurchases
2465690   +          +      0.6745865425238 * S_NumDistPurchases
2465691   +          +    -0.26848765783548 * S_NumStorePurchases
2465692   +          +     0.79227081430227 * S_NumWebPurchases
2465693   +          +     0.83054874267768 * S_NumWebVisitsMonth
The SAS System
 
2465694   +          +    -0.28363014203077 * S_RFMstat  +    -0.71879552423951 *
2465695   +        S_RMntFrq  +     0.80917480816898 * S_Recency
2465696   +          +    -0.52052715034272 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_3 = 0.54929571619315 * S_AcceptedCmpTotal + -0.751329127583 * S_Age
+ -0.94592306727941 * S_Frq + -1.17625421122138 * S_Income + 0.74760015734698 * S_Kidhome +
-1.31055967085841 * S_Mnt + -0.5844789069547 * S_MntFishProducts + 0.29563811382096 *
S_MntFruits + 2.0486671645084 * S_MntGoldProds + 0.4596153519541 * S_MntMeatProducts +
0.43182048706593 * S_MntSweetProducts + 0.06319773540648 * S_MntWines + -0.9320658068644 *
S_MonthsAsCustomer + 0.97208201647088 * S_NumCatalogPurchases + 1.56893739271853 *
S_NumDealsPurchases + 0.6745865425238 * S_NumDistPurchases + -0.26848765783548 *
S_NumStorePurchases + 0.79227081430227 * S_NumWebPurchases + 0.83054874267768 *
S_NumWebVisitsMonth + -0.28363014203077 * S_RFMstat + -0.71879552423951 * S_RMntFrq +
0.80917480816898 * S_Recency + -0.52052715034272 * S_Teenhome ;
2465697   +   H1x3_4  =     1.71480641781959 * S_AcceptedCmpTotal
2465698   +          +    -0.98495603767618 * S_Age  +     -0.0459665945886 * S_Frq
2465699   +          +     1.19396539246615 * S_Income  +     0.51326452746824 *
2465700   +        S_Kidhome  +    -0.22663230333642 * S_Mnt  +     0.27256846012963 *
2465701   +        S_MntFishProducts  +    -0.50661455153622 * S_MntFruits
2465702   +          +     -0.3498057126965 * S_MntGoldProds  +    -2.87000075082987 *
2465703   +        S_MntMeatProducts  +    -0.09413391100844 * S_MntSweetProducts
2465704   +          +     1.15010664811376 * S_MntWines  +    -0.48501392658783 *
2465705   +        S_MonthsAsCustomer  +      0.2688077310392 * S_NumCatalogPurchases
2465706   +          +    -0.23954856030467 * S_NumDealsPurchases
2465707   +          +    -1.61914390483829 * S_NumDistPurchases
2465708   +          +      -1.014570623016 * S_NumStorePurchases
2465709   +          +    -0.36828642098701 * S_NumWebPurchases
2465710   +          +    -0.04976922659227 * S_NumWebVisitsMonth
2465711   +          +     0.87811344320757 * S_RFMstat  +    -1.70999928232532 *
2465712   +        S_RMntFrq  +    -0.40880481304369 * S_Recency
2465713   +          +     0.75806578113158 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_4 = 1.71480641781959 * S_AcceptedCmpTotal + -0.98495603767618 *
S_Age + -0.0459665945886 * S_Frq + 1.19396539246615 * S_Income + 0.51326452746824 * S_Kidhome
+ -0.22663230333642 * S_Mnt + 0.27256846012963 * S_MntFishProducts + -0.50661455153622 *
S_MntFruits + -0.3498057126965 * S_MntGoldProds + -2.87000075082987 * S_MntMeatProducts +
-0.09413391100844 * S_MntSweetProducts + 1.15010664811376 * S_MntWines + -0.48501392658783 *
S_MonthsAsCustomer + 0.2688077310392 * S_NumCatalogPurchases + -0.23954856030467 *
S_NumDealsPurchases + -1.61914390483829 * S_NumDistPurchases + -1.014570623016 *
S_NumStorePurchases + -0.36828642098701 * S_NumWebPurchases + -0.04976922659227 *
S_NumWebVisitsMonth + 0.87811344320757 * S_RFMstat + -1.70999928232532 * S_RMntFrq +
-0.40880481304369 * S_Recency + 0.75806578113158 * S_Teenhome ;
2465714   +   H1x3_5  =    -0.35033091531835 * S_AcceptedCmpTotal
2465715   +          +    -1.18148775203733 * S_Age  +    -0.17374293038138 * S_Frq
2465716   +          +    -0.36680516767012 * S_Income  +     0.57186890691757 *
2465717   +        S_Kidhome  +    -0.02612042491922 * S_Mnt  +     0.84551697375819 *
2465718   +        S_MntFishProducts  +     0.44255296354709 * S_MntFruits
2465719   +          +    -1.35259485807243 * S_MntGoldProds  +      0.3377329409199 *
2465720   +        S_MntMeatProducts  +    -1.06135100840202 * S_MntSweetProducts
2465721   +          +     0.15771394796649 * S_MntWines  +     1.55754960780486 *
2465722   +        S_MonthsAsCustomer  +    -0.76896921785988 * S_NumCatalogPurchases
2465723   +          +     1.00094082424204 * S_NumDealsPurchases
2465724   +          +      0.2724785290725 * S_NumDistPurchases
2465725   +          +     0.13170237783486 * S_NumStorePurchases
2465726   +          +    -1.31447792523743 * S_NumWebPurchases
2465727   +          +    -0.09121088371438 * S_NumWebVisitsMonth
2465728   +          +     1.46860488573551 * S_RFMstat  +     0.46491504994651 *
2465729   +        S_RMntFrq  +      0.6767512513985 * S_Recency
2465730   +          +    -1.74995034763966 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_5 = -0.35033091531835 * S_AcceptedCmpTotal + -1.18148775203733 *
S_Age + -0.17374293038138 * S_Frq + -0.36680516767012 * S_Income + 0.57186890691757 *
S_Kidhome + -0.02612042491922 * S_Mnt + 0.84551697375819 * S_MntFishProducts +
0.44255296354709 * S_MntFruits + -1.35259485807243 * S_MntGoldProds + 0.3377329409199 *
S_MntMeatProducts + -1.06135100840202 * S_MntSweetProducts + 0.15771394796649 * S_MntWines +
1.55754960780486 * S_MonthsAsCustomer + -0.76896921785988 * S_NumCatalogPurchases +
1.00094082424204 * S_NumDealsPurchases + 0.2724785290725 * S_NumDistPurchases +
0.13170237783486 * S_NumStorePurchases + -1.31447792523743 * S_NumWebPurchases +
-0.09121088371438 * S_NumWebVisitsMonth + 1.46860488573551 * S_RFMstat + 0.46491504994651 *
S_RMntFrq + 0.6767512513985 * S_Recency + -1.74995034763966 * S_Teenhome ;
2465731   +   H1x3_6  =     1.05520309715672 * S_AcceptedCmpTotal
2465732   +          +    -1.05930507843633 * S_Age  +     0.07032294102853 * S_Frq
2465733   +          +    -0.05932294137503 * S_Income  +    -1.47206442598932 *
2465734   +        S_Kidhome  +     0.56661112816398 * S_Mnt  +    -0.11340132210258 *
2465735   +        S_MntFishProducts  +    -0.32177484313741 * S_MntFruits
2465736   +          +    -0.32378384178804 * S_MntGoldProds  +     0.00540737819175 *
2465737   +        S_MntMeatProducts  +     0.14834467568566 * S_MntSweetProducts
2465738   +          +    -0.95841169333668 * S_MntWines  +    -0.62902099823048 *
2465739   +        S_MonthsAsCustomer  +    -0.67434201898155 * S_NumCatalogPurchases
2465740   +          +    -0.73198872336344 * S_NumDealsPurchases
2465741   +          +     0.29368958872361 * S_NumDistPurchases
2465742   +          +     1.52772046446908 * S_NumStorePurchases
2465743   +          +    -1.75065469134874 * S_NumWebPurchases
2465744   +          +      0.0264954621772 * S_NumWebVisitsMonth
2465745   +          +    -0.88054137065815 * S_RFMstat  +     0.70371760194946 *
2465746   +        S_RMntFrq  +     1.14219878739476 * S_Recency
2465747   +          +    -1.15240998118906 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_6 = 1.05520309715672 * S_AcceptedCmpTotal + -1.05930507843633 *
S_Age + 0.07032294102853 * S_Frq + -0.05932294137503 * S_Income + -1.47206442598932 *
S_Kidhome + 0.56661112816398 * S_Mnt + -0.11340132210258 * S_MntFishProducts +
-0.32177484313741 * S_MntFruits + -0.32378384178804 * S_MntGoldProds + 0.00540737819175 *
S_MntMeatProducts + 0.14834467568566 * S_MntSweetProducts + -0.95841169333668 * S_MntWines +
-0.62902099823048 * S_MonthsAsCustomer + -0.67434201898155 * S_NumCatalogPurchases +
-0.73198872336344 * S_NumDealsPurchases + 0.29368958872361 * S_NumDistPurchases +
1.52772046446908 * S_NumStorePurchases + -1.75065469134874 * S_NumWebPurchases +
0.0264954621772 * S_NumWebVisitsMonth + -0.88054137065815 * S_RFMstat + 0.70371760194946 *
S_RMntFrq + 1.14219878739476 * S_Recency + -1.15240998118906 * S_Teenhome ;
2465748   +   H1x3_1  = H1x3_1  +     0.60800466481517 * AcceptedCmp10
2465749   +          +     0.33187245535701 * AcceptedCmp20  +    -0.13888343551044 *
2465750   +        AcceptedCmp30  +     0.93663925029857 * AcceptedCmp40
2465751   +          +     1.09340622621085 * AcceptedCmp50  +    -0.49132743156126 *
2465752   +        Complain0  +     0.45196197584946 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + 0.60800466481517 * AcceptedCmp10 + 0.33187245535701 *
AcceptedCmp20 + -0.13888343551044 * AcceptedCmp30 + 0.93663925029857 * AcceptedCmp40 +
1.09340622621085 * AcceptedCmp50 + -0.49132743156126 * Complain0 + 0.45196197584946 *
HigherEducationBinary0 ;
2465753   +   H1x3_2  = H1x3_2  +     1.40275485940553 * AcceptedCmp10
2465754   +          +    -0.15035102140746 * AcceptedCmp20  +    -0.53574064147206 *
2465755   +        AcceptedCmp30  +    -1.67324904853563 * AcceptedCmp40
2465756   +          +     0.05636486780046 * AcceptedCmp50  +    -0.39032867538703 *
2465757   +        Complain0  +    -0.74980603736258 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + 1.40275485940553 * AcceptedCmp10 + -0.15035102140746 *
AcceptedCmp20 + -0.53574064147206 * AcceptedCmp30 + -1.67324904853563 * AcceptedCmp40 +
0.05636486780046 * AcceptedCmp50 + -0.39032867538703 * Complain0 + -0.74980603736258 *
HigherEducationBinary0 ;
2465758   +   H1x3_3  = H1x3_3  +     0.26722647672682 * AcceptedCmp10
2465759   +          +      0.6216449242511 * AcceptedCmp20  +     0.76635966126463 *
2465760   +        AcceptedCmp30  +    -2.48978919706551 * AcceptedCmp40
2465761   +          +     0.98619070514978 * AcceptedCmp50  +    -0.19244215041297 *
2465762   +        Complain0  +    -1.19045127506692 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 + 0.26722647672682 * AcceptedCmp10 + 0.6216449242511 *
AcceptedCmp20 + 0.76635966126463 * AcceptedCmp30 + -2.48978919706551 * AcceptedCmp40 +
0.98619070514978 * AcceptedCmp50 + -0.19244215041297 * Complain0 + -1.19045127506692 *
HigherEducationBinary0 ;
2465763   +   H1x3_4  = H1x3_4  +    -1.73915810074841 * AcceptedCmp10
2465764   +          +     0.72244354389321 * AcceptedCmp20  +     1.07200246076684 *
2465765   +        AcceptedCmp30  +     0.24242315318429 * AcceptedCmp40
2465766   +          +     0.48717202781909 * AcceptedCmp50  +    -1.18600714935645 *
2465767   +        Complain0  +     -1.0752062632729 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 + -1.73915810074841 * AcceptedCmp10 + 0.72244354389321 *
AcceptedCmp20 + 1.07200246076684 * AcceptedCmp30 + 0.24242315318429 * AcceptedCmp40 +
0.48717202781909 * AcceptedCmp50 + -1.18600714935645 * Complain0 + -1.0752062632729 *
HigherEducationBinary0 ;
2465768   +   H1x3_5  = H1x3_5  +     1.07972020322696 * AcceptedCmp10
2465769   +          +     0.38275266830165 * AcceptedCmp20  +     0.45959913551609 *
2465770   +        AcceptedCmp30  +    -0.30891288234597 * AcceptedCmp40
2465771   +          +    -0.35568820567134 * AcceptedCmp50  +     -1.8045223309162 *
2465772   +        Complain0  +    -0.29380313969195 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 + 1.07972020322696 * AcceptedCmp10 + 0.38275266830165 *
AcceptedCmp20 + 0.45959913551609 * AcceptedCmp30 + -0.30891288234597 * AcceptedCmp40 +
-0.35568820567134 * AcceptedCmp50 + -1.8045223309162 * Complain0 + -0.29380313969195 *
HigherEducationBinary0 ;
2465773   +   H1x3_6  = H1x3_6  +    -2.40002597755125 * AcceptedCmp10
2465774   +          +     0.61725427642794 * AcceptedCmp20  +      1.3438972982524 *
2465775   +        AcceptedCmp30  +    -0.66766212489049 * AcceptedCmp40
2465776   +          +     1.10709227053258 * AcceptedCmp50  +    -0.98301865424423 *
2465777   +        Complain0  +     0.83512874944952 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_6 = H1x3_6 + -2.40002597755125 * AcceptedCmp10 + 0.61725427642794 *
AcceptedCmp20 + 1.3438972982524 * AcceptedCmp30 + -0.66766212489049 * AcceptedCmp40 +
1.10709227053258 * AcceptedCmp50 + -0.98301865424423 * Complain0 + 0.83512874944952 *
HigherEducationBinary0 ;
2465778   +   H1x3_1  = H1x3_1  +    -0.49604077640433 * Education2n_Cycle
2465779   +          +    -0.60803139475446 * EducationBasic  +     0.39029834300888 *
2465780   +        EducationGraduation  +     1.49476669226441 * EducationMaster
2465781   +          +     0.32207432513904 * Marital_StatusDivorced
2465782   +          +      0.6397913221395 * Marital_StatusMarried
2465783   +          +    -0.25330032559918 * Marital_StatusSingle
2465784   +          +      0.6826963146507 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + -0.49604077640433 * Education2n_Cycle +
-0.60803139475446 * EducationBasic + 0.39029834300888 * EducationGraduation + 1.49476669226441
* EducationMaster + 0.32207432513904 * Marital_StatusDivorced + 0.6397913221395 *
Marital_StatusMarried + -0.25330032559918 * Marital_StatusSingle + 0.6826963146507 *
Marital_StatusTogether ;
2465785   +   H1x3_2  = H1x3_2  +     0.70727271276171 * Education2n_Cycle
2465786   +          +    -0.74539861835467 * EducationBasic  +    -1.09813520505203 *
2465787   +        EducationGraduation  +      0.0913616986494 * EducationMaster
2465788   +          +     0.79430904713493 * Marital_StatusDivorced
2465789   +          +     2.54456429102799 * Marital_StatusMarried
2465790   +          +     0.59410742352499 * Marital_StatusSingle
2465791   +          +     0.62339810371964 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + 0.70727271276171 * Education2n_Cycle +
-0.74539861835467 * EducationBasic + -1.09813520505203 * EducationGraduation + 0.0913616986494
* EducationMaster + 0.79430904713493 * Marital_StatusDivorced + 2.54456429102799 *
Marital_StatusMarried + 0.59410742352499 * Marital_StatusSingle + 0.62339810371964 *
Marital_StatusTogether ;
2465792   +   H1x3_3  = H1x3_3  +     0.41739931776571 * Education2n_Cycle
2465793   +          +     0.90042318812458 * EducationBasic  +    -0.30863999735161 *
2465794   +        EducationGraduation  +    -0.07080985966069 * EducationMaster
2465795   +          +    -0.43081775693595 * Marital_StatusDivorced
2465796   +          +    -0.78485102174552 * Marital_StatusMarried
2465797   +          +    -1.56581090110813 * Marital_StatusSingle
2465798   +          +     1.31552735466691 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 + 0.41739931776571 * Education2n_Cycle +
0.90042318812458 * EducationBasic + -0.30863999735161 * EducationGraduation +
-0.07080985966069 * EducationMaster + -0.43081775693595 * Marital_StatusDivorced +
-0.78485102174552 * Marital_StatusMarried + -1.56581090110813 * Marital_StatusSingle +
1.31552735466691 * Marital_StatusTogether ;
2465799   +   H1x3_4  = H1x3_4  +    -1.03450070870223 * Education2n_Cycle
2465800   +          +     0.12962104594991 * EducationBasic  +    -2.08320982697158 *
2465801   +        EducationGraduation  +     1.01633562820676 * EducationMaster
2465802   +          +     0.38226706522151 * Marital_StatusDivorced
2465803   +          +     0.96666958079914 * Marital_StatusMarried
2465804   +          +    -0.07771259761555 * Marital_StatusSingle
2465805   +          +    -0.15667080607342 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 + -1.03450070870223 * Education2n_Cycle +
0.12962104594991 * EducationBasic + -2.08320982697158 * EducationGraduation + 1.01633562820676
* EducationMaster + 0.38226706522151 * Marital_StatusDivorced + 0.96666958079914 *
Marital_StatusMarried + -0.07771259761555 * Marital_StatusSingle + -0.15667080607342 *
Marital_StatusTogether ;
2465806   +   H1x3_5  = H1x3_5  +     0.42350784953316 * Education2n_Cycle
2465807   +          +    -0.47409869250049 * EducationBasic  +     0.22752853959532 *
2465808   +        EducationGraduation  +     0.05813076059598 * EducationMaster
2465809   +          +    -0.38325393606947 * Marital_StatusDivorced
2465810   +          +    -1.43303056163299 * Marital_StatusMarried
2465811   +          +     0.11571941757387 * Marital_StatusSingle
2465812   +          +     0.42633042000729 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 + 0.42350784953316 * Education2n_Cycle +
-0.47409869250049 * EducationBasic + 0.22752853959532 * EducationGraduation + 0.05813076059598
* EducationMaster + -0.38325393606947 * Marital_StatusDivorced + -1.43303056163299 *
Marital_StatusMarried + 0.11571941757387 * Marital_StatusSingle + 0.42633042000729 *
Marital_StatusTogether ;
2465813   +   H1x3_6  = H1x3_6  +     1.11214831415741 * Education2n_Cycle
2465814   +          +      0.8877309144454 * EducationBasic  +     0.87390674413956 *
2465815   +        EducationGraduation  +     0.90837023676142 * EducationMaster
2465816   +          +    -0.36491799765765 * Marital_StatusDivorced
2465817   +          +     0.14142786767503 * Marital_StatusMarried
2465818   +          +     0.22643970468805 * Marital_StatusSingle
2465819   +          +     0.74162870756295 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_6 = H1x3_6 + 1.11214831415741 * Education2n_Cycle + 0.8877309144454
* EducationBasic + 0.87390674413956 * EducationGraduation + 0.90837023676142 * EducationMaster
+ -0.36491799765765 * Marital_StatusDivorced + 0.14142786767503 * Marital_StatusMarried +
0.22643970468805 * Marital_StatusSingle + 0.74162870756295 * Marital_StatusTogether ;
2465820   +   H1x3_1  =        0.17121674502 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.17121674502 + H1x3_1 ;
2465821   +   H1x3_2  =    -0.07858073871761 + H1x3_2 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = -0.07858073871761 + H1x3_2 ;
2465822   +   H1x3_3  =     -0.1687483376367 + H1x3_3 ;
MPRINT(EM_DIAGRAM):   H1x3_3 = -0.1687483376367 + H1x3_3 ;
2465823   +   H1x3_4  =     0.92501573900148 + H1x3_4 ;
MPRINT(EM_DIAGRAM):   H1x3_4 = 0.92501573900148 + H1x3_4 ;
2465824   +   H1x3_5  =    -0.04765930254307 + H1x3_5 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = -0.04765930254307 + H1x3_5 ;
2465825   +   H1x3_6  =     0.29532221854366 + H1x3_6 ;
MPRINT(EM_DIAGRAM):   H1x3_6 = 0.29532221854366 + H1x3_6 ;
2465826   +   H1x3_7  = 0;
MPRINT(EM_DIAGRAM):   H1x3_7 = 0;
2465827   +   _MAX_ = MAX (H1x3_1 , H1x3_2 , H1x3_3 , H1x3_4 , H1x3_5 , H1x3_6 , H1x3_7
2465828   +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x3_1 , H1x3_2 , H1x3_3 , H1x3_4 , H1x3_5 , H1x3_6 ,
H1x3_7 );
2465829   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2465830   +   H1x3_1  = EXP(H1x3_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_1 = EXP(H1x3_1 - _MAX_);
2465831   +   _SUM_ = _SUM_ + H1x3_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_1 ;
2465832   +   H1x3_2  = EXP(H1x3_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_2 = EXP(H1x3_2 - _MAX_);
2465833   +   _SUM_ = _SUM_ + H1x3_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_2 ;
2465834   +   H1x3_3  = EXP(H1x3_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_3 = EXP(H1x3_3 - _MAX_);
2465835   +   _SUM_ = _SUM_ + H1x3_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_3 ;
2465836   +   H1x3_4  = EXP(H1x3_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_4 = EXP(H1x3_4 - _MAX_);
2465837   +   _SUM_ = _SUM_ + H1x3_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_4 ;
2465838   +   H1x3_5  = EXP(H1x3_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_5 = EXP(H1x3_5 - _MAX_);
2465839   +   _SUM_ = _SUM_ + H1x3_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_5 ;
2465840   +   H1x3_6  = EXP(H1x3_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_6 = EXP(H1x3_6 - _MAX_);
2465841   +   _SUM_ = _SUM_ + H1x3_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_6 ;
2465842   +   H1x3_7  = EXP(H1x3_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_7 = EXP(H1x3_7 - _MAX_);
2465843   +   _SUM_ = _SUM_ + H1x3_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_7 ;
2465844   +   H1x3_1  = H1x3_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 / _SUM_;
2465845   +   H1x3_2  = H1x3_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 / _SUM_;
2465846   +   H1x3_3  = H1x3_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 / _SUM_;
2465847   +   H1x3_4  = H1x3_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 / _SUM_;
2465848   +   H1x3_5  = H1x3_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 / _SUM_;
2465849   +   H1x3_6  = H1x3_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_6 = H1x3_6 / _SUM_;
2465850   +   H1x3_7  = H1x3_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_7 = H1x3_7 / _SUM_;
2465851   +END;
MPRINT(EM_DIAGRAM):   END;
2465852   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2465853   +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
2465854   +   H1x3_2  = .;
MPRINT(EM_DIAGRAM):   H1x3_2 = .;
2465855   +   H1x3_3  = .;
MPRINT(EM_DIAGRAM):   H1x3_3 = .;
2465856   +   H1x3_4  = .;
MPRINT(EM_DIAGRAM):   H1x3_4 = .;
2465857   +   H1x3_5  = .;
MPRINT(EM_DIAGRAM):   H1x3_5 = .;
2465858   +   H1x3_6  = .;
MPRINT(EM_DIAGRAM):   H1x3_6 = .;
2465859   +   H1x3_7  = .;
MPRINT(EM_DIAGRAM):   H1x3_7 = .;
2465860   +END;
MPRINT(EM_DIAGRAM):   END;
2465861   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2465862   +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
2465863   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2465864   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2465865   +   H2x1_1  =    -0.59397690687549 * H1x1_1  +     0.10790242485513 * H1x1_2
2465866   +          +     1.34957997338147 * H1x1_3  +     0.98783879769831 * H1x1_4
2465867   +          +    -1.73131698691915 * H1x1_5  +    -0.04920424431591 * H1x1_6
2465868   +          +    -0.75229173661277 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -0.59397690687549 * H1x1_1 + 0.10790242485513 * H1x1_2 +
1.34957997338147 * H1x1_3 + 0.98783879769831 * H1x1_4 + -1.73131698691915 * H1x1_5 +
-0.04920424431591 * H1x1_6 + -0.75229173661277 * H1x1_7 ;
2465869   +   H2x1_2  =    -0.98729009516736 * H1x1_1  +     0.08491210993613 * H1x1_2
2465870   +          +     0.08027654554575 * H1x1_3  +     0.06189432860142 * H1x1_4
2465871   +          +    -1.23526842489276 * H1x1_5  +    -0.17600169070197 * H1x1_6
2465872   +          +     0.70746372975481 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -0.98729009516736 * H1x1_1 + 0.08491210993613 * H1x1_2 +
0.08027654554575 * H1x1_3 + 0.06189432860142 * H1x1_4 + -1.23526842489276 * H1x1_5 +
-0.17600169070197 * H1x1_6 + 0.70746372975481 * H1x1_7 ;
2465873   +   H2x1_3  =    -0.91861478701429 * H1x1_1  +     0.18513565366261 * H1x1_2
2465874   +          +    -0.18629587955963 * H1x1_3  +     0.76802660507034 * H1x1_4
2465875   +          +    -0.47979525657638 * H1x1_5  +     0.06968142422923 * H1x1_6
2465876   +          +     2.18264864713501 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -0.91861478701429 * H1x1_1 + 0.18513565366261 * H1x1_2 +
-0.18629587955963 * H1x1_3 + 0.76802660507034 * H1x1_4 + -0.47979525657638 * H1x1_5 +
0.06968142422923 * H1x1_6 + 2.18264864713501 * H1x1_7 ;
2465877   +   H2x1_4  =     1.02774363171853 * H1x1_1  +     1.08006636098136 * H1x1_2
2465878   +          +    -2.27078540572539 * H1x1_3  +    -0.54968089382258 * H1x1_4
2465879   +          +     2.11477012099075 * H1x1_5  +     1.91368944483056 * H1x1_6
2465880   +          +     0.22313799249268 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.02774363171853 * H1x1_1 + 1.08006636098136 * H1x1_2 +
-2.27078540572539 * H1x1_3 + -0.54968089382258 * H1x1_4 + 2.11477012099075 * H1x1_5 +
1.91368944483056 * H1x1_6 + 0.22313799249268 * H1x1_7 ;
2465881   +   H2x1_5  =    -1.06933000183778 * H1x1_1  +     0.73081558484415 * H1x1_2
2465882   +          +    -0.78012012951065 * H1x1_3  +     0.81916081920412 * H1x1_4
2465883   +          +    -1.46358608086032 * H1x1_5  +     1.83492870022704 * H1x1_6
2465884   +          +     0.75554005406859 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -1.06933000183778 * H1x1_1 + 0.73081558484415 * H1x1_2 +
-0.78012012951065 * H1x1_3 + 0.81916081920412 * H1x1_4 + -1.46358608086032 * H1x1_5 +
1.83492870022704 * H1x1_6 + 0.75554005406859 * H1x1_7 ;
2465885   +   H2x1_6  =    -2.28576277725334 * H1x1_1  +    -0.32249555333061 * H1x1_2
2465886   +          +     3.41388795688866 * H1x1_3  +     3.30305437699117 * H1x1_4
2465887   +          +    -1.49237136034665 * H1x1_5  +    -1.64329313023006 * H1x1_6
2465888   +          +     3.08746595768905 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = -2.28576277725334 * H1x1_1 + -0.32249555333061 * H1x1_2 +
3.41388795688866 * H1x1_3 + 3.30305437699117 * H1x1_4 + -1.49237136034665 * H1x1_5 +
-1.64329313023006 * H1x1_6 + 3.08746595768905 * H1x1_7 ;
2465889   +   H2x1_1  = H2x1_1  +    -2.56424783943845 * H1x2_1
2465890   +          +    -1.00213973107436 * H1x2_2  +    -0.47445930434013 * H1x2_3
2465891   +          +    -1.62372689856618 * H1x2_4  +     -1.1856250348479 * H1x2_5
2465892   +          +     0.04266758405533 * H1x2_6  +    -0.60071538153471 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -2.56424783943845 * H1x2_1 + -1.00213973107436 *
H1x2_2 + -0.47445930434013 * H1x2_3 + -1.62372689856618 * H1x2_4 + -1.1856250348479 * H1x2_5 +
0.04266758405533 * H1x2_6 + -0.60071538153471 * H1x2_7 ;
2465893   +   H2x1_2  = H2x1_2  +     0.00935939453146 * H1x2_1
2465894   +          +     0.55542862749222 * H1x2_2  +     -0.6066128025675 * H1x2_3
2465895   +          +    -0.53196514301497 * H1x2_4  +    -1.40549473181231 * H1x2_5
2465896   +          +    -0.08595621526876 * H1x2_6  +    -1.03953618328756 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 0.00935939453146 * H1x2_1 + 0.55542862749222 * H1x2_2
+ -0.6066128025675 * H1x2_3 + -0.53196514301497 * H1x2_4 + -1.40549473181231 * H1x2_5 +
-0.08595621526876 * H1x2_6 + -1.03953618328756 * H1x2_7 ;
2465897   +   H2x1_3  = H2x1_3  +    -1.41069312035355 * H1x2_1
2465898   +          +     0.56124490780446 * H1x2_2  +    -0.00472279335297 * H1x2_3
2465899   +          +    -1.10441771442377 * H1x2_4  +    -0.27090019786185 * H1x2_5
2465900   +          +    -0.15206855618217 * H1x2_6  +     -1.6035395520507 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -1.41069312035355 * H1x2_1 + 0.56124490780446 * H1x2_2
+ -0.00472279335297 * H1x2_3 + -1.10441771442377 * H1x2_4 + -0.27090019786185 * H1x2_5 +
-0.15206855618217 * H1x2_6 + -1.6035395520507 * H1x2_7 ;
2465901   +   H2x1_4  = H2x1_4  +    -0.55045399339183 * H1x2_1
2465902   +          +     0.02477552373088 * H1x2_2  +     0.19400769235958 * H1x2_3
2465903   +          +    -0.38264537483702 * H1x2_4  +     0.63479720884458 * H1x2_5
2465904   +          +    -0.60194629301645 * H1x2_6  +    -0.83490097285651 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + -0.55045399339183 * H1x2_1 + 0.02477552373088 * H1x2_2
+ 0.19400769235958 * H1x2_3 + -0.38264537483702 * H1x2_4 + 0.63479720884458 * H1x2_5 +
-0.60194629301645 * H1x2_6 + -0.83490097285651 * H1x2_7 ;
2465905   +   H2x1_5  = H2x1_5  +    -1.03176133074695 * H1x2_1
2465906   +          +    -0.59926889064506 * H1x2_2  +    -1.07077012847053 * H1x2_3
2465907   +          +    -1.18998920291096 * H1x2_4  +     0.39150574258439 * H1x2_5
2465908   +          +     0.05580574741832 * H1x2_6  +    -0.32272109045259 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + -1.03176133074695 * H1x2_1 + -0.59926889064506 *
H1x2_2 + -1.07077012847053 * H1x2_3 + -1.18998920291096 * H1x2_4 + 0.39150574258439 * H1x2_5 +
0.05580574741832 * H1x2_6 + -0.32272109045259 * H1x2_7 ;
2465909   +   H2x1_6  = H2x1_6  +    -0.61952040538587 * H1x2_1
2465910   +          +     0.35510185028829 * H1x2_2  +    -0.23901935720129 * H1x2_3
2465911   +          +     0.31752417497209 * H1x2_4  +    -1.20101515562967 * H1x2_5
2465912   +          +     0.95004398218762 * H1x2_6  +    -0.60363955740244 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + -0.61952040538587 * H1x2_1 + 0.35510185028829 * H1x2_2
+ -0.23901935720129 * H1x2_3 + 0.31752417497209 * H1x2_4 + -1.20101515562967 * H1x2_5 +
0.95004398218762 * H1x2_6 + -0.60363955740244 * H1x2_7 ;
2465913   +   H2x1_1  = H2x1_1  +     0.74378922258523 * H1x3_1
2465914   +          +      0.4693103426831 * H1x3_2  +     0.82071786194731 * H1x3_3
2465915   +          +     0.46432194238141 * H1x3_4  +    -1.39760250161206 * H1x3_5
2465916   +          +     0.68725250578779 * H1x3_6  +    -0.98986331205144 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 0.74378922258523 * H1x3_1 + 0.4693103426831 * H1x3_2 +
0.82071786194731 * H1x3_3 + 0.46432194238141 * H1x3_4 + -1.39760250161206 * H1x3_5 +
0.68725250578779 * H1x3_6 + -0.98986331205144 * H1x3_7 ;
2465917   +   H2x1_2  = H2x1_2  +     0.48406734142754 * H1x3_1
2465918   +          +     1.24032575331626 * H1x3_2  +     0.10072816620895 * H1x3_3
2465919   +          +     -2.4915795108808 * H1x3_4  +    -1.20085587739472 * H1x3_5
2465920   +          +     2.57480977795816 * H1x3_6  +    -0.36127801521801 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 0.48406734142754 * H1x3_1 + 1.24032575331626 * H1x3_2
+ 0.10072816620895 * H1x3_3 + -2.4915795108808 * H1x3_4 + -1.20085587739472 * H1x3_5 +
2.57480977795816 * H1x3_6 + -0.36127801521801 * H1x3_7 ;
2465921   +   H2x1_3  = H2x1_3  +    -0.29392518978638 * H1x3_1
2465922   +          +     0.02884163093827 * H1x3_2  +     -0.7595494999576 * H1x3_3
2465923   +          +     0.32536537321799 * H1x3_4  +    -0.01283695014976 * H1x3_5
2465924   +          +     0.76895275927405 * H1x3_6  +     -0.2802859993784 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -0.29392518978638 * H1x3_1 + 0.02884163093827 * H1x3_2
+ -0.7595494999576 * H1x3_3 + 0.32536537321799 * H1x3_4 + -0.01283695014976 * H1x3_5 +
0.76895275927405 * H1x3_6 + -0.2802859993784 * H1x3_7 ;
2465925   +   H2x1_4  = H2x1_4  +     2.19833784150068 * H1x3_1
2465926   +          +     0.25528651098746 * H1x3_2  +    -0.72296156297186 * H1x3_3
2465927   +          +    -0.14360138590872 * H1x3_4  +     0.77657569331577 * H1x3_5
2465928   +          +    -1.57969278343415 * H1x3_6  +    -0.92288304588247 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 2.19833784150068 * H1x3_1 + 0.25528651098746 * H1x3_2
+ -0.72296156297186 * H1x3_3 + -0.14360138590872 * H1x3_4 + 0.77657569331577 * H1x3_5 +
-1.57969278343415 * H1x3_6 + -0.92288304588247 * H1x3_7 ;
2465929   +   H2x1_5  = H2x1_5  +     2.11753865409831 * H1x3_1
2465930   +          +     0.83654766112935 * H1x3_2  +     0.97472534941535 * H1x3_3
2465931   +          +     1.35030042962655 * H1x3_4  +     1.24680664824079 * H1x3_5
2465932   +          +     0.19234112612264 * H1x3_6  +    -0.90680244689294 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + 2.11753865409831 * H1x3_1 + 0.83654766112935 * H1x3_2
+ 0.97472534941535 * H1x3_3 + 1.35030042962655 * H1x3_4 + 1.24680664824079 * H1x3_5 +
0.19234112612264 * H1x3_6 + -0.90680244689294 * H1x3_7 ;
2465933   +   H2x1_6  = H2x1_6  +     2.07923724911848 * H1x3_1
2465934   +          +     1.62526758922217 * H1x3_2  +    -0.68837627923045 * H1x3_3
2465935   +          +    -0.21127837456631 * H1x3_4  +    -1.47138526111866 * H1x3_5
2465936   +          +    -0.52275521204408 * H1x3_6  +    -0.36639952580044 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + 2.07923724911848 * H1x3_1 + 1.62526758922217 * H1x3_2
+ -0.68837627923045 * H1x3_3 + -0.21127837456631 * H1x3_4 + -1.47138526111866 * H1x3_5 +
-0.52275521204408 * H1x3_6 + -0.36639952580044 * H1x3_7 ;
2465937   +   H2x1_1  =    -1.05059672372056 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -1.05059672372056 + H2x1_1 ;
2465938   +   H2x1_2  =    -1.18404209429335 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -1.18404209429335 + H2x1_2 ;
2465939   +   H2x1_3  =    -0.76285494175137 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -0.76285494175137 + H2x1_3 ;
2465940   +   H2x1_4  =     2.22362261707253 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 2.22362261707253 + H2x1_4 ;
2465941   +   H2x1_5  =    -0.98793149966854 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -0.98793149966854 + H2x1_5 ;
2465942   +   H2x1_6  =     1.51370254076672 + H2x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.51370254076672 + H2x1_6 ;
2465943   +   H2x1_7  = 0;
MPRINT(EM_DIAGRAM):   H2x1_7 = 0;
2465944   +   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 , H2x1_6 , H2x1_7
2465945   +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 , H2x1_6 ,
H2x1_7 );
2465946   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2465947   +   H2x1_1  = EXP(H2x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_1 = EXP(H2x1_1 - _MAX_);
2465948   +   _SUM_ = _SUM_ + H2x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_1 ;
2465949   +   H2x1_2  = EXP(H2x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_2 = EXP(H2x1_2 - _MAX_);
2465950   +   _SUM_ = _SUM_ + H2x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_2 ;
2465951   +   H2x1_3  = EXP(H2x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_3 = EXP(H2x1_3 - _MAX_);
2465952   +   _SUM_ = _SUM_ + H2x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_3 ;
2465953   +   H2x1_4  = EXP(H2x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_4 = EXP(H2x1_4 - _MAX_);
2465954   +   _SUM_ = _SUM_ + H2x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_4 ;
2465955   +   H2x1_5  = EXP(H2x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_5 = EXP(H2x1_5 - _MAX_);
2465956   +   _SUM_ = _SUM_ + H2x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_5 ;
2465957   +   H2x1_6  = EXP(H2x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_6 = EXP(H2x1_6 - _MAX_);
2465958   +   _SUM_ = _SUM_ + H2x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_6 ;
2465959   +   H2x1_7  = EXP(H2x1_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_7 = EXP(H2x1_7 - _MAX_);
2465960   +   _SUM_ = _SUM_ + H2x1_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_7 ;
2465961   +   H2x1_1  = H2x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 / _SUM_;
2465962   +   H2x1_2  = H2x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 / _SUM_;
2465963   +   H2x1_3  = H2x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 / _SUM_;
2465964   +   H2x1_4  = H2x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 / _SUM_;
2465965   +   H2x1_5  = H2x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 / _SUM_;
2465966   +   H2x1_6  = H2x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 / _SUM_;
2465967   +   H2x1_7  = H2x1_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_7 = H2x1_7 / _SUM_;
2465968   +END;
MPRINT(EM_DIAGRAM):   END;
2465969   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2465970   +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
2465971   +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
2465972   +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
2465973   +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
2465974   +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
2465975   +   H2x1_6  = .;
MPRINT(EM_DIAGRAM):   H2x1_6 = .;
2465976   +   H2x1_7  = .;
MPRINT(EM_DIAGRAM):   H2x1_7 = .;
2465977   +END;
MPRINT(EM_DIAGRAM):   END;
2465978   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2465979   +*** Writing the Node H2x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x2_ ;
2465980   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2465981   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2465982   +   H2x2_1  =    -0.47079896252387 * H1x1_1  +      0.6132734714958 * H1x1_2
2465983   +          +     1.50300753820512 * H1x1_3  +     -0.1812621169129 * H1x1_4
2465984   +          +    -0.18531614991208 * H1x1_5  +     -0.2905105845089 * H1x1_6
2465985   +          +     1.33158539183491 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = -0.47079896252387 * H1x1_1 + 0.6132734714958 * H1x1_2 +
1.50300753820512 * H1x1_3 + -0.1812621169129 * H1x1_4 + -0.18531614991208 * H1x1_5 +
-0.2905105845089 * H1x1_6 + 1.33158539183491 * H1x1_7 ;
2465986   +   H2x2_2  =    -1.90834701790953 * H1x1_1  +      0.6177658514697 * H1x1_2
2465987   +          +     0.36465199316418 * H1x1_3  +     0.85911870587838 * H1x1_4
2465988   +          +     0.02147610114602 * H1x1_5  +     0.32326590534391 * H1x1_6
2465989   +          +    -1.04241581652278 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = -1.90834701790953 * H1x1_1 + 0.6177658514697 * H1x1_2 +
0.36465199316418 * H1x1_3 + 0.85911870587838 * H1x1_4 + 0.02147610114602 * H1x1_5 +
0.32326590534391 * H1x1_6 + -1.04241581652278 * H1x1_7 ;
2465990   +   H2x2_3  =       0.471130277999 * H1x1_1  +     0.96694465336161 * H1x1_2
2465991   +          +       0.141582035067 * H1x1_3  +     0.53325844993783 * H1x1_4
2465992   +          +     -0.0659115060565 * H1x1_5  +     0.38141753021852 * H1x1_6
2465993   +          +    -1.14139437080586 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = 0.471130277999 * H1x1_1 + 0.96694465336161 * H1x1_2 +
0.141582035067 * H1x1_3 + 0.53325844993783 * H1x1_4 + -0.0659115060565 * H1x1_5 +
0.38141753021852 * H1x1_6 + -1.14139437080586 * H1x1_7 ;
2465994   +   H2x2_4  =     0.97070926632973 * H1x1_1  +    -0.13619191199121 * H1x1_2
2465995   +          +       0.111155554391 * H1x1_3  +    -0.50119055939436 * H1x1_4
2465996   +          +     -0.4478264228864 * H1x1_5  +    -0.07373167561096 * H1x1_6
2465997   +          +    -0.48838853015257 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = 0.97070926632973 * H1x1_1 + -0.13619191199121 * H1x1_2 +
0.111155554391 * H1x1_3 + -0.50119055939436 * H1x1_4 + -0.4478264228864 * H1x1_5 +
-0.07373167561096 * H1x1_6 + -0.48838853015257 * H1x1_7 ;
2465998   +   H2x2_5  =    -0.97151785477215 * H1x1_1  +     0.21189203541458 * H1x1_2
2465999   +          +    -0.19596886882434 * H1x1_3  +      1.3474130560719 * H1x1_4
2466000   +          +     1.73119417991798 * H1x1_5  +    -0.03726270753922 * H1x1_6
2466001   +          +    -1.41850405567364 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = -0.97151785477215 * H1x1_1 + 0.21189203541458 * H1x1_2 +
-0.19596886882434 * H1x1_3 + 1.3474130560719 * H1x1_4 + 1.73119417991798 * H1x1_5 +
-0.03726270753922 * H1x1_6 + -1.41850405567364 * H1x1_7 ;
2466002   +   H2x2_6  =     0.64188298957992 * H1x1_1  +     0.87835723870887 * H1x1_2
2466003   +          +     0.65705195530326 * H1x1_3  +    -1.37039626769544 * H1x1_4
2466004   +          +    -0.32238737127781 * H1x1_5  +     0.33986547881641 * H1x1_6
2466005   +          +    -0.39788950643812 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = 0.64188298957992 * H1x1_1 + 0.87835723870887 * H1x1_2 +
0.65705195530326 * H1x1_3 + -1.37039626769544 * H1x1_4 + -0.32238737127781 * H1x1_5 +
0.33986547881641 * H1x1_6 + -0.39788950643812 * H1x1_7 ;
2466006   +   H2x2_1  = H2x2_1  +    -0.69934298550944 * H1x2_1
2466007   +          +    -0.34972890643898 * H1x2_2  +     0.13067071374168 * H1x2_3
2466008   +          +    -0.35163870866778 * H1x2_4  +     0.68739106758866 * H1x2_5
2466009   +          +    -0.13482628170329 * H1x2_6  +    -0.03659282127619 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + -0.69934298550944 * H1x2_1 + -0.34972890643898 *
H1x2_2 + 0.13067071374168 * H1x2_3 + -0.35163870866778 * H1x2_4 + 0.68739106758866 * H1x2_5 +
-0.13482628170329 * H1x2_6 + -0.03659282127619 * H1x2_7 ;
2466010   +   H2x2_2  = H2x2_2  +    -0.16537065948373 * H1x2_1
2466011   +          +     1.88602375412723 * H1x2_2  +     0.00246313998608 * H1x2_3
2466012   +          +    -0.38678545162214 * H1x2_4  +     1.62314892910576 * H1x2_5
2466013   +          +     1.14369813266427 * H1x2_6  +    -0.04547589616076 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + -0.16537065948373 * H1x2_1 + 1.88602375412723 * H1x2_2
+ 0.00246313998608 * H1x2_3 + -0.38678545162214 * H1x2_4 + 1.62314892910576 * H1x2_5 +
1.14369813266427 * H1x2_6 + -0.04547589616076 * H1x2_7 ;
2466014   +   H2x2_3  = H2x2_3  +     0.25040248389011 * H1x2_1
2466015   +          +    -1.56534319969402 * H1x2_2  +     0.07686150326519 * H1x2_3
2466016   +          +     -0.9279505919723 * H1x2_4  +    -0.40426942169792 * H1x2_5
2466017   +          +      0.0625082015929 * H1x2_6  +    -1.06140294711643 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 + 0.25040248389011 * H1x2_1 + -1.56534319969402 * H1x2_2
+ 0.07686150326519 * H1x2_3 + -0.9279505919723 * H1x2_4 + -0.40426942169792 * H1x2_5 +
0.0625082015929 * H1x2_6 + -1.06140294711643 * H1x2_7 ;
2466018   +   H2x2_4  = H2x2_4  +     -0.4384763018657 * H1x2_1
2466019   +          +    -1.45966734038116 * H1x2_2  +      -2.034771072409 * H1x2_3
2466020   +          +    -0.09055740067076 * H1x2_4  +     1.51504299287048 * H1x2_5
2466021   +          +     0.15439799867788 * H1x2_6  +    -1.11828371545771 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 + -0.4384763018657 * H1x2_1 + -1.45966734038116 * H1x2_2
+ -2.034771072409 * H1x2_3 + -0.09055740067076 * H1x2_4 + 1.51504299287048 * H1x2_5 +
0.15439799867788 * H1x2_6 + -1.11828371545771 * H1x2_7 ;
2466022   +   H2x2_5  = H2x2_5  +     1.25750321874643 * H1x2_1
2466023   +          +    -0.65639925770112 * H1x2_2  +     -1.7659580690496 * H1x2_3
2466024   +          +       0.375442412611 * H1x2_4  +     0.00802128415855 * H1x2_5
2466025   +          +     0.75342656671485 * H1x2_6  +     1.64939805941174 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 + 1.25750321874643 * H1x2_1 + -0.65639925770112 * H1x2_2
+ -1.7659580690496 * H1x2_3 + 0.375442412611 * H1x2_4 + 0.00802128415855 * H1x2_5 +
0.75342656671485 * H1x2_6 + 1.64939805941174 * H1x2_7 ;
2466026   +   H2x2_6  = H2x2_6  +     1.32293752617916 * H1x2_1
2466027   +          +     0.48969975153948 * H1x2_2  +    -0.72928783660254 * H1x2_3
2466028   +          +     0.84727905047749 * H1x2_4  +     0.04670520107938 * H1x2_5
2466029   +          +     2.02862934142232 * H1x2_6  +    -0.56510756043393 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = H2x2_6 + 1.32293752617916 * H1x2_1 + 0.48969975153948 * H1x2_2
+ -0.72928783660254 * H1x2_3 + 0.84727905047749 * H1x2_4 + 0.04670520107938 * H1x2_5 +
2.02862934142232 * H1x2_6 + -0.56510756043393 * H1x2_7 ;
2466030   +   H2x2_1  = H2x2_1  +       1.744725276854 * H1x3_1
2466031   +          +     0.13060858789431 * H1x3_2  +    -0.96737787454303 * H1x3_3
2466032   +          +    -0.33966254732699 * H1x3_4  +     2.39360262119688 * H1x3_5
2466033   +          +     2.58016170780679 * H1x3_6  +    -0.61611732156494 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + 1.744725276854 * H1x3_1 + 0.13060858789431 * H1x3_2 +
-0.96737787454303 * H1x3_3 + -0.33966254732699 * H1x3_4 + 2.39360262119688 * H1x3_5 +
2.58016170780679 * H1x3_6 + -0.61611732156494 * H1x3_7 ;
2466034   +   H2x2_2  = H2x2_2  +    -0.81180308935434 * H1x3_1
2466035   +          +    -1.15566778124471 * H1x3_2  +     0.08550916456261 * H1x3_3
2466036   +          +     0.54919117407314 * H1x3_4  +     0.18927188150893 * H1x3_5
2466037   +          +    -0.15464567766004 * H1x3_6  +     0.22152383228096 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + -0.81180308935434 * H1x3_1 + -1.15566778124471 *
H1x3_2 + 0.08550916456261 * H1x3_3 + 0.54919117407314 * H1x3_4 + 0.18927188150893 * H1x3_5 +
-0.15464567766004 * H1x3_6 + 0.22152383228096 * H1x3_7 ;
2466038   +   H2x2_3  = H2x2_3  +    -0.57155391194888 * H1x3_1
2466039   +          +    -0.80109748621438 * H1x3_2  +     -1.0755749661031 * H1x3_3
2466040   +          +     1.03082070302539 * H1x3_4  +    -2.00320570042417 * H1x3_5
2466041   +          +    -1.96298435256616 * H1x3_6  +     1.02097262601001 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 + -0.57155391194888 * H1x3_1 + -0.80109748621438 *
H1x3_2 + -1.0755749661031 * H1x3_3 + 1.03082070302539 * H1x3_4 + -2.00320570042417 * H1x3_5 +
-1.96298435256616 * H1x3_6 + 1.02097262601001 * H1x3_7 ;
2466042   +   H2x2_4  = H2x2_4  +     0.24801772968599 * H1x3_1
2466043   +          +    -2.13175914157416 * H1x3_2  +    -0.52172370749235 * H1x3_3
2466044   +          +     2.04158456409986 * H1x3_4  +     1.02332318578438 * H1x3_5
2466045   +          +      -0.428263055638 * H1x3_6  +    -0.10602300040145 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 + 0.24801772968599 * H1x3_1 + -2.13175914157416 * H1x3_2
+ -0.52172370749235 * H1x3_3 + 2.04158456409986 * H1x3_4 + 1.02332318578438 * H1x3_5 +
-0.428263055638 * H1x3_6 + -0.10602300040145 * H1x3_7 ;
2466046   +   H2x2_5  = H2x2_5  +    -1.00177979562809 * H1x3_1
2466047   +          +    -0.45285333413007 * H1x3_2  +    -0.35882884863392 * H1x3_3
2466048   +          +     0.23001711273663 * H1x3_4  +     0.77235765656369 * H1x3_5
2466049   +          +    -0.04383242140243 * H1x3_6  +    -0.25926963615252 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 + -1.00177979562809 * H1x3_1 + -0.45285333413007 *
H1x3_2 + -0.35882884863392 * H1x3_3 + 0.23001711273663 * H1x3_4 + 0.77235765656369 * H1x3_5 +
-0.04383242140243 * H1x3_6 + -0.25926963615252 * H1x3_7 ;
2466050   +   H2x2_6  = H2x2_6  +     0.84797826043534 * H1x3_1
2466051   +          +    -0.46927154831713 * H1x3_2  +    -1.09865845985096 * H1x3_3
2466052   +          +     0.59699123454307 * H1x3_4  +     1.59564014754161 * H1x3_5
2466053   +          +     1.33413776227036 * H1x3_6  +     0.33047800872361 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = H2x2_6 + 0.84797826043534 * H1x3_1 + -0.46927154831713 * H1x3_2
+ -1.09865845985096 * H1x3_3 + 0.59699123454307 * H1x3_4 + 1.59564014754161 * H1x3_5 +
1.33413776227036 * H1x3_6 + 0.33047800872361 * H1x3_7 ;
2466054   +   H2x2_1  =    -3.05344936388855 + H2x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = -3.05344936388855 + H2x2_1 ;
2466055   +   H2x2_2  =     0.31382645894355 + H2x2_2 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = 0.31382645894355 + H2x2_2 ;
2466056   +   H2x2_3  =     0.31718668306888 + H2x2_3 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = 0.31718668306888 + H2x2_3 ;
2466057   +   H2x2_4  =    -0.72340666209054 + H2x2_4 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = -0.72340666209054 + H2x2_4 ;
2466058   +   H2x2_5  =    -0.59585228872544 + H2x2_5 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = -0.59585228872544 + H2x2_5 ;
2466059   +   H2x2_6  =    -1.34027540207713 + H2x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = -1.34027540207713 + H2x2_6 ;
2466060   +   H2x2_7  = 0;
MPRINT(EM_DIAGRAM):   H2x2_7 = 0;
2466061   +   _MAX_ = MAX (H2x2_1 , H2x2_2 , H2x2_3 , H2x2_4 , H2x2_5 , H2x2_6 , H2x2_7
2466062   +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x2_1 , H2x2_2 , H2x2_3 , H2x2_4 , H2x2_5 , H2x2_6 ,
H2x2_7 );
2466063   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2466064   +   H2x2_1  = EXP(H2x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_1 = EXP(H2x2_1 - _MAX_);
2466065   +   _SUM_ = _SUM_ + H2x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_1 ;
2466066   +   H2x2_2  = EXP(H2x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_2 = EXP(H2x2_2 - _MAX_);
2466067   +   _SUM_ = _SUM_ + H2x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_2 ;
2466068   +   H2x2_3  = EXP(H2x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_3 = EXP(H2x2_3 - _MAX_);
2466069   +   _SUM_ = _SUM_ + H2x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_3 ;
2466070   +   H2x2_4  = EXP(H2x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_4 = EXP(H2x2_4 - _MAX_);
2466071   +   _SUM_ = _SUM_ + H2x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_4 ;
2466072   +   H2x2_5  = EXP(H2x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_5 = EXP(H2x2_5 - _MAX_);
2466073   +   _SUM_ = _SUM_ + H2x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_5 ;
2466074   +   H2x2_6  = EXP(H2x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_6 = EXP(H2x2_6 - _MAX_);
2466075   +   _SUM_ = _SUM_ + H2x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_6 ;
2466076   +   H2x2_7  = EXP(H2x2_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_7 = EXP(H2x2_7 - _MAX_);
2466077   +   _SUM_ = _SUM_ + H2x2_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_7 ;
2466078   +   H2x2_1  = H2x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 / _SUM_;
2466079   +   H2x2_2  = H2x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 / _SUM_;
2466080   +   H2x2_3  = H2x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 / _SUM_;
2466081   +   H2x2_4  = H2x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 / _SUM_;
2466082   +   H2x2_5  = H2x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 / _SUM_;
2466083   +   H2x2_6  = H2x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_6 = H2x2_6 / _SUM_;
2466084   +   H2x2_7  = H2x2_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_7 = H2x2_7 / _SUM_;
2466085   +END;
MPRINT(EM_DIAGRAM):   END;
2466086   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2466087   +   H2x2_1  = .;
MPRINT(EM_DIAGRAM):   H2x2_1 = .;
2466088   +   H2x2_2  = .;
MPRINT(EM_DIAGRAM):   H2x2_2 = .;
2466089   +   H2x2_3  = .;
MPRINT(EM_DIAGRAM):   H2x2_3 = .;
2466090   +   H2x2_4  = .;
MPRINT(EM_DIAGRAM):   H2x2_4 = .;
2466091   +   H2x2_5  = .;
MPRINT(EM_DIAGRAM):   H2x2_5 = .;
2466092   +   H2x2_6  = .;
MPRINT(EM_DIAGRAM):   H2x2_6 = .;
2466093   +   H2x2_7  = .;
MPRINT(EM_DIAGRAM):   H2x2_7 = .;
2466094   +END;
MPRINT(EM_DIAGRAM):   END;
2466095   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2466096   +*** Writing the Node H3x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H3x1_ ;
2466097   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2466098   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2466099   +   H3x1_1  =    -0.39436867680464 * H2x1_1  +    -0.20604911710368 * H2x1_2
2466100   +          +     0.29458107927185 * H2x1_3  +     0.66102662477481 * H2x1_4
2466101   +          +     0.62143406345506 * H2x1_5  +     2.63969484891539 * H2x1_6
2466102   +          +     2.03785323055294 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = -0.39436867680464 * H2x1_1 + -0.20604911710368 * H2x1_2 +
0.29458107927185 * H2x1_3 + 0.66102662477481 * H2x1_4 + 0.62143406345506 * H2x1_5 +
2.63969484891539 * H2x1_6 + 2.03785323055294 * H2x1_7 ;
2466103   +   H3x1_2  =     0.14668618790671 * H2x1_1  +     0.53251535375334 * H2x1_2
2466104   +          +     1.73802487245889 * H2x1_3  +    -0.48818058655944 * H2x1_4
2466105   +          +     -0.6987810213409 * H2x1_5  +     1.61216865707221 * H2x1_6
2466106   +          +     0.02086486846601 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = 0.14668618790671 * H2x1_1 + 0.53251535375334 * H2x1_2 +
1.73802487245889 * H2x1_3 + -0.48818058655944 * H2x1_4 + -0.6987810213409 * H2x1_5 +
1.61216865707221 * H2x1_6 + 0.02086486846601 * H2x1_7 ;
2466107   +   H3x1_3  =    -1.14054963328594 * H2x1_1  +    -0.75433574423253 * H2x1_2
2466108   +          +     0.06268113862558 * H2x1_3  +     -0.3981826777811 * H2x1_4
2466109   +          +    -0.04081627474016 * H2x1_5  +    -0.18547979458266 * H2x1_6
2466110   +          +     0.40248247309716 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = -1.14054963328594 * H2x1_1 + -0.75433574423253 * H2x1_2 +
0.06268113862558 * H2x1_3 + -0.3981826777811 * H2x1_4 + -0.04081627474016 * H2x1_5 +
-0.18547979458266 * H2x1_6 + 0.40248247309716 * H2x1_7 ;
2466111   +   H3x1_4  =    -0.41046431364634 * H2x1_1  +     0.53558649664528 * H2x1_2
2466112   +          +     0.25426413492282 * H2x1_3  +     2.32537388539524 * H2x1_4
2466113   +          +    -0.95624400041487 * H2x1_5  +     -2.1423043357326 * H2x1_6
2466114   +          +     0.70189203885946 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = -0.41046431364634 * H2x1_1 + 0.53558649664528 * H2x1_2 +
0.25426413492282 * H2x1_3 + 2.32537388539524 * H2x1_4 + -0.95624400041487 * H2x1_5 +
-2.1423043357326 * H2x1_6 + 0.70189203885946 * H2x1_7 ;
2466115   +   H3x1_5  =    -0.21139932639331 * H2x1_1  +      0.8853172209881 * H2x1_2
2466116   +          +    -0.23025284278478 * H2x1_3  +     1.30433450594503 * H2x1_4
2466117   +          +     1.26145590014333 * H2x1_5  +     0.63126627865104 * H2x1_6
2466118   +          +    -1.88455429451452 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = -0.21139932639331 * H2x1_1 + 0.8853172209881 * H2x1_2 +
-0.23025284278478 * H2x1_3 + 1.30433450594503 * H2x1_4 + 1.26145590014333 * H2x1_5 +
0.63126627865104 * H2x1_6 + -1.88455429451452 * H2x1_7 ;
2466119   +   H3x1_6  =     0.99645242104414 * H2x1_1  +    -0.17835964967148 * H2x1_2
2466120   +          +     0.06539648561603 * H2x1_3  +     0.97412284078325 * H2x1_4
2466121   +          +     -1.3247680635275 * H2x1_5  +      0.8723025918678 * H2x1_6
2466122   +          +    -0.04328836172134 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_6 = 0.99645242104414 * H2x1_1 + -0.17835964967148 * H2x1_2 +
0.06539648561603 * H2x1_3 + 0.97412284078325 * H2x1_4 + -1.3247680635275 * H2x1_5 +
0.8723025918678 * H2x1_6 + -0.04328836172134 * H2x1_7 ;
2466123   +   H3x1_7  =     2.66887548952929 * H2x1_1  +    -0.86289888310949 * H2x1_2
2466124   +          +     1.58137421487648 * H2x1_3  +    -1.37105839507635 * H2x1_4
2466125   +          +    -0.65069986041129 * H2x1_5  +     2.50322156288062 * H2x1_6
2466126   +          +     0.75157328436087 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_7 = 2.66887548952929 * H2x1_1 + -0.86289888310949 * H2x1_2 +
1.58137421487648 * H2x1_3 + -1.37105839507635 * H2x1_4 + -0.65069986041129 * H2x1_5 +
2.50322156288062 * H2x1_6 + 0.75157328436087 * H2x1_7 ;
2466127   +   H3x1_1  = H3x1_1  +     1.55317132694755 * H2x2_1
2466128   +          +     1.75656976582641 * H2x2_2  +    -1.25361089552085 * H2x2_3
2466129   +          +    -0.52984461837677 * H2x2_4  +     1.29915117873447 * H2x2_5
2466130   +          +    -1.03942372926622 * H2x2_6  +     0.13722887717178 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 + 1.55317132694755 * H2x2_1 + 1.75656976582641 * H2x2_2
+ -1.25361089552085 * H2x2_3 + -0.52984461837677 * H2x2_4 + 1.29915117873447 * H2x2_5 +
-1.03942372926622 * H2x2_6 + 0.13722887717178 * H2x2_7 ;
2466131   +   H3x1_2  = H3x1_2  +     0.88902418392614 * H2x2_1
2466132   +          +     1.35198205638356 * H2x2_2  +     1.49845421410078 * H2x2_3
2466133   +          +    -1.22318137674998 * H2x2_4  +     1.03485654068494 * H2x2_5
2466134   +          +    -0.88760495649169 * H2x2_6  +    -1.94135868960024 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = H3x1_2 + 0.88902418392614 * H2x2_1 + 1.35198205638356 * H2x2_2
+ 1.49845421410078 * H2x2_3 + -1.22318137674998 * H2x2_4 + 1.03485654068494 * H2x2_5 +
-0.88760495649169 * H2x2_6 + -1.94135868960024 * H2x2_7 ;
2466135   +   H3x1_3  = H3x1_3  +     -0.5232166311723 * H2x2_1
2466136   +          +    -0.49154441995792 * H2x2_2  +     1.21222773866672 * H2x2_3
2466137   +          +     0.88954765096374 * H2x2_4  +     0.32666743913318 * H2x2_5
2466138   +          +     1.26201705110892 * H2x2_6  +    -2.46564869578322 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = H3x1_3 + -0.5232166311723 * H2x2_1 + -0.49154441995792 * H2x2_2
+ 1.21222773866672 * H2x2_3 + 0.88954765096374 * H2x2_4 + 0.32666743913318 * H2x2_5 +
1.26201705110892 * H2x2_6 + -2.46564869578322 * H2x2_7 ;
2466139   +   H3x1_4  = H3x1_4  +     0.93897688204524 * H2x2_1
2466140   +          +    -0.56396325682963 * H2x2_2  +     0.60312223662348 * H2x2_3
2466141   +          +     0.05506195666559 * H2x2_4  +    -1.19478701476792 * H2x2_5
2466142   +          +     1.11111060864544 * H2x2_6  +     0.07602420470068 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = H3x1_4 + 0.93897688204524 * H2x2_1 + -0.56396325682963 * H2x2_2
+ 0.60312223662348 * H2x2_3 + 0.05506195666559 * H2x2_4 + -1.19478701476792 * H2x2_5 +
1.11111060864544 * H2x2_6 + 0.07602420470068 * H2x2_7 ;
2466143   +   H3x1_5  = H3x1_5  +    -2.04067007195299 * H2x2_1
2466144   +          +    -0.24511447740547 * H2x2_2  +      1.1403782608351 * H2x2_3
2466145   +          +     0.28313253531571 * H2x2_4  +    -0.31001305293935 * H2x2_5
2466146   +          +     1.43972694265244 * H2x2_6  +     0.27081966717726 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = H3x1_5 + -2.04067007195299 * H2x2_1 + -0.24511447740547 *
H2x2_2 + 1.1403782608351 * H2x2_3 + 0.28313253531571 * H2x2_4 + -0.31001305293935 * H2x2_5 +
1.43972694265244 * H2x2_6 + 0.27081966717726 * H2x2_7 ;
2466147   +   H3x1_6  = H3x1_6  +     1.53918759970091 * H2x2_1
2466148   +          +    -1.36834652818881 * H2x2_2  +    -0.97354088259421 * H2x2_3
2466149   +          +     0.73052173697294 * H2x2_4  +     1.34716412811946 * H2x2_5
2466150   +          +     1.66261041249676 * H2x2_6  +    -0.99719318696356 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_6 = H3x1_6 + 1.53918759970091 * H2x2_1 + -1.36834652818881 * H2x2_2
+ -0.97354088259421 * H2x2_3 + 0.73052173697294 * H2x2_4 + 1.34716412811946 * H2x2_5 +
1.66261041249676 * H2x2_6 + -0.99719318696356 * H2x2_7 ;
2466151   +   H3x1_7  = H3x1_7  +     1.11994694673604 * H2x2_1
2466152   +          +     -1.6803356528873 * H2x2_2  +    -0.12962793678977 * H2x2_3
2466153   +          +    -0.71896094589725 * H2x2_4  +     0.46037684620833 * H2x2_5
2466154   +          +     0.25911483872618 * H2x2_6  +     1.00876479730932 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_7 = H3x1_7 + 1.11994694673604 * H2x2_1 + -1.6803356528873 * H2x2_2
+ -0.12962793678977 * H2x2_3 + -0.71896094589725 * H2x2_4 + 0.46037684620833 * H2x2_5 +
0.25911483872618 * H2x2_6 + 1.00876479730932 * H2x2_7 ;
2466155   +   H3x1_1  =     1.52228889950912 + H3x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = 1.52228889950912 + H3x1_1 ;
2466156   +   H3x1_2  =    -0.46625781761332 + H3x1_2 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = -0.46625781761332 + H3x1_2 ;
2466157   +   H3x1_3  =     0.11008388635615 + H3x1_3 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = 0.11008388635615 + H3x1_3 ;
2466158   +   H3x1_4  =    -0.38333236869719 + H3x1_4 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = -0.38333236869719 + H3x1_4 ;
2466159   +   H3x1_5  =    -1.36620648378402 + H3x1_5 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = -1.36620648378402 + H3x1_5 ;
2466160   +   H3x1_6  =     0.41780608126276 + H3x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_6 = 0.41780608126276 + H3x1_6 ;
2466161   +   H3x1_7  =    -0.69490040783623 + H3x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_7 = -0.69490040783623 + H3x1_7 ;
2466162   +   H3x1_1  = SIN(H3x1_1 );
MPRINT(EM_DIAGRAM):   H3x1_1 = SIN(H3x1_1 );
2466163   +   H3x1_2  = SIN(H3x1_2 );
MPRINT(EM_DIAGRAM):   H3x1_2 = SIN(H3x1_2 );
2466164   +   H3x1_3  = SIN(H3x1_3 );
MPRINT(EM_DIAGRAM):   H3x1_3 = SIN(H3x1_3 );
2466165   +   H3x1_4  = SIN(H3x1_4 );
MPRINT(EM_DIAGRAM):   H3x1_4 = SIN(H3x1_4 );
2466166   +   H3x1_5  = SIN(H3x1_5 );
MPRINT(EM_DIAGRAM):   H3x1_5 = SIN(H3x1_5 );
2466167   +   H3x1_6  = SIN(H3x1_6 );
MPRINT(EM_DIAGRAM):   H3x1_6 = SIN(H3x1_6 );
2466168   +   H3x1_7  = SIN(H3x1_7 );
MPRINT(EM_DIAGRAM):   H3x1_7 = SIN(H3x1_7 );
2466169   +END;
MPRINT(EM_DIAGRAM):   END;
2466170   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2466171   +   H3x1_1  = .;
MPRINT(EM_DIAGRAM):   H3x1_1 = .;
2466172   +   H3x1_2  = .;
MPRINT(EM_DIAGRAM):   H3x1_2 = .;
2466173   +   H3x1_3  = .;
MPRINT(EM_DIAGRAM):   H3x1_3 = .;
2466174   +   H3x1_4  = .;
MPRINT(EM_DIAGRAM):   H3x1_4 = .;
2466175   +   H3x1_5  = .;
MPRINT(EM_DIAGRAM):   H3x1_5 = .;
2466176   +   H3x1_6  = .;
MPRINT(EM_DIAGRAM):   H3x1_6 = .;
2466177   +   H3x1_7  = .;
MPRINT(EM_DIAGRAM):   H3x1_7 = .;
2466178   +END;
MPRINT(EM_DIAGRAM):   END;
2466179   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2466180   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2466181   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2466182   +
2466183   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2466184   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2466185   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2466186   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2466187   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2466188   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2466189   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2466190   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2466191   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2466192   +end;
MPRINT(EM_DIAGRAM):   end;
2466193   +else do;
MPRINT(EM_DIAGRAM):   else do;
2466194   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2466195   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2466196   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2466197   +   end;
MPRINT(EM_DIAGRAM):   end;
2466198   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2466199   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2466200   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2466201   +   end;
MPRINT(EM_DIAGRAM):   end;
2466202   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2466203   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2466204   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2466205   +   end;
MPRINT(EM_DIAGRAM):   end;
2466206   +end;
MPRINT(EM_DIAGRAM):   end;
2466207   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2466208   +   P_DepVar1  =    -2.07102874283902 * H3x1_1  +     2.04799607124649 * H3x1_2
2466209   +          +    -0.05444449856749 * H3x1_3  +    -3.76440287030853 * H3x1_4
2466210   +          +    -0.62776678498994 * H3x1_5  +    -1.00383135301243 * H3x1_6
2466211   +          +     2.26027843968818 * H3x1_7 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.07102874283902 * H3x1_1 + 2.04799607124649 * H3x1_2 +
-0.05444449856749 * H3x1_3 + -3.76440287030853 * H3x1_4 + -0.62776678498994 * H3x1_5 +
-1.00383135301243 * H3x1_6 + 2.26027843968818 * H3x1_7 ;
2466212   +   P_DepVar1  =     0.51137297979162 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.51137297979162 + P_DepVar1 ;
2466213   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2466214   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2466215   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2466216   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2466217   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2466218   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2466219   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2466220   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2466221   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2466222   +END;
MPRINT(EM_DIAGRAM):   END;
2466223   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2466224   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2466225   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2466226   +END;
MPRINT(EM_DIAGRAM):   END;
2466227   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2466228   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2466229   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2466230   +END;
MPRINT(EM_DIAGRAM):   END;
2466231   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2466232   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2466233   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2466234   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2466235   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2466236   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2466237   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2466238   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2466239   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2466240   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2466241   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2466242   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2466243   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2466244   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2466245   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2466246   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2466247   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2466248   +END;
MPRINT(EM_DIAGRAM):   END;
2466249   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2466250   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2466251   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2466252   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2466253   +* Renaming variables for AutoNeural12;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural12;
2466254   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2466255   +* Renaming Posterior variables for AutoNeural12;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural12;
2466256   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2466257   +drop AutoNeural12_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_P_DepVar1;
2466258   +AutoNeural12_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural12_P_DepVar1 = P_DepVar1;
2466259   +drop AutoNeural12_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_P_DepVar0;
2466260   +AutoNeural12_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural12_P_DepVar0 = P_DepVar0;
2466261   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2466262   +* Renaming _WARN_ variable for AutoNeural12;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural12;
2466263   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2466264   +length AutoNeural12_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural12_WARN_ $4;
2466265   +drop AutoNeural12_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_WARN_;
2466266   +AutoNeural12_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural12_WARN_ = _WARN_;
2466267   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2466268   +* Ensmbl46: Scoring Code of model 4 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl46: Scoring Code of model 4 of 5;
2466269   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2466270   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2466271   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
2466272   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2466273   +* NODE: AutoNeural7;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural7;
2466274   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2466275   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2466276   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2466277   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2466278   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2466279   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2466280   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2466281   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2466282   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2466283   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2466284   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2466285   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2466286   +LENGTH _WARN_ $4
2466287   +      F_DepVar  $ 12
2466288   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2466289   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2466290   +
2466291   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2466292   +
2466293   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2466294   +
2466295   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2466296   +
2466297   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2466298   +
2466299   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2466300   +
2466301   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2466302   +
2466303   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2466304   +
2466305   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2466306   +
2466307   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2466308   +
2466309   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2466310   +
2466311   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2466312   +
2466313   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2466314   +
2466315   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2466316   +
2466317   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2466318   +
2466319   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2466320   +
2466321   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2466322   +
2466323   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2466324   +
2466325   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2466326   +
2466327   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2466328   +
2466329   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2466330   +
2466331   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2466332   +
2466333   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2466334   +
2466335   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2466336   +
2466337   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2466338   +
2466339   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2466340   +
2466341   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2466342   +
2466343   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2466344   +
2466345   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2466346   +
2466347   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2466348   +
2466349   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2466350   +
2466351   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2466352   +
2466353   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2466354   +
2466355   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2466356   +
2466357   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2466358   +
2466359   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2466360   +
2466361   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2466362   +
2466363   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2466364   +
2466365   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2466366   +
2466367   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2466368   +
2466369   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2466370   +
2466371   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2466372   +
2466373   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2466374   +
2466375   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2466376   +
2466377   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2466378   +
2466379   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2466380   +
2466381   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2466382   +
2466383   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2466384   +
2466385   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2466386   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2466387   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2466388   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2466389   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2466390   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2466391   +end;
MPRINT(EM_DIAGRAM):   end;
2466392   +else do;
MPRINT(EM_DIAGRAM):   else do;
2466393   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2466394   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2466395   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2466396   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2466397   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2466398   +   end;
MPRINT(EM_DIAGRAM):   end;
2466399   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2466400   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2466401   +   end;
MPRINT(EM_DIAGRAM):   end;
2466402   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2466403   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2466404   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2466405   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2466406   +   end;
MPRINT(EM_DIAGRAM):   end;
2466407   +end;
MPRINT(EM_DIAGRAM):   end;
2466408   +
2466409   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2466410   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2466411   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2466412   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2466413   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2466414   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2466415   +end;
MPRINT(EM_DIAGRAM):   end;
2466416   +else do;
MPRINT(EM_DIAGRAM):   else do;
2466417   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2466418   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2466419   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2466420   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2466421   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2466422   +   end;
MPRINT(EM_DIAGRAM):   end;
2466423   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2466424   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2466425   +   end;
MPRINT(EM_DIAGRAM):   end;
2466426   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2466427   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2466428   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2466429   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2466430   +   end;
MPRINT(EM_DIAGRAM):   end;
2466431   +end;
MPRINT(EM_DIAGRAM):   end;
2466432   +
2466433   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2466434   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2466435   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2466436   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2466437   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2466438   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2466439   +end;
MPRINT(EM_DIAGRAM):   end;
2466440   +else do;
MPRINT(EM_DIAGRAM):   else do;
2466441   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2466442   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2466443   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2466444   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2466445   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2466446   +   end;
MPRINT(EM_DIAGRAM):   end;
2466447   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2466448   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2466449   +   end;
MPRINT(EM_DIAGRAM):   end;
2466450   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2466451   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2466452   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2466453   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2466454   +   end;
MPRINT(EM_DIAGRAM):   end;
2466455   +end;
MPRINT(EM_DIAGRAM):   end;
2466456   +
2466457   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2466458   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2466459   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2466460   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2466461   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2466462   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2466463   +end;
MPRINT(EM_DIAGRAM):   end;
2466464   +else do;
MPRINT(EM_DIAGRAM):   else do;
2466465   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2466466   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2466467   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2466468   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2466469   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2466470   +   end;
MPRINT(EM_DIAGRAM):   end;
2466471   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2466472   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2466473   +   end;
MPRINT(EM_DIAGRAM):   end;
2466474   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2466475   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2466476   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2466477   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2466478   +   end;
MPRINT(EM_DIAGRAM):   end;
2466479   +end;
MPRINT(EM_DIAGRAM):   end;
2466480   +
2466481   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2466482   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2466483   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2466484   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2466485   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2466486   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2466487   +end;
MPRINT(EM_DIAGRAM):   end;
2466488   +else do;
MPRINT(EM_DIAGRAM):   else do;
2466489   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2466490   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2466491   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2466492   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2466493   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2466494   +   end;
MPRINT(EM_DIAGRAM):   end;
2466495   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2466496   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2466497   +   end;
MPRINT(EM_DIAGRAM):   end;
2466498   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2466499   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2466500   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2466501   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2466502   +   end;
MPRINT(EM_DIAGRAM):   end;
2466503   +end;
MPRINT(EM_DIAGRAM):   end;
2466504   +
2466505   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2466506   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2466507   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2466508   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2466509   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2466510   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2466511   +end;
MPRINT(EM_DIAGRAM):   end;
2466512   +else do;
MPRINT(EM_DIAGRAM):   else do;
2466513   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2466514   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2466515   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2466516   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2466517   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2466518   +   end;
MPRINT(EM_DIAGRAM):   end;
2466519   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2466520   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2466521   +   end;
MPRINT(EM_DIAGRAM):   end;
2466522   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2466523   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2466524   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2466525   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2466526   +   end;
MPRINT(EM_DIAGRAM):   end;
2466527   +end;
MPRINT(EM_DIAGRAM):   end;
2466528   +
2466529   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2466530   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2466531   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2466532   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2466533   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2466534   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2466535   +end;
MPRINT(EM_DIAGRAM):   end;
2466536   +else do;
MPRINT(EM_DIAGRAM):   else do;
2466537   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2466538   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2466539   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2466540   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2466541   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2466542   +   end;
MPRINT(EM_DIAGRAM):   end;
2466543   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2466544   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2466545   +   end;
MPRINT(EM_DIAGRAM):   end;
2466546   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2466547   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2466548   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2466549   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2466550   +   end;
MPRINT(EM_DIAGRAM):   end;
2466551   +end;
MPRINT(EM_DIAGRAM):   end;
2466552   +
2466553   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2466554   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
2466555   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2466556   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2466557   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2466558   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2466559   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2466560   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2466561   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2466562   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2466563   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2466564   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2466565   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2466566   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2466567   +end;
MPRINT(EM_DIAGRAM):   end;
2466568   +else do;
MPRINT(EM_DIAGRAM):   else do;
2466569   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2466570   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2466571   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2466572   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2466573   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2466574   +   end;
MPRINT(EM_DIAGRAM):   end;
2466575   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2466576   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2466577   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2466578   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2466579   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2466580   +   end;
MPRINT(EM_DIAGRAM):   end;
2466581   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2466582   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2466583   +   end;
MPRINT(EM_DIAGRAM):   end;
2466584   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2466585   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2466586   +   end;
MPRINT(EM_DIAGRAM):   end;
2466587   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2466588   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2466589   +   end;
MPRINT(EM_DIAGRAM):   end;
2466590   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2466591   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2466592   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2466593   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2466594   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2466595   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2466596   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2466597   +   end;
MPRINT(EM_DIAGRAM):   end;
2466598   +end;
MPRINT(EM_DIAGRAM):   end;
2466599   +
2466600   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2466601   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2466602   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
2466603   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2466604   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2466605   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2466606   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2466607   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2466608   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2466609   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2466610   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2466611   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2466612   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2466613   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2466614   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2466615   +end;
MPRINT(EM_DIAGRAM):   end;
2466616   +else do;
MPRINT(EM_DIAGRAM):   else do;
2466617   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2466618   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2466619   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2466620   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2466621   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2466622   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2466623   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2466624   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2466625   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2466626   +         end;
MPRINT(EM_DIAGRAM):   end;
2466627   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2466628   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2466629   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2466630   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2466631   +            end;
MPRINT(EM_DIAGRAM):   end;
2466632   +         end;
MPRINT(EM_DIAGRAM):   end;
2466633   +      end;
MPRINT(EM_DIAGRAM):   end;
2466634   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2466635   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2466636   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2466637   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2466638   +         end;
MPRINT(EM_DIAGRAM):   end;
2466639   +      end;
MPRINT(EM_DIAGRAM):   end;
2466640   +   end;
MPRINT(EM_DIAGRAM):   end;
2466641   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2466642   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2466643   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2466644   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2466645   +      end;
MPRINT(EM_DIAGRAM):   end;
2466646   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2466647   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2466648   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2466649   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2466650   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2466651   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2466652   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2466653   +         end;
MPRINT(EM_DIAGRAM):   end;
2466654   +      end;
MPRINT(EM_DIAGRAM):   end;
2466655   +   end;
MPRINT(EM_DIAGRAM):   end;
2466656   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2466657   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2466658   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2466659   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2466660   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2466661   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2466662   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2466663   +   end;
MPRINT(EM_DIAGRAM):   end;
2466664   +end;
MPRINT(EM_DIAGRAM):   end;
2466665   +
2466666   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2466667   +*** Checking missing input Interval
2466668   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2466669   +
2466670   +IF NMISS(
2466671   +   AcceptedCmpTotal ,
2466672   +   Age ,
2466673   +   Frq ,
2466674   +   Income ,
2466675   +   Kidhome ,
2466676   +   Mnt ,
2466677   +   MntFishProducts ,
2466678   +   MntFruits ,
2466679   +   MntGoldProds ,
2466680   +   MntMeatProducts ,
2466681   +   MntSweetProducts ,
2466682   +   MntWines ,
2466683   +   MonthsAsCustomer ,
2466684   +   NumCatalogPurchases ,
2466685   +   NumDealsPurchases ,
2466686   +   NumDistPurchases ,
2466687   +   NumStorePurchases ,
2466688   +   NumWebPurchases ,
2466689   +   NumWebVisitsMonth ,
2466690   +   RFMstat ,
2466691   +   RMntFrq ,
2466692   +   Recency ,
2466693   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
2466694   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2466695   +
2466696   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2466697   +END;
MPRINT(EM_DIAGRAM):   END;
2466698   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2466699   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2466700   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2466701   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2466702   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2466703   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2466704   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2466705   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2466706   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2466707   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2466708   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2466709   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2466710   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2466711   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2466712   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2466713   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2466714   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2466715   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2466716   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2466717   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2466718   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2466719   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2466720   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 *
MonthsAsCustomer ;
2466721   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2466722   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2466723   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2466724   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2466725   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2466726   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2466727   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2466728   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2466729   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2466730   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2466731   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2466732   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2466733   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2466734   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2466735   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2466736   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2466737   +END;
MPRINT(EM_DIAGRAM):   END;
2466738   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2466739   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2466740   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2466741   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2466742   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2466743   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2466744   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2466745   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2466746   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2466747   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2466748   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2466749   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2466750   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2466751   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2466752   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2466753   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2466754   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2466755   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2466756   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2466757   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2466758   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2466759   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2466760   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
2466761   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2466762   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2466763   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2466764   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2466765   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2466766   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2466767   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2466768   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2466769   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2466770   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2466771   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 *
MonthsAsCustomer ;
2466772   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2466773   +   ELSE S_NumCatalogPurchases
2466774   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2466775   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2466776   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2466777   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2466778   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2466779   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2466780   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2466781   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2466782   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2466783   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2466784   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2466785   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2466786   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2466787   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2466788   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2466789   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2466790   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2466791   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2466792   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2466793   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2466794   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2466795   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2466796   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2466797   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2466798   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2466799   +END;
MPRINT(EM_DIAGRAM):   END;
2466800   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2466801   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2466802   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2466803   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2466804   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2466805   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2466806   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2466807   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2466808   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2466809   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2466810   +   H1x1_1  =     0.27051750628107 * S_AcceptedCmpTotal
2466811   +          +    -0.01552488999587 * S_Age  +    -0.19918933236131 * S_Frq
2466812   +          +    -0.18053367989037 * S_Income  +     0.17934470816975 *
2466813   +        S_Kidhome  +    -0.27914859130186 * S_Mnt  +    -0.05331142159606 *
2466814   +        S_MntFishProducts  +    -0.03730503814111 * S_MntFruits
2466815   +          +     0.01217897476566 * S_MntGoldProds  +       0.241005967683 *
2466816   +        S_MntMeatProducts  +    -0.02873172523867 * S_MntSweetProducts
2466817   +          +    -0.35773732926132 * S_MntWines  +    -0.00800625524539 *
2466818   +        S_MonthsAsCustomer  +     0.14253720708201 * S_NumCatalogPurchases
2466819   +          +     0.09634439105648 * S_NumDealsPurchases
2466820   +          +     -0.2727389064287 * S_NumDistPurchases
2466821   +          +    -0.14179871978162 * S_NumStorePurchases
2466822   +          +     0.11008049559527 * S_NumWebPurchases
2466823   +          +    -0.16791463027749 * S_NumWebVisitsMonth
2466824   +          +     0.12827091331546 * S_RFMstat  +    -0.05819422771336 *
2466825   +        S_RMntFrq  +     0.17192522504917 * S_Recency
2466826   +          +     0.13379709932247 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.27051750628107 * S_AcceptedCmpTotal + -0.01552488999587 *
S_Age + -0.19918933236131 * S_Frq + -0.18053367989037 * S_Income + 0.17934470816975 *
S_Kidhome + -0.27914859130186 * S_Mnt + -0.05331142159606 * S_MntFishProducts +
-0.03730503814111 * S_MntFruits + 0.01217897476566 * S_MntGoldProds + 0.241005967683 *
S_MntMeatProducts + -0.02873172523867 * S_MntSweetProducts + -0.35773732926132 * S_MntWines +
-0.00800625524539 * S_MonthsAsCustomer + 0.14253720708201 * S_NumCatalogPurchases +
0.09634439105648 * S_NumDealsPurchases + -0.2727389064287 * S_NumDistPurchases +
-0.14179871978162 * S_NumStorePurchases + 0.11008049559527 * S_NumWebPurchases +
-0.16791463027749 * S_NumWebVisitsMonth + 0.12827091331546 * S_RFMstat + -0.05819422771336 *
S_RMntFrq + 0.17192522504917 * S_Recency + 0.13379709932247 * S_Teenhome ;
2466827   +   H1x1_2  =      0.2625003002792 * S_AcceptedCmpTotal
2466828   +          +    -0.00409648963127 * S_Age  +    -0.08422560024107 * S_Frq
2466829   +          +      0.1678148652095 * S_Income  +      -0.122580580609 *
2466830   +        S_Kidhome  +    -0.41368311141801 * S_Mnt  +     -0.0649787838725 *
2466831   +        S_MntFishProducts  +    -0.06363287766971 * S_MntFruits
2466832   +          +     0.00810850196464 * S_MntGoldProds  +      0.2984971941271 *
2466833   +        S_MntMeatProducts  +     -0.0651075315757 * S_MntSweetProducts
2466834   +          +    -0.42717799596572 * S_MntWines  +    -0.00945771129633 *
2466835   +        S_MonthsAsCustomer  +     0.33346839008681 * S_NumCatalogPurchases
2466836   +          +     0.15835936877168 * S_NumDealsPurchases
2466837   +          +     0.04229992769587 * S_NumDistPurchases
2466838   +          +    -0.04051362547639 * S_NumStorePurchases
2466839   +          +    -0.01791546488406 * S_NumWebPurchases
2466840   +          +     0.28833008597045 * S_NumWebVisitsMonth
2466841   +          +     0.08007709098478 * S_RFMstat  +     0.37677948418886 *
2466842   +        S_RMntFrq  +    -0.32542265112765 * S_Recency
2466843   +          +    -0.10763248273834 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.2625003002792 * S_AcceptedCmpTotal + -0.00409648963127 *
S_Age + -0.08422560024107 * S_Frq + 0.1678148652095 * S_Income + -0.122580580609 * S_Kidhome +
-0.41368311141801 * S_Mnt + -0.0649787838725 * S_MntFishProducts + -0.06363287766971 *
S_MntFruits + 0.00810850196464 * S_MntGoldProds + 0.2984971941271 * S_MntMeatProducts +
-0.0651075315757 * S_MntSweetProducts + -0.42717799596572 * S_MntWines + -0.00945771129633 *
S_MonthsAsCustomer + 0.33346839008681 * S_NumCatalogPurchases + 0.15835936877168 *
S_NumDealsPurchases + 0.04229992769587 * S_NumDistPurchases + -0.04051362547639 *
S_NumStorePurchases + -0.01791546488406 * S_NumWebPurchases + 0.28833008597045 *
S_NumWebVisitsMonth + 0.08007709098478 * S_RFMstat + 0.37677948418886 * S_RMntFrq +
-0.32542265112765 * S_Recency + -0.10763248273834 * S_Teenhome ;
2466844   +   H1x1_1  = H1x1_1  +     0.17927888078386 * AcceptedCmp10
2466845   +          +       0.309097592234 * AcceptedCmp20  +     0.30005706470617 *
2466846   +        AcceptedCmp30  +     0.30534843193785 * AcceptedCmp40
2466847   +          +     0.19575142296602 * AcceptedCmp50  +    -0.26930325741881 *
2466848   +        Complain0  +    -0.07193220591551 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.17927888078386 * AcceptedCmp10 + 0.309097592234 *
AcceptedCmp20 + 0.30005706470617 * AcceptedCmp30 + 0.30534843193785 * AcceptedCmp40 +
0.19575142296602 * AcceptedCmp50 + -0.26930325741881 * Complain0 + -0.07193220591551 *
HigherEducationBinary0 ;
2466849   +   H1x1_2  = H1x1_2  +     0.01282806481889 * AcceptedCmp10
2466850   +          +     0.01542710847454 * AcceptedCmp20  +     0.03576476827309 *
2466851   +        AcceptedCmp30  +     0.04230610697529 * AcceptedCmp40
2466852   +          +     0.03405078302469 * AcceptedCmp50  +     0.13002166919554 *
2466853   +        Complain0  +    -0.08203696285033 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.01282806481889 * AcceptedCmp10 + 0.01542710847454 *
AcceptedCmp20 + 0.03576476827309 * AcceptedCmp30 + 0.04230610697529 * AcceptedCmp40 +
0.03405078302469 * AcceptedCmp50 + 0.13002166919554 * Complain0 + -0.08203696285033 *
HigherEducationBinary0 ;
2466854   +   H1x1_1  = H1x1_1  +    -0.04471063478028 * Education2n_Cycle
2466855   +          +     0.15571809437849 * EducationBasic  +    -0.00113978624206 *
2466856   +        EducationGraduation  +     0.00750750981266 * EducationMaster
2466857   +          +     -0.0504367274898 * Marital_StatusDivorced
2466858   +          +     0.28345714390306 * Marital_StatusMarried
2466859   +          +     -0.2012923780435 * Marital_StatusSingle
2466860   +          +     0.20022167903492 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.04471063478028 * Education2n_Cycle +
0.15571809437849 * EducationBasic + -0.00113978624206 * EducationGraduation + 0.00750750981266
* EducationMaster + -0.0504367274898 * Marital_StatusDivorced + 0.28345714390306 *
Marital_StatusMarried + -0.2012923780435 * Marital_StatusSingle + 0.20022167903492 *
Marital_StatusTogether ;
2466861   +   H1x1_2  = H1x1_2  +     0.12691361812265 * Education2n_Cycle
2466862   +          +       0.003205191831 * EducationBasic  +    -0.04323354449955 *
2466863   +        EducationGraduation  +    -0.06699429239126 * EducationMaster
2466864   +          +     0.06828937261262 * Marital_StatusDivorced
2466865   +          +     -0.1520862543536 * Marital_StatusMarried
2466866   +          +      0.1392808464716 * Marital_StatusSingle
2466867   +          +    -0.12406922875482 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.12691361812265 * Education2n_Cycle + 0.003205191831
* EducationBasic + -0.04323354449955 * EducationGraduation + -0.06699429239126 *
EducationMaster + 0.06828937261262 * Marital_StatusDivorced + -0.1520862543536 *
Marital_StatusMarried + 0.1392808464716 * Marital_StatusSingle + -0.12406922875482 *
Marital_StatusTogether ;
2466868   +   H1x1_1  =     0.89722634972069 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.89722634972069 + H1x1_1 ;
2466869   +   H1x1_2  =     -0.5979471913364 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.5979471913364 + H1x1_2 ;
2466870   +   H1x1_1  = SIN(H1x1_1 );
MPRINT(EM_DIAGRAM):   H1x1_1 = SIN(H1x1_1 );
2466871   +   H1x1_2  = SIN(H1x1_2 );
MPRINT(EM_DIAGRAM):   H1x1_2 = SIN(H1x1_2 );
2466872   +END;
MPRINT(EM_DIAGRAM):   END;
2466873   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2466874   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2466875   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2466876   +END;
MPRINT(EM_DIAGRAM):   END;
2466877   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2466878   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2466879   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2466880   +
2466881   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2466882   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2466883   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2466884   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2466885   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2466886   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2466887   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2466888   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2466889   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2466890   +end;
MPRINT(EM_DIAGRAM):   end;
2466891   +else do;
MPRINT(EM_DIAGRAM):   else do;
2466892   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2466893   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2466894   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2466895   +   end;
MPRINT(EM_DIAGRAM):   end;
2466896   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2466897   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2466898   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2466899   +   end;
MPRINT(EM_DIAGRAM):   end;
2466900   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2466901   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2466902   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2466903   +   end;
MPRINT(EM_DIAGRAM):   end;
2466904   +end;
MPRINT(EM_DIAGRAM):   end;
2466905   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2466906   +   P_DepVar1  =     -11.533020189097 * H1x1_1  +     17.2320065402955 * H1x1_2
2466907   +         ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -11.533020189097 * H1x1_1 + 17.2320065402955 * H1x1_2 ;
2466908   +   P_DepVar1  =     2.37722840752042 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.37722840752042 + P_DepVar1 ;
2466909   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2466910   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2466911   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2466912   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2466913   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2466914   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2466915   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2466916   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2466917   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2466918   +END;
MPRINT(EM_DIAGRAM):   END;
2466919   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2466920   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2466921   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2466922   +END;
MPRINT(EM_DIAGRAM):   END;
2466923   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2466924   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2466925   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2466926   +END;
MPRINT(EM_DIAGRAM):   END;
2466927   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2466928   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2466929   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2466930   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2466931   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2466932   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2466933   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2466934   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2466935   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2466936   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2466937   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2466938   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2466939   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2466940   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2466941   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2466942   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2466943   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2466944   +END;
MPRINT(EM_DIAGRAM):   END;
2466945   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2466946   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2466947   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2466948   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2466949   +* Renaming variables for AutoNeural7;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural7;
2466950   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2466951   +* Renaming Posterior variables for AutoNeural7;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural7;
2466952   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2466953   +drop AutoNeural7_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural7_P_DepVar1;
2466954   +AutoNeural7_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural7_P_DepVar1 = P_DepVar1;
2466955   +drop AutoNeural7_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural7_P_DepVar0;
2466956   +AutoNeural7_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural7_P_DepVar0 = P_DepVar0;
2466957   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2466958   +* Renaming _WARN_ variable for AutoNeural7;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural7;
2466959   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2466960   +length AutoNeural7_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural7_WARN_ $4;
2466961   +drop AutoNeural7_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural7_WARN_;
2466962   +AutoNeural7_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural7_WARN_ = _WARN_;
2466963   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2466964   +* Ensmbl46: Scoring Code of model 5 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl46: Scoring Code of model 5 of 5;
2466965   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2466966   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2466967   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
2466968   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2466969   +* NODE: AutoNeural10;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural10;
2466970   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2466971   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2466972   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2466973   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2466974   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2466975   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2466976   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2466977   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2466978   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2466979   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2466980   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2466981   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2466982   +LENGTH _WARN_ $4
2466983   +      F_DepVar  $ 12
2466984   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2466985   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2466986   +
2466987   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2466988   +
2466989   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2466990   +
2466991   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2466992   +
2466993   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2466994   +
2466995   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2466996   +
2466997   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2466998   +
2466999   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2467000   +
2467001   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2467002   +
2467003   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2467004   +
2467005   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2467006   +
2467007   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2467008   +
2467009   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2467010   +
2467011   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2467012   +
2467013   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2467014   +
2467015   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2467016   +
2467017   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2467018   +
2467019   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2467020   +
2467021   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2467022   +
2467023   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2467024   +
2467025   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2467026   +
2467027   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2467028   +
2467029   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2467030   +
2467031   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2467032   +
2467033   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2467034   +
2467035   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2467036   +
2467037   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2467038   +
2467039   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2467040   +
2467041   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2467042   +
2467043   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2467044   +
2467045   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2467046   +
2467047   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2467048   +
2467049   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2467050   +
2467051   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2467052   +
2467053   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2467054   +
2467055   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2467056   +
2467057   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2467058   +
2467059   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2467060   +
2467061   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2467062   +
2467063   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2467064   +
2467065   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2467066   +
2467067   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2467068   +
2467069   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
2467070   +
2467071   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
2467072   +
2467073   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
2467074   +
2467075   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
2467076   +
2467077   +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
2467078   +
2467079   +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
2467080   +
2467081   +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
2467082   +
2467083   +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
2467084   +
2467085   +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
2467086   +
2467087   +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
2467088   +
2467089   +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
2467090   +
2467091   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2467092   +
2467093   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2467094   +
2467095   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2467096   +
2467097   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2467098   +
2467099   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2467100   +
2467101   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2467102   +
2467103   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2467104   +
2467105   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2467106   +
2467107   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2467108   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2467109   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2467110   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2467111   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2467112   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2467113   +end;
MPRINT(EM_DIAGRAM):   end;
2467114   +else do;
MPRINT(EM_DIAGRAM):   else do;
2467115   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2467116   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2467117   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2467118   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2467119   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2467120   +   end;
MPRINT(EM_DIAGRAM):   end;
2467121   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2467122   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2467123   +   end;
MPRINT(EM_DIAGRAM):   end;
2467124   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2467125   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2467126   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2467127   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2467128   +   end;
MPRINT(EM_DIAGRAM):   end;
2467129   +end;
MPRINT(EM_DIAGRAM):   end;
2467130   +
2467131   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2467132   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2467133   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2467134   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2467135   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2467136   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2467137   +end;
MPRINT(EM_DIAGRAM):   end;
2467138   +else do;
MPRINT(EM_DIAGRAM):   else do;
2467139   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2467140   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2467141   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2467142   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2467143   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2467144   +   end;
MPRINT(EM_DIAGRAM):   end;
2467145   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2467146   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2467147   +   end;
MPRINT(EM_DIAGRAM):   end;
2467148   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2467149   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2467150   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2467151   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2467152   +   end;
MPRINT(EM_DIAGRAM):   end;
2467153   +end;
MPRINT(EM_DIAGRAM):   end;
2467154   +
2467155   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2467156   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2467157   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2467158   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2467159   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2467160   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2467161   +end;
MPRINT(EM_DIAGRAM):   end;
2467162   +else do;
MPRINT(EM_DIAGRAM):   else do;
2467163   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2467164   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2467165   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2467166   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2467167   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2467168   +   end;
MPRINT(EM_DIAGRAM):   end;
2467169   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2467170   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2467171   +   end;
MPRINT(EM_DIAGRAM):   end;
2467172   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2467173   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2467174   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2467175   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2467176   +   end;
MPRINT(EM_DIAGRAM):   end;
2467177   +end;
MPRINT(EM_DIAGRAM):   end;
2467178   +
2467179   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2467180   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2467181   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2467182   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2467183   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2467184   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2467185   +end;
MPRINT(EM_DIAGRAM):   end;
2467186   +else do;
MPRINT(EM_DIAGRAM):   else do;
2467187   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2467188   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2467189   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2467190   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2467191   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2467192   +   end;
MPRINT(EM_DIAGRAM):   end;
2467193   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2467194   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2467195   +   end;
MPRINT(EM_DIAGRAM):   end;
2467196   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2467197   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2467198   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2467199   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2467200   +   end;
MPRINT(EM_DIAGRAM):   end;
2467201   +end;
MPRINT(EM_DIAGRAM):   end;
2467202   +
2467203   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2467204   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2467205   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2467206   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2467207   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2467208   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2467209   +end;
MPRINT(EM_DIAGRAM):   end;
2467210   +else do;
MPRINT(EM_DIAGRAM):   else do;
2467211   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2467212   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2467213   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2467214   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2467215   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2467216   +   end;
MPRINT(EM_DIAGRAM):   end;
2467217   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2467218   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2467219   +   end;
MPRINT(EM_DIAGRAM):   end;
2467220   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2467221   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2467222   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2467223   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2467224   +   end;
MPRINT(EM_DIAGRAM):   end;
2467225   +end;
MPRINT(EM_DIAGRAM):   end;
2467226   +
2467227   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2467228   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2467229   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2467230   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2467231   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2467232   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2467233   +end;
MPRINT(EM_DIAGRAM):   end;
2467234   +else do;
MPRINT(EM_DIAGRAM):   else do;
2467235   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2467236   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2467237   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2467238   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2467239   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2467240   +   end;
MPRINT(EM_DIAGRAM):   end;
2467241   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2467242   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2467243   +   end;
MPRINT(EM_DIAGRAM):   end;
2467244   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2467245   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2467246   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2467247   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2467248   +   end;
MPRINT(EM_DIAGRAM):   end;
2467249   +end;
MPRINT(EM_DIAGRAM):   end;
2467250   +
2467251   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2467252   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2467253   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2467254   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2467255   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2467256   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2467257   +end;
MPRINT(EM_DIAGRAM):   end;
2467258   +else do;
MPRINT(EM_DIAGRAM):   else do;
2467259   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2467260   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2467261   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2467262   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2467263   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2467264   +   end;
MPRINT(EM_DIAGRAM):   end;
2467265   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2467266   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2467267   +   end;
MPRINT(EM_DIAGRAM):   end;
2467268   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2467269   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2467270   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2467271   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2467272   +   end;
MPRINT(EM_DIAGRAM):   end;
2467273   +end;
MPRINT(EM_DIAGRAM):   end;
2467274   +
2467275   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2467276   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
2467277   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2467278   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2467279   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2467280   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2467281   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2467282   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2467283   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2467284   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2467285   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2467286   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2467287   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2467288   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2467289   +end;
MPRINT(EM_DIAGRAM):   end;
2467290   +else do;
MPRINT(EM_DIAGRAM):   else do;
2467291   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2467292   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2467293   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2467294   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2467295   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2467296   +   end;
MPRINT(EM_DIAGRAM):   end;
2467297   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2467298   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2467299   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2467300   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2467301   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2467302   +   end;
MPRINT(EM_DIAGRAM):   end;
2467303   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2467304   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2467305   +   end;
MPRINT(EM_DIAGRAM):   end;
2467306   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2467307   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2467308   +   end;
MPRINT(EM_DIAGRAM):   end;
2467309   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2467310   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2467311   +   end;
MPRINT(EM_DIAGRAM):   end;
2467312   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2467313   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2467314   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2467315   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2467316   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2467317   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2467318   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2467319   +   end;
MPRINT(EM_DIAGRAM):   end;
2467320   +end;
MPRINT(EM_DIAGRAM):   end;
2467321   +
2467322   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2467323   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2467324   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
2467325   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2467326   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2467327   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2467328   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2467329   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2467330   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2467331   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2467332   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2467333   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2467334   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2467335   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2467336   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2467337   +end;
MPRINT(EM_DIAGRAM):   end;
2467338   +else do;
MPRINT(EM_DIAGRAM):   else do;
2467339   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2467340   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2467341   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2467342   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2467343   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2467344   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2467345   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2467346   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2467347   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2467348   +         end;
MPRINT(EM_DIAGRAM):   end;
2467349   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2467350   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2467351   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2467352   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2467353   +            end;
MPRINT(EM_DIAGRAM):   end;
2467354   +         end;
MPRINT(EM_DIAGRAM):   end;
2467355   +      end;
MPRINT(EM_DIAGRAM):   end;
2467356   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2467357   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2467358   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2467359   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2467360   +         end;
MPRINT(EM_DIAGRAM):   end;
2467361   +      end;
MPRINT(EM_DIAGRAM):   end;
2467362   +   end;
MPRINT(EM_DIAGRAM):   end;
2467363   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2467364   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2467365   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2467366   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2467367   +      end;
MPRINT(EM_DIAGRAM):   end;
2467368   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2467369   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2467370   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2467371   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2467372   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2467373   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2467374   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2467375   +         end;
MPRINT(EM_DIAGRAM):   end;
2467376   +      end;
MPRINT(EM_DIAGRAM):   end;
2467377   +   end;
MPRINT(EM_DIAGRAM):   end;
2467378   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2467379   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2467380   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2467381   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2467382   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2467383   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2467384   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2467385   +   end;
MPRINT(EM_DIAGRAM):   end;
2467386   +end;
MPRINT(EM_DIAGRAM):   end;
2467387   +
2467388   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2467389   +*** Checking missing input Interval
2467390   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2467391   +
2467392   +IF NMISS(
2467393   +   AcceptedCmpTotal ,
2467394   +   Age ,
2467395   +   Frq ,
2467396   +   Income ,
2467397   +   Kidhome ,
2467398   +   Mnt ,
2467399   +   MntFishProducts ,
2467400   +   MntFruits ,
2467401   +   MntGoldProds ,
2467402   +   MntMeatProducts ,
2467403   +   MntSweetProducts ,
2467404   +   MntWines ,
2467405   +   MonthsAsCustomer ,
2467406   +   NumCatalogPurchases ,
2467407   +   NumDealsPurchases ,
2467408   +   NumDistPurchases ,
2467409   +   NumStorePurchases ,
2467410   +   NumWebPurchases ,
2467411   +   NumWebVisitsMonth ,
2467412   +   RFMstat ,
2467413   +   RMntFrq ,
2467414   +   Recency ,
2467415   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
2467416   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2467417   +
2467418   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2467419   +END;
MPRINT(EM_DIAGRAM):   END;
2467420   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2467421   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2467422   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2467423   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2467424   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2467425   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2467426   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2467427   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2467428   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2467429   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2467430   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2467431   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2467432   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2467433   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2467434   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2467435   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2467436   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2467437   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2467438   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2467439   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2467440   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2467441   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2467442   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 *
MonthsAsCustomer ;
2467443   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2467444   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2467445   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2467446   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2467447   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2467448   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2467449   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2467450   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2467451   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2467452   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2467453   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2467454   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2467455   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2467456   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2467457   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2467458   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2467459   +END;
MPRINT(EM_DIAGRAM):   END;
2467460   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2467461   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2467462   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2467463   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2467464   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2467465   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2467466   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2467467   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2467468   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2467469   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2467470   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2467471   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2467472   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2467473   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2467474   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2467475   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2467476   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2467477   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2467478   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2467479   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2467480   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2467481   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2467482   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
2467483   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2467484   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2467485   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2467486   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2467487   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2467488   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2467489   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2467490   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2467491   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2467492   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2467493   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 *
MonthsAsCustomer ;
2467494   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2467495   +   ELSE S_NumCatalogPurchases
2467496   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2467497   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2467498   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2467499   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2467500   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2467501   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2467502   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2467503   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2467504   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2467505   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2467506   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2467507   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2467508   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2467509   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2467510   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2467511   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2467512   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2467513   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2467514   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2467515   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2467516   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2467517   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2467518   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2467519   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2467520   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2467521   +END;
MPRINT(EM_DIAGRAM):   END;
2467522   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2467523   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2467524   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2467525   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2467526   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2467527   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2467528   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2467529   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2467530   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2467531   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2467532   +   H1x1_1  =     -2.0588471958351 * S_AcceptedCmpTotal
2467533   +          +     0.38628980389456 * S_Age  +     -0.8545617733777 * S_Frq
2467534   +          +    -1.37557200210661 * S_Income  +     1.58583945545125 *
2467535   +        S_Kidhome  +    -1.49250871593186 * S_Mnt  +    -2.02986091068301 *
2467536   +        S_MntFishProducts  +     0.28845511703412 * S_MntFruits
2467537   +          +    -0.62495372005095 * S_MntGoldProds  +     3.22144698444712 *
2467538   +        S_MntMeatProducts  +    -2.67158036653801 * S_MntSweetProducts
2467539   +          +    -4.30837863985493 * S_MntWines  +     0.39603200162704 *
2467540   +        S_MonthsAsCustomer  +      1.8259166147951 * S_NumCatalogPurchases
2467541   +          +      3.4758215776031 * S_NumDealsPurchases
2467542   +          +     0.17094021755289 * S_NumDistPurchases
2467543   +          +    -2.72090095694641 * S_NumStorePurchases
2467544   +          +    -0.31877935826328 * S_NumWebPurchases
2467545   +          +    -2.03399974412918 * S_NumWebVisitsMonth
2467546   +          +     2.74309130038659 * S_RFMstat  +    -0.74941844935268 *
2467547   +        S_RMntFrq  +     0.29064555076615 * S_Recency
2467548   +          +    -0.57040700827247 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -2.0588471958351 * S_AcceptedCmpTotal + 0.38628980389456 *
S_Age + -0.8545617733777 * S_Frq + -1.37557200210661 * S_Income + 1.58583945545125 * S_Kidhome
+ -1.49250871593186 * S_Mnt + -2.02986091068301 * S_MntFishProducts + 0.28845511703412 *
S_MntFruits + -0.62495372005095 * S_MntGoldProds + 3.22144698444712 * S_MntMeatProducts +
-2.67158036653801 * S_MntSweetProducts + -4.30837863985493 * S_MntWines + 0.39603200162704 *
S_MonthsAsCustomer + 1.8259166147951 * S_NumCatalogPurchases + 3.4758215776031 *
S_NumDealsPurchases + 0.17094021755289 * S_NumDistPurchases + -2.72090095694641 *
S_NumStorePurchases + -0.31877935826328 * S_NumWebPurchases + -2.03399974412918 *
S_NumWebVisitsMonth + 2.74309130038659 * S_RFMstat + -0.74941844935268 * S_RMntFrq +
0.29064555076615 * S_Recency + -0.57040700827247 * S_Teenhome ;
2467549   +   H1x1_2  =     -0.5995699177824 * S_AcceptedCmpTotal
2467550   +          +    -1.17769485933608 * S_Age  +     0.95998296288295 * S_Frq
2467551   +          +     -2.2343179478513 * S_Income  +     3.17436638275163 *
2467552   +        S_Kidhome  +     0.46987648124346 * S_Mnt  +     0.07213935656698 *
2467553   +        S_MntFishProducts  +    -1.38055808108069 * S_MntFruits
2467554   +          +     0.62140960451545 * S_MntGoldProds  +     -1.9000500396873 *
2467555   +        S_MntMeatProducts  +    -0.35707372583597 * S_MntSweetProducts
2467556   +          +     1.99720917743483 * S_MntWines  +     0.89245096364062 *
2467557   +        S_MonthsAsCustomer  +    -0.61497875715928 * S_NumCatalogPurchases
2467558   +          +    -1.21013804197082 * S_NumDealsPurchases
2467559   +          +     0.59974279122188 * S_NumDistPurchases
2467560   +          +     1.92425710681156 * S_NumStorePurchases
2467561   +          +     1.02413182452324 * S_NumWebPurchases
2467562   +          +    -3.63276285340174 * S_NumWebVisitsMonth
2467563   +          +     0.33919100670479 * S_RFMstat  +     0.84767315208026 *
2467564   +        S_RMntFrq  +     3.87352563099005 * S_Recency
2467565   +          +     2.74174964084917 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.5995699177824 * S_AcceptedCmpTotal + -1.17769485933608 *
S_Age + 0.95998296288295 * S_Frq + -2.2343179478513 * S_Income + 3.17436638275163 * S_Kidhome
+ 0.46987648124346 * S_Mnt + 0.07213935656698 * S_MntFishProducts + -1.38055808108069 *
S_MntFruits + 0.62140960451545 * S_MntGoldProds + -1.9000500396873 * S_MntMeatProducts +
-0.35707372583597 * S_MntSweetProducts + 1.99720917743483 * S_MntWines + 0.89245096364062 *
S_MonthsAsCustomer + -0.61497875715928 * S_NumCatalogPurchases + -1.21013804197082 *
S_NumDealsPurchases + 0.59974279122188 * S_NumDistPurchases + 1.92425710681156 *
S_NumStorePurchases + 1.02413182452324 * S_NumWebPurchases + -3.63276285340174 *
S_NumWebVisitsMonth + 0.33919100670479 * S_RFMstat + 0.84767315208026 * S_RMntFrq +
3.87352563099005 * S_Recency + 2.74174964084917 * S_Teenhome ;
2467566   +   H1x1_3  =    -2.27029708882419 * S_AcceptedCmpTotal
2467567   +          +     0.57558817521081 * S_Age  +     0.03666022895146 * S_Frq
2467568   +          +    -0.43764949843184 * S_Income  +     0.05202039236868 *
2467569   +        S_Kidhome  +    -0.17515517773197 * S_Mnt  +      2.1454579331563 *
2467570   +        S_MntFishProducts  +     -0.0544472234117 * S_MntFruits
2467571   +          +    -0.24751372889101 * S_MntGoldProds  +    -7.95986512066472 *
2467572   +        S_MntMeatProducts  +    -0.42258869313323 * S_MntSweetProducts
2467573   +          +      4.6542173574208 * S_MntWines  +     0.27973663838423 *
2467574   +        S_MonthsAsCustomer  +    -0.92923468464154 * S_NumCatalogPurchases
2467575   +          +      0.4928343071801 * S_NumDealsPurchases
2467576   +          +     -0.0196677325409 * S_NumDistPurchases
2467577   +          +     0.44395828164873 * S_NumStorePurchases
2467578   +          +     0.86947051591224 * S_NumWebPurchases
2467579   +          +    -0.96787241206077 * S_NumWebVisitsMonth
2467580   +          +     -0.9429396337834 * S_RFMstat  +    -1.69298966254302 *
2467581   +        S_RMntFrq  +     0.24582117217188 * S_Recency
2467582   +          +    -1.08471509540368 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -2.27029708882419 * S_AcceptedCmpTotal + 0.57558817521081 *
S_Age + 0.03666022895146 * S_Frq + -0.43764949843184 * S_Income + 0.05202039236868 * S_Kidhome
+ -0.17515517773197 * S_Mnt + 2.1454579331563 * S_MntFishProducts + -0.0544472234117 *
S_MntFruits + -0.24751372889101 * S_MntGoldProds + -7.95986512066472 * S_MntMeatProducts +
-0.42258869313323 * S_MntSweetProducts + 4.6542173574208 * S_MntWines + 0.27973663838423 *
S_MonthsAsCustomer + -0.92923468464154 * S_NumCatalogPurchases + 0.4928343071801 *
S_NumDealsPurchases + -0.0196677325409 * S_NumDistPurchases + 0.44395828164873 *
S_NumStorePurchases + 0.86947051591224 * S_NumWebPurchases + -0.96787241206077 *
S_NumWebVisitsMonth + -0.9429396337834 * S_RFMstat + -1.69298966254302 * S_RMntFrq +
0.24582117217188 * S_Recency + -1.08471509540368 * S_Teenhome ;
2467583   +   H1x1_4  =     0.54181596412096 * S_AcceptedCmpTotal
2467584   +          +    -1.19331526818752 * S_Age  +     0.79853759822324 * S_Frq
2467585   +          +     0.73370928178794 * S_Income  +     0.38661834479377 *
2467586   +        S_Kidhome  +      0.3442876988888 * S_Mnt  +    -0.58769739655035 *
2467587   +        S_MntFishProducts  +     -0.8703586573687 * S_MntFruits
2467588   +          +    -0.06073044217122 * S_MntGoldProds  +     1.06031608775663 *
2467589   +        S_MntMeatProducts  +      0.1600438561366 * S_MntSweetProducts
2467590   +          +    -0.10937637342015 * S_MntWines  +     0.44423445817796 *
2467591   +        S_MonthsAsCustomer  +     2.20653376632749 * S_NumCatalogPurchases
2467592   +          +     1.10280977051932 * S_NumDealsPurchases
2467593   +          +     0.99310057404036 * S_NumDistPurchases
2467594   +          +    -0.05647459609331 * S_NumStorePurchases
2467595   +          +    -0.89852483938631 * S_NumWebPurchases
2467596   +          +     2.63022480227445 * S_NumWebVisitsMonth
2467597   +          +      0.0081819695781 * S_RFMstat  +     1.19338523211724 *
2467598   +        S_RMntFrq  +    -4.46436997560659 * S_Recency
2467599   +          +    -2.03251171372039 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.54181596412096 * S_AcceptedCmpTotal + -1.19331526818752 *
S_Age + 0.79853759822324 * S_Frq + 0.73370928178794 * S_Income + 0.38661834479377 * S_Kidhome
+ 0.3442876988888 * S_Mnt + -0.58769739655035 * S_MntFishProducts + -0.8703586573687 *
S_MntFruits + -0.06073044217122 * S_MntGoldProds + 1.06031608775663 * S_MntMeatProducts +
0.1600438561366 * S_MntSweetProducts + -0.10937637342015 * S_MntWines + 0.44423445817796 *
S_MonthsAsCustomer + 2.20653376632749 * S_NumCatalogPurchases + 1.10280977051932 *
S_NumDealsPurchases + 0.99310057404036 * S_NumDistPurchases + -0.05647459609331 *
S_NumStorePurchases + -0.89852483938631 * S_NumWebPurchases + 2.63022480227445 *
S_NumWebVisitsMonth + 0.0081819695781 * S_RFMstat + 1.19338523211724 * S_RMntFrq +
-4.46436997560659 * S_Recency + -2.03251171372039 * S_Teenhome ;
2467600   +   H1x1_5  =    -1.03227948250072 * S_AcceptedCmpTotal
2467601   +          +     0.25510562405413 * S_Age  +     0.11938172756061 * S_Frq
2467602   +          +    -0.88855927472898 * S_Income  +    -0.98732962014399 *
2467603   +        S_Kidhome  +     0.57537935682752 * S_Mnt  +     0.07702692666996 *
2467604   +        S_MntFishProducts  +     0.69541223905843 * S_MntFruits
2467605   +          +    -0.26720187465927 * S_MntGoldProds  +    -0.03938241662919 *
2467606   +        S_MntMeatProducts  +     1.08781093588885 * S_MntSweetProducts
2467607   +          +     1.16253823123182 * S_MntWines  +    -1.60607722651025 *
2467608   +        S_MonthsAsCustomer  +    -1.69043794225498 * S_NumCatalogPurchases
2467609   +          +    -2.62220616180571 * S_NumDealsPurchases
2467610   +          +    -0.51737930835331 * S_NumDistPurchases
2467611   +          +     0.88655783158133 * S_NumStorePurchases
2467612   +          +     0.35132468809969 * S_NumWebPurchases
2467613   +          +     -1.6320869675862 * S_NumWebVisitsMonth
2467614   +          +     0.33776958473405 * S_RFMstat  +    -0.42290181425075 *
2467615   +        S_RMntFrq  +     1.06226028677401 * S_Recency
2467616   +          +     1.11855899514962 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.03227948250072 * S_AcceptedCmpTotal + 0.25510562405413 *
S_Age + 0.11938172756061 * S_Frq + -0.88855927472898 * S_Income + -0.98732962014399 *
S_Kidhome + 0.57537935682752 * S_Mnt + 0.07702692666996 * S_MntFishProducts + 0.69541223905843
* S_MntFruits + -0.26720187465927 * S_MntGoldProds + -0.03938241662919 * S_MntMeatProducts +
1.08781093588885 * S_MntSweetProducts + 1.16253823123182 * S_MntWines + -1.60607722651025 *
S_MonthsAsCustomer + -1.69043794225498 * S_NumCatalogPurchases + -2.62220616180571 *
S_NumDealsPurchases + -0.51737930835331 * S_NumDistPurchases + 0.88655783158133 *
S_NumStorePurchases + 0.35132468809969 * S_NumWebPurchases + -1.6320869675862 *
S_NumWebVisitsMonth + 0.33776958473405 * S_RFMstat + -0.42290181425075 * S_RMntFrq +
1.06226028677401 * S_Recency + 1.11855899514962 * S_Teenhome ;
2467617   +   H1x1_1  = H1x1_1  +     0.53637737817097 * AcceptedCmp10
2467618   +          +    -1.85405146733588 * AcceptedCmp20  +    -1.47621046566649 *
2467619   +        AcceptedCmp30  +    -1.37767318086242 * AcceptedCmp40
2467620   +          +    -0.96348396070145 * AcceptedCmp50  +    -1.30976546088379 *
2467621   +        Complain0  +    -0.54848314184314 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.53637737817097 * AcceptedCmp10 + -1.85405146733588 *
AcceptedCmp20 + -1.47621046566649 * AcceptedCmp30 + -1.37767318086242 * AcceptedCmp40 +
-0.96348396070145 * AcceptedCmp50 + -1.30976546088379 * Complain0 + -0.54848314184314 *
HigherEducationBinary0 ;
2467622   +   H1x1_2  = H1x1_2  +     0.18445380584184 * AcceptedCmp10
2467623   +          +    -0.69257274561716 * AcceptedCmp20  +     0.17226038285159 *
2467624   +        AcceptedCmp30  +    -1.06145995435722 * AcceptedCmp40
2467625   +          +     1.23459262841144 * AcceptedCmp50  +    -0.14674063302587 *
2467626   +        Complain0  +    -1.08422405648698 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.18445380584184 * AcceptedCmp10 + -0.69257274561716 *
AcceptedCmp20 + 0.17226038285159 * AcceptedCmp30 + -1.06145995435722 * AcceptedCmp40 +
1.23459262841144 * AcceptedCmp50 + -0.14674063302587 * Complain0 + -1.08422405648698 *
HigherEducationBinary0 ;
2467627   +   H1x1_3  = H1x1_3  +     0.81272808689375 * AcceptedCmp10
2467628   +          +    -0.37057950605918 * AcceptedCmp20  +    -1.75364708883985 *
2467629   +        AcceptedCmp30  +     -1.9879502333289 * AcceptedCmp40
2467630   +          +     2.82649108460951 * AcceptedCmp50  +    -0.14219031901768 *
2467631   +        Complain0  +     -0.5514346363694 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.81272808689375 * AcceptedCmp10 + -0.37057950605918 *
AcceptedCmp20 + -1.75364708883985 * AcceptedCmp30 + -1.9879502333289 * AcceptedCmp40 +
2.82649108460951 * AcceptedCmp50 + -0.14219031901768 * Complain0 + -0.5514346363694 *
HigherEducationBinary0 ;
2467632   +   H1x1_4  = H1x1_4  +    -1.12354567881562 * AcceptedCmp10
2467633   +          +    -1.64564861831306 * AcceptedCmp20  +    -1.84950171464501 *
2467634   +        AcceptedCmp30  +    -2.60581164673686 * AcceptedCmp40
2467635   +          +    -0.53568003317161 * AcceptedCmp50  +    -0.13929928866767 *
2467636   +        Complain0  +     1.18053116626218 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -1.12354567881562 * AcceptedCmp10 + -1.64564861831306
* AcceptedCmp20 + -1.84950171464501 * AcceptedCmp30 + -2.60581164673686 * AcceptedCmp40 +
-0.53568003317161 * AcceptedCmp50 + -0.13929928866767 * Complain0 + 1.18053116626218 *
HigherEducationBinary0 ;
2467637   +   H1x1_5  = H1x1_5  +     -0.3006993305802 * AcceptedCmp10
2467638   +          +    -0.67101949915278 * AcceptedCmp20  +     0.48950637221178 *
2467639   +        AcceptedCmp30  +     0.25937105093078 * AcceptedCmp40
2467640   +          +       0.650714225549 * AcceptedCmp50  +    -0.53543482850089 *
2467641   +        Complain0  +     0.62014708316206 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.3006993305802 * AcceptedCmp10 + -0.67101949915278 *
AcceptedCmp20 + 0.48950637221178 * AcceptedCmp30 + 0.25937105093078 * AcceptedCmp40 +
0.650714225549 * AcceptedCmp50 + -0.53543482850089 * Complain0 + 0.62014708316206 *
HigherEducationBinary0 ;
2467642   +   H1x1_1  = H1x1_1  +     0.78710932360637 * Education2n_Cycle
2467643   +          +    -0.34656604802235 * EducationBasic  +     0.11820082193221 *
2467644   +        EducationGraduation  +     1.42539292513854 * EducationMaster
2467645   +          +     0.34809919741136 * Marital_StatusDivorced
2467646   +          +    -0.26594093535929 * Marital_StatusMarried
2467647   +          +     0.70249715999987 * Marital_StatusSingle
2467648   +          +    -0.45710525283449 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.78710932360637 * Education2n_Cycle +
-0.34656604802235 * EducationBasic + 0.11820082193221 * EducationGraduation + 1.42539292513854
* EducationMaster + 0.34809919741136 * Marital_StatusDivorced + -0.26594093535929 *
Marital_StatusMarried + 0.70249715999987 * Marital_StatusSingle + -0.45710525283449 *
Marital_StatusTogether ;
2467649   +   H1x1_2  = H1x1_2  +    -1.00496261512915 * Education2n_Cycle
2467650   +          +     0.66783492956492 * EducationBasic  +     0.91185122922538 *
2467651   +        EducationGraduation  +    -0.28204692640004 * EducationMaster
2467652   +          +    -0.20448765627193 * Marital_StatusDivorced
2467653   +          +     1.73231344674733 * Marital_StatusMarried
2467654   +          +    -0.70956480480373 * Marital_StatusSingle
2467655   +          +      1.0926428215879 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -1.00496261512915 * Education2n_Cycle +
0.66783492956492 * EducationBasic + 0.91185122922538 * EducationGraduation + -0.28204692640004
* EducationMaster + -0.20448765627193 * Marital_StatusDivorced + 1.73231344674733 *
Marital_StatusMarried + -0.70956480480373 * Marital_StatusSingle + 1.0926428215879 *
Marital_StatusTogether ;
2467656   +   H1x1_3  = H1x1_3  +    -0.06222681334412 * Education2n_Cycle
2467657   +          +    -0.00009122618999 * EducationBasic  +    -0.07444046529217 *
2467658   +        EducationGraduation  +     1.01284161768787 * EducationMaster
2467659   +          +     0.30333818684353 * Marital_StatusDivorced
2467660   +          +    -1.44603535988199 * Marital_StatusMarried
2467661   +          +     0.48409598426383 * Marital_StatusSingle
2467662   +          +    -1.14528682521622 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.06222681334412 * Education2n_Cycle +
-0.00009122618999 * EducationBasic + -0.07444046529217 * EducationGraduation +
1.01284161768787 * EducationMaster + 0.30333818684353 * Marital_StatusDivorced +
-1.44603535988199 * Marital_StatusMarried + 0.48409598426383 * Marital_StatusSingle +
-1.14528682521622 * Marital_StatusTogether ;
2467663   +   H1x1_4  = H1x1_4  +    -0.92316818310935 * Education2n_Cycle
2467664   +          +     0.93590924020503 * EducationBasic  +     0.36762108040277 *
2467665   +        EducationGraduation  +    -1.17735200022013 * EducationMaster
2467666   +          +     -1.5342907846297 * Marital_StatusDivorced
2467667   +          +    -1.79544684592172 * Marital_StatusMarried
2467668   +          +     0.65604313645117 * Marital_StatusSingle
2467669   +          +    -2.08172869142628 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.92316818310935 * Education2n_Cycle +
0.93590924020503 * EducationBasic + 0.36762108040277 * EducationGraduation + -1.17735200022013
* EducationMaster + -1.5342907846297 * Marital_StatusDivorced + -1.79544684592172 *
Marital_StatusMarried + 0.65604313645117 * Marital_StatusSingle + -2.08172869142628 *
Marital_StatusTogether ;
2467670   +   H1x1_5  = H1x1_5  +    -0.56328800945753 * Education2n_Cycle
2467671   +          +    -0.06918346311418 * EducationBasic  +     -1.5176897786776 *
2467672   +        EducationGraduation  +     0.09618331198762 * EducationMaster
2467673   +          +    -3.97940893560267 * Marital_StatusDivorced
2467674   +          +      3.5880254142663 * Marital_StatusMarried
2467675   +          +     -2.9897737730927 * Marital_StatusSingle
2467676   +          +     3.75098376776525 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.56328800945753 * Education2n_Cycle +
-0.06918346311418 * EducationBasic + -1.5176897786776 * EducationGraduation + 0.09618331198762
* EducationMaster + -3.97940893560267 * Marital_StatusDivorced + 3.5880254142663 *
Marital_StatusMarried + -2.9897737730927 * Marital_StatusSingle + 3.75098376776525 *
Marital_StatusTogether ;
2467677   +   H1x1_1  =    -2.89135496095875 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -2.89135496095875 + H1x1_1 ;
2467678   +   H1x1_2  =     0.39943637099295 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.39943637099295 + H1x1_2 ;
2467679   +   H1x1_3  =    -1.08093114818147 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -1.08093114818147 + H1x1_3 ;
2467680   +   H1x1_4  =    -3.29426643182948 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -3.29426643182948 + H1x1_4 ;
2467681   +   H1x1_5  =    -1.76822552726746 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.76822552726746 + H1x1_5 ;
2467682   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2467683   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2467684   +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
2467685   +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
2467686   +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
2467687   +   H1x1_4  = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
2467688   +   H1x1_5  = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_5 = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
2467689   +END;
MPRINT(EM_DIAGRAM):   END;
2467690   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2467691   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2467692   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2467693   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2467694   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2467695   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
2467696   +END;
MPRINT(EM_DIAGRAM):   END;
2467697   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2467698   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
2467699   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2467700   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2467701   +   H1x2_1  =     1.01981866144831 * S_AcceptedCmpTotal
2467702   +          +    -1.47346125364319 * S_Age  +    -0.08669650492194 * S_Frq
2467703   +          +    -0.51585471637562 * S_Income  +     1.40711190452923 *
2467704   +        S_Kidhome  +    -0.21341957199148 * S_Mnt  +    -0.31211158173505 *
2467705   +        S_MntFishProducts  +    -0.77126486046129 * S_MntFruits
2467706   +          +     -0.4503905849175 * S_MntGoldProds  +     1.01090165857015 *
2467707   +        S_MntMeatProducts  +    -0.05554268249583 * S_MntSweetProducts
2467708   +          +     2.72203992871966 * S_MntWines  +    -0.46212144021719 *
2467709   +        S_MonthsAsCustomer  +    -0.10495120677935 * S_NumCatalogPurchases
2467710   +          +     0.07279889333775 * S_NumDealsPurchases
2467711   +          +     0.07542203992452 * S_NumDistPurchases
2467712   +          +     0.16296239303342 * S_NumStorePurchases
2467713   +          +     1.59193921229231 * S_NumWebPurchases
2467714   +          +    -0.35227839362603 * S_NumWebVisitsMonth
2467715   +          +      1.3224105019117 * S_RFMstat  +    -0.77035988511057 *
2467716   +        S_RMntFrq  +     0.43315770276588 * S_Recency
2467717   +          +     0.43447147039235 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.01981866144831 * S_AcceptedCmpTotal + -1.47346125364319 *
S_Age + -0.08669650492194 * S_Frq + -0.51585471637562 * S_Income + 1.40711190452923 *
S_Kidhome + -0.21341957199148 * S_Mnt + -0.31211158173505 * S_MntFishProducts +
-0.77126486046129 * S_MntFruits + -0.4503905849175 * S_MntGoldProds + 1.01090165857015 *
S_MntMeatProducts + -0.05554268249583 * S_MntSweetProducts + 2.72203992871966 * S_MntWines +
-0.46212144021719 * S_MonthsAsCustomer + -0.10495120677935 * S_NumCatalogPurchases +
0.07279889333775 * S_NumDealsPurchases + 0.07542203992452 * S_NumDistPurchases +
0.16296239303342 * S_NumStorePurchases + 1.59193921229231 * S_NumWebPurchases +
-0.35227839362603 * S_NumWebVisitsMonth + 1.3224105019117 * S_RFMstat + -0.77035988511057 *
S_RMntFrq + 0.43315770276588 * S_Recency + 0.43447147039235 * S_Teenhome ;
2467718   +   H1x2_2  =    -0.07629675162821 * S_AcceptedCmpTotal
2467719   +          +     0.81684969971216 * S_Age  +     0.52870818801428 * S_Frq
2467720   +          +     0.15358022485378 * S_Income  +    -0.64458879887927 *
2467721   +        S_Kidhome  +    -2.12225648421746 * S_Mnt  +     1.05240671673302 *
2467722   +        S_MntFishProducts  +    -0.89595336397918 * S_MntFruits
2467723   +          +    -0.28950558043577 * S_MntGoldProds  +     0.30996043499478 *
2467724   +        S_MntMeatProducts  +     1.27676485470274 * S_MntSweetProducts
2467725   +          +    -1.30045112439384 * S_MntWines  +     1.36110971826862 *
2467726   +        S_MonthsAsCustomer  +     -0.1778244163518 * S_NumCatalogPurchases
2467727   +          +    -0.37456959251084 * S_NumDealsPurchases
2467728   +          +    -1.15252469975668 * S_NumDistPurchases
2467729   +          +    -1.39822501888899 * S_NumStorePurchases
2467730   +          +    -0.32777847360723 * S_NumWebPurchases
2467731   +          +     0.84026499832926 * S_NumWebVisitsMonth
2467732   +          +    -1.47180193258497 * S_RFMstat  +     0.18801983980439 *
2467733   +        S_RMntFrq  +     1.21016626691186 * S_Recency
2467734   +          +    -0.82943594788748 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.07629675162821 * S_AcceptedCmpTotal + 0.81684969971216 *
S_Age + 0.52870818801428 * S_Frq + 0.15358022485378 * S_Income + -0.64458879887927 * S_Kidhome
+ -2.12225648421746 * S_Mnt + 1.05240671673302 * S_MntFishProducts + -0.89595336397918 *
S_MntFruits + -0.28950558043577 * S_MntGoldProds + 0.30996043499478 * S_MntMeatProducts +
1.27676485470274 * S_MntSweetProducts + -1.30045112439384 * S_MntWines + 1.36110971826862 *
S_MonthsAsCustomer + -0.1778244163518 * S_NumCatalogPurchases + -0.37456959251084 *
S_NumDealsPurchases + -1.15252469975668 * S_NumDistPurchases + -1.39822501888899 *
S_NumStorePurchases + -0.32777847360723 * S_NumWebPurchases + 0.84026499832926 *
S_NumWebVisitsMonth + -1.47180193258497 * S_RFMstat + 0.18801983980439 * S_RMntFrq +
1.21016626691186 * S_Recency + -0.82943594788748 * S_Teenhome ;
2467735   +   H1x2_3  =    -0.06736000283511 * S_AcceptedCmpTotal
2467736   +          +    -0.47270148030219 * S_Age  +      1.1959707178877 * S_Frq
2467737   +          +    -1.40081626653738 * S_Income  +     0.35085595025526 *
2467738   +        S_Kidhome  +    -0.43652344252181 * S_Mnt  +     1.12197802721591 *
2467739   +        S_MntFishProducts  +     1.27079634537799 * S_MntFruits
2467740   +          +    -0.03023683680758 * S_MntGoldProds  +     0.51289568088141 *
2467741   +        S_MntMeatProducts  +     1.12894900622408 * S_MntSweetProducts
2467742   +          +    -0.66940205871871 * S_MntWines  +    -1.57211003055303 *
2467743   +        S_MonthsAsCustomer  +     1.47778465205569 * S_NumCatalogPurchases
2467744   +          +     1.14090099538367 * S_NumDealsPurchases
2467745   +          +     -0.2600155774492 * S_NumDistPurchases
2467746   +          +     1.31362002392113 * S_NumStorePurchases
2467747   +          +     1.31465307763555 * S_NumWebPurchases
2467748   +          +    -0.18041623858351 * S_NumWebVisitsMonth
2467749   +          +    -0.12685084546738 * S_RFMstat  +     0.43500462904027 *
2467750   +        S_RMntFrq  +    -0.81910738140729 * S_Recency
2467751   +          +    -0.61936793661609 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.06736000283511 * S_AcceptedCmpTotal + -0.47270148030219 *
S_Age + 1.1959707178877 * S_Frq + -1.40081626653738 * S_Income + 0.35085595025526 * S_Kidhome
+ -0.43652344252181 * S_Mnt + 1.12197802721591 * S_MntFishProducts + 1.27079634537799 *
S_MntFruits + -0.03023683680758 * S_MntGoldProds + 0.51289568088141 * S_MntMeatProducts +
1.12894900622408 * S_MntSweetProducts + -0.66940205871871 * S_MntWines + -1.57211003055303 *
S_MonthsAsCustomer + 1.47778465205569 * S_NumCatalogPurchases + 1.14090099538367 *
S_NumDealsPurchases + -0.2600155774492 * S_NumDistPurchases + 1.31362002392113 *
S_NumStorePurchases + 1.31465307763555 * S_NumWebPurchases + -0.18041623858351 *
S_NumWebVisitsMonth + -0.12685084546738 * S_RFMstat + 0.43500462904027 * S_RMntFrq +
-0.81910738140729 * S_Recency + -0.61936793661609 * S_Teenhome ;
2467752   +   H1x2_4  =    -0.31415783692162 * S_AcceptedCmpTotal
2467753   +          +     0.11061423227332 * S_Age  +    -0.65722939551233 * S_Frq
2467754   +          +     -0.9063192568986 * S_Income  +      0.4013752851291 *
2467755   +        S_Kidhome  +    -1.06795963585271 * S_Mnt  +     0.24969441019479 *
2467756   +        S_MntFishProducts  +    -0.63550038240549 * S_MntFruits
2467757   +          +     1.04454010114015 * S_MntGoldProds  +     0.89912571026653 *
2467758   +        S_MntMeatProducts  +    -1.92356868621234 * S_MntSweetProducts
2467759   +          +     -1.8642245725538 * S_MntWines  +     0.13416556054779 *
2467760   +        S_MonthsAsCustomer  +    -1.01272407075887 * S_NumCatalogPurchases
2467761   +          +     1.06486073796679 * S_NumDealsPurchases
2467762   +          +    -0.04890191247577 * S_NumDistPurchases
2467763   +          +     0.86871320720698 * S_NumStorePurchases
2467764   +          +     0.03183587281884 * S_NumWebPurchases
2467765   +          +     -0.4863802923315 * S_NumWebVisitsMonth
2467766   +          +    -1.38034657666878 * S_RFMstat  +    -0.73640242597195 *
2467767   +        S_RMntFrq  +     0.17186861211542 * S_Recency
2467768   +          +    -0.39595339111048 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.31415783692162 * S_AcceptedCmpTotal + 0.11061423227332 *
S_Age + -0.65722939551233 * S_Frq + -0.9063192568986 * S_Income + 0.4013752851291 * S_Kidhome
+ -1.06795963585271 * S_Mnt + 0.24969441019479 * S_MntFishProducts + -0.63550038240549 *
S_MntFruits + 1.04454010114015 * S_MntGoldProds + 0.89912571026653 * S_MntMeatProducts +
-1.92356868621234 * S_MntSweetProducts + -1.8642245725538 * S_MntWines + 0.13416556054779 *
S_MonthsAsCustomer + -1.01272407075887 * S_NumCatalogPurchases + 1.06486073796679 *
S_NumDealsPurchases + -0.04890191247577 * S_NumDistPurchases + 0.86871320720698 *
S_NumStorePurchases + 0.03183587281884 * S_NumWebPurchases + -0.4863802923315 *
S_NumWebVisitsMonth + -1.38034657666878 * S_RFMstat + -0.73640242597195 * S_RMntFrq +
0.17186861211542 * S_Recency + -0.39595339111048 * S_Teenhome ;
2467769   +   H1x2_5  =     1.68315669988315 * S_AcceptedCmpTotal
2467770   +          +    -1.67467335764173 * S_Age  +     1.29921539173109 * S_Frq
2467771   +          +    -0.52305600367899 * S_Income  +     1.06261291858944 *
2467772   +        S_Kidhome  +     1.77049882170904 * S_Mnt  +    -0.27692609509601 *
2467773   +        S_MntFishProducts  +    -1.23166107817727 * S_MntFruits
2467774   +          +    -2.21476398466362 * S_MntGoldProds  +     1.02542528622621 *
2467775   +        S_MntMeatProducts  +     1.04913114036094 * S_MntSweetProducts
2467776   +          +     0.30606520702636 * S_MntWines  +    -1.15158074964406 *
2467777   +        S_MonthsAsCustomer  +     0.77918810586275 * S_NumCatalogPurchases
2467778   +          +    -0.01160267590349 * S_NumDealsPurchases
2467779   +          +    -0.92773075463083 * S_NumDistPurchases
2467780   +          +    -0.83326680533995 * S_NumStorePurchases
2467781   +          +    -1.16991058954473 * S_NumWebPurchases
2467782   +          +    -2.07771165573723 * S_NumWebVisitsMonth
2467783   +          +     0.59832456826177 * S_RFMstat  +     0.08151078945291 *
2467784   +        S_RMntFrq  +     0.80165981122986 * S_Recency
2467785   +          +     1.41798811088435 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.68315669988315 * S_AcceptedCmpTotal + -1.67467335764173 *
S_Age + 1.29921539173109 * S_Frq + -0.52305600367899 * S_Income + 1.06261291858944 * S_Kidhome
+ 1.77049882170904 * S_Mnt + -0.27692609509601 * S_MntFishProducts + -1.23166107817727 *
S_MntFruits + -2.21476398466362 * S_MntGoldProds + 1.02542528622621 * S_MntMeatProducts +
1.04913114036094 * S_MntSweetProducts + 0.30606520702636 * S_MntWines + -1.15158074964406 *
S_MonthsAsCustomer + 0.77918810586275 * S_NumCatalogPurchases + -0.01160267590349 *
S_NumDealsPurchases + -0.92773075463083 * S_NumDistPurchases + -0.83326680533995 *
S_NumStorePurchases + -1.16991058954473 * S_NumWebPurchases + -2.07771165573723 *
S_NumWebVisitsMonth + 0.59832456826177 * S_RFMstat + 0.08151078945291 * S_RMntFrq +
0.80165981122986 * S_Recency + 1.41798811088435 * S_Teenhome ;
2467786   +   H1x2_1  = H1x2_1  +    -0.16600737981926 * AcceptedCmp10
2467787   +          +     1.41264623988567 * AcceptedCmp20  +      1.0446306999234 *
2467788   +        AcceptedCmp30  +    -1.00688604631169 * AcceptedCmp40
2467789   +          +     0.64523782235527 * AcceptedCmp50  +    -1.76623980391232 *
2467790   +        Complain0  +     1.64644530449125 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.16600737981926 * AcceptedCmp10 + 1.41264623988567 *
AcceptedCmp20 + 1.0446306999234 * AcceptedCmp30 + -1.00688604631169 * AcceptedCmp40 +
0.64523782235527 * AcceptedCmp50 + -1.76623980391232 * Complain0 + 1.64644530449125 *
HigherEducationBinary0 ;
2467791   +   H1x2_2  = H1x2_2  +    -0.39493094663506 * AcceptedCmp10
2467792   +          +    -0.99095404154277 * AcceptedCmp20  +    -0.81166937096774 *
2467793   +        AcceptedCmp30  +     0.14520361414777 * AcceptedCmp40
2467794   +          +    -1.54302055254785 * AcceptedCmp50  +    -0.60600550413714 *
2467795   +        Complain0  +    -3.04730224174859 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.39493094663506 * AcceptedCmp10 + -0.99095404154277
* AcceptedCmp20 + -0.81166937096774 * AcceptedCmp30 + 0.14520361414777 * AcceptedCmp40 +
-1.54302055254785 * AcceptedCmp50 + -0.60600550413714 * Complain0 + -3.04730224174859 *
HigherEducationBinary0 ;
2467796   +   H1x2_3  = H1x2_3  +      1.8650016934441 * AcceptedCmp10
2467797   +          +     0.85335394099291 * AcceptedCmp20  +     0.47327521312159 *
2467798   +        AcceptedCmp30  +    -2.64862753506152 * AcceptedCmp40
2467799   +          +     0.65827168680229 * AcceptedCmp50  +     0.45516433167059 *
2467800   +        Complain0  +    -0.62891111222764 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 1.8650016934441 * AcceptedCmp10 + 0.85335394099291 *
AcceptedCmp20 + 0.47327521312159 * AcceptedCmp30 + -2.64862753506152 * AcceptedCmp40 +
0.65827168680229 * AcceptedCmp50 + 0.45516433167059 * Complain0 + -0.62891111222764 *
HigherEducationBinary0 ;
2467801   +   H1x2_4  = H1x2_4  +    -0.31781332022679 * AcceptedCmp10
2467802   +          +    -0.35773084257089 * AcceptedCmp20  +      0.0486072265688 *
2467803   +        AcceptedCmp30  +     1.50494203860483 * AcceptedCmp40
2467804   +          +     0.00499691981651 * AcceptedCmp50  +    -0.29977032190776 *
2467805   +        Complain0  +     0.76473087756218 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + -0.31781332022679 * AcceptedCmp10 + -0.35773084257089
* AcceptedCmp20 + 0.0486072265688 * AcceptedCmp30 + 1.50494203860483 * AcceptedCmp40 +
0.00499691981651 * AcceptedCmp50 + -0.29977032190776 * Complain0 + 0.76473087756218 *
HigherEducationBinary0 ;
2467806   +   H1x2_5  = H1x2_5  +     -0.4639041544815 * AcceptedCmp10
2467807   +          +    -1.28977231764453 * AcceptedCmp20  +    -0.03597660273531 *
2467808   +        AcceptedCmp30  +     0.17848986397338 * AcceptedCmp40
2467809   +          +     0.06649914015182 * AcceptedCmp50  +    -0.95633404051563 *
2467810   +        Complain0  +    -0.62555630659121 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + -0.4639041544815 * AcceptedCmp10 + -1.28977231764453 *
AcceptedCmp20 + -0.03597660273531 * AcceptedCmp30 + 0.17848986397338 * AcceptedCmp40 +
0.06649914015182 * AcceptedCmp50 + -0.95633404051563 * Complain0 + -0.62555630659121 *
HigherEducationBinary0 ;
2467811   +   H1x2_1  = H1x2_1  +    -1.75926153465974 * Education2n_Cycle
2467812   +          +     0.96255168005018 * EducationBasic  +     -1.2029563052774 *
2467813   +        EducationGraduation  +    -0.22397098444024 * EducationMaster
2467814   +          +    -0.10361472385198 * Marital_StatusDivorced
2467815   +          +     0.05574820877885 * Marital_StatusMarried
2467816   +          +     0.13130988205279 * Marital_StatusSingle
2467817   +          +    -1.51165564425323 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -1.75926153465974 * Education2n_Cycle +
0.96255168005018 * EducationBasic + -1.2029563052774 * EducationGraduation + -0.22397098444024
* EducationMaster + -0.10361472385198 * Marital_StatusDivorced + 0.05574820877885 *
Marital_StatusMarried + 0.13130988205279 * Marital_StatusSingle + -1.51165564425323 *
Marital_StatusTogether ;
2467818   +   H1x2_2  = H1x2_2  +     1.73281005101474 * Education2n_Cycle
2467819   +          +    -0.51397811328576 * EducationBasic  +     1.64296402934617 *
2467820   +        EducationGraduation  +     1.44983505587452 * EducationMaster
2467821   +          +      0.0059353523794 * Marital_StatusDivorced
2467822   +          +    -0.59379435051653 * Marital_StatusMarried
2467823   +          +    -1.93587108708999 * Marital_StatusSingle
2467824   +          +     2.02868236823401 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 1.73281005101474 * Education2n_Cycle +
-0.51397811328576 * EducationBasic + 1.64296402934617 * EducationGraduation + 1.44983505587452
* EducationMaster + 0.0059353523794 * Marital_StatusDivorced + -0.59379435051653 *
Marital_StatusMarried + -1.93587108708999 * Marital_StatusSingle + 2.02868236823401 *
Marital_StatusTogether ;
2467825   +   H1x2_3  = H1x2_3  +     0.11852280587389 * Education2n_Cycle
2467826   +          +    -0.87963137637159 * EducationBasic  +      0.3212539101977 *
2467827   +        EducationGraduation  +     0.16497026569775 * EducationMaster
2467828   +          +    -0.74333797840386 * Marital_StatusDivorced
2467829   +          +    -0.93061135117658 * Marital_StatusMarried
2467830   +          +     1.04024182655844 * Marital_StatusSingle
2467831   +          +     0.58313569749679 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.11852280587389 * Education2n_Cycle +
-0.87963137637159 * EducationBasic + 0.3212539101977 * EducationGraduation + 0.16497026569775
* EducationMaster + -0.74333797840386 * Marital_StatusDivorced + -0.93061135117658 *
Marital_StatusMarried + 1.04024182655844 * Marital_StatusSingle + 0.58313569749679 *
Marital_StatusTogether ;
2467832   +   H1x2_4  = H1x2_4  +     -1.2170050337036 * Education2n_Cycle
2467833   +          +    -0.83332588435502 * EducationBasic  +     0.43242117148542 *
2467834   +        EducationGraduation  +     1.71196178631559 * EducationMaster
2467835   +          +    -3.01050675344463 * Marital_StatusDivorced
2467836   +          +      0.1638723582239 * Marital_StatusMarried
2467837   +          +     0.94548468360304 * Marital_StatusSingle
2467838   +          +    -0.67333048623615 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + -1.2170050337036 * Education2n_Cycle +
-0.83332588435502 * EducationBasic + 0.43242117148542 * EducationGraduation + 1.71196178631559
* EducationMaster + -3.01050675344463 * Marital_StatusDivorced + 0.1638723582239 *
Marital_StatusMarried + 0.94548468360304 * Marital_StatusSingle + -0.67333048623615 *
Marital_StatusTogether ;
2467839   +   H1x2_5  = H1x2_5  +    -0.66774344191467 * Education2n_Cycle
2467840   +          +     0.75591270317285 * EducationBasic  +    -0.29337325355435 *
2467841   +        EducationGraduation  +     0.57450456442662 * EducationMaster
2467842   +          +    -1.37013926274158 * Marital_StatusDivorced
2467843   +          +    -0.34168970042779 * Marital_StatusMarried
2467844   +          +     0.63383683543962 * Marital_StatusSingle
2467845   +          +     0.75118887766443 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + -0.66774344191467 * Education2n_Cycle +
0.75591270317285 * EducationBasic + -0.29337325355435 * EducationGraduation + 0.57450456442662
* EducationMaster + -1.37013926274158 * Marital_StatusDivorced + -0.34168970042779 *
Marital_StatusMarried + 0.63383683543962 * Marital_StatusSingle + 0.75118887766443 *
Marital_StatusTogether ;
2467846   +   H1x2_1  =    -1.05245414685459 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -1.05245414685459 + H1x2_1 ;
2467847   +   H1x2_2  =    -2.03581716915326 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -2.03581716915326 + H1x2_2 ;
2467848   +   H1x2_3  =    -0.95118365599668 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.95118365599668 + H1x2_3 ;
2467849   +   H1x2_4  =    -1.36171328515396 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -1.36171328515396 + H1x2_4 ;
2467850   +   H1x2_5  =    -0.09438724866767 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.09438724866767 + H1x2_5 ;
2467851   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2467852   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2467853   +   H1x2_1  = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
2467854   +   H1x2_2  = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_2 = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
2467855   +   H1x2_3  = 1.0 / (1.0 + EXP(MIN( - H1x2_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_3 = 1.0 / (1.0 + EXP(MIN( - H1x2_3 , _EXP_BAR)));
2467856   +   H1x2_4  = 1.0 / (1.0 + EXP(MIN( - H1x2_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_4 = 1.0 / (1.0 + EXP(MIN( - H1x2_4 , _EXP_BAR)));
2467857   +   H1x2_5  = 1.0 / (1.0 + EXP(MIN( - H1x2_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.0 / (1.0 + EXP(MIN( - H1x2_5 , _EXP_BAR)));
2467858   +END;
MPRINT(EM_DIAGRAM):   END;
2467859   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2467860   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
2467861   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
2467862   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
2467863   +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
2467864   +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
2467865   +END;
MPRINT(EM_DIAGRAM):   END;
2467866   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2467867   +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
2467868   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2467869   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2467870   +   H2x1_1  =    -3.66869890196477 * H1x1_1  +     3.66276995899936 * H1x1_2
2467871   +          +      4.9852243803889 * H1x1_3  +    -3.40922134517979 * H1x1_4
2467872   +          +     2.26435924995065 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -3.66869890196477 * H1x1_1 + 3.66276995899936 * H1x1_2 +
4.9852243803889 * H1x1_3 + -3.40922134517979 * H1x1_4 + 2.26435924995065 * H1x1_5 ;
2467873   +   H2x1_2  =     1.35296027814603 * H1x1_1  +     0.16236277762099 * H1x1_2
2467874   +          +      0.4094634018093 * H1x1_3  +    -1.05233334297087 * H1x1_4
2467875   +          +    -0.51735435825901 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.35296027814603 * H1x1_1 + 0.16236277762099 * H1x1_2 +
0.4094634018093 * H1x1_3 + -1.05233334297087 * H1x1_4 + -0.51735435825901 * H1x1_5 ;
2467876   +   H2x1_3  =    -3.57467050540101 * H1x1_1  +     1.96738498758928 * H1x1_2
2467877   +          +      3.1519435691133 * H1x1_3  +    -2.73180541318793 * H1x1_4
2467878   +          +     2.53621803266955 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -3.57467050540101 * H1x1_1 + 1.96738498758928 * H1x1_2 +
3.1519435691133 * H1x1_3 + -2.73180541318793 * H1x1_4 + 2.53621803266955 * H1x1_5 ;
2467879   +   H2x1_4  =    -1.77897865469649 * H1x1_1  +    -0.34371813002239 * H1x1_2
2467880   +          +     0.97655076671381 * H1x1_3  +    -0.53022688394362 * H1x1_4
2467881   +          +     1.78452647837415 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -1.77897865469649 * H1x1_1 + -0.34371813002239 * H1x1_2 +
0.97655076671381 * H1x1_3 + -0.53022688394362 * H1x1_4 + 1.78452647837415 * H1x1_5 ;
2467882   +   H2x1_5  =    -2.37976522756638 * H1x1_1  +     2.07473947277607 * H1x1_2
2467883   +          +      3.6114905073808 * H1x1_3  +    -4.57668209905758 * H1x1_4
2467884   +          +     2.97931581645784 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -2.37976522756638 * H1x1_1 + 2.07473947277607 * H1x1_2 +
3.6114905073808 * H1x1_3 + -4.57668209905758 * H1x1_4 + 2.97931581645784 * H1x1_5 ;
2467885   +   H2x1_1  = H2x1_1  +      0.5090021095213 * H1x2_1
2467886   +          +    -0.99996599039586 * H1x2_2  +     0.09317756017156 * H1x2_3
2467887   +          +     0.07646136890595 * H1x2_4  +    -0.86729455140311 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 0.5090021095213 * H1x2_1 + -0.99996599039586 * H1x2_2
+ 0.09317756017156 * H1x2_3 + 0.07646136890595 * H1x2_4 + -0.86729455140311 * H1x2_5 ;
2467888   +   H2x1_2  = H2x1_2  +     0.54458122713319 * H1x2_1
2467889   +          +    -1.01527351866283 * H1x2_2  +    -1.05264779960249 * H1x2_3
2467890   +          +     2.00891057398994 * H1x2_4  +     0.23877185330348 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 0.54458122713319 * H1x2_1 + -1.01527351866283 * H1x2_2
+ -1.05264779960249 * H1x2_3 + 2.00891057398994 * H1x2_4 + 0.23877185330348 * H1x2_5 ;
2467891   +   H2x1_3  = H2x1_3  +     0.45936122831356 * H1x2_1
2467892   +          +    -0.78158455560098 * H1x2_2  +    -0.93755507764598 * H1x2_3
2467893   +          +    -0.41290092050446 * H1x2_4  +    -1.08076286104858 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + 0.45936122831356 * H1x2_1 + -0.78158455560098 * H1x2_2
+ -0.93755507764598 * H1x2_3 + -0.41290092050446 * H1x2_4 + -1.08076286104858 * H1x2_5 ;
2467894   +   H2x1_4  = H2x1_4  +     0.95365620475779 * H1x2_1
2467895   +          +    -0.84100294393078 * H1x2_2  +     0.70463413466954 * H1x2_3
2467896   +          +     1.80542761219637 * H1x2_4  +     0.45881360213194 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 0.95365620475779 * H1x2_1 + -0.84100294393078 * H1x2_2
+ 0.70463413466954 * H1x2_3 + 1.80542761219637 * H1x2_4 + 0.45881360213194 * H1x2_5 ;
2467897   +   H2x1_5  = H2x1_5  +     0.59629215620441 * H1x2_1
2467898   +          +    -0.66300910076078 * H1x2_2  +     0.53748646350811 * H1x2_3
2467899   +          +     0.40402787748621 * H1x2_4  +    -0.68066387330661 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + 0.59629215620441 * H1x2_1 + -0.66300910076078 * H1x2_2
+ 0.53748646350811 * H1x2_3 + 0.40402787748621 * H1x2_4 + -0.68066387330661 * H1x2_5 ;
2467900   +   H2x1_1  =    -1.36901208947371 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -1.36901208947371 + H2x1_1 ;
2467901   +   H2x1_2  =     1.02513270875023 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.02513270875023 + H2x1_2 ;
2467902   +   H2x1_3  =     0.21017025934674 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 0.21017025934674 + H2x1_3 ;
2467903   +   H2x1_4  =    -1.15214364807652 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -1.15214364807652 + H2x1_4 ;
2467904   +   H2x1_5  =    -1.32590257108023 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -1.32590257108023 + H2x1_5 ;
2467905   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2467906   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2467907   +   H2x1_1  = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
2467908   +   H2x1_2  = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
2467909   +   H2x1_3  = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
2467910   +   H2x1_4  = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
2467911   +   H2x1_5  = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_5 = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
2467912   +END;
MPRINT(EM_DIAGRAM):   END;
2467913   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2467914   +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
2467915   +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
2467916   +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
2467917   +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
2467918   +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
2467919   +END;
MPRINT(EM_DIAGRAM):   END;
2467920   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2467921   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2467922   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2467923   +
2467924   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2467925   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2467926   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2467927   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2467928   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2467929   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2467930   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2467931   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2467932   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2467933   +end;
MPRINT(EM_DIAGRAM):   end;
2467934   +else do;
MPRINT(EM_DIAGRAM):   else do;
2467935   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2467936   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2467937   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2467938   +   end;
MPRINT(EM_DIAGRAM):   end;
2467939   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2467940   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2467941   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2467942   +   end;
MPRINT(EM_DIAGRAM):   end;
2467943   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2467944   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2467945   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2467946   +   end;
MPRINT(EM_DIAGRAM):   end;
2467947   +end;
MPRINT(EM_DIAGRAM):   end;
2467948   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2467949   +   P_DepVar1  =    -9.23664553457504 * H2x1_1  +     1.34611690798114 * H2x1_2
2467950   +          +    -6.67077102946651 * H2x1_3  +    -1.67245227685142 * H2x1_4
2467951   +          +    -7.67053346287177 * H2x1_5 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -9.23664553457504 * H2x1_1 + 1.34611690798114 * H2x1_2 +
-6.67077102946651 * H2x1_3 + -1.67245227685142 * H2x1_4 + -7.67053346287177 * H2x1_5 ;
2467952   +   P_DepVar1  =      3.4145227149582 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 3.4145227149582 + P_DepVar1 ;
2467953   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2467954   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2467955   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2467956   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2467957   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2467958   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2467959   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2467960   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2467961   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2467962   +END;
MPRINT(EM_DIAGRAM):   END;
2467963   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2467964   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2467965   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2467966   +END;
MPRINT(EM_DIAGRAM):   END;
2467967   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2467968   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2467969   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2467970   +END;
MPRINT(EM_DIAGRAM):   END;
2467971   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2467972   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2467973   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2467974   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2467975   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2467976   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2467977   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2467978   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2467979   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2467980   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2467981   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2467982   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2467983   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2467984   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2467985   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2467986   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2467987   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2467988   +END;
MPRINT(EM_DIAGRAM):   END;
2467989   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2467990   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2467991   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2467992   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2467993   +* Renaming variables for AutoNeural10;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural10;
2467994   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2467995   +* Renaming Posterior variables for AutoNeural10;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural10;
2467996   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2467997   +drop AutoNeural10_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural10_P_DepVar1;
2467998   +AutoNeural10_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural10_P_DepVar1 = P_DepVar1;
2467999   +drop AutoNeural10_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural10_P_DepVar0;
2468000   +AutoNeural10_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural10_P_DepVar0 = P_DepVar0;
2468001   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2468002   +* Renaming _WARN_ variable for AutoNeural10;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural10;
2468003   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2468004   +length AutoNeural10_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural10_WARN_ $4;
2468005   +drop AutoNeural10_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural10_WARN_;
2468006   +AutoNeural10_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural10_WARN_ = _WARN_;
2468007   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2468008   +* Ensmbl46: Maximum Posteriors of 5 models;
MPRINT(EM_DIAGRAM):   * Ensmbl46: Maximum Posteriors of 5 models;
2468009   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2468010   +_psum = 0;
MPRINT(EM_DIAGRAM):   _psum = 0;
2468011   +drop _psum _premainder;
MPRINT(EM_DIAGRAM):   drop _psum _premainder;
2468012   +P_DepVar1 = max(
2468013   +AutoNeural9_P_DepVar1 ,
2468014   +AutoNeural11_P_DepVar1 ,
2468015   +AutoNeural12_P_DepVar1 ,
2468016   +AutoNeural7_P_DepVar1 ,
2468017   +AutoNeural10_P_DepVar1
2468018   +);
MPRINT(EM_DIAGRAM):   P_DepVar1 = max( AutoNeural9_P_DepVar1 , AutoNeural11_P_DepVar1 ,
AutoNeural12_P_DepVar1 , AutoNeural7_P_DepVar1 , AutoNeural10_P_DepVar1 );
2468019   +_premainder =1 - _psum;
MPRINT(EM_DIAGRAM):   _premainder =1 - _psum;
2468020   +if P_DepVar1 > _premainder then do;
MPRINT(EM_DIAGRAM):   if P_DepVar1 > _premainder then do;
2468021   +P_DepVar1 = _premainder;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _premainder;
2468022   +end;
MPRINT(EM_DIAGRAM):   end;
2468023   +_psum + P_DepVar1;
MPRINT(EM_DIAGRAM):   _psum + P_DepVar1;
2468024   +P_DepVar0 = max(
2468025   +AutoNeural9_P_DepVar0 ,
2468026   +AutoNeural11_P_DepVar0 ,
2468027   +AutoNeural12_P_DepVar0 ,
2468028   +AutoNeural7_P_DepVar0 ,
2468029   +AutoNeural10_P_DepVar0
2468030   +);
MPRINT(EM_DIAGRAM):   P_DepVar0 = max( AutoNeural9_P_DepVar0 , AutoNeural11_P_DepVar0 ,
AutoNeural12_P_DepVar0 , AutoNeural7_P_DepVar0 , AutoNeural10_P_DepVar0 );
2468031   +_premainder =1 - _psum;
MPRINT(EM_DIAGRAM):   _premainder =1 - _psum;
2468032   +if P_DepVar0 > _premainder then do;
MPRINT(EM_DIAGRAM):   if P_DepVar0 > _premainder then do;
2468033   +P_DepVar0 = _premainder;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _premainder;
2468034   +end;
MPRINT(EM_DIAGRAM):   end;
2468035   +_psum + P_DepVar0;
MPRINT(EM_DIAGRAM):   _psum + P_DepVar0;
2468036   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2468037   +* Ensmbl46: Computing Classification Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl46: Computing Classification Vars;
2468038   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2468039   +length I_DepVar $32;
MPRINT(EM_DIAGRAM):   length I_DepVar $32;
WARNING: Length of character variable I_DepVar has already been set.
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the
         length of a character variable.
2468040   +label I_DepVar = 'Into: DepVar';
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar';
2468041   +length _format $200;
MPRINT(EM_DIAGRAM):   length _format $200;
2468042   +drop _format;
MPRINT(EM_DIAGRAM):   drop _format;
2468043   +_format= ' ';
MPRINT(EM_DIAGRAM):   _format= ' ';
2468044   +_p_= 0;
MPRINT(EM_DIAGRAM):   _p_= 0;
2468045   +drop _p_;
MPRINT(EM_DIAGRAM):   drop _p_;
2468046   +if P_DepVar1 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar1 > _p_ then do;
2468047   +_p_= P_DepVar1;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar1;
2468048   +_format= '1';
MPRINT(EM_DIAGRAM):   _format= '1';
2468049   +end;
MPRINT(EM_DIAGRAM):   end;
2468050   +if P_DepVar0 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar0 > _p_ then do;
2468051   +_p_= P_DepVar0;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar0;
2468052   +_format= '0';
MPRINT(EM_DIAGRAM):   _format= '0';
2468053   +end;
MPRINT(EM_DIAGRAM):   end;
2468054   +%DMNORMCP(_format,I_DepVar);
MPRINT(DMNORMCP):   I_DepVar=dmnorm(_format,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2468055   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2468056   +* Ensmbl46: Producing Unformatted variable;
MPRINT(EM_DIAGRAM):   * Ensmbl46: Producing Unformatted variable;
2468057   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2468058   +label U_DepVar = "Unnormalized Into: DepVar";
MPRINT(EM_DIAGRAM):   label U_DepVar = "Unnormalized Into: DepVar";
2468059   +if I_DepVar = '1' then U_DepVar = 1;
MPRINT(EM_DIAGRAM):   if I_DepVar = '1' then U_DepVar = 1;
2468060   +else
2468061   +if I_DepVar = '0' then U_DepVar = 0;
MPRINT(EM_DIAGRAM):   else if I_DepVar = '0' then U_DepVar = 0;
2468062   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2468063   +* Ensmbl46: Computing _WARN_ Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl46: Computing _WARN_ Variable;
2468064   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2468065   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
2468066   +label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
2468067   +_WARN_ = '';
MPRINT(EM_DIAGRAM):   _WARN_ = '';
2468068   +if index(AUTONEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
2468068  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
2468069   +if index(AUTONEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
2468069  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
2468070   +if index(AUTONEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
2468070  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
2468071   +if index(AUTONEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
2468071  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
2468072   +if index(AUTONEURAL11_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
2468072  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
2468073   +if index(AUTONEURAL11_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
2468073  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
2468074   +if index(AUTONEURAL11_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
2468074  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
2468075   +if index(AUTONEURAL11_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
2468075  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
2468076   +if index(AUTONEURAL12_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
2468076  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
2468077   +if index(AUTONEURAL12_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
2468077  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
2468078   +if index(AUTONEURAL12_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
2468078  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
2468079   +if index(AUTONEURAL12_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
2468079  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
2468080   +if index(AUTONEURAL7_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
2468080  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL7_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
2468081   +if index(AUTONEURAL7_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
2468081  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL7_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
2468082   +if index(AUTONEURAL7_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
2468082  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL7_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
2468083   +if index(AUTONEURAL7_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
2468083  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL7_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
2468084   +if index(AUTONEURAL10_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
2468084  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL10_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
2468085   +if index(AUTONEURAL10_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
2468085  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL10_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
2468086   +if index(AUTONEURAL10_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
2468086  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL10_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
2468087   +if index(AUTONEURAL10_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
2468087  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL10_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
2468088   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2468089   +* Ensmbl46: Computing Residual Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl46: Computing Residual Vars;
2468090   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2468091   +if
2468092   +F_DepVar NE '1'
2468093   +AND F_DepVar NE '0'
2468094   +then do;
MPRINT(EM_DIAGRAM):   if F_DepVar NE '1' AND F_DepVar NE '0' then do;
2468095   +R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
2468096   +R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
2468097   +end;
MPRINT(EM_DIAGRAM):   end;
2468098   +else do;
MPRINT(EM_DIAGRAM):   else do;
2468099   +R_DepVar1 = -P_DepVar1;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1;
2468100   +R_DepVar0 = -P_DepVar0;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0;
2468101   +SELECT(F_DepVar);
MPRINT(EM_DIAGRAM):   SELECT(F_DepVar);
2468102   +WHEN('1') R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   WHEN('1') R_DepVar1 = R_DepVar1 +1;
2468103   +WHEN('0') R_DepVar0 = R_DepVar0 +1;
MPRINT(EM_DIAGRAM):   WHEN('0') R_DepVar0 = R_DepVar0 +1;
2468104   +OTHERWISE;
MPRINT(EM_DIAGRAM):   OTHERWISE;
2468105   +END;
MPRINT(EM_DIAGRAM):   END;
2468106   +END;
MPRINT(EM_DIAGRAM):   END;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2468107    run;
 
NOTE: DATA STEP view saved on file EMWS8.ENSMBL46_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.AUTONEURAL9_VALIDATE.VIEW used (Total process time):
      real time           0.17 seconds
      cpu time            0.18 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.19 seconds
      cpu time            0.18 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2468108    quit;
2468109    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
MPRINT(EM_DIAGRAM):
MPRINT(CALFITSTATSNOMINAL):   data _tmpTrainFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_
_RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS8.Ensmbl46_TRAIN end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_
_WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Train: Target Variable" _NOBS_= "Train: Sum of
Frequencies" _SSE_= "Train: Sum of Squared Errors" _MAX_= "Train: Maximum Absolute Error"
_DIV_ = "Train: Divisor for ASE" _WRONG_= "Train: Number of Wrong Classifications" _DISF_=
"Train: Frequency of Classified Cases" _MISC_= "Train: Misclassification Rate" _ASE_ = "Train:
Average Squared Error" _RASE_ = "Train: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_
_RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar ne "" then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl46_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set _tmpTrainFitTable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):
MPRINT(CALFITSTATSNOMINAL):   data _tmpValidFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_
_RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS8.Ensmbl46_VALIDATE end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_
_WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Valid: Target Variable" _NOBS_= "Valid: Sum of
Frequencies" _SSE_= "Valid: Sum of Squared Errors" _MAX_= "Valid: Maximum Absolute Error"
_DIV_ = "Valid: Divisor for ASE" _WRONG_= "Valid: Number of Wrong Classifications" _DISF_=
"Valid: Frequency of Classified Cases" _MISC_= "Valid: Misclassification Rate" _ASE_ = "Valid:
Average Squared Error" _RASE_ = "Valid: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_
_RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar ne "" then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _tmpdata_(DROP= TARGET);
MPRINT(EM_DIAGRAM):   set _tmpValidFitTable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _tmpdata_;
MPRINT(EM_DIAGRAM):   set _tmpdata_;
MPRINT(EM_DIAGRAM):   rename _ASE_=_VASE_;
MPRINT(EM_DIAGRAM):   rename _DIV_=_VDIV_;
MPRINT(EM_DIAGRAM):   rename _MAX_=_VMAX_;
MPRINT(EM_DIAGRAM):   rename _NOBS_=_VNOBS_;
MPRINT(EM_DIAGRAM):   rename _RASE_=_VRASE_;
MPRINT(EM_DIAGRAM):   rename _SSE_=_VSSE_;
MPRINT(EM_DIAGRAM):   rename _DISF_=_VDISF_;
MPRINT(EM_DIAGRAM):   rename _MISC_=_VMISC_;
MPRINT(EM_DIAGRAM):   rename _WRONG_=_VWRONG_;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl46_EMOUTFIT;
MPRINT(EM_DIAGRAM):   merge EMWS8.Ensmbl46_EMOUTFIT _tmpdata_;
MPRINT(EM_DIAGRAM):   run;
2468169    filename _pref
2468169  ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural9\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural9\EMPUBLISHSCORE.sas";
2468170    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2468171    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural9\EMPUBLISHSCORE.sas.
2468172   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2468173   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2468174   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2468175   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2468176   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2468177   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2468178   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2468179   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2468180   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2468181   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2468182   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2468183   +LENGTH _WARN_ $4
2468184   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
2468185   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2468186   +
2468187   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2468188   +
2468189   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2468190   +
2468191   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2468192   +
2468193   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2468194   +
2468195   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2468196   +
2468197   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2468198   +
2468199   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2468200   +
2468201   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2468202   +
2468203   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2468204   +
2468205   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2468206   +
2468207   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2468208   +
2468209   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2468210   +
2468211   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2468212   +
2468213   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2468214   +
2468215   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2468216   +
2468217   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2468218   +
2468219   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2468220   +
2468221   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2468222   +
2468223   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2468224   +
2468225   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2468226   +
2468227   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2468228   +
2468229   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2468230   +
2468231   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2468232   +
2468233   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2468234   +
2468235   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2468236   +
2468237   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2468238   +
2468239   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2468240   +
2468241   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2468242   +
2468243   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2468244   +
2468245   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2468246   +
2468247   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2468248   +
2468249   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2468250   +
2468251   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2468252   +
2468253   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2468254   +
2468255   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2468256   +
2468257   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2468258   +
2468259   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2468260   +
2468261   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2468262   +
2468263   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2468264   +
2468265   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2468266   +
2468267   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2468268   +
2468269   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2468270   +
2468271   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2468272   +
2468273   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2468274   +
2468275   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2468276   +
2468277   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2468278   +
2468279   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2468280   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2468281   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2468282   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2468283   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2468284   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2468285   +end;
MPRINT(EM_DIAGRAM):   end;
2468286   +else do;
MPRINT(EM_DIAGRAM):   else do;
2468287   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2468288   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2468289   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2468290   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2468291   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2468292   +   end;
MPRINT(EM_DIAGRAM):   end;
2468293   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2468294   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2468295   +   end;
MPRINT(EM_DIAGRAM):   end;
2468296   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2468297   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2468298   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2468299   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2468300   +   end;
MPRINT(EM_DIAGRAM):   end;
2468301   +end;
MPRINT(EM_DIAGRAM):   end;
2468302   +
2468303   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2468304   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2468305   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2468306   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2468307   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2468308   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2468309   +end;
MPRINT(EM_DIAGRAM):   end;
2468310   +else do;
MPRINT(EM_DIAGRAM):   else do;
2468311   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2468312   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2468313   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2468314   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2468315   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2468316   +   end;
MPRINT(EM_DIAGRAM):   end;
2468317   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2468318   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2468319   +   end;
MPRINT(EM_DIAGRAM):   end;
2468320   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2468321   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2468322   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2468323   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2468324   +   end;
MPRINT(EM_DIAGRAM):   end;
2468325   +end;
MPRINT(EM_DIAGRAM):   end;
2468326   +
2468327   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2468328   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2468329   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2468330   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2468331   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2468332   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2468333   +end;
MPRINT(EM_DIAGRAM):   end;
2468334   +else do;
MPRINT(EM_DIAGRAM):   else do;
2468335   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2468336   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2468337   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2468338   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2468339   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2468340   +   end;
MPRINT(EM_DIAGRAM):   end;
2468341   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2468342   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2468343   +   end;
MPRINT(EM_DIAGRAM):   end;
2468344   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2468345   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2468346   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2468347   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2468348   +   end;
MPRINT(EM_DIAGRAM):   end;
2468349   +end;
MPRINT(EM_DIAGRAM):   end;
2468350   +
2468351   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2468352   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2468353   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2468354   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2468355   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2468356   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2468357   +end;
MPRINT(EM_DIAGRAM):   end;
2468358   +else do;
MPRINT(EM_DIAGRAM):   else do;
2468359   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2468360   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2468361   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2468362   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2468363   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2468364   +   end;
MPRINT(EM_DIAGRAM):   end;
2468365   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2468366   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2468367   +   end;
MPRINT(EM_DIAGRAM):   end;
2468368   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2468369   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2468370   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2468371   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2468372   +   end;
MPRINT(EM_DIAGRAM):   end;
2468373   +end;
MPRINT(EM_DIAGRAM):   end;
2468374   +
2468375   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2468376   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2468377   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2468378   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2468379   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2468380   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2468381   +end;
MPRINT(EM_DIAGRAM):   end;
2468382   +else do;
MPRINT(EM_DIAGRAM):   else do;
2468383   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2468384   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2468385   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2468386   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2468387   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2468388   +   end;
MPRINT(EM_DIAGRAM):   end;
2468389   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2468390   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2468391   +   end;
MPRINT(EM_DIAGRAM):   end;
2468392   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2468393   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2468394   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2468395   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2468396   +   end;
MPRINT(EM_DIAGRAM):   end;
2468397   +end;
MPRINT(EM_DIAGRAM):   end;
2468398   +
2468399   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2468400   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2468401   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2468402   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2468403   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2468404   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2468405   +end;
MPRINT(EM_DIAGRAM):   end;
2468406   +else do;
MPRINT(EM_DIAGRAM):   else do;
2468407   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2468408   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2468409   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2468410   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2468411   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2468412   +   end;
MPRINT(EM_DIAGRAM):   end;
2468413   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2468414   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2468415   +   end;
MPRINT(EM_DIAGRAM):   end;
2468416   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2468417   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2468418   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2468419   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2468420   +   end;
MPRINT(EM_DIAGRAM):   end;
2468421   +end;
MPRINT(EM_DIAGRAM):   end;
2468422   +
2468423   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2468424   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2468425   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2468426   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2468427   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2468428   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2468429   +end;
MPRINT(EM_DIAGRAM):   end;
2468430   +else do;
MPRINT(EM_DIAGRAM):   else do;
2468431   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2468432   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2468433   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2468434   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2468435   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2468436   +   end;
MPRINT(EM_DIAGRAM):   end;
2468437   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2468438   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2468439   +   end;
MPRINT(EM_DIAGRAM):   end;
2468440   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2468441   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2468442   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2468443   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2468444   +   end;
MPRINT(EM_DIAGRAM):   end;
2468445   +end;
MPRINT(EM_DIAGRAM):   end;
2468446   +
2468447   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2468448   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
2468449   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2468450   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2468451   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2468452   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2468453   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2468454   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2468455   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2468456   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2468457   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2468458   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2468459   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2468460   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2468461   +end;
MPRINT(EM_DIAGRAM):   end;
2468462   +else do;
MPRINT(EM_DIAGRAM):   else do;
2468463   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2468464   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2468465   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2468466   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2468467   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2468468   +   end;
MPRINT(EM_DIAGRAM):   end;
2468469   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2468470   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2468471   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2468472   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2468473   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2468474   +   end;
MPRINT(EM_DIAGRAM):   end;
2468475   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2468476   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2468477   +   end;
MPRINT(EM_DIAGRAM):   end;
2468478   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2468479   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2468480   +   end;
MPRINT(EM_DIAGRAM):   end;
2468481   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2468482   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2468483   +   end;
MPRINT(EM_DIAGRAM):   end;
2468484   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2468485   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2468486   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2468487   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2468488   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2468489   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2468490   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2468491   +   end;
MPRINT(EM_DIAGRAM):   end;
2468492   +end;
MPRINT(EM_DIAGRAM):   end;
2468493   +
2468494   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2468495   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2468496   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
2468497   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2468498   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2468499   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2468500   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2468501   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2468502   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2468503   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2468504   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2468505   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2468506   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2468507   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2468508   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2468509   +end;
MPRINT(EM_DIAGRAM):   end;
2468510   +else do;
MPRINT(EM_DIAGRAM):   else do;
2468511   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2468512   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2468513   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2468514   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2468515   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2468516   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2468517   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2468518   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2468519   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2468520   +         end;
MPRINT(EM_DIAGRAM):   end;
2468521   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2468522   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2468523   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2468524   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2468525   +            end;
MPRINT(EM_DIAGRAM):   end;
2468526   +         end;
MPRINT(EM_DIAGRAM):   end;
2468527   +      end;
MPRINT(EM_DIAGRAM):   end;
2468528   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2468529   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2468530   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2468531   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2468532   +         end;
MPRINT(EM_DIAGRAM):   end;
2468533   +      end;
MPRINT(EM_DIAGRAM):   end;
2468534   +   end;
MPRINT(EM_DIAGRAM):   end;
2468535   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2468536   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2468537   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2468538   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2468539   +      end;
MPRINT(EM_DIAGRAM):   end;
2468540   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2468541   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2468542   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2468543   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2468544   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2468545   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2468546   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2468547   +         end;
MPRINT(EM_DIAGRAM):   end;
2468548   +      end;
MPRINT(EM_DIAGRAM):   end;
2468549   +   end;
MPRINT(EM_DIAGRAM):   end;
2468550   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2468551   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2468552   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2468553   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2468554   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2468555   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2468556   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2468557   +   end;
MPRINT(EM_DIAGRAM):   end;
2468558   +end;
MPRINT(EM_DIAGRAM):   end;
2468559   +
2468560   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2468561   +*** Checking missing input Interval
2468562   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2468563   +
2468564   +IF NMISS(
2468565   +   AcceptedCmpTotal ,
2468566   +   Age ,
2468567   +   Frq ,
2468568   +   Income ,
2468569   +   Kidhome ,
2468570   +   Mnt ,
2468571   +   MntFishProducts ,
2468572   +   MntFruits ,
2468573   +   MntGoldProds ,
2468574   +   MntMeatProducts ,
2468575   +   MntSweetProducts ,
2468576   +   MntWines ,
2468577   +   MonthsAsCustomer ,
2468578   +   NumCatalogPurchases ,
2468579   +   NumDealsPurchases ,
2468580   +   NumDistPurchases ,
2468581   +   NumStorePurchases ,
2468582   +   NumWebPurchases ,
2468583   +   NumWebVisitsMonth ,
2468584   +   RFMstat ,
2468585   +   RMntFrq ,
2468586   +   Recency ,
2468587   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
2468588   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2468589   +
2468590   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2468591   +END;
MPRINT(EM_DIAGRAM):   END;
2468592   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2468593   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2468594   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2468595   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2468596   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2468597   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2468598   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2468599   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2468600   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2468601   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2468602   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2468603   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2468604   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2468605   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2468606   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2468607   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2468608   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2468609   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2468610   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2468611   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2468612   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2468613   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2468614   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 *
MonthsAsCustomer ;
2468615   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2468616   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2468617   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2468618   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2468619   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2468620   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2468621   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2468622   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2468623   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2468624   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2468625   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2468626   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2468627   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2468628   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2468629   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2468630   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2468631   +END;
MPRINT(EM_DIAGRAM):   END;
2468632   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2468633   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2468634   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2468635   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2468636   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2468637   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2468638   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2468639   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2468640   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2468641   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2468642   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2468643   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2468644   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2468645   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2468646   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2468647   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2468648   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2468649   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2468650   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2468651   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2468652   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2468653   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2468654   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
2468655   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2468656   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2468657   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2468658   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2468659   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2468660   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2468661   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2468662   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2468663   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2468664   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2468665   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 *
MonthsAsCustomer ;
2468666   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2468667   +   ELSE S_NumCatalogPurchases
2468668   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2468669   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2468670   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2468671   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2468672   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2468673   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2468674   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2468675   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2468676   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2468677   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2468678   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2468679   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2468680   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2468681   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2468682   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2468683   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2468684   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2468685   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2468686   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2468687   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2468688   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2468689   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2468690   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2468691   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2468692   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2468693   +END;
MPRINT(EM_DIAGRAM):   END;
2468694   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2468695   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2468696   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2468697   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2468698   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2468699   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2468700   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2468701   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2468702   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2468703   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2468704   +   H1x1_1  =    -0.78941671657664 * S_AcceptedCmpTotal
2468705   +          +     0.31767378900448 * S_Age  +      -0.450304150539 * S_Frq
2468706   +          +     0.13641886985589 * S_Income  +    -0.76390352240561 *
2468707   +        S_Kidhome  +    -0.84654868800943 * S_Mnt  +     0.96945558052651 *
2468708   +        S_MntFishProducts  +     0.16268958674432 * S_MntFruits
2468709   +          +     0.02144447788014 * S_MntGoldProds  +    -3.75090210449464 *
2468710   +        S_MntMeatProducts  +    -0.22086629229442 * S_MntSweetProducts
2468711   +          +      0.8352178457402 * S_MntWines  +     0.16493907873466 *
2468712   +        S_MonthsAsCustomer  +    -1.54607390993048 * S_NumCatalogPurchases
2468713   +          +    -1.12130210731541 * S_NumDealsPurchases
2468714   +          +    -0.12343505299726 * S_NumDistPurchases
2468715   +          +     0.11863092868196 * S_NumStorePurchases
2468716   +          +       0.583917993314 * S_NumWebPurchases
2468717   +          +     0.75529732848146 * S_NumWebVisitsMonth
2468718   +          +    -0.49784215446785 * S_RFMstat  +     0.40580477815146 *
2468719   +        S_RMntFrq  +    -0.95519170979342 * S_Recency
2468720   +          +    -0.44895196625502 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.78941671657664 * S_AcceptedCmpTotal + 0.31767378900448 *
S_Age + -0.450304150539 * S_Frq + 0.13641886985589 * S_Income + -0.76390352240561 * S_Kidhome
+ -0.84654868800943 * S_Mnt + 0.96945558052651 * S_MntFishProducts + 0.16268958674432 *
S_MntFruits + 0.02144447788014 * S_MntGoldProds + -3.75090210449464 * S_MntMeatProducts +
-0.22086629229442 * S_MntSweetProducts + 0.8352178457402 * S_MntWines + 0.16493907873466 *
S_MonthsAsCustomer + -1.54607390993048 * S_NumCatalogPurchases + -1.12130210731541 *
S_NumDealsPurchases + -0.12343505299726 * S_NumDistPurchases + 0.11863092868196 *
S_NumStorePurchases + 0.583917993314 * S_NumWebPurchases + 0.75529732848146 *
S_NumWebVisitsMonth + -0.49784215446785 * S_RFMstat + 0.40580477815146 * S_RMntFrq +
-0.95519170979342 * S_Recency + -0.44895196625502 * S_Teenhome ;
2468721   +   H1x1_2  =    -0.22984864633102 * S_AcceptedCmpTotal
2468722   +          +     0.08901810463204 * S_Age  +    -0.13007664741542 * S_Frq
2468723   +          +    -0.64174617524704 * S_Income  +     0.26599968715733 *
2468724   +        S_Kidhome  +     0.57486260655125 * S_Mnt  +    -0.56033337110694 *
2468725   +        S_MntFishProducts  +     0.16060716517673 * S_MntFruits
2468726   +          +      0.4349197289782 * S_MntGoldProds  +     1.41079767517969 *
2468727   +        S_MntMeatProducts  +      0.0615730534741 * S_MntSweetProducts
2468728   +          +    -0.09057901886639 * S_MntWines  +     0.20260454891291 *
2468729   +        S_MonthsAsCustomer  +    -1.17048742280721 * S_NumCatalogPurchases
2468730   +          +    -0.84113790640734 * S_NumDealsPurchases
2468731   +          +    -0.10512672747147 * S_NumDistPurchases
2468732   +          +     0.07268711782494 * S_NumStorePurchases
2468733   +          +     0.57578331257439 * S_NumWebPurchases
2468734   +          +    -1.34334433506558 * S_NumWebVisitsMonth
2468735   +          +     0.50079465494904 * S_RFMstat  +     0.77329849238514 *
2468736   +        S_RMntFrq  +      1.2759588366983 * S_Recency
2468737   +          +     0.17722493443222 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.22984864633102 * S_AcceptedCmpTotal + 0.08901810463204 *
S_Age + -0.13007664741542 * S_Frq + -0.64174617524704 * S_Income + 0.26599968715733 *
S_Kidhome + 0.57486260655125 * S_Mnt + -0.56033337110694 * S_MntFishProducts +
0.16060716517673 * S_MntFruits + 0.4349197289782 * S_MntGoldProds + 1.41079767517969 *
S_MntMeatProducts + 0.0615730534741 * S_MntSweetProducts + -0.09057901886639 * S_MntWines +
0.20260454891291 * S_MonthsAsCustomer + -1.17048742280721 * S_NumCatalogPurchases +
-0.84113790640734 * S_NumDealsPurchases + -0.10512672747147 * S_NumDistPurchases +
0.07268711782494 * S_NumStorePurchases + 0.57578331257439 * S_NumWebPurchases +
-1.34334433506558 * S_NumWebVisitsMonth + 0.50079465494904 * S_RFMstat + 0.77329849238514 *
S_RMntFrq + 1.2759588366983 * S_Recency + 0.17722493443222 * S_Teenhome ;
2468738   +   H1x1_3  =      1.1751297152411 * S_AcceptedCmpTotal
2468739   +          +     0.14380060376858 * S_Age  +    -0.90459868540245 * S_Frq
2468740   +          +     0.65570498233801 * S_Income  +    -0.66078213466597 *
2468741   +        S_Kidhome  +      0.5364727654141 * S_Mnt  +    -0.56452823521458 *
2468742   +        S_MntFishProducts  +     0.11401811215013 * S_MntFruits
2468743   +          +     0.42809239636494 * S_MntGoldProds  +     3.28485519579047 *
2468744   +        S_MntMeatProducts  +    -0.10959477301368 * S_MntSweetProducts
2468745   +          +     -0.5779524716069 * S_MntWines  +     0.08256957915579 *
2468746   +        S_MonthsAsCustomer  +     0.48195221766948 * S_NumCatalogPurchases
2468747   +          +     0.45924983504762 * S_NumDealsPurchases
2468748   +          +    -0.25508041581692 * S_NumDistPurchases
2468749   +          +    -1.34901283858526 * S_NumStorePurchases
2468750   +          +    -0.86388975031663 * S_NumWebPurchases
2468751   +          +     1.86136110391797 * S_NumWebVisitsMonth
2468752   +          +     0.39724376701426 * S_RFMstat  +    -1.08648755949459 *
2468753   +        S_RMntFrq  +    -2.06955456943047 * S_Recency
2468754   +          +     -0.6524420065858 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.1751297152411 * S_AcceptedCmpTotal + 0.14380060376858 * S_Age
+ -0.90459868540245 * S_Frq + 0.65570498233801 * S_Income + -0.66078213466597 * S_Kidhome +
0.5364727654141 * S_Mnt + -0.56452823521458 * S_MntFishProducts + 0.11401811215013 *
S_MntFruits + 0.42809239636494 * S_MntGoldProds + 3.28485519579047 * S_MntMeatProducts +
-0.10959477301368 * S_MntSweetProducts + -0.5779524716069 * S_MntWines + 0.08256957915579 *
S_MonthsAsCustomer + 0.48195221766948 * S_NumCatalogPurchases + 0.45924983504762 *
S_NumDealsPurchases + -0.25508041581692 * S_NumDistPurchases + -1.34901283858526 *
S_NumStorePurchases + -0.86388975031663 * S_NumWebPurchases + 1.86136110391797 *
S_NumWebVisitsMonth + 0.39724376701426 * S_RFMstat + -1.08648755949459 * S_RMntFrq +
-2.06955456943047 * S_Recency + -0.6524420065858 * S_Teenhome ;
2468755   +   H1x1_1  = H1x1_1  +     0.80545309346785 * AcceptedCmp10
2468756   +          +    -0.33518398776018 * AcceptedCmp20  +    -0.58961939502901 *
2468757   +        AcceptedCmp30  +    -0.89675052404295 * AcceptedCmp40
2468758   +          +     0.75506592249683 * AcceptedCmp50  +    -0.07335613460961 *
2468759   +        Complain0  +     0.34255762261501 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.80545309346785 * AcceptedCmp10 + -0.33518398776018 *
AcceptedCmp20 + -0.58961939502901 * AcceptedCmp30 + -0.89675052404295 * AcceptedCmp40 +
0.75506592249683 * AcceptedCmp50 + -0.07335613460961 * Complain0 + 0.34255762261501 *
HigherEducationBinary0 ;
2468760   +   H1x1_2  = H1x1_2  +    -0.17834267108797 * AcceptedCmp10
2468761   +          +    -0.54414628806984 * AcceptedCmp20  +      0.8037591997808 *
2468762   +        AcceptedCmp30  +     0.37789561997689 * AcceptedCmp40
2468763   +          +    -1.39910847665731 * AcceptedCmp50  +    -0.44783176263268 *
2468764   +        Complain0  +     0.36763760090773 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.17834267108797 * AcceptedCmp10 + -0.54414628806984
* AcceptedCmp20 + 0.8037591997808 * AcceptedCmp30 + 0.37789561997689 * AcceptedCmp40 +
-1.39910847665731 * AcceptedCmp50 + -0.44783176263268 * Complain0 + 0.36763760090773 *
HigherEducationBinary0 ;
2468765   +   H1x1_3  = H1x1_3  +    -0.20323890063703 * AcceptedCmp10
2468766   +          +    -0.08537895761507 * AcceptedCmp20  +     0.22533818089504 *
2468767   +        AcceptedCmp30  +    -0.22195995100127 * AcceptedCmp40
2468768   +          +    -2.01371926977123 * AcceptedCmp50  +    -0.17097719978842 *
2468769   +        Complain0  +     0.34016905753094 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.20323890063703 * AcceptedCmp10 + -0.08537895761507
* AcceptedCmp20 + 0.22533818089504 * AcceptedCmp30 + -0.22195995100127 * AcceptedCmp40 +
-2.01371926977123 * AcceptedCmp50 + -0.17097719978842 * Complain0 + 0.34016905753094 *
HigherEducationBinary0 ;
2468770   +   H1x1_1  = H1x1_1  +    -0.03394180683805 * Education2n_Cycle
2468771   +          +    -0.38224926448988 * EducationBasic  +    -0.42512289883041 *
2468772   +        EducationGraduation  +    -0.59708578424036 * EducationMaster
2468773   +          +     0.48853068455666 * Marital_StatusDivorced
2468774   +          +    -0.54903474026465 * Marital_StatusMarried
2468775   +          +    -0.34079188373939 * Marital_StatusSingle
2468776   +          +    -0.64602969938868 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.03394180683805 * Education2n_Cycle +
-0.38224926448988 * EducationBasic + -0.42512289883041 * EducationGraduation +
-0.59708578424036 * EducationMaster + 0.48853068455666 * Marital_StatusDivorced +
-0.54903474026465 * Marital_StatusMarried + -0.34079188373939 * Marital_StatusSingle +
-0.64602969938868 * Marital_StatusTogether ;
2468777   +   H1x1_2  = H1x1_2  +    -0.26170943801998 * Education2n_Cycle
2468778   +          +     0.06893871459175 * EducationBasic  +    -0.84123174187664 *
2468779   +        EducationGraduation  +     0.19038549912088 * EducationMaster
2468780   +          +    -1.03547689902027 * Marital_StatusDivorced
2468781   +          +     2.42164864610471 * Marital_StatusMarried
2468782   +          +    -1.95342561304942 * Marital_StatusSingle
2468783   +          +      2.1397185142046 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.26170943801998 * Education2n_Cycle +
0.06893871459175 * EducationBasic + -0.84123174187664 * EducationGraduation + 0.19038549912088
* EducationMaster + -1.03547689902027 * Marital_StatusDivorced + 2.42164864610471 *
Marital_StatusMarried + -1.95342561304942 * Marital_StatusSingle + 2.1397185142046 *
Marital_StatusTogether ;
2468784   +   H1x1_3  = H1x1_3  +    -0.04236694810886 * Education2n_Cycle
2468785   +          +    -0.57404276980591 * EducationBasic  +     -0.1441989834351 *
2468786   +        EducationGraduation  +    -0.31867831184924 * EducationMaster
2468787   +          +      0.4337638747935 * Marital_StatusDivorced
2468788   +          +    -0.38508657017615 * Marital_StatusMarried
2468789   +          +     -0.0160269708326 * Marital_StatusSingle
2468790   +          +    -0.57491004270903 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.04236694810886 * Education2n_Cycle +
-0.57404276980591 * EducationBasic + -0.1441989834351 * EducationGraduation +
-0.31867831184924 * EducationMaster + 0.4337638747935 * Marital_StatusDivorced +
-0.38508657017615 * Marital_StatusMarried + -0.0160269708326 * Marital_StatusSingle +
-0.57491004270903 * Marital_StatusTogether ;
2468791   +   H1x1_1  =    -0.53426188790968 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.53426188790968 + H1x1_1 ;
2468792   +   H1x1_2  =     0.98557066823746 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.98557066823746 + H1x1_2 ;
2468793   +   H1x1_3  =     1.81937688438175 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.81937688438175 + H1x1_3 ;
2468794   +   H1x1_4  = 0;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0;
2468795   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
2468796   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2468797   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
2468798   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
2468799   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
2468800   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
2468801   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
2468802   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
2468803   +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
2468804   +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
2468805   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
2468806   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
2468807   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
2468808   +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
2468809   +END;
MPRINT(EM_DIAGRAM):   END;
2468810   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2468811   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2468812   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2468813   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2468814   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2468815   +END;
MPRINT(EM_DIAGRAM):   END;
2468816   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2468817   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2468818   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2468819   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2468820   +   P_DepVar1  =    -3.43702380277695 * H1x1_1  +    -7.14235896425537 * H1x1_2
2468821   +          +     10.8296305415538 * H1x1_3  +    -2.20824183229369 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.43702380277695 * H1x1_1 + -7.14235896425537 * H1x1_2 +
10.8296305415538 * H1x1_3 + -2.20824183229369 * H1x1_4 ;
2468822   +   P_DepVar1  =    -3.68304614366462 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.68304614366462 + P_DepVar1 ;
2468823   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2468824   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2468825   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2468826   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2468827   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2468828   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2468829   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2468830   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2468831   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2468832   +END;
MPRINT(EM_DIAGRAM):   END;
2468833   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2468834   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2468835   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2468836   +END;
MPRINT(EM_DIAGRAM):   END;
2468837   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2468838   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2468839   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2468840   +END;
MPRINT(EM_DIAGRAM):   END;
2468841   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2468842   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2468843   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2468844   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2468845   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2468846   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2468847   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2468848   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2468849   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2468850   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2468851   +END;
MPRINT(EM_DIAGRAM):   END;
2468852   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2468853   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2468854   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2468855   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2468856    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2468857    quit;
2468858    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2468859    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2468860    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2468861    retain ID 2 Node "AutoNeural9";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural9";
2468862    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2468863    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2632 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2632 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2468864    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2468865    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2468866    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2632 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2632 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2468867    proc sort data=EMWS8.AutoNeural9_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural9_variableset out=_temp2(keep=NAME
CREATOR);
2468868    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2468869    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL9_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2468870    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2468871    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2468872    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2468873    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2468874    proc contents data=EMWS8.AutoNeural9_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural9_train out=_meta(keep=NAME) noprint;
2468875    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 57 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
2468876    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2468877    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2468878    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 57 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 57 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2468879    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2468880    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2468881    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2468882    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 57 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 57 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2468883    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2468884    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2468884  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1551 rows and 5 columns.
 
2468885    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2468886    proc append base=EMWS8.Ensmbl46_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl46_FCMP data=_tempx;
2468887    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL46_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1551 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL46_FCMP has 1551 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2468888    filename _pref
2468888  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
2468889    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2468890    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
2468891   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2468892   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
2468893   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2468894   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
2468895   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
2468896   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2468897    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2468898    quit;
2468899    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2468900    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2468901    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2468902    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
2468903    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2468904    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2468905    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2468906    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2468907    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2468908    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
2468909    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2468910    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2468911    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2468912    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2468913    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2468914    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2468915    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
2468916    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
2468917    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2468918    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2468919    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2468920    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2468921    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2468922    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2468923    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2468924    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2468925    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2468925  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
2468926    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2468927    proc append base=EMWS8.Ensmbl46_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl46_FCMP data=_tempx;
2468928    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL46_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL46_FCMP has 1555 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2468929    filename _pref
2468929  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
2468930    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2468931    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
2468932   +
2468933   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
2468934   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
2468934  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
2468935   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
2468936   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
2468937   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
2468938   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
2468939   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2468940    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2468941    quit;
2468942    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2468943    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2468944    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2468945    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
2468946    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2468947    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2468948    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2468949    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2468950    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2468951    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
2468952    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2468953    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2468954    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2468955    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2468956    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2468957    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2468958    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
2468959    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2468960    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2468961    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2468962    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2468963    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2468964    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2468965    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2468966    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2468967    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2468968    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2468968  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
2468969    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2468970    proc append base=EMWS8.Ensmbl46_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl46_FCMP data=_tempx;
2468971    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL46_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL46_FCMP has 1594 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2468972    filename _pref
2468972  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
2468973    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2468974    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
2468975   +
2468976   +
2468977   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
2468978   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
2468979   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
2468980   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
2468981   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
2468982   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2468983   +
2468984   +
2468985   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
2468986   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
2468987   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
2468988   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
2468989   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
2468990   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2468991   +
2468992   +
2468993   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
2468994   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
2468995   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
2468996   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
2468997   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
2468998   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2468999   +
2469000   +
2469001   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
2469002   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
2469003   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
2469004   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
2469005   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
2469006   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2469007   +
2469008   +
2469009   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
2469010   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
2469011   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
2469012   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
2469013   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
2469014   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2469015   +
2469016   +
2469017   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
2469018   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
2469019   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
2469020   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
2469021   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
2469022   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2469023   +
2469024   +
2469025   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
2469026   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
2469027   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
2469028   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
2469029   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
2469030   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2469031   +
2469032   +
2469033   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
2469034   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
2469035   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
2469036   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
2469037   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
2469038   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2469039   +if
2469040   +_FILTERNORM1 not in ( '.')
2469041   + and
2469042   +_FILTERNORM2 not in ( '.')
2469043   + and
2469044   +_FILTERNORM3 not in ( '.')
2469045   + and
2469046   +_FILTERNORM4 not in ( '.')
2469047   + and
2469048   +_FILTERNORM5 not in ( '.')
2469049   + and
2469050   +_FILTERNORM6 not in ( '.')
2469051   + and
2469052   +_FILTERNORM7 not in ( ' ')
2469053   + and
2469054   +_FILTERNORM8 not in ( ' ')
2469055   +and
2469056   +( Dt_Customer ne .)
2469057   +and ( Income ne . and (Income<=107000))
2469058   +and ( Kidhome ne .)
2469059   +and ( MntFishProducts ne .)
2469060   +and ( MntFruits ne .)
2469061   +and ( MntGoldProds ne .)
2469062   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
2469063   +and ( MntSweetProducts ne .)
2469064   +and ( MntWines ne .)
2469065   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
2469066   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
2469067   +and ( NumStorePurchases ne .)
2469068   +and ( NumWebPurchases ne .)
2469069   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
2469070   +and ( Recency ne .)
2469071   +and ( Teenhome ne .)
2469072   +and ( Year_Birth ne .)
2469073   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
2469074   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
2469075   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
2469076   +end;
MPRINT(EM_DIAGRAM):   end;
2469077   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
2469078   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2469079    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2469080    quit;
2469081    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2469082    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2469083    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2469084    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
2469085    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2469086    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2469087    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2469088    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2469089    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2469090    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
2469091    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2469092    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2469093    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2469094    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2469095    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2469096    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2469097    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
2469098    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
2469099    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2469100    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2469101    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2469102    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2469103    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2469104    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2469105    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2469106    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2469107    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2469107  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
2469108    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2469109    proc append base=EMWS8.Ensmbl46_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl46_FCMP data=_tempx;
2469110    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL46_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL46_FCMP has 1660 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2469111    %macro varDept(fcmpdata=,id=);
2469112    %global nobs&id scoreFlag&id;
2469113    %let scoreFlag&id = 0;
2469114    %if &id=1 or ^&fcmpStart %then %do;
2469115    proc sort data=&fcmpdata out=_temp&id nodupkey;
2469116    by NAME;
2469117    where id=&id and LHS in( %let j=1;
2469118    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
2469119    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
2469120    "&var" %let j = %eval(&j+1);
2469121    %end;
2469122    );
2469123    run;
2469124    %let dsid = %sysfunc(open(_temp&id));
2469125    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2469126    %let dsid = %sysfunc(close(&dsid));
2469127    %if &&nobs&id %then %do;
2469128    %let scoreFlag&id = 1;
2469129    %let fcmpStart = 1;
2469130    %end;
2469131    %else %let fcmpStart = 0;
2469132    %end;
2469133    %else %do;
2469134    proc sort data=&fcmpdata out=_tempid;
2469135    where id=&id;
2469136    by LHS;
2469137    run;
2469138    %let dsid = %sysfunc(open(_tempid));
2469139    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2469140    %let dsid = %sysfunc(close(&dsid));
2469141    %if ^&&nobs&id %then %do;
2469142    proc datasets lib=work nolist;
2469143    delete _tempid;
2469144    run;
2469145    quit;
2469146    %end;
2469147    %else %do;
2469148    data _tempAll;
2469149    set %let j=%eval(&id-1);
2469150    %do x=1 %to &j;
2469151    %if &&nobs&x %then %do;
2469152    _temp&x %end;
2469153    %end;
2469154    ;
2469155    run;
2469156    proc sql;
2469157    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
2469157  ! work._tempid p2 where p.name=p2.lhs;
2469158    quit;
2469159    data _temp&id;
2469160    set _temp&id;
2469161    where LHS ne '' and NAME ne '' and Node ne '';
2469162    run;
2469163    proc datasets lib=work nolist;
2469164    delete _tempAll;
2469165    run;
2469166    %let dsid = %sysfunc(open(_temp&id));
2469167    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2469168    %let dsid = %sysfunc(close(&dsid));
2469169    %if ^&&nobs&id %then %do;
2469170    proc datasets lib=work nolist;
2469171    delete _temp&id;
2469172    run;
2469173    quit;
2469174    %end;
2469175    %else %do;
2469176    %let scoreFlag&id = 1;
2469177    data _temp&id;
2469178    set _temp&id;
2469179    where LHS ne NAME and node ne '';
2469180    run;
2469181    %let dsid = %sysfunc(open(_temp&id));
2469182    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2469183    %let dsid = %sysfunc(close(&dsid));
2469184    %if ^&&nobs&id %then %do;
2469185    proc datasets lib=work nolist;
2469186    delete _temp&id;
2469187    run;
2469188    quit;
2469189    %end;
2469190    %else %do;
2469191    proc sort data=_temp&id nodupkey;
2469192    by LHS NAME;
2469193    run;
2469194    %end;
2469195    %end;
2469196    %end;
2469197    %end;
2469198    %mend varDept;
2469199    %macro optCode(outdata=fcmpdata);
2469200    %global fcmpStart;
2469201    %let fcmpStart = 0;
2469202    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
2469203    %let NumNodes=9;
2469204    %do k=1 %to &NumNodes;
2469205    %vardept(fcmpdata=&outdata, id=&k);
2469206    %end;
2469207    %mend optCode;
2469208    %optcode(outData=EMWS8.Ensmbl46_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl46_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL46_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl46_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 146 observations read from the data set EMWS8.ENSMBL46_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 108 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 38 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl46_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL46_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.19 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl46_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL46_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl46_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL46_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 38 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 38 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl46_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL46_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 38 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 42 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl46_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL46_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 38 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 81 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl46_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL46_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl46_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL46_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
2469209    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
2469210    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
2469211    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
2469212    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2469213    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
2469214    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
2469215    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
2469216    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2469217    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2469218    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
2469218  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.
 
2469219    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
2469220    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
2469221    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
2469222    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2469223    filename _pref
2469223  ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural11\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural11\EMPUBLISHSCORE.sas";
2469224    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2469225    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural11\EMPUBLISHSCORE.sas.
2469226   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2469227   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2469228   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2469229   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2469230   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2469231   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2469232   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2469233   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2469234   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2469235   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2469236   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2469237   +LENGTH _WARN_ $4
2469238   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
2469239   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2469240   +
2469241   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2469242   +
2469243   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2469244   +
2469245   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2469246   +
2469247   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2469248   +
2469249   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2469250   +
2469251   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2469252   +
2469253   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2469254   +
2469255   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2469256   +
2469257   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2469258   +
2469259   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2469260   +
2469261   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2469262   +
2469263   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2469264   +
2469265   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2469266   +
2469267   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2469268   +
2469269   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2469270   +
2469271   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2469272   +
2469273   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2469274   +
2469275   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2469276   +
2469277   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2469278   +
2469279   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2469280   +
2469281   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2469282   +
2469283   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2469284   +
2469285   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2469286   +
2469287   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2469288   +
2469289   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2469290   +
2469291   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2469292   +
2469293   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2469294   +
2469295   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2469296   +
2469297   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2469298   +
2469299   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2469300   +
2469301   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2469302   +
2469303   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2469304   +
2469305   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2469306   +
2469307   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2469308   +
2469309   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2469310   +
2469311   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2469312   +
2469313   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2469314   +
2469315   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2469316   +
2469317   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2469318   +
2469319   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2469320   +
2469321   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2469322   +
2469323   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
2469324   +
2469325   +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
2469326   +
2469327   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
2469328   +
2469329   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
2469330   +
2469331   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
2469332   +
2469333   +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
2469334   +
2469335   +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
2469336   +
2469337   +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
2469338   +
2469339   +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
2469340   +
2469341   +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
2469342   +
2469343   +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
2469344   +
2469345   +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
2469346   +
2469347   +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
2469348   +
2469349   +      label H2x1_6 = 'Hidden: H2x1_=6' ;
MPRINT(EM_DIAGRAM):   label H2x1_6 = 'Hidden: H2x1_=6' ;
2469350   +
2469351   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2469352   +
2469353   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2469354   +
2469355   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2469356   +
2469357   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2469358   +
2469359   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2469360   +
2469361   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2469362   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2469363   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2469364   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2469365   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2469366   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2469367   +end;
MPRINT(EM_DIAGRAM):   end;
2469368   +else do;
MPRINT(EM_DIAGRAM):   else do;
2469369   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2469370   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2469371   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2469372   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2469373   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2469374   +   end;
MPRINT(EM_DIAGRAM):   end;
2469375   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2469376   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2469377   +   end;
MPRINT(EM_DIAGRAM):   end;
2469378   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2469379   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2469380   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2469381   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2469382   +   end;
MPRINT(EM_DIAGRAM):   end;
2469383   +end;
MPRINT(EM_DIAGRAM):   end;
2469384   +
2469385   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2469386   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2469387   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2469388   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2469389   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2469390   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2469391   +end;
MPRINT(EM_DIAGRAM):   end;
2469392   +else do;
MPRINT(EM_DIAGRAM):   else do;
2469393   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2469394   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2469395   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2469396   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2469397   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2469398   +   end;
MPRINT(EM_DIAGRAM):   end;
2469399   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2469400   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2469401   +   end;
MPRINT(EM_DIAGRAM):   end;
2469402   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2469403   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2469404   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2469405   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2469406   +   end;
MPRINT(EM_DIAGRAM):   end;
2469407   +end;
MPRINT(EM_DIAGRAM):   end;
2469408   +
2469409   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2469410   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2469411   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2469412   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2469413   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2469414   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2469415   +end;
MPRINT(EM_DIAGRAM):   end;
2469416   +else do;
MPRINT(EM_DIAGRAM):   else do;
2469417   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2469418   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2469419   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2469420   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2469421   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2469422   +   end;
MPRINT(EM_DIAGRAM):   end;
2469423   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2469424   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2469425   +   end;
MPRINT(EM_DIAGRAM):   end;
2469426   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2469427   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2469428   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2469429   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2469430   +   end;
MPRINT(EM_DIAGRAM):   end;
2469431   +end;
MPRINT(EM_DIAGRAM):   end;
2469432   +
2469433   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2469434   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2469435   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2469436   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2469437   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2469438   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2469439   +end;
MPRINT(EM_DIAGRAM):   end;
2469440   +else do;
MPRINT(EM_DIAGRAM):   else do;
2469441   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2469442   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2469443   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2469444   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2469445   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2469446   +   end;
MPRINT(EM_DIAGRAM):   end;
2469447   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2469448   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2469449   +   end;
MPRINT(EM_DIAGRAM):   end;
2469450   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2469451   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2469452   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2469453   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2469454   +   end;
MPRINT(EM_DIAGRAM):   end;
2469455   +end;
MPRINT(EM_DIAGRAM):   end;
2469456   +
2469457   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2469458   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2469459   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2469460   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2469461   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2469462   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2469463   +end;
MPRINT(EM_DIAGRAM):   end;
2469464   +else do;
MPRINT(EM_DIAGRAM):   else do;
2469465   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2469466   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2469467   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2469468   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2469469   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2469470   +   end;
MPRINT(EM_DIAGRAM):   end;
2469471   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2469472   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2469473   +   end;
MPRINT(EM_DIAGRAM):   end;
2469474   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2469475   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2469476   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2469477   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2469478   +   end;
MPRINT(EM_DIAGRAM):   end;
2469479   +end;
MPRINT(EM_DIAGRAM):   end;
2469480   +
2469481   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2469482   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2469483   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2469484   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2469485   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2469486   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2469487   +end;
MPRINT(EM_DIAGRAM):   end;
2469488   +else do;
MPRINT(EM_DIAGRAM):   else do;
2469489   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2469490   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2469491   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2469492   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2469493   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2469494   +   end;
MPRINT(EM_DIAGRAM):   end;
2469495   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2469496   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2469497   +   end;
MPRINT(EM_DIAGRAM):   end;
2469498   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2469499   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2469500   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2469501   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2469502   +   end;
MPRINT(EM_DIAGRAM):   end;
2469503   +end;
MPRINT(EM_DIAGRAM):   end;
2469504   +
2469505   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2469506   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2469507   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2469508   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2469509   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2469510   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2469511   +end;
MPRINT(EM_DIAGRAM):   end;
2469512   +else do;
MPRINT(EM_DIAGRAM):   else do;
2469513   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2469514   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2469515   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2469516   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2469517   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2469518   +   end;
MPRINT(EM_DIAGRAM):   end;
2469519   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2469520   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2469521   +   end;
MPRINT(EM_DIAGRAM):   end;
2469522   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2469523   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2469524   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2469525   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2469526   +   end;
MPRINT(EM_DIAGRAM):   end;
2469527   +end;
MPRINT(EM_DIAGRAM):   end;
2469528   +
2469529   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2469530   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
2469531   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2469532   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2469533   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2469534   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2469535   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2469536   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2469537   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2469538   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2469539   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2469540   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2469541   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2469542   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2469543   +end;
MPRINT(EM_DIAGRAM):   end;
2469544   +else do;
MPRINT(EM_DIAGRAM):   else do;
2469545   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2469546   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2469547   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2469548   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2469549   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2469550   +   end;
MPRINT(EM_DIAGRAM):   end;
2469551   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2469552   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2469553   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2469554   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2469555   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2469556   +   end;
MPRINT(EM_DIAGRAM):   end;
2469557   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2469558   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2469559   +   end;
MPRINT(EM_DIAGRAM):   end;
2469560   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2469561   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2469562   +   end;
MPRINT(EM_DIAGRAM):   end;
2469563   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2469564   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2469565   +   end;
MPRINT(EM_DIAGRAM):   end;
2469566   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2469567   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2469568   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2469569   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2469570   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2469571   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2469572   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2469573   +   end;
MPRINT(EM_DIAGRAM):   end;
2469574   +end;
MPRINT(EM_DIAGRAM):   end;
2469575   +
2469576   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2469577   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2469578   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
2469579   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2469580   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2469581   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2469582   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2469583   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2469584   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2469585   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2469586   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2469587   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2469588   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2469589   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2469590   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2469591   +end;
MPRINT(EM_DIAGRAM):   end;
2469592   +else do;
MPRINT(EM_DIAGRAM):   else do;
2469593   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2469594   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2469595   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2469596   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2469597   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2469598   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2469599   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2469600   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2469601   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2469602   +         end;
MPRINT(EM_DIAGRAM):   end;
2469603   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2469604   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2469605   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2469606   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2469607   +            end;
MPRINT(EM_DIAGRAM):   end;
2469608   +         end;
MPRINT(EM_DIAGRAM):   end;
2469609   +      end;
MPRINT(EM_DIAGRAM):   end;
2469610   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2469611   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2469612   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2469613   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2469614   +         end;
MPRINT(EM_DIAGRAM):   end;
2469615   +      end;
MPRINT(EM_DIAGRAM):   end;
2469616   +   end;
MPRINT(EM_DIAGRAM):   end;
2469617   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2469618   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2469619   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2469620   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2469621   +      end;
MPRINT(EM_DIAGRAM):   end;
2469622   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2469623   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2469624   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2469625   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2469626   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2469627   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2469628   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2469629   +         end;
MPRINT(EM_DIAGRAM):   end;
2469630   +      end;
MPRINT(EM_DIAGRAM):   end;
2469631   +   end;
MPRINT(EM_DIAGRAM):   end;
2469632   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2469633   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2469634   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2469635   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2469636   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2469637   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2469638   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2469639   +   end;
MPRINT(EM_DIAGRAM):   end;
2469640   +end;
MPRINT(EM_DIAGRAM):   end;
2469641   +
2469642   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2469643   +*** Checking missing input Interval
2469644   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2469645   +
2469646   +IF NMISS(
2469647   +   AcceptedCmpTotal ,
2469648   +   Age ,
2469649   +   Frq ,
2469650   +   Income ,
2469651   +   Kidhome ,
2469652   +   Mnt ,
2469653   +   MntFishProducts ,
2469654   +   MntFruits ,
2469655   +   MntGoldProds ,
2469656   +   MntMeatProducts ,
2469657   +   MntSweetProducts ,
2469658   +   MntWines ,
2469659   +   MonthsAsCustomer ,
2469660   +   NumCatalogPurchases ,
2469661   +   NumDealsPurchases ,
2469662   +   NumDistPurchases ,
2469663   +   NumStorePurchases ,
2469664   +   NumWebPurchases ,
2469665   +   NumWebVisitsMonth ,
2469666   +   RFMstat ,
2469667   +   RMntFrq ,
2469668   +   Recency ,
2469669   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
2469670   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2469671   +
2469672   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2469673   +END;
MPRINT(EM_DIAGRAM):   END;
2469674   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2469675   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2469676   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2469677   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2469678   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2469679   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2469680   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2469681   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2469682   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2469683   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2469684   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2469685   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2469686   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2469687   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2469688   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2469689   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2469690   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2469691   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2469692   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2469693   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2469694   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2469695   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2469696   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 *
MonthsAsCustomer ;
2469697   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2469698   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2469699   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2469700   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2469701   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2469702   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2469703   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2469704   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2469705   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2469706   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2469707   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2469708   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2469709   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2469710   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2469711   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2469712   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2469713   +END;
MPRINT(EM_DIAGRAM):   END;
2469714   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2469715   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2469716   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2469717   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2469718   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2469719   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2469720   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2469721   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2469722   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2469723   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2469724   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2469725   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2469726   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2469727   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2469728   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2469729   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2469730   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2469731   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2469732   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2469733   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2469734   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2469735   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2469736   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
2469737   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2469738   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2469739   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2469740   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2469741   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2469742   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2469743   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2469744   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2469745   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2469746   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2469747   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 *
MonthsAsCustomer ;
2469748   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2469749   +   ELSE S_NumCatalogPurchases
2469750   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2469751   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2469752   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2469753   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2469754   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2469755   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2469756   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2469757   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2469758   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2469759   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2469760   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2469761   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2469762   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2469763   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2469764   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2469765   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2469766   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2469767   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2469768   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2469769   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2469770   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2469771   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2469772   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2469773   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2469774   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2469775   +END;
MPRINT(EM_DIAGRAM):   END;
2469776   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2469777   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2469778   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2469779   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2469780   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2469781   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2469782   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2469783   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2469784   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2469785   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2469786   +   H1x1_1  =     0.16786131610493 * S_AcceptedCmpTotal
2469787   +          +     0.08150129707008 * S_Age  +    -0.00076335149511 * S_Frq
2469788   +          +     2.37648351383272 * S_Income  +    -1.63260278456818 *
2469789   +        S_Kidhome  +     -0.6720941090663 * S_Mnt  +    -0.03176174297509 *
2469790   +        S_MntFishProducts  +    -0.03796990721617 * S_MntFruits
2469791   +          +    -0.17020485447842 * S_MntGoldProds  +      0.7709093878281 *
2469792   +        S_MntMeatProducts  +    -0.26168538456938 * S_MntSweetProducts
2469793   +          +    -1.36275284328546 * S_MntWines  +    -0.30344694826738 *
2469794   +        S_MonthsAsCustomer  +     1.68662611500615 * S_NumCatalogPurchases
2469795   +          +     1.32037113020393 * S_NumDealsPurchases
2469796   +          +     0.42879249227132 * S_NumDistPurchases
2469797   +          +    -0.89190172778783 * S_NumStorePurchases
2469798   +          +    -0.87975442613962 * S_NumWebPurchases
2469799   +          +     2.98977282825831 * S_NumWebVisitsMonth
2469800   +          +     0.16388418187981 * S_RFMstat  +     0.63858980984599 *
2469801   +        S_RMntFrq  +    -2.53833222281652 * S_Recency
2469802   +          +    -2.72141665283523 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.16786131610493 * S_AcceptedCmpTotal + 0.08150129707008 *
S_Age + -0.00076335149511 * S_Frq + 2.37648351383272 * S_Income + -1.63260278456818 *
S_Kidhome + -0.6720941090663 * S_Mnt + -0.03176174297509 * S_MntFishProducts +
-0.03796990721617 * S_MntFruits + -0.17020485447842 * S_MntGoldProds + 0.7709093878281 *
S_MntMeatProducts + -0.26168538456938 * S_MntSweetProducts + -1.36275284328546 * S_MntWines +
-0.30344694826738 * S_MonthsAsCustomer + 1.68662611500615 * S_NumCatalogPurchases +
1.32037113020393 * S_NumDealsPurchases + 0.42879249227132 * S_NumDistPurchases +
-0.89190172778783 * S_NumStorePurchases + -0.87975442613962 * S_NumWebPurchases +
2.98977282825831 * S_NumWebVisitsMonth + 0.16388418187981 * S_RFMstat + 0.63858980984599 *
S_RMntFrq + -2.53833222281652 * S_Recency + -2.72141665283523 * S_Teenhome ;
2469803   +   H1x1_2  =    -1.16140709294501 * S_AcceptedCmpTotal
2469804   +          +    -0.87210661607894 * S_Age  +    -0.15365607228782 * S_Frq
2469805   +          +    -1.14855351318782 * S_Income  +     -0.3792851632462 *
2469806   +        S_Kidhome  +    -1.20412080219233 * S_Mnt  +     0.98615533034973 *
2469807   +        S_MntFishProducts  +     0.44541456963703 * S_MntFruits
2469808   +          +    -0.86465923336111 * S_MntGoldProds  +    -5.15063925950455 *
2469809   +        S_MntMeatProducts  +     0.54937255903381 * S_MntSweetProducts
2469810   +          +      1.1566197343428 * S_MntWines  +     1.05956341559861 *
2469811   +        S_MonthsAsCustomer  +    -1.51353620179805 * S_NumCatalogPurchases
2469812   +          +    -1.16737670931605 * S_NumDealsPurchases
2469813   +          +     0.08205195039242 * S_NumDistPurchases
2469814   +          +    -0.65367044520084 * S_NumStorePurchases
2469815   +          +     2.39693083674757 * S_NumWebPurchases
2469816   +          +     0.18432526469897 * S_NumWebVisitsMonth
2469817   +          +    -0.81660690569703 * S_RFMstat  +      0.2679378370467 *
2469818   +        S_RMntFrq  +    -0.12214066685673 * S_Recency
2469819   +          +     1.80138107382539 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -1.16140709294501 * S_AcceptedCmpTotal + -0.87210661607894 *
S_Age + -0.15365607228782 * S_Frq + -1.14855351318782 * S_Income + -0.3792851632462 *
S_Kidhome + -1.20412080219233 * S_Mnt + 0.98615533034973 * S_MntFishProducts +
0.44541456963703 * S_MntFruits + -0.86465923336111 * S_MntGoldProds + -5.15063925950455 *
S_MntMeatProducts + 0.54937255903381 * S_MntSweetProducts + 1.1566197343428 * S_MntWines +
1.05956341559861 * S_MonthsAsCustomer + -1.51353620179805 * S_NumCatalogPurchases +
-1.16737670931605 * S_NumDealsPurchases + 0.08205195039242 * S_NumDistPurchases +
-0.65367044520084 * S_NumStorePurchases + 2.39693083674757 * S_NumWebPurchases +
0.18432526469897 * S_NumWebVisitsMonth + -0.81660690569703 * S_RFMstat + 0.2679378370467 *
S_RMntFrq + -0.12214066685673 * S_Recency + 1.80138107382539 * S_Teenhome ;
2469820   +   H1x1_3  =      2.0905555295419 * S_AcceptedCmpTotal
2469821   +          +    -0.23515107640805 * S_Age  +    -0.34980320997139 * S_Frq
2469822   +          +     0.96612788543649 * S_Income  +    -0.57035066115881 *
2469823   +        S_Kidhome  +     0.22762934410578 * S_Mnt  +    -0.52536382903021 *
2469824   +        S_MntFishProducts  +    -1.18451511831956 * S_MntFruits
2469825   +          +     0.15600368092559 * S_MntGoldProds  +     2.66964572205551 *
2469826   +        S_MntMeatProducts  +    -0.66381928008493 * S_MntSweetProducts
2469827   +          +    -1.34669953562975 * S_MntWines  +     1.35404821514849 *
2469828   +        S_MonthsAsCustomer  +     1.74839628716461 * S_NumCatalogPurchases
2469829   +          +     0.76616480025024 * S_NumDealsPurchases
2469830   +          +     0.42823368706255 * S_NumDistPurchases
2469831   +          +    -1.16998364854907 * S_NumStorePurchases
2469832   +          +     -1.0841896541746 * S_NumWebPurchases
2469833   +          +     2.74837744375079 * S_NumWebVisitsMonth
2469834   +          +    -0.12893804494501 * S_RFMstat  +    -0.62922223536042 *
2469835   +        S_RMntFrq  +    -5.13438280616518 * S_Recency
2469836   +          +    -0.03717013845941 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 2.0905555295419 * S_AcceptedCmpTotal + -0.23515107640805 *
S_Age + -0.34980320997139 * S_Frq + 0.96612788543649 * S_Income + -0.57035066115881 *
S_Kidhome + 0.22762934410578 * S_Mnt + -0.52536382903021 * S_MntFishProducts +
-1.18451511831956 * S_MntFruits + 0.15600368092559 * S_MntGoldProds + 2.66964572205551 *
S_MntMeatProducts + -0.66381928008493 * S_MntSweetProducts + -1.34669953562975 * S_MntWines +
1.35404821514849 * S_MonthsAsCustomer + 1.74839628716461 * S_NumCatalogPurchases +
0.76616480025024 * S_NumDealsPurchases + 0.42823368706255 * S_NumDistPurchases +
-1.16998364854907 * S_NumStorePurchases + -1.0841896541746 * S_NumWebPurchases +
2.74837744375079 * S_NumWebVisitsMonth + -0.12893804494501 * S_RFMstat + -0.62922223536042 *
S_RMntFrq + -5.13438280616518 * S_Recency + -0.03717013845941 * S_Teenhome ;
2469837   +   H1x1_4  =     0.00721395593412 * S_AcceptedCmpTotal
2469838   +          +    -0.01540387767211 * S_Age  +    -0.84860703860633 * S_Frq
2469839   +          +    -1.02288627805121 * S_Income  +    -1.09101870516967 *
2469840   +        S_Kidhome  +    -0.49364597366691 * S_Mnt  +    -0.46832600024559 *
2469841   +        S_MntFishProducts  +     0.18419647776638 * S_MntFruits
2469842   +          +     0.08548650236624 * S_MntGoldProds  +      3.4353205628246 *
2469843   +        S_MntMeatProducts  +    -0.34836704949861 * S_MntSweetProducts
2469844   +          +    -2.43294028965601 * S_MntWines  +       -0.52018014955 *
2469845   +        S_MonthsAsCustomer  +     0.64700842330282 * S_NumCatalogPurchases
2469846   +          +     0.78421010501058 * S_NumDealsPurchases
2469847   +          +     0.01075885160671 * S_NumDistPurchases
2469848   +          +    -1.99395040717832 * S_NumStorePurchases
2469849   +          +    -1.02908330834262 * S_NumWebPurchases
2469850   +          +     2.79163466516477 * S_NumWebVisitsMonth
2469851   +          +    -0.02537920152644 * S_RFMstat  +    -0.42457000565561 *
2469852   +        S_RMntFrq  +     -2.0907247135068 * S_Recency
2469853   +          +     0.74119954026621 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.00721395593412 * S_AcceptedCmpTotal + -0.01540387767211 *
S_Age + -0.84860703860633 * S_Frq + -1.02288627805121 * S_Income + -1.09101870516967 *
S_Kidhome + -0.49364597366691 * S_Mnt + -0.46832600024559 * S_MntFishProducts +
0.18419647776638 * S_MntFruits + 0.08548650236624 * S_MntGoldProds + 3.4353205628246 *
S_MntMeatProducts + -0.34836704949861 * S_MntSweetProducts + -2.43294028965601 * S_MntWines +
-0.52018014955 * S_MonthsAsCustomer + 0.64700842330282 * S_NumCatalogPurchases +
0.78421010501058 * S_NumDealsPurchases + 0.01075885160671 * S_NumDistPurchases +
-1.99395040717832 * S_NumStorePurchases + -1.02908330834262 * S_NumWebPurchases +
2.79163466516477 * S_NumWebVisitsMonth + -0.02537920152644 * S_RFMstat + -0.42457000565561 *
S_RMntFrq + -2.0907247135068 * S_Recency + 0.74119954026621 * S_Teenhome ;
2469854   +   H1x1_5  =    -1.61701205426558 * S_AcceptedCmpTotal
2469855   +          +     0.08257295395479 * S_Age  +    -0.68185680658717 * S_Frq
2469856   +          +    -1.39465125759406 * S_Income  +    -1.25029109577242 *
2469857   +        S_Kidhome  +    -1.09090107886966 * S_Mnt  +     1.64350195586938 *
2469858   +        S_MntFishProducts  +      0.5087421773332 * S_MntFruits
2469859   +          +      0.4047616469084 * S_MntGoldProds  +    -7.16241250715453 *
2469860   +        S_MntMeatProducts  +    -0.92562420397097 * S_MntSweetProducts
2469861   +          +     1.87307481667927 * S_MntWines  +    -0.53417946416471 *
2469862   +        S_MonthsAsCustomer  +    -1.53123660652072 * S_NumCatalogPurchases
2469863   +          +    -1.04219068390022 * S_NumDealsPurchases
2469864   +          +    -0.45770204483973 * S_NumDistPurchases
2469865   +          +    -0.04941442229195 * S_NumStorePurchases
2469866   +          +     0.67187353161183 * S_NumWebPurchases
2469867   +          +     2.01907760553871 * S_NumWebVisitsMonth
2469868   +          +    -1.68329765100269 * S_RFMstat  +     0.29244142334331 *
2469869   +        S_RMntFrq  +    -1.12913051410394 * S_Recency
2469870   +          +     0.43082751824484 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.61701205426558 * S_AcceptedCmpTotal + 0.08257295395479 *
S_Age + -0.68185680658717 * S_Frq + -1.39465125759406 * S_Income + -1.25029109577242 *
S_Kidhome + -1.09090107886966 * S_Mnt + 1.64350195586938 * S_MntFishProducts + 0.5087421773332
* S_MntFruits + 0.4047616469084 * S_MntGoldProds + -7.16241250715453 * S_MntMeatProducts +
-0.92562420397097 * S_MntSweetProducts + 1.87307481667927 * S_MntWines + -0.53417946416471 *
S_MonthsAsCustomer + -1.53123660652072 * S_NumCatalogPurchases + -1.04219068390022 *
S_NumDealsPurchases + -0.45770204483973 * S_NumDistPurchases + -0.04941442229195 *
S_NumStorePurchases + 0.67187353161183 * S_NumWebPurchases + 2.01907760553871 *
S_NumWebVisitsMonth + -1.68329765100269 * S_RFMstat + 0.29244142334331 * S_RMntFrq +
-1.12913051410394 * S_Recency + 0.43082751824484 * S_Teenhome ;
2469871   +   H1x1_1  = H1x1_1  +    -0.44646416045725 * AcceptedCmp10
2469872   +          +    -0.51992887099168 * AcceptedCmp20  +    -1.12974688442196 *
2469873   +        AcceptedCmp30  +    -0.25247614927616 * AcceptedCmp40
2469874   +          +     -1.0839587453165 * AcceptedCmp50  +    -0.37542128912082 *
2469875   +        Complain0  +     0.50509109375746 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.44646416045725 * AcceptedCmp10 + -0.51992887099168
* AcceptedCmp20 + -1.12974688442196 * AcceptedCmp30 + -0.25247614927616 * AcceptedCmp40 +
-1.0839587453165 * AcceptedCmp50 + -0.37542128912082 * Complain0 + 0.50509109375746 *
HigherEducationBinary0 ;
2469876   +   H1x1_2  = H1x1_2  +     1.41785862418118 * AcceptedCmp10
2469877   +          +     0.14869386732553 * AcceptedCmp20  +    -0.34292007253529 *
2469878   +        AcceptedCmp30  +    -0.46450669830265 * AcceptedCmp40
2469879   +          +    -0.84675597945703 * AcceptedCmp50  +     -0.0664649548734 *
2469880   +        Complain0  +    -0.45532665777266 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 1.41785862418118 * AcceptedCmp10 + 0.14869386732553 *
AcceptedCmp20 + -0.34292007253529 * AcceptedCmp30 + -0.46450669830265 * AcceptedCmp40 +
-0.84675597945703 * AcceptedCmp50 + -0.0664649548734 * Complain0 + -0.45532665777266 *
HigherEducationBinary0 ;
2469881   +   H1x1_3  = H1x1_3  +    -0.77549230890552 * AcceptedCmp10
2469882   +          +    -1.36005205352388 * AcceptedCmp20  +    -0.77268925112364 *
2469883   +        AcceptedCmp30  +    -1.48651970256564 * AcceptedCmp40
2469884   +          +    -1.49771960438108 * AcceptedCmp50  +     0.05855673938529 *
2469885   +        Complain0  +      0.5650947463497 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.77549230890552 * AcceptedCmp10 + -1.36005205352388
* AcceptedCmp20 + -0.77268925112364 * AcceptedCmp30 + -1.48651970256564 * AcceptedCmp40 +
-1.49771960438108 * AcceptedCmp50 + 0.05855673938529 * Complain0 + 0.5650947463497 *
HigherEducationBinary0 ;
2469886   +   H1x1_4  = H1x1_4  +    -0.67577364181798 * AcceptedCmp10
2469887   +          +    -0.90920539880387 * AcceptedCmp20  +    -0.10856872028934 *
2469888   +        AcceptedCmp30  +    -0.17408320421731 * AcceptedCmp40
2469889   +          +    -0.40718112138881 * AcceptedCmp50  +    -1.15772819875829 *
2469890   +        Complain0  +    -0.63688652305256 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.67577364181798 * AcceptedCmp10 + -0.90920539880387
* AcceptedCmp20 + -0.10856872028934 * AcceptedCmp30 + -0.17408320421731 * AcceptedCmp40 +
-0.40718112138881 * AcceptedCmp50 + -1.15772819875829 * Complain0 + -0.63688652305256 *
HigherEducationBinary0 ;
2469891   +   H1x1_5  = H1x1_5  +      -0.257461635853 * AcceptedCmp10
2469892   +          +    -0.53931888306725 * AcceptedCmp20  +    -0.18314917937273 *
2469893   +        AcceptedCmp30  +    -0.63373606551928 * AcceptedCmp40
2469894   +          +    -0.22117496766649 * AcceptedCmp50  +    -0.96313784449205 *
2469895   +        Complain0  +    -0.42031825118642 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.257461635853 * AcceptedCmp10 + -0.53931888306725 *
AcceptedCmp20 + -0.18314917937273 * AcceptedCmp30 + -0.63373606551928 * AcceptedCmp40 +
-0.22117496766649 * AcceptedCmp50 + -0.96313784449205 * Complain0 + -0.42031825118642 *
HigherEducationBinary0 ;
2469896   +   H1x1_1  = H1x1_1  +    -0.61947659516101 * Education2n_Cycle
2469897   +          +     0.35542867116569 * EducationBasic  +    -0.40115062807285 *
2469898   +        EducationGraduation  +     0.09596442360106 * EducationMaster
2469899   +          +     2.58907527032049 * Marital_StatusDivorced
2469900   +          +    -2.45549008158921 * Marital_StatusMarried
2469901   +          +     2.56223650840768 * Marital_StatusSingle
2469902   +          +    -2.57680442835747 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.61947659516101 * Education2n_Cycle +
0.35542867116569 * EducationBasic + -0.40115062807285 * EducationGraduation + 0.09596442360106
* EducationMaster + 2.58907527032049 * Marital_StatusDivorced + -2.45549008158921 *
Marital_StatusMarried + 2.56223650840768 * Marital_StatusSingle + -2.57680442835747 *
Marital_StatusTogether ;
2469903   +   H1x1_2  = H1x1_2  +    -0.89996232033524 * Education2n_Cycle
2469904   +          +     0.51901949778729 * EducationBasic  +     0.48428543845596 *
2469905   +        EducationGraduation  +     0.29249899969052 * EducationMaster
2469906   +          +     0.83917299191368 * Marital_StatusDivorced
2469907   +          +    -0.62624692699191 * Marital_StatusMarried
2469908   +          +    -0.22585060624911 * Marital_StatusSingle
2469909   +          +    -1.13600554287291 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.89996232033524 * Education2n_Cycle +
0.51901949778729 * EducationBasic + 0.48428543845596 * EducationGraduation + 0.29249899969052
* EducationMaster + 0.83917299191368 * Marital_StatusDivorced + -0.62624692699191 *
Marital_StatusMarried + -0.22585060624911 * Marital_StatusSingle + -1.13600554287291 *
Marital_StatusTogether ;
2469910   +   H1x1_3  = H1x1_3  +    -0.14267095105584 * Education2n_Cycle
2469911   +          +    -0.02301358792856 * EducationBasic  +     0.52040244367562 *
2469912   +        EducationGraduation  +     -1.3163356801876 * EducationMaster
2469913   +          +    -0.65063506696715 * Marital_StatusDivorced
2469914   +          +    -2.37495865381256 * Marital_StatusMarried
2469915   +          +    -0.54954654146904 * Marital_StatusSingle
2469916   +          +    -2.20184943463859 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.14267095105584 * Education2n_Cycle +
-0.02301358792856 * EducationBasic + 0.52040244367562 * EducationGraduation + -1.3163356801876
* EducationMaster + -0.65063506696715 * Marital_StatusDivorced + -2.37495865381256 *
Marital_StatusMarried + -0.54954654146904 * Marital_StatusSingle + -2.20184943463859 *
Marital_StatusTogether ;
2469917   +   H1x1_4  = H1x1_4  +     0.07824072331908 * Education2n_Cycle
2469918   +          +    -0.70728597193571 * EducationBasic  +    -0.08522817414387 *
2469919   +        EducationGraduation  +     0.07916018399549 * EducationMaster
2469920   +          +     0.16185824798364 * Marital_StatusDivorced
2469921   +          +    -0.08142416735136 * Marital_StatusMarried
2469922   +          +    -0.20392270385969 * Marital_StatusSingle
2469923   +          +    -0.16702436233017 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.07824072331908 * Education2n_Cycle +
-0.70728597193571 * EducationBasic + -0.08522817414387 * EducationGraduation +
0.07916018399549 * EducationMaster + 0.16185824798364 * Marital_StatusDivorced +
-0.08142416735136 * Marital_StatusMarried + -0.20392270385969 * Marital_StatusSingle +
-0.16702436233017 * Marital_StatusTogether ;
2469924   +   H1x1_5  = H1x1_5  +    -0.24374540557838 * Education2n_Cycle
2469925   +          +    -0.69820143786999 * EducationBasic  +    -0.60198982003005 *
2469926   +        EducationGraduation  +     0.28107355175103 * EducationMaster
2469927   +          +      -0.516522631078 * Marital_StatusDivorced
2469928   +          +    -0.61661247789976 * Marital_StatusMarried
2469929   +          +    -0.99533130308294 * Marital_StatusSingle
2469930   +          +    -0.36897004084592 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.24374540557838 * Education2n_Cycle +
-0.69820143786999 * EducationBasic + -0.60198982003005 * EducationGraduation +
0.28107355175103 * EducationMaster + -0.516522631078 * Marital_StatusDivorced +
-0.61661247789976 * Marital_StatusMarried + -0.99533130308294 * Marital_StatusSingle +
-0.36897004084592 * Marital_StatusTogether ;
2469931   +   H1x1_1  =    -2.48464133714558 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -2.48464133714558 + H1x1_1 ;
2469932   +   H1x1_2  =    -1.27353840480002 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -1.27353840480002 + H1x1_2 ;
2469933   +   H1x1_3  =    -1.74000879961851 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -1.74000879961851 + H1x1_3 ;
2469934   +   H1x1_4  =    -0.38838285632991 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.38838285632991 + H1x1_4 ;
2469935   +   H1x1_5  =    -0.14124488553728 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.14124488553728 + H1x1_5 ;
2469936   +   H1x1_6  = 0;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0;
2469937   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
2469938   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2469939   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
2469940   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
2469941   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
2469942   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
2469943   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
2469944   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
2469945   +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
2469946   +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
2469947   +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
2469948   +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
2469949   +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
2469950   +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
2469951   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
2469952   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
2469953   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
2469954   +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
2469955   +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
2469956   +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
2469957   +END;
MPRINT(EM_DIAGRAM):   END;
2469958   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2469959   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2469960   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2469961   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2469962   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2469963   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
2469964   +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
2469965   +END;
MPRINT(EM_DIAGRAM):   END;
2469966   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2469967   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
2469968   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2469969   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2469970   +   H1x2_1  =     0.48404108721156 * S_AcceptedCmpTotal
2469971   +          +    -0.27070568741648 * S_Age  +    -0.78729393257177 * S_Frq
2469972   +          +    -0.22841203379079 * S_Income  +      1.7948359601764 *
2469973   +        S_Kidhome  +     0.16415271082275 * S_Mnt  +     0.68709045116477 *
2469974   +        S_MntFishProducts  +     1.40499150479431 * S_MntFruits
2469975   +          +     1.76690927096327 * S_MntGoldProds  +    -0.47805967324795 *
2469976   +        S_MntMeatProducts  +    -1.98462171861386 * S_MntSweetProducts
2469977   +          +     0.17732042205332 * S_MntWines  +    -2.68647979937092 *
2469978   +        S_MonthsAsCustomer  +     0.66724634672152 * S_NumCatalogPurchases
2469979   +          +    -0.03801022287706 * S_NumDealsPurchases
2469980   +          +    -1.50723574966419 * S_NumDistPurchases
2469981   +          +    -0.21514545448485 * S_NumStorePurchases
2469982   +          +    -0.50179555233865 * S_NumWebPurchases
2469983   +          +    -0.68226572560161 * S_NumWebVisitsMonth
2469984   +          +    -1.16287961930374 * S_RFMstat  +    -0.10835316604382 *
2469985   +        S_RMntFrq  +     0.78178939203913 * S_Recency
2469986   +          +     0.99430928489958 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.48404108721156 * S_AcceptedCmpTotal + -0.27070568741648 *
S_Age + -0.78729393257177 * S_Frq + -0.22841203379079 * S_Income + 1.7948359601764 * S_Kidhome
+ 0.16415271082275 * S_Mnt + 0.68709045116477 * S_MntFishProducts + 1.40499150479431 *
S_MntFruits + 1.76690927096327 * S_MntGoldProds + -0.47805967324795 * S_MntMeatProducts +
-1.98462171861386 * S_MntSweetProducts + 0.17732042205332 * S_MntWines + -2.68647979937092 *
S_MonthsAsCustomer + 0.66724634672152 * S_NumCatalogPurchases + -0.03801022287706 *
S_NumDealsPurchases + -1.50723574966419 * S_NumDistPurchases + -0.21514545448485 *
S_NumStorePurchases + -0.50179555233865 * S_NumWebPurchases + -0.68226572560161 *
S_NumWebVisitsMonth + -1.16287961930374 * S_RFMstat + -0.10835316604382 * S_RMntFrq +
0.78178939203913 * S_Recency + 0.99430928489958 * S_Teenhome ;
2469987   +   H1x2_2  =    -0.36352858735119 * S_AcceptedCmpTotal
2469988   +          +    -0.57224467079409 * S_Age  +    -1.50170848997829 * S_Frq
2469989   +          +    -0.38902839025885 * S_Income  +     -1.1798795668612 *
2469990   +        S_Kidhome  +     -0.1290183198617 * S_Mnt  +     0.76723261406072 *
2469991   +        S_MntFishProducts  +     -0.2940014517298 * S_MntFruits
2469992   +          +     1.10823983171432 * S_MntGoldProds  +    -0.31483479967732 *
2469993   +        S_MntMeatProducts  +     1.52044892546638 * S_MntSweetProducts
2469994   +          +     0.93667207634948 * S_MntWines  +     1.38654947651763 *
2469995   +        S_MonthsAsCustomer  +     0.60618457384701 * S_NumCatalogPurchases
2469996   +          +     0.70551335536975 * S_NumDealsPurchases
2469997   +          +     0.02824488988803 * S_NumDistPurchases
2469998   +          +    -0.47958123842808 * S_NumStorePurchases
2469999   +          +     1.04559003239583 * S_NumWebPurchases
2470000   +          +    -0.58386087813772 * S_NumWebVisitsMonth
2470001   +          +     0.30550498646512 * S_RFMstat  +     0.30157778523343 *
2470002   +        S_RMntFrq  +    -0.05848082255965 * S_Recency
2470003   +          +     1.93017367885145 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.36352858735119 * S_AcceptedCmpTotal + -0.57224467079409 *
S_Age + -1.50170848997829 * S_Frq + -0.38902839025885 * S_Income + -1.1798795668612 *
S_Kidhome + -0.1290183198617 * S_Mnt + 0.76723261406072 * S_MntFishProducts + -0.2940014517298
* S_MntFruits + 1.10823983171432 * S_MntGoldProds + -0.31483479967732 * S_MntMeatProducts +
1.52044892546638 * S_MntSweetProducts + 0.93667207634948 * S_MntWines + 1.38654947651763 *
S_MonthsAsCustomer + 0.60618457384701 * S_NumCatalogPurchases + 0.70551335536975 *
S_NumDealsPurchases + 0.02824488988803 * S_NumDistPurchases + -0.47958123842808 *
S_NumStorePurchases + 1.04559003239583 * S_NumWebPurchases + -0.58386087813772 *
S_NumWebVisitsMonth + 0.30550498646512 * S_RFMstat + 0.30157778523343 * S_RMntFrq +
-0.05848082255965 * S_Recency + 1.93017367885145 * S_Teenhome ;
2470004   +   H1x2_3  =    -1.42573562358231 * S_AcceptedCmpTotal
2470005   +          +    -1.32139459670271 * S_Age  +    -0.65089374259133 * S_Frq
2470006   +          +     0.40762251828155 * S_Income  +     0.07844400105703 *
2470007   +        S_Kidhome  +     0.50965373569965 * S_Mnt  +     0.16029734923155 *
2470008   +        S_MntFishProducts  +     0.09920766855666 * S_MntFruits
2470009   +          +     1.72613699296152 * S_MntGoldProds  +    -0.05634715837952 *
2470010   +        S_MntMeatProducts  +    -0.46288044931269 * S_MntSweetProducts
2470011   +          +    -1.56275217321856 * S_MntWines  +     0.47573724745363 *
2470012   +        S_MonthsAsCustomer  +     0.24362096681468 * S_NumCatalogPurchases
2470013   +          +    -0.28907339261907 * S_NumDealsPurchases
2470014   +          +     0.04310505858352 * S_NumDistPurchases
2470015   +          +    -0.99594604666889 * S_NumStorePurchases
2470016   +          +    -0.58870940220114 * S_NumWebPurchases
2470017   +          +     0.84018399925148 * S_NumWebVisitsMonth
2470018   +          +    -0.19517311010454 * S_RFMstat  +     -0.3463233802461 *
2470019   +        S_RMntFrq  +    -1.47730936960999 * S_Recency
2470020   +          +    -0.88597688046705 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -1.42573562358231 * S_AcceptedCmpTotal + -1.32139459670271 *
S_Age + -0.65089374259133 * S_Frq + 0.40762251828155 * S_Income + 0.07844400105703 * S_Kidhome
+ 0.50965373569965 * S_Mnt + 0.16029734923155 * S_MntFishProducts + 0.09920766855666 *
S_MntFruits + 1.72613699296152 * S_MntGoldProds + -0.05634715837952 * S_MntMeatProducts +
-0.46288044931269 * S_MntSweetProducts + -1.56275217321856 * S_MntWines + 0.47573724745363 *
S_MonthsAsCustomer + 0.24362096681468 * S_NumCatalogPurchases + -0.28907339261907 *
S_NumDealsPurchases + 0.04310505858352 * S_NumDistPurchases + -0.99594604666889 *
S_NumStorePurchases + -0.58870940220114 * S_NumWebPurchases + 0.84018399925148 *
S_NumWebVisitsMonth + -0.19517311010454 * S_RFMstat + -0.3463233802461 * S_RMntFrq +
-1.47730936960999 * S_Recency + -0.88597688046705 * S_Teenhome ;
2470021   +   H1x2_4  =     0.11016580381662 * S_AcceptedCmpTotal
2470022   +          +     0.30908576425954 * S_Age  +     0.34179480828109 * S_Frq
2470023   +          +     0.40584056795753 * S_Income  +    -0.45712899846476 *
2470024   +        S_Kidhome  +     1.12080510316382 * S_Mnt  +     0.48988466623601 *
2470025   +        S_MntFishProducts  +    -0.33589219598754 * S_MntFruits
2470026   +          +     0.89305356089927 * S_MntGoldProds  +    -2.00512215642683 *
2470027   +        S_MntMeatProducts  +     1.10859074670332 * S_MntSweetProducts
2470028   +          +     -1.0064133988839 * S_MntWines  +      0.7768603559605 *
2470029   +        S_MonthsAsCustomer  +     0.97922554259242 * S_NumCatalogPurchases
2470030   +          +     0.52917289878604 * S_NumDealsPurchases
2470031   +          +     0.30974142545809 * S_NumDistPurchases
2470032   +          +    -0.36081450643799 * S_NumStorePurchases
2470033   +          +    -0.28418053386759 * S_NumWebPurchases
2470034   +          +    -0.80759462497096 * S_NumWebVisitsMonth
2470035   +          +    -1.12633439579018 * S_RFMstat  +    -0.14662678398603 *
2470036   +        S_RMntFrq  +    -0.02418118976368 * S_Recency
2470037   +          +    -0.46548253671298 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.11016580381662 * S_AcceptedCmpTotal + 0.30908576425954 *
S_Age + 0.34179480828109 * S_Frq + 0.40584056795753 * S_Income + -0.45712899846476 * S_Kidhome
+ 1.12080510316382 * S_Mnt + 0.48988466623601 * S_MntFishProducts + -0.33589219598754 *
S_MntFruits + 0.89305356089927 * S_MntGoldProds + -2.00512215642683 * S_MntMeatProducts +
1.10859074670332 * S_MntSweetProducts + -1.0064133988839 * S_MntWines + 0.7768603559605 *
S_MonthsAsCustomer + 0.97922554259242 * S_NumCatalogPurchases + 0.52917289878604 *
S_NumDealsPurchases + 0.30974142545809 * S_NumDistPurchases + -0.36081450643799 *
S_NumStorePurchases + -0.28418053386759 * S_NumWebPurchases + -0.80759462497096 *
S_NumWebVisitsMonth + -1.12633439579018 * S_RFMstat + -0.14662678398603 * S_RMntFrq +
-0.02418118976368 * S_Recency + -0.46548253671298 * S_Teenhome ;
2470038   +   H1x2_5  =    -0.55551536908819 * S_AcceptedCmpTotal
2470039   +          +    -0.09163465220674 * S_Age  +    -0.35937602626275 * S_Frq
2470040   +          +     0.61145646041534 * S_Income  +     0.28920493959955 *
2470041   +        S_Kidhome  +     0.71661843805688 * S_Mnt  +     0.25254041554237 *
2470042   +        S_MntFishProducts  +    -0.38704785732563 * S_MntFruits
2470043   +          +    -0.16912995068939 * S_MntGoldProds  +     0.21440191729631 *
2470044   +        S_MntMeatProducts  +    -0.49507693220329 * S_MntSweetProducts
2470045   +          +      0.3153765288287 * S_MntWines  +    -0.15329574285112 *
2470046   +        S_MonthsAsCustomer  +     1.28722879296429 * S_NumCatalogPurchases
2470047   +          +    -0.47500053723253 * S_NumDealsPurchases
2470048   +          +     0.41421086319635 * S_NumDistPurchases
2470049   +          +     0.69664835428137 * S_NumStorePurchases
2470050   +          +     0.66359306812968 * S_NumWebPurchases
2470051   +          +     0.77931462528741 * S_NumWebVisitsMonth
2470052   +          +     0.05868786291548 * S_RFMstat  +     0.77672802649379 *
2470053   +        S_RMntFrq  +    -1.91226042675868 * S_Recency
2470054   +          +     1.79227856637688 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.55551536908819 * S_AcceptedCmpTotal + -0.09163465220674 *
S_Age + -0.35937602626275 * S_Frq + 0.61145646041534 * S_Income + 0.28920493959955 * S_Kidhome
+ 0.71661843805688 * S_Mnt + 0.25254041554237 * S_MntFishProducts + -0.38704785732563 *
S_MntFruits + -0.16912995068939 * S_MntGoldProds + 0.21440191729631 * S_MntMeatProducts +
-0.49507693220329 * S_MntSweetProducts + 0.3153765288287 * S_MntWines + -0.15329574285112 *
S_MonthsAsCustomer + 1.28722879296429 * S_NumCatalogPurchases + -0.47500053723253 *
S_NumDealsPurchases + 0.41421086319635 * S_NumDistPurchases + 0.69664835428137 *
S_NumStorePurchases + 0.66359306812968 * S_NumWebPurchases + 0.77931462528741 *
S_NumWebVisitsMonth + 0.05868786291548 * S_RFMstat + 0.77672802649379 * S_RMntFrq +
-1.91226042675868 * S_Recency + 1.79227856637688 * S_Teenhome ;
2470055   +   H1x2_1  = H1x2_1  +     1.13471289065691 * AcceptedCmp10
2470056   +          +     0.65974383309652 * AcceptedCmp20  +    -1.87292531678796 *
2470057   +        AcceptedCmp30  +      -1.353797047409 * AcceptedCmp40
2470058   +          +     0.20616786486771 * AcceptedCmp50  +    -0.38264326101775 *
2470059   +        Complain0  +    -0.17807638061615 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 1.13471289065691 * AcceptedCmp10 + 0.65974383309652 *
AcceptedCmp20 + -1.87292531678796 * AcceptedCmp30 + -1.353797047409 * AcceptedCmp40 +
0.20616786486771 * AcceptedCmp50 + -0.38264326101775 * Complain0 + -0.17807638061615 *
HigherEducationBinary0 ;
2470060   +   H1x2_2  = H1x2_2  +     1.21347348622419 * AcceptedCmp10
2470061   +          +    -0.25372740217388 * AcceptedCmp20  +     1.86937589112006 *
2470062   +        AcceptedCmp30  +    -0.04754722838516 * AcceptedCmp40
2470063   +          +    -0.08078800460742 * AcceptedCmp50  +     1.62387969342769 *
2470064   +        Complain0  +    -0.78004732229344 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 1.21347348622419 * AcceptedCmp10 + -0.25372740217388 *
AcceptedCmp20 + 1.86937589112006 * AcceptedCmp30 + -0.04754722838516 * AcceptedCmp40 +
-0.08078800460742 * AcceptedCmp50 + 1.62387969342769 * Complain0 + -0.78004732229344 *
HigherEducationBinary0 ;
2470065   +   H1x2_3  = H1x2_3  +    -0.02152665189186 * AcceptedCmp10
2470066   +          +     0.57207081192818 * AcceptedCmp20  +      0.6212177562119 *
2470067   +        AcceptedCmp30  +    -0.73691462528053 * AcceptedCmp40
2470068   +          +    -0.35326427815838 * AcceptedCmp50  +     0.14875513793176 *
2470069   +        Complain0  +    -0.13978395235915 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -0.02152665189186 * AcceptedCmp10 + 0.57207081192818 *
AcceptedCmp20 + 0.6212177562119 * AcceptedCmp30 + -0.73691462528053 * AcceptedCmp40 +
-0.35326427815838 * AcceptedCmp50 + 0.14875513793176 * Complain0 + -0.13978395235915 *
HigherEducationBinary0 ;
2470070   +   H1x2_4  = H1x2_4  +     0.87315450122595 * AcceptedCmp10
2470071   +          +      0.7868322457627 * AcceptedCmp20  +    -0.23332719513906 *
2470072   +        AcceptedCmp30  +    -0.68817918979928 * AcceptedCmp40
2470073   +          +    -0.57204462412445 * AcceptedCmp50  +    -0.86223238269616 *
2470074   +        Complain0  +     -0.3126348645458 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.87315450122595 * AcceptedCmp10 + 0.7868322457627 *
AcceptedCmp20 + -0.23332719513906 * AcceptedCmp30 + -0.68817918979928 * AcceptedCmp40 +
-0.57204462412445 * AcceptedCmp50 + -0.86223238269616 * Complain0 + -0.3126348645458 *
HigherEducationBinary0 ;
2470075   +   H1x2_5  = H1x2_5  +     0.29282165496733 * AcceptedCmp10
2470076   +          +     1.51708756092369 * AcceptedCmp20  +     1.20268215158483 *
2470077   +        AcceptedCmp30  +     0.30521477351547 * AcceptedCmp40
2470078   +          +    -0.58691162701837 * AcceptedCmp50  +     0.75641665624817 *
2470079   +        Complain0  +      0.7018761099345 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.29282165496733 * AcceptedCmp10 + 1.51708756092369 *
AcceptedCmp20 + 1.20268215158483 * AcceptedCmp30 + 0.30521477351547 * AcceptedCmp40 +
-0.58691162701837 * AcceptedCmp50 + 0.75641665624817 * Complain0 + 0.7018761099345 *
HigherEducationBinary0 ;
2470080   +   H1x2_1  = H1x2_1  +    -0.68955031483686 * Education2n_Cycle
2470081   +          +    -1.63162976419312 * EducationBasic  +     1.58569020932253 *
2470082   +        EducationGraduation  +     0.89392741557091 * EducationMaster
2470083   +          +    -1.34742914042312 * Marital_StatusDivorced
2470084   +          +    -0.75378934918763 * Marital_StatusMarried
2470085   +          +    -1.85411678929217 * Marital_StatusSingle
2470086   +          +     0.34579160965376 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.68955031483686 * Education2n_Cycle +
-1.63162976419312 * EducationBasic + 1.58569020932253 * EducationGraduation + 0.89392741557091
* EducationMaster + -1.34742914042312 * Marital_StatusDivorced + -0.75378934918763 *
Marital_StatusMarried + -1.85411678929217 * Marital_StatusSingle + 0.34579160965376 *
Marital_StatusTogether ;
2470087   +   H1x2_2  = H1x2_2  +     0.91842441316819 * Education2n_Cycle
2470088   +          +    -0.10372785737624 * EducationBasic  +     1.79022097342125 *
2470089   +        EducationGraduation  +      1.4602485898642 * EducationMaster
2470090   +          +     0.47958659206261 * Marital_StatusDivorced
2470091   +          +     -0.9665584294045 * Marital_StatusMarried
2470092   +          +      0.9733784530538 * Marital_StatusSingle
2470093   +          +     0.19258101270915 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.91842441316819 * Education2n_Cycle +
-0.10372785737624 * EducationBasic + 1.79022097342125 * EducationGraduation + 1.4602485898642
* EducationMaster + 0.47958659206261 * Marital_StatusDivorced + -0.9665584294045 *
Marital_StatusMarried + 0.9733784530538 * Marital_StatusSingle + 0.19258101270915 *
Marital_StatusTogether ;
2470094   +   H1x2_3  = H1x2_3  +     1.26817216331303 * Education2n_Cycle
2470095   +          +    -1.60153781162075 * EducationBasic  +    -0.32068567398782 *
2470096   +        EducationGraduation  +     1.49772418974753 * EducationMaster
2470097   +          +    -0.56894207908284 * Marital_StatusDivorced
2470098   +          +    -0.96715106987195 * Marital_StatusMarried
2470099   +          +     1.18678144721443 * Marital_StatusSingle
2470100   +          +     1.05940264255347 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 1.26817216331303 * Education2n_Cycle +
-1.60153781162075 * EducationBasic + -0.32068567398782 * EducationGraduation +
1.49772418974753 * EducationMaster + -0.56894207908284 * Marital_StatusDivorced +
-0.96715106987195 * Marital_StatusMarried + 1.18678144721443 * Marital_StatusSingle +
1.05940264255347 * Marital_StatusTogether ;
2470101   +   H1x2_4  = H1x2_4  +    -1.19824707240276 * Education2n_Cycle
2470102   +          +     0.43905907692169 * EducationBasic  +    -1.18279972023424 *
2470103   +        EducationGraduation  +    -2.01250798855133 * EducationMaster
2470104   +          +     -0.6061959224661 * Marital_StatusDivorced
2470105   +          +     0.03495844244684 * Marital_StatusMarried
2470106   +          +    -0.63896361063244 * Marital_StatusSingle
2470107   +          +     0.74357887057422 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + -1.19824707240276 * Education2n_Cycle +
0.43905907692169 * EducationBasic + -1.18279972023424 * EducationGraduation +
-2.01250798855133 * EducationMaster + -0.6061959224661 * Marital_StatusDivorced +
0.03495844244684 * Marital_StatusMarried + -0.63896361063244 * Marital_StatusSingle +
0.74357887057422 * Marital_StatusTogether ;
2470108   +   H1x2_5  = H1x2_5  +     -0.6530237200396 * Education2n_Cycle
2470109   +          +     0.90062473169279 * EducationBasic  +    -3.01933913602199 *
2470110   +        EducationGraduation  +     -0.1598988619204 * EducationMaster
2470111   +          +     0.82178907301319 * Marital_StatusDivorced
2470112   +          +     1.69543553114589 * Marital_StatusMarried
2470113   +          +     -2.1272067363559 * Marital_StatusSingle
2470114   +          +     0.24274508474634 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + -0.6530237200396 * Education2n_Cycle +
0.90062473169279 * EducationBasic + -3.01933913602199 * EducationGraduation + -0.1598988619204
* EducationMaster + 0.82178907301319 * Marital_StatusDivorced + 1.69543553114589 *
Marital_StatusMarried + -2.1272067363559 * Marital_StatusSingle + 0.24274508474634 *
Marital_StatusTogether ;
2470115   +   H1x2_1  =     0.30842509451224 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.30842509451224 + H1x2_1 ;
2470116   +   H1x2_2  =     1.79200699407075 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 1.79200699407075 + H1x2_2 ;
2470117   +   H1x2_3  =     0.66706944906809 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = 0.66706944906809 + H1x2_3 ;
2470118   +   H1x2_4  =     -0.7356254138015 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.7356254138015 + H1x2_4 ;
2470119   +   H1x2_5  =    -0.68066575174095 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.68066575174095 + H1x2_5 ;
2470120   +   H1x2_6  = 0;
MPRINT(EM_DIAGRAM):   H1x2_6 = 0;
2470121   +   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 );
2470122   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2470123   +   H1x2_1  = EXP(H1x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(H1x2_1 - _MAX_);
2470124   +   _SUM_ = _SUM_ + H1x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_1 ;
2470125   +   H1x2_2  = EXP(H1x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(H1x2_2 - _MAX_);
2470126   +   _SUM_ = _SUM_ + H1x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_2 ;
2470127   +   H1x2_3  = EXP(H1x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(H1x2_3 - _MAX_);
2470128   +   _SUM_ = _SUM_ + H1x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_3 ;
2470129   +   H1x2_4  = EXP(H1x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(H1x2_4 - _MAX_);
2470130   +   _SUM_ = _SUM_ + H1x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_4 ;
2470131   +   H1x2_5  = EXP(H1x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(H1x2_5 - _MAX_);
2470132   +   _SUM_ = _SUM_ + H1x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_5 ;
2470133   +   H1x2_6  = EXP(H1x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(H1x2_6 - _MAX_);
2470134   +   _SUM_ = _SUM_ + H1x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_6 ;
2470135   +   H1x2_1  = H1x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 / _SUM_;
2470136   +   H1x2_2  = H1x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 / _SUM_;
2470137   +   H1x2_3  = H1x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 / _SUM_;
2470138   +   H1x2_4  = H1x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 / _SUM_;
2470139   +   H1x2_5  = H1x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 / _SUM_;
2470140   +   H1x2_6  = H1x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 / _SUM_;
2470141   +END;
MPRINT(EM_DIAGRAM):   END;
2470142   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2470143   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
2470144   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
2470145   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
2470146   +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
2470147   +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
2470148   +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
2470149   +END;
MPRINT(EM_DIAGRAM):   END;
2470150   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2470151   +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
2470152   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2470153   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2470154   +   H2x1_1  =      0.7656278374321 * H1x1_1  +     1.18988619460831 * H1x1_2
2470155   +          +    -0.68458045558713 * H1x1_3  +     0.49093980591245 * H1x1_4
2470156   +          +    -1.27959429919804 * H1x1_5  +    -1.38760297105319 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 0.7656278374321 * H1x1_1 + 1.18988619460831 * H1x1_2 +
-0.68458045558713 * H1x1_3 + 0.49093980591245 * H1x1_4 + -1.27959429919804 * H1x1_5 +
-1.38760297105319 * H1x1_6 ;
2470157   +   H2x1_2  =    -1.48941810274544 * H1x1_1  +     1.75443095464294 * H1x1_2
2470158   +          +    -1.63478694878031 * H1x1_3  +    -0.69296364459258 * H1x1_4
2470159   +          +     3.14007823471691 * H1x1_5  +     2.71965753640902 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -1.48941810274544 * H1x1_1 + 1.75443095464294 * H1x1_2 +
-1.63478694878031 * H1x1_3 + -0.69296364459258 * H1x1_4 + 3.14007823471691 * H1x1_5 +
2.71965753640902 * H1x1_6 ;
2470160   +   H2x1_3  =     1.07426996100463 * H1x1_1  +    -1.76796943416489 * H1x1_2
2470161   +          +    -0.11946940948224 * H1x1_3  +     1.25457449221991 * H1x1_4
2470162   +          +     -1.4079980040852 * H1x1_5  +    -0.94725163293394 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.07426996100463 * H1x1_1 + -1.76796943416489 * H1x1_2 +
-0.11946940948224 * H1x1_3 + 1.25457449221991 * H1x1_4 + -1.4079980040852 * H1x1_5 +
-0.94725163293394 * H1x1_6 ;
2470163   +   H2x1_4  =    -0.00078893231548 * H1x1_1  +     0.06396324179717 * H1x1_2
2470164   +          +    -0.13674165204668 * H1x1_3  +    -0.26576379023249 * H1x1_4
2470165   +          +     0.44513643867194 * H1x1_5  +     0.66585878141635 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -0.00078893231548 * H1x1_1 + 0.06396324179717 * H1x1_2 +
-0.13674165204668 * H1x1_3 + -0.26576379023249 * H1x1_4 + 0.44513643867194 * H1x1_5 +
0.66585878141635 * H1x1_6 ;
2470166   +   H2x1_5  =     -2.8467581879118 * H1x1_1  +     2.94182061339515 * H1x1_2
2470167   +          +    -3.43021438685063 * H1x1_3  +    -4.00045607730935 * H1x1_4
2470168   +          +     3.09230566797337 * H1x1_5  +     3.57592566919388 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -2.8467581879118 * H1x1_1 + 2.94182061339515 * H1x1_2 +
-3.43021438685063 * H1x1_3 + -4.00045607730935 * H1x1_4 + 3.09230566797337 * H1x1_5 +
3.57592566919388 * H1x1_6 ;
2470169   +   H2x1_6  =    -0.29912975132561 * H1x1_1  +     0.25554634262501 * H1x1_2
2470170   +          +    -0.62666868576544 * H1x1_3  +     1.54567563696489 * H1x1_4
2470171   +          +     1.87530466579189 * H1x1_5  +    -0.32006241006585 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = -0.29912975132561 * H1x1_1 + 0.25554634262501 * H1x1_2 +
-0.62666868576544 * H1x1_3 + 1.54567563696489 * H1x1_4 + 1.87530466579189 * H1x1_5 +
-0.32006241006585 * H1x1_6 ;
2470172   +   H2x1_1  = H2x1_1  +    -0.53923803948063 * H1x2_1
2470173   +          +    -0.14551996067575 * H1x2_2  +     1.15730137448351 * H1x2_3
2470174   +          +     0.02585401686791 * H1x2_4  +     -0.9274056409194 * H1x2_5
2470175   +          +    -0.07237646966438 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -0.53923803948063 * H1x2_1 + -0.14551996067575 *
H1x2_2 + 1.15730137448351 * H1x2_3 + 0.02585401686791 * H1x2_4 + -0.9274056409194 * H1x2_5 +
-0.07237646966438 * H1x2_6 ;
2470176   +   H2x1_2  = H2x1_2  +     -0.1441321293455 * H1x2_1
2470177   +          +    -0.53271770203833 * H1x2_2  +    -2.80064282115477 * H1x2_3
2470178   +          +    -1.05759395901612 * H1x2_4  +    -0.55127059339304 * H1x2_5
2470179   +          +     0.35471332651631 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -0.1441321293455 * H1x2_1 + -0.53271770203833 * H1x2_2
+ -2.80064282115477 * H1x2_3 + -1.05759395901612 * H1x2_4 + -0.55127059339304 * H1x2_5 +
0.35471332651631 * H1x2_6 ;
2470180   +   H2x1_3  = H2x1_3  +     -0.5351190580444 * H1x2_1
2470181   +          +    -0.02107048725988 * H1x2_2  +    -0.83389437376968 * H1x2_3
2470182   +          +    -0.80183937400902 * H1x2_4  +    -0.66588385104453 * H1x2_5
2470183   +          +      0.5218140468737 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -0.5351190580444 * H1x2_1 + -0.02107048725988 * H1x2_2
+ -0.83389437376968 * H1x2_3 + -0.80183937400902 * H1x2_4 + -0.66588385104453 * H1x2_5 +
0.5218140468737 * H1x2_6 ;
2470184   +   H2x1_4  = H2x1_4  +     1.89050022127485 * H1x2_1
2470185   +          +     -2.6557601537516 * H1x2_2  +     0.99126360053411 * H1x2_3
2470186   +          +    -0.44091776054792 * H1x2_4  +    -1.48547403065153 * H1x2_5
2470187   +          +    -0.67920869444907 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 1.89050022127485 * H1x2_1 + -2.6557601537516 * H1x2_2
+ 0.99126360053411 * H1x2_3 + -0.44091776054792 * H1x2_4 + -1.48547403065153 * H1x2_5 +
-0.67920869444907 * H1x2_6 ;
2470188   +   H2x1_5  = H2x1_5  +      0.2827883572995 * H1x2_1
2470189   +          +    -0.68177519072226 * H1x2_2  +    -1.62062483607713 * H1x2_3
2470190   +          +     0.24454579481466 * H1x2_4  +    -0.07591553404219 * H1x2_5
2470191   +          +      1.1175989027563 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + 0.2827883572995 * H1x2_1 + -0.68177519072226 * H1x2_2
+ -1.62062483607713 * H1x2_3 + 0.24454579481466 * H1x2_4 + -0.07591553404219 * H1x2_5 +
1.1175989027563 * H1x2_6 ;
2470192   +   H2x1_6  = H2x1_6  +    -0.00603649892235 * H1x2_1
2470193   +          +    -1.39053357060307 * H1x2_2  +    -1.34023350990878 * H1x2_3
2470194   +          +    -0.76811804565852 * H1x2_4  +    -1.40869786147662 * H1x2_5
2470195   +          +     1.54589390085972 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + -0.00603649892235 * H1x2_1 + -1.39053357060307 *
H1x2_2 + -1.34023350990878 * H1x2_3 + -0.76811804565852 * H1x2_4 + -1.40869786147662 * H1x2_5
+ 1.54589390085972 * H1x2_6 ;
2470196   +   H2x1_1  =     0.47873396703524 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 0.47873396703524 + H2x1_1 ;
2470197   +   H2x1_2  =     -0.0000340630035 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -0.0000340630035 + H2x1_2 ;
2470198   +   H2x1_3  =     0.35556259592214 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 0.35556259592214 + H2x1_3 ;
2470199   +   H2x1_4  =     1.01896219314016 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.01896219314016 + H2x1_4 ;
2470200   +   H2x1_5  =     0.72195082860145 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = 0.72195082860145 + H2x1_5 ;
2470201   +   H2x1_6  =     0.24171639764515 + H2x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 0.24171639764515 + H2x1_6 ;
2470202   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2470203   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2470204   +   H2x1_1  = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
2470205   +   H2x1_2  = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
2470206   +   H2x1_3  = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
2470207   +   H2x1_4  = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
2470208   +   H2x1_5  = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_5 = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
2470209   +   H2x1_6  = 1.0 / (1.0 + EXP(MIN( - H2x1_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.0 / (1.0 + EXP(MIN( - H2x1_6 , _EXP_BAR)));
2470210   +END;
MPRINT(EM_DIAGRAM):   END;
2470211   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2470212   +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
2470213   +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
2470214   +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
2470215   +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
2470216   +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
2470217   +   H2x1_6  = .;
MPRINT(EM_DIAGRAM):   H2x1_6 = .;
2470218   +END;
MPRINT(EM_DIAGRAM):   END;
2470219   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2470220   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2470221   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2470222   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2470223   +   P_DepVar1  =     7.13056975005701 * H2x1_1  +    -9.26714696465882 * H2x1_2
2470224   +          +     9.36351037194964 * H2x1_3  +     2.76582940055979 * H2x1_4
2470225   +          +    -20.1354182036801 * H2x1_5  +     1.54726164498938 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 7.13056975005701 * H2x1_1 + -9.26714696465882 * H2x1_2 +
9.36351037194964 * H2x1_3 + 2.76582940055979 * H2x1_4 + -20.1354182036801 * H2x1_5 +
1.54726164498938 * H2x1_6 ;
2470226   +   P_DepVar1  =     5.03726079820845 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 5.03726079820845 + P_DepVar1 ;
2470227   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2470228   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2470229   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2470230   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2470231   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2470232   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2470233   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2470234   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2470235   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2470236   +END;
MPRINT(EM_DIAGRAM):   END;
2470237   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2470238   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2470239   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2470240   +END;
MPRINT(EM_DIAGRAM):   END;
2470241   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2470242   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2470243   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2470244   +END;
MPRINT(EM_DIAGRAM):   END;
2470245   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2470246   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2470247   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2470248   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2470249   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2470250   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2470251   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2470252   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2470253   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2470254   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2470255   +END;
MPRINT(EM_DIAGRAM):   END;
2470256   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2470257   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2470258   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2470259   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2470260    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2470261    quit;
2470262    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2470263    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2470264    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2470265    retain ID 2 Node "AutoNeural11";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural11";
2470266    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2470267    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 6523 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 6523 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2470268    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2470269    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2470270    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 6523 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 6523 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
2470271    proc sort data=EMWS8.AutoNeural11_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural11_variableset out=_temp2(keep=NAME
CREATOR);
2470272    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2470273    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL11_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2470274    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2470275    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2470276    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2470277    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2470278    proc contents data=EMWS8.AutoNeural11_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural11_train out=_meta(keep=NAME) noprint;
2470279    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 71 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
2470280    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2470281    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2470282    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 71 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 71 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2470283    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2470284    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2470285    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2470286    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 71 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 71 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2470287    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2470288    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2470288  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 3291 rows and 5 columns.
 
2470289    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2470290    proc append base=EMWS8.Ensmbl46_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl46_FCMP data=_tempx;
2470291    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL46_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 3291 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL46_FCMP has 3291 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2470292    filename _pref
2470292  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
2470293    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2470294    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
2470295   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2470296   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
2470297   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2470298   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
2470299   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
2470300   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2470301    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2470302    quit;
2470303    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2470304    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2470305    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2470306    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
2470307    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2470308    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2470309    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2470310    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2470311    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2470312    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
2470313    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2470314    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2470315    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2470316    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2470317    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2470318    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2470319    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
2470320    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
2470321    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2470322    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2470323    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2470324    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2470325    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2470326    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2470327    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2470328    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2470329    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2470329  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
2470330    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2470331    proc append base=EMWS8.Ensmbl46_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl46_FCMP data=_tempx;
2470332    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL46_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL46_FCMP has 3295 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2470333    filename _pref
2470333  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
2470334    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2470335    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
2470336   +
2470337   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
2470338   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
2470338  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
2470339   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
2470340   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
2470341   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
2470342   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
2470343   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2470344    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2470345    quit;
2470346    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2470347    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2470348    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2470349    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
2470350    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2470351    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2470352    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2470353    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2470354    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2470355    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
2470356    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2470357    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2470358    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2470359    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2470360    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2470361    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2470362    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
2470363    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2470364    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2470365    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2470366    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2470367    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2470368    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2470369    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2470370    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2470371    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2470372    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2470372  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
2470373    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2470374    proc append base=EMWS8.Ensmbl46_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl46_FCMP data=_tempx;
2470375    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL46_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL46_FCMP has 3334 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2470376    filename _pref
2470376  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
2470377    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2470378    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
2470379   +
2470380   +
2470381   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
2470382   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
2470383   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
2470384   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
2470385   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
2470386   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2470387   +
2470388   +
2470389   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
2470390   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
2470391   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
2470392   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
2470393   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
2470394   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2470395   +
2470396   +
2470397   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
2470398   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
2470399   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
2470400   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
2470401   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
2470402   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2470403   +
2470404   +
2470405   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
2470406   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
2470407   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
2470408   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
2470409   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
2470410   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2470411   +
2470412   +
2470413   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
2470414   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
2470415   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
2470416   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
2470417   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
2470418   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2470419   +
2470420   +
2470421   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
2470422   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
2470423   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
2470424   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
2470425   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
2470426   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2470427   +
2470428   +
2470429   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
2470430   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
2470431   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
2470432   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
2470433   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
2470434   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2470435   +
2470436   +
2470437   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
2470438   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
2470439   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
2470440   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
2470441   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
2470442   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2470443   +if
2470444   +_FILTERNORM1 not in ( '.')
2470445   + and
2470446   +_FILTERNORM2 not in ( '.')
2470447   + and
2470448   +_FILTERNORM3 not in ( '.')
2470449   + and
2470450   +_FILTERNORM4 not in ( '.')
2470451   + and
2470452   +_FILTERNORM5 not in ( '.')
2470453   + and
2470454   +_FILTERNORM6 not in ( '.')
2470455   + and
2470456   +_FILTERNORM7 not in ( ' ')
2470457   + and
2470458   +_FILTERNORM8 not in ( ' ')
2470459   +and
2470460   +( Dt_Customer ne .)
2470461   +and ( Income ne . and (Income<=107000))
2470462   +and ( Kidhome ne .)
2470463   +and ( MntFishProducts ne .)
2470464   +and ( MntFruits ne .)
2470465   +and ( MntGoldProds ne .)
2470466   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
2470467   +and ( MntSweetProducts ne .)
2470468   +and ( MntWines ne .)
2470469   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
2470470   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
2470471   +and ( NumStorePurchases ne .)
2470472   +and ( NumWebPurchases ne .)
2470473   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
2470474   +and ( Recency ne .)
2470475   +and ( Teenhome ne .)
2470476   +and ( Year_Birth ne .)
2470477   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
2470478   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
2470479   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
2470480   +end;
MPRINT(EM_DIAGRAM):   end;
2470481   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
2470482   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2470483    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2470484    quit;
2470485    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2470486    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2470487    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2470488    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
2470489    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2470490    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2470491    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2470492    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2470493    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2470494    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
2470495    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2470496    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2470497    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2470498    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2470499    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2470500    run;
MPRINT(EM_DIAGRAM):   run;
The SAS System
 
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2470501    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
2470502    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
2470503    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2470504    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2470505    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2470506    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2470507    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2470508    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2470509    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2470510    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2470511    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2470511  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
2470512    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2470513    proc append base=EMWS8.Ensmbl46_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl46_FCMP data=_tempx;
2470514    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL46_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL46_FCMP has 3400 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2470515    %macro varDept(fcmpdata=,id=);
2470516    %global nobs&id scoreFlag&id;
2470517    %let scoreFlag&id = 0;
2470518    %if &id=1 or ^&fcmpStart %then %do;
2470519    proc sort data=&fcmpdata out=_temp&id nodupkey;
2470520    by NAME;
2470521    where id=&id and LHS in( %let j=1;
2470522    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
2470523    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
2470524    "&var" %let j = %eval(&j+1);
2470525    %end;
2470526    );
2470527    run;
2470528    %let dsid = %sysfunc(open(_temp&id));
2470529    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2470530    %let dsid = %sysfunc(close(&dsid));
2470531    %if &&nobs&id %then %do;
2470532    %let scoreFlag&id = 1;
2470533    %let fcmpStart = 1;
2470534    %end;
2470535    %else %let fcmpStart = 0;
2470536    %end;
2470537    %else %do;
2470538    proc sort data=&fcmpdata out=_tempid;
2470539    where id=&id;
2470540    by LHS;
2470541    run;
2470542    %let dsid = %sysfunc(open(_tempid));
2470543    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2470544    %let dsid = %sysfunc(close(&dsid));
2470545    %if ^&&nobs&id %then %do;
2470546    proc datasets lib=work nolist;
2470547    delete _tempid;
2470548    run;
2470549    quit;
2470550    %end;
2470551    %else %do;
2470552    data _tempAll;
2470553    set %let j=%eval(&id-1);
2470554    %do x=1 %to &j;
2470555    %if &&nobs&x %then %do;
2470556    _temp&x %end;
2470557    %end;
2470558    ;
2470559    run;
2470560    proc sql;
2470561    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
2470561  ! work._tempid p2 where p.name=p2.lhs;
2470562    quit;
2470563    data _temp&id;
2470564    set _temp&id;
2470565    where LHS ne '' and NAME ne '' and Node ne '';
2470566    run;
2470567    proc datasets lib=work nolist;
2470568    delete _tempAll;
2470569    run;
2470570    %let dsid = %sysfunc(open(_temp&id));
2470571    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2470572    %let dsid = %sysfunc(close(&dsid));
2470573    %if ^&&nobs&id %then %do;
2470574    proc datasets lib=work nolist;
2470575    delete _temp&id;
2470576    run;
2470577    quit;
2470578    %end;
2470579    %else %do;
2470580    %let scoreFlag&id = 1;
2470581    data _temp&id;
2470582    set _temp&id;
2470583    where LHS ne NAME and node ne '';
2470584    run;
2470585    %let dsid = %sysfunc(open(_temp&id));
2470586    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2470587    %let dsid = %sysfunc(close(&dsid));
2470588    %if ^&&nobs&id %then %do;
2470589    proc datasets lib=work nolist;
2470590    delete _temp&id;
2470591    run;
2470592    quit;
2470593    %end;
2470594    %else %do;
2470595    proc sort data=_temp&id nodupkey;
2470596    by LHS NAME;
2470597    run;
2470598    %end;
2470599    %end;
2470600    %end;
2470601    %end;
2470602    %mend varDept;
2470603    %macro optCode(outdata=fcmpdata);
2470604    %global fcmpStart;
2470605    %let fcmpStart = 0;
2470606    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
2470607    %let NumNodes=9;
2470608    %do k=1 %to &NumNodes;
2470609    %vardept(fcmpdata=&outdata, id=&k);
2470610    %end;
2470611    %mend optCode;
2470612    %optcode(outData=EMWS8.Ensmbl46_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl46_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL46_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl46_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 188 observations read from the data set EMWS8.ENSMBL46_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 136 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 52 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl46_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL46_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl46_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL46_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl46_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL46_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 52 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 52 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl46_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL46_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 52 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 56 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl46_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL46_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 52 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 95 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl46_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL46_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl46_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL46_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
2470613    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
2470614    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
2470615    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
2470616    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2470617    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
2470618    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
2470619    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
2470620    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2470621    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2470622    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
2470622  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.
 
2470623    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
2470624    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
2470625    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
2470626    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2470627    filename _pref
2470627  ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural12\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural12\EMPUBLISHSCORE.sas";
2470628    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2470629    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural12\EMPUBLISHSCORE.sas.
2470630   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2470631   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2470632   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2470633   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2470634   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2470635   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2470636   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2470637   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2470638   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2470639   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2470640   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2470641   +LENGTH _WARN_ $4
2470642   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
2470643   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2470644   +
2470645   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2470646   +
2470647   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2470648   +
2470649   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2470650   +
2470651   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2470652   +
2470653   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2470654   +
2470655   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2470656   +
2470657   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2470658   +
2470659   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2470660   +
2470661   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2470662   +
2470663   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2470664   +
2470665   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2470666   +
2470667   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2470668   +
2470669   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2470670   +
2470671   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2470672   +
2470673   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2470674   +
2470675   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2470676   +
2470677   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2470678   +
2470679   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2470680   +
2470681   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2470682   +
2470683   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2470684   +
2470685   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2470686   +
2470687   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2470688   +
2470689   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2470690   +
2470691   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2470692   +
2470693   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2470694   +
2470695   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2470696   +
2470697   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2470698   +
2470699   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2470700   +
2470701   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2470702   +
2470703   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2470704   +
2470705   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2470706   +
2470707   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2470708   +
2470709   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2470710   +
2470711   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2470712   +
2470713   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2470714   +
2470715   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2470716   +
2470717   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2470718   +
2470719   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2470720   +
2470721   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2470722   +
2470723   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2470724   +
2470725   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2470726   +
2470727   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
2470728   +
2470729   +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
2470730   +
2470731   +      label H1x1_7 = 'Hidden: H1x1_=7' ;
MPRINT(EM_DIAGRAM):   label H1x1_7 = 'Hidden: H1x1_=7' ;
2470732   +
2470733   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
2470734   +
2470735   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
2470736   +
2470737   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
2470738   +
2470739   +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
2470740   +
2470741   +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
2470742   +
2470743   +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
2470744   +
2470745   +      label H1x2_7 = 'Hidden: H1x2_=7' ;
MPRINT(EM_DIAGRAM):   label H1x2_7 = 'Hidden: H1x2_=7' ;
2470746   +
2470747   +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
2470748   +
2470749   +      label H1x3_2 = 'Hidden: H1x3_=2' ;
MPRINT(EM_DIAGRAM):   label H1x3_2 = 'Hidden: H1x3_=2' ;
2470750   +
2470751   +      label H1x3_3 = 'Hidden: H1x3_=3' ;
MPRINT(EM_DIAGRAM):   label H1x3_3 = 'Hidden: H1x3_=3' ;
2470752   +
2470753   +      label H1x3_4 = 'Hidden: H1x3_=4' ;
MPRINT(EM_DIAGRAM):   label H1x3_4 = 'Hidden: H1x3_=4' ;
2470754   +
2470755   +      label H1x3_5 = 'Hidden: H1x3_=5' ;
MPRINT(EM_DIAGRAM):   label H1x3_5 = 'Hidden: H1x3_=5' ;
2470756   +
2470757   +      label H1x3_6 = 'Hidden: H1x3_=6' ;
MPRINT(EM_DIAGRAM):   label H1x3_6 = 'Hidden: H1x3_=6' ;
2470758   +
2470759   +      label H1x3_7 = 'Hidden: H1x3_=7' ;
MPRINT(EM_DIAGRAM):   label H1x3_7 = 'Hidden: H1x3_=7' ;
2470760   +
2470761   +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
2470762   +
2470763   +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
2470764   +
2470765   +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
2470766   +
2470767   +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
2470768   +
2470769   +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
2470770   +
2470771   +      label H2x1_6 = 'Hidden: H2x1_=6' ;
MPRINT(EM_DIAGRAM):   label H2x1_6 = 'Hidden: H2x1_=6' ;
2470772   +
2470773   +      label H2x1_7 = 'Hidden: H2x1_=7' ;
MPRINT(EM_DIAGRAM):   label H2x1_7 = 'Hidden: H2x1_=7' ;
2470774   +
2470775   +      label H2x2_1 = 'Hidden: H2x2_=1' ;
MPRINT(EM_DIAGRAM):   label H2x2_1 = 'Hidden: H2x2_=1' ;
2470776   +
2470777   +      label H2x2_2 = 'Hidden: H2x2_=2' ;
MPRINT(EM_DIAGRAM):   label H2x2_2 = 'Hidden: H2x2_=2' ;
2470778   +
2470779   +      label H2x2_3 = 'Hidden: H2x2_=3' ;
MPRINT(EM_DIAGRAM):   label H2x2_3 = 'Hidden: H2x2_=3' ;
2470780   +
2470781   +      label H2x2_4 = 'Hidden: H2x2_=4' ;
MPRINT(EM_DIAGRAM):   label H2x2_4 = 'Hidden: H2x2_=4' ;
2470782   +
2470783   +      label H2x2_5 = 'Hidden: H2x2_=5' ;
MPRINT(EM_DIAGRAM):   label H2x2_5 = 'Hidden: H2x2_=5' ;
2470784   +
2470785   +      label H2x2_6 = 'Hidden: H2x2_=6' ;
MPRINT(EM_DIAGRAM):   label H2x2_6 = 'Hidden: H2x2_=6' ;
2470786   +
2470787   +      label H2x2_7 = 'Hidden: H2x2_=7' ;
MPRINT(EM_DIAGRAM):   label H2x2_7 = 'Hidden: H2x2_=7' ;
2470788   +
2470789   +      label H3x1_1 = 'Hidden: H3x1_=1' ;
MPRINT(EM_DIAGRAM):   label H3x1_1 = 'Hidden: H3x1_=1' ;
2470790   +
2470791   +      label H3x1_2 = 'Hidden: H3x1_=2' ;
MPRINT(EM_DIAGRAM):   label H3x1_2 = 'Hidden: H3x1_=2' ;
2470792   +
2470793   +      label H3x1_3 = 'Hidden: H3x1_=3' ;
MPRINT(EM_DIAGRAM):   label H3x1_3 = 'Hidden: H3x1_=3' ;
2470794   +
2470795   +      label H3x1_4 = 'Hidden: H3x1_=4' ;
MPRINT(EM_DIAGRAM):   label H3x1_4 = 'Hidden: H3x1_=4' ;
2470796   +
2470797   +      label H3x1_5 = 'Hidden: H3x1_=5' ;
MPRINT(EM_DIAGRAM):   label H3x1_5 = 'Hidden: H3x1_=5' ;
2470798   +
2470799   +      label H3x1_6 = 'Hidden: H3x1_=6' ;
MPRINT(EM_DIAGRAM):   label H3x1_6 = 'Hidden: H3x1_=6' ;
2470800   +
2470801   +      label H3x1_7 = 'Hidden: H3x1_=7' ;
MPRINT(EM_DIAGRAM):   label H3x1_7 = 'Hidden: H3x1_=7' ;
2470802   +
2470803   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2470804   +
2470805   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2470806   +
2470807   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2470808   +
2470809   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2470810   +
2470811   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2470812   +
2470813   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2470814   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2470815   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2470816   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2470817   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2470818   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2470819   +end;
MPRINT(EM_DIAGRAM):   end;
2470820   +else do;
MPRINT(EM_DIAGRAM):   else do;
2470821   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2470822   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2470823   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2470824   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2470825   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2470826   +   end;
MPRINT(EM_DIAGRAM):   end;
2470827   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2470828   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2470829   +   end;
MPRINT(EM_DIAGRAM):   end;
2470830   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2470831   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2470832   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2470833   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2470834   +   end;
MPRINT(EM_DIAGRAM):   end;
2470835   +end;
MPRINT(EM_DIAGRAM):   end;
2470836   +
2470837   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2470838   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2470839   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2470840   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2470841   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2470842   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2470843   +end;
MPRINT(EM_DIAGRAM):   end;
2470844   +else do;
MPRINT(EM_DIAGRAM):   else do;
2470845   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2470846   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2470847   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2470848   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2470849   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2470850   +   end;
MPRINT(EM_DIAGRAM):   end;
2470851   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2470852   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2470853   +   end;
MPRINT(EM_DIAGRAM):   end;
2470854   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2470855   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2470856   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2470857   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2470858   +   end;
MPRINT(EM_DIAGRAM):   end;
2470859   +end;
MPRINT(EM_DIAGRAM):   end;
2470860   +
2470861   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2470862   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2470863   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2470864   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2470865   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2470866   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2470867   +end;
MPRINT(EM_DIAGRAM):   end;
2470868   +else do;
MPRINT(EM_DIAGRAM):   else do;
2470869   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2470870   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2470871   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2470872   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2470873   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2470874   +   end;
MPRINT(EM_DIAGRAM):   end;
2470875   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2470876   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2470877   +   end;
MPRINT(EM_DIAGRAM):   end;
2470878   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2470879   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2470880   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2470881   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2470882   +   end;
MPRINT(EM_DIAGRAM):   end;
2470883   +end;
MPRINT(EM_DIAGRAM):   end;
2470884   +
2470885   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2470886   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2470887   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2470888   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2470889   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2470890   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2470891   +end;
MPRINT(EM_DIAGRAM):   end;
2470892   +else do;
MPRINT(EM_DIAGRAM):   else do;
2470893   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2470894   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2470895   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2470896   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2470897   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2470898   +   end;
MPRINT(EM_DIAGRAM):   end;
2470899   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2470900   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2470901   +   end;
MPRINT(EM_DIAGRAM):   end;
2470902   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2470903   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2470904   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2470905   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2470906   +   end;
MPRINT(EM_DIAGRAM):   end;
2470907   +end;
MPRINT(EM_DIAGRAM):   end;
2470908   +
2470909   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2470910   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2470911   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2470912   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2470913   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2470914   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2470915   +end;
MPRINT(EM_DIAGRAM):   end;
2470916   +else do;
MPRINT(EM_DIAGRAM):   else do;
2470917   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2470918   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2470919   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2470920   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2470921   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2470922   +   end;
MPRINT(EM_DIAGRAM):   end;
2470923   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2470924   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2470925   +   end;
MPRINT(EM_DIAGRAM):   end;
2470926   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2470927   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2470928   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2470929   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2470930   +   end;
MPRINT(EM_DIAGRAM):   end;
2470931   +end;
MPRINT(EM_DIAGRAM):   end;
2470932   +
2470933   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2470934   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2470935   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2470936   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2470937   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2470938   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2470939   +end;
MPRINT(EM_DIAGRAM):   end;
2470940   +else do;
MPRINT(EM_DIAGRAM):   else do;
2470941   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2470942   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2470943   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2470944   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2470945   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2470946   +   end;
MPRINT(EM_DIAGRAM):   end;
2470947   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2470948   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2470949   +   end;
MPRINT(EM_DIAGRAM):   end;
2470950   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2470951   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2470952   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2470953   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2470954   +   end;
MPRINT(EM_DIAGRAM):   end;
2470955   +end;
MPRINT(EM_DIAGRAM):   end;
2470956   +
2470957   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2470958   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2470959   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2470960   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2470961   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2470962   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2470963   +end;
MPRINT(EM_DIAGRAM):   end;
2470964   +else do;
MPRINT(EM_DIAGRAM):   else do;
2470965   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2470966   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2470967   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2470968   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2470969   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2470970   +   end;
MPRINT(EM_DIAGRAM):   end;
2470971   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2470972   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2470973   +   end;
MPRINT(EM_DIAGRAM):   end;
2470974   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2470975   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2470976   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2470977   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2470978   +   end;
MPRINT(EM_DIAGRAM):   end;
2470979   +end;
MPRINT(EM_DIAGRAM):   end;
2470980   +
2470981   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2470982   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
2470983   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2470984   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2470985   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2470986   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2470987   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2470988   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2470989   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2470990   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2470991   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2470992   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2470993   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2470994   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2470995   +end;
MPRINT(EM_DIAGRAM):   end;
2470996   +else do;
MPRINT(EM_DIAGRAM):   else do;
2470997   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2470998   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2470999   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2471000   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2471001   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2471002   +   end;
MPRINT(EM_DIAGRAM):   end;
2471003   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2471004   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2471005   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2471006   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2471007   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2471008   +   end;
MPRINT(EM_DIAGRAM):   end;
2471009   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2471010   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2471011   +   end;
MPRINT(EM_DIAGRAM):   end;
2471012   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2471013   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2471014   +   end;
MPRINT(EM_DIAGRAM):   end;
2471015   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2471016   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2471017   +   end;
MPRINT(EM_DIAGRAM):   end;
2471018   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2471019   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2471020   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2471021   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2471022   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2471023   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2471024   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2471025   +   end;
MPRINT(EM_DIAGRAM):   end;
2471026   +end;
MPRINT(EM_DIAGRAM):   end;
2471027   +
2471028   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2471029   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2471030   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
2471031   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2471032   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2471033   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2471034   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2471035   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2471036   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2471037   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2471038   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2471039   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2471040   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2471041   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2471042   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2471043   +end;
MPRINT(EM_DIAGRAM):   end;
2471044   +else do;
MPRINT(EM_DIAGRAM):   else do;
2471045   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2471046   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2471047   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2471048   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2471049   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2471050   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2471051   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2471052   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2471053   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2471054   +         end;
MPRINT(EM_DIAGRAM):   end;
2471055   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2471056   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2471057   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2471058   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2471059   +            end;
MPRINT(EM_DIAGRAM):   end;
2471060   +         end;
MPRINT(EM_DIAGRAM):   end;
2471061   +      end;
MPRINT(EM_DIAGRAM):   end;
2471062   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2471063   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2471064   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2471065   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2471066   +         end;
MPRINT(EM_DIAGRAM):   end;
2471067   +      end;
MPRINT(EM_DIAGRAM):   end;
2471068   +   end;
MPRINT(EM_DIAGRAM):   end;
2471069   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2471070   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2471071   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2471072   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2471073   +      end;
MPRINT(EM_DIAGRAM):   end;
2471074   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2471075   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2471076   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2471077   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2471078   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2471079   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2471080   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2471081   +         end;
MPRINT(EM_DIAGRAM):   end;
2471082   +      end;
MPRINT(EM_DIAGRAM):   end;
2471083   +   end;
MPRINT(EM_DIAGRAM):   end;
2471084   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2471085   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2471086   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2471087   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2471088   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2471089   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2471090   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2471091   +   end;
MPRINT(EM_DIAGRAM):   end;
2471092   +end;
MPRINT(EM_DIAGRAM):   end;
2471093   +
2471094   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2471095   +*** Checking missing input Interval
2471096   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2471097   +
2471098   +IF NMISS(
2471099   +   AcceptedCmpTotal ,
2471100   +   Age ,
2471101   +   Frq ,
2471102   +   Income ,
2471103   +   Kidhome ,
2471104   +   Mnt ,
2471105   +   MntFishProducts ,
2471106   +   MntFruits ,
2471107   +   MntGoldProds ,
2471108   +   MntMeatProducts ,
2471109   +   MntSweetProducts ,
2471110   +   MntWines ,
2471111   +   MonthsAsCustomer ,
2471112   +   NumCatalogPurchases ,
2471113   +   NumDealsPurchases ,
2471114   +   NumDistPurchases ,
2471115   +   NumStorePurchases ,
2471116   +   NumWebPurchases ,
2471117   +   NumWebVisitsMonth ,
2471118   +   RFMstat ,
2471119   +   RMntFrq ,
2471120   +   Recency ,
2471121   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
2471122   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2471123   +
2471124   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2471125   +END;
MPRINT(EM_DIAGRAM):   END;
2471126   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2471127   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2471128   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2471129   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2471130   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2471131   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2471132   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2471133   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2471134   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2471135   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2471136   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2471137   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2471138   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2471139   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2471140   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2471141   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2471142   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2471143   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2471144   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2471145   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2471146   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2471147   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2471148   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 *
MonthsAsCustomer ;
2471149   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2471150   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2471151   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2471152   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2471153   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2471154   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2471155   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2471156   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2471157   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2471158   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2471159   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2471160   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2471161   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2471162   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2471163   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2471164   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2471165   +END;
MPRINT(EM_DIAGRAM):   END;
2471166   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2471167   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2471168   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2471169   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2471170   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2471171   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2471172   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2471173   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2471174   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2471175   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2471176   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2471177   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2471178   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2471179   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2471180   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2471181   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2471182   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2471183   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2471184   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2471185   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2471186   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2471187   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2471188   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
2471189   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2471190   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2471191   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2471192   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2471193   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2471194   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2471195   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2471196   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2471197   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2471198   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2471199   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 *
MonthsAsCustomer ;
2471200   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2471201   +   ELSE S_NumCatalogPurchases
2471202   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2471203   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2471204   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2471205   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2471206   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2471207   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2471208   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2471209   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2471210   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2471211   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2471212   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2471213   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2471214   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2471215   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2471216   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2471217   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2471218   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2471219   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2471220   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2471221   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2471222   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2471223   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2471224   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2471225   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2471226   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2471227   +END;
MPRINT(EM_DIAGRAM):   END;
2471228   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2471229   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2471230   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2471231   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2471232   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2471233   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2471234   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2471235   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2471236   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2471237   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2471238   +   H1x1_1  =    -1.22979702388871 * S_AcceptedCmpTotal
2471239   +          +    -0.43104795266139 * S_Age  +     0.86889278443529 * S_Frq
2471240   +          +    -1.60769879195759 * S_Income  +     0.50863205564081 *
2471241   +        S_Kidhome  +     0.63485396330815 * S_Mnt  +     1.54715964931126 *
2471242   +        S_MntFishProducts  +     0.75185279130369 * S_MntFruits
2471243   +          +    -0.00997586610757 * S_MntGoldProds  +    -2.37203493907401 *
2471244   +        S_MntMeatProducts  +     0.38638626403468 * S_MntSweetProducts
2471245   +          +     2.26121903773395 * S_MntWines  +    -0.59651789183067 *
2471246   +        S_MonthsAsCustomer  +    -1.52699943820196 * S_NumCatalogPurchases
2471247   +          +    -1.18466001117424 * S_NumDealsPurchases
2471248   +          +     -0.1371252133567 * S_NumDistPurchases
2471249   +          +     1.92719775731123 * S_NumStorePurchases
2471250   +          +     1.23184249192116 * S_NumWebPurchases
2471251   +          +    -1.55583843197424 * S_NumWebVisitsMonth
2471252   +          +    -0.47773207532121 * S_RFMstat  +    -0.35513231558649 *
2471253   +        S_RMntFrq  +     1.63863392145333 * S_Recency
2471254   +          +     0.67173275608308 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.22979702388871 * S_AcceptedCmpTotal + -0.43104795266139 *
S_Age + 0.86889278443529 * S_Frq + -1.60769879195759 * S_Income + 0.50863205564081 * S_Kidhome
+ 0.63485396330815 * S_Mnt + 1.54715964931126 * S_MntFishProducts + 0.75185279130369 *
S_MntFruits + -0.00997586610757 * S_MntGoldProds + -2.37203493907401 * S_MntMeatProducts +
0.38638626403468 * S_MntSweetProducts + 2.26121903773395 * S_MntWines + -0.59651789183067 *
S_MonthsAsCustomer + -1.52699943820196 * S_NumCatalogPurchases + -1.18466001117424 *
S_NumDealsPurchases + -0.1371252133567 * S_NumDistPurchases + 1.92719775731123 *
S_NumStorePurchases + 1.23184249192116 * S_NumWebPurchases + -1.55583843197424 *
S_NumWebVisitsMonth + -0.47773207532121 * S_RFMstat + -0.35513231558649 * S_RMntFrq +
1.63863392145333 * S_Recency + 0.67173275608308 * S_Teenhome ;
2471255   +   H1x1_2  =    -0.02716121128584 * S_AcceptedCmpTotal
2471256   +          +     0.11518566588792 * S_Age  +    -0.03446898150571 * S_Frq
2471257   +          +    -0.19022324523346 * S_Income  +     1.06549395713708 *
2471258   +        S_Kidhome  +    -0.75490876357951 * S_Mnt  +    -0.25515163712879 *
2471259   +        S_MntFishProducts  +    -0.33372388118122 * S_MntFruits
2471260   +          +    -1.35673933518218 * S_MntGoldProds  +    -2.95766948640442 *
2471261   +        S_MntMeatProducts  +      0.2681792093191 * S_MntSweetProducts
2471262   +          +     0.68376629766032 * S_MntWines  +     1.19853579057819 *
2471263   +        S_MonthsAsCustomer  +    -1.27282116370987 * S_NumCatalogPurchases
2471264   +          +     0.63616523425865 * S_NumDealsPurchases
2471265   +          +     0.45460056261546 * S_NumDistPurchases
2471266   +          +    -0.61009999017225 * S_NumStorePurchases
2471267   +          +     1.85193755731081 * S_NumWebPurchases
2471268   +          +    -2.47698404964319 * S_NumWebVisitsMonth
2471269   +          +     -0.6995834208607 * S_RFMstat  +    -0.25646177956568 *
2471270   +        S_RMntFrq  +     1.07962222419254 * S_Recency
2471271   +          +     0.63257022999179 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.02716121128584 * S_AcceptedCmpTotal + 0.11518566588792 *
S_Age + -0.03446898150571 * S_Frq + -0.19022324523346 * S_Income + 1.06549395713708 *
S_Kidhome + -0.75490876357951 * S_Mnt + -0.25515163712879 * S_MntFishProducts +
-0.33372388118122 * S_MntFruits + -1.35673933518218 * S_MntGoldProds + -2.95766948640442 *
S_MntMeatProducts + 0.2681792093191 * S_MntSweetProducts + 0.68376629766032 * S_MntWines +
1.19853579057819 * S_MonthsAsCustomer + -1.27282116370987 * S_NumCatalogPurchases +
0.63616523425865 * S_NumDealsPurchases + 0.45460056261546 * S_NumDistPurchases +
-0.61009999017225 * S_NumStorePurchases + 1.85193755731081 * S_NumWebPurchases +
-2.47698404964319 * S_NumWebVisitsMonth + -0.6995834208607 * S_RFMstat + -0.25646177956568 *
S_RMntFrq + 1.07962222419254 * S_Recency + 0.63257022999179 * S_Teenhome ;
2471272   +   H1x1_3  =     2.21390028099752 * S_AcceptedCmpTotal
2471273   +          +     0.05331556426178 * S_Age  +    -0.65514579137956 * S_Frq
2471274   +          +     0.64307304324121 * S_Income  +    -0.74572098598993 *
2471275   +        S_Kidhome  +     0.72146088814601 * S_Mnt  +    -0.35292583888573 *
2471276   +        S_MntFishProducts  +    -0.60011862194755 * S_MntFruits
2471277   +          +     0.41187011131735 * S_MntGoldProds  +     6.59297713742725 *
2471278   +        S_MntMeatProducts  +    -0.24427365286575 * S_MntSweetProducts
2471279   +          +    -2.72258930476853 * S_MntWines  +     0.14880721485001 *
2471280   +        S_MonthsAsCustomer  +     1.43710120897606 * S_NumCatalogPurchases
2471281   +          +      1.8907968580473 * S_NumDealsPurchases
2471282   +          +     0.01244124801764 * S_NumDistPurchases
2471283   +          +    -2.34409118104622 * S_NumStorePurchases
2471284   +          +    -1.80820043087435 * S_NumWebPurchases
2471285   +          +     2.40219682136039 * S_NumWebVisitsMonth
2471286   +          +     0.64272295101175 * S_RFMstat  +    -2.37583346151401 *
2471287   +        S_RMntFrq  +    -2.05893311376628 * S_Recency
2471288   +          +    -0.09539892763273 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 2.21390028099752 * S_AcceptedCmpTotal + 0.05331556426178 *
S_Age + -0.65514579137956 * S_Frq + 0.64307304324121 * S_Income + -0.74572098598993 *
S_Kidhome + 0.72146088814601 * S_Mnt + -0.35292583888573 * S_MntFishProducts +
-0.60011862194755 * S_MntFruits + 0.41187011131735 * S_MntGoldProds + 6.59297713742725 *
S_MntMeatProducts + -0.24427365286575 * S_MntSweetProducts + -2.72258930476853 * S_MntWines +
0.14880721485001 * S_MonthsAsCustomer + 1.43710120897606 * S_NumCatalogPurchases +
1.8907968580473 * S_NumDealsPurchases + 0.01244124801764 * S_NumDistPurchases +
-2.34409118104622 * S_NumStorePurchases + -1.80820043087435 * S_NumWebPurchases +
2.40219682136039 * S_NumWebVisitsMonth + 0.64272295101175 * S_RFMstat + -2.37583346151401 *
S_RMntFrq + -2.05893311376628 * S_Recency + -0.09539892763273 * S_Teenhome ;
2471289   +   H1x1_4  =     0.39967052173479 * S_AcceptedCmpTotal
2471290   +          +    -0.07923444459672 * S_Age  +     0.62339138041893 * S_Frq
2471291   +          +     1.61789948058771 * S_Income  +     -1.4543646851274 *
2471292   +        S_Kidhome  +      0.0674362517919 * S_Mnt  +    -0.01747401903722 *
2471293   +        S_MntFishProducts  +     0.35122931976599 * S_MntFruits
2471294   +          +     0.49479569666837 * S_MntGoldProds  +     0.96598079382568 *
2471295   +        S_MntMeatProducts  +     0.00966238843619 * S_MntSweetProducts
2471296   +          +    -1.04781861730336 * S_MntWines  +    -0.60232527705864 *
2471297   +        S_MonthsAsCustomer  +     1.64183850526139 * S_NumCatalogPurchases
2471298   +          +     0.28209537604198 * S_NumDealsPurchases
2471299   +          +      0.6450277971767 * S_NumDistPurchases
2471300   +          +     0.85050092520609 * S_NumStorePurchases
2471301   +          +    -0.53920307215941 * S_NumWebPurchases
2471302   +          +     3.01106015100147 * S_NumWebVisitsMonth
2471303   +          +     0.35454480730832 * S_RFMstat  +     2.44126135489059 *
2471304   +        S_RMntFrq  +    -3.15497765450512 * S_Recency
2471305   +          +    -1.52912100940198 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.39967052173479 * S_AcceptedCmpTotal + -0.07923444459672 *
S_Age + 0.62339138041893 * S_Frq + 1.61789948058771 * S_Income + -1.4543646851274 * S_Kidhome
+ 0.0674362517919 * S_Mnt + -0.01747401903722 * S_MntFishProducts + 0.35122931976599 *
S_MntFruits + 0.49479569666837 * S_MntGoldProds + 0.96598079382568 * S_MntMeatProducts +
0.00966238843619 * S_MntSweetProducts + -1.04781861730336 * S_MntWines + -0.60232527705864 *
S_MonthsAsCustomer + 1.64183850526139 * S_NumCatalogPurchases + 0.28209537604198 *
S_NumDealsPurchases + 0.6450277971767 * S_NumDistPurchases + 0.85050092520609 *
S_NumStorePurchases + -0.53920307215941 * S_NumWebPurchases + 3.01106015100147 *
S_NumWebVisitsMonth + 0.35454480730832 * S_RFMstat + 2.44126135489059 * S_RMntFrq +
-3.15497765450512 * S_Recency + -1.52912100940198 * S_Teenhome ;
2471306   +   H1x1_5  =    -1.36246601888598 * S_AcceptedCmpTotal
2471307   +          +     0.18494970680372 * S_Age  +    -0.48239316237012 * S_Frq
2471308   +          +    -0.07754710635082 * S_Income  +    -1.12988783865284 *
2471309   +        S_Kidhome  +    -0.99389820487435 * S_Mnt  +     0.97730928948588 *
2471310   +        S_MntFishProducts  +     0.22400827772102 * S_MntFruits
2471311   +          +     0.74486626223136 * S_MntGoldProds  +    -5.09299340099429 *
2471312   +        S_MntMeatProducts  +     -0.9293665551505 * S_MntSweetProducts
2471313   +          +     2.05621056740754 * S_MntWines  +     0.13751326047818 *
2471314   +        S_MonthsAsCustomer  +    -0.78748700520409 * S_NumCatalogPurchases
2471315   +          +    -0.36642526324451 * S_NumDealsPurchases
2471316   +          +     -0.6091014843932 * S_NumDistPurchases
2471317   +          +    -0.21154626182088 * S_NumStorePurchases
2471318   +          +    -0.10361347071364 * S_NumWebPurchases
2471319   +          +     1.36358817627784 * S_NumWebVisitsMonth
2471320   +          +    -1.12999319551924 * S_RFMstat  +    -0.19491430019245 *
2471321   +        S_RMntFrq  +    -1.04649498091784 * S_Recency
2471322   +          +     0.17452738843544 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.36246601888598 * S_AcceptedCmpTotal + 0.18494970680372 *
S_Age + -0.48239316237012 * S_Frq + -0.07754710635082 * S_Income + -1.12988783865284 *
S_Kidhome + -0.99389820487435 * S_Mnt + 0.97730928948588 * S_MntFishProducts +
0.22400827772102 * S_MntFruits + 0.74486626223136 * S_MntGoldProds + -5.09299340099429 *
S_MntMeatProducts + -0.9293665551505 * S_MntSweetProducts + 2.05621056740754 * S_MntWines +
0.13751326047818 * S_MonthsAsCustomer + -0.78748700520409 * S_NumCatalogPurchases +
-0.36642526324451 * S_NumDealsPurchases + -0.6091014843932 * S_NumDistPurchases +
-0.21154626182088 * S_NumStorePurchases + -0.10361347071364 * S_NumWebPurchases +
1.36358817627784 * S_NumWebVisitsMonth + -1.12999319551924 * S_RFMstat + -0.19491430019245 *
S_RMntFrq + -1.04649498091784 * S_Recency + 0.17452738843544 * S_Teenhome ;
2471323   +   H1x1_6  =    -0.61844696407508 * S_AcceptedCmpTotal
2471324   +          +    -0.13181297602063 * S_Age  +        0.68456903056 * S_Frq
2471325   +          +    -0.34991774042788 * S_Income  +     1.46159955002315 *
2471326   +        S_Kidhome  +     0.21200077233877 * S_Mnt  +    -1.25754094670769 *
2471327   +        S_MntFishProducts  +    -0.09204195787339 * S_MntFruits
2471328   +          +     0.30860507694466 * S_MntGoldProds  +     2.47956356836605 *
2471329   +        S_MntMeatProducts  +     0.40882561010395 * S_MntSweetProducts
2471330   +          +    -0.31319819026957 * S_MntWines  +    -0.35678594664106 *
2471331   +        S_MonthsAsCustomer  +     0.01690494248971 * S_NumCatalogPurchases
2471332   +          +    -0.14868505161718 * S_NumDealsPurchases
2471333   +          +    -0.08395384711805 * S_NumDistPurchases
2471334   +          +     0.60525238179245 * S_NumStorePurchases
2471335   +          +     0.04555100214276 * S_NumWebPurchases
2471336   +          +    -2.31888436784305 * S_NumWebVisitsMonth
2471337   +          +     0.04533094777373 * S_RFMstat  +     1.45047684433196 *
2471338   +        S_RMntFrq  +     3.02439474266744 * S_Recency
2471339   +          +     1.00458920115313 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -0.61844696407508 * S_AcceptedCmpTotal + -0.13181297602063 *
S_Age + 0.68456903056 * S_Frq + -0.34991774042788 * S_Income + 1.46159955002315 * S_Kidhome +
0.21200077233877 * S_Mnt + -1.25754094670769 * S_MntFishProducts + -0.09204195787339 *
S_MntFruits + 0.30860507694466 * S_MntGoldProds + 2.47956356836605 * S_MntMeatProducts +
0.40882561010395 * S_MntSweetProducts + -0.31319819026957 * S_MntWines + -0.35678594664106 *
S_MonthsAsCustomer + 0.01690494248971 * S_NumCatalogPurchases + -0.14868505161718 *
S_NumDealsPurchases + -0.08395384711805 * S_NumDistPurchases + 0.60525238179245 *
S_NumStorePurchases + 0.04555100214276 * S_NumWebPurchases + -2.31888436784305 *
S_NumWebVisitsMonth + 0.04533094777373 * S_RFMstat + 1.45047684433196 * S_RMntFrq +
3.02439474266744 * S_Recency + 1.00458920115313 * S_Teenhome ;
2471340   +   H1x1_1  = H1x1_1  +     1.44647846478949 * AcceptedCmp10
2471341   +          +     0.96385529143297 * AcceptedCmp20  +     0.80013060089317 *
2471342   +        AcceptedCmp30  +     1.84770198014032 * AcceptedCmp40
2471343   +          +     0.80401446607714 * AcceptedCmp50  +     0.54049538978821 *
2471344   +        Complain0  +     0.10087163212641 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 1.44647846478949 * AcceptedCmp10 + 0.96385529143297 *
AcceptedCmp20 + 0.80013060089317 * AcceptedCmp30 + 1.84770198014032 * AcceptedCmp40 +
0.80401446607714 * AcceptedCmp50 + 0.54049538978821 * Complain0 + 0.10087163212641 *
HigherEducationBinary0 ;
2471345   +   H1x1_2  = H1x1_2  +    -1.68777270512099 * AcceptedCmp10
2471346   +          +     0.54885195015877 * AcceptedCmp20  +    -0.90402264974928 *
2471347   +        AcceptedCmp30  +    -0.42358682267334 * AcceptedCmp40
2471348   +          +     0.87016183962004 * AcceptedCmp50  +     0.42082407002478 *
2471349   +        Complain0  +    -0.37999025234308 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -1.68777270512099 * AcceptedCmp10 + 0.54885195015877 *
AcceptedCmp20 + -0.90402264974928 * AcceptedCmp30 + -0.42358682267334 * AcceptedCmp40 +
0.87016183962004 * AcceptedCmp50 + 0.42082407002478 * Complain0 + -0.37999025234308 *
HigherEducationBinary0 ;
2471350   +   H1x1_3  = H1x1_3  +    -0.40437631159129 * AcceptedCmp10
2471351   +          +      0.0972205308159 * AcceptedCmp20  +     0.81983130325412 *
2471352   +        AcceptedCmp30  +     0.11521626741585 * AcceptedCmp40
2471353   +          +    -0.67384158900854 * AcceptedCmp50  +    -0.08888648111628 *
2471354   +        Complain0  +    -0.12489144574555 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.40437631159129 * AcceptedCmp10 + 0.0972205308159 *
AcceptedCmp20 + 0.81983130325412 * AcceptedCmp30 + 0.11521626741585 * AcceptedCmp40 +
-0.67384158900854 * AcceptedCmp50 + -0.08888648111628 * Complain0 + -0.12489144574555 *
HigherEducationBinary0 ;
2471355   +   H1x1_4  = H1x1_4  +    -0.11861456940351 * AcceptedCmp10
2471356   +          +    -0.84401831403342 * AcceptedCmp20  +    -0.99900514370547 *
2471357   +        AcceptedCmp30  +     0.03311277744337 * AcceptedCmp40
2471358   +          +    -0.89369182681709 * AcceptedCmp50  +    -0.46321923883787 *
2471359   +        Complain0  +     0.73698890563732 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.11861456940351 * AcceptedCmp10 + -0.84401831403342
* AcceptedCmp20 + -0.99900514370547 * AcceptedCmp30 + 0.03311277744337 * AcceptedCmp40 +
-0.89369182681709 * AcceptedCmp50 + -0.46321923883787 * Complain0 + 0.73698890563732 *
HigherEducationBinary0 ;
2471360   +   H1x1_5  = H1x1_5  +     1.36740346673871 * AcceptedCmp10
2471361   +          +    -0.09307995102939 * AcceptedCmp20  +    -0.99727975675265 *
2471362   +        AcceptedCmp30  +    -1.64006559974507 * AcceptedCmp40
2471363   +          +    -0.12164496778613 * AcceptedCmp50  +    -0.20852398947217 *
2471364   +        Complain0  +    -0.12903157145588 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 1.36740346673871 * AcceptedCmp10 + -0.09307995102939 *
AcceptedCmp20 + -0.99727975675265 * AcceptedCmp30 + -1.64006559974507 * AcceptedCmp40 +
-0.12164496778613 * AcceptedCmp50 + -0.20852398947217 * Complain0 + -0.12903157145588 *
HigherEducationBinary0 ;
2471365   +   H1x1_6  = H1x1_6  +    -0.18375336439178 * AcceptedCmp10
2471366   +          +    -0.61320886099742 * AcceptedCmp20  +     1.46384578641555 *
2471367   +        AcceptedCmp30  +     1.07211075480456 * AcceptedCmp40
2471368   +          +      0.1814894663676 * AcceptedCmp50  +     0.61050756961671 *
2471369   +        Complain0  +     0.18598381049052 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + -0.18375336439178 * AcceptedCmp10 + -0.61320886099742
* AcceptedCmp20 + 1.46384578641555 * AcceptedCmp30 + 1.07211075480456 * AcceptedCmp40 +
0.1814894663676 * AcceptedCmp50 + 0.61050756961671 * Complain0 + 0.18598381049052 *
HigherEducationBinary0 ;
2471370   +   H1x1_1  = H1x1_1  +    -0.85219855086228 * Education2n_Cycle
2471371   +          +     0.72409647993559 * EducationBasic  +    -1.69896726220399 *
2471372   +        EducationGraduation  +     0.96924197858068 * EducationMaster
2471373   +          +     -0.7180104021039 * Marital_StatusDivorced
2471374   +          +      0.5957373170744 * Marital_StatusMarried
2471375   +          +    -0.86183942803988 * Marital_StatusSingle
2471376   +          +     0.92994743994713 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.85219855086228 * Education2n_Cycle +
0.72409647993559 * EducationBasic + -1.69896726220399 * EducationGraduation + 0.96924197858068
* EducationMaster + -0.7180104021039 * Marital_StatusDivorced + 0.5957373170744 *
Marital_StatusMarried + -0.86183942803988 * Marital_StatusSingle + 0.92994743994713 *
Marital_StatusTogether ;
2471377   +   H1x1_2  = H1x1_2  +    -0.29863788783823 * Education2n_Cycle
2471378   +          +    -0.03492398661463 * EducationBasic  +     1.96491183828121 *
2471379   +        EducationGraduation  +    -1.23733321574678 * EducationMaster
2471380   +          +     0.84772700244021 * Marital_StatusDivorced
2471381   +          +    -0.37049970188511 * Marital_StatusMarried
2471382   +          +     1.54291641732063 * Marital_StatusSingle
2471383   +          +      0.2036514883055 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.29863788783823 * Education2n_Cycle +
-0.03492398661463 * EducationBasic + 1.96491183828121 * EducationGraduation +
-1.23733321574678 * EducationMaster + 0.84772700244021 * Marital_StatusDivorced +
-0.37049970188511 * Marital_StatusMarried + 1.54291641732063 * Marital_StatusSingle +
0.2036514883055 * Marital_StatusTogether ;
2471384   +   H1x1_3  = H1x1_3  +     0.21600870420184 * Education2n_Cycle
2471385   +          +    -0.41247138958506 * EducationBasic  +    -0.04710356650237 *
2471386   +        EducationGraduation  +     0.02093123351397 * EducationMaster
2471387   +          +     0.73222548496385 * Marital_StatusDivorced
2471388   +          +    -0.50102202656102 * Marital_StatusMarried
2471389   +          +    -0.07207130428422 * Marital_StatusSingle
2471390   +          +     0.17349558515949 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.21600870420184 * Education2n_Cycle +
-0.41247138958506 * EducationBasic + -0.04710356650237 * EducationGraduation +
0.02093123351397 * EducationMaster + 0.73222548496385 * Marital_StatusDivorced +
-0.50102202656102 * Marital_StatusMarried + -0.07207130428422 * Marital_StatusSingle +
0.17349558515949 * Marital_StatusTogether ;
2471391   +   H1x1_4  = H1x1_4  +    -0.26695942691152 * Education2n_Cycle
2471392   +          +     0.08346486410021 * EducationBasic  +    -1.19880044804188 *
2471393   +        EducationGraduation  +     0.65366032471107 * EducationMaster
2471394   +          +     0.25894719464799 * Marital_StatusDivorced
2471395   +          +    -1.95576501275834 * Marital_StatusMarried
2471396   +          +     2.65422185276746 * Marital_StatusSingle
2471397   +          +    -3.75373924980398 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.26695942691152 * Education2n_Cycle +
0.08346486410021 * EducationBasic + -1.19880044804188 * EducationGraduation + 0.65366032471107
* EducationMaster + 0.25894719464799 * Marital_StatusDivorced + -1.95576501275834 *
Marital_StatusMarried + 2.65422185276746 * Marital_StatusSingle + -3.75373924980398 *
Marital_StatusTogether ;
2471398   +   H1x1_5  = H1x1_5  +     0.17586479935526 * Education2n_Cycle
2471399   +          +    -0.60926722758624 * EducationBasic  +    -0.09613529218096 *
2471400   +        EducationGraduation  +    -0.28683119112285 * EducationMaster
2471401   +          +     0.60936191204707 * Marital_StatusDivorced
2471402   +          +    -0.52190111190458 * Marital_StatusMarried
2471403   +          +    -0.60982305233136 * Marital_StatusSingle
2471404   +          +     0.44659686388318 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 0.17586479935526 * Education2n_Cycle +
-0.60926722758624 * EducationBasic + -0.09613529218096 * EducationGraduation +
-0.28683119112285 * EducationMaster + 0.60936191204707 * Marital_StatusDivorced +
-0.52190111190458 * Marital_StatusMarried + -0.60982305233136 * Marital_StatusSingle +
0.44659686388318 * Marital_StatusTogether ;
2471405   +   H1x1_6  = H1x1_6  +     0.16067502362228 * Education2n_Cycle
2471406   +          +     0.18937855703296 * EducationBasic  +     0.06386817095607 *
2471407   +        EducationGraduation  +     0.51538853297606 * EducationMaster
2471408   +          +    -1.44614502228294 * Marital_StatusDivorced
2471409   +          +      2.9001493892928 * Marital_StatusMarried
2471410   +          +    -2.60467399972513 * Marital_StatusSingle
2471411   +          +     2.31815156650258 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + 0.16067502362228 * Education2n_Cycle +
0.18937855703296 * EducationBasic + 0.06386817095607 * EducationGraduation + 0.51538853297606
* EducationMaster + -1.44614502228294 * Marital_StatusDivorced + 2.9001493892928 *
Marital_StatusMarried + -2.60467399972513 * Marital_StatusSingle + 2.31815156650258 *
Marital_StatusTogether ;
2471412   +   H1x1_1  =     2.01245018737649 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 2.01245018737649 + H1x1_1 ;
2471413   +   H1x1_2  =    -0.13724223857423 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.13724223857423 + H1x1_2 ;
2471414   +   H1x1_3  =     0.82934879006547 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.82934879006547 + H1x1_3 ;
2471415   +   H1x1_4  =    -0.21545557935699 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.21545557935699 + H1x1_4 ;
2471416   +   H1x1_5  =     0.44835497486542 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0.44835497486542 + H1x1_5 ;
2471417   +   H1x1_6  =     0.11792774897936 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0.11792774897936 + H1x1_6 ;
2471418   +   H1x1_7  = 0;
MPRINT(EM_DIAGRAM):   H1x1_7 = 0;
2471419   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 , H1x1_7
2471420   +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 ,
H1x1_7 );
2471421   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2471422   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
2471423   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
2471424   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
2471425   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
2471426   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
2471427   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
2471428   +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
2471429   +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
2471430   +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
2471431   +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
2471432   +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
2471433   +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
2471434   +   H1x1_7  = EXP(H1x1_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_7 = EXP(H1x1_7 - _MAX_);
2471435   +   _SUM_ = _SUM_ + H1x1_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_7 ;
2471436   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
2471437   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
2471438   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
2471439   +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
2471440   +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
2471441   +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
2471442   +   H1x1_7  = H1x1_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_7 = H1x1_7 / _SUM_;
2471443   +END;
MPRINT(EM_DIAGRAM):   END;
2471444   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2471445   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2471446   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2471447   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2471448   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2471449   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
2471450   +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
2471451   +   H1x1_7  = .;
MPRINT(EM_DIAGRAM):   H1x1_7 = .;
2471452   +END;
MPRINT(EM_DIAGRAM):   END;
2471453   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2471454   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
2471455   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2471456   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2471457   +   H1x2_1  =    -0.51245281628488 * S_AcceptedCmpTotal
2471458   +          +     0.29586551487242 * S_Age  +     1.34531593814589 * S_Frq
2471459   +          +     1.40753230099536 * S_Income  +    -1.01979935776675 *
2471460   +        S_Kidhome  +      1.0655533203194 * S_Mnt  +     0.74171867275429 *
2471461   +        S_MntFishProducts  +    -0.77881282886264 * S_MntFruits
2471462   +          +    -0.58546798489474 * S_MntGoldProds  +     0.93410444049208 *
2471463   +        S_MntMeatProducts  +     1.10536507959221 * S_MntSweetProducts
2471464   +          +     2.08723894920384 * S_MntWines  +    -0.64437193401661 *
2471465   +        S_MonthsAsCustomer  +     1.49880648713252 * S_NumCatalogPurchases
2471466   +          +    -0.46483717253931 * S_NumDealsPurchases
2471467   +          +    -0.53329008421157 * S_NumDistPurchases
2471468   +          +      0.2490774300193 * S_NumStorePurchases
2471469   +          +    -0.82755150673885 * S_NumWebPurchases
2471470   +          +     0.04007223822389 * S_NumWebVisitsMonth
2471471   +          +    -0.21044923749124 * S_RFMstat  +     0.27791352512351 *
2471472   +        S_RMntFrq  +     0.43434806411249 * S_Recency
2471473   +          +    -1.25974784572932 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.51245281628488 * S_AcceptedCmpTotal + 0.29586551487242 *
S_Age + 1.34531593814589 * S_Frq + 1.40753230099536 * S_Income + -1.01979935776675 * S_Kidhome
+ 1.0655533203194 * S_Mnt + 0.74171867275429 * S_MntFishProducts + -0.77881282886264 *
S_MntFruits + -0.58546798489474 * S_MntGoldProds + 0.93410444049208 * S_MntMeatProducts +
1.10536507959221 * S_MntSweetProducts + 2.08723894920384 * S_MntWines + -0.64437193401661 *
S_MonthsAsCustomer + 1.49880648713252 * S_NumCatalogPurchases + -0.46483717253931 *
S_NumDealsPurchases + -0.53329008421157 * S_NumDistPurchases + 0.2490774300193 *
S_NumStorePurchases + -0.82755150673885 * S_NumWebPurchases + 0.04007223822389 *
S_NumWebVisitsMonth + -0.21044923749124 * S_RFMstat + 0.27791352512351 * S_RMntFrq +
0.43434806411249 * S_Recency + -1.25974784572932 * S_Teenhome ;
2471474   +   H1x2_2  =     0.30117516029562 * S_AcceptedCmpTotal
2471475   +          +     0.16042149118905 * S_Age  +    -2.59350323749407 * S_Frq
2471476   +          +    -0.29940842910223 * S_Income  +    -0.09168883019219 *
2471477   +        S_Kidhome  +    -0.39758312303322 * S_Mnt  +     -0.4138816285287 *
2471478   +        S_MntFishProducts  +        0.18555623351 * S_MntFruits
2471479   +          +    -0.28024159914959 * S_MntGoldProds  +     1.08084875123781 *
2471480   +        S_MntMeatProducts  +     0.29032828446632 * S_MntSweetProducts
2471481   +          +     0.47556687393839 * S_MntWines  +    -0.89795441591329 *
2471482   +        S_MonthsAsCustomer  +    -0.47081176716106 * S_NumCatalogPurchases
2471483   +          +     0.75855101382458 * S_NumDealsPurchases
2471484   +          +     1.61754951768262 * S_NumDistPurchases
2471485   +          +    -0.48146714929729 * S_NumStorePurchases
2471486   +          +    -0.76460728035552 * S_NumWebPurchases
2471487   +          +    -0.71146787112442 * S_NumWebVisitsMonth
2471488   +          +     0.42381866124588 * S_RFMstat  +     -0.3894818400451 *
2471489   +        S_RMntFrq  +    -0.01528916550509 * S_Recency
2471490   +          +     0.38823136254948 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.30117516029562 * S_AcceptedCmpTotal + 0.16042149118905 *
S_Age + -2.59350323749407 * S_Frq + -0.29940842910223 * S_Income + -0.09168883019219 *
S_Kidhome + -0.39758312303322 * S_Mnt + -0.4138816285287 * S_MntFishProducts + 0.18555623351 *
S_MntFruits + -0.28024159914959 * S_MntGoldProds + 1.08084875123781 * S_MntMeatProducts +
0.29032828446632 * S_MntSweetProducts + 0.47556687393839 * S_MntWines + -0.89795441591329 *
S_MonthsAsCustomer + -0.47081176716106 * S_NumCatalogPurchases + 0.75855101382458 *
S_NumDealsPurchases + 1.61754951768262 * S_NumDistPurchases + -0.48146714929729 *
S_NumStorePurchases + -0.76460728035552 * S_NumWebPurchases + -0.71146787112442 *
S_NumWebVisitsMonth + 0.42381866124588 * S_RFMstat + -0.3894818400451 * S_RMntFrq +
-0.01528916550509 * S_Recency + 0.38823136254948 * S_Teenhome ;
2471491   +   H1x2_3  =    -1.28283712556699 * S_AcceptedCmpTotal
2471492   +          +    -0.62214066983867 * S_Age  +      0.0675653313166 * S_Frq
2471493   +          +     0.77098495841918 * S_Income  +    -1.36225954388119 *
2471494   +        S_Kidhome  +      0.0552831076081 * S_Mnt  +    -0.21387512812296 *
2471495   +        S_MntFishProducts  +    -1.14715718471691 * S_MntFruits
2471496   +          +    -1.15507787000433 * S_MntGoldProds  +     0.87571107504211 *
2471497   +        S_MntMeatProducts  +     0.28274178198443 * S_MntSweetProducts
2471498   +          +     0.23070204507311 * S_MntWines  +    -1.88342889522874 *
2471499   +        S_MonthsAsCustomer  +    -0.19127945486903 * S_NumCatalogPurchases
2471500   +          +     0.75255317965748 * S_NumDealsPurchases
2471501   +          +     1.34900588315783 * S_NumDistPurchases
2471502   +          +    -0.17717469778048 * S_NumStorePurchases
2471503   +          +    -0.01560551546553 * S_NumWebPurchases
2471504   +          +     1.24315988674343 * S_NumWebVisitsMonth
2471505   +          +     2.23854910235018 * S_RFMstat  +     0.55516131558838 *
2471506   +        S_RMntFrq  +    -2.01558015490584 * S_Recency
2471507   +          +     1.34178435587014 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -1.28283712556699 * S_AcceptedCmpTotal + -0.62214066983867 *
S_Age + 0.0675653313166 * S_Frq + 0.77098495841918 * S_Income + -1.36225954388119 * S_Kidhome
+ 0.0552831076081 * S_Mnt + -0.21387512812296 * S_MntFishProducts + -1.14715718471691 *
S_MntFruits + -1.15507787000433 * S_MntGoldProds + 0.87571107504211 * S_MntMeatProducts +
0.28274178198443 * S_MntSweetProducts + 0.23070204507311 * S_MntWines + -1.88342889522874 *
S_MonthsAsCustomer + -0.19127945486903 * S_NumCatalogPurchases + 0.75255317965748 *
S_NumDealsPurchases + 1.34900588315783 * S_NumDistPurchases + -0.17717469778048 *
S_NumStorePurchases + -0.01560551546553 * S_NumWebPurchases + 1.24315988674343 *
S_NumWebVisitsMonth + 2.23854910235018 * S_RFMstat + 0.55516131558838 * S_RMntFrq +
-2.01558015490584 * S_Recency + 1.34178435587014 * S_Teenhome ;
2471508   +   H1x2_4  =     1.35706411211536 * S_AcceptedCmpTotal
2471509   +          +    -0.73374940975123 * S_Age  +     2.10445428870671 * S_Frq
2471510   +          +    -1.60133766439775 * S_Income  +     0.02861907512789 *
2471511   +        S_Kidhome  +    -1.61837693250001 * S_Mnt  +       0.209751533263 *
2471512   +        S_MntFishProducts  +     1.82411973889656 * S_MntFruits
2471513   +          +     1.12172774431408 * S_MntGoldProds  +     1.09610288046573 *
2471514   +        S_MntMeatProducts  +    -0.86671874280949 * S_MntSweetProducts
2471515   +          +    -0.11602638812541 * S_MntWines  +    -0.30074020863435 *
2471516   +        S_MonthsAsCustomer  +     0.46044258716085 * S_NumCatalogPurchases
2471517   +          +    -1.71127148178768 * S_NumDealsPurchases
2471518   +          +    -1.77527355221308 * S_NumDistPurchases
2471519   +          +    -1.40009594349363 * S_NumStorePurchases
2471520   +          +    -0.46471012062697 * S_NumWebPurchases
2471521   +          +     0.04619891083228 * S_NumWebVisitsMonth
2471522   +          +     0.34715614649891 * S_RFMstat  +    -0.74983051176564 *
2471523   +        S_RMntFrq  +     0.84880186653433 * S_Recency
2471524   +          +     0.20218341857265 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 1.35706411211536 * S_AcceptedCmpTotal + -0.73374940975123 *
S_Age + 2.10445428870671 * S_Frq + -1.60133766439775 * S_Income + 0.02861907512789 * S_Kidhome
+ -1.61837693250001 * S_Mnt + 0.209751533263 * S_MntFishProducts + 1.82411973889656 *
S_MntFruits + 1.12172774431408 * S_MntGoldProds + 1.09610288046573 * S_MntMeatProducts +
-0.86671874280949 * S_MntSweetProducts + -0.11602638812541 * S_MntWines + -0.30074020863435 *
S_MonthsAsCustomer + 0.46044258716085 * S_NumCatalogPurchases + -1.71127148178768 *
S_NumDealsPurchases + -1.77527355221308 * S_NumDistPurchases + -1.40009594349363 *
S_NumStorePurchases + -0.46471012062697 * S_NumWebPurchases + 0.04619891083228 *
S_NumWebVisitsMonth + 0.34715614649891 * S_RFMstat + -0.74983051176564 * S_RMntFrq +
0.84880186653433 * S_Recency + 0.20218341857265 * S_Teenhome ;
2471525   +   H1x2_5  =     1.79452363233333 * S_AcceptedCmpTotal
2471526   +          +     1.70826835028511 * S_Age  +     0.08241717907016 * S_Frq
2471527   +          +    -1.15275600314196 * S_Income  +     0.87736096074094 *
2471528   +        S_Kidhome  +     0.90821427722502 * S_Mnt  +    -0.84055732556964 *
2471529   +        S_MntFishProducts  +    -0.74245639083939 * S_MntFruits
2471530   +          +     0.00204325095854 * S_MntGoldProds  +     0.37597102500134 *
2471531   +        S_MntMeatProducts  +     0.28586076288454 * S_MntSweetProducts
2471532   +          +    -1.38194310174269 * S_MntWines  +     0.10286181254259 *
2471533   +        S_MonthsAsCustomer  +    -0.82469018226034 * S_NumCatalogPurchases
2471534   +          +    -0.22204470395056 * S_NumDealsPurchases
2471535   +          +    -1.74490476011984 * S_NumDistPurchases
2471536   +          +     1.93538420108324 * S_NumStorePurchases
2471537   +          +     1.04892631742152 * S_NumWebPurchases
2471538   +          +     1.50717841566047 * S_NumWebVisitsMonth
2471539   +          +     0.61249250909375 * S_RFMstat  +    -0.54764212165911 *
2471540   +        S_RMntFrq  +      1.9918829185386 * S_Recency
2471541   +          +     0.64908540313947 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.79452363233333 * S_AcceptedCmpTotal + 1.70826835028511 *
S_Age + 0.08241717907016 * S_Frq + -1.15275600314196 * S_Income + 0.87736096074094 * S_Kidhome
+ 0.90821427722502 * S_Mnt + -0.84055732556964 * S_MntFishProducts + -0.74245639083939 *
S_MntFruits + 0.00204325095854 * S_MntGoldProds + 0.37597102500134 * S_MntMeatProducts +
0.28586076288454 * S_MntSweetProducts + -1.38194310174269 * S_MntWines + 0.10286181254259 *
S_MonthsAsCustomer + -0.82469018226034 * S_NumCatalogPurchases + -0.22204470395056 *
S_NumDealsPurchases + -1.74490476011984 * S_NumDistPurchases + 1.93538420108324 *
S_NumStorePurchases + 1.04892631742152 * S_NumWebPurchases + 1.50717841566047 *
S_NumWebVisitsMonth + 0.61249250909375 * S_RFMstat + -0.54764212165911 * S_RMntFrq +
1.9918829185386 * S_Recency + 0.64908540313947 * S_Teenhome ;
2471542   +   H1x2_6  =     1.38705263280369 * S_AcceptedCmpTotal
2471543   +          +    -0.70531523704191 * S_Age  +     0.59125500807205 * S_Frq
2471544   +          +     0.89549490842249 * S_Income  +     1.07240562425698 *
2471545   +        S_Kidhome  +    -0.25050185694258 * S_Mnt  +    -0.77552207934024 *
2471546   +        S_MntFishProducts  +     0.18087757744856 * S_MntFruits
2471547   +          +    -1.37618517481144 * S_MntGoldProds  +      0.6557488228355 *
2471548   +        S_MntMeatProducts  +    -1.40834207395949 * S_MntSweetProducts
2471549   +          +    -0.76196689750388 * S_MntWines  +     0.85144735274506 *
2471550   +        S_MonthsAsCustomer  +     0.66349954778428 * S_NumCatalogPurchases
2471551   +          +    -0.94690420785776 * S_NumDealsPurchases
2471552   +          +     1.87932706342204 * S_NumDistPurchases
2471553   +          +     0.31232717416487 * S_NumStorePurchases
2471554   +          +     1.51889492693355 * S_NumWebPurchases
2471555   +          +     0.04376853689795 * S_NumWebVisitsMonth
2471556   +          +    -2.53979043374029 * S_RFMstat  +     1.33915580029494 *
2471557   +        S_RMntFrq  +    -1.21983510008829 * S_Recency
2471558   +          +     0.36122230024433 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_6 = 1.38705263280369 * S_AcceptedCmpTotal + -0.70531523704191 *
S_Age + 0.59125500807205 * S_Frq + 0.89549490842249 * S_Income + 1.07240562425698 * S_Kidhome
+ -0.25050185694258 * S_Mnt + -0.77552207934024 * S_MntFishProducts + 0.18087757744856 *
S_MntFruits + -1.37618517481144 * S_MntGoldProds + 0.6557488228355 * S_MntMeatProducts +
-1.40834207395949 * S_MntSweetProducts + -0.76196689750388 * S_MntWines + 0.85144735274506 *
S_MonthsAsCustomer + 0.66349954778428 * S_NumCatalogPurchases + -0.94690420785776 *
S_NumDealsPurchases + 1.87932706342204 * S_NumDistPurchases + 0.31232717416487 *
S_NumStorePurchases + 1.51889492693355 * S_NumWebPurchases + 0.04376853689795 *
S_NumWebVisitsMonth + -2.53979043374029 * S_RFMstat + 1.33915580029494 * S_RMntFrq +
-1.21983510008829 * S_Recency + 0.36122230024433 * S_Teenhome ;
2471559   +   H1x2_1  = H1x2_1  +     1.89852147155601 * AcceptedCmp10
2471560   +          +     0.03501265764204 * AcceptedCmp20  +    -0.45070218241239 *
2471561   +        AcceptedCmp30  +    -1.27257966336041 * AcceptedCmp40
2471562   +          +     0.86175125820023 * AcceptedCmp50  +     1.42864024461581 *
2471563   +        Complain0  +     0.34417315915901 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 1.89852147155601 * AcceptedCmp10 + 0.03501265764204 *
AcceptedCmp20 + -0.45070218241239 * AcceptedCmp30 + -1.27257966336041 * AcceptedCmp40 +
0.86175125820023 * AcceptedCmp50 + 1.42864024461581 * Complain0 + 0.34417315915901 *
HigherEducationBinary0 ;
2471564   +   H1x2_2  = H1x2_2  +     0.41672679168374 * AcceptedCmp10
2471565   +          +     0.10769233314512 * AcceptedCmp20  +     0.42374549876289 *
2471566   +        AcceptedCmp30  +     0.65697535989046 * AcceptedCmp40
2471567   +          +     1.49817201460948 * AcceptedCmp50  +     0.46039378640249 *
2471568   +        Complain0  +     1.34709525059573 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.41672679168374 * AcceptedCmp10 + 0.10769233314512 *
AcceptedCmp20 + 0.42374549876289 * AcceptedCmp30 + 0.65697535989046 * AcceptedCmp40 +
1.49817201460948 * AcceptedCmp50 + 0.46039378640249 * Complain0 + 1.34709525059573 *
HigherEducationBinary0 ;
2471569   +   H1x2_3  = H1x2_3  +     0.75388522027745 * AcceptedCmp10
2471570   +          +     2.63069611253058 * AcceptedCmp20  +     0.30907626174766 *
2471571   +        AcceptedCmp30  +     1.10100873408666 * AcceptedCmp40
2471572   +          +    -1.08824297693055 * AcceptedCmp50  +     1.05059014395924 *
2471573   +        Complain0  +     0.67869922391732 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.75388522027745 * AcceptedCmp10 + 2.63069611253058 *
AcceptedCmp20 + 0.30907626174766 * AcceptedCmp30 + 1.10100873408666 * AcceptedCmp40 +
-1.08824297693055 * AcceptedCmp50 + 1.05059014395924 * Complain0 + 0.67869922391732 *
HigherEducationBinary0 ;
2471574   +   H1x2_4  = H1x2_4  +    -0.22033664091288 * AcceptedCmp10
2471575   +          +     1.34914301916376 * AcceptedCmp20  +    -0.91465085581504 *
2471576   +        AcceptedCmp30  +    -0.19686441685837 * AcceptedCmp40
2471577   +          +     0.10683331864009 * AcceptedCmp50  +    -0.00754824810979 *
2471578   +        Complain0  +     1.52033864172921 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + -0.22033664091288 * AcceptedCmp10 + 1.34914301916376 *
AcceptedCmp20 + -0.91465085581504 * AcceptedCmp30 + -0.19686441685837 * AcceptedCmp40 +
0.10683331864009 * AcceptedCmp50 + -0.00754824810979 * Complain0 + 1.52033864172921 *
HigherEducationBinary0 ;
2471579   +   H1x2_5  = H1x2_5  +     0.83049886541915 * AcceptedCmp10
2471580   +          +    -0.74079162208987 * AcceptedCmp20  +    -0.67792505698297 *
2471581   +        AcceptedCmp30  +     0.07081190269168 * AcceptedCmp40
2471582   +          +     0.18720033568684 * AcceptedCmp50  +      2.6531318197812 *
2471583   +        Complain0  +     0.89741230471087 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.83049886541915 * AcceptedCmp10 + -0.74079162208987 *
AcceptedCmp20 + -0.67792505698297 * AcceptedCmp30 + 0.07081190269168 * AcceptedCmp40 +
0.18720033568684 * AcceptedCmp50 + 2.6531318197812 * Complain0 + 0.89741230471087 *
HigherEducationBinary0 ;
2471584   +   H1x2_6  = H1x2_6  +    -0.56781516290501 * AcceptedCmp10
2471585   +          +    -1.51874938874937 * AcceptedCmp20  +     1.28621778326033 *
2471586   +        AcceptedCmp30  +    -0.68769482686243 * AcceptedCmp40
2471587   +          +     0.35592893389946 * AcceptedCmp50  +    -1.30827608061077 *
2471588   +        Complain0  +     0.32980103195099 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + -0.56781516290501 * AcceptedCmp10 + -1.51874938874937
* AcceptedCmp20 + 1.28621778326033 * AcceptedCmp30 + -0.68769482686243 * AcceptedCmp40 +
0.35592893389946 * AcceptedCmp50 + -1.30827608061077 * Complain0 + 0.32980103195099 *
HigherEducationBinary0 ;
2471589   +   H1x2_1  = H1x2_1  +     -1.3799101073197 * Education2n_Cycle
2471590   +          +     0.02501135207931 * EducationBasic  +     1.13490660748682 *
2471591   +        EducationGraduation  +    -0.11344307008943 * EducationMaster
2471592   +          +     0.56030871857835 * Marital_StatusDivorced
2471593   +          +    -1.22448534379831 * Marital_StatusMarried
2471594   +          +     0.78141783495855 * Marital_StatusSingle
2471595   +          +    -1.35807438297575 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -1.3799101073197 * Education2n_Cycle +
0.02501135207931 * EducationBasic + 1.13490660748682 * EducationGraduation + -0.11344307008943
* EducationMaster + 0.56030871857835 * Marital_StatusDivorced + -1.22448534379831 *
Marital_StatusMarried + 0.78141783495855 * Marital_StatusSingle + -1.35807438297575 *
Marital_StatusTogether ;
2471596   +   H1x2_2  = H1x2_2  +    -0.29912132201198 * Education2n_Cycle
2471597   +          +    -0.97227735746604 * EducationBasic  +     1.05541395347718 *
2471598   +        EducationGraduation  +     0.69607179798453 * EducationMaster
2471599   +          +    -2.63452071552997 * Marital_StatusDivorced
2471600   +          +     0.61829054779121 * Marital_StatusMarried
2471601   +          +    -2.20743370246315 * Marital_StatusSingle
2471602   +          +     0.56930072654252 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.29912132201198 * Education2n_Cycle +
-0.97227735746604 * EducationBasic + 1.05541395347718 * EducationGraduation + 0.69607179798453
* EducationMaster + -2.63452071552997 * Marital_StatusDivorced + 0.61829054779121 *
Marital_StatusMarried + -2.20743370246315 * Marital_StatusSingle + 0.56930072654252 *
Marital_StatusTogether ;
2471603   +   H1x2_3  = H1x2_3  +     0.65046688904352 * Education2n_Cycle
2471604   +          +     0.03854232912474 * EducationBasic  +     0.59545004622858 *
2471605   +        EducationGraduation  +    -1.68638824011899 * EducationMaster
2471606   +          +      -1.454102516731 * Marital_StatusDivorced
2471607   +          +     0.71488291465759 * Marital_StatusMarried
2471608   +          +     0.96038830049792 * Marital_StatusSingle
2471609   +          +    -0.85244216490853 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.65046688904352 * Education2n_Cycle +
0.03854232912474 * EducationBasic + 0.59545004622858 * EducationGraduation + -1.68638824011899
* EducationMaster + -1.454102516731 * Marital_StatusDivorced + 0.71488291465759 *
Marital_StatusMarried + 0.96038830049792 * Marital_StatusSingle + -0.85244216490853 *
Marital_StatusTogether ;
2471610   +   H1x2_4  = H1x2_4  +     0.37430673318658 * Education2n_Cycle
2471611   +          +    -0.25373979771478 * EducationBasic  +    -1.65617377693247 *
2471612   +        EducationGraduation  +    -1.12481097095571 * EducationMaster
2471613   +          +    -0.01160394891598 * Marital_StatusDivorced
2471614   +          +    -1.09054636482951 * Marital_StatusMarried
2471615   +          +      0.7793855479379 * Marital_StatusSingle
2471616   +          +    -0.40649435490654 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.37430673318658 * Education2n_Cycle +
-0.25373979771478 * EducationBasic + -1.65617377693247 * EducationGraduation +
-1.12481097095571 * EducationMaster + -0.01160394891598 * Marital_StatusDivorced +
-1.09054636482951 * Marital_StatusMarried + 0.7793855479379 * Marital_StatusSingle +
-0.40649435490654 * Marital_StatusTogether ;
2471617   +   H1x2_5  = H1x2_5  +     -0.1016827992735 * Education2n_Cycle
2471618   +          +     1.07194596228219 * EducationBasic  +    -1.05800808905557 *
2471619   +        EducationGraduation  +     0.09666597691691 * EducationMaster
2471620   +          +    -0.73414854875115 * Marital_StatusDivorced
2471621   +          +     0.46421425621114 * Marital_StatusMarried
2471622   +          +    -0.54512730625469 * Marital_StatusSingle
2471623   +          +     0.76568726267448 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + -0.1016827992735 * Education2n_Cycle +
1.07194596228219 * EducationBasic + -1.05800808905557 * EducationGraduation + 0.09666597691691
* EducationMaster + -0.73414854875115 * Marital_StatusDivorced + 0.46421425621114 *
Marital_StatusMarried + -0.54512730625469 * Marital_StatusSingle + 0.76568726267448 *
Marital_StatusTogether ;
2471624   +   H1x2_6  = H1x2_6  +    -1.15957084181454 * Education2n_Cycle
2471625   +          +     0.00847667341235 * EducationBasic  +    -1.58463832529749 *
2471626   +        EducationGraduation  +     0.56518194582557 * EducationMaster
2471627   +          +     0.25131188683384 * Marital_StatusDivorced
2471628   +          +     2.38279806963807 * Marital_StatusMarried
2471629   +          +     0.28897706448348 * Marital_StatusSingle
2471630   +          +     0.89118497255856 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + -1.15957084181454 * Education2n_Cycle +
0.00847667341235 * EducationBasic + -1.58463832529749 * EducationGraduation + 0.56518194582557
* EducationMaster + 0.25131188683384 * Marital_StatusDivorced + 2.38279806963807 *
Marital_StatusMarried + 0.28897706448348 * Marital_StatusSingle + 0.89118497255856 *
Marital_StatusTogether ;
2471631   +   H1x2_1  =    -1.58113759763481 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -1.58113759763481 + H1x2_1 ;
2471632   +   H1x2_2  =    -1.19307731012977 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -1.19307731012977 + H1x2_2 ;
2471633   +   H1x2_3  =     0.35767811974231 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = 0.35767811974231 + H1x2_3 ;
2471634   +   H1x2_4  =    -0.20241610577527 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.20241610577527 + H1x2_4 ;
2471635   +   H1x2_5  =     0.30120348602955 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 0.30120348602955 + H1x2_5 ;
2471636   +   H1x2_6  =     1.04145053611779 + H1x2_6 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = 1.04145053611779 + H1x2_6 ;
2471637   +   H1x2_7  = 0;
MPRINT(EM_DIAGRAM):   H1x2_7 = 0;
2471638   +   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 , H1x2_7
2471639   +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 ,
H1x2_7 );
2471640   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2471641   +   H1x2_1  = EXP(H1x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(H1x2_1 - _MAX_);
2471642   +   _SUM_ = _SUM_ + H1x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_1 ;
2471643   +   H1x2_2  = EXP(H1x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(H1x2_2 - _MAX_);
2471644   +   _SUM_ = _SUM_ + H1x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_2 ;
2471645   +   H1x2_3  = EXP(H1x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(H1x2_3 - _MAX_);
2471646   +   _SUM_ = _SUM_ + H1x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_3 ;
2471647   +   H1x2_4  = EXP(H1x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(H1x2_4 - _MAX_);
2471648   +   _SUM_ = _SUM_ + H1x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_4 ;
2471649   +   H1x2_5  = EXP(H1x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(H1x2_5 - _MAX_);
2471650   +   _SUM_ = _SUM_ + H1x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_5 ;
2471651   +   H1x2_6  = EXP(H1x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(H1x2_6 - _MAX_);
2471652   +   _SUM_ = _SUM_ + H1x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_6 ;
2471653   +   H1x2_7  = EXP(H1x2_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_7 = EXP(H1x2_7 - _MAX_);
2471654   +   _SUM_ = _SUM_ + H1x2_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_7 ;
2471655   +   H1x2_1  = H1x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 / _SUM_;
2471656   +   H1x2_2  = H1x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 / _SUM_;
2471657   +   H1x2_3  = H1x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 / _SUM_;
2471658   +   H1x2_4  = H1x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 / _SUM_;
2471659   +   H1x2_5  = H1x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 / _SUM_;
2471660   +   H1x2_6  = H1x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 / _SUM_;
2471661   +   H1x2_7  = H1x2_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_7 = H1x2_7 / _SUM_;
2471662   +END;
MPRINT(EM_DIAGRAM):   END;
2471663   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2471664   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
2471665   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
2471666   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
2471667   +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
2471668   +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
2471669   +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
2471670   +   H1x2_7  = .;
MPRINT(EM_DIAGRAM):   H1x2_7 = .;
2471671   +END;
MPRINT(EM_DIAGRAM):   END;
2471672   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2471673   +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
2471674   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2471675   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2471676   +   H1x3_1  =    -0.17891338426869 * S_AcceptedCmpTotal
2471677   +          +     0.25935021287808 * S_Age  +     -0.4211584261256 * S_Frq
2471678   +          +    -1.91007620895221 * S_Income  +     0.38954955842314 *
2471679   +        S_Kidhome  +     0.07674351412771 * S_Mnt  +    -0.00193662324959 *
2471680   +        S_MntFishProducts  +    -0.05912563364557 * S_MntFruits
2471681   +          +     0.34447908349796 * S_MntGoldProds  +      1.8146796379351 *
2471682   +        S_MntMeatProducts  +    -0.28617584915758 * S_MntSweetProducts
2471683   +          +    -0.25003395507837 * S_MntWines  +     2.70698456342857 *
2471684   +        S_MonthsAsCustomer  +     0.61560315312621 * S_NumCatalogPurchases
2471685   +          +     1.11855402225797 * S_NumDealsPurchases
2471686   +          +     0.39150287442005 * S_NumDistPurchases
2471687   +          +     0.00160244551627 * S_NumStorePurchases
2471688   +          +     1.54380043731879 * S_NumWebPurchases
2471689   +          +      0.6462755347813 * S_NumWebVisitsMonth
2471690   +          +      0.3712356571744 * S_RFMstat  +     0.31930000498313 *
2471691   +        S_RMntFrq  +     0.91533450209744 * S_Recency
2471692   +          +    -1.15144971921837 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_1 = -0.17891338426869 * S_AcceptedCmpTotal + 0.25935021287808 *
S_Age + -0.4211584261256 * S_Frq + -1.91007620895221 * S_Income + 0.38954955842314 * S_Kidhome
+ 0.07674351412771 * S_Mnt + -0.00193662324959 * S_MntFishProducts + -0.05912563364557 *
S_MntFruits + 0.34447908349796 * S_MntGoldProds + 1.8146796379351 * S_MntMeatProducts +
-0.28617584915758 * S_MntSweetProducts + -0.25003395507837 * S_MntWines + 2.70698456342857 *
S_MonthsAsCustomer + 0.61560315312621 * S_NumCatalogPurchases + 1.11855402225797 *
S_NumDealsPurchases + 0.39150287442005 * S_NumDistPurchases + 0.00160244551627 *
S_NumStorePurchases + 1.54380043731879 * S_NumWebPurchases + 0.6462755347813 *
S_NumWebVisitsMonth + 0.3712356571744 * S_RFMstat + 0.31930000498313 * S_RMntFrq +
0.91533450209744 * S_Recency + -1.15144971921837 * S_Teenhome ;
2471693   +   H1x3_2  =     0.70342217458269 * S_AcceptedCmpTotal
2471694   +          +     1.00269567168731 * S_Age  +     0.28237778780972 * S_Frq
2471695   +          +     1.85610950568833 * S_Income  +    -0.88627540559449 *
2471696   +        S_Kidhome  +      -0.681406495446 * S_Mnt  +    -0.52884566607488 *
2471697   +        S_MntFishProducts  +    -1.55540056999822 * S_MntFruits
2471698   +          +    -0.86530238267543 * S_MntGoldProds  +     0.50288889191395 *
2471699   +        S_MntMeatProducts  +     0.42795025747297 * S_MntSweetProducts
2471700   +          +     1.65622561769832 * S_MntWines  +    -0.40506757052255 *
2471701   +        S_MonthsAsCustomer  +    -0.45283667973478 * S_NumCatalogPurchases
2471702   +          +     0.01911815525287 * S_NumDealsPurchases
2471703   +          +    -1.07196707915227 * S_NumDistPurchases
2471704   +          +      0.6452048321682 * S_NumStorePurchases
2471705   +          +    -0.15818575353955 * S_NumWebPurchases
2471706   +          +    -0.82586162051382 * S_NumWebVisitsMonth
2471707   +          +     0.35914598433318 * S_RFMstat  +     0.14754646817335 *
2471708   +        S_RMntFrq  +     0.23398669008843 * S_Recency
2471709   +          +      0.1494741245474 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_2 = 0.70342217458269 * S_AcceptedCmpTotal + 1.00269567168731 *
S_Age + 0.28237778780972 * S_Frq + 1.85610950568833 * S_Income + -0.88627540559449 * S_Kidhome
+ -0.681406495446 * S_Mnt + -0.52884566607488 * S_MntFishProducts + -1.55540056999822 *
S_MntFruits + -0.86530238267543 * S_MntGoldProds + 0.50288889191395 * S_MntMeatProducts +
0.42795025747297 * S_MntSweetProducts + 1.65622561769832 * S_MntWines + -0.40506757052255 *
S_MonthsAsCustomer + -0.45283667973478 * S_NumCatalogPurchases + 0.01911815525287 *
S_NumDealsPurchases + -1.07196707915227 * S_NumDistPurchases + 0.6452048321682 *
S_NumStorePurchases + -0.15818575353955 * S_NumWebPurchases + -0.82586162051382 *
S_NumWebVisitsMonth + 0.35914598433318 * S_RFMstat + 0.14754646817335 * S_RMntFrq +
0.23398669008843 * S_Recency + 0.1494741245474 * S_Teenhome ;
2471710   +   H1x3_3  =     0.54929571619315 * S_AcceptedCmpTotal
2471711   +          +      -0.751329127583 * S_Age  +    -0.94592306727941 * S_Frq
2471712   +          +    -1.17625421122138 * S_Income  +     0.74760015734698 *
2471713   +        S_Kidhome  +    -1.31055967085841 * S_Mnt  +     -0.5844789069547 *
2471714   +        S_MntFishProducts  +     0.29563811382096 * S_MntFruits
2471715   +          +      2.0486671645084 * S_MntGoldProds  +      0.4596153519541 *
2471716   +        S_MntMeatProducts  +     0.43182048706593 * S_MntSweetProducts
2471717   +          +     0.06319773540648 * S_MntWines  +     -0.9320658068644 *
2471718   +        S_MonthsAsCustomer  +     0.97208201647088 * S_NumCatalogPurchases
2471719   +          +     1.56893739271853 * S_NumDealsPurchases
2471720   +          +      0.6745865425238 * S_NumDistPurchases
2471721   +          +    -0.26848765783548 * S_NumStorePurchases
2471722   +          +     0.79227081430227 * S_NumWebPurchases
2471723   +          +     0.83054874267768 * S_NumWebVisitsMonth
2471724   +          +    -0.28363014203077 * S_RFMstat  +    -0.71879552423951 *
2471725   +        S_RMntFrq  +     0.80917480816898 * S_Recency
2471726   +          +    -0.52052715034272 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_3 = 0.54929571619315 * S_AcceptedCmpTotal + -0.751329127583 * S_Age
+ -0.94592306727941 * S_Frq + -1.17625421122138 * S_Income + 0.74760015734698 * S_Kidhome +
-1.31055967085841 * S_Mnt + -0.5844789069547 * S_MntFishProducts + 0.29563811382096 *
S_MntFruits + 2.0486671645084 * S_MntGoldProds + 0.4596153519541 * S_MntMeatProducts +
0.43182048706593 * S_MntSweetProducts + 0.06319773540648 * S_MntWines + -0.9320658068644 *
S_MonthsAsCustomer + 0.97208201647088 * S_NumCatalogPurchases + 1.56893739271853 *
S_NumDealsPurchases + 0.6745865425238 * S_NumDistPurchases + -0.26848765783548 *
S_NumStorePurchases + 0.79227081430227 * S_NumWebPurchases + 0.83054874267768 *
S_NumWebVisitsMonth + -0.28363014203077 * S_RFMstat + -0.71879552423951 * S_RMntFrq +
0.80917480816898 * S_Recency + -0.52052715034272 * S_Teenhome ;
2471727   +   H1x3_4  =     1.71480641781959 * S_AcceptedCmpTotal
2471728   +          +    -0.98495603767618 * S_Age  +     -0.0459665945886 * S_Frq
2471729   +          +     1.19396539246615 * S_Income  +     0.51326452746824 *
2471730   +        S_Kidhome  +    -0.22663230333642 * S_Mnt  +     0.27256846012963 *
2471731   +        S_MntFishProducts  +    -0.50661455153622 * S_MntFruits
2471732   +          +     -0.3498057126965 * S_MntGoldProds  +    -2.87000075082987 *
2471733   +        S_MntMeatProducts  +    -0.09413391100844 * S_MntSweetProducts
2471734   +          +     1.15010664811376 * S_MntWines  +    -0.48501392658783 *
2471735   +        S_MonthsAsCustomer  +      0.2688077310392 * S_NumCatalogPurchases
2471736   +          +    -0.23954856030467 * S_NumDealsPurchases
2471737   +          +    -1.61914390483829 * S_NumDistPurchases
2471738   +          +      -1.014570623016 * S_NumStorePurchases
2471739   +          +    -0.36828642098701 * S_NumWebPurchases
2471740   +          +    -0.04976922659227 * S_NumWebVisitsMonth
2471741   +          +     0.87811344320757 * S_RFMstat  +    -1.70999928232532 *
2471742   +        S_RMntFrq  +    -0.40880481304369 * S_Recency
2471743   +          +     0.75806578113158 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_4 = 1.71480641781959 * S_AcceptedCmpTotal + -0.98495603767618 *
S_Age + -0.0459665945886 * S_Frq + 1.19396539246615 * S_Income + 0.51326452746824 * S_Kidhome
+ -0.22663230333642 * S_Mnt + 0.27256846012963 * S_MntFishProducts + -0.50661455153622 *
S_MntFruits + -0.3498057126965 * S_MntGoldProds + -2.87000075082987 * S_MntMeatProducts +
-0.09413391100844 * S_MntSweetProducts + 1.15010664811376 * S_MntWines + -0.48501392658783 *
S_MonthsAsCustomer + 0.2688077310392 * S_NumCatalogPurchases + -0.23954856030467 *
S_NumDealsPurchases + -1.61914390483829 * S_NumDistPurchases + -1.014570623016 *
S_NumStorePurchases + -0.36828642098701 * S_NumWebPurchases + -0.04976922659227 *
S_NumWebVisitsMonth + 0.87811344320757 * S_RFMstat + -1.70999928232532 * S_RMntFrq +
-0.40880481304369 * S_Recency + 0.75806578113158 * S_Teenhome ;
2471744   +   H1x3_5  =    -0.35033091531835 * S_AcceptedCmpTotal
2471745   +          +    -1.18148775203733 * S_Age  +    -0.17374293038138 * S_Frq
2471746   +          +    -0.36680516767012 * S_Income  +     0.57186890691757 *
2471747   +        S_Kidhome  +    -0.02612042491922 * S_Mnt  +     0.84551697375819 *
2471748   +        S_MntFishProducts  +     0.44255296354709 * S_MntFruits
2471749   +          +    -1.35259485807243 * S_MntGoldProds  +      0.3377329409199 *
2471750   +        S_MntMeatProducts  +    -1.06135100840202 * S_MntSweetProducts
2471751   +          +     0.15771394796649 * S_MntWines  +     1.55754960780486 *
2471752   +        S_MonthsAsCustomer  +    -0.76896921785988 * S_NumCatalogPurchases
2471753   +          +     1.00094082424204 * S_NumDealsPurchases
2471754   +          +      0.2724785290725 * S_NumDistPurchases
2471755   +          +     0.13170237783486 * S_NumStorePurchases
2471756   +          +    -1.31447792523743 * S_NumWebPurchases
2471757   +          +    -0.09121088371438 * S_NumWebVisitsMonth
2471758   +          +     1.46860488573551 * S_RFMstat  +     0.46491504994651 *
2471759   +        S_RMntFrq  +      0.6767512513985 * S_Recency
2471760   +          +    -1.74995034763966 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_5 = -0.35033091531835 * S_AcceptedCmpTotal + -1.18148775203733 *
S_Age + -0.17374293038138 * S_Frq + -0.36680516767012 * S_Income + 0.57186890691757 *
S_Kidhome + -0.02612042491922 * S_Mnt + 0.84551697375819 * S_MntFishProducts +
0.44255296354709 * S_MntFruits + -1.35259485807243 * S_MntGoldProds + 0.3377329409199 *
S_MntMeatProducts + -1.06135100840202 * S_MntSweetProducts + 0.15771394796649 * S_MntWines +
1.55754960780486 * S_MonthsAsCustomer + -0.76896921785988 * S_NumCatalogPurchases +
1.00094082424204 * S_NumDealsPurchases + 0.2724785290725 * S_NumDistPurchases +
0.13170237783486 * S_NumStorePurchases + -1.31447792523743 * S_NumWebPurchases +
-0.09121088371438 * S_NumWebVisitsMonth + 1.46860488573551 * S_RFMstat + 0.46491504994651 *
S_RMntFrq + 0.6767512513985 * S_Recency + -1.74995034763966 * S_Teenhome ;
2471761   +   H1x3_6  =     1.05520309715672 * S_AcceptedCmpTotal
2471762   +          +    -1.05930507843633 * S_Age  +     0.07032294102853 * S_Frq
2471763   +          +    -0.05932294137503 * S_Income  +    -1.47206442598932 *
2471764   +        S_Kidhome  +     0.56661112816398 * S_Mnt  +    -0.11340132210258 *
2471765   +        S_MntFishProducts  +    -0.32177484313741 * S_MntFruits
2471766   +          +    -0.32378384178804 * S_MntGoldProds  +     0.00540737819175 *
2471767   +        S_MntMeatProducts  +     0.14834467568566 * S_MntSweetProducts
2471768   +          +    -0.95841169333668 * S_MntWines  +    -0.62902099823048 *
2471769   +        S_MonthsAsCustomer  +    -0.67434201898155 * S_NumCatalogPurchases
2471770   +          +    -0.73198872336344 * S_NumDealsPurchases
2471771   +          +     0.29368958872361 * S_NumDistPurchases
2471772   +          +     1.52772046446908 * S_NumStorePurchases
2471773   +          +    -1.75065469134874 * S_NumWebPurchases
2471774   +          +      0.0264954621772 * S_NumWebVisitsMonth
2471775   +          +    -0.88054137065815 * S_RFMstat  +     0.70371760194946 *
2471776   +        S_RMntFrq  +     1.14219878739476 * S_Recency
2471777   +          +    -1.15240998118906 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_6 = 1.05520309715672 * S_AcceptedCmpTotal + -1.05930507843633 *
S_Age + 0.07032294102853 * S_Frq + -0.05932294137503 * S_Income + -1.47206442598932 *
S_Kidhome + 0.56661112816398 * S_Mnt + -0.11340132210258 * S_MntFishProducts +
-0.32177484313741 * S_MntFruits + -0.32378384178804 * S_MntGoldProds + 0.00540737819175 *
S_MntMeatProducts + 0.14834467568566 * S_MntSweetProducts + -0.95841169333668 * S_MntWines +
-0.62902099823048 * S_MonthsAsCustomer + -0.67434201898155 * S_NumCatalogPurchases +
-0.73198872336344 * S_NumDealsPurchases + 0.29368958872361 * S_NumDistPurchases +
1.52772046446908 * S_NumStorePurchases + -1.75065469134874 * S_NumWebPurchases +
0.0264954621772 * S_NumWebVisitsMonth + -0.88054137065815 * S_RFMstat + 0.70371760194946 *
S_RMntFrq + 1.14219878739476 * S_Recency + -1.15240998118906 * S_Teenhome ;
2471778   +   H1x3_1  = H1x3_1  +     0.60800466481517 * AcceptedCmp10
2471779   +          +     0.33187245535701 * AcceptedCmp20  +    -0.13888343551044 *
2471780   +        AcceptedCmp30  +     0.93663925029857 * AcceptedCmp40
2471781   +          +     1.09340622621085 * AcceptedCmp50  +    -0.49132743156126 *
2471782   +        Complain0  +     0.45196197584946 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + 0.60800466481517 * AcceptedCmp10 + 0.33187245535701 *
AcceptedCmp20 + -0.13888343551044 * AcceptedCmp30 + 0.93663925029857 * AcceptedCmp40 +
1.09340622621085 * AcceptedCmp50 + -0.49132743156126 * Complain0 + 0.45196197584946 *
HigherEducationBinary0 ;
2471783   +   H1x3_2  = H1x3_2  +     1.40275485940553 * AcceptedCmp10
2471784   +          +    -0.15035102140746 * AcceptedCmp20  +    -0.53574064147206 *
2471785   +        AcceptedCmp30  +    -1.67324904853563 * AcceptedCmp40
2471786   +          +     0.05636486780046 * AcceptedCmp50  +    -0.39032867538703 *
2471787   +        Complain0  +    -0.74980603736258 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + 1.40275485940553 * AcceptedCmp10 + -0.15035102140746 *
AcceptedCmp20 + -0.53574064147206 * AcceptedCmp30 + -1.67324904853563 * AcceptedCmp40 +
0.05636486780046 * AcceptedCmp50 + -0.39032867538703 * Complain0 + -0.74980603736258 *
HigherEducationBinary0 ;
2471788   +   H1x3_3  = H1x3_3  +     0.26722647672682 * AcceptedCmp10
2471789   +          +      0.6216449242511 * AcceptedCmp20  +     0.76635966126463 *
2471790   +        AcceptedCmp30  +    -2.48978919706551 * AcceptedCmp40
2471791   +          +     0.98619070514978 * AcceptedCmp50  +    -0.19244215041297 *
2471792   +        Complain0  +    -1.19045127506692 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 + 0.26722647672682 * AcceptedCmp10 + 0.6216449242511 *
AcceptedCmp20 + 0.76635966126463 * AcceptedCmp30 + -2.48978919706551 * AcceptedCmp40 +
0.98619070514978 * AcceptedCmp50 + -0.19244215041297 * Complain0 + -1.19045127506692 *
HigherEducationBinary0 ;
2471793   +   H1x3_4  = H1x3_4  +    -1.73915810074841 * AcceptedCmp10
2471794   +          +     0.72244354389321 * AcceptedCmp20  +     1.07200246076684 *
2471795   +        AcceptedCmp30  +     0.24242315318429 * AcceptedCmp40
2471796   +          +     0.48717202781909 * AcceptedCmp50  +    -1.18600714935645 *
2471797   +        Complain0  +     -1.0752062632729 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 + -1.73915810074841 * AcceptedCmp10 + 0.72244354389321 *
AcceptedCmp20 + 1.07200246076684 * AcceptedCmp30 + 0.24242315318429 * AcceptedCmp40 +
0.48717202781909 * AcceptedCmp50 + -1.18600714935645 * Complain0 + -1.0752062632729 *
HigherEducationBinary0 ;
2471798   +   H1x3_5  = H1x3_5  +     1.07972020322696 * AcceptedCmp10
2471799   +          +     0.38275266830165 * AcceptedCmp20  +     0.45959913551609 *
2471800   +        AcceptedCmp30  +    -0.30891288234597 * AcceptedCmp40
2471801   +          +    -0.35568820567134 * AcceptedCmp50  +     -1.8045223309162 *
2471802   +        Complain0  +    -0.29380313969195 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 + 1.07972020322696 * AcceptedCmp10 + 0.38275266830165 *
AcceptedCmp20 + 0.45959913551609 * AcceptedCmp30 + -0.30891288234597 * AcceptedCmp40 +
-0.35568820567134 * AcceptedCmp50 + -1.8045223309162 * Complain0 + -0.29380313969195 *
HigherEducationBinary0 ;
2471803   +   H1x3_6  = H1x3_6  +    -2.40002597755125 * AcceptedCmp10
2471804   +          +     0.61725427642794 * AcceptedCmp20  +      1.3438972982524 *
2471805   +        AcceptedCmp30  +    -0.66766212489049 * AcceptedCmp40
2471806   +          +     1.10709227053258 * AcceptedCmp50  +    -0.98301865424423 *
2471807   +        Complain0  +     0.83512874944952 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_6 = H1x3_6 + -2.40002597755125 * AcceptedCmp10 + 0.61725427642794 *
AcceptedCmp20 + 1.3438972982524 * AcceptedCmp30 + -0.66766212489049 * AcceptedCmp40 +
1.10709227053258 * AcceptedCmp50 + -0.98301865424423 * Complain0 + 0.83512874944952 *
HigherEducationBinary0 ;
2471808   +   H1x3_1  = H1x3_1  +    -0.49604077640433 * Education2n_Cycle
2471809   +          +    -0.60803139475446 * EducationBasic  +     0.39029834300888 *
2471810   +        EducationGraduation  +     1.49476669226441 * EducationMaster
2471811   +          +     0.32207432513904 * Marital_StatusDivorced
2471812   +          +      0.6397913221395 * Marital_StatusMarried
2471813   +          +    -0.25330032559918 * Marital_StatusSingle
2471814   +          +      0.6826963146507 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + -0.49604077640433 * Education2n_Cycle +
-0.60803139475446 * EducationBasic + 0.39029834300888 * EducationGraduation + 1.49476669226441
* EducationMaster + 0.32207432513904 * Marital_StatusDivorced + 0.6397913221395 *
Marital_StatusMarried + -0.25330032559918 * Marital_StatusSingle + 0.6826963146507 *
Marital_StatusTogether ;
2471815   +   H1x3_2  = H1x3_2  +     0.70727271276171 * Education2n_Cycle
2471816   +          +    -0.74539861835467 * EducationBasic  +    -1.09813520505203 *
2471817   +        EducationGraduation  +      0.0913616986494 * EducationMaster
2471818   +          +     0.79430904713493 * Marital_StatusDivorced
2471819   +          +     2.54456429102799 * Marital_StatusMarried
2471820   +          +     0.59410742352499 * Marital_StatusSingle
2471821   +          +     0.62339810371964 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + 0.70727271276171 * Education2n_Cycle +
-0.74539861835467 * EducationBasic + -1.09813520505203 * EducationGraduation + 0.0913616986494
* EducationMaster + 0.79430904713493 * Marital_StatusDivorced + 2.54456429102799 *
Marital_StatusMarried + 0.59410742352499 * Marital_StatusSingle + 0.62339810371964 *
Marital_StatusTogether ;
2471822   +   H1x3_3  = H1x3_3  +     0.41739931776571 * Education2n_Cycle
2471823   +          +     0.90042318812458 * EducationBasic  +    -0.30863999735161 *
2471824   +        EducationGraduation  +    -0.07080985966069 * EducationMaster
2471825   +          +    -0.43081775693595 * Marital_StatusDivorced
2471826   +          +    -0.78485102174552 * Marital_StatusMarried
2471827   +          +    -1.56581090110813 * Marital_StatusSingle
2471828   +          +     1.31552735466691 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 + 0.41739931776571 * Education2n_Cycle +
0.90042318812458 * EducationBasic + -0.30863999735161 * EducationGraduation +
-0.07080985966069 * EducationMaster + -0.43081775693595 * Marital_StatusDivorced +
-0.78485102174552 * Marital_StatusMarried + -1.56581090110813 * Marital_StatusSingle +
1.31552735466691 * Marital_StatusTogether ;
2471829   +   H1x3_4  = H1x3_4  +    -1.03450070870223 * Education2n_Cycle
2471830   +          +     0.12962104594991 * EducationBasic  +    -2.08320982697158 *
2471831   +        EducationGraduation  +     1.01633562820676 * EducationMaster
2471832   +          +     0.38226706522151 * Marital_StatusDivorced
2471833   +          +     0.96666958079914 * Marital_StatusMarried
2471834   +          +    -0.07771259761555 * Marital_StatusSingle
2471835   +          +    -0.15667080607342 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 + -1.03450070870223 * Education2n_Cycle +
0.12962104594991 * EducationBasic + -2.08320982697158 * EducationGraduation + 1.01633562820676
* EducationMaster + 0.38226706522151 * Marital_StatusDivorced + 0.96666958079914 *
Marital_StatusMarried + -0.07771259761555 * Marital_StatusSingle + -0.15667080607342 *
Marital_StatusTogether ;
2471836   +   H1x3_5  = H1x3_5  +     0.42350784953316 * Education2n_Cycle
2471837   +          +    -0.47409869250049 * EducationBasic  +     0.22752853959532 *
2471838   +        EducationGraduation  +     0.05813076059598 * EducationMaster
2471839   +          +    -0.38325393606947 * Marital_StatusDivorced
2471840   +          +    -1.43303056163299 * Marital_StatusMarried
2471841   +          +     0.11571941757387 * Marital_StatusSingle
2471842   +          +     0.42633042000729 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 + 0.42350784953316 * Education2n_Cycle +
-0.47409869250049 * EducationBasic + 0.22752853959532 * EducationGraduation + 0.05813076059598
* EducationMaster + -0.38325393606947 * Marital_StatusDivorced + -1.43303056163299 *
Marital_StatusMarried + 0.11571941757387 * Marital_StatusSingle + 0.42633042000729 *
Marital_StatusTogether ;
2471843   +   H1x3_6  = H1x3_6  +     1.11214831415741 * Education2n_Cycle
2471844   +          +      0.8877309144454 * EducationBasic  +     0.87390674413956 *
2471845   +        EducationGraduation  +     0.90837023676142 * EducationMaster
2471846   +          +    -0.36491799765765 * Marital_StatusDivorced
2471847   +          +     0.14142786767503 * Marital_StatusMarried
2471848   +          +     0.22643970468805 * Marital_StatusSingle
2471849   +          +     0.74162870756295 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_6 = H1x3_6 + 1.11214831415741 * Education2n_Cycle + 0.8877309144454
* EducationBasic + 0.87390674413956 * EducationGraduation + 0.90837023676142 * EducationMaster
+ -0.36491799765765 * Marital_StatusDivorced + 0.14142786767503 * Marital_StatusMarried +
0.22643970468805 * Marital_StatusSingle + 0.74162870756295 * Marital_StatusTogether ;
2471850   +   H1x3_1  =        0.17121674502 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.17121674502 + H1x3_1 ;
2471851   +   H1x3_2  =    -0.07858073871761 + H1x3_2 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = -0.07858073871761 + H1x3_2 ;
2471852   +   H1x3_3  =     -0.1687483376367 + H1x3_3 ;
MPRINT(EM_DIAGRAM):   H1x3_3 = -0.1687483376367 + H1x3_3 ;
2471853   +   H1x3_4  =     0.92501573900148 + H1x3_4 ;
MPRINT(EM_DIAGRAM):   H1x3_4 = 0.92501573900148 + H1x3_4 ;
2471854   +   H1x3_5  =    -0.04765930254307 + H1x3_5 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = -0.04765930254307 + H1x3_5 ;
2471855   +   H1x3_6  =     0.29532221854366 + H1x3_6 ;
MPRINT(EM_DIAGRAM):   H1x3_6 = 0.29532221854366 + H1x3_6 ;
2471856   +   H1x3_7  = 0;
MPRINT(EM_DIAGRAM):   H1x3_7 = 0;
2471857   +   _MAX_ = MAX (H1x3_1 , H1x3_2 , H1x3_3 , H1x3_4 , H1x3_5 , H1x3_6 , H1x3_7
2471858   +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x3_1 , H1x3_2 , H1x3_3 , H1x3_4 , H1x3_5 , H1x3_6 ,
H1x3_7 );
2471859   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2471860   +   H1x3_1  = EXP(H1x3_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_1 = EXP(H1x3_1 - _MAX_);
2471861   +   _SUM_ = _SUM_ + H1x3_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_1 ;
2471862   +   H1x3_2  = EXP(H1x3_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_2 = EXP(H1x3_2 - _MAX_);
2471863   +   _SUM_ = _SUM_ + H1x3_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_2 ;
2471864   +   H1x3_3  = EXP(H1x3_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_3 = EXP(H1x3_3 - _MAX_);
2471865   +   _SUM_ = _SUM_ + H1x3_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_3 ;
2471866   +   H1x3_4  = EXP(H1x3_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_4 = EXP(H1x3_4 - _MAX_);
2471867   +   _SUM_ = _SUM_ + H1x3_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_4 ;
2471868   +   H1x3_5  = EXP(H1x3_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_5 = EXP(H1x3_5 - _MAX_);
2471869   +   _SUM_ = _SUM_ + H1x3_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_5 ;
2471870   +   H1x3_6  = EXP(H1x3_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_6 = EXP(H1x3_6 - _MAX_);
2471871   +   _SUM_ = _SUM_ + H1x3_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_6 ;
2471872   +   H1x3_7  = EXP(H1x3_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_7 = EXP(H1x3_7 - _MAX_);
2471873   +   _SUM_ = _SUM_ + H1x3_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_7 ;
2471874   +   H1x3_1  = H1x3_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 / _SUM_;
2471875   +   H1x3_2  = H1x3_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 / _SUM_;
2471876   +   H1x3_3  = H1x3_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 / _SUM_;
2471877   +   H1x3_4  = H1x3_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 / _SUM_;
2471878   +   H1x3_5  = H1x3_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 / _SUM_;
2471879   +   H1x3_6  = H1x3_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_6 = H1x3_6 / _SUM_;
2471880   +   H1x3_7  = H1x3_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_7 = H1x3_7 / _SUM_;
2471881   +END;
MPRINT(EM_DIAGRAM):   END;
2471882   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2471883   +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
2471884   +   H1x3_2  = .;
MPRINT(EM_DIAGRAM):   H1x3_2 = .;
2471885   +   H1x3_3  = .;
MPRINT(EM_DIAGRAM):   H1x3_3 = .;
2471886   +   H1x3_4  = .;
MPRINT(EM_DIAGRAM):   H1x3_4 = .;
2471887   +   H1x3_5  = .;
MPRINT(EM_DIAGRAM):   H1x3_5 = .;
2471888   +   H1x3_6  = .;
MPRINT(EM_DIAGRAM):   H1x3_6 = .;
2471889   +   H1x3_7  = .;
MPRINT(EM_DIAGRAM):   H1x3_7 = .;
2471890   +END;
MPRINT(EM_DIAGRAM):   END;
2471891   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2471892   +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
2471893   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2471894   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2471895   +   H2x1_1  =    -0.59397690687549 * H1x1_1  +     0.10790242485513 * H1x1_2
2471896   +          +     1.34957997338147 * H1x1_3  +     0.98783879769831 * H1x1_4
2471897   +          +    -1.73131698691915 * H1x1_5  +    -0.04920424431591 * H1x1_6
2471898   +          +    -0.75229173661277 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -0.59397690687549 * H1x1_1 + 0.10790242485513 * H1x1_2 +
1.34957997338147 * H1x1_3 + 0.98783879769831 * H1x1_4 + -1.73131698691915 * H1x1_5 +
-0.04920424431591 * H1x1_6 + -0.75229173661277 * H1x1_7 ;
2471899   +   H2x1_2  =    -0.98729009516736 * H1x1_1  +     0.08491210993613 * H1x1_2
2471900   +          +     0.08027654554575 * H1x1_3  +     0.06189432860142 * H1x1_4
2471901   +          +    -1.23526842489276 * H1x1_5  +    -0.17600169070197 * H1x1_6
2471902   +          +     0.70746372975481 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -0.98729009516736 * H1x1_1 + 0.08491210993613 * H1x1_2 +
0.08027654554575 * H1x1_3 + 0.06189432860142 * H1x1_4 + -1.23526842489276 * H1x1_5 +
-0.17600169070197 * H1x1_6 + 0.70746372975481 * H1x1_7 ;
2471903   +   H2x1_3  =    -0.91861478701429 * H1x1_1  +     0.18513565366261 * H1x1_2
2471904   +          +    -0.18629587955963 * H1x1_3  +     0.76802660507034 * H1x1_4
2471905   +          +    -0.47979525657638 * H1x1_5  +     0.06968142422923 * H1x1_6
2471906   +          +     2.18264864713501 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -0.91861478701429 * H1x1_1 + 0.18513565366261 * H1x1_2 +
-0.18629587955963 * H1x1_3 + 0.76802660507034 * H1x1_4 + -0.47979525657638 * H1x1_5 +
0.06968142422923 * H1x1_6 + 2.18264864713501 * H1x1_7 ;
2471907   +   H2x1_4  =     1.02774363171853 * H1x1_1  +     1.08006636098136 * H1x1_2
2471908   +          +    -2.27078540572539 * H1x1_3  +    -0.54968089382258 * H1x1_4
2471909   +          +     2.11477012099075 * H1x1_5  +     1.91368944483056 * H1x1_6
2471910   +          +     0.22313799249268 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.02774363171853 * H1x1_1 + 1.08006636098136 * H1x1_2 +
-2.27078540572539 * H1x1_3 + -0.54968089382258 * H1x1_4 + 2.11477012099075 * H1x1_5 +
1.91368944483056 * H1x1_6 + 0.22313799249268 * H1x1_7 ;
2471911   +   H2x1_5  =    -1.06933000183778 * H1x1_1  +     0.73081558484415 * H1x1_2
2471912   +          +    -0.78012012951065 * H1x1_3  +     0.81916081920412 * H1x1_4
2471913   +          +    -1.46358608086032 * H1x1_5  +     1.83492870022704 * H1x1_6
2471914   +          +     0.75554005406859 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -1.06933000183778 * H1x1_1 + 0.73081558484415 * H1x1_2 +
-0.78012012951065 * H1x1_3 + 0.81916081920412 * H1x1_4 + -1.46358608086032 * H1x1_5 +
1.83492870022704 * H1x1_6 + 0.75554005406859 * H1x1_7 ;
2471915   +   H2x1_6  =    -2.28576277725334 * H1x1_1  +    -0.32249555333061 * H1x1_2
2471916   +          +     3.41388795688866 * H1x1_3  +     3.30305437699117 * H1x1_4
2471917   +          +    -1.49237136034665 * H1x1_5  +    -1.64329313023006 * H1x1_6
2471918   +          +     3.08746595768905 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = -2.28576277725334 * H1x1_1 + -0.32249555333061 * H1x1_2 +
3.41388795688866 * H1x1_3 + 3.30305437699117 * H1x1_4 + -1.49237136034665 * H1x1_5 +
-1.64329313023006 * H1x1_6 + 3.08746595768905 * H1x1_7 ;
2471919   +   H2x1_1  = H2x1_1  +    -2.56424783943845 * H1x2_1
2471920   +          +    -1.00213973107436 * H1x2_2  +    -0.47445930434013 * H1x2_3
2471921   +          +    -1.62372689856618 * H1x2_4  +     -1.1856250348479 * H1x2_5
2471922   +          +     0.04266758405533 * H1x2_6  +    -0.60071538153471 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -2.56424783943845 * H1x2_1 + -1.00213973107436 *
H1x2_2 + -0.47445930434013 * H1x2_3 + -1.62372689856618 * H1x2_4 + -1.1856250348479 * H1x2_5 +
0.04266758405533 * H1x2_6 + -0.60071538153471 * H1x2_7 ;
2471923   +   H2x1_2  = H2x1_2  +     0.00935939453146 * H1x2_1
2471924   +          +     0.55542862749222 * H1x2_2  +     -0.6066128025675 * H1x2_3
2471925   +          +    -0.53196514301497 * H1x2_4  +    -1.40549473181231 * H1x2_5
2471926   +          +    -0.08595621526876 * H1x2_6  +    -1.03953618328756 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 0.00935939453146 * H1x2_1 + 0.55542862749222 * H1x2_2
+ -0.6066128025675 * H1x2_3 + -0.53196514301497 * H1x2_4 + -1.40549473181231 * H1x2_5 +
-0.08595621526876 * H1x2_6 + -1.03953618328756 * H1x2_7 ;
2471927   +   H2x1_3  = H2x1_3  +    -1.41069312035355 * H1x2_1
2471928   +          +     0.56124490780446 * H1x2_2  +    -0.00472279335297 * H1x2_3
2471929   +          +    -1.10441771442377 * H1x2_4  +    -0.27090019786185 * H1x2_5
2471930   +          +    -0.15206855618217 * H1x2_6  +     -1.6035395520507 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -1.41069312035355 * H1x2_1 + 0.56124490780446 * H1x2_2
+ -0.00472279335297 * H1x2_3 + -1.10441771442377 * H1x2_4 + -0.27090019786185 * H1x2_5 +
-0.15206855618217 * H1x2_6 + -1.6035395520507 * H1x2_7 ;
2471931   +   H2x1_4  = H2x1_4  +    -0.55045399339183 * H1x2_1
2471932   +          +     0.02477552373088 * H1x2_2  +     0.19400769235958 * H1x2_3
2471933   +          +    -0.38264537483702 * H1x2_4  +     0.63479720884458 * H1x2_5
2471934   +          +    -0.60194629301645 * H1x2_6  +    -0.83490097285651 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + -0.55045399339183 * H1x2_1 + 0.02477552373088 * H1x2_2
+ 0.19400769235958 * H1x2_3 + -0.38264537483702 * H1x2_4 + 0.63479720884458 * H1x2_5 +
-0.60194629301645 * H1x2_6 + -0.83490097285651 * H1x2_7 ;
2471935   +   H2x1_5  = H2x1_5  +    -1.03176133074695 * H1x2_1
2471936   +          +    -0.59926889064506 * H1x2_2  +    -1.07077012847053 * H1x2_3
2471937   +          +    -1.18998920291096 * H1x2_4  +     0.39150574258439 * H1x2_5
2471938   +          +     0.05580574741832 * H1x2_6  +    -0.32272109045259 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + -1.03176133074695 * H1x2_1 + -0.59926889064506 *
H1x2_2 + -1.07077012847053 * H1x2_3 + -1.18998920291096 * H1x2_4 + 0.39150574258439 * H1x2_5 +
0.05580574741832 * H1x2_6 + -0.32272109045259 * H1x2_7 ;
2471939   +   H2x1_6  = H2x1_6  +    -0.61952040538587 * H1x2_1
2471940   +          +     0.35510185028829 * H1x2_2  +    -0.23901935720129 * H1x2_3
2471941   +          +     0.31752417497209 * H1x2_4  +    -1.20101515562967 * H1x2_5
2471942   +          +     0.95004398218762 * H1x2_6  +    -0.60363955740244 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + -0.61952040538587 * H1x2_1 + 0.35510185028829 * H1x2_2
+ -0.23901935720129 * H1x2_3 + 0.31752417497209 * H1x2_4 + -1.20101515562967 * H1x2_5 +
0.95004398218762 * H1x2_6 + -0.60363955740244 * H1x2_7 ;
2471943   +   H2x1_1  = H2x1_1  +     0.74378922258523 * H1x3_1
2471944   +          +      0.4693103426831 * H1x3_2  +     0.82071786194731 * H1x3_3
2471945   +          +     0.46432194238141 * H1x3_4  +    -1.39760250161206 * H1x3_5
2471946   +          +     0.68725250578779 * H1x3_6  +    -0.98986331205144 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 0.74378922258523 * H1x3_1 + 0.4693103426831 * H1x3_2 +
0.82071786194731 * H1x3_3 + 0.46432194238141 * H1x3_4 + -1.39760250161206 * H1x3_5 +
0.68725250578779 * H1x3_6 + -0.98986331205144 * H1x3_7 ;
2471947   +   H2x1_2  = H2x1_2  +     0.48406734142754 * H1x3_1
2471948   +          +     1.24032575331626 * H1x3_2  +     0.10072816620895 * H1x3_3
2471949   +          +     -2.4915795108808 * H1x3_4  +    -1.20085587739472 * H1x3_5
2471950   +          +     2.57480977795816 * H1x3_6  +    -0.36127801521801 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 0.48406734142754 * H1x3_1 + 1.24032575331626 * H1x3_2
+ 0.10072816620895 * H1x3_3 + -2.4915795108808 * H1x3_4 + -1.20085587739472 * H1x3_5 +
2.57480977795816 * H1x3_6 + -0.36127801521801 * H1x3_7 ;
2471951   +   H2x1_3  = H2x1_3  +    -0.29392518978638 * H1x3_1
2471952   +          +     0.02884163093827 * H1x3_2  +     -0.7595494999576 * H1x3_3
2471953   +          +     0.32536537321799 * H1x3_4  +    -0.01283695014976 * H1x3_5
2471954   +          +     0.76895275927405 * H1x3_6  +     -0.2802859993784 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -0.29392518978638 * H1x3_1 + 0.02884163093827 * H1x3_2
+ -0.7595494999576 * H1x3_3 + 0.32536537321799 * H1x3_4 + -0.01283695014976 * H1x3_5 +
0.76895275927405 * H1x3_6 + -0.2802859993784 * H1x3_7 ;
2471955   +   H2x1_4  = H2x1_4  +     2.19833784150068 * H1x3_1
2471956   +          +     0.25528651098746 * H1x3_2  +    -0.72296156297186 * H1x3_3
2471957   +          +    -0.14360138590872 * H1x3_4  +     0.77657569331577 * H1x3_5
2471958   +          +    -1.57969278343415 * H1x3_6  +    -0.92288304588247 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 2.19833784150068 * H1x3_1 + 0.25528651098746 * H1x3_2
+ -0.72296156297186 * H1x3_3 + -0.14360138590872 * H1x3_4 + 0.77657569331577 * H1x3_5 +
-1.57969278343415 * H1x3_6 + -0.92288304588247 * H1x3_7 ;
2471959   +   H2x1_5  = H2x1_5  +     2.11753865409831 * H1x3_1
2471960   +          +     0.83654766112935 * H1x3_2  +     0.97472534941535 * H1x3_3
2471961   +          +     1.35030042962655 * H1x3_4  +     1.24680664824079 * H1x3_5
2471962   +          +     0.19234112612264 * H1x3_6  +    -0.90680244689294 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + 2.11753865409831 * H1x3_1 + 0.83654766112935 * H1x3_2
+ 0.97472534941535 * H1x3_3 + 1.35030042962655 * H1x3_4 + 1.24680664824079 * H1x3_5 +
0.19234112612264 * H1x3_6 + -0.90680244689294 * H1x3_7 ;
2471963   +   H2x1_6  = H2x1_6  +     2.07923724911848 * H1x3_1
2471964   +          +     1.62526758922217 * H1x3_2  +    -0.68837627923045 * H1x3_3
2471965   +          +    -0.21127837456631 * H1x3_4  +    -1.47138526111866 * H1x3_5
2471966   +          +    -0.52275521204408 * H1x3_6  +    -0.36639952580044 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + 2.07923724911848 * H1x3_1 + 1.62526758922217 * H1x3_2
+ -0.68837627923045 * H1x3_3 + -0.21127837456631 * H1x3_4 + -1.47138526111866 * H1x3_5 +
-0.52275521204408 * H1x3_6 + -0.36639952580044 * H1x3_7 ;
2471967   +   H2x1_1  =    -1.05059672372056 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -1.05059672372056 + H2x1_1 ;
2471968   +   H2x1_2  =    -1.18404209429335 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -1.18404209429335 + H2x1_2 ;
2471969   +   H2x1_3  =    -0.76285494175137 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -0.76285494175137 + H2x1_3 ;
2471970   +   H2x1_4  =     2.22362261707253 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 2.22362261707253 + H2x1_4 ;
2471971   +   H2x1_5  =    -0.98793149966854 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -0.98793149966854 + H2x1_5 ;
2471972   +   H2x1_6  =     1.51370254076672 + H2x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.51370254076672 + H2x1_6 ;
2471973   +   H2x1_7  = 0;
MPRINT(EM_DIAGRAM):   H2x1_7 = 0;
2471974   +   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 , H2x1_6 , H2x1_7
2471975   +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 , H2x1_6 ,
H2x1_7 );
2471976   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2471977   +   H2x1_1  = EXP(H2x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_1 = EXP(H2x1_1 - _MAX_);
2471978   +   _SUM_ = _SUM_ + H2x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_1 ;
2471979   +   H2x1_2  = EXP(H2x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_2 = EXP(H2x1_2 - _MAX_);
2471980   +   _SUM_ = _SUM_ + H2x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_2 ;
2471981   +   H2x1_3  = EXP(H2x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_3 = EXP(H2x1_3 - _MAX_);
2471982   +   _SUM_ = _SUM_ + H2x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_3 ;
2471983   +   H2x1_4  = EXP(H2x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_4 = EXP(H2x1_4 - _MAX_);
2471984   +   _SUM_ = _SUM_ + H2x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_4 ;
2471985   +   H2x1_5  = EXP(H2x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_5 = EXP(H2x1_5 - _MAX_);
2471986   +   _SUM_ = _SUM_ + H2x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_5 ;
2471987   +   H2x1_6  = EXP(H2x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_6 = EXP(H2x1_6 - _MAX_);
2471988   +   _SUM_ = _SUM_ + H2x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_6 ;
2471989   +   H2x1_7  = EXP(H2x1_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_7 = EXP(H2x1_7 - _MAX_);
2471990   +   _SUM_ = _SUM_ + H2x1_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_7 ;
2471991   +   H2x1_1  = H2x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 / _SUM_;
2471992   +   H2x1_2  = H2x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 / _SUM_;
2471993   +   H2x1_3  = H2x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 / _SUM_;
2471994   +   H2x1_4  = H2x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 / _SUM_;
2471995   +   H2x1_5  = H2x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 / _SUM_;
2471996   +   H2x1_6  = H2x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 / _SUM_;
2471997   +   H2x1_7  = H2x1_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_7 = H2x1_7 / _SUM_;
2471998   +END;
MPRINT(EM_DIAGRAM):   END;
2471999   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2472000   +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
2472001   +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
2472002   +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
2472003   +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
2472004   +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
2472005   +   H2x1_6  = .;
MPRINT(EM_DIAGRAM):   H2x1_6 = .;
2472006   +   H2x1_7  = .;
MPRINT(EM_DIAGRAM):   H2x1_7 = .;
2472007   +END;
MPRINT(EM_DIAGRAM):   END;
2472008   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2472009   +*** Writing the Node H2x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x2_ ;
2472010   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2472011   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2472012   +   H2x2_1  =    -0.47079896252387 * H1x1_1  +      0.6132734714958 * H1x1_2
2472013   +          +     1.50300753820512 * H1x1_3  +     -0.1812621169129 * H1x1_4
2472014   +          +    -0.18531614991208 * H1x1_5  +     -0.2905105845089 * H1x1_6
2472015   +          +     1.33158539183491 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = -0.47079896252387 * H1x1_1 + 0.6132734714958 * H1x1_2 +
1.50300753820512 * H1x1_3 + -0.1812621169129 * H1x1_4 + -0.18531614991208 * H1x1_5 +
-0.2905105845089 * H1x1_6 + 1.33158539183491 * H1x1_7 ;
2472016   +   H2x2_2  =    -1.90834701790953 * H1x1_1  +      0.6177658514697 * H1x1_2
2472017   +          +     0.36465199316418 * H1x1_3  +     0.85911870587838 * H1x1_4
2472018   +          +     0.02147610114602 * H1x1_5  +     0.32326590534391 * H1x1_6
2472019   +          +    -1.04241581652278 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = -1.90834701790953 * H1x1_1 + 0.6177658514697 * H1x1_2 +
0.36465199316418 * H1x1_3 + 0.85911870587838 * H1x1_4 + 0.02147610114602 * H1x1_5 +
0.32326590534391 * H1x1_6 + -1.04241581652278 * H1x1_7 ;
2472020   +   H2x2_3  =       0.471130277999 * H1x1_1  +     0.96694465336161 * H1x1_2
2472021   +          +       0.141582035067 * H1x1_3  +     0.53325844993783 * H1x1_4
2472022   +          +     -0.0659115060565 * H1x1_5  +     0.38141753021852 * H1x1_6
2472023   +          +    -1.14139437080586 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = 0.471130277999 * H1x1_1 + 0.96694465336161 * H1x1_2 +
0.141582035067 * H1x1_3 + 0.53325844993783 * H1x1_4 + -0.0659115060565 * H1x1_5 +
0.38141753021852 * H1x1_6 + -1.14139437080586 * H1x1_7 ;
2472024   +   H2x2_4  =     0.97070926632973 * H1x1_1  +    -0.13619191199121 * H1x1_2
2472025   +          +       0.111155554391 * H1x1_3  +    -0.50119055939436 * H1x1_4
2472026   +          +     -0.4478264228864 * H1x1_5  +    -0.07373167561096 * H1x1_6
2472027   +          +    -0.48838853015257 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = 0.97070926632973 * H1x1_1 + -0.13619191199121 * H1x1_2 +
0.111155554391 * H1x1_3 + -0.50119055939436 * H1x1_4 + -0.4478264228864 * H1x1_5 +
-0.07373167561096 * H1x1_6 + -0.48838853015257 * H1x1_7 ;
2472028   +   H2x2_5  =    -0.97151785477215 * H1x1_1  +     0.21189203541458 * H1x1_2
2472029   +          +    -0.19596886882434 * H1x1_3  +      1.3474130560719 * H1x1_4
2472030   +          +     1.73119417991798 * H1x1_5  +    -0.03726270753922 * H1x1_6
2472031   +          +    -1.41850405567364 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = -0.97151785477215 * H1x1_1 + 0.21189203541458 * H1x1_2 +
-0.19596886882434 * H1x1_3 + 1.3474130560719 * H1x1_4 + 1.73119417991798 * H1x1_5 +
-0.03726270753922 * H1x1_6 + -1.41850405567364 * H1x1_7 ;
2472032   +   H2x2_6  =     0.64188298957992 * H1x1_1  +     0.87835723870887 * H1x1_2
2472033   +          +     0.65705195530326 * H1x1_3  +    -1.37039626769544 * H1x1_4
2472034   +          +    -0.32238737127781 * H1x1_5  +     0.33986547881641 * H1x1_6
2472035   +          +    -0.39788950643812 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = 0.64188298957992 * H1x1_1 + 0.87835723870887 * H1x1_2 +
0.65705195530326 * H1x1_3 + -1.37039626769544 * H1x1_4 + -0.32238737127781 * H1x1_5 +
0.33986547881641 * H1x1_6 + -0.39788950643812 * H1x1_7 ;
2472036   +   H2x2_1  = H2x2_1  +    -0.69934298550944 * H1x2_1
2472037   +          +    -0.34972890643898 * H1x2_2  +     0.13067071374168 * H1x2_3
2472038   +          +    -0.35163870866778 * H1x2_4  +     0.68739106758866 * H1x2_5
2472039   +          +    -0.13482628170329 * H1x2_6  +    -0.03659282127619 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + -0.69934298550944 * H1x2_1 + -0.34972890643898 *
H1x2_2 + 0.13067071374168 * H1x2_3 + -0.35163870866778 * H1x2_4 + 0.68739106758866 * H1x2_5 +
-0.13482628170329 * H1x2_6 + -0.03659282127619 * H1x2_7 ;
2472040   +   H2x2_2  = H2x2_2  +    -0.16537065948373 * H1x2_1
2472041   +          +     1.88602375412723 * H1x2_2  +     0.00246313998608 * H1x2_3
2472042   +          +    -0.38678545162214 * H1x2_4  +     1.62314892910576 * H1x2_5
2472043   +          +     1.14369813266427 * H1x2_6  +    -0.04547589616076 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + -0.16537065948373 * H1x2_1 + 1.88602375412723 * H1x2_2
+ 0.00246313998608 * H1x2_3 + -0.38678545162214 * H1x2_4 + 1.62314892910576 * H1x2_5 +
1.14369813266427 * H1x2_6 + -0.04547589616076 * H1x2_7 ;
2472044   +   H2x2_3  = H2x2_3  +     0.25040248389011 * H1x2_1
2472045   +          +    -1.56534319969402 * H1x2_2  +     0.07686150326519 * H1x2_3
2472046   +          +     -0.9279505919723 * H1x2_4  +    -0.40426942169792 * H1x2_5
2472047   +          +      0.0625082015929 * H1x2_6  +    -1.06140294711643 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 + 0.25040248389011 * H1x2_1 + -1.56534319969402 * H1x2_2
+ 0.07686150326519 * H1x2_3 + -0.9279505919723 * H1x2_4 + -0.40426942169792 * H1x2_5 +
0.0625082015929 * H1x2_6 + -1.06140294711643 * H1x2_7 ;
2472048   +   H2x2_4  = H2x2_4  +     -0.4384763018657 * H1x2_1
2472049   +          +    -1.45966734038116 * H1x2_2  +      -2.034771072409 * H1x2_3
2472050   +          +    -0.09055740067076 * H1x2_4  +     1.51504299287048 * H1x2_5
2472051   +          +     0.15439799867788 * H1x2_6  +    -1.11828371545771 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 + -0.4384763018657 * H1x2_1 + -1.45966734038116 * H1x2_2
+ -2.034771072409 * H1x2_3 + -0.09055740067076 * H1x2_4 + 1.51504299287048 * H1x2_5 +
0.15439799867788 * H1x2_6 + -1.11828371545771 * H1x2_7 ;
2472052   +   H2x2_5  = H2x2_5  +     1.25750321874643 * H1x2_1
2472053   +          +    -0.65639925770112 * H1x2_2  +     -1.7659580690496 * H1x2_3
2472054   +          +       0.375442412611 * H1x2_4  +     0.00802128415855 * H1x2_5
2472055   +          +     0.75342656671485 * H1x2_6  +     1.64939805941174 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 + 1.25750321874643 * H1x2_1 + -0.65639925770112 * H1x2_2
+ -1.7659580690496 * H1x2_3 + 0.375442412611 * H1x2_4 + 0.00802128415855 * H1x2_5 +
0.75342656671485 * H1x2_6 + 1.64939805941174 * H1x2_7 ;
2472056   +   H2x2_6  = H2x2_6  +     1.32293752617916 * H1x2_1
2472057   +          +     0.48969975153948 * H1x2_2  +    -0.72928783660254 * H1x2_3
2472058   +          +     0.84727905047749 * H1x2_4  +     0.04670520107938 * H1x2_5
2472059   +          +     2.02862934142232 * H1x2_6  +    -0.56510756043393 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = H2x2_6 + 1.32293752617916 * H1x2_1 + 0.48969975153948 * H1x2_2
+ -0.72928783660254 * H1x2_3 + 0.84727905047749 * H1x2_4 + 0.04670520107938 * H1x2_5 +
2.02862934142232 * H1x2_6 + -0.56510756043393 * H1x2_7 ;
2472060   +   H2x2_1  = H2x2_1  +       1.744725276854 * H1x3_1
2472061   +          +     0.13060858789431 * H1x3_2  +    -0.96737787454303 * H1x3_3
2472062   +          +    -0.33966254732699 * H1x3_4  +     2.39360262119688 * H1x3_5
2472063   +          +     2.58016170780679 * H1x3_6  +    -0.61611732156494 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + 1.744725276854 * H1x3_1 + 0.13060858789431 * H1x3_2 +
-0.96737787454303 * H1x3_3 + -0.33966254732699 * H1x3_4 + 2.39360262119688 * H1x3_5 +
2.58016170780679 * H1x3_6 + -0.61611732156494 * H1x3_7 ;
2472064   +   H2x2_2  = H2x2_2  +    -0.81180308935434 * H1x3_1
2472065   +          +    -1.15566778124471 * H1x3_2  +     0.08550916456261 * H1x3_3
2472066   +          +     0.54919117407314 * H1x3_4  +     0.18927188150893 * H1x3_5
2472067   +          +    -0.15464567766004 * H1x3_6  +     0.22152383228096 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + -0.81180308935434 * H1x3_1 + -1.15566778124471 *
H1x3_2 + 0.08550916456261 * H1x3_3 + 0.54919117407314 * H1x3_4 + 0.18927188150893 * H1x3_5 +
-0.15464567766004 * H1x3_6 + 0.22152383228096 * H1x3_7 ;
2472068   +   H2x2_3  = H2x2_3  +    -0.57155391194888 * H1x3_1
2472069   +          +    -0.80109748621438 * H1x3_2  +     -1.0755749661031 * H1x3_3
2472070   +          +     1.03082070302539 * H1x3_4  +    -2.00320570042417 * H1x3_5
2472071   +          +    -1.96298435256616 * H1x3_6  +     1.02097262601001 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 + -0.57155391194888 * H1x3_1 + -0.80109748621438 *
H1x3_2 + -1.0755749661031 * H1x3_3 + 1.03082070302539 * H1x3_4 + -2.00320570042417 * H1x3_5 +
-1.96298435256616 * H1x3_6 + 1.02097262601001 * H1x3_7 ;
2472072   +   H2x2_4  = H2x2_4  +     0.24801772968599 * H1x3_1
2472073   +          +    -2.13175914157416 * H1x3_2  +    -0.52172370749235 * H1x3_3
2472074   +          +     2.04158456409986 * H1x3_4  +     1.02332318578438 * H1x3_5
2472075   +          +      -0.428263055638 * H1x3_6  +    -0.10602300040145 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 + 0.24801772968599 * H1x3_1 + -2.13175914157416 * H1x3_2
+ -0.52172370749235 * H1x3_3 + 2.04158456409986 * H1x3_4 + 1.02332318578438 * H1x3_5 +
-0.428263055638 * H1x3_6 + -0.10602300040145 * H1x3_7 ;
2472076   +   H2x2_5  = H2x2_5  +    -1.00177979562809 * H1x3_1
2472077   +          +    -0.45285333413007 * H1x3_2  +    -0.35882884863392 * H1x3_3
2472078   +          +     0.23001711273663 * H1x3_4  +     0.77235765656369 * H1x3_5
2472079   +          +    -0.04383242140243 * H1x3_6  +    -0.25926963615252 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 + -1.00177979562809 * H1x3_1 + -0.45285333413007 *
H1x3_2 + -0.35882884863392 * H1x3_3 + 0.23001711273663 * H1x3_4 + 0.77235765656369 * H1x3_5 +
-0.04383242140243 * H1x3_6 + -0.25926963615252 * H1x3_7 ;
2472080   +   H2x2_6  = H2x2_6  +     0.84797826043534 * H1x3_1
2472081   +          +    -0.46927154831713 * H1x3_2  +    -1.09865845985096 * H1x3_3
2472082   +          +     0.59699123454307 * H1x3_4  +     1.59564014754161 * H1x3_5
2472083   +          +     1.33413776227036 * H1x3_6  +     0.33047800872361 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = H2x2_6 + 0.84797826043534 * H1x3_1 + -0.46927154831713 * H1x3_2
+ -1.09865845985096 * H1x3_3 + 0.59699123454307 * H1x3_4 + 1.59564014754161 * H1x3_5 +
1.33413776227036 * H1x3_6 + 0.33047800872361 * H1x3_7 ;
2472084   +   H2x2_1  =    -3.05344936388855 + H2x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = -3.05344936388855 + H2x2_1 ;
2472085   +   H2x2_2  =     0.31382645894355 + H2x2_2 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = 0.31382645894355 + H2x2_2 ;
2472086   +   H2x2_3  =     0.31718668306888 + H2x2_3 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = 0.31718668306888 + H2x2_3 ;
2472087   +   H2x2_4  =    -0.72340666209054 + H2x2_4 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = -0.72340666209054 + H2x2_4 ;
2472088   +   H2x2_5  =    -0.59585228872544 + H2x2_5 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = -0.59585228872544 + H2x2_5 ;
2472089   +   H2x2_6  =    -1.34027540207713 + H2x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = -1.34027540207713 + H2x2_6 ;
2472090   +   H2x2_7  = 0;
MPRINT(EM_DIAGRAM):   H2x2_7 = 0;
2472091   +   _MAX_ = MAX (H2x2_1 , H2x2_2 , H2x2_3 , H2x2_4 , H2x2_5 , H2x2_6 , H2x2_7
2472092   +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x2_1 , H2x2_2 , H2x2_3 , H2x2_4 , H2x2_5 , H2x2_6 ,
H2x2_7 );
2472093   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2472094   +   H2x2_1  = EXP(H2x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_1 = EXP(H2x2_1 - _MAX_);
2472095   +   _SUM_ = _SUM_ + H2x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_1 ;
2472096   +   H2x2_2  = EXP(H2x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_2 = EXP(H2x2_2 - _MAX_);
2472097   +   _SUM_ = _SUM_ + H2x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_2 ;
2472098   +   H2x2_3  = EXP(H2x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_3 = EXP(H2x2_3 - _MAX_);
2472099   +   _SUM_ = _SUM_ + H2x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_3 ;
2472100   +   H2x2_4  = EXP(H2x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_4 = EXP(H2x2_4 - _MAX_);
2472101   +   _SUM_ = _SUM_ + H2x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_4 ;
2472102   +   H2x2_5  = EXP(H2x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_5 = EXP(H2x2_5 - _MAX_);
2472103   +   _SUM_ = _SUM_ + H2x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_5 ;
2472104   +   H2x2_6  = EXP(H2x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_6 = EXP(H2x2_6 - _MAX_);
2472105   +   _SUM_ = _SUM_ + H2x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_6 ;
2472106   +   H2x2_7  = EXP(H2x2_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_7 = EXP(H2x2_7 - _MAX_);
2472107   +   _SUM_ = _SUM_ + H2x2_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_7 ;
2472108   +   H2x2_1  = H2x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 / _SUM_;
2472109   +   H2x2_2  = H2x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 / _SUM_;
2472110   +   H2x2_3  = H2x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 / _SUM_;
2472111   +   H2x2_4  = H2x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 / _SUM_;
2472112   +   H2x2_5  = H2x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 / _SUM_;
2472113   +   H2x2_6  = H2x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_6 = H2x2_6 / _SUM_;
2472114   +   H2x2_7  = H2x2_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_7 = H2x2_7 / _SUM_;
2472115   +END;
MPRINT(EM_DIAGRAM):   END;
2472116   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2472117   +   H2x2_1  = .;
MPRINT(EM_DIAGRAM):   H2x2_1 = .;
2472118   +   H2x2_2  = .;
MPRINT(EM_DIAGRAM):   H2x2_2 = .;
2472119   +   H2x2_3  = .;
MPRINT(EM_DIAGRAM):   H2x2_3 = .;
2472120   +   H2x2_4  = .;
MPRINT(EM_DIAGRAM):   H2x2_4 = .;
2472121   +   H2x2_5  = .;
MPRINT(EM_DIAGRAM):   H2x2_5 = .;
2472122   +   H2x2_6  = .;
MPRINT(EM_DIAGRAM):   H2x2_6 = .;
2472123   +   H2x2_7  = .;
MPRINT(EM_DIAGRAM):   H2x2_7 = .;
2472124   +END;
MPRINT(EM_DIAGRAM):   END;
2472125   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2472126   +*** Writing the Node H3x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H3x1_ ;
2472127   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2472128   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2472129   +   H3x1_1  =    -0.39436867680464 * H2x1_1  +    -0.20604911710368 * H2x1_2
2472130   +          +     0.29458107927185 * H2x1_3  +     0.66102662477481 * H2x1_4
2472131   +          +     0.62143406345506 * H2x1_5  +     2.63969484891539 * H2x1_6
2472132   +          +     2.03785323055294 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = -0.39436867680464 * H2x1_1 + -0.20604911710368 * H2x1_2 +
0.29458107927185 * H2x1_3 + 0.66102662477481 * H2x1_4 + 0.62143406345506 * H2x1_5 +
2.63969484891539 * H2x1_6 + 2.03785323055294 * H2x1_7 ;
2472133   +   H3x1_2  =     0.14668618790671 * H2x1_1  +     0.53251535375334 * H2x1_2
2472134   +          +     1.73802487245889 * H2x1_3  +    -0.48818058655944 * H2x1_4
2472135   +          +     -0.6987810213409 * H2x1_5  +     1.61216865707221 * H2x1_6
2472136   +          +     0.02086486846601 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = 0.14668618790671 * H2x1_1 + 0.53251535375334 * H2x1_2 +
1.73802487245889 * H2x1_3 + -0.48818058655944 * H2x1_4 + -0.6987810213409 * H2x1_5 +
1.61216865707221 * H2x1_6 + 0.02086486846601 * H2x1_7 ;
2472137   +   H3x1_3  =    -1.14054963328594 * H2x1_1  +    -0.75433574423253 * H2x1_2
2472138   +          +     0.06268113862558 * H2x1_3  +     -0.3981826777811 * H2x1_4
2472139   +          +    -0.04081627474016 * H2x1_5  +    -0.18547979458266 * H2x1_6
2472140   +          +     0.40248247309716 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = -1.14054963328594 * H2x1_1 + -0.75433574423253 * H2x1_2 +
0.06268113862558 * H2x1_3 + -0.3981826777811 * H2x1_4 + -0.04081627474016 * H2x1_5 +
-0.18547979458266 * H2x1_6 + 0.40248247309716 * H2x1_7 ;
2472141   +   H3x1_4  =    -0.41046431364634 * H2x1_1  +     0.53558649664528 * H2x1_2
2472142   +          +     0.25426413492282 * H2x1_3  +     2.32537388539524 * H2x1_4
2472143   +          +    -0.95624400041487 * H2x1_5  +     -2.1423043357326 * H2x1_6
2472144   +          +     0.70189203885946 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = -0.41046431364634 * H2x1_1 + 0.53558649664528 * H2x1_2 +
0.25426413492282 * H2x1_3 + 2.32537388539524 * H2x1_4 + -0.95624400041487 * H2x1_5 +
-2.1423043357326 * H2x1_6 + 0.70189203885946 * H2x1_7 ;
2472145   +   H3x1_5  =    -0.21139932639331 * H2x1_1  +      0.8853172209881 * H2x1_2
2472146   +          +    -0.23025284278478 * H2x1_3  +     1.30433450594503 * H2x1_4
2472147   +          +     1.26145590014333 * H2x1_5  +     0.63126627865104 * H2x1_6
2472148   +          +    -1.88455429451452 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = -0.21139932639331 * H2x1_1 + 0.8853172209881 * H2x1_2 +
-0.23025284278478 * H2x1_3 + 1.30433450594503 * H2x1_4 + 1.26145590014333 * H2x1_5 +
0.63126627865104 * H2x1_6 + -1.88455429451452 * H2x1_7 ;
2472149   +   H3x1_6  =     0.99645242104414 * H2x1_1  +    -0.17835964967148 * H2x1_2
2472150   +          +     0.06539648561603 * H2x1_3  +     0.97412284078325 * H2x1_4
2472151   +          +     -1.3247680635275 * H2x1_5  +      0.8723025918678 * H2x1_6
2472152   +          +    -0.04328836172134 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_6 = 0.99645242104414 * H2x1_1 + -0.17835964967148 * H2x1_2 +
0.06539648561603 * H2x1_3 + 0.97412284078325 * H2x1_4 + -1.3247680635275 * H2x1_5 +
0.8723025918678 * H2x1_6 + -0.04328836172134 * H2x1_7 ;
2472153   +   H3x1_7  =     2.66887548952929 * H2x1_1  +    -0.86289888310949 * H2x1_2
2472154   +          +     1.58137421487648 * H2x1_3  +    -1.37105839507635 * H2x1_4
2472155   +          +    -0.65069986041129 * H2x1_5  +     2.50322156288062 * H2x1_6
2472156   +          +     0.75157328436087 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_7 = 2.66887548952929 * H2x1_1 + -0.86289888310949 * H2x1_2 +
1.58137421487648 * H2x1_3 + -1.37105839507635 * H2x1_4 + -0.65069986041129 * H2x1_5 +
2.50322156288062 * H2x1_6 + 0.75157328436087 * H2x1_7 ;
2472157   +   H3x1_1  = H3x1_1  +     1.55317132694755 * H2x2_1
2472158   +          +     1.75656976582641 * H2x2_2  +    -1.25361089552085 * H2x2_3
2472159   +          +    -0.52984461837677 * H2x2_4  +     1.29915117873447 * H2x2_5
2472160   +          +    -1.03942372926622 * H2x2_6  +     0.13722887717178 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 + 1.55317132694755 * H2x2_1 + 1.75656976582641 * H2x2_2
+ -1.25361089552085 * H2x2_3 + -0.52984461837677 * H2x2_4 + 1.29915117873447 * H2x2_5 +
-1.03942372926622 * H2x2_6 + 0.13722887717178 * H2x2_7 ;
2472161   +   H3x1_2  = H3x1_2  +     0.88902418392614 * H2x2_1
2472162   +          +     1.35198205638356 * H2x2_2  +     1.49845421410078 * H2x2_3
2472163   +          +    -1.22318137674998 * H2x2_4  +     1.03485654068494 * H2x2_5
2472164   +          +    -0.88760495649169 * H2x2_6  +    -1.94135868960024 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = H3x1_2 + 0.88902418392614 * H2x2_1 + 1.35198205638356 * H2x2_2
+ 1.49845421410078 * H2x2_3 + -1.22318137674998 * H2x2_4 + 1.03485654068494 * H2x2_5 +
-0.88760495649169 * H2x2_6 + -1.94135868960024 * H2x2_7 ;
2472165   +   H3x1_3  = H3x1_3  +     -0.5232166311723 * H2x2_1
2472166   +          +    -0.49154441995792 * H2x2_2  +     1.21222773866672 * H2x2_3
2472167   +          +     0.88954765096374 * H2x2_4  +     0.32666743913318 * H2x2_5
2472168   +          +     1.26201705110892 * H2x2_6  +    -2.46564869578322 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = H3x1_3 + -0.5232166311723 * H2x2_1 + -0.49154441995792 * H2x2_2
+ 1.21222773866672 * H2x2_3 + 0.88954765096374 * H2x2_4 + 0.32666743913318 * H2x2_5 +
1.26201705110892 * H2x2_6 + -2.46564869578322 * H2x2_7 ;
2472169   +   H3x1_4  = H3x1_4  +     0.93897688204524 * H2x2_1
2472170   +          +    -0.56396325682963 * H2x2_2  +     0.60312223662348 * H2x2_3
2472171   +          +     0.05506195666559 * H2x2_4  +    -1.19478701476792 * H2x2_5
2472172   +          +     1.11111060864544 * H2x2_6  +     0.07602420470068 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = H3x1_4 + 0.93897688204524 * H2x2_1 + -0.56396325682963 * H2x2_2
+ 0.60312223662348 * H2x2_3 + 0.05506195666559 * H2x2_4 + -1.19478701476792 * H2x2_5 +
1.11111060864544 * H2x2_6 + 0.07602420470068 * H2x2_7 ;
2472173   +   H3x1_5  = H3x1_5  +    -2.04067007195299 * H2x2_1
2472174   +          +    -0.24511447740547 * H2x2_2  +      1.1403782608351 * H2x2_3
2472175   +          +     0.28313253531571 * H2x2_4  +    -0.31001305293935 * H2x2_5
2472176   +          +     1.43972694265244 * H2x2_6  +     0.27081966717726 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = H3x1_5 + -2.04067007195299 * H2x2_1 + -0.24511447740547 *
H2x2_2 + 1.1403782608351 * H2x2_3 + 0.28313253531571 * H2x2_4 + -0.31001305293935 * H2x2_5 +
1.43972694265244 * H2x2_6 + 0.27081966717726 * H2x2_7 ;
2472177   +   H3x1_6  = H3x1_6  +     1.53918759970091 * H2x2_1
2472178   +          +    -1.36834652818881 * H2x2_2  +    -0.97354088259421 * H2x2_3
2472179   +          +     0.73052173697294 * H2x2_4  +     1.34716412811946 * H2x2_5
2472180   +          +     1.66261041249676 * H2x2_6  +    -0.99719318696356 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_6 = H3x1_6 + 1.53918759970091 * H2x2_1 + -1.36834652818881 * H2x2_2
+ -0.97354088259421 * H2x2_3 + 0.73052173697294 * H2x2_4 + 1.34716412811946 * H2x2_5 +
1.66261041249676 * H2x2_6 + -0.99719318696356 * H2x2_7 ;
2472181   +   H3x1_7  = H3x1_7  +     1.11994694673604 * H2x2_1
2472182   +          +     -1.6803356528873 * H2x2_2  +    -0.12962793678977 * H2x2_3
2472183   +          +    -0.71896094589725 * H2x2_4  +     0.46037684620833 * H2x2_5
2472184   +          +     0.25911483872618 * H2x2_6  +     1.00876479730932 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_7 = H3x1_7 + 1.11994694673604 * H2x2_1 + -1.6803356528873 * H2x2_2
+ -0.12962793678977 * H2x2_3 + -0.71896094589725 * H2x2_4 + 0.46037684620833 * H2x2_5 +
0.25911483872618 * H2x2_6 + 1.00876479730932 * H2x2_7 ;
2472185   +   H3x1_1  =     1.52228889950912 + H3x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = 1.52228889950912 + H3x1_1 ;
2472186   +   H3x1_2  =    -0.46625781761332 + H3x1_2 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = -0.46625781761332 + H3x1_2 ;
2472187   +   H3x1_3  =     0.11008388635615 + H3x1_3 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = 0.11008388635615 + H3x1_3 ;
2472188   +   H3x1_4  =    -0.38333236869719 + H3x1_4 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = -0.38333236869719 + H3x1_4 ;
2472189   +   H3x1_5  =    -1.36620648378402 + H3x1_5 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = -1.36620648378402 + H3x1_5 ;
2472190   +   H3x1_6  =     0.41780608126276 + H3x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_6 = 0.41780608126276 + H3x1_6 ;
2472191   +   H3x1_7  =    -0.69490040783623 + H3x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_7 = -0.69490040783623 + H3x1_7 ;
2472192   +   H3x1_1  = SIN(H3x1_1 );
MPRINT(EM_DIAGRAM):   H3x1_1 = SIN(H3x1_1 );
2472193   +   H3x1_2  = SIN(H3x1_2 );
MPRINT(EM_DIAGRAM):   H3x1_2 = SIN(H3x1_2 );
2472194   +   H3x1_3  = SIN(H3x1_3 );
MPRINT(EM_DIAGRAM):   H3x1_3 = SIN(H3x1_3 );
2472195   +   H3x1_4  = SIN(H3x1_4 );
MPRINT(EM_DIAGRAM):   H3x1_4 = SIN(H3x1_4 );
2472196   +   H3x1_5  = SIN(H3x1_5 );
MPRINT(EM_DIAGRAM):   H3x1_5 = SIN(H3x1_5 );
2472197   +   H3x1_6  = SIN(H3x1_6 );
MPRINT(EM_DIAGRAM):   H3x1_6 = SIN(H3x1_6 );
2472198   +   H3x1_7  = SIN(H3x1_7 );
MPRINT(EM_DIAGRAM):   H3x1_7 = SIN(H3x1_7 );
2472199   +END;
MPRINT(EM_DIAGRAM):   END;
2472200   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2472201   +   H3x1_1  = .;
MPRINT(EM_DIAGRAM):   H3x1_1 = .;
2472202   +   H3x1_2  = .;
MPRINT(EM_DIAGRAM):   H3x1_2 = .;
2472203   +   H3x1_3  = .;
MPRINT(EM_DIAGRAM):   H3x1_3 = .;
2472204   +   H3x1_4  = .;
MPRINT(EM_DIAGRAM):   H3x1_4 = .;
2472205   +   H3x1_5  = .;
MPRINT(EM_DIAGRAM):   H3x1_5 = .;
2472206   +   H3x1_6  = .;
MPRINT(EM_DIAGRAM):   H3x1_6 = .;
2472207   +   H3x1_7  = .;
MPRINT(EM_DIAGRAM):   H3x1_7 = .;
2472208   +END;
MPRINT(EM_DIAGRAM):   END;
2472209   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2472210   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2472211   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2472212   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2472213   +   P_DepVar1  =    -2.07102874283902 * H3x1_1  +     2.04799607124649 * H3x1_2
2472214   +          +    -0.05444449856749 * H3x1_3  +    -3.76440287030853 * H3x1_4
2472215   +          +    -0.62776678498994 * H3x1_5  +    -1.00383135301243 * H3x1_6
2472216   +          +     2.26027843968818 * H3x1_7 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.07102874283902 * H3x1_1 + 2.04799607124649 * H3x1_2 +
-0.05444449856749 * H3x1_3 + -3.76440287030853 * H3x1_4 + -0.62776678498994 * H3x1_5 +
-1.00383135301243 * H3x1_6 + 2.26027843968818 * H3x1_7 ;
2472217   +   P_DepVar1  =     0.51137297979162 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.51137297979162 + P_DepVar1 ;
2472218   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2472219   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2472220   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2472221   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2472222   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2472223   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2472224   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2472225   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2472226   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2472227   +END;
MPRINT(EM_DIAGRAM):   END;
2472228   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2472229   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2472230   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2472231   +END;
MPRINT(EM_DIAGRAM):   END;
2472232   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2472233   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2472234   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2472235   +END;
MPRINT(EM_DIAGRAM):   END;
2472236   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2472237   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2472238   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2472239   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2472240   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2472241   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2472242   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2472243   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2472244   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2472245   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2472246   +END;
MPRINT(EM_DIAGRAM):   END;
2472247   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2472248   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2472249   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2472250   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2472251    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2472252    quit;
2472253    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2472254    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2472255    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2472256    retain ID 2 Node "AutoNeural12";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural12";
2472257    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2472258    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 16616 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 16616 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
2472259    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2472260    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2472261    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 16616 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 16616 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
2472262    proc sort data=EMWS8.AutoNeural12_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural12_variableset out=_temp2(keep=NAME
CREATOR);
2472263    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2472264    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL12_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2472265    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2472266    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2472267    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2472268    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2472269    proc contents data=EMWS8.AutoNeural12_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural12_train out=_meta(keep=NAME) noprint;
2472270    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 95 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
2472271    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2472272    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2472273    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 95 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 95 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2472274    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2472275    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2472276    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2472277    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 95 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 95 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2472278    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2472279    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2472279  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 8011 rows and 5 columns.
 
2472280    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
2472281    proc append base=EMWS8.Ensmbl46_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl46_FCMP data=_tempx;
2472282    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL46_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 8011 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL46_FCMP has 8011 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2472283    filename _pref
2472283  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
2472284    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2472285    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
2472286   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2472287   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
2472288   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2472289   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
2472290   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
2472291   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2472292    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2472293    quit;
2472294    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2472295    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2472296    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2472297    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
2472298    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2472299    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2472300    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2472301    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2472302    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2472303    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
2472304    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2472305    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2472306    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2472307    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2472308    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2472309    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2472310    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
2472311    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
2472312    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2472313    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2472314    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2472315    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2472316    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2472317    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2472318    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2472319    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2472320    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2472320  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
2472321    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2472322    proc append base=EMWS8.Ensmbl46_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl46_FCMP data=_tempx;
2472323    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL46_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL46_FCMP has 8015 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2472324    filename _pref
2472324  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
2472325    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2472326    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
2472327   +
2472328   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
2472329   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
2472329  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
2472330   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
2472331   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
2472332   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
2472333   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
2472334   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2472335    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2472336    quit;
2472337    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2472338    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2472339    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2472340    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
2472341    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2472342    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2472343    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2472344    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2472345    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2472346    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
2472347    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2472348    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2472349    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2472350    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2472351    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2472352    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2472353    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
2472354    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2472355    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2472356    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2472357    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2472358    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2472359    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2472360    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2472361    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2472362    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2472363    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2472363  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
2472364    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2472365    proc append base=EMWS8.Ensmbl46_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl46_FCMP data=_tempx;
2472366    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL46_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL46_FCMP has 8054 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2472367    filename _pref
2472367  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
2472368    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2472369    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
2472370   +
2472371   +
2472372   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
2472373   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
2472374   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
2472375   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
2472376   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
2472377   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2472378   +
2472379   +
2472380   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
2472381   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
2472382   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
2472383   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
2472384   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
2472385   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2472386   +
2472387   +
2472388   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
2472389   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
2472390   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
2472391   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
2472392   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
2472393   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2472394   +
2472395   +
2472396   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
2472397   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
2472398   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
2472399   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
2472400   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
2472401   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2472402   +
2472403   +
2472404   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
2472405   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
2472406   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
2472407   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
2472408   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
2472409   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2472410   +
2472411   +
2472412   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
2472413   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
2472414   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
2472415   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
2472416   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
2472417   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2472418   +
2472419   +
2472420   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
2472421   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
2472422   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
2472423   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
2472424   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
2472425   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2472426   +
2472427   +
2472428   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
2472429   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
2472430   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
2472431   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
2472432   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
2472433   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2472434   +if
2472435   +_FILTERNORM1 not in ( '.')
2472436   + and
2472437   +_FILTERNORM2 not in ( '.')
2472438   + and
2472439   +_FILTERNORM3 not in ( '.')
2472440   + and
2472441   +_FILTERNORM4 not in ( '.')
2472442   + and
2472443   +_FILTERNORM5 not in ( '.')
2472444   + and
2472445   +_FILTERNORM6 not in ( '.')
2472446   + and
2472447   +_FILTERNORM7 not in ( ' ')
2472448   + and
2472449   +_FILTERNORM8 not in ( ' ')
2472450   +and
2472451   +( Dt_Customer ne .)
2472452   +and ( Income ne . and (Income<=107000))
2472453   +and ( Kidhome ne .)
2472454   +and ( MntFishProducts ne .)
2472455   +and ( MntFruits ne .)
2472456   +and ( MntGoldProds ne .)
2472457   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
2472458   +and ( MntSweetProducts ne .)
2472459   +and ( MntWines ne .)
2472460   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
2472461   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
2472462   +and ( NumStorePurchases ne .)
2472463   +and ( NumWebPurchases ne .)
2472464   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
2472465   +and ( Recency ne .)
2472466   +and ( Teenhome ne .)
2472467   +and ( Year_Birth ne .)
2472468   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
2472469   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
2472470   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
2472471   +end;
MPRINT(EM_DIAGRAM):   end;
2472472   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
2472473   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2472474    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2472475    quit;
2472476    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2472477    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2472478    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2472479    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
2472480    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2472481    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2472482    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2472483    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2472484    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2472485    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
2472486    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2472487    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2472488    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2472489    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2472490    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2472491    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2472492    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
2472493    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
2472494    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2472495    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2472496    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2472497    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2472498    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2472499    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2472500    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2472501    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2472502    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2472502  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
2472503    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2472504    proc append base=EMWS8.Ensmbl46_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl46_FCMP data=_tempx;
2472505    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL46_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL46_FCMP has 8120 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2472506    %macro varDept(fcmpdata=,id=);
2472507    %global nobs&id scoreFlag&id;
2472508    %let scoreFlag&id = 0;
2472509    %if &id=1 or ^&fcmpStart %then %do;
2472510    proc sort data=&fcmpdata out=_temp&id nodupkey;
2472511    by NAME;
2472512    where id=&id and LHS in( %let j=1;
2472513    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
2472514    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
2472515    "&var" %let j = %eval(&j+1);
2472516    %end;
2472517    );
2472518    run;
2472519    %let dsid = %sysfunc(open(_temp&id));
2472520    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2472521    %let dsid = %sysfunc(close(&dsid));
2472522    %if &&nobs&id %then %do;
2472523    %let scoreFlag&id = 1;
2472524    %let fcmpStart = 1;
2472525    %end;
2472526    %else %let fcmpStart = 0;
2472527    %end;
2472528    %else %do;
2472529    proc sort data=&fcmpdata out=_tempid;
2472530    where id=&id;
2472531    by LHS;
2472532    run;
2472533    %let dsid = %sysfunc(open(_tempid));
2472534    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2472535    %let dsid = %sysfunc(close(&dsid));
2472536    %if ^&&nobs&id %then %do;
2472537    proc datasets lib=work nolist;
2472538    delete _tempid;
2472539    run;
2472540    quit;
2472541    %end;
2472542    %else %do;
2472543    data _tempAll;
2472544    set %let j=%eval(&id-1);
2472545    %do x=1 %to &j;
2472546    %if &&nobs&x %then %do;
2472547    _temp&x %end;
2472548    %end;
2472549    ;
2472550    run;
2472551    proc sql;
2472552    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
2472552  ! work._tempid p2 where p.name=p2.lhs;
2472553    quit;
2472554    data _temp&id;
2472555    set _temp&id;
2472556    where LHS ne '' and NAME ne '' and Node ne '';
2472557    run;
2472558    proc datasets lib=work nolist;
2472559    delete _tempAll;
2472560    run;
2472561    %let dsid = %sysfunc(open(_temp&id));
2472562    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2472563    %let dsid = %sysfunc(close(&dsid));
2472564    %if ^&&nobs&id %then %do;
2472565    proc datasets lib=work nolist;
2472566    delete _temp&id;
2472567    run;
2472568    quit;
2472569    %end;
2472570    %else %do;
2472571    %let scoreFlag&id = 1;
2472572    data _temp&id;
2472573    set _temp&id;
2472574    where LHS ne NAME and node ne '';
2472575    run;
2472576    %let dsid = %sysfunc(open(_temp&id));
2472577    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2472578    %let dsid = %sysfunc(close(&dsid));
2472579    %if ^&&nobs&id %then %do;
2472580    proc datasets lib=work nolist;
2472581    delete _temp&id;
2472582    run;
2472583    quit;
2472584    %end;
2472585    %else %do;
2472586    proc sort data=_temp&id nodupkey;
2472587    by LHS NAME;
2472588    run;
2472589    %end;
2472590    %end;
2472591    %end;
2472592    %end;
2472593    %mend varDept;
2472594    %macro optCode(outdata=fcmpdata);
2472595    %global fcmpStart;
2472596    %let fcmpStart = 0;
2472597    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
2472598    %let NumNodes=9;
2472599    %do k=1 %to &NumNodes;
2472600    %vardept(fcmpdata=&outdata, id=&k);
2472601    %end;
2472602    %mend optCode;
2472603    %optcode(outData=EMWS8.Ensmbl46_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl46_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL46_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl46_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 260 observations read from the data set EMWS8.ENSMBL46_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 184 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 76 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl46_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL46_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl46_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL46_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl46_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL46_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 76 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 76 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl46_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL46_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 76 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 80 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl46_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL46_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 76 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 119 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl46_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL46_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl46_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL46_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
2472604    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
2472605    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
2472606    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
2472607    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2472608    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
2472609    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
2472610    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
2472611    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2472612    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2472613    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
2472613  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.
 
2472614    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2472615    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
2472616    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
2472617    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2472618    filename _pref
2472618  ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural7\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural7\EMPUBLISHSCORE.sas";
2472619    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2472620    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural7\EMPUBLISHSCORE.sas.
2472621   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2472622   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2472623   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2472624   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2472625   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2472626   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2472627   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2472628   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2472629   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2472630   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2472631   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2472632   +LENGTH _WARN_ $4
2472633   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
2472634   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2472635   +
2472636   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2472637   +
2472638   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2472639   +
2472640   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2472641   +
2472642   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2472643   +
2472644   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2472645   +
2472646   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2472647   +
2472648   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2472649   +
2472650   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2472651   +
2472652   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2472653   +
2472654   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2472655   +
2472656   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2472657   +
2472658   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2472659   +
2472660   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2472661   +
2472662   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2472663   +
2472664   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2472665   +
2472666   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2472667   +
2472668   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2472669   +
2472670   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2472671   +
2472672   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2472673   +
2472674   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2472675   +
2472676   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2472677   +
2472678   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2472679   +
2472680   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2472681   +
2472682   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2472683   +
2472684   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2472685   +
2472686   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2472687   +
2472688   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2472689   +
2472690   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2472691   +
2472692   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2472693   +
2472694   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2472695   +
2472696   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2472697   +
2472698   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2472699   +
2472700   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2472701   +
2472702   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2472703   +
2472704   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2472705   +
2472706   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2472707   +
2472708   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2472709   +
2472710   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2472711   +
2472712   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2472713   +
2472714   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2472715   +
2472716   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2472717   +
2472718   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2472719   +
2472720   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2472721   +
2472722   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2472723   +
2472724   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2472725   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2472726   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2472727   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2472728   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2472729   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2472730   +end;
MPRINT(EM_DIAGRAM):   end;
2472731   +else do;
MPRINT(EM_DIAGRAM):   else do;
2472732   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2472733   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2472734   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2472735   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2472736   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2472737   +   end;
MPRINT(EM_DIAGRAM):   end;
2472738   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2472739   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2472740   +   end;
MPRINT(EM_DIAGRAM):   end;
2472741   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2472742   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2472743   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2472744   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2472745   +   end;
MPRINT(EM_DIAGRAM):   end;
2472746   +end;
MPRINT(EM_DIAGRAM):   end;
2472747   +
2472748   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2472749   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2472750   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2472751   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2472752   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2472753   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2472754   +end;
MPRINT(EM_DIAGRAM):   end;
2472755   +else do;
MPRINT(EM_DIAGRAM):   else do;
2472756   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2472757   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2472758   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2472759   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2472760   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2472761   +   end;
MPRINT(EM_DIAGRAM):   end;
2472762   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2472763   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2472764   +   end;
MPRINT(EM_DIAGRAM):   end;
2472765   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2472766   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2472767   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2472768   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2472769   +   end;
MPRINT(EM_DIAGRAM):   end;
2472770   +end;
MPRINT(EM_DIAGRAM):   end;
2472771   +
2472772   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2472773   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2472774   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2472775   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2472776   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2472777   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2472778   +end;
MPRINT(EM_DIAGRAM):   end;
2472779   +else do;
MPRINT(EM_DIAGRAM):   else do;
2472780   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2472781   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2472782   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2472783   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2472784   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2472785   +   end;
MPRINT(EM_DIAGRAM):   end;
2472786   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2472787   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2472788   +   end;
MPRINT(EM_DIAGRAM):   end;
2472789   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2472790   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2472791   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2472792   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2472793   +   end;
MPRINT(EM_DIAGRAM):   end;
2472794   +end;
MPRINT(EM_DIAGRAM):   end;
2472795   +
2472796   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2472797   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2472798   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2472799   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2472800   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2472801   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2472802   +end;
MPRINT(EM_DIAGRAM):   end;
2472803   +else do;
MPRINT(EM_DIAGRAM):   else do;
2472804   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2472805   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2472806   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2472807   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2472808   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2472809   +   end;
MPRINT(EM_DIAGRAM):   end;
2472810   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2472811   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2472812   +   end;
MPRINT(EM_DIAGRAM):   end;
2472813   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2472814   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2472815   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2472816   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2472817   +   end;
MPRINT(EM_DIAGRAM):   end;
2472818   +end;
MPRINT(EM_DIAGRAM):   end;
2472819   +
2472820   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2472821   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2472822   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2472823   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2472824   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2472825   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2472826   +end;
MPRINT(EM_DIAGRAM):   end;
2472827   +else do;
MPRINT(EM_DIAGRAM):   else do;
2472828   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2472829   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2472830   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2472831   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2472832   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2472833   +   end;
MPRINT(EM_DIAGRAM):   end;
2472834   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2472835   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2472836   +   end;
MPRINT(EM_DIAGRAM):   end;
2472837   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2472838   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2472839   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2472840   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2472841   +   end;
MPRINT(EM_DIAGRAM):   end;
2472842   +end;
MPRINT(EM_DIAGRAM):   end;
2472843   +
2472844   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2472845   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2472846   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2472847   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2472848   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2472849   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2472850   +end;
MPRINT(EM_DIAGRAM):   end;
2472851   +else do;
MPRINT(EM_DIAGRAM):   else do;
2472852   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2472853   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2472854   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2472855   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2472856   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2472857   +   end;
MPRINT(EM_DIAGRAM):   end;
2472858   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2472859   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2472860   +   end;
MPRINT(EM_DIAGRAM):   end;
2472861   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2472862   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2472863   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2472864   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2472865   +   end;
MPRINT(EM_DIAGRAM):   end;
2472866   +end;
MPRINT(EM_DIAGRAM):   end;
2472867   +
2472868   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2472869   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2472870   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2472871   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2472872   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2472873   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2472874   +end;
MPRINT(EM_DIAGRAM):   end;
2472875   +else do;
MPRINT(EM_DIAGRAM):   else do;
2472876   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2472877   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2472878   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2472879   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2472880   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2472881   +   end;
MPRINT(EM_DIAGRAM):   end;
2472882   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2472883   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2472884   +   end;
MPRINT(EM_DIAGRAM):   end;
2472885   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2472886   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2472887   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2472888   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2472889   +   end;
MPRINT(EM_DIAGRAM):   end;
2472890   +end;
MPRINT(EM_DIAGRAM):   end;
2472891   +
2472892   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2472893   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
2472894   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2472895   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2472896   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2472897   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2472898   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2472899   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2472900   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2472901   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2472902   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2472903   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2472904   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2472905   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2472906   +end;
MPRINT(EM_DIAGRAM):   end;
2472907   +else do;
MPRINT(EM_DIAGRAM):   else do;
2472908   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2472909   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2472910   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2472911   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2472912   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2472913   +   end;
MPRINT(EM_DIAGRAM):   end;
2472914   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2472915   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2472916   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2472917   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2472918   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2472919   +   end;
MPRINT(EM_DIAGRAM):   end;
2472920   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2472921   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2472922   +   end;
MPRINT(EM_DIAGRAM):   end;
2472923   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2472924   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2472925   +   end;
MPRINT(EM_DIAGRAM):   end;
2472926   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2472927   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2472928   +   end;
MPRINT(EM_DIAGRAM):   end;
2472929   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2472930   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2472931   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2472932   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2472933   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2472934   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2472935   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2472936   +   end;
MPRINT(EM_DIAGRAM):   end;
2472937   +end;
MPRINT(EM_DIAGRAM):   end;
2472938   +
2472939   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2472940   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2472941   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
2472942   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2472943   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2472944   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2472945   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2472946   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2472947   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2472948   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2472949   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2472950   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2472951   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2472952   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2472953   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2472954   +end;
MPRINT(EM_DIAGRAM):   end;
2472955   +else do;
MPRINT(EM_DIAGRAM):   else do;
2472956   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2472957   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2472958   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2472959   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2472960   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2472961   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2472962   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2472963   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2472964   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2472965   +         end;
MPRINT(EM_DIAGRAM):   end;
2472966   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2472967   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2472968   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2472969   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2472970   +            end;
MPRINT(EM_DIAGRAM):   end;
2472971   +         end;
MPRINT(EM_DIAGRAM):   end;
2472972   +      end;
MPRINT(EM_DIAGRAM):   end;
2472973   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2472974   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2472975   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2472976   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2472977   +         end;
MPRINT(EM_DIAGRAM):   end;
2472978   +      end;
MPRINT(EM_DIAGRAM):   end;
2472979   +   end;
MPRINT(EM_DIAGRAM):   end;
2472980   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2472981   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2472982   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2472983   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2472984   +      end;
MPRINT(EM_DIAGRAM):   end;
2472985   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2472986   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2472987   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2472988   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2472989   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2472990   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2472991   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2472992   +         end;
MPRINT(EM_DIAGRAM):   end;
2472993   +      end;
MPRINT(EM_DIAGRAM):   end;
2472994   +   end;
MPRINT(EM_DIAGRAM):   end;
2472995   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2472996   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2472997   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2472998   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2472999   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2473000   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2473001   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2473002   +   end;
MPRINT(EM_DIAGRAM):   end;
2473003   +end;
MPRINT(EM_DIAGRAM):   end;
2473004   +
2473005   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2473006   +*** Checking missing input Interval
2473007   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2473008   +
2473009   +IF NMISS(
2473010   +   AcceptedCmpTotal ,
2473011   +   Age ,
2473012   +   Frq ,
2473013   +   Income ,
2473014   +   Kidhome ,
2473015   +   Mnt ,
2473016   +   MntFishProducts ,
2473017   +   MntFruits ,
2473018   +   MntGoldProds ,
2473019   +   MntMeatProducts ,
2473020   +   MntSweetProducts ,
2473021   +   MntWines ,
2473022   +   MonthsAsCustomer ,
2473023   +   NumCatalogPurchases ,
2473024   +   NumDealsPurchases ,
2473025   +   NumDistPurchases ,
2473026   +   NumStorePurchases ,
2473027   +   NumWebPurchases ,
2473028   +   NumWebVisitsMonth ,
2473029   +   RFMstat ,
2473030   +   RMntFrq ,
2473031   +   Recency ,
2473032   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
2473033   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2473034   +
2473035   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2473036   +END;
MPRINT(EM_DIAGRAM):   END;
2473037   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2473038   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2473039   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2473040   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2473041   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2473042   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2473043   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2473044   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2473045   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2473046   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2473047   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2473048   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2473049   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2473050   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2473051   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2473052   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2473053   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2473054   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2473055   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2473056   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2473057   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2473058   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2473059   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 *
MonthsAsCustomer ;
2473060   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2473061   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2473062   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2473063   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2473064   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2473065   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2473066   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2473067   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2473068   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2473069   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2473070   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2473071   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2473072   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2473073   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2473074   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2473075   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2473076   +END;
MPRINT(EM_DIAGRAM):   END;
2473077   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2473078   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2473079   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2473080   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2473081   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2473082   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2473083   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2473084   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2473085   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2473086   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2473087   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2473088   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2473089   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2473090   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2473091   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2473092   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2473093   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2473094   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2473095   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2473096   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2473097   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2473098   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2473099   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
2473100   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2473101   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2473102   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2473103   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2473104   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2473105   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2473106   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2473107   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2473108   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2473109   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2473110   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 *
MonthsAsCustomer ;
2473111   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2473112   +   ELSE S_NumCatalogPurchases
2473113   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2473114   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2473115   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2473116   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2473117   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2473118   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2473119   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2473120   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2473121   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2473122   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2473123   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2473124   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2473125   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2473126   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2473127   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2473128   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2473129   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2473130   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2473131   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2473132   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2473133   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2473134   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2473135   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2473136   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2473137   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2473138   +END;
MPRINT(EM_DIAGRAM):   END;
2473139   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2473140   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2473141   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2473142   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2473143   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2473144   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2473145   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2473146   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2473147   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2473148   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2473149   +   H1x1_1  =     0.27051750628107 * S_AcceptedCmpTotal
2473150   +          +    -0.01552488999587 * S_Age  +    -0.19918933236131 * S_Frq
2473151   +          +    -0.18053367989037 * S_Income  +     0.17934470816975 *
2473152   +        S_Kidhome  +    -0.27914859130186 * S_Mnt  +    -0.05331142159606 *
2473153   +        S_MntFishProducts  +    -0.03730503814111 * S_MntFruits
2473154   +          +     0.01217897476566 * S_MntGoldProds  +       0.241005967683 *
2473155   +        S_MntMeatProducts  +    -0.02873172523867 * S_MntSweetProducts
2473156   +          +    -0.35773732926132 * S_MntWines  +    -0.00800625524539 *
2473157   +        S_MonthsAsCustomer  +     0.14253720708201 * S_NumCatalogPurchases
2473158   +          +     0.09634439105648 * S_NumDealsPurchases
2473159   +          +     -0.2727389064287 * S_NumDistPurchases
2473160   +          +    -0.14179871978162 * S_NumStorePurchases
2473161   +          +     0.11008049559527 * S_NumWebPurchases
2473162   +          +    -0.16791463027749 * S_NumWebVisitsMonth
2473163   +          +     0.12827091331546 * S_RFMstat  +    -0.05819422771336 *
2473164   +        S_RMntFrq  +     0.17192522504917 * S_Recency
2473165   +          +     0.13379709932247 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.27051750628107 * S_AcceptedCmpTotal + -0.01552488999587 *
S_Age + -0.19918933236131 * S_Frq + -0.18053367989037 * S_Income + 0.17934470816975 *
S_Kidhome + -0.27914859130186 * S_Mnt + -0.05331142159606 * S_MntFishProducts +
-0.03730503814111 * S_MntFruits + 0.01217897476566 * S_MntGoldProds + 0.241005967683 *
S_MntMeatProducts + -0.02873172523867 * S_MntSweetProducts + -0.35773732926132 * S_MntWines +
-0.00800625524539 * S_MonthsAsCustomer + 0.14253720708201 * S_NumCatalogPurchases +
0.09634439105648 * S_NumDealsPurchases + -0.2727389064287 * S_NumDistPurchases +
-0.14179871978162 * S_NumStorePurchases + 0.11008049559527 * S_NumWebPurchases +
-0.16791463027749 * S_NumWebVisitsMonth + 0.12827091331546 * S_RFMstat + -0.05819422771336 *
S_RMntFrq + 0.17192522504917 * S_Recency + 0.13379709932247 * S_Teenhome ;
2473166   +   H1x1_2  =      0.2625003002792 * S_AcceptedCmpTotal
2473167   +          +    -0.00409648963127 * S_Age  +    -0.08422560024107 * S_Frq
2473168   +          +      0.1678148652095 * S_Income  +      -0.122580580609 *
2473169   +        S_Kidhome  +    -0.41368311141801 * S_Mnt  +     -0.0649787838725 *
2473170   +        S_MntFishProducts  +    -0.06363287766971 * S_MntFruits
2473171   +          +     0.00810850196464 * S_MntGoldProds  +      0.2984971941271 *
2473172   +        S_MntMeatProducts  +     -0.0651075315757 * S_MntSweetProducts
2473173   +          +    -0.42717799596572 * S_MntWines  +    -0.00945771129633 *
2473174   +        S_MonthsAsCustomer  +     0.33346839008681 * S_NumCatalogPurchases
2473175   +          +     0.15835936877168 * S_NumDealsPurchases
2473176   +          +     0.04229992769587 * S_NumDistPurchases
2473177   +          +    -0.04051362547639 * S_NumStorePurchases
2473178   +          +    -0.01791546488406 * S_NumWebPurchases
2473179   +          +     0.28833008597045 * S_NumWebVisitsMonth
2473180   +          +     0.08007709098478 * S_RFMstat  +     0.37677948418886 *
2473181   +        S_RMntFrq  +    -0.32542265112765 * S_Recency
2473182   +          +    -0.10763248273834 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.2625003002792 * S_AcceptedCmpTotal + -0.00409648963127 *
S_Age + -0.08422560024107 * S_Frq + 0.1678148652095 * S_Income + -0.122580580609 * S_Kidhome +
-0.41368311141801 * S_Mnt + -0.0649787838725 * S_MntFishProducts + -0.06363287766971 *
S_MntFruits + 0.00810850196464 * S_MntGoldProds + 0.2984971941271 * S_MntMeatProducts +
-0.0651075315757 * S_MntSweetProducts + -0.42717799596572 * S_MntWines + -0.00945771129633 *
S_MonthsAsCustomer + 0.33346839008681 * S_NumCatalogPurchases + 0.15835936877168 *
S_NumDealsPurchases + 0.04229992769587 * S_NumDistPurchases + -0.04051362547639 *
S_NumStorePurchases + -0.01791546488406 * S_NumWebPurchases + 0.28833008597045 *
S_NumWebVisitsMonth + 0.08007709098478 * S_RFMstat + 0.37677948418886 * S_RMntFrq +
-0.32542265112765 * S_Recency + -0.10763248273834 * S_Teenhome ;
2473183   +   H1x1_1  = H1x1_1  +     0.17927888078386 * AcceptedCmp10
2473184   +          +       0.309097592234 * AcceptedCmp20  +     0.30005706470617 *
2473185   +        AcceptedCmp30  +     0.30534843193785 * AcceptedCmp40
2473186   +          +     0.19575142296602 * AcceptedCmp50  +    -0.26930325741881 *
2473187   +        Complain0  +    -0.07193220591551 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.17927888078386 * AcceptedCmp10 + 0.309097592234 *
AcceptedCmp20 + 0.30005706470617 * AcceptedCmp30 + 0.30534843193785 * AcceptedCmp40 +
0.19575142296602 * AcceptedCmp50 + -0.26930325741881 * Complain0 + -0.07193220591551 *
HigherEducationBinary0 ;
2473188   +   H1x1_2  = H1x1_2  +     0.01282806481889 * AcceptedCmp10
2473189   +          +     0.01542710847454 * AcceptedCmp20  +     0.03576476827309 *
2473190   +        AcceptedCmp30  +     0.04230610697529 * AcceptedCmp40
2473191   +          +     0.03405078302469 * AcceptedCmp50  +     0.13002166919554 *
2473192   +        Complain0  +    -0.08203696285033 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.01282806481889 * AcceptedCmp10 + 0.01542710847454 *
AcceptedCmp20 + 0.03576476827309 * AcceptedCmp30 + 0.04230610697529 * AcceptedCmp40 +
0.03405078302469 * AcceptedCmp50 + 0.13002166919554 * Complain0 + -0.08203696285033 *
HigherEducationBinary0 ;
2473193   +   H1x1_1  = H1x1_1  +    -0.04471063478028 * Education2n_Cycle
2473194   +          +     0.15571809437849 * EducationBasic  +    -0.00113978624206 *
2473195   +        EducationGraduation  +     0.00750750981266 * EducationMaster
2473196   +          +     -0.0504367274898 * Marital_StatusDivorced
2473197   +          +     0.28345714390306 * Marital_StatusMarried
2473198   +          +     -0.2012923780435 * Marital_StatusSingle
2473199   +          +     0.20022167903492 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.04471063478028 * Education2n_Cycle +
0.15571809437849 * EducationBasic + -0.00113978624206 * EducationGraduation + 0.00750750981266
* EducationMaster + -0.0504367274898 * Marital_StatusDivorced + 0.28345714390306 *
Marital_StatusMarried + -0.2012923780435 * Marital_StatusSingle + 0.20022167903492 *
Marital_StatusTogether ;
2473200   +   H1x1_2  = H1x1_2  +     0.12691361812265 * Education2n_Cycle
2473201   +          +       0.003205191831 * EducationBasic  +    -0.04323354449955 *
2473202   +        EducationGraduation  +    -0.06699429239126 * EducationMaster
2473203   +          +     0.06828937261262 * Marital_StatusDivorced
2473204   +          +     -0.1520862543536 * Marital_StatusMarried
2473205   +          +      0.1392808464716 * Marital_StatusSingle
2473206   +          +    -0.12406922875482 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.12691361812265 * Education2n_Cycle + 0.003205191831
* EducationBasic + -0.04323354449955 * EducationGraduation + -0.06699429239126 *
EducationMaster + 0.06828937261262 * Marital_StatusDivorced + -0.1520862543536 *
Marital_StatusMarried + 0.1392808464716 * Marital_StatusSingle + -0.12406922875482 *
Marital_StatusTogether ;
2473207   +   H1x1_1  =     0.89722634972069 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.89722634972069 + H1x1_1 ;
2473208   +   H1x1_2  =     -0.5979471913364 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.5979471913364 + H1x1_2 ;
2473209   +   H1x1_1  = SIN(H1x1_1 );
MPRINT(EM_DIAGRAM):   H1x1_1 = SIN(H1x1_1 );
2473210   +   H1x1_2  = SIN(H1x1_2 );
MPRINT(EM_DIAGRAM):   H1x1_2 = SIN(H1x1_2 );
2473211   +END;
MPRINT(EM_DIAGRAM):   END;
2473212   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2473213   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2473214   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2473215   +END;
MPRINT(EM_DIAGRAM):   END;
2473216   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2473217   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2473218   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2473219   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2473220   +   P_DepVar1  =     -11.533020189097 * H1x1_1  +     17.2320065402955 * H1x1_2
2473221   +         ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -11.533020189097 * H1x1_1 + 17.2320065402955 * H1x1_2 ;
2473222   +   P_DepVar1  =     2.37722840752042 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.37722840752042 + P_DepVar1 ;
2473223   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2473224   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2473225   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2473226   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2473227   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2473228   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2473229   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2473230   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2473231   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2473232   +END;
MPRINT(EM_DIAGRAM):   END;
2473233   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2473234   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2473235   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2473236   +END;
MPRINT(EM_DIAGRAM):   END;
2473237   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2473238   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2473239   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2473240   +END;
MPRINT(EM_DIAGRAM):   END;
2473241   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2473242   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2473243   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2473244   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2473245   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2473246   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2473247   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2473248   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2473249   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2473250   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2473251   +END;
MPRINT(EM_DIAGRAM):   END;
2473252   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2473253   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2473254   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2473255   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2473256    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2473257    quit;
2473258    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2473259    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2473260    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2473261    retain ID 2 Node "AutoNeural7";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural7";
2473262    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2473263    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2180 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2180 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2473264    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2473265    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2473266    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2180 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2180 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2473267    proc sort data=EMWS8.AutoNeural7_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural7_variableset out=_temp2(keep=NAME
CREATOR);
2473268    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2473269    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL7_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2473270    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2473271    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2473272    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2473273    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2473274    proc contents data=EMWS8.AutoNeural7_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural7_train out=_meta(keep=NAME) noprint;
2473275    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 55 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
2473276    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2473277    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2473278    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 55 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 55 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2473279    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2473280    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2473281    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2473282    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 55 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 55 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2473283    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2473284    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2473284  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1359 rows and 5 columns.
 
2473285    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2473286    proc append base=EMWS8.Ensmbl46_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl46_FCMP data=_tempx;
2473287    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL46_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1359 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL46_FCMP has 1359 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2473288    filename _pref
2473288  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
2473289    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2473290    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
2473291   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2473292   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
2473293   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2473294   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
2473295   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
2473296   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2473297    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2473298    quit;
2473299    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2473300    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2473301    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2473302    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
2473303    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2473304    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2473305    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2473306    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2473307    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2473308    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
2473309    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2473310    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2473311    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2473312    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2473313    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2473314    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2473315    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
2473316    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
2473317    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2473318    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2473319    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2473320    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2473321    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2473322    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2473323    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2473324    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2473325    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2473325  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
2473326    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2473327    proc append base=EMWS8.Ensmbl46_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl46_FCMP data=_tempx;
2473328    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL46_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL46_FCMP has 1363 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2473329    filename _pref
2473329  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
2473330    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2473331    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
2473332   +
2473333   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
2473334   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
2473334  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
2473335   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
2473336   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
2473337   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
2473338   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
2473339   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2473340    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2473341    quit;
2473342    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2473343    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2473344    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2473345    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
2473346    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2473347    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2473348    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2473349    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2473350    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2473351    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
2473352    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2473353    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2473354    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2473355    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2473356    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2473357    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2473358    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
2473359    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2473360    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2473361    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2473362    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2473363    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2473364    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2473365    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2473366    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2473367    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2473368    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2473368  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
2473369    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2473370    proc append base=EMWS8.Ensmbl46_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl46_FCMP data=_tempx;
2473371    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL46_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL46_FCMP has 1402 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2473372    filename _pref
2473372  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
2473373    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2473374    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
2473375   +
2473376   +
2473377   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
2473378   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
2473379   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
2473380   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
2473381   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
2473382   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2473383   +
2473384   +
2473385   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
2473386   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
2473387   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
2473388   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
2473389   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
2473390   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2473391   +
2473392   +
2473393   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
2473394   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
2473395   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
2473396   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
2473397   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
2473398   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2473399   +
2473400   +
2473401   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
2473402   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
2473403   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
2473404   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
2473405   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
2473406   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2473407   +
2473408   +
2473409   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
2473410   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
2473411   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
2473412   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
2473413   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
2473414   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2473415   +
2473416   +
2473417   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
2473418   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
2473419   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
2473420   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
2473421   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
2473422   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2473423   +
2473424   +
2473425   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
2473426   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
2473427   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
2473428   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
2473429   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
2473430   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2473431   +
2473432   +
2473433   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
2473434   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
2473435   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
2473436   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
2473437   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
2473438   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2473439   +if
2473440   +_FILTERNORM1 not in ( '.')
2473441   + and
2473442   +_FILTERNORM2 not in ( '.')
2473443   + and
2473444   +_FILTERNORM3 not in ( '.')
2473445   + and
2473446   +_FILTERNORM4 not in ( '.')
2473447   + and
2473448   +_FILTERNORM5 not in ( '.')
2473449   + and
2473450   +_FILTERNORM6 not in ( '.')
2473451   + and
2473452   +_FILTERNORM7 not in ( ' ')
2473453   + and
2473454   +_FILTERNORM8 not in ( ' ')
2473455   +and
2473456   +( Dt_Customer ne .)
2473457   +and ( Income ne . and (Income<=107000))
2473458   +and ( Kidhome ne .)
2473459   +and ( MntFishProducts ne .)
2473460   +and ( MntFruits ne .)
2473461   +and ( MntGoldProds ne .)
2473462   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
2473463   +and ( MntSweetProducts ne .)
2473464   +and ( MntWines ne .)
2473465   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
2473466   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
2473467   +and ( NumStorePurchases ne .)
2473468   +and ( NumWebPurchases ne .)
2473469   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
2473470   +and ( Recency ne .)
2473471   +and ( Teenhome ne .)
2473472   +and ( Year_Birth ne .)
2473473   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
2473474   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
2473475   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
2473476   +end;
MPRINT(EM_DIAGRAM):   end;
2473477   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
2473478   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2473479    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2473480    quit;
2473481    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2473482    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2473483    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2473484    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
2473485    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2473486    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2473487    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2473488    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2473489    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2473490    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
2473491    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2473492    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2473493    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2473494    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2473495    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2473496    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2473497    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
2473498    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
2473499    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2473500    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2473501    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2473502    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2473503    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2473504    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2473505    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2473506    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2473507    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2473507  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
2473508    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2473509    proc append base=EMWS8.Ensmbl46_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl46_FCMP data=_tempx;
2473510    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL46_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL46_FCMP has 1468 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2473511    %macro varDept(fcmpdata=,id=);
2473512    %global nobs&id scoreFlag&id;
2473513    %let scoreFlag&id = 0;
2473514    %if &id=1 or ^&fcmpStart %then %do;
2473515    proc sort data=&fcmpdata out=_temp&id nodupkey;
2473516    by NAME;
2473517    where id=&id and LHS in( %let j=1;
2473518    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
2473519    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
2473520    "&var" %let j = %eval(&j+1);
2473521    %end;
2473522    );
2473523    run;
2473524    %let dsid = %sysfunc(open(_temp&id));
2473525    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2473526    %let dsid = %sysfunc(close(&dsid));
2473527    %if &&nobs&id %then %do;
2473528    %let scoreFlag&id = 1;
2473529    %let fcmpStart = 1;
2473530    %end;
2473531    %else %let fcmpStart = 0;
2473532    %end;
2473533    %else %do;
2473534    proc sort data=&fcmpdata out=_tempid;
2473535    where id=&id;
2473536    by LHS;
2473537    run;
2473538    %let dsid = %sysfunc(open(_tempid));
2473539    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2473540    %let dsid = %sysfunc(close(&dsid));
2473541    %if ^&&nobs&id %then %do;
2473542    proc datasets lib=work nolist;
2473543    delete _tempid;
2473544    run;
2473545    quit;
2473546    %end;
2473547    %else %do;
2473548    data _tempAll;
2473549    set %let j=%eval(&id-1);
2473550    %do x=1 %to &j;
2473551    %if &&nobs&x %then %do;
2473552    _temp&x %end;
2473553    %end;
2473554    ;
2473555    run;
2473556    proc sql;
2473557    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
2473557  ! work._tempid p2 where p.name=p2.lhs;
2473558    quit;
2473559    data _temp&id;
2473560    set _temp&id;
2473561    where LHS ne '' and NAME ne '' and Node ne '';
2473562    run;
2473563    proc datasets lib=work nolist;
2473564    delete _tempAll;
2473565    run;
2473566    %let dsid = %sysfunc(open(_temp&id));
2473567    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2473568    %let dsid = %sysfunc(close(&dsid));
2473569    %if ^&&nobs&id %then %do;
2473570    proc datasets lib=work nolist;
2473571    delete _temp&id;
2473572    run;
2473573    quit;
2473574    %end;
2473575    %else %do;
2473576    %let scoreFlag&id = 1;
2473577    data _temp&id;
2473578    set _temp&id;
2473579    where LHS ne NAME and node ne '';
2473580    run;
2473581    %let dsid = %sysfunc(open(_temp&id));
2473582    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2473583    %let dsid = %sysfunc(close(&dsid));
2473584    %if ^&&nobs&id %then %do;
2473585    proc datasets lib=work nolist;
2473586    delete _temp&id;
2473587    run;
2473588    quit;
2473589    %end;
2473590    %else %do;
2473591    proc sort data=_temp&id nodupkey;
2473592    by LHS NAME;
2473593    run;
2473594    %end;
2473595    %end;
2473596    %end;
2473597    %end;
2473598    %mend varDept;
2473599    %macro optCode(outdata=fcmpdata);
2473600    %global fcmpStart;
2473601    %let fcmpStart = 0;
2473602    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
2473603    %let NumNodes=9;
2473604    %do k=1 %to &NumNodes;
2473605    %vardept(fcmpdata=&outdata, id=&k);
2473606    %end;
2473607    %mend optCode;
2473608    %optcode(outData=EMWS8.Ensmbl46_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl46_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL46_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl46_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 140 observations read from the data set EMWS8.ENSMBL46_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 104 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 36 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl46_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL46_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl46_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL46_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl46_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL46_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 36 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 36 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl46_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL46_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 36 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 40 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl46_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL46_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 36 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 79 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.06 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl46_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL46_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl46_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL46_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
2473609    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
2473610    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
2473611    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
2473612    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2473613    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
2473614    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
2473615    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
2473616    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2473617    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2473618    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
2473618  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.
 
2473619    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2473620    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
2473621    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
2473622    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2473623    filename _pref
2473623  ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural10\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural10\EMPUBLISHSCORE.sas";
2473624    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2473625    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural10\EMPUBLISHSCORE.sas.
2473626   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2473627   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2473628   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2473629   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2473630   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2473631   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2473632   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2473633   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2473634   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2473635   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2473636   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2473637   +LENGTH _WARN_ $4
2473638   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
2473639   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2473640   +
2473641   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2473642   +
2473643   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2473644   +
2473645   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2473646   +
2473647   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2473648   +
2473649   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2473650   +
2473651   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2473652   +
2473653   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2473654   +
2473655   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2473656   +
2473657   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2473658   +
2473659   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2473660   +
2473661   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2473662   +
2473663   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2473664   +
2473665   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2473666   +
2473667   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2473668   +
2473669   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2473670   +
2473671   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2473672   +
2473673   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2473674   +
2473675   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2473676   +
2473677   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2473678   +
2473679   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2473680   +
2473681   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2473682   +
2473683   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2473684   +
2473685   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2473686   +
2473687   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2473688   +
2473689   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2473690   +
2473691   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2473692   +
2473693   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2473694   +
2473695   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2473696   +
2473697   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2473698   +
2473699   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2473700   +
2473701   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2473702   +
2473703   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2473704   +
2473705   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2473706   +
2473707   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2473708   +
2473709   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2473710   +
2473711   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2473712   +
2473713   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2473714   +
2473715   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2473716   +
2473717   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2473718   +
2473719   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2473720   +
2473721   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2473722   +
2473723   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
2473724   +
2473725   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
2473726   +
2473727   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
2473728   +
2473729   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
2473730   +
2473731   +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
2473732   +
2473733   +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
2473734   +
2473735   +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
2473736   +
2473737   +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
2473738   +
2473739   +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
2473740   +
2473741   +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
2473742   +
2473743   +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
2473744   +
2473745   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2473746   +
2473747   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2473748   +
2473749   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2473750   +
2473751   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2473752   +
2473753   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2473754   +
2473755   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2473756   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2473757   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2473758   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2473759   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2473760   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2473761   +end;
MPRINT(EM_DIAGRAM):   end;
2473762   +else do;
MPRINT(EM_DIAGRAM):   else do;
2473763   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2473764   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2473765   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2473766   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2473767   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2473768   +   end;
MPRINT(EM_DIAGRAM):   end;
2473769   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2473770   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2473771   +   end;
MPRINT(EM_DIAGRAM):   end;
2473772   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2473773   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2473774   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2473775   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2473776   +   end;
MPRINT(EM_DIAGRAM):   end;
2473777   +end;
MPRINT(EM_DIAGRAM):   end;
2473778   +
2473779   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2473780   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2473781   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2473782   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2473783   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2473784   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2473785   +end;
MPRINT(EM_DIAGRAM):   end;
2473786   +else do;
MPRINT(EM_DIAGRAM):   else do;
2473787   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2473788   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2473789   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2473790   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2473791   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2473792   +   end;
MPRINT(EM_DIAGRAM):   end;
2473793   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2473794   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2473795   +   end;
MPRINT(EM_DIAGRAM):   end;
2473796   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2473797   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2473798   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2473799   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2473800   +   end;
MPRINT(EM_DIAGRAM):   end;
2473801   +end;
MPRINT(EM_DIAGRAM):   end;
2473802   +
2473803   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2473804   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2473805   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2473806   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2473807   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2473808   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2473809   +end;
MPRINT(EM_DIAGRAM):   end;
2473810   +else do;
MPRINT(EM_DIAGRAM):   else do;
2473811   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2473812   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2473813   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2473814   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2473815   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2473816   +   end;
MPRINT(EM_DIAGRAM):   end;
2473817   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2473818   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2473819   +   end;
MPRINT(EM_DIAGRAM):   end;
2473820   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2473821   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2473822   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2473823   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2473824   +   end;
MPRINT(EM_DIAGRAM):   end;
2473825   +end;
MPRINT(EM_DIAGRAM):   end;
2473826   +
2473827   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2473828   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2473829   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2473830   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2473831   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2473832   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2473833   +end;
MPRINT(EM_DIAGRAM):   end;
2473834   +else do;
MPRINT(EM_DIAGRAM):   else do;
2473835   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2473836   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2473837   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2473838   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2473839   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2473840   +   end;
MPRINT(EM_DIAGRAM):   end;
2473841   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2473842   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2473843   +   end;
MPRINT(EM_DIAGRAM):   end;
2473844   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2473845   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2473846   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2473847   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2473848   +   end;
MPRINT(EM_DIAGRAM):   end;
2473849   +end;
MPRINT(EM_DIAGRAM):   end;
2473850   +
2473851   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2473852   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2473853   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2473854   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2473855   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2473856   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2473857   +end;
MPRINT(EM_DIAGRAM):   end;
2473858   +else do;
MPRINT(EM_DIAGRAM):   else do;
2473859   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2473860   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2473861   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2473862   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2473863   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2473864   +   end;
MPRINT(EM_DIAGRAM):   end;
2473865   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2473866   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2473867   +   end;
MPRINT(EM_DIAGRAM):   end;
2473868   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2473869   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2473870   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2473871   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2473872   +   end;
MPRINT(EM_DIAGRAM):   end;
2473873   +end;
MPRINT(EM_DIAGRAM):   end;
2473874   +
2473875   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2473876   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2473877   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2473878   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2473879   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2473880   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2473881   +end;
MPRINT(EM_DIAGRAM):   end;
2473882   +else do;
MPRINT(EM_DIAGRAM):   else do;
2473883   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2473884   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2473885   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2473886   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2473887   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2473888   +   end;
MPRINT(EM_DIAGRAM):   end;
2473889   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2473890   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2473891   +   end;
MPRINT(EM_DIAGRAM):   end;
2473892   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2473893   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2473894   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2473895   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2473896   +   end;
MPRINT(EM_DIAGRAM):   end;
2473897   +end;
MPRINT(EM_DIAGRAM):   end;
2473898   +
2473899   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2473900   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2473901   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2473902   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2473903   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2473904   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2473905   +end;
MPRINT(EM_DIAGRAM):   end;
2473906   +else do;
MPRINT(EM_DIAGRAM):   else do;
2473907   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2473908   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2473909   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2473910   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2473911   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2473912   +   end;
MPRINT(EM_DIAGRAM):   end;
2473913   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2473914   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2473915   +   end;
MPRINT(EM_DIAGRAM):   end;
2473916   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2473917   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2473918   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2473919   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2473920   +   end;
MPRINT(EM_DIAGRAM):   end;
2473921   +end;
MPRINT(EM_DIAGRAM):   end;
2473922   +
2473923   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2473924   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
2473925   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2473926   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2473927   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2473928   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2473929   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2473930   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2473931   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2473932   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2473933   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2473934   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2473935   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2473936   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2473937   +end;
MPRINT(EM_DIAGRAM):   end;
2473938   +else do;
MPRINT(EM_DIAGRAM):   else do;
2473939   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2473940   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2473941   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2473942   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2473943   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2473944   +   end;
MPRINT(EM_DIAGRAM):   end;
2473945   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2473946   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2473947   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2473948   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2473949   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2473950   +   end;
MPRINT(EM_DIAGRAM):   end;
2473951   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2473952   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2473953   +   end;
MPRINT(EM_DIAGRAM):   end;
2473954   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2473955   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2473956   +   end;
MPRINT(EM_DIAGRAM):   end;
2473957   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2473958   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2473959   +   end;
MPRINT(EM_DIAGRAM):   end;
2473960   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2473961   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2473962   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2473963   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2473964   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2473965   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2473966   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2473967   +   end;
MPRINT(EM_DIAGRAM):   end;
2473968   +end;
MPRINT(EM_DIAGRAM):   end;
2473969   +
2473970   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2473971   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2473972   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
2473973   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2473974   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2473975   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2473976   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2473977   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2473978   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2473979   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2473980   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2473981   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2473982   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2473983   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2473984   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2473985   +end;
MPRINT(EM_DIAGRAM):   end;
2473986   +else do;
MPRINT(EM_DIAGRAM):   else do;
2473987   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2473988   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2473989   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2473990   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2473991   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2473992   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2473993   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2473994   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2473995   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2473996   +         end;
MPRINT(EM_DIAGRAM):   end;
2473997   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2473998   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2473999   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2474000   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2474001   +            end;
MPRINT(EM_DIAGRAM):   end;
2474002   +         end;
MPRINT(EM_DIAGRAM):   end;
2474003   +      end;
MPRINT(EM_DIAGRAM):   end;
2474004   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2474005   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2474006   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2474007   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2474008   +         end;
MPRINT(EM_DIAGRAM):   end;
2474009   +      end;
MPRINT(EM_DIAGRAM):   end;
2474010   +   end;
MPRINT(EM_DIAGRAM):   end;
2474011   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2474012   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2474013   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2474014   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2474015   +      end;
MPRINT(EM_DIAGRAM):   end;
2474016   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2474017   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2474018   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2474019   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2474020   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2474021   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2474022   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2474023   +         end;
MPRINT(EM_DIAGRAM):   end;
2474024   +      end;
MPRINT(EM_DIAGRAM):   end;
2474025   +   end;
MPRINT(EM_DIAGRAM):   end;
2474026   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2474027   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2474028   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2474029   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2474030   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2474031   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2474032   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2474033   +   end;
MPRINT(EM_DIAGRAM):   end;
2474034   +end;
MPRINT(EM_DIAGRAM):   end;
2474035   +
2474036   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2474037   +*** Checking missing input Interval
2474038   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2474039   +
2474040   +IF NMISS(
2474041   +   AcceptedCmpTotal ,
2474042   +   Age ,
2474043   +   Frq ,
2474044   +   Income ,
2474045   +   Kidhome ,
2474046   +   Mnt ,
2474047   +   MntFishProducts ,
2474048   +   MntFruits ,
2474049   +   MntGoldProds ,
2474050   +   MntMeatProducts ,
2474051   +   MntSweetProducts ,
2474052   +   MntWines ,
2474053   +   MonthsAsCustomer ,
2474054   +   NumCatalogPurchases ,
2474055   +   NumDealsPurchases ,
2474056   +   NumDistPurchases ,
2474057   +   NumStorePurchases ,
2474058   +   NumWebPurchases ,
2474059   +   NumWebVisitsMonth ,
2474060   +   RFMstat ,
2474061   +   RMntFrq ,
2474062   +   Recency ,
2474063   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
2474064   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2474065   +
2474066   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2474067   +END;
MPRINT(EM_DIAGRAM):   END;
2474068   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2474069   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2474070   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2474071   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2474072   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2474073   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2474074   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2474075   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2474076   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2474077   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2474078   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2474079   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2474080   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2474081   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2474082   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2474083   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2474084   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2474085   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2474086   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2474087   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2474088   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2474089   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2474090   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 *
MonthsAsCustomer ;
2474091   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2474092   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2474093   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2474094   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2474095   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2474096   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2474097   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2474098   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2474099   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2474100   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2474101   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2474102   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2474103   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2474104   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2474105   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2474106   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2474107   +END;
MPRINT(EM_DIAGRAM):   END;
2474108   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2474109   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2474110   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2474111   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2474112   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2474113   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2474114   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2474115   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2474116   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2474117   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2474118   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2474119   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2474120   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2474121   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2474122   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2474123   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2474124   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2474125   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2474126   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2474127   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2474128   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2474129   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2474130   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
2474131   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2474132   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2474133   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2474134   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2474135   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2474136   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2474137   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2474138   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2474139   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2474140   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2474141   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 *
MonthsAsCustomer ;
2474142   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2474143   +   ELSE S_NumCatalogPurchases
2474144   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2474145   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2474146   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2474147   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2474148   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2474149   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2474150   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2474151   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2474152   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2474153   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2474154   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2474155   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2474156   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2474157   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2474158   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2474159   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2474160   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2474161   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2474162   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2474163   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2474164   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2474165   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2474166   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2474167   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2474168   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2474169   +END;
MPRINT(EM_DIAGRAM):   END;
2474170   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2474171   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2474172   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2474173   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2474174   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2474175   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2474176   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2474177   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2474178   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2474179   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2474180   +   H1x1_1  =     -2.0588471958351 * S_AcceptedCmpTotal
2474181   +          +     0.38628980389456 * S_Age  +     -0.8545617733777 * S_Frq
2474182   +          +    -1.37557200210661 * S_Income  +     1.58583945545125 *
2474183   +        S_Kidhome  +    -1.49250871593186 * S_Mnt  +    -2.02986091068301 *
2474184   +        S_MntFishProducts  +     0.28845511703412 * S_MntFruits
2474185   +          +    -0.62495372005095 * S_MntGoldProds  +     3.22144698444712 *
2474186   +        S_MntMeatProducts  +    -2.67158036653801 * S_MntSweetProducts
2474187   +          +    -4.30837863985493 * S_MntWines  +     0.39603200162704 *
2474188   +        S_MonthsAsCustomer  +      1.8259166147951 * S_NumCatalogPurchases
2474189   +          +      3.4758215776031 * S_NumDealsPurchases
2474190   +          +     0.17094021755289 * S_NumDistPurchases
2474191   +          +    -2.72090095694641 * S_NumStorePurchases
2474192   +          +    -0.31877935826328 * S_NumWebPurchases
2474193   +          +    -2.03399974412918 * S_NumWebVisitsMonth
2474194   +          +     2.74309130038659 * S_RFMstat  +    -0.74941844935268 *
2474195   +        S_RMntFrq  +     0.29064555076615 * S_Recency
2474196   +          +    -0.57040700827247 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -2.0588471958351 * S_AcceptedCmpTotal + 0.38628980389456 *
S_Age + -0.8545617733777 * S_Frq + -1.37557200210661 * S_Income + 1.58583945545125 * S_Kidhome
+ -1.49250871593186 * S_Mnt + -2.02986091068301 * S_MntFishProducts + 0.28845511703412 *
S_MntFruits + -0.62495372005095 * S_MntGoldProds + 3.22144698444712 * S_MntMeatProducts +
-2.67158036653801 * S_MntSweetProducts + -4.30837863985493 * S_MntWines + 0.39603200162704 *
S_MonthsAsCustomer + 1.8259166147951 * S_NumCatalogPurchases + 3.4758215776031 *
S_NumDealsPurchases + 0.17094021755289 * S_NumDistPurchases + -2.72090095694641 *
S_NumStorePurchases + -0.31877935826328 * S_NumWebPurchases + -2.03399974412918 *
S_NumWebVisitsMonth + 2.74309130038659 * S_RFMstat + -0.74941844935268 * S_RMntFrq +
0.29064555076615 * S_Recency + -0.57040700827247 * S_Teenhome ;
2474197   +   H1x1_2  =     -0.5995699177824 * S_AcceptedCmpTotal
2474198   +          +    -1.17769485933608 * S_Age  +     0.95998296288295 * S_Frq
2474199   +          +     -2.2343179478513 * S_Income  +     3.17436638275163 *
2474200   +        S_Kidhome  +     0.46987648124346 * S_Mnt  +     0.07213935656698 *
2474201   +        S_MntFishProducts  +    -1.38055808108069 * S_MntFruits
2474202   +          +     0.62140960451545 * S_MntGoldProds  +     -1.9000500396873 *
2474203   +        S_MntMeatProducts  +    -0.35707372583597 * S_MntSweetProducts
2474204   +          +     1.99720917743483 * S_MntWines  +     0.89245096364062 *
2474205   +        S_MonthsAsCustomer  +    -0.61497875715928 * S_NumCatalogPurchases
2474206   +          +    -1.21013804197082 * S_NumDealsPurchases
2474207   +          +     0.59974279122188 * S_NumDistPurchases
2474208   +          +     1.92425710681156 * S_NumStorePurchases
2474209   +          +     1.02413182452324 * S_NumWebPurchases
2474210   +          +    -3.63276285340174 * S_NumWebVisitsMonth
2474211   +          +     0.33919100670479 * S_RFMstat  +     0.84767315208026 *
2474212   +        S_RMntFrq  +     3.87352563099005 * S_Recency
2474213   +          +     2.74174964084917 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.5995699177824 * S_AcceptedCmpTotal + -1.17769485933608 *
S_Age + 0.95998296288295 * S_Frq + -2.2343179478513 * S_Income + 3.17436638275163 * S_Kidhome
+ 0.46987648124346 * S_Mnt + 0.07213935656698 * S_MntFishProducts + -1.38055808108069 *
S_MntFruits + 0.62140960451545 * S_MntGoldProds + -1.9000500396873 * S_MntMeatProducts +
-0.35707372583597 * S_MntSweetProducts + 1.99720917743483 * S_MntWines + 0.89245096364062 *
S_MonthsAsCustomer + -0.61497875715928 * S_NumCatalogPurchases + -1.21013804197082 *
S_NumDealsPurchases + 0.59974279122188 * S_NumDistPurchases + 1.92425710681156 *
S_NumStorePurchases + 1.02413182452324 * S_NumWebPurchases + -3.63276285340174 *
S_NumWebVisitsMonth + 0.33919100670479 * S_RFMstat + 0.84767315208026 * S_RMntFrq +
3.87352563099005 * S_Recency + 2.74174964084917 * S_Teenhome ;
2474214   +   H1x1_3  =    -2.27029708882419 * S_AcceptedCmpTotal
2474215   +          +     0.57558817521081 * S_Age  +     0.03666022895146 * S_Frq
2474216   +          +    -0.43764949843184 * S_Income  +     0.05202039236868 *
2474217   +        S_Kidhome  +    -0.17515517773197 * S_Mnt  +      2.1454579331563 *
2474218   +        S_MntFishProducts  +     -0.0544472234117 * S_MntFruits
2474219   +          +    -0.24751372889101 * S_MntGoldProds  +    -7.95986512066472 *
2474220   +        S_MntMeatProducts  +    -0.42258869313323 * S_MntSweetProducts
2474221   +          +      4.6542173574208 * S_MntWines  +     0.27973663838423 *
2474222   +        S_MonthsAsCustomer  +    -0.92923468464154 * S_NumCatalogPurchases
2474223   +          +      0.4928343071801 * S_NumDealsPurchases
2474224   +          +     -0.0196677325409 * S_NumDistPurchases
2474225   +          +     0.44395828164873 * S_NumStorePurchases
2474226   +          +     0.86947051591224 * S_NumWebPurchases
2474227   +          +    -0.96787241206077 * S_NumWebVisitsMonth
2474228   +          +     -0.9429396337834 * S_RFMstat  +    -1.69298966254302 *
2474229   +        S_RMntFrq  +     0.24582117217188 * S_Recency
2474230   +          +    -1.08471509540368 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -2.27029708882419 * S_AcceptedCmpTotal + 0.57558817521081 *
S_Age + 0.03666022895146 * S_Frq + -0.43764949843184 * S_Income + 0.05202039236868 * S_Kidhome
+ -0.17515517773197 * S_Mnt + 2.1454579331563 * S_MntFishProducts + -0.0544472234117 *
S_MntFruits + -0.24751372889101 * S_MntGoldProds + -7.95986512066472 * S_MntMeatProducts +
-0.42258869313323 * S_MntSweetProducts + 4.6542173574208 * S_MntWines + 0.27973663838423 *
S_MonthsAsCustomer + -0.92923468464154 * S_NumCatalogPurchases + 0.4928343071801 *
S_NumDealsPurchases + -0.0196677325409 * S_NumDistPurchases + 0.44395828164873 *
S_NumStorePurchases + 0.86947051591224 * S_NumWebPurchases + -0.96787241206077 *
S_NumWebVisitsMonth + -0.9429396337834 * S_RFMstat + -1.69298966254302 * S_RMntFrq +
0.24582117217188 * S_Recency + -1.08471509540368 * S_Teenhome ;
2474231   +   H1x1_4  =     0.54181596412096 * S_AcceptedCmpTotal
2474232   +          +    -1.19331526818752 * S_Age  +     0.79853759822324 * S_Frq
2474233   +          +     0.73370928178794 * S_Income  +     0.38661834479377 *
2474234   +        S_Kidhome  +      0.3442876988888 * S_Mnt  +    -0.58769739655035 *
2474235   +        S_MntFishProducts  +     -0.8703586573687 * S_MntFruits
2474236   +          +    -0.06073044217122 * S_MntGoldProds  +     1.06031608775663 *
2474237   +        S_MntMeatProducts  +      0.1600438561366 * S_MntSweetProducts
2474238   +          +    -0.10937637342015 * S_MntWines  +     0.44423445817796 *
2474239   +        S_MonthsAsCustomer  +     2.20653376632749 * S_NumCatalogPurchases
2474240   +          +     1.10280977051932 * S_NumDealsPurchases
2474241   +          +     0.99310057404036 * S_NumDistPurchases
2474242   +          +    -0.05647459609331 * S_NumStorePurchases
2474243   +          +    -0.89852483938631 * S_NumWebPurchases
2474244   +          +     2.63022480227445 * S_NumWebVisitsMonth
2474245   +          +      0.0081819695781 * S_RFMstat  +     1.19338523211724 *
2474246   +        S_RMntFrq  +    -4.46436997560659 * S_Recency
2474247   +          +    -2.03251171372039 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.54181596412096 * S_AcceptedCmpTotal + -1.19331526818752 *
S_Age + 0.79853759822324 * S_Frq + 0.73370928178794 * S_Income + 0.38661834479377 * S_Kidhome
+ 0.3442876988888 * S_Mnt + -0.58769739655035 * S_MntFishProducts + -0.8703586573687 *
S_MntFruits + -0.06073044217122 * S_MntGoldProds + 1.06031608775663 * S_MntMeatProducts +
0.1600438561366 * S_MntSweetProducts + -0.10937637342015 * S_MntWines + 0.44423445817796 *
S_MonthsAsCustomer + 2.20653376632749 * S_NumCatalogPurchases + 1.10280977051932 *
S_NumDealsPurchases + 0.99310057404036 * S_NumDistPurchases + -0.05647459609331 *
S_NumStorePurchases + -0.89852483938631 * S_NumWebPurchases + 2.63022480227445 *
S_NumWebVisitsMonth + 0.0081819695781 * S_RFMstat + 1.19338523211724 * S_RMntFrq +
-4.46436997560659 * S_Recency + -2.03251171372039 * S_Teenhome ;
2474248   +   H1x1_5  =    -1.03227948250072 * S_AcceptedCmpTotal
2474249   +          +     0.25510562405413 * S_Age  +     0.11938172756061 * S_Frq
2474250   +          +    -0.88855927472898 * S_Income  +    -0.98732962014399 *
2474251   +        S_Kidhome  +     0.57537935682752 * S_Mnt  +     0.07702692666996 *
2474252   +        S_MntFishProducts  +     0.69541223905843 * S_MntFruits
2474253   +          +    -0.26720187465927 * S_MntGoldProds  +    -0.03938241662919 *
2474254   +        S_MntMeatProducts  +     1.08781093588885 * S_MntSweetProducts
2474255   +          +     1.16253823123182 * S_MntWines  +    -1.60607722651025 *
2474256   +        S_MonthsAsCustomer  +    -1.69043794225498 * S_NumCatalogPurchases
2474257   +          +    -2.62220616180571 * S_NumDealsPurchases
2474258   +          +    -0.51737930835331 * S_NumDistPurchases
2474259   +          +     0.88655783158133 * S_NumStorePurchases
2474260   +          +     0.35132468809969 * S_NumWebPurchases
2474261   +          +     -1.6320869675862 * S_NumWebVisitsMonth
2474262   +          +     0.33776958473405 * S_RFMstat  +    -0.42290181425075 *
2474263   +        S_RMntFrq  +     1.06226028677401 * S_Recency
2474264   +          +     1.11855899514962 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.03227948250072 * S_AcceptedCmpTotal + 0.25510562405413 *
S_Age + 0.11938172756061 * S_Frq + -0.88855927472898 * S_Income + -0.98732962014399 *
S_Kidhome + 0.57537935682752 * S_Mnt + 0.07702692666996 * S_MntFishProducts + 0.69541223905843
* S_MntFruits + -0.26720187465927 * S_MntGoldProds + -0.03938241662919 * S_MntMeatProducts +
1.08781093588885 * S_MntSweetProducts + 1.16253823123182 * S_MntWines + -1.60607722651025 *
S_MonthsAsCustomer + -1.69043794225498 * S_NumCatalogPurchases + -2.62220616180571 *
S_NumDealsPurchases + -0.51737930835331 * S_NumDistPurchases + 0.88655783158133 *
S_NumStorePurchases + 0.35132468809969 * S_NumWebPurchases + -1.6320869675862 *
S_NumWebVisitsMonth + 0.33776958473405 * S_RFMstat + -0.42290181425075 * S_RMntFrq +
1.06226028677401 * S_Recency + 1.11855899514962 * S_Teenhome ;
2474265   +   H1x1_1  = H1x1_1  +     0.53637737817097 * AcceptedCmp10
2474266   +          +    -1.85405146733588 * AcceptedCmp20  +    -1.47621046566649 *
2474267   +        AcceptedCmp30  +    -1.37767318086242 * AcceptedCmp40
2474268   +          +    -0.96348396070145 * AcceptedCmp50  +    -1.30976546088379 *
2474269   +        Complain0  +    -0.54848314184314 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.53637737817097 * AcceptedCmp10 + -1.85405146733588 *
AcceptedCmp20 + -1.47621046566649 * AcceptedCmp30 + -1.37767318086242 * AcceptedCmp40 +
-0.96348396070145 * AcceptedCmp50 + -1.30976546088379 * Complain0 + -0.54848314184314 *
HigherEducationBinary0 ;
2474270   +   H1x1_2  = H1x1_2  +     0.18445380584184 * AcceptedCmp10
2474271   +          +    -0.69257274561716 * AcceptedCmp20  +     0.17226038285159 *
2474272   +        AcceptedCmp30  +    -1.06145995435722 * AcceptedCmp40
2474273   +          +     1.23459262841144 * AcceptedCmp50  +    -0.14674063302587 *
2474274   +        Complain0  +    -1.08422405648698 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.18445380584184 * AcceptedCmp10 + -0.69257274561716 *
AcceptedCmp20 + 0.17226038285159 * AcceptedCmp30 + -1.06145995435722 * AcceptedCmp40 +
1.23459262841144 * AcceptedCmp50 + -0.14674063302587 * Complain0 + -1.08422405648698 *
HigherEducationBinary0 ;
2474275   +   H1x1_3  = H1x1_3  +     0.81272808689375 * AcceptedCmp10
2474276   +          +    -0.37057950605918 * AcceptedCmp20  +    -1.75364708883985 *
2474277   +        AcceptedCmp30  +     -1.9879502333289 * AcceptedCmp40
2474278   +          +     2.82649108460951 * AcceptedCmp50  +    -0.14219031901768 *
2474279   +        Complain0  +     -0.5514346363694 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.81272808689375 * AcceptedCmp10 + -0.37057950605918 *
AcceptedCmp20 + -1.75364708883985 * AcceptedCmp30 + -1.9879502333289 * AcceptedCmp40 +
2.82649108460951 * AcceptedCmp50 + -0.14219031901768 * Complain0 + -0.5514346363694 *
HigherEducationBinary0 ;
2474280   +   H1x1_4  = H1x1_4  +    -1.12354567881562 * AcceptedCmp10
2474281   +          +    -1.64564861831306 * AcceptedCmp20  +    -1.84950171464501 *
2474282   +        AcceptedCmp30  +    -2.60581164673686 * AcceptedCmp40
2474283   +          +    -0.53568003317161 * AcceptedCmp50  +    -0.13929928866767 *
2474284   +        Complain0  +     1.18053116626218 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -1.12354567881562 * AcceptedCmp10 + -1.64564861831306
* AcceptedCmp20 + -1.84950171464501 * AcceptedCmp30 + -2.60581164673686 * AcceptedCmp40 +
-0.53568003317161 * AcceptedCmp50 + -0.13929928866767 * Complain0 + 1.18053116626218 *
HigherEducationBinary0 ;
2474285   +   H1x1_5  = H1x1_5  +     -0.3006993305802 * AcceptedCmp10
2474286   +          +    -0.67101949915278 * AcceptedCmp20  +     0.48950637221178 *
2474287   +        AcceptedCmp30  +     0.25937105093078 * AcceptedCmp40
2474288   +          +       0.650714225549 * AcceptedCmp50  +    -0.53543482850089 *
2474289   +        Complain0  +     0.62014708316206 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.3006993305802 * AcceptedCmp10 + -0.67101949915278 *
AcceptedCmp20 + 0.48950637221178 * AcceptedCmp30 + 0.25937105093078 * AcceptedCmp40 +
0.650714225549 * AcceptedCmp50 + -0.53543482850089 * Complain0 + 0.62014708316206 *
HigherEducationBinary0 ;
2474290   +   H1x1_1  = H1x1_1  +     0.78710932360637 * Education2n_Cycle
2474291   +          +    -0.34656604802235 * EducationBasic  +     0.11820082193221 *
2474292   +        EducationGraduation  +     1.42539292513854 * EducationMaster
2474293   +          +     0.34809919741136 * Marital_StatusDivorced
2474294   +          +    -0.26594093535929 * Marital_StatusMarried
2474295   +          +     0.70249715999987 * Marital_StatusSingle
2474296   +          +    -0.45710525283449 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.78710932360637 * Education2n_Cycle +
-0.34656604802235 * EducationBasic + 0.11820082193221 * EducationGraduation + 1.42539292513854
* EducationMaster + 0.34809919741136 * Marital_StatusDivorced + -0.26594093535929 *
Marital_StatusMarried + 0.70249715999987 * Marital_StatusSingle + -0.45710525283449 *
Marital_StatusTogether ;
2474297   +   H1x1_2  = H1x1_2  +    -1.00496261512915 * Education2n_Cycle
2474298   +          +     0.66783492956492 * EducationBasic  +     0.91185122922538 *
2474299   +        EducationGraduation  +    -0.28204692640004 * EducationMaster
2474300   +          +    -0.20448765627193 * Marital_StatusDivorced
2474301   +          +     1.73231344674733 * Marital_StatusMarried
2474302   +          +    -0.70956480480373 * Marital_StatusSingle
2474303   +          +      1.0926428215879 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -1.00496261512915 * Education2n_Cycle +
0.66783492956492 * EducationBasic + 0.91185122922538 * EducationGraduation + -0.28204692640004
* EducationMaster + -0.20448765627193 * Marital_StatusDivorced + 1.73231344674733 *
Marital_StatusMarried + -0.70956480480373 * Marital_StatusSingle + 1.0926428215879 *
Marital_StatusTogether ;
2474304   +   H1x1_3  = H1x1_3  +    -0.06222681334412 * Education2n_Cycle
2474305   +          +    -0.00009122618999 * EducationBasic  +    -0.07444046529217 *
2474306   +        EducationGraduation  +     1.01284161768787 * EducationMaster
2474307   +          +     0.30333818684353 * Marital_StatusDivorced
2474308   +          +    -1.44603535988199 * Marital_StatusMarried
2474309   +          +     0.48409598426383 * Marital_StatusSingle
2474310   +          +    -1.14528682521622 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.06222681334412 * Education2n_Cycle +
-0.00009122618999 * EducationBasic + -0.07444046529217 * EducationGraduation +
1.01284161768787 * EducationMaster + 0.30333818684353 * Marital_StatusDivorced +
-1.44603535988199 * Marital_StatusMarried + 0.48409598426383 * Marital_StatusSingle +
-1.14528682521622 * Marital_StatusTogether ;
2474311   +   H1x1_4  = H1x1_4  +    -0.92316818310935 * Education2n_Cycle
2474312   +          +     0.93590924020503 * EducationBasic  +     0.36762108040277 *
2474313   +        EducationGraduation  +    -1.17735200022013 * EducationMaster
2474314   +          +     -1.5342907846297 * Marital_StatusDivorced
2474315   +          +    -1.79544684592172 * Marital_StatusMarried
2474316   +          +     0.65604313645117 * Marital_StatusSingle
2474317   +          +    -2.08172869142628 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.92316818310935 * Education2n_Cycle +
0.93590924020503 * EducationBasic + 0.36762108040277 * EducationGraduation + -1.17735200022013
* EducationMaster + -1.5342907846297 * Marital_StatusDivorced + -1.79544684592172 *
Marital_StatusMarried + 0.65604313645117 * Marital_StatusSingle + -2.08172869142628 *
Marital_StatusTogether ;
2474318   +   H1x1_5  = H1x1_5  +    -0.56328800945753 * Education2n_Cycle
2474319   +          +    -0.06918346311418 * EducationBasic  +     -1.5176897786776 *
2474320   +        EducationGraduation  +     0.09618331198762 * EducationMaster
2474321   +          +    -3.97940893560267 * Marital_StatusDivorced
2474322   +          +      3.5880254142663 * Marital_StatusMarried
2474323   +          +     -2.9897737730927 * Marital_StatusSingle
2474324   +          +     3.75098376776525 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.56328800945753 * Education2n_Cycle +
-0.06918346311418 * EducationBasic + -1.5176897786776 * EducationGraduation + 0.09618331198762
* EducationMaster + -3.97940893560267 * Marital_StatusDivorced + 3.5880254142663 *
Marital_StatusMarried + -2.9897737730927 * Marital_StatusSingle + 3.75098376776525 *
Marital_StatusTogether ;
2474325   +   H1x1_1  =    -2.89135496095875 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -2.89135496095875 + H1x1_1 ;
2474326   +   H1x1_2  =     0.39943637099295 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.39943637099295 + H1x1_2 ;
2474327   +   H1x1_3  =    -1.08093114818147 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -1.08093114818147 + H1x1_3 ;
2474328   +   H1x1_4  =    -3.29426643182948 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -3.29426643182948 + H1x1_4 ;
2474329   +   H1x1_5  =    -1.76822552726746 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.76822552726746 + H1x1_5 ;
2474330   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2474331   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2474332   +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
2474333   +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
2474334   +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
2474335   +   H1x1_4  = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
2474336   +   H1x1_5  = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_5 = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
2474337   +END;
MPRINT(EM_DIAGRAM):   END;
2474338   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2474339   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2474340   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2474341   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2474342   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2474343   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
2474344   +END;
MPRINT(EM_DIAGRAM):   END;
2474345   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2474346   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
2474347   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2474348   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2474349   +   H1x2_1  =     1.01981866144831 * S_AcceptedCmpTotal
2474350   +          +    -1.47346125364319 * S_Age  +    -0.08669650492194 * S_Frq
2474351   +          +    -0.51585471637562 * S_Income  +     1.40711190452923 *
2474352   +        S_Kidhome  +    -0.21341957199148 * S_Mnt  +    -0.31211158173505 *
2474353   +        S_MntFishProducts  +    -0.77126486046129 * S_MntFruits
2474354   +          +     -0.4503905849175 * S_MntGoldProds  +     1.01090165857015 *
2474355   +        S_MntMeatProducts  +    -0.05554268249583 * S_MntSweetProducts
2474356   +          +     2.72203992871966 * S_MntWines  +    -0.46212144021719 *
2474357   +        S_MonthsAsCustomer  +    -0.10495120677935 * S_NumCatalogPurchases
2474358   +          +     0.07279889333775 * S_NumDealsPurchases
2474359   +          +     0.07542203992452 * S_NumDistPurchases
2474360   +          +     0.16296239303342 * S_NumStorePurchases
2474361   +          +     1.59193921229231 * S_NumWebPurchases
2474362   +          +    -0.35227839362603 * S_NumWebVisitsMonth
2474363   +          +      1.3224105019117 * S_RFMstat  +    -0.77035988511057 *
2474364   +        S_RMntFrq  +     0.43315770276588 * S_Recency
2474365   +          +     0.43447147039235 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.01981866144831 * S_AcceptedCmpTotal + -1.47346125364319 *
S_Age + -0.08669650492194 * S_Frq + -0.51585471637562 * S_Income + 1.40711190452923 *
S_Kidhome + -0.21341957199148 * S_Mnt + -0.31211158173505 * S_MntFishProducts +
-0.77126486046129 * S_MntFruits + -0.4503905849175 * S_MntGoldProds + 1.01090165857015 *
S_MntMeatProducts + -0.05554268249583 * S_MntSweetProducts + 2.72203992871966 * S_MntWines +
-0.46212144021719 * S_MonthsAsCustomer + -0.10495120677935 * S_NumCatalogPurchases +
0.07279889333775 * S_NumDealsPurchases + 0.07542203992452 * S_NumDistPurchases +
0.16296239303342 * S_NumStorePurchases + 1.59193921229231 * S_NumWebPurchases +
-0.35227839362603 * S_NumWebVisitsMonth + 1.3224105019117 * S_RFMstat + -0.77035988511057 *
S_RMntFrq + 0.43315770276588 * S_Recency + 0.43447147039235 * S_Teenhome ;
2474366   +   H1x2_2  =    -0.07629675162821 * S_AcceptedCmpTotal
2474367   +          +     0.81684969971216 * S_Age  +     0.52870818801428 * S_Frq
2474368   +          +     0.15358022485378 * S_Income  +    -0.64458879887927 *
2474369   +        S_Kidhome  +    -2.12225648421746 * S_Mnt  +     1.05240671673302 *
2474370   +        S_MntFishProducts  +    -0.89595336397918 * S_MntFruits
2474371   +          +    -0.28950558043577 * S_MntGoldProds  +     0.30996043499478 *
2474372   +        S_MntMeatProducts  +     1.27676485470274 * S_MntSweetProducts
2474373   +          +    -1.30045112439384 * S_MntWines  +     1.36110971826862 *
2474374   +        S_MonthsAsCustomer  +     -0.1778244163518 * S_NumCatalogPurchases
2474375   +          +    -0.37456959251084 * S_NumDealsPurchases
2474376   +          +    -1.15252469975668 * S_NumDistPurchases
2474377   +          +    -1.39822501888899 * S_NumStorePurchases
2474378   +          +    -0.32777847360723 * S_NumWebPurchases
2474379   +          +     0.84026499832926 * S_NumWebVisitsMonth
2474380   +          +    -1.47180193258497 * S_RFMstat  +     0.18801983980439 *
2474381   +        S_RMntFrq  +     1.21016626691186 * S_Recency
2474382   +          +    -0.82943594788748 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.07629675162821 * S_AcceptedCmpTotal + 0.81684969971216 *
S_Age + 0.52870818801428 * S_Frq + 0.15358022485378 * S_Income + -0.64458879887927 * S_Kidhome
+ -2.12225648421746 * S_Mnt + 1.05240671673302 * S_MntFishProducts + -0.89595336397918 *
S_MntFruits + -0.28950558043577 * S_MntGoldProds + 0.30996043499478 * S_MntMeatProducts +
1.27676485470274 * S_MntSweetProducts + -1.30045112439384 * S_MntWines + 1.36110971826862 *
S_MonthsAsCustomer + -0.1778244163518 * S_NumCatalogPurchases + -0.37456959251084 *
S_NumDealsPurchases + -1.15252469975668 * S_NumDistPurchases + -1.39822501888899 *
S_NumStorePurchases + -0.32777847360723 * S_NumWebPurchases + 0.84026499832926 *
S_NumWebVisitsMonth + -1.47180193258497 * S_RFMstat + 0.18801983980439 * S_RMntFrq +
1.21016626691186 * S_Recency + -0.82943594788748 * S_Teenhome ;
2474383   +   H1x2_3  =    -0.06736000283511 * S_AcceptedCmpTotal
2474384   +          +    -0.47270148030219 * S_Age  +      1.1959707178877 * S_Frq
2474385   +          +    -1.40081626653738 * S_Income  +     0.35085595025526 *
2474386   +        S_Kidhome  +    -0.43652344252181 * S_Mnt  +     1.12197802721591 *
2474387   +        S_MntFishProducts  +     1.27079634537799 * S_MntFruits
2474388   +          +    -0.03023683680758 * S_MntGoldProds  +     0.51289568088141 *
2474389   +        S_MntMeatProducts  +     1.12894900622408 * S_MntSweetProducts
2474390   +          +    -0.66940205871871 * S_MntWines  +    -1.57211003055303 *
2474391   +        S_MonthsAsCustomer  +     1.47778465205569 * S_NumCatalogPurchases
2474392   +          +     1.14090099538367 * S_NumDealsPurchases
2474393   +          +     -0.2600155774492 * S_NumDistPurchases
2474394   +          +     1.31362002392113 * S_NumStorePurchases
2474395   +          +     1.31465307763555 * S_NumWebPurchases
2474396   +          +    -0.18041623858351 * S_NumWebVisitsMonth
2474397   +          +    -0.12685084546738 * S_RFMstat  +     0.43500462904027 *
2474398   +        S_RMntFrq  +    -0.81910738140729 * S_Recency
2474399   +          +    -0.61936793661609 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.06736000283511 * S_AcceptedCmpTotal + -0.47270148030219 *
S_Age + 1.1959707178877 * S_Frq + -1.40081626653738 * S_Income + 0.35085595025526 * S_Kidhome
+ -0.43652344252181 * S_Mnt + 1.12197802721591 * S_MntFishProducts + 1.27079634537799 *
S_MntFruits + -0.03023683680758 * S_MntGoldProds + 0.51289568088141 * S_MntMeatProducts +
1.12894900622408 * S_MntSweetProducts + -0.66940205871871 * S_MntWines + -1.57211003055303 *
S_MonthsAsCustomer + 1.47778465205569 * S_NumCatalogPurchases + 1.14090099538367 *
S_NumDealsPurchases + -0.2600155774492 * S_NumDistPurchases + 1.31362002392113 *
S_NumStorePurchases + 1.31465307763555 * S_NumWebPurchases + -0.18041623858351 *
S_NumWebVisitsMonth + -0.12685084546738 * S_RFMstat + 0.43500462904027 * S_RMntFrq +
-0.81910738140729 * S_Recency + -0.61936793661609 * S_Teenhome ;
2474400   +   H1x2_4  =    -0.31415783692162 * S_AcceptedCmpTotal
2474401   +          +     0.11061423227332 * S_Age  +    -0.65722939551233 * S_Frq
2474402   +          +     -0.9063192568986 * S_Income  +      0.4013752851291 *
2474403   +        S_Kidhome  +    -1.06795963585271 * S_Mnt  +     0.24969441019479 *
2474404   +        S_MntFishProducts  +    -0.63550038240549 * S_MntFruits
2474405   +          +     1.04454010114015 * S_MntGoldProds  +     0.89912571026653 *
2474406   +        S_MntMeatProducts  +    -1.92356868621234 * S_MntSweetProducts
2474407   +          +     -1.8642245725538 * S_MntWines  +     0.13416556054779 *
2474408   +        S_MonthsAsCustomer  +    -1.01272407075887 * S_NumCatalogPurchases
2474409   +          +     1.06486073796679 * S_NumDealsPurchases
2474410   +          +    -0.04890191247577 * S_NumDistPurchases
2474411   +          +     0.86871320720698 * S_NumStorePurchases
2474412   +          +     0.03183587281884 * S_NumWebPurchases
2474413   +          +     -0.4863802923315 * S_NumWebVisitsMonth
2474414   +          +    -1.38034657666878 * S_RFMstat  +    -0.73640242597195 *
2474415   +        S_RMntFrq  +     0.17186861211542 * S_Recency
2474416   +          +    -0.39595339111048 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.31415783692162 * S_AcceptedCmpTotal + 0.11061423227332 *
S_Age + -0.65722939551233 * S_Frq + -0.9063192568986 * S_Income + 0.4013752851291 * S_Kidhome
+ -1.06795963585271 * S_Mnt + 0.24969441019479 * S_MntFishProducts + -0.63550038240549 *
S_MntFruits + 1.04454010114015 * S_MntGoldProds + 0.89912571026653 * S_MntMeatProducts +
-1.92356868621234 * S_MntSweetProducts + -1.8642245725538 * S_MntWines + 0.13416556054779 *
S_MonthsAsCustomer + -1.01272407075887 * S_NumCatalogPurchases + 1.06486073796679 *
S_NumDealsPurchases + -0.04890191247577 * S_NumDistPurchases + 0.86871320720698 *
S_NumStorePurchases + 0.03183587281884 * S_NumWebPurchases + -0.4863802923315 *
S_NumWebVisitsMonth + -1.38034657666878 * S_RFMstat + -0.73640242597195 * S_RMntFrq +
0.17186861211542 * S_Recency + -0.39595339111048 * S_Teenhome ;
2474417   +   H1x2_5  =     1.68315669988315 * S_AcceptedCmpTotal
2474418   +          +    -1.67467335764173 * S_Age  +     1.29921539173109 * S_Frq
2474419   +          +    -0.52305600367899 * S_Income  +     1.06261291858944 *
2474420   +        S_Kidhome  +     1.77049882170904 * S_Mnt  +    -0.27692609509601 *
2474421   +        S_MntFishProducts  +    -1.23166107817727 * S_MntFruits
2474422   +          +    -2.21476398466362 * S_MntGoldProds  +     1.02542528622621 *
2474423   +        S_MntMeatProducts  +     1.04913114036094 * S_MntSweetProducts
2474424   +          +     0.30606520702636 * S_MntWines  +    -1.15158074964406 *
2474425   +        S_MonthsAsCustomer  +     0.77918810586275 * S_NumCatalogPurchases
2474426   +          +    -0.01160267590349 * S_NumDealsPurchases
2474427   +          +    -0.92773075463083 * S_NumDistPurchases
2474428   +          +    -0.83326680533995 * S_NumStorePurchases
2474429   +          +    -1.16991058954473 * S_NumWebPurchases
2474430   +          +    -2.07771165573723 * S_NumWebVisitsMonth
2474431   +          +     0.59832456826177 * S_RFMstat  +     0.08151078945291 *
2474432   +        S_RMntFrq  +     0.80165981122986 * S_Recency
2474433   +          +     1.41798811088435 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.68315669988315 * S_AcceptedCmpTotal + -1.67467335764173 *
S_Age + 1.29921539173109 * S_Frq + -0.52305600367899 * S_Income + 1.06261291858944 * S_Kidhome
+ 1.77049882170904 * S_Mnt + -0.27692609509601 * S_MntFishProducts + -1.23166107817727 *
S_MntFruits + -2.21476398466362 * S_MntGoldProds + 1.02542528622621 * S_MntMeatProducts +
1.04913114036094 * S_MntSweetProducts + 0.30606520702636 * S_MntWines + -1.15158074964406 *
S_MonthsAsCustomer + 0.77918810586275 * S_NumCatalogPurchases + -0.01160267590349 *
S_NumDealsPurchases + -0.92773075463083 * S_NumDistPurchases + -0.83326680533995 *
S_NumStorePurchases + -1.16991058954473 * S_NumWebPurchases + -2.07771165573723 *
S_NumWebVisitsMonth + 0.59832456826177 * S_RFMstat + 0.08151078945291 * S_RMntFrq +
0.80165981122986 * S_Recency + 1.41798811088435 * S_Teenhome ;
2474434   +   H1x2_1  = H1x2_1  +    -0.16600737981926 * AcceptedCmp10
2474435   +          +     1.41264623988567 * AcceptedCmp20  +      1.0446306999234 *
2474436   +        AcceptedCmp30  +    -1.00688604631169 * AcceptedCmp40
2474437   +          +     0.64523782235527 * AcceptedCmp50  +    -1.76623980391232 *
2474438   +        Complain0  +     1.64644530449125 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.16600737981926 * AcceptedCmp10 + 1.41264623988567 *
AcceptedCmp20 + 1.0446306999234 * AcceptedCmp30 + -1.00688604631169 * AcceptedCmp40 +
0.64523782235527 * AcceptedCmp50 + -1.76623980391232 * Complain0 + 1.64644530449125 *
HigherEducationBinary0 ;
2474439   +   H1x2_2  = H1x2_2  +    -0.39493094663506 * AcceptedCmp10
2474440   +          +    -0.99095404154277 * AcceptedCmp20  +    -0.81166937096774 *
2474441   +        AcceptedCmp30  +     0.14520361414777 * AcceptedCmp40
2474442   +          +    -1.54302055254785 * AcceptedCmp50  +    -0.60600550413714 *
2474443   +        Complain0  +    -3.04730224174859 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.39493094663506 * AcceptedCmp10 + -0.99095404154277
* AcceptedCmp20 + -0.81166937096774 * AcceptedCmp30 + 0.14520361414777 * AcceptedCmp40 +
-1.54302055254785 * AcceptedCmp50 + -0.60600550413714 * Complain0 + -3.04730224174859 *
HigherEducationBinary0 ;
2474444   +   H1x2_3  = H1x2_3  +      1.8650016934441 * AcceptedCmp10
2474445   +          +     0.85335394099291 * AcceptedCmp20  +     0.47327521312159 *
2474446   +        AcceptedCmp30  +    -2.64862753506152 * AcceptedCmp40
2474447   +          +     0.65827168680229 * AcceptedCmp50  +     0.45516433167059 *
2474448   +        Complain0  +    -0.62891111222764 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 1.8650016934441 * AcceptedCmp10 + 0.85335394099291 *
AcceptedCmp20 + 0.47327521312159 * AcceptedCmp30 + -2.64862753506152 * AcceptedCmp40 +
0.65827168680229 * AcceptedCmp50 + 0.45516433167059 * Complain0 + -0.62891111222764 *
HigherEducationBinary0 ;
2474449   +   H1x2_4  = H1x2_4  +    -0.31781332022679 * AcceptedCmp10
2474450   +          +    -0.35773084257089 * AcceptedCmp20  +      0.0486072265688 *
2474451   +        AcceptedCmp30  +     1.50494203860483 * AcceptedCmp40
2474452   +          +     0.00499691981651 * AcceptedCmp50  +    -0.29977032190776 *
2474453   +        Complain0  +     0.76473087756218 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + -0.31781332022679 * AcceptedCmp10 + -0.35773084257089
* AcceptedCmp20 + 0.0486072265688 * AcceptedCmp30 + 1.50494203860483 * AcceptedCmp40 +
0.00499691981651 * AcceptedCmp50 + -0.29977032190776 * Complain0 + 0.76473087756218 *
HigherEducationBinary0 ;
2474454   +   H1x2_5  = H1x2_5  +     -0.4639041544815 * AcceptedCmp10
2474455   +          +    -1.28977231764453 * AcceptedCmp20  +    -0.03597660273531 *
2474456   +        AcceptedCmp30  +     0.17848986397338 * AcceptedCmp40
2474457   +          +     0.06649914015182 * AcceptedCmp50  +    -0.95633404051563 *
2474458   +        Complain0  +    -0.62555630659121 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + -0.4639041544815 * AcceptedCmp10 + -1.28977231764453 *
AcceptedCmp20 + -0.03597660273531 * AcceptedCmp30 + 0.17848986397338 * AcceptedCmp40 +
0.06649914015182 * AcceptedCmp50 + -0.95633404051563 * Complain0 + -0.62555630659121 *
HigherEducationBinary0 ;
2474459   +   H1x2_1  = H1x2_1  +    -1.75926153465974 * Education2n_Cycle
2474460   +          +     0.96255168005018 * EducationBasic  +     -1.2029563052774 *
2474461   +        EducationGraduation  +    -0.22397098444024 * EducationMaster
2474462   +          +    -0.10361472385198 * Marital_StatusDivorced
2474463   +          +     0.05574820877885 * Marital_StatusMarried
2474464   +          +     0.13130988205279 * Marital_StatusSingle
2474465   +          +    -1.51165564425323 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -1.75926153465974 * Education2n_Cycle +
0.96255168005018 * EducationBasic + -1.2029563052774 * EducationGraduation + -0.22397098444024
* EducationMaster + -0.10361472385198 * Marital_StatusDivorced + 0.05574820877885 *
Marital_StatusMarried + 0.13130988205279 * Marital_StatusSingle + -1.51165564425323 *
Marital_StatusTogether ;
2474466   +   H1x2_2  = H1x2_2  +     1.73281005101474 * Education2n_Cycle
2474467   +          +    -0.51397811328576 * EducationBasic  +     1.64296402934617 *
2474468   +        EducationGraduation  +     1.44983505587452 * EducationMaster
2474469   +          +      0.0059353523794 * Marital_StatusDivorced
2474470   +          +    -0.59379435051653 * Marital_StatusMarried
2474471   +          +    -1.93587108708999 * Marital_StatusSingle
2474472   +          +     2.02868236823401 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 1.73281005101474 * Education2n_Cycle +
-0.51397811328576 * EducationBasic + 1.64296402934617 * EducationGraduation + 1.44983505587452
* EducationMaster + 0.0059353523794 * Marital_StatusDivorced + -0.59379435051653 *
Marital_StatusMarried + -1.93587108708999 * Marital_StatusSingle + 2.02868236823401 *
Marital_StatusTogether ;
2474473   +   H1x2_3  = H1x2_3  +     0.11852280587389 * Education2n_Cycle
2474474   +          +    -0.87963137637159 * EducationBasic  +      0.3212539101977 *
2474475   +        EducationGraduation  +     0.16497026569775 * EducationMaster
2474476   +          +    -0.74333797840386 * Marital_StatusDivorced
2474477   +          +    -0.93061135117658 * Marital_StatusMarried
2474478   +          +     1.04024182655844 * Marital_StatusSingle
2474479   +          +     0.58313569749679 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.11852280587389 * Education2n_Cycle +
-0.87963137637159 * EducationBasic + 0.3212539101977 * EducationGraduation + 0.16497026569775
* EducationMaster + -0.74333797840386 * Marital_StatusDivorced + -0.93061135117658 *
Marital_StatusMarried + 1.04024182655844 * Marital_StatusSingle + 0.58313569749679 *
Marital_StatusTogether ;
2474480   +   H1x2_4  = H1x2_4  +     -1.2170050337036 * Education2n_Cycle
2474481   +          +    -0.83332588435502 * EducationBasic  +     0.43242117148542 *
2474482   +        EducationGraduation  +     1.71196178631559 * EducationMaster
2474483   +          +    -3.01050675344463 * Marital_StatusDivorced
2474484   +          +      0.1638723582239 * Marital_StatusMarried
2474485   +          +     0.94548468360304 * Marital_StatusSingle
2474486   +          +    -0.67333048623615 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + -1.2170050337036 * Education2n_Cycle +
-0.83332588435502 * EducationBasic + 0.43242117148542 * EducationGraduation + 1.71196178631559
* EducationMaster + -3.01050675344463 * Marital_StatusDivorced + 0.1638723582239 *
Marital_StatusMarried + 0.94548468360304 * Marital_StatusSingle + -0.67333048623615 *
Marital_StatusTogether ;
2474487   +   H1x2_5  = H1x2_5  +    -0.66774344191467 * Education2n_Cycle
2474488   +          +     0.75591270317285 * EducationBasic  +    -0.29337325355435 *
2474489   +        EducationGraduation  +     0.57450456442662 * EducationMaster
2474490   +          +    -1.37013926274158 * Marital_StatusDivorced
2474491   +          +    -0.34168970042779 * Marital_StatusMarried
2474492   +          +     0.63383683543962 * Marital_StatusSingle
2474493   +          +     0.75118887766443 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + -0.66774344191467 * Education2n_Cycle +
0.75591270317285 * EducationBasic + -0.29337325355435 * EducationGraduation + 0.57450456442662
* EducationMaster + -1.37013926274158 * Marital_StatusDivorced + -0.34168970042779 *
Marital_StatusMarried + 0.63383683543962 * Marital_StatusSingle + 0.75118887766443 *
Marital_StatusTogether ;
2474494   +   H1x2_1  =    -1.05245414685459 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -1.05245414685459 + H1x2_1 ;
2474495   +   H1x2_2  =    -2.03581716915326 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -2.03581716915326 + H1x2_2 ;
2474496   +   H1x2_3  =    -0.95118365599668 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.95118365599668 + H1x2_3 ;
2474497   +   H1x2_4  =    -1.36171328515396 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -1.36171328515396 + H1x2_4 ;
2474498   +   H1x2_5  =    -0.09438724866767 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.09438724866767 + H1x2_5 ;
2474499   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2474500   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2474501   +   H1x2_1  = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
2474502   +   H1x2_2  = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_2 = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
2474503   +   H1x2_3  = 1.0 / (1.0 + EXP(MIN( - H1x2_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_3 = 1.0 / (1.0 + EXP(MIN( - H1x2_3 , _EXP_BAR)));
2474504   +   H1x2_4  = 1.0 / (1.0 + EXP(MIN( - H1x2_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_4 = 1.0 / (1.0 + EXP(MIN( - H1x2_4 , _EXP_BAR)));
2474505   +   H1x2_5  = 1.0 / (1.0 + EXP(MIN( - H1x2_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.0 / (1.0 + EXP(MIN( - H1x2_5 , _EXP_BAR)));
2474506   +END;
MPRINT(EM_DIAGRAM):   END;
2474507   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2474508   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
2474509   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
2474510   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
2474511   +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
2474512   +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
2474513   +END;
MPRINT(EM_DIAGRAM):   END;
2474514   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2474515   +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
2474516   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2474517   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2474518   +   H2x1_1  =    -3.66869890196477 * H1x1_1  +     3.66276995899936 * H1x1_2
2474519   +          +      4.9852243803889 * H1x1_3  +    -3.40922134517979 * H1x1_4
2474520   +          +     2.26435924995065 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -3.66869890196477 * H1x1_1 + 3.66276995899936 * H1x1_2 +
4.9852243803889 * H1x1_3 + -3.40922134517979 * H1x1_4 + 2.26435924995065 * H1x1_5 ;
2474521   +   H2x1_2  =     1.35296027814603 * H1x1_1  +     0.16236277762099 * H1x1_2
2474522   +          +      0.4094634018093 * H1x1_3  +    -1.05233334297087 * H1x1_4
2474523   +          +    -0.51735435825901 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.35296027814603 * H1x1_1 + 0.16236277762099 * H1x1_2 +
0.4094634018093 * H1x1_3 + -1.05233334297087 * H1x1_4 + -0.51735435825901 * H1x1_5 ;
2474524   +   H2x1_3  =    -3.57467050540101 * H1x1_1  +     1.96738498758928 * H1x1_2
2474525   +          +      3.1519435691133 * H1x1_3  +    -2.73180541318793 * H1x1_4
2474526   +          +     2.53621803266955 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -3.57467050540101 * H1x1_1 + 1.96738498758928 * H1x1_2 +
3.1519435691133 * H1x1_3 + -2.73180541318793 * H1x1_4 + 2.53621803266955 * H1x1_5 ;
2474527   +   H2x1_4  =    -1.77897865469649 * H1x1_1  +    -0.34371813002239 * H1x1_2
2474528   +          +     0.97655076671381 * H1x1_3  +    -0.53022688394362 * H1x1_4
2474529   +          +     1.78452647837415 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -1.77897865469649 * H1x1_1 + -0.34371813002239 * H1x1_2 +
0.97655076671381 * H1x1_3 + -0.53022688394362 * H1x1_4 + 1.78452647837415 * H1x1_5 ;
2474530   +   H2x1_5  =    -2.37976522756638 * H1x1_1  +     2.07473947277607 * H1x1_2
2474531   +          +      3.6114905073808 * H1x1_3  +    -4.57668209905758 * H1x1_4
2474532   +          +     2.97931581645784 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -2.37976522756638 * H1x1_1 + 2.07473947277607 * H1x1_2 +
3.6114905073808 * H1x1_3 + -4.57668209905758 * H1x1_4 + 2.97931581645784 * H1x1_5 ;
2474533   +   H2x1_1  = H2x1_1  +      0.5090021095213 * H1x2_1
2474534   +          +    -0.99996599039586 * H1x2_2  +     0.09317756017156 * H1x2_3
2474535   +          +     0.07646136890595 * H1x2_4  +    -0.86729455140311 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 0.5090021095213 * H1x2_1 + -0.99996599039586 * H1x2_2
+ 0.09317756017156 * H1x2_3 + 0.07646136890595 * H1x2_4 + -0.86729455140311 * H1x2_5 ;
2474536   +   H2x1_2  = H2x1_2  +     0.54458122713319 * H1x2_1
2474537   +          +    -1.01527351866283 * H1x2_2  +    -1.05264779960249 * H1x2_3
2474538   +          +     2.00891057398994 * H1x2_4  +     0.23877185330348 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 0.54458122713319 * H1x2_1 + -1.01527351866283 * H1x2_2
+ -1.05264779960249 * H1x2_3 + 2.00891057398994 * H1x2_4 + 0.23877185330348 * H1x2_5 ;
2474539   +   H2x1_3  = H2x1_3  +     0.45936122831356 * H1x2_1
2474540   +          +    -0.78158455560098 * H1x2_2  +    -0.93755507764598 * H1x2_3
2474541   +          +    -0.41290092050446 * H1x2_4  +    -1.08076286104858 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + 0.45936122831356 * H1x2_1 + -0.78158455560098 * H1x2_2
+ -0.93755507764598 * H1x2_3 + -0.41290092050446 * H1x2_4 + -1.08076286104858 * H1x2_5 ;
2474542   +   H2x1_4  = H2x1_4  +     0.95365620475779 * H1x2_1
2474543   +          +    -0.84100294393078 * H1x2_2  +     0.70463413466954 * H1x2_3
2474544   +          +     1.80542761219637 * H1x2_4  +     0.45881360213194 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 0.95365620475779 * H1x2_1 + -0.84100294393078 * H1x2_2
+ 0.70463413466954 * H1x2_3 + 1.80542761219637 * H1x2_4 + 0.45881360213194 * H1x2_5 ;
2474545   +   H2x1_5  = H2x1_5  +     0.59629215620441 * H1x2_1
2474546   +          +    -0.66300910076078 * H1x2_2  +     0.53748646350811 * H1x2_3
2474547   +          +     0.40402787748621 * H1x2_4  +    -0.68066387330661 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + 0.59629215620441 * H1x2_1 + -0.66300910076078 * H1x2_2
+ 0.53748646350811 * H1x2_3 + 0.40402787748621 * H1x2_4 + -0.68066387330661 * H1x2_5 ;
2474548   +   H2x1_1  =    -1.36901208947371 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -1.36901208947371 + H2x1_1 ;
2474549   +   H2x1_2  =     1.02513270875023 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.02513270875023 + H2x1_2 ;
2474550   +   H2x1_3  =     0.21017025934674 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 0.21017025934674 + H2x1_3 ;
2474551   +   H2x1_4  =    -1.15214364807652 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -1.15214364807652 + H2x1_4 ;
2474552   +   H2x1_5  =    -1.32590257108023 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -1.32590257108023 + H2x1_5 ;
2474553   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2474554   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2474555   +   H2x1_1  = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
2474556   +   H2x1_2  = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
2474557   +   H2x1_3  = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
2474558   +   H2x1_4  = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
2474559   +   H2x1_5  = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_5 = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
2474560   +END;
MPRINT(EM_DIAGRAM):   END;
2474561   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2474562   +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
2474563   +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
2474564   +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
2474565   +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
2474566   +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
2474567   +END;
MPRINT(EM_DIAGRAM):   END;
2474568   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2474569   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2474570   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2474571   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2474572   +   P_DepVar1  =    -9.23664553457504 * H2x1_1  +     1.34611690798114 * H2x1_2
2474573   +          +    -6.67077102946651 * H2x1_3  +    -1.67245227685142 * H2x1_4
2474574   +          +    -7.67053346287177 * H2x1_5 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -9.23664553457504 * H2x1_1 + 1.34611690798114 * H2x1_2 +
-6.67077102946651 * H2x1_3 + -1.67245227685142 * H2x1_4 + -7.67053346287177 * H2x1_5 ;
2474575   +   P_DepVar1  =      3.4145227149582 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 3.4145227149582 + P_DepVar1 ;
2474576   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2474577   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2474578   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2474579   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2474580   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2474581   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2474582   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2474583   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2474584   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2474585   +END;
MPRINT(EM_DIAGRAM):   END;
2474586   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2474587   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2474588   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2474589   +END;
MPRINT(EM_DIAGRAM):   END;
2474590   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2474591   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2474592   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2474593   +END;
MPRINT(EM_DIAGRAM):   END;
2474594   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2474595   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2474596   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2474597   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2474598   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2474599   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2474600   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2474601   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2474602   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2474603   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2474604   +END;
MPRINT(EM_DIAGRAM):   END;
2474605   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2474606   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2474607   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2474608   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2474609    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2474610    quit;
2474611    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2474612    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2474613    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2474614    retain ID 2 Node "AutoNeural10";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural10";
2474615    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2474616    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4719 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4719 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2474617    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2474618    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2474619    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4719 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4719 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2474620    proc sort data=EMWS8.AutoNeural10_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural10_variableset out=_temp2(keep=NAME
CREATOR);
2474621    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2474622    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL10_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2474623    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2474624    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2474625    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2474626    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2474627    proc contents data=EMWS8.AutoNeural10_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural10_train out=_meta(keep=NAME) noprint;
2474628    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 68 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
2474629    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2474630    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2474631    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 68 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 68 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2474632    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2474633    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2474634    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2474635    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 68 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 68 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2474636    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2474637    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2474637  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 2479 rows and 5 columns.
 
2474638    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2474639    proc append base=EMWS8.Ensmbl46_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl46_FCMP data=_tempx;
2474640    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL46_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 2479 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL46_FCMP has 2479 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2474641    filename _pref
2474641  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
2474642    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2474643    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
2474644   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2474645   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
2474646   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2474647   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
2474648   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
2474649   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2474650    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2474651    quit;
2474652    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2474653    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2474654    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2474655    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
2474656    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2474657    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2474658    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2474659    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2474660    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2474661    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
2474662    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2474663    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2474664    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2474665    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2474666    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2474667    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2474668    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
2474669    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
2474670    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2474671    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2474672    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2474673    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2474674    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2474675    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2474676    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2474677    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2474678    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2474678  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
2474679    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2474680    proc append base=EMWS8.Ensmbl46_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl46_FCMP data=_tempx;
2474681    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL46_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL46_FCMP has 2483 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2474682    filename _pref
2474682  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
2474683    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2474684    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
2474685   +
2474686   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
2474687   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
2474687  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
2474688   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
2474689   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
2474690   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
2474691   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
2474692   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2474693    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2474694    quit;
2474695    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2474696    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2474697    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2474698    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
2474699    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2474700    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2474701    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2474702    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2474703    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2474704    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
2474705    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2474706    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2474707    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2474708    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2474709    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2474710    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2474711    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
2474712    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2474713    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2474714    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2474715    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2474716    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2474717    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2474718    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2474719    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2474720    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2474721    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2474721  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
2474722    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2474723    proc append base=EMWS8.Ensmbl46_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl46_FCMP data=_tempx;
2474724    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL46_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL46_FCMP has 2522 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2474725    filename _pref
2474725  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
2474726    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2474727    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
2474728   +
2474729   +
2474730   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
2474731   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
2474732   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
2474733   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
2474734   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
2474735   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2474736   +
2474737   +
2474738   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
2474739   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
2474740   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
2474741   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
2474742   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
2474743   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2474744   +
2474745   +
2474746   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
2474747   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
2474748   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
2474749   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
2474750   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
2474751   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2474752   +
2474753   +
2474754   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
2474755   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
2474756   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
2474757   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
2474758   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
2474759   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2474760   +
2474761   +
2474762   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
2474763   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
2474764   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
2474765   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
2474766   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
2474767   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2474768   +
2474769   +
2474770   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
2474771   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
2474772   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
2474773   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
2474774   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
2474775   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2474776   +
2474777   +
2474778   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
2474779   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
2474780   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
2474781   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
2474782   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
2474783   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2474784   +
2474785   +
2474786   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
2474787   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
2474788   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
2474789   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
2474790   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
2474791   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2474792   +if
2474793   +_FILTERNORM1 not in ( '.')
2474794   + and
2474795   +_FILTERNORM2 not in ( '.')
2474796   + and
2474797   +_FILTERNORM3 not in ( '.')
2474798   + and
2474799   +_FILTERNORM4 not in ( '.')
2474800   + and
2474801   +_FILTERNORM5 not in ( '.')
2474802   + and
2474803   +_FILTERNORM6 not in ( '.')
2474804   + and
2474805   +_FILTERNORM7 not in ( ' ')
2474806   + and
2474807   +_FILTERNORM8 not in ( ' ')
2474808   +and
2474809   +( Dt_Customer ne .)
2474810   +and ( Income ne . and (Income<=107000))
2474811   +and ( Kidhome ne .)
2474812   +and ( MntFishProducts ne .)
2474813   +and ( MntFruits ne .)
2474814   +and ( MntGoldProds ne .)
The SAS System
 
2474815   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
2474816   +and ( MntSweetProducts ne .)
2474817   +and ( MntWines ne .)
2474818   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
2474819   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
2474820   +and ( NumStorePurchases ne .)
2474821   +and ( NumWebPurchases ne .)
2474822   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
2474823   +and ( Recency ne .)
2474824   +and ( Teenhome ne .)
2474825   +and ( Year_Birth ne .)
2474826   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
2474827   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
2474828   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
2474829   +end;
MPRINT(EM_DIAGRAM):   end;
2474830   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
2474831   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2474832    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2474833    quit;
2474834    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2474835    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2474836    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2474837    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
2474838    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2474839    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2474840    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2474841    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2474842    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2474843    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
2474844    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2474845    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2474846    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2474847    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2474848    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2474849    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2474850    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
2474851    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
2474852    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2474853    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2474854    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2474855    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2474856    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2474857    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2474858    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2474859    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2474860    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2474860  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
2474861    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2474862    proc append base=EMWS8.Ensmbl46_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl46_FCMP data=_tempx;
2474863    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL46_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL46_FCMP has 2588 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2474864    %macro varDept(fcmpdata=,id=);
2474865    %global nobs&id scoreFlag&id;
2474866    %let scoreFlag&id = 0;
2474867    %if &id=1 or ^&fcmpStart %then %do;
2474868    proc sort data=&fcmpdata out=_temp&id nodupkey;
2474869    by NAME;
2474870    where id=&id and LHS in( %let j=1;
2474871    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
2474872    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
2474873    "&var" %let j = %eval(&j+1);
2474874    %end;
2474875    );
2474876    run;
2474877    %let dsid = %sysfunc(open(_temp&id));
2474878    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2474879    %let dsid = %sysfunc(close(&dsid));
2474880    %if &&nobs&id %then %do;
2474881    %let scoreFlag&id = 1;
2474882    %let fcmpStart = 1;
2474883    %end;
2474884    %else %let fcmpStart = 0;
2474885    %end;
2474886    %else %do;
2474887    proc sort data=&fcmpdata out=_tempid;
2474888    where id=&id;
2474889    by LHS;
2474890    run;
2474891    %let dsid = %sysfunc(open(_tempid));
2474892    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2474893    %let dsid = %sysfunc(close(&dsid));
2474894    %if ^&&nobs&id %then %do;
2474895    proc datasets lib=work nolist;
2474896    delete _tempid;
2474897    run;
2474898    quit;
2474899    %end;
2474900    %else %do;
2474901    data _tempAll;
2474902    set %let j=%eval(&id-1);
2474903    %do x=1 %to &j;
2474904    %if &&nobs&x %then %do;
2474905    _temp&x %end;
2474906    %end;
2474907    ;
2474908    run;
2474909    proc sql;
2474910    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
2474910  ! work._tempid p2 where p.name=p2.lhs;
2474911    quit;
2474912    data _temp&id;
2474913    set _temp&id;
2474914    where LHS ne '' and NAME ne '' and Node ne '';
2474915    run;
2474916    proc datasets lib=work nolist;
2474917    delete _tempAll;
2474918    run;
2474919    %let dsid = %sysfunc(open(_temp&id));
2474920    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2474921    %let dsid = %sysfunc(close(&dsid));
2474922    %if ^&&nobs&id %then %do;
2474923    proc datasets lib=work nolist;
2474924    delete _temp&id;
2474925    run;
2474926    quit;
2474927    %end;
2474928    %else %do;
2474929    %let scoreFlag&id = 1;
2474930    data _temp&id;
2474931    set _temp&id;
2474932    where LHS ne NAME and node ne '';
2474933    run;
2474934    %let dsid = %sysfunc(open(_temp&id));
2474935    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2474936    %let dsid = %sysfunc(close(&dsid));
2474937    %if ^&&nobs&id %then %do;
2474938    proc datasets lib=work nolist;
2474939    delete _temp&id;
2474940    run;
2474941    quit;
2474942    %end;
2474943    %else %do;
2474944    proc sort data=_temp&id nodupkey;
2474945    by LHS NAME;
2474946    run;
2474947    %end;
2474948    %end;
2474949    %end;
2474950    %end;
2474951    %mend varDept;
2474952    %macro optCode(outdata=fcmpdata);
2474953    %global fcmpStart;
2474954    %let fcmpStart = 0;
2474955    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
2474956    %let NumNodes=9;
2474957    %do k=1 %to &NumNodes;
2474958    %vardept(fcmpdata=&outdata, id=&k);
2474959    %end;
2474960    %mend optCode;
2474961    %optcode(outData=EMWS8.Ensmbl46_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl46_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL46_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl46_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 179 observations read from the data set EMWS8.ENSMBL46_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 130 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 49 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl46_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL46_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.06 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl46_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL46_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl46_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL46_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 49 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 49 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl46_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL46_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 49 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 53 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl46_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL46_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 49 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 92 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl46_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL46_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl46_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL46_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
2474962    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
2474963    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
2474964    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
2474965    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2474966    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
2474967    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
2474968    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
2474969    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2474970    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2474971    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
2474971  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.
 
2474972    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2474973    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
2474974    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
2474975    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2474976    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
2474977    * Ensmbl46: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Ensmbl46: Computing metadata for TRAIN data;
2474978    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
NOTE: View EMWS8.ENSMBL46_TRAIN.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl46\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.Ensmbl46_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.Ensmbl46_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.Ensmbl46_TRAIN out=WORK.M3MWMTP5 noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3MWMTP5;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M3MWMTP5(keep=name type length label format formatl
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl,
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd,
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat =
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl,
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3MWMTP5;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M3MWMTP5;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M0Y1DPLB NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0Y1DPLB;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M0Y1DPLB;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0RP_MBJ(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M0Y1DPLB;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0Y1DPLB;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M0Y1DPLB;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN"
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO"
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON"
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD"
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" ))
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype =
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" ))
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT"
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB"
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType =
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA',
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W',
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL',
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT',
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0Y1DPLB;
MPRINT(EMADVISECOLUMNS):   set WORK.M0Y1DPLB;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL=
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY=
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT=
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL=
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural9_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural9_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl46_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Ensmbl46";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "Ensmbl46";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "Ensmbl46";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "Ensmbl46";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "Ensmbl46";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "Ensmbl46";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "Ensmbl46";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "Ensmbl46";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "Ensmbl46";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "Ensmbl46";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl46: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   if NAME in( "I_DepVar" "F_DepVar" "U_DepVar" "_WARN_" "P_DepVar1"
"P_DepVar0" "R_DepVar1" "R_DepVar0" ) then CREATOR="Ensmbl46";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
2475298    data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
2475299    set EMWS8.Ensmbl46_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl46_EMINFO;
2475300    where DATA='Ensmbl46' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='Ensmbl46' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE',
'MODEL');
2475301    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL46_EMINFO.
      WHERE (DATA='Ensmbl46') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2475302    data EMWS8.Ensmbl46_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl46_EMINFO;
2475303    length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
2475304    input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
2475305    cards;
MPRINT(EM_DIAGRAM):   cards;
 
NOTE: The data set EMWS8.ENSMBL46_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   run;
2475309    run;
2475310    data EMWS8.Ensmbl46_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl46_EMINFO;
2475311    set EMWS8.Ensmbl46_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl46_EMINFO WORK.MODELTEMP_INFO;
2475312    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS8.ENSMBL46_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.ENSMBL46_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2475313    proc sort data = EMWS8.Ensmbl46_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Ensmbl46_EMINFO NOTHREADS;
2475314    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
2475315    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS8.ENSMBL46_EMINFO.
NOTE: The data set EMWS8.ENSMBL46_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2475316    proc sort data = EMWS8.AutoNeural9_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.AutoNeural9_EMINFO OUT=WORK.SORTEDEMINFO
NOTHREADS;
2475317    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
2475318    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.AUTONEURAL9_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2475319    proc sort data = EMWS8.Ensmbl46_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.Ensmbl46_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
2475320    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
2475321    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.ENSMBL46_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2475322    data EMWS8.Ensmbl46_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl46_EMINFO;
2475323    merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
2475324    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
2475325    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.ENSMBL46_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2475326    proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
2475327    delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
2475328    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
2475329    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
 
NOTE: View EMWS8.ENSMBL46_TRAIN.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.04 seconds
 
NOTE: View EMWS8.ENSMBL46_VALIDATE.VIEW used (Total process time):
      real time           0.13 seconds
      cpu time            0.07 seconds
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "21. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "19.06 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Report Log
Date:                21. April 2016
Time:                19.06 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O01C9FLD
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl46\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O01C9FLD new;
MPRINT(EM_DIAGRAM):   run;
2475353    data EMWS8.Ensmbl46_EMOUTFIT;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl46_EMOUTFIT;
2475354    set EMWS8.Ensmbl46_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl46_EMOUTFIT;
2475355    length TargetLabel $200;
MPRINT(EM_DIAGRAM):   length TargetLabel $200;
2475356    label targetLabel = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel,
2475356  ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   label targetLabel = "Target Label";
2475357    if upcase(TARGET) eq "DEPVAR" then TargetLabel = 'DepVar';
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TargetLabel = 'DepVar';
2475358    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.ENSMBL46_EMOUTFIT.
NOTE: The data set EMWS8.ENSMBL46_EMOUTFIT has 1 observations and 20 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2475359    proc sort data=EMWS8.Ensmbl46_EMREPORTFIT nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.Ensmbl46_EMREPORTFIT nothreads;
2475360    by TARGET;
MPRINT(EM_DIAGRAM):   by TARGET;
2475361    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 9 observations read from the data set EMWS8.ENSMBL46_EMREPORTFIT.
NOTE: The data set EMWS8.ENSMBL46_EMREPORTFIT has 9 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2475362    %let _EMwarndup = 0;
2475363    %let _EMtargetdup =;
2475364    %let _EMASEtargetdup =;
2475365    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
2475366    set EMWS8.Ensmbl46_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl46_EMOUTFIT;
2475367    if .<_ASE_<0.000001 then do;
MPRINT(EM_DIAGRAM):   if .<_ASE_<0.000001 then do;
2475368    call symput('_EMwarndup', '1');
MPRINT(EM_DIAGRAM):   call symput('_EMwarndup', '1');
2475369    call symput('_EMtargetdup', target);
MPRINT(EM_DIAGRAM):   call symput('_EMtargetdup', target);
2475370    call symput('_EMASEtargetdup', put(_ASE_, best.));
MPRINT(EM_DIAGRAM):   call symput('_EMASEtargetdup', put(_ASE_, best.));
2475371    end;
MPRINT(EM_DIAGRAM):   end;
2475372    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.ENSMBL46_EMOUTFIT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2475373    proc sort data=EMWS8.AutoNeural9_CMeta_TRAIN out=WORK.SUBSETINMETA;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.AutoNeural9_CMeta_TRAIN out=WORK.SUBSETINMETA;
2475374    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2475375    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 48 observations read from the data set EMWS8.AUTONEURAL9_CMETA_TRAIN.
NOTE: The data set WORK.SUBSETINMETA has 48 observations and 21 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2475376    proc sort data=EMWS8.Ensmbl46_VariableSet out=WORK.SUBSETVARSET(keep=NAME REPORT);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Ensmbl46_VariableSet
out=WORK.SUBSETVARSET(keep=NAME REPORT);
2475377    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2475378    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 38 observations read from the data set EMWS8.ENSMBL46_VARIABLESET.
NOTE: The data set WORK.SUBSETVARSET has 38 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2475379    data WORK.ASSESS_META;
MPRINT(EM_DIAGRAM):   data WORK.ASSESS_META;
2475380    merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
MPRINT(EM_DIAGRAM):   merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
2475381    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2475382    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 48 observations read from the data set WORK.SUBSETINMETA.
NOTE: There were 38 observations read from the data set WORK.SUBSETVARSET.
NOTE: The data set WORK.ASSESS_META has 48 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2475383    data EM_temp_assessMeta;
MPRINT(EM_DIAGRAM):    data EM_temp_assessMeta;
2475384    set EMWS8.Ensmbl46_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl46_CMeta_TRAIN;
2475385    where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST')
2475385  ! ;
MPRINT(EM_DIAGRAM):   where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION',
'ASSESS', 'COST');
2475386    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS8.ENSMBL46_CMETA_TRAIN.
      WHERE role in ('ASSESS', 'CLASSIFICATION', 'COST', 'DECISION', 'PREDICT', 'RESIDUAL');
NOTE: The data set WORK.EM_TEMP_ASSESSMETA has 8 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2475387    data EM_temp_assessdata;
MPRINT(EM_DIAGRAM):    data EM_temp_assessdata;
2475388    set EMWS8.Ensmbl46_TRAIN(keep=
2475389    F_DepVar
2475390    I_DepVar
2475391    P_DepVar0
2475392    P_DepVar1
2475393    R_DepVar0
2475394    R_DepVar1
2475395    U_DepVar
2475396    _WARN_
2475397    DepVar
2475398    );
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl46_TRAIN(keep= F_DepVar I_DepVar P_DepVar0 P_DepVar1
R_DepVar0 R_DepVar1 U_DepVar _WARN_ DepVar );
2475399    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2374 observations read from the data set EMWS8.PART_TRAIN.
NOTE: There were 2374 observations read from the data set EMWS8.META_TRAIN.
NOTE: View EMWS8.ENSMBL46_TRAIN.VIEW used (Total process time):
      real time           0.19 seconds
      cpu time            0.18 seconds
 
NOTE: There were 2374 observations read from the data set EMWS8.AUTONEURAL9_TRAIN.
NOTE: There were 2374 observations read from the data set EMWS8.ENSMBL46_TRAIN.
NOTE: The data set WORK.EM_TEMP_ASSESSDATA has 2374 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.21 seconds
      cpu time            0.20 seconds
 
 
MPRINT(EM_DIAGRAM):    proc freq data=EM_temp_assessdata noprint;
MPRINT(EM_DIAGRAM):   table I_DepVar*F_DepVar / out = WORK.Ensmbl46_2Y67A4W nocol norow outpct;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.Ensmbl46_2Y67A4W;
MPRINT(EM_DIAGRAM):   length _TYPE_ $10 DATAROLE TARGET $32 TARGETLABEL $200 FROM INTO $32
CORRECTTEXT $40 ;
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Outcome Type";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role";
MPRINT(EM_DIAGRAM):   label TARGET = "Target Variable";
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
MPRINT(EM_DIAGRAM):   label CORRECTTEXT = "Correct Text";
MPRINT(EM_DIAGRAM):   label CORRECT = "Correct";
MPRINT(EM_DIAGRAM):   set WORK.Ensmbl46_2Y67A4W(rename=(F_DepVar=FROM I_DepVar=INTO));
MPRINT(EM_DIAGRAM):   retain _TYPE_ 'PREDICTION' DATAROLE "TRAIN" TARGET "DepVar";
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   if FROM eq INTO then do;
MPRINT(EM_DIAGRAM):   CORRECT = 0;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Correct";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   CORRECT = 1;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Incorrect";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl46_EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):   set WORK.Ensmbl46_2Y67A4W;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   set WORK.Ensmbl46_2Y67A4W;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT(drop=INTO FROM _TYPE_);
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   length MISC $12;
MPRINT(EM_DIAGRAM):   if FROM='1' and INTO='1' then MISC='TRUEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM='1' and INTO ne '1' then MISC='FALSENEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne '1' and INTO='1' then MISC='FALSEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne'1' and INTO ne '1' then MISC='TRUENEVENT';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.MISCREPORT nothreads;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc summary data=WORK.MISCREPORT NWAY;
MPRINT(EM_DIAGRAM):   output out=WORK.MISCCOUNT(drop=_FREQ_ _TYPE_) SUM=COUNT;
MPRINT(EM_DIAGRAM):   CLASS MISC;
MPRINT(EM_DIAGRAM):   VAR COUNT;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK.MISCCOUNT out=WORK.MISCREPORT(drop=_NAME_
_LABEL_);
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   ID MISC;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl46_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data ASSESS_REPORTMETA;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl46_VariableSet;
MPRINT(EM_DIAGRAM):   where REPORT='Y';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emassmt.em_assess.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural9_DepVar_DM;
MPRINT(EM_DIAGRAM):   where _TYPE_="TARGET";
MPRINT(EM_DIAGRAM):   call symput('ASSMT_EVENT', strip(event));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):
MPRINT(EM_ASSESS):   data _ea_tmpdata;
MPRINT(EM_ASSESS):   set EM_temp_assessdata;
MPRINT(EM_ASSESS):   _tmpfreqvar_=1;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_CHECKEMSETINIT):   DATA _NULL_;
MPRINT(EM_CHECKEMSETINIT):   EM_SETINIT = 'N';
MPRINT(EM_CHECKEMSETINIT):   IF SYSPROD('PRODNUM50') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM448') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM102') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM103') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   CALL SYMPUT('EM_SETINIT', EM_SETINIT);
MPRINT(EM_CHECKEMSETINIT):   RUN;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Reading in reporting data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET ASSESS_REPORTMETA END = EOF;
MPRINT(EM_ASSESS):   IF TYPE = "C" OR UPCASE (LEVEL) IN ("NOMINAL", "BINARY" , "ORDINAL") THEN
DO;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMCTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTC" || LEFT (PUT (NUMCTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "C");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF UPCASE(NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMNTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTN" || LEFT (PUT (NUMNTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMNTOREPORT", NUMNTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMCTOREPORT", NUMCTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMTOREPORT", SUM (NUMNTOREPORT, NUMCTOREPORT));
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   PROC DMDB DATA = _ea_tmpdata VAROUT = VAROUT DMDBCAT = _D CLASSOUT =
_ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   CLASS F_DepVar ;
 
MPRINT(EM_ASSESS):   VAR P_DepVar1 _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_;
MPRINT(EM_ASSESS):   RUN ;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   PROC SORT DATA = _ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _auxeventname (keep = __event__) ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ...FLAG0_1 = ..... TARGET IS 0, 1 & EVENT = 1;
 
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   length __event__ $ 32;
MPRINT(EM_ASSESS):   RETAIN FLAG0_1 1 NUM1 . NUM0 . __event__ "_missing_" ;
 
MPRINT(EM_ASSESS):   SET _ASSMT_CLASSOUT END = EOF;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ....... LEVEL = BINARY OR NOMINAL OR ORDINAL;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   IF UPCASE(NAME) = UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   CUMFREQ + FREQUENCY;
MPRINT(EM_ASSESS):   IF LEVEL NE "." THEN DO;
MPRINT(EM_ASSESS):   N1 + 1;
MPRINT(EM_ASSESS):   IF (NRAW NE 0 AND NRAW NE 1) OR TYPE NE "N" OR "" > " " THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ......................... IF EVENT NE BLANK;
MPRINT(EM_ASSESS):   * ....................LEVEL IS CHAR VAR ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   IF UPCASE("1") = UPCASE(LEVEL) THEN DO;
MPRINT(EM_ASSESS):   NUM1 = FREQUENCY;
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", CRAW );
MPRINT(EM_ASSESS):   __event__ = craw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   ELSE do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", NRAW );
MPRINT(EM_ASSESS):   __event__ = nraw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF LAST.NAME THEN DO;
 
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * .............. IN NOMINAL CASE, NEED TO GROUP ALL '0' ;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   NUM0 = SUM (CUMFREQ, - NUM1);
MPRINT(EM_ASSESS):   IF NUM0 < 0 THEN NUM0 = 0;
MPRINT(EM_ASSESS):   IF NUM1 = . THEN NUM1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM0", NUM0 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM1", NUM1);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM1", NUM1 / CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM0", (CUMFREQ - NUM1) / CUMFREQ);
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN DO;
MPRINT(EM_ASSESS):   FLAG0_1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "C" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF "" = " " THEN DO;
MPRINT(EM_ASSESS):   IF "1" NE "1" THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "N" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ................... IF TYPE = N;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("FLAG0_1", FLAG0_1 );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................IF LAST.NAME ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ...............IF LEVEL NE '.' ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * .............. IF NAME = TARGET;
MPRINT(EM_ASSESS):   ELSE IF "" > " " AND UPCASE(NAME) = UPCASE("") THEN DO;
MPRINT(EM_ASSESS):   NUMDECISIONS + 1;
MPRINT(EM_ASSESS):   LEVEL = TRANSLATE (LEVEL, "_", "'", "_", '"');
MPRINT(EM_ASSESS):   CALL SYMPUTX ("D_LABEL" || LEFT (PUT (NUMDECISIONS, 3.)), LEVEL );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................... ELSE IF UPCASE;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   output _auxeventname;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMOBS", CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMDECISIONS", NUMDECISIONS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET VAROUT END = EOF;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) = UPCASE ("P_DepVar1") THEN DO;
MPRINT(EM_ASSESS):   IF N = 0 THEN DO;
MPRINT(EM_ASSESS):   PUT //// "          Warning: All posterior probabilities are missing
values ";
MPRINT(EM_ASSESS):   PUT ///;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("ALLMISS", 1);
MPRINT(EM_ASSESS):   STOP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("ALLMISS", 0);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB", MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB", MAX);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("DIFF", MAX - MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NMISSPROB", NMISS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF UPCASE (NAME) = UPCASE ("_tmpfreqvar_") THEN DO;
MPRINT(EM_ASSESS):   AUXMIN = MIN - INT (MIN);
MPRINT(EM_ASSESS):   AUXMAX = MAX - INT (MAX);
MPRINT(EM_ASSESS):   IF AUXMIN > 0 OR AUXMAX > 0 THEN CALL SYMPUTX ("USEWEIGHT", "Y");
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("USEWEIGHT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _ANY0;
MPRINT(EM_ASSESS):   SET _ea_tmpdata (KEEP = F_DepVar P_DepVar1 _tmpfreqvar_ );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................... No Formats;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF LEFT ( F_DepVar ) = "1" THEN NTARGET = 1;
MPRINT(EM_ASSESS):   ELSE NTARGET = 0;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Before proc summary of binary case;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC SUMMARY DATA = _ANY0 (KEEP = P_DepVar1 NTARGET _tmpfreqvar_ WHERE =
(NTARGET > . )) NWAY MISSING;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   CLASS P_DepVar1 ;
MPRINT(EM_ASSESS):   VAR NTARGET ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   OUTPUT OUT = ANYSUM (DROP = _TYPE_) MEAN = _MEANTARGET _MEANFREQVAR ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... Main Data Set Processing, Binary case;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK (KEEP = BASECAPC BASECAP __EVENT__ BASEEVENTS
BASEGAIN BASELIFT BASERESP BASERESPC BESTCAP BESTCAPC BESTGAIN BESTLIFT BESTLIFTC
BESTNUMEVENTS BESTRESP BESTRESPC BIN CBASELIFT C_LIFT C_P_CAPT_RESP C_P_RESP GAIN LIFT MAXPROB
MINPROB MNPROB NUMNONRESP NUMOBS NUMRESP PERCENTILE P_CAPT_RESP P_RESP ) WORK._TEMPSCOREDIST
(KEEP = BIN LOWERPROB UPPERPROB EVENTVALUE SCR_NUMEVENTS MODELSCORE SCR_NUMNONEVENTS RANGE
NUMOBSINGROUP PERCOBSINGROUP C_PERCOBSINGROUP SCR_P_EVENTS SCR_CP_EVENTS SCR_P_NONEVENTS
SCR_CP_NONEVENTS SCR_MNPROB SCR_MINPROB SCR_MAXPROB ) ;
 
MPRINT(EM_ASSESS):   SET ANYSUM END = EOF;
 
MPRINT(EM_ASSESS):   IF _N_ = 1 THEN SET _AUXEVENTNAME;
 
MPRINT(EM_ASSESS):   RETAIN MINPROB1 - MINPROB20 1 MAXPROB1 - MAXPROB20 0 MNPROB1 - MNPROB20 0
NUMOBS1 - NUMOBS20 0 NUMRESP1 - NUMRESP20 0 TRUEPOS1 - TRUEPOS100 0 TRUENEG1 - TRUENEG100 0
FALSEPOS1 - FALSEPOS100 0 FALSENEG1 - FALSENEG100 0 EVENTS1 - EVENTS100 NONEVENTS1 -
NONEVENTS100 0 FIRSTIN1 - FIRSTIN100 . LASTIN1 - LASTIN100 . RESPRATE 0.151221567 _NEVENTS 359
_NNONEVENTS 2015 TARGET "NTARGET" ;
MPRINT(EM_ASSESS):   ARRAY MINPROBS (20) MINPROB1 - MINPROB20;
MPRINT(EM_ASSESS):   ARRAY MAXPROBS (20) MAXPROB1 - MAXPROB20;
MPRINT(EM_ASSESS):   ARRAY MNPROBS (20) MNPROB1 - MNPROB20;
MPRINT(EM_ASSESS):   ARRAY NUMOBSS (20) NUMOBS1 - NUMOBS20;
MPRINT(EM_ASSESS):   ARRAY NUMRESPS (20) NUMRESP1 - NUMRESP20;
MPRINT(EM_ASSESS):   ARRAY TRUEPOSX (100) TRUEPOS1 - TRUEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSEPOSX (100) FALSEPOS1 - FALSEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSENEGX (100) FALSENEG1 - FALSENEG100;
MPRINT(EM_ASSESS):   ARRAY TRUENEGX (100) TRUENEG1 - TRUENEG100;
MPRINT(EM_ASSESS):   ARRAY _EVENTS (100) EVENTS1 - EVENTS100;
MPRINT(EM_ASSESS):   ARRAY NONEVENTS (100) NONEVENTS1 - NONEVENTS100;
MPRINT(EM_ASSESS):   ARRAY FIRSTIN (100) FIRSTIN1 - FIRSTIN100;
MPRINT(EM_ASSESS):   ARRAY LASTIN (100) LASTIN1 - LASTIN100;
MPRINT(EM_ASSESS):   RETAIN SCR_MNPROB1 - SCR_MNPROB100 0 SCR_MINPROB1 - SCR_MINPROB100 1
SCR_MAXPROB1 - SCR_MAXPROB100 0;
MPRINT(EM_ASSESS):   ARRAY SCR_MNPROBS (100) SCR_MNPROB1 - SCR_MNPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MINPROBS (100) SCR_MINPROB1 - SCR_MINPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MAXPROBS (100) SCR_MAXPROB1 - SCR_MAXPROB100;
MPRINT(EM_ASSESS):   DROP SCR_MINPROB1 - SCR_MINPROB100 SCR_MAXPROB1 - SCR_MAXPROB100
SCR_MNPROB1 - SCR_MNPROB100 ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...... Area For 8 Financials ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF _MEANTARGET = . THEN _MEANTARGET = RESPRATE;
MPRINT(EM_ASSESS):   DROP N1 _K SUMWEIGHTS ;
MPRINT(EM_ASSESS):   SUMWEIGHTS = 1;
 
MPRINT(EM_ASSESS):   DO _K = 1 TO CEIL (_FREQ_);
MPRINT(EM_ASSESS):   IF _K = CEIL (_FREQ_) THEN DO;
MPRINT(EM_ASSESS):   IF _FREQ_ < CEIL (_FREQ_) THEN _WEIGHT = _FREQ_ - FLOOR (_FREQ_);
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   N1 + _WEIGHT;
MPRINT(EM_ASSESS):   NTARGET = _MEANTARGET ;
MPRINT(EM_ASSESS):   DECILE = MIN (20, CEIL (N1 * 20 / 2374));
MPRINT(EM_ASSESS):   MINPROBS ( DECILE) = MIN (MINPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MAXPROBS ( DECILE) = MAX (MAXPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MNPROBS ( DECILE) = SUM (MNPROBS ( DECILE), P_DepVar1 * _WEIGHT);
MPRINT(EM_ASSESS):   NUMOBSS ( DECILE) = NUMOBSS ( DECILE) + _WEIGHT;
MPRINT(EM_ASSESS):   NUMRESPS ( DECILE) = NUMRESPS ( DECILE) + _MEANTARGET * _WEIGHT;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ outside of do loop, Area for final ROC;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   RANKDELTA = (ROUND ( _FREQ_ ) + 1) / 2;
MPRINT(EM_ASSESS):   RANK = UNTIEDRANK + RANKDELTA;
MPRINT(EM_ASSESS):   DROP RANK ;
MPRINT(EM_ASSESS):   SUMRANK1 + RANK * ROUND (_MEANTARGET * _FREQ_, .0000001);
MPRINT(EM_ASSESS):   UNTIEDRANK + ROUND (_FREQ_, .00000001);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Area For ROC Curve;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DO _K = 1 TO 100;
MPRINT(EM_ASSESS):   IF P_DepVar1 * 100 >= _K THEN DO;
MPRINT(EM_ASSESS):   TRUEPOSX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   FALSEPOSX ( _K ) + _FREQ_ * (1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   TRUENEGX ( _K ) + _FREQ_ * ( 1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   FALSENEGX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   SLOT = MIN (MAX (CEIL (P_DepVar1 * 100), 1), 100) ;
MPRINT(EM_ASSESS):   DROP SLOT;
MPRINT(EM_ASSESS):   FIRSTIN ( SLOT ) = MIN ( FIRSTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   LASTIN ( SLOT ) = MAX ( LASTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   _EVENTS ( SLOT) = _EVENTS ( SLOT) + _FREQ_ * _MEANTARGET;
MPRINT(EM_ASSESS):   NONEVENTS ( SLOT) = NONEVENTS ( SLOT) + _FREQ_ * (1 - _MEANTARGET);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ START OF OUTDIST IN BINARY CASE MAIN DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   SCR_MNPROBS ( SLOT ) = SUM (SCR_MNPROBS (SLOT), P_DepVar1 * _FREQ_ );
MPRINT(EM_ASSESS):   SCR_MINPROBS ( SLOT ) = MIN (SCR_MINPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   SCR_MAXPROBS ( SLOT ) = MAX (SCR_MAXPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ End of Outdist in Binary case main DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   PUT //;
MPRINT(EM_ASSESS):   DO K = 1 TO 20;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LENGTH EVENTVALUE $ 32;
MPRINT(EM_ASSESS):   RETAIN EVENTVALUE "1" ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ......... Start of EOF area of BINARY processing of main data set ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SUMRANK1", SUMRANK1);
MPRINT(EM_ASSESS):   LENGTH DATAROLE $ 10;
MPRINT(EM_ASSESS):   RETAIN DATAROLE "TRAIN" ;
MPRINT(EM_ASSESS):   RETAIN OVLMIN 0.0000268114 OVLMAX 0.9999999999 ;
MPRINT(EM_ASSESS):   DROP OVLMIN OVLMAX ;
MPRINT(EM_ASSESS):   C_NUMOBS = 0;
MPRINT(EM_ASSESS):   C_NUM_RESP = 0;
MPRINT(EM_ASSESS):   C_NUM_NONRESP = 0;
MPRINT(EM_ASSESS):   C_P_RESP = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   PREVIOUSPROFIT = 0;
MPRINT(EM_ASSESS):   MAXPROFIT = 0;
MPRINT(EM_ASSESS):   _KS_BIN_ = 0;
MPRINT(EM_ASSESS):   DROP _KS_BIN_;
MPRINT(EM_ASSESS):   AVGNUMRESP = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASERESP = 100 * RESPRATE;
MPRINT(EM_ASSESS):   BASERESPC = BASERESP;
MPRINT(EM_ASSESS):   BASECAP = 100 / 20;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................Start OF Gainschart = Outranks Area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = 0;
MPRINT(EM_ASSESS):   DO GROUP = 20 TO 1 BY -1;
 
MPRINT(EM_ASSESS):   BASECAPC + BASECAP;
MPRINT(EM_ASSESS):   PERCENTILE = GROUP * (100 / 20);
MPRINT(EM_ASSESS):   MINPROB = MINPROBS ( GROUP);
MPRINT(EM_ASSESS):   MAXPROB = MAXPROBS ( GROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB" || LEFT ( PUT (GROUP, 3.)), MINPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB" || LEFT ( PUT (GROUP, 3.)), MAXPROB);
MPRINT(EM_ASSESS):   NUMOBS = NUMOBSS ( GROUP);
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN MNPROB = MNPROBS ( GROUP) / NUMOBS;
MPRINT(EM_ASSESS):   ELSE MNPROB = .;
MPRINT(EM_ASSESS):   C_NUMOBS = SUM (NUMOBS, C_NUMOBS);
MPRINT(EM_ASSESS):   NUMRESP = NUMRESPS ( GROUP);
MPRINT(EM_ASSESS):   NUMNONRESP = NUMOBS - NUMRESP;
MPRINT(EM_ASSESS):   C_AVGNUM_RESP + AVGNUMRESP;
MPRINT(EM_ASSESS):   IF C_NUMOBS <= _NEVENTS THEN DO;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   BESTCAPC = C_NUMOBS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BASEEVENTS = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASENONEVENTS = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   FLAG + 1;
MPRINT(EM_ASSESS):   DROP FLAG;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = _NEVENTS - C_NUMOBS + NUMOBS;
MPRINT(EM_ASSESS):   IF FLAG > 1 THEN BESTNUMEVENTS = 0;
MPRINT(EM_ASSESS):   BESTCAPC = 100;
MPRINT(EM_ASSESS):   IF C_NUMOBS - _NEVENTS <= NUMOBS THEN DO;
MPRINT(EM_ASSESS):   BASEEVENTS = C_NUMOBS - _NEVENTS;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS - C_NUMOBS + _NEVENTS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BASEEVENTS = 0;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   BESTCAP = BESTNUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BESTLIFT = BESTNUMEVENTS / AVGNUMRESP;
MPRINT(EM_ASSESS):   C_BESTNUMEVENTS + BESTNUMEVENTS;
MPRINT(EM_ASSESS):   DROP C_BESTNUMEVENTS;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN BESTLIFTC = C_BESTNUMEVENTS / (_NEVENTS / 2374 *
C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE BESTLIFTC = .;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESP = BESTNUMEVENTS * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_RESP = NUMRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_NONRESP = NUMNONRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESP = .;
MPRINT(EM_ASSESS):   P_RESP = .;
MPRINT(EM_ASSESS):   P_NONRESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESPC = C_BESTNUMEVENTS * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   BESTGAIN = MAX (0, ((C_BESTNUMEVENTS / C_NUMOBS ) / ( AVGNUMRESP /
NUMOBS) - 1) * 100);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESPC = .;
MPRINT(EM_ASSESS):   BESTGAIN = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMNONRESP > 0 THEN ODDS = NUMRESP / NUMNONRESP;
MPRINT(EM_ASSESS):   ELSE ODDS = .;
MPRINT(EM_ASSESS):   C_NUM_RESP = SUM (C_NUM_RESP , NUMRESP );
MPRINT(EM_ASSESS):   C_NUM_NONRESP = SUM (C_NUM_NONRESP, NUMNONRESP );
MPRINT(EM_ASSESS):   IF C_NUM_NONRESP > 0 THEN C_ODDS = C_NUM_RESP / C_NUM_NONRESP;
MPRINT(EM_ASSESS):   ELSE C_ODDS = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   C_P_RESP = C_NUM_RESP * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   GAIN = ABS(100 * (((C_NUM_RESP / C_NUMOBS ) / (_NEVENTS / 2374)) - 1));
MPRINT(EM_ASSESS):   BASEGAIN = 100 * (( (C_AVGNUM_RESP / C_NUMOBS) / ( AVGNUMRESP / NUMOBS))
- 1);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   GAIN = .;
MPRINT(EM_ASSESS):   BASEGAIN = .;
MPRINT(EM_ASSESS):   C_P_RESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF BASEGAIN <= 0 THEN BASEGAIN = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = NUMRESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   P_CAPT_NONRESP = NUMNONRESP * 100 / ( 2374 - _NEVENTS);
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = C_NUM_RESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   C_P_CAPT_NONRESP = C_NUM_NONRESP * 100 / ( 2374 - _NEVENTS);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Area For Binned KS in Outranks area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _DIFFERENCE = C_P_CAPT_RESP - C_P_CAPT_NONRESP ;
MPRINT(EM_ASSESS):   IF _KS_BIN_ < _DIFFERENCE THEN DO;
MPRINT(EM_ASSESS):   _KS_BIN_ = _DIFFERENCE;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = MINPROB + (MAXPROB - MINPROB) / 2 ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LIFT = P_RESP * .01 / RESPRATE ;
MPRINT(EM_ASSESS):   C_LIFT = C_P_RESP * .01 / RESPRATE;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BASELIFT = AVGNUMRESP / ( RESPRATE * NUMOBS );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE BASELIFT = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN CBASELIFT = C_AVGNUM_RESP / (RESPRATE * C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE CBASELIFT = .;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ WITHIN DO LOOP FOR OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 + 1 - GROUP;
MPRINT(EM_ASSESS):   PERCENTILE = BIN * (100 / 20);
MPRINT(EM_ASSESS):   B_C_P_RESP = PERCENTILE;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPRANK ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................ END OF GAINSCHART = OUTRANKS AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFITGROUP" , MAXPROFITGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFIT" , MAXPROFIT );
MPRINT(EM_ASSESS):   KS_ABSDIFF = 0 ;
MPRINT(EM_ASSESS):   MINPRECTPR = 9999;
MPRINT(EM_ASSESS):   Y0 = 1 - RESPRATE;
MPRINT(EM_ASSESS):   Y1 = RESPRATE;
MPRINT(EM_ASSESS):   MAXMUTUAL = 0;
MPRINT(EM_ASSESS):   DROP MAXMUTUAL KSPROB Y0 Y1 KS_ABSDIFF MINPRECTPR;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .....................About to start Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................... Finished Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Outdist ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS96 - EVENTS100 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS96 - NONEVENTS100);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB96 -
SCR_MNPROB100) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB96 - SCR_MINPROB100) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB96 - SCR_MAXPROB100) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 20;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 19 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS91 - EVENTS95 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS91 - NONEVENTS95);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB91 -
SCR_MNPROB95) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB91 - SCR_MINPROB95) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB91 - SCR_MAXPROB95) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 19;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 18 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS86 - EVENTS90 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS86 - NONEVENTS90);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB86 -
SCR_MNPROB90) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB86 - SCR_MINPROB90) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB86 - SCR_MAXPROB90) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 18;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 17 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS81 - EVENTS85 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS81 - NONEVENTS85);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB81 -
SCR_MNPROB85) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB81 - SCR_MINPROB85) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB81 - SCR_MAXPROB85) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 17;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 16 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS76 - EVENTS80 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS76 - NONEVENTS80);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB76 -
SCR_MNPROB80) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB76 - SCR_MINPROB80) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB76 - SCR_MAXPROB80) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 16;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 15 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS71 - EVENTS75 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS71 - NONEVENTS75);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB71 -
SCR_MNPROB75) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB71 - SCR_MINPROB75) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB71 - SCR_MAXPROB75) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 15;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 14 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS66 - EVENTS70 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS66 - NONEVENTS70);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB66 -
SCR_MNPROB70) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB66 - SCR_MINPROB70) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB66 - SCR_MAXPROB70) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 14;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 13 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS61 - EVENTS65 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS61 - NONEVENTS65);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB61 -
SCR_MNPROB65) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB61 - SCR_MINPROB65) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB61 - SCR_MAXPROB65) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 13;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 12 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS56 - EVENTS60 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS56 - NONEVENTS60);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB56 -
SCR_MNPROB60) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB56 - SCR_MINPROB60) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB56 - SCR_MAXPROB60) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 12;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 11 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS51 - EVENTS55 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS51 - NONEVENTS55);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB51 -
SCR_MNPROB55) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB51 - SCR_MINPROB55) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB51 - SCR_MAXPROB55) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 11;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 10 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS46 - EVENTS50 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS46 - NONEVENTS50);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB46 -
SCR_MNPROB50) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB46 - SCR_MINPROB50) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB46 - SCR_MAXPROB50) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 10;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 9 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS41 - EVENTS45 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS41 - NONEVENTS45);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB41 -
SCR_MNPROB45) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB41 - SCR_MINPROB45) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB41 - SCR_MAXPROB45) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 9;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 8 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS36 - EVENTS40 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS36 - NONEVENTS40);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB36 -
SCR_MNPROB40) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB36 - SCR_MINPROB40) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB36 - SCR_MAXPROB40) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 8;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 7 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS31 - EVENTS35 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS31 - NONEVENTS35);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB31 -
SCR_MNPROB35) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB31 - SCR_MINPROB35) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB31 - SCR_MAXPROB35) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 7;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 6 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS26 - EVENTS30 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS26 - NONEVENTS30);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB26 -
SCR_MNPROB30) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB26 - SCR_MINPROB30) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB26 - SCR_MAXPROB30) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 6;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 5 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS21 - EVENTS25 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS21 - NONEVENTS25);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB21 -
SCR_MNPROB25) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB21 - SCR_MINPROB25) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB21 - SCR_MAXPROB25) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 5;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 4 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS16 - EVENTS20 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS16 - NONEVENTS20);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB16 -
SCR_MNPROB20) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB16 - SCR_MINPROB20) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB16 - SCR_MAXPROB20) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 4;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 3 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS11 - EVENTS15 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS11 - NONEVENTS15);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB11 -
SCR_MNPROB15) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB11 - SCR_MINPROB15) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB11 - SCR_MAXPROB15) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 3;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 2 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS6 - EVENTS10 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS6 - NONEVENTS10);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB6 -
SCR_MNPROB10) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB6 - SCR_MINPROB10) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB6 - SCR_MAXPROB10) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 2;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 1 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS1 - EVENTS5 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS1 - NONEVENTS5);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB1 - SCR_MNPROB5)
/ NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB1 - SCR_MINPROB5) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB1 - SCR_MAXPROB5) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 1;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSPROB" , PUT (KSPROB, 5.3 ) );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_PROB" , _KS_BIN_PROB );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_" , _KS_BIN_ / 100 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSDIFF" , KS_ABSDIFF );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PRECTPR" , PRECTPR );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXMUTUALPROB" , MAXMUTUALPROB);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LABEL __EVENT__ = "Event" DECILE = "Depth" BIN = "Bin" NUMOBS = "Number
of Observations" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * RUN for large data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST;
MPRINT(EM_ASSESS):   DELETE _AUXEVENTNAME;
MPRINT(EM_ASSESS):   QUIT;
 
MPRINT(EM_ASSESS):   OPTION NOCENTER LS = 95;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Report Vars Area.;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start OF Outdist Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPSCOREDIST;
MPRINT(EM_ASSESS):   RENAME MODELSCORE = SCORE UPPERPROB = UPPOSTERIOR SCR_CP_EVENTS =
CUMULATIVEPERCENTAGEOFEVENTS SCR_CP_NONEVENTS = CUMULATIVEPERCENTAGEOFNONEVENTS EVENTVALUE =
EVENT LOWERPROB = LOWPOSTERIOR NUMOBSINGROUP = N PERCOBSINGROUP = PERCENTAGE SCR_MINPROB =
_MINP_ SCR_MAXPROB = _MAXP_ SCR_MNPROB = _MEANP_ RANGE = P_LABEL C_PERCOBSINGROUP =
CUMULATIVEPERCENTAGE SCR_NUMEVENTS = NUMBEROFEVENTS SCR_NUMNONEVENTS = NUMBEROFNONEVENTS
SCR_P_EVENTS = PERCENTAGEOFEVENTS SCR_P_NONEVENTS = PERCENTAGEOFNONEVENTS ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... OUTDIST MODIFICATION LABEL AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL BIN = "Bin" N = "Number of Observations" P_LABEL = "Posterior
Probability Range" EVENT = "Event" LOWPOSTERIOR = "Lower Bound Posterior Probability"
PERCENTAGEOFEVENTS = "Percentage of Events" CUMULATIVEPERCENTAGEOFNONEVENTS = "Cumulative
Percentage of Nonevents" CUMULATIVEPERCENTAGE = "Cumulative Percentage" PERCENTAGEOFEVENTS =
"Percentage of Events" PERCENTAGEOFNONEVENTS = "Percentage of Nonevents"
CUMULATIVEPERCENTAGEOFEVENTS = "Cumulative Percentage of Events" UPPOSTERIOR = "Upper Bound
Posterior Probability" NUMBEROFEVENTS = "Number of Events" PERCENTAGE = "Percentage"
NUMBEROFNONEVENTS = "Number of Nonevents" _MEANP_ = "Mean Posterior Probability" _MINP_ = "Min
Posterior Probability" _MAXP_ = "Max Posterior Probability" SCORE = "Model Score" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   SET WORK._TEMPSCOREDIST (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........... END OF OUTDIST MODIFICATION;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start of OUTRANKS Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPRANK;
MPRINT(EM_ASSESS):   RENAME __EVENT__ = EVENT P_RESP = RESP C_P_CAPT_RESP = CAPC P_CAPT_RESP =
CAP NUMNONRESP = NUMNEVENT NUMRESP = NUMEVENT BASEEVENTS = BASENUMBEROFEVENTS BESTNUMEVENTS =
BESTNUMBEROFEVENTS MAXPROB = _MAXP_ MINPROB = _MINP_ CBASELIFT = BASELIFTC C_LIFT = LIFTC
MNPROB = _MEANP_ PERCENTILE = DECILE NUMOBS = N NUMEVENT = NUMBEROFEVENTS C_P_RESP = RESPC ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................. OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL _MAXP_ = "Max Posterior Probability" _MINP_ = "Min Posterior
Probability" _MEANP_ = "Mean Posterior Probability" BASECAP = "Baseline % Captured Response"
BASECAPC = "Baseline Cumulative % Captured Response" BASENUMBEROFEVENTS = "Baseline Number of
Events" BASEGAIN = "Baseline Gain" BASELIFT = "Baseline Lift" BASELIFTC = "Baseline Cumulative
Lift" BASERESP = "Baseline % Response" BASERESPC = "Baseline Cumulative % Response" BASELIFTC
= "Baseline Cumulative Lift" BESTCAP = "Best % Captured Response" BESTCAPC = "Best Cumulative
% Captured Response" BESTGAIN = "Best Gain" BESTRESP = "Best % Response" BESTRESPC = "Best
Cumulative % Response" BESTLIFT = "Best Lift" BESTLIFTC = "Best Cumulative Lift"
BESTNUMBEROFEVENTS = "Best Number of Events" CAP = "% Captured Response" CAPC = "Cumulative %
Captured Response" DECILE = "Depth" GAIN = "Gain" LIFT = "Lift" LIFTC = "Cumulative Lift"
NUMNEVENT = "Number of Nonevents" N = "Number of Observations" EVENT = "Event" RESPC =
"Cumulative % Response" NUMBEROFEVENTS = "Number of Events" RESP = "% Response" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK;
MPRINT(EM_ASSESS):   SET WORK._TEMPRANK (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   proc datasets lib=work nolist;
MPRINT(EM_ASSESS):   delete _ea_tmpdata;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_ASSESS):   quit;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   OPTION ERRORS = 20;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):    data WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "TRAIN";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl46_EMRANK;
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "TRAIN";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl46_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   run;
2479665    data EM_temp_assessMeta;
MPRINT(EM_DIAGRAM):    data EM_temp_assessMeta;
2479666    set EMWS8.Ensmbl46_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl46_CMeta_TRAIN;
2479667    where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST')
2479667  ! ;
MPRINT(EM_DIAGRAM):   where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION',
'ASSESS', 'COST');
2479668    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS8.ENSMBL46_CMETA_TRAIN.
      WHERE role in ('ASSESS', 'CLASSIFICATION', 'COST', 'DECISION', 'PREDICT', 'RESIDUAL');
NOTE: The data set WORK.EM_TEMP_ASSESSMETA has 8 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2479669    data EM_temp_assessdata;
MPRINT(EM_DIAGRAM):    data EM_temp_assessdata;
2479670    set EMWS8.Ensmbl46_VALIDATE(keep=
2479671    F_DepVar
2479672    I_DepVar
2479673    P_DepVar0
2479674    P_DepVar1
2479675    R_DepVar0
2479676    R_DepVar1
2479677    U_DepVar
2479678    _WARN_
2479679    DepVar
2479680    );
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl46_VALIDATE(keep= F_DepVar I_DepVar P_DepVar0 P_DepVar1
R_DepVar0 R_DepVar1 U_DepVar _WARN_ DepVar );
2479681    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: There were 1018 observations read from the data set EMWS8.META_VALIDATE.
NOTE: View EMWS8.ENSMBL46_VALIDATE.VIEW used (Total process time):
      real time           0.13 seconds
      cpu time            0.14 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.AUTONEURAL9_VALIDATE.
NOTE: There were 1018 observations read from the data set EMWS8.ENSMBL46_VALIDATE.
NOTE: The data set WORK.EM_TEMP_ASSESSDATA has 1018 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.15 seconds
      cpu time            0.15 seconds
 
 
MPRINT(EM_DIAGRAM):    proc freq data=EM_temp_assessdata noprint;
MPRINT(EM_DIAGRAM):   table I_DepVar*F_DepVar / out = WORK.Ensmbl46_0_5QMUZ nocol norow outpct;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.Ensmbl46_0_5QMUZ;
MPRINT(EM_DIAGRAM):   length _TYPE_ $10 DATAROLE TARGET $32 TARGETLABEL $200 FROM INTO $32
CORRECTTEXT $40 ;
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Outcome Type";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role";
MPRINT(EM_DIAGRAM):   label TARGET = "Target Variable";
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
MPRINT(EM_DIAGRAM):   label CORRECTTEXT = "Correct Text";
MPRINT(EM_DIAGRAM):   label CORRECT = "Correct";
MPRINT(EM_DIAGRAM):   set WORK.Ensmbl46_0_5QMUZ(rename=(F_DepVar=FROM I_DepVar=INTO));
MPRINT(EM_DIAGRAM):   retain _TYPE_ 'PREDICTION' DATAROLE "VALIDATE" TARGET "DepVar";
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   if FROM eq INTO then do;
MPRINT(EM_DIAGRAM):   CORRECT = 0;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Correct";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   CORRECT = 1;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Incorrect";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl46_EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl46_EMCLASSIFICATION WORK.Ensmbl46_0_5QMUZ;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   set WORK.Ensmbl46_0_5QMUZ;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT(drop=INTO FROM _TYPE_);
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   length MISC $12;
MPRINT(EM_DIAGRAM):   if FROM='1' and INTO='1' then MISC='TRUEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM='1' and INTO ne '1' then MISC='FALSENEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne '1' and INTO='1' then MISC='FALSEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne'1' and INTO ne '1' then MISC='TRUENEVENT';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.MISCREPORT nothreads;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc summary data=WORK.MISCREPORT NWAY;
MPRINT(EM_DIAGRAM):   output out=WORK.MISCCOUNT(drop=_FREQ_ _TYPE_) SUM=COUNT;
MPRINT(EM_DIAGRAM):   CLASS MISC;
MPRINT(EM_DIAGRAM):   VAR COUNT;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK.MISCCOUNT out=WORK.MISCREPORT(drop=_NAME_
_LABEL_);
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   ID MISC;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl46_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl46_EMEVENTREPORT WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data ASSESS_REPORTMETA;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl46_VariableSet;
MPRINT(EM_DIAGRAM):   where REPORT='Y';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emassmt.em_assess.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural9_DepVar_DM;
MPRINT(EM_DIAGRAM):   where _TYPE_="TARGET";
MPRINT(EM_DIAGRAM):   call symput('ASSMT_EVENT', strip(event));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):
MPRINT(EM_ASSESS):   data _ea_tmpdata;
MPRINT(EM_ASSESS):   set EM_temp_assessdata;
MPRINT(EM_ASSESS):   _tmpfreqvar_=1;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_CHECKEMSETINIT):   DATA _NULL_;
MPRINT(EM_CHECKEMSETINIT):   EM_SETINIT = 'N';
MPRINT(EM_CHECKEMSETINIT):   IF SYSPROD('PRODNUM50') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM448') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM102') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM103') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   CALL SYMPUT('EM_SETINIT', EM_SETINIT);
MPRINT(EM_CHECKEMSETINIT):   RUN;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Reading in reporting data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET ASSESS_REPORTMETA END = EOF;
MPRINT(EM_ASSESS):   IF TYPE = "C" OR UPCASE (LEVEL) IN ("NOMINAL", "BINARY" , "ORDINAL") THEN
DO;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMCTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTC" || LEFT (PUT (NUMCTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "C");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF UPCASE(NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMNTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTN" || LEFT (PUT (NUMNTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMNTOREPORT", NUMNTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMCTOREPORT", NUMCTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMTOREPORT", SUM (NUMNTOREPORT, NUMCTOREPORT));
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   PROC DMDB DATA = _ea_tmpdata VAROUT = VAROUT DMDBCAT = _D CLASSOUT =
_ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   CLASS F_DepVar ;
 
MPRINT(EM_ASSESS):   VAR P_DepVar1 _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_;
MPRINT(EM_ASSESS):   RUN ;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   PROC SORT DATA = _ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _auxeventname (keep = __event__) ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ...FLAG0_1 = ..... TARGET IS 0, 1 & EVENT = 1;
 
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   length __event__ $ 32;
MPRINT(EM_ASSESS):   RETAIN FLAG0_1 1 NUM1 . NUM0 . __event__ "_missing_" ;
 
MPRINT(EM_ASSESS):   SET _ASSMT_CLASSOUT END = EOF;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ....... LEVEL = BINARY OR NOMINAL OR ORDINAL;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   IF UPCASE(NAME) = UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   CUMFREQ + FREQUENCY;
MPRINT(EM_ASSESS):   IF LEVEL NE "." THEN DO;
MPRINT(EM_ASSESS):   N1 + 1;
MPRINT(EM_ASSESS):   IF (NRAW NE 0 AND NRAW NE 1) OR TYPE NE "N" OR "" > " " THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ......................... IF EVENT NE BLANK;
MPRINT(EM_ASSESS):   * ....................LEVEL IS CHAR VAR ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   IF UPCASE("1") = UPCASE(LEVEL) THEN DO;
MPRINT(EM_ASSESS):   NUM1 = FREQUENCY;
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", CRAW );
MPRINT(EM_ASSESS):   __event__ = craw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   ELSE do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", NRAW );
MPRINT(EM_ASSESS):   __event__ = nraw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF LAST.NAME THEN DO;
 
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * .............. IN NOMINAL CASE, NEED TO GROUP ALL '0' ;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   NUM0 = SUM (CUMFREQ, - NUM1);
MPRINT(EM_ASSESS):   IF NUM0 < 0 THEN NUM0 = 0;
MPRINT(EM_ASSESS):   IF NUM1 = . THEN NUM1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM0", NUM0 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM1", NUM1);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM1", NUM1 / CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM0", (CUMFREQ - NUM1) / CUMFREQ);
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN DO;
MPRINT(EM_ASSESS):   FLAG0_1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "C" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF "" = " " THEN DO;
MPRINT(EM_ASSESS):   IF "1" NE "1" THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "N" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ................... IF TYPE = N;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("FLAG0_1", FLAG0_1 );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................IF LAST.NAME ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ...............IF LEVEL NE '.' ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * .............. IF NAME = TARGET;
MPRINT(EM_ASSESS):   ELSE IF "" > " " AND UPCASE(NAME) = UPCASE("") THEN DO;
MPRINT(EM_ASSESS):   NUMDECISIONS + 1;
MPRINT(EM_ASSESS):   LEVEL = TRANSLATE (LEVEL, "_", "'", "_", '"');
MPRINT(EM_ASSESS):   CALL SYMPUTX ("D_LABEL" || LEFT (PUT (NUMDECISIONS, 3.)), LEVEL );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................... ELSE IF UPCASE;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   output _auxeventname;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMOBS", CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMDECISIONS", NUMDECISIONS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET VAROUT END = EOF;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) = UPCASE ("P_DepVar1") THEN DO;
MPRINT(EM_ASSESS):   IF N = 0 THEN DO;
MPRINT(EM_ASSESS):   PUT //// "          Warning: All posterior probabilities are missing
values ";
MPRINT(EM_ASSESS):   PUT ///;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("ALLMISS", 1);
MPRINT(EM_ASSESS):   STOP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("ALLMISS", 0);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB", MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB", MAX);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("DIFF", MAX - MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NMISSPROB", NMISS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF UPCASE (NAME) = UPCASE ("_tmpfreqvar_") THEN DO;
MPRINT(EM_ASSESS):   AUXMIN = MIN - INT (MIN);
MPRINT(EM_ASSESS):   AUXMAX = MAX - INT (MAX);
MPRINT(EM_ASSESS):   IF AUXMIN > 0 OR AUXMAX > 0 THEN CALL SYMPUTX ("USEWEIGHT", "Y");
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("USEWEIGHT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _ANY0;
MPRINT(EM_ASSESS):   SET _ea_tmpdata (KEEP = F_DepVar P_DepVar1 _tmpfreqvar_ );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................... No Formats;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF LEFT ( F_DepVar ) = "1" THEN NTARGET = 1;
MPRINT(EM_ASSESS):   ELSE NTARGET = 0;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Before proc summary of binary case;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC SUMMARY DATA = _ANY0 (KEEP = P_DepVar1 NTARGET _tmpfreqvar_ WHERE =
(NTARGET > . )) NWAY MISSING;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   CLASS P_DepVar1 ;
MPRINT(EM_ASSESS):   VAR NTARGET ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   OUTPUT OUT = ANYSUM (DROP = _TYPE_) MEAN = _MEANTARGET _MEANFREQVAR ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... Main Data Set Processing, Binary case;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK (KEEP = BASECAPC BASECAP __EVENT__ BASEEVENTS
BASEGAIN BASELIFT BASERESP BASERESPC BESTCAP BESTCAPC BESTGAIN BESTLIFT BESTLIFTC
BESTNUMEVENTS BESTRESP BESTRESPC BIN CBASELIFT C_LIFT C_P_CAPT_RESP C_P_RESP GAIN LIFT MAXPROB
MINPROB MNPROB NUMNONRESP NUMOBS NUMRESP PERCENTILE P_CAPT_RESP P_RESP ) WORK._TEMPSCOREDIST
(KEEP = BIN LOWERPROB UPPERPROB EVENTVALUE SCR_NUMEVENTS MODELSCORE SCR_NUMNONEVENTS RANGE
NUMOBSINGROUP PERCOBSINGROUP C_PERCOBSINGROUP SCR_P_EVENTS SCR_CP_EVENTS SCR_P_NONEVENTS
SCR_CP_NONEVENTS SCR_MNPROB SCR_MINPROB SCR_MAXPROB ) ;
 
MPRINT(EM_ASSESS):   SET ANYSUM END = EOF;
 
MPRINT(EM_ASSESS):   IF _N_ = 1 THEN SET _AUXEVENTNAME;
 
MPRINT(EM_ASSESS):   RETAIN MINPROB1 - MINPROB20 1 MAXPROB1 - MAXPROB20 0 MNPROB1 - MNPROB20 0
NUMOBS1 - NUMOBS20 0 NUMRESP1 - NUMRESP20 0 TRUEPOS1 - TRUEPOS100 0 TRUENEG1 - TRUENEG100 0
FALSEPOS1 - FALSEPOS100 0 FALSENEG1 - FALSENEG100 0 EVENTS1 - EVENTS100 NONEVENTS1 -
NONEVENTS100 0 FIRSTIN1 - FIRSTIN100 . LASTIN1 - LASTIN100 . RESPRATE 0.152259332 _NEVENTS 155
_NNONEVENTS 863 TARGET "NTARGET" ;
MPRINT(EM_ASSESS):   ARRAY MINPROBS (20) MINPROB1 - MINPROB20;
MPRINT(EM_ASSESS):   ARRAY MAXPROBS (20) MAXPROB1 - MAXPROB20;
MPRINT(EM_ASSESS):   ARRAY MNPROBS (20) MNPROB1 - MNPROB20;
MPRINT(EM_ASSESS):   ARRAY NUMOBSS (20) NUMOBS1 - NUMOBS20;
MPRINT(EM_ASSESS):   ARRAY NUMRESPS (20) NUMRESP1 - NUMRESP20;
MPRINT(EM_ASSESS):   ARRAY TRUEPOSX (100) TRUEPOS1 - TRUEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSEPOSX (100) FALSEPOS1 - FALSEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSENEGX (100) FALSENEG1 - FALSENEG100;
MPRINT(EM_ASSESS):   ARRAY TRUENEGX (100) TRUENEG1 - TRUENEG100;
MPRINT(EM_ASSESS):   ARRAY _EVENTS (100) EVENTS1 - EVENTS100;
MPRINT(EM_ASSESS):   ARRAY NONEVENTS (100) NONEVENTS1 - NONEVENTS100;
MPRINT(EM_ASSESS):   ARRAY FIRSTIN (100) FIRSTIN1 - FIRSTIN100;
MPRINT(EM_ASSESS):   ARRAY LASTIN (100) LASTIN1 - LASTIN100;
MPRINT(EM_ASSESS):   RETAIN SCR_MNPROB1 - SCR_MNPROB100 0 SCR_MINPROB1 - SCR_MINPROB100 1
SCR_MAXPROB1 - SCR_MAXPROB100 0;
MPRINT(EM_ASSESS):   ARRAY SCR_MNPROBS (100) SCR_MNPROB1 - SCR_MNPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MINPROBS (100) SCR_MINPROB1 - SCR_MINPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MAXPROBS (100) SCR_MAXPROB1 - SCR_MAXPROB100;
MPRINT(EM_ASSESS):   DROP SCR_MINPROB1 - SCR_MINPROB100 SCR_MAXPROB1 - SCR_MAXPROB100
SCR_MNPROB1 - SCR_MNPROB100 ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...... Area For 8 Financials ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF _MEANTARGET = . THEN _MEANTARGET = RESPRATE;
MPRINT(EM_ASSESS):   DROP N1 _K SUMWEIGHTS ;
MPRINT(EM_ASSESS):   SUMWEIGHTS = 1;
 
MPRINT(EM_ASSESS):   DO _K = 1 TO CEIL (_FREQ_);
MPRINT(EM_ASSESS):   IF _K = CEIL (_FREQ_) THEN DO;
MPRINT(EM_ASSESS):   IF _FREQ_ < CEIL (_FREQ_) THEN _WEIGHT = _FREQ_ - FLOOR (_FREQ_);
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   N1 + _WEIGHT;
MPRINT(EM_ASSESS):   NTARGET = _MEANTARGET ;
MPRINT(EM_ASSESS):   DECILE = MIN (20, CEIL (N1 * 20 / 1018));
MPRINT(EM_ASSESS):   MINPROBS ( DECILE) = MIN (MINPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MAXPROBS ( DECILE) = MAX (MAXPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MNPROBS ( DECILE) = SUM (MNPROBS ( DECILE), P_DepVar1 * _WEIGHT);
MPRINT(EM_ASSESS):   NUMOBSS ( DECILE) = NUMOBSS ( DECILE) + _WEIGHT;
MPRINT(EM_ASSESS):   NUMRESPS ( DECILE) = NUMRESPS ( DECILE) + _MEANTARGET * _WEIGHT;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ outside of do loop, Area for final ROC;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   RANKDELTA = (ROUND ( _FREQ_ ) + 1) / 2;
MPRINT(EM_ASSESS):   RANK = UNTIEDRANK + RANKDELTA;
MPRINT(EM_ASSESS):   DROP RANK ;
MPRINT(EM_ASSESS):   SUMRANK1 + RANK * ROUND (_MEANTARGET * _FREQ_, .0000001);
MPRINT(EM_ASSESS):   UNTIEDRANK + ROUND (_FREQ_, .00000001);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Area For ROC Curve;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DO _K = 1 TO 100;
MPRINT(EM_ASSESS):   IF P_DepVar1 * 100 >= _K THEN DO;
MPRINT(EM_ASSESS):   TRUEPOSX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   FALSEPOSX ( _K ) + _FREQ_ * (1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   TRUENEGX ( _K ) + _FREQ_ * ( 1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   FALSENEGX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   SLOT = MIN (MAX (CEIL (P_DepVar1 * 100), 1), 100) ;
MPRINT(EM_ASSESS):   DROP SLOT;
MPRINT(EM_ASSESS):   FIRSTIN ( SLOT ) = MIN ( FIRSTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   LASTIN ( SLOT ) = MAX ( LASTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   _EVENTS ( SLOT) = _EVENTS ( SLOT) + _FREQ_ * _MEANTARGET;
MPRINT(EM_ASSESS):   NONEVENTS ( SLOT) = NONEVENTS ( SLOT) + _FREQ_ * (1 - _MEANTARGET);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ START OF OUTDIST IN BINARY CASE MAIN DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   SCR_MNPROBS ( SLOT ) = SUM (SCR_MNPROBS (SLOT), P_DepVar1 * _FREQ_ );
MPRINT(EM_ASSESS):   SCR_MINPROBS ( SLOT ) = MIN (SCR_MINPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   SCR_MAXPROBS ( SLOT ) = MAX (SCR_MAXPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ End of Outdist in Binary case main DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   PUT //;
MPRINT(EM_ASSESS):   DO K = 1 TO 20;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LENGTH EVENTVALUE $ 32;
MPRINT(EM_ASSESS):   RETAIN EVENTVALUE "1" ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ......... Start of EOF area of BINARY processing of main data set ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SUMRANK1", SUMRANK1);
MPRINT(EM_ASSESS):   LENGTH DATAROLE $ 10;
MPRINT(EM_ASSESS):   RETAIN DATAROLE "VALIDATE" ;
MPRINT(EM_ASSESS):   RETAIN OVLMIN 0.0000305966 OVLMAX 0.9999999997 ;
MPRINT(EM_ASSESS):   DROP OVLMIN OVLMAX ;
MPRINT(EM_ASSESS):   C_NUMOBS = 0;
MPRINT(EM_ASSESS):   C_NUM_RESP = 0;
MPRINT(EM_ASSESS):   C_NUM_NONRESP = 0;
MPRINT(EM_ASSESS):   C_P_RESP = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   PREVIOUSPROFIT = 0;
MPRINT(EM_ASSESS):   MAXPROFIT = 0;
MPRINT(EM_ASSESS):   _KS_BIN_ = 0;
MPRINT(EM_ASSESS):   DROP _KS_BIN_;
MPRINT(EM_ASSESS):   AVGNUMRESP = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASERESP = 100 * RESPRATE;
MPRINT(EM_ASSESS):   BASERESPC = BASERESP;
MPRINT(EM_ASSESS):   BASECAP = 100 / 20;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................Start OF Gainschart = Outranks Area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = 0;
MPRINT(EM_ASSESS):   DO GROUP = 20 TO 1 BY -1;
 
MPRINT(EM_ASSESS):   BASECAPC + BASECAP;
MPRINT(EM_ASSESS):   PERCENTILE = GROUP * (100 / 20);
MPRINT(EM_ASSESS):   MINPROB = MINPROBS ( GROUP);
MPRINT(EM_ASSESS):   MAXPROB = MAXPROBS ( GROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB" || LEFT ( PUT (GROUP, 3.)), MINPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB" || LEFT ( PUT (GROUP, 3.)), MAXPROB);
MPRINT(EM_ASSESS):   NUMOBS = NUMOBSS ( GROUP);
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN MNPROB = MNPROBS ( GROUP) / NUMOBS;
MPRINT(EM_ASSESS):   ELSE MNPROB = .;
MPRINT(EM_ASSESS):   C_NUMOBS = SUM (NUMOBS, C_NUMOBS);
MPRINT(EM_ASSESS):   NUMRESP = NUMRESPS ( GROUP);
MPRINT(EM_ASSESS):   NUMNONRESP = NUMOBS - NUMRESP;
MPRINT(EM_ASSESS):   C_AVGNUM_RESP + AVGNUMRESP;
MPRINT(EM_ASSESS):   IF C_NUMOBS <= _NEVENTS THEN DO;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   BESTCAPC = C_NUMOBS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BASEEVENTS = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASENONEVENTS = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   FLAG + 1;
MPRINT(EM_ASSESS):   DROP FLAG;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = _NEVENTS - C_NUMOBS + NUMOBS;
MPRINT(EM_ASSESS):   IF FLAG > 1 THEN BESTNUMEVENTS = 0;
MPRINT(EM_ASSESS):   BESTCAPC = 100;
MPRINT(EM_ASSESS):   IF C_NUMOBS - _NEVENTS <= NUMOBS THEN DO;
MPRINT(EM_ASSESS):   BASEEVENTS = C_NUMOBS - _NEVENTS;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS - C_NUMOBS + _NEVENTS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BASEEVENTS = 0;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   BESTCAP = BESTNUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BESTLIFT = BESTNUMEVENTS / AVGNUMRESP;
MPRINT(EM_ASSESS):   C_BESTNUMEVENTS + BESTNUMEVENTS;
MPRINT(EM_ASSESS):   DROP C_BESTNUMEVENTS;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN BESTLIFTC = C_BESTNUMEVENTS / (_NEVENTS / 1018 *
C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE BESTLIFTC = .;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESP = BESTNUMEVENTS * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_RESP = NUMRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_NONRESP = NUMNONRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESP = .;
MPRINT(EM_ASSESS):   P_RESP = .;
MPRINT(EM_ASSESS):   P_NONRESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESPC = C_BESTNUMEVENTS * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   BESTGAIN = MAX (0, ((C_BESTNUMEVENTS / C_NUMOBS ) / ( AVGNUMRESP /
NUMOBS) - 1) * 100);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESPC = .;
MPRINT(EM_ASSESS):   BESTGAIN = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMNONRESP > 0 THEN ODDS = NUMRESP / NUMNONRESP;
MPRINT(EM_ASSESS):   ELSE ODDS = .;
MPRINT(EM_ASSESS):   C_NUM_RESP = SUM (C_NUM_RESP , NUMRESP );
MPRINT(EM_ASSESS):   C_NUM_NONRESP = SUM (C_NUM_NONRESP, NUMNONRESP );
MPRINT(EM_ASSESS):   IF C_NUM_NONRESP > 0 THEN C_ODDS = C_NUM_RESP / C_NUM_NONRESP;
MPRINT(EM_ASSESS):   ELSE C_ODDS = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   C_P_RESP = C_NUM_RESP * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   GAIN = ABS(100 * (((C_NUM_RESP / C_NUMOBS ) / (_NEVENTS / 1018)) - 1));
MPRINT(EM_ASSESS):   BASEGAIN = 100 * (( (C_AVGNUM_RESP / C_NUMOBS) / ( AVGNUMRESP / NUMOBS))
- 1);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   GAIN = .;
MPRINT(EM_ASSESS):   BASEGAIN = .;
MPRINT(EM_ASSESS):   C_P_RESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF BASEGAIN <= 0 THEN BASEGAIN = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = NUMRESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   P_CAPT_NONRESP = NUMNONRESP * 100 / ( 1018 - _NEVENTS);
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = C_NUM_RESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   C_P_CAPT_NONRESP = C_NUM_NONRESP * 100 / ( 1018 - _NEVENTS);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Area For Binned KS in Outranks area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _DIFFERENCE = C_P_CAPT_RESP - C_P_CAPT_NONRESP ;
MPRINT(EM_ASSESS):   IF _KS_BIN_ < _DIFFERENCE THEN DO;
MPRINT(EM_ASSESS):   _KS_BIN_ = _DIFFERENCE;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = MINPROB + (MAXPROB - MINPROB) / 2 ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LIFT = P_RESP * .01 / RESPRATE ;
MPRINT(EM_ASSESS):   C_LIFT = C_P_RESP * .01 / RESPRATE;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BASELIFT = AVGNUMRESP / ( RESPRATE * NUMOBS );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE BASELIFT = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN CBASELIFT = C_AVGNUM_RESP / (RESPRATE * C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE CBASELIFT = .;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ WITHIN DO LOOP FOR OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 + 1 - GROUP;
MPRINT(EM_ASSESS):   PERCENTILE = BIN * (100 / 20);
MPRINT(EM_ASSESS):   B_C_P_RESP = PERCENTILE;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPRANK ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................ END OF GAINSCHART = OUTRANKS AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFITGROUP" , MAXPROFITGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFIT" , MAXPROFIT );
MPRINT(EM_ASSESS):   KS_ABSDIFF = 0 ;
MPRINT(EM_ASSESS):   MINPRECTPR = 9999;
MPRINT(EM_ASSESS):   Y0 = 1 - RESPRATE;
MPRINT(EM_ASSESS):   Y1 = RESPRATE;
MPRINT(EM_ASSESS):   MAXMUTUAL = 0;
MPRINT(EM_ASSESS):   DROP MAXMUTUAL KSPROB Y0 Y1 KS_ABSDIFF MINPRECTPR;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .....................About to start Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................... Finished Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Outdist ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS96 - EVENTS100 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS96 - NONEVENTS100);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB96 -
SCR_MNPROB100) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB96 - SCR_MINPROB100) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB96 - SCR_MAXPROB100) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 20;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 19 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS91 - EVENTS95 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS91 - NONEVENTS95);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB91 -
SCR_MNPROB95) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB91 - SCR_MINPROB95) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB91 - SCR_MAXPROB95) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 19;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 18 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS86 - EVENTS90 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS86 - NONEVENTS90);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB86 -
SCR_MNPROB90) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB86 - SCR_MINPROB90) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB86 - SCR_MAXPROB90) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 18;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 17 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS81 - EVENTS85 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS81 - NONEVENTS85);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB81 -
SCR_MNPROB85) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB81 - SCR_MINPROB85) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB81 - SCR_MAXPROB85) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 17;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 16 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS76 - EVENTS80 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS76 - NONEVENTS80);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB76 -
SCR_MNPROB80) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB76 - SCR_MINPROB80) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB76 - SCR_MAXPROB80) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 16;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 15 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS71 - EVENTS75 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS71 - NONEVENTS75);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB71 -
SCR_MNPROB75) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB71 - SCR_MINPROB75) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB71 - SCR_MAXPROB75) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 15;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 14 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS66 - EVENTS70 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS66 - NONEVENTS70);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB66 -
SCR_MNPROB70) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB66 - SCR_MINPROB70) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB66 - SCR_MAXPROB70) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 14;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 13 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS61 - EVENTS65 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS61 - NONEVENTS65);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB61 -
SCR_MNPROB65) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB61 - SCR_MINPROB65) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB61 - SCR_MAXPROB65) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 13;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 12 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS56 - EVENTS60 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS56 - NONEVENTS60);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB56 -
SCR_MNPROB60) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB56 - SCR_MINPROB60) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB56 - SCR_MAXPROB60) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 12;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 11 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS51 - EVENTS55 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS51 - NONEVENTS55);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB51 -
SCR_MNPROB55) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB51 - SCR_MINPROB55) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB51 - SCR_MAXPROB55) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 11;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 10 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS46 - EVENTS50 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS46 - NONEVENTS50);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB46 -
SCR_MNPROB50) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB46 - SCR_MINPROB50) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB46 - SCR_MAXPROB50) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 10;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 9 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS41 - EVENTS45 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS41 - NONEVENTS45);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB41 -
SCR_MNPROB45) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB41 - SCR_MINPROB45) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB41 - SCR_MAXPROB45) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 9;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 8 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS36 - EVENTS40 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS36 - NONEVENTS40);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB36 -
SCR_MNPROB40) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB36 - SCR_MINPROB40) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB36 - SCR_MAXPROB40) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 8;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 7 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS31 - EVENTS35 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS31 - NONEVENTS35);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB31 -
SCR_MNPROB35) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB31 - SCR_MINPROB35) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB31 - SCR_MAXPROB35) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 7;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 6 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS26 - EVENTS30 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS26 - NONEVENTS30);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB26 -
SCR_MNPROB30) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB26 - SCR_MINPROB30) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB26 - SCR_MAXPROB30) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 6;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 5 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS21 - EVENTS25 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS21 - NONEVENTS25);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB21 -
SCR_MNPROB25) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB21 - SCR_MINPROB25) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB21 - SCR_MAXPROB25) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 5;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 4 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS16 - EVENTS20 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS16 - NONEVENTS20);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB16 -
SCR_MNPROB20) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB16 - SCR_MINPROB20) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB16 - SCR_MAXPROB20) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 4;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 3 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS11 - EVENTS15 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS11 - NONEVENTS15);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB11 -
SCR_MNPROB15) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB11 - SCR_MINPROB15) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB11 - SCR_MAXPROB15) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 3;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 2 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS6 - EVENTS10 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS6 - NONEVENTS10);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB6 -
SCR_MNPROB10) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB6 - SCR_MINPROB10) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB6 - SCR_MAXPROB10) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 2;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 1 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS1 - EVENTS5 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS1 - NONEVENTS5);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB1 - SCR_MNPROB5)
/ NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB1 - SCR_MINPROB5) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB1 - SCR_MAXPROB5) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 1;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSPROB" , PUT (KSPROB, 5.3 ) );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_PROB" , _KS_BIN_PROB );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_" , _KS_BIN_ / 100 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSDIFF" , KS_ABSDIFF );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PRECTPR" , PRECTPR );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXMUTUALPROB" , MAXMUTUALPROB);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LABEL __EVENT__ = "Event" DECILE = "Depth" BIN = "Bin" NUMOBS = "Number
of Observations" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * RUN for large data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST;
MPRINT(EM_ASSESS):   DELETE _AUXEVENTNAME;
MPRINT(EM_ASSESS):   QUIT;
 
MPRINT(EM_ASSESS):   OPTION NOCENTER LS = 95;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Report Vars Area.;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start OF Outdist Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPSCOREDIST;
MPRINT(EM_ASSESS):   RENAME MODELSCORE = SCORE UPPERPROB = UPPOSTERIOR SCR_CP_EVENTS =
CUMULATIVEPERCENTAGEOFEVENTS SCR_CP_NONEVENTS = CUMULATIVEPERCENTAGEOFNONEVENTS EVENTVALUE =
EVENT LOWERPROB = LOWPOSTERIOR NUMOBSINGROUP = N PERCOBSINGROUP = PERCENTAGE SCR_MINPROB =
_MINP_ SCR_MAXPROB = _MAXP_ SCR_MNPROB = _MEANP_ RANGE = P_LABEL C_PERCOBSINGROUP =
CUMULATIVEPERCENTAGE SCR_NUMEVENTS = NUMBEROFEVENTS SCR_NUMNONEVENTS = NUMBEROFNONEVENTS
SCR_P_EVENTS = PERCENTAGEOFEVENTS SCR_P_NONEVENTS = PERCENTAGEOFNONEVENTS ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... OUTDIST MODIFICATION LABEL AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL BIN = "Bin" N = "Number of Observations" P_LABEL = "Posterior
Probability Range" EVENT = "Event" LOWPOSTERIOR = "Lower Bound Posterior Probability"
PERCENTAGEOFEVENTS = "Percentage of Events" CUMULATIVEPERCENTAGEOFNONEVENTS = "Cumulative
Percentage of Nonevents" CUMULATIVEPERCENTAGE = "Cumulative Percentage" PERCENTAGEOFEVENTS =
"Percentage of Events" PERCENTAGEOFNONEVENTS = "Percentage of Nonevents"
CUMULATIVEPERCENTAGEOFEVENTS = "Cumulative Percentage of Events" UPPOSTERIOR = "Upper Bound
Posterior Probability" NUMBEROFEVENTS = "Number of Events" PERCENTAGE = "Percentage"
NUMBEROFNONEVENTS = "Number of Nonevents" _MEANP_ = "Mean Posterior Probability" _MINP_ = "Min
Posterior Probability" _MAXP_ = "Max Posterior Probability" SCORE = "Model Score" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   SET WORK._TEMPSCOREDIST (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........... END OF OUTDIST MODIFICATION;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start of OUTRANKS Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPRANK;
MPRINT(EM_ASSESS):   RENAME __EVENT__ = EVENT P_RESP = RESP C_P_CAPT_RESP = CAPC P_CAPT_RESP =
CAP NUMNONRESP = NUMNEVENT NUMRESP = NUMEVENT BASEEVENTS = BASENUMBEROFEVENTS BESTNUMEVENTS =
BESTNUMBEROFEVENTS MAXPROB = _MAXP_ MINPROB = _MINP_ CBASELIFT = BASELIFTC C_LIFT = LIFTC
MNPROB = _MEANP_ PERCENTILE = DECILE NUMOBS = N NUMEVENT = NUMBEROFEVENTS C_P_RESP = RESPC ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................. OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL _MAXP_ = "Max Posterior Probability" _MINP_ = "Min Posterior
Probability" _MEANP_ = "Mean Posterior Probability" BASECAP = "Baseline % Captured Response"
BASECAPC = "Baseline Cumulative % Captured Response" BASENUMBEROFEVENTS = "Baseline Number of
Events" BASEGAIN = "Baseline Gain" BASELIFT = "Baseline Lift" BASELIFTC = "Baseline Cumulative
Lift" BASERESP = "Baseline % Response" BASERESPC = "Baseline Cumulative % Response" BASELIFTC
= "Baseline Cumulative Lift" BESTCAP = "Best % Captured Response" BESTCAPC = "Best Cumulative
% Captured Response" BESTGAIN = "Best Gain" BESTRESP = "Best % Response" BESTRESPC = "Best
Cumulative % Response" BESTLIFT = "Best Lift" BESTLIFTC = "Best Cumulative Lift"
BESTNUMBEROFEVENTS = "Best Number of Events" CAP = "% Captured Response" CAPC = "Cumulative %
Captured Response" DECILE = "Depth" GAIN = "Gain" LIFT = "Lift" LIFTC = "Cumulative Lift"
NUMNEVENT = "Number of Nonevents" N = "Number of Observations" EVENT = "Event" RESPC =
"Cumulative % Response" NUMBEROFEVENTS = "Number of Events" RESP = "% Response" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK;
MPRINT(EM_ASSESS):   SET WORK._TEMPRANK (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   proc datasets lib=work nolist;
MPRINT(EM_ASSESS):   delete _ea_tmpdata;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_ASSESS):   quit;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   OPTION ERRORS = 20;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):    data WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "VALIDATE";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl46_EMRANK;
MPRINT(EM_DIAGRAM):   length target $32;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   length dataRole $20;
MPRINT(EM_DIAGRAM):   length EVENT $32;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl46_EMRANK WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "VALIDATE";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl46_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   length dataRole $20;
MPRINT(EM_DIAGRAM):   length EVENT $32;
MPRINT(EM_DIAGRAM):   length P_LABEL $9;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl46_EMSCOREDIST WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   run;
2483956    %let _cn = %sysfunc(getoption(CENTER));
2483957    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
2483958    proc print data=EMWS8.Ensmbl46_EMREPORTFIT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Ensmbl46_EMREPORTFIT noobs label;
2483959    var STAT LABEL TRAIN
2483960    VALIDATE
2483961    ;
MPRINT(EM_DIAGRAM):   var STAT LABEL TRAIN VALIDATE ;
2483962    by TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by TARGET TARGETLABEL;
2483963    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
2483964    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_fitstat_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Fit Statistics";
MPRINT(EM_DIAGRAM):   run;
2483965    run;
 
NOTE: There were 9 observations read from the data set EMWS8.ENSMBL46_EMREPORTFIT.
NOTE: The PROCEDURE PRINT printed page 1625.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2483966    title10;
MPRINT(EM_DIAGRAM):   title10;
2483967    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
2483968    proc sort data=EMWS8.Ensmbl46_EMCLASSIFICATION nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.Ensmbl46_EMCLASSIFICATION nothreads;
2483969    by DATAROLE TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET TARGETLABEL;
2483970    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS8.ENSMBL46_EMCLASSIFICATION.
NOTE: The data set EMWS8.ENSMBL46_EMCLASSIFICATION has 8 observations and 12 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2483971    %let _cn = %sysfunc(getoption(CENTER));
2483972    options nocenter;
MPRINT(EM_DIAGRAM):   options nocenter;
2483973    proc print data=EMWS8.Ensmbl46_EMCLASSIFICATION noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Ensmbl46_EMCLASSIFICATION noobs label;
2483974    var from into pct_row pct_col count percent
2483975    ;
MPRINT(EM_DIAGRAM):   var from into pct_row pct_col count percent ;
2483976    by DATAROLE TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET TARGETLABEL;
2483977    label FROM = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,     NOQUOTE))";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
2483978    label INTO = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcome_vlabel ,    NOQUOTE))";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
2483979    label PCT_ROW = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetpct_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
2483980    label PCT_COL = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcomepct_vlabel , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
2483981    label COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel ,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
2483982    label PERCENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_totalpct_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
2483983    where _TYPE_='PREDICTION';
MPRINT(EM_DIAGRAM):   where _TYPE_='PREDICTION';
2483984    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
2483985    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_classification_title    , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Classification Table";
MPRINT(EM_DIAGRAM):   run;
2483986    run;
 
NOTE: There were 8 observations read from the data set EMWS8.ENSMBL46_EMCLASSIFICATION.
      WHERE _TYPE_='PREDICTION';
NOTE: The PROCEDURE PRINT printed page 1626.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2483987    title9;
MPRINT(EM_DIAGRAM):   title9;
2483988    title10;
MPRINT(EM_DIAGRAM):   title10;
2483989    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
2483990    %let _cn = %sysfunc(getoption(CENTER));
2483991    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
2483992    data EMWS8.Ensmbl46_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl46_EMEVENTREPORT;
2483993    length DATAROLE TARGET $32 TARGETLABEL $200 FALSENEVENT TRUENEVENT FALSEEVENT
2483993  ! TRUEEVENT 8;
MPRINT(EM_DIAGRAM):   length DATAROLE TARGET $32 TARGETLABEL $200 FALSENEVENT TRUENEVENT
FALSEEVENT TRUEEVENT 8;
2483994    label DATAROLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
2483994  !  TARGET = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,      NOQUOTE))"
2483994  ! TARGETLABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel, NOQUOTE))"
2483994  ! FALSEEVENT
2483995    = "%sysfunc(sasmsg(sashelp.dmine, rpt_falseevent_vlabel ,  NOQUOTE))" FALSENEVENT =
2483995  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_falsenevent_vlabel , NOQUOTE))" TRUEEVENT =
2483995  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_trueevent_vlabel ,   NOQUOTE))" TRUENEVENT =
2483996       "%sysfunc(sasmsg(sashelp.dmine, rpt_truenevent_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role" TARGET = "Target" TARGETLABEL = "Target
Label" FALSEEVENT = "False Positive" FALSENEVENT = "False Negative" TRUEEVENT = "True
Positive" TRUENEVENT = "True Negative";
2483997    FALSEEVENT=0;
MPRINT(EM_DIAGRAM):   FALSEEVENT=0;
2483998    FALSENEVENT=0;
MPRINT(EM_DIAGRAM):   FALSENEVENT=0;
2483999    TRUEEVENT=0;
MPRINT(EM_DIAGRAM):   TRUEEVENT=0;
2484000    TRUENEVENT=0;
MPRINT(EM_DIAGRAM):   TRUENEVENT=0;
2484001    set EMWS8.Ensmbl46_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl46_EMEVENTREPORT;
2484002    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set EMWS8.ENSMBL46_EMEVENTREPORT.
NOTE: The data set EMWS8.ENSMBL46_EMEVENTREPORT has 2 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2484003    proc print data=EMWS8.Ensmbl46_EMEVENTREPORT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Ensmbl46_EMEVENTREPORT noobs label;
2484004    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
2484005    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_eventtable_title    , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Event Classification Table";
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL;
MPRINT(EM_DIAGRAM):   run;
2484006    by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL;
2484007    run;
 
NOTE: There were 2 observations read from the data set EMWS8.ENSMBL46_EMEVENTREPORT.
NOTE: The PROCEDURE PRINT printed page 1627.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2484008    title10;
MPRINT(EM_DIAGRAM):   title10;
2484009    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
2484010    proc datasets library=EMWS8 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS8 nolist;
2484011    modify Ensmbl46_EMRANK;
MPRINT(EM_DIAGRAM):   modify Ensmbl46_EMRANK;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
2484012    label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
2484013    label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
2484013  ! ;
MPRINT(EM_DIAGRAM):   run;
2484014    run;
 
NOTE: MODIFY was successful for EMWS8.ENSMBL46_EMRANK.DATA.
2484015    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.10 seconds
      cpu time            0.09 seconds
 
 
2484016    %let _cn = %sysfunc(getoption(CENTER));
2484017    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
2484018    proc print data=EMWS8.Ensmbl46_EMRANK label noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Ensmbl46_EMRANK label noobs;
2484019    var
2484020    decile gain lift liftc resp respc N _meanP_;
MPRINT(EM_DIAGRAM):   var decile gain lift liftc resp respc N _meanP_;
2484021    by
2484022    notsorted DATAROLE
2484023    notsorted TARGET
2484024    notsorted TARGETLABEL
2484025    ;
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL ;
2484026    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
2484027    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_scoreranking_title , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Assessment Score Rankings";
MPRINT(EM_DIAGRAM):   run;
2484028    run;
 
NOTE: There were 40 observations read from the data set EMWS8.ENSMBL46_EMRANK.
NOTE: The PROCEDURE PRINT printed page 1628.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2484029    title10;
MPRINT(EM_DIAGRAM):   title10;
2484030    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
2484031    proc datasets library=EMWS8 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS8 nolist;
2484032    modify Ensmbl46_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   modify Ensmbl46_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
2484033    label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,
2484033  ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
2484034    label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
2484034  ! ;
MPRINT(EM_DIAGRAM):   run;
2484035    run;
 
NOTE: MODIFY was successful for EMWS8.ENSMBL46_EMSCOREDIST.DATA.
2484036    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.10 seconds
      cpu time            0.09 seconds
 
 
MPRINT(EM_DIAGRAM):    options nocenter;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Ensmbl46_EMSCOREDIST label noobs;
MPRINT(EM_DIAGRAM):   var p_label numberOfEvents numberOfNonEvents _meanp_ percentage;
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL ;
MPRINT(EM_DIAGRAM):   where TARGET in( "DepVar" );
MPRINT(EM_DIAGRAM):   title9 ' ';
MPRINT(EM_DIAGRAM):   title10 "Assessment Score Distribution";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   title10;
MPRINT(EM_DIAGRAM):   options NOCENTER;
MPRINT(EM_DIAGRAM):   proc printto;
MPRINT(EM_DIAGRAM):   run;
