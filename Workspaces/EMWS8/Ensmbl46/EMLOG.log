*------------------------------------------------------------*
User:                Lukas Fahr
Date:                20. April 2016
Time:                17.40 Uhr
Site:                70107571
Platform:            X64_7PRO
Maintenance Release: 9.03.01M2P081512
EM Version:          12.1
* 
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "20. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17.40 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Training Log
Date:                20. April 2016
Time:                17.40 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O38NNZZY
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl46\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O38NNZZY new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOG
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl46\EMLOG.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "20. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17.40 Uhr" );
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                Lukas Fahr";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Site:                70107571";
MPRINT(EM_DIAGRAM):   put "Platform:            X64_7PRO";
MPRINT(EM_DIAGRAM):   put "Maintenance Release: 9.03.01M2P081512";
MPRINT(EM_DIAGRAM):   put "EM Version:          12.1";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl46\EMTRAIN.log" encoding="UTF-8" NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _LOGIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl46\EMSCORE.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl46\EMREPORT.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl46\EMOUTPUT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "20. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17.40 Uhr" );
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                Lukas Fahr";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl46\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl46\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl46\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_
'C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl46\EMRUNSTATUS.xml' encoding="UTF-8"
NOBOM;
(FREQ=(WHERE='ROLE = "FREQ"' DEFAULT='Y' RULE=(RULE1=(DESCRIPTION='USEATMOST1FREQ'
VALUES=(VALUE1='Y' )[298511] MAX=1 EXCEEDMAXVALUE='' )[298515] )[298509]
VALIDCHOICES=(CHOICE1='Y' )[298513] )[298797] INPUTREJECT=(WHERE='ROLE in("INPUT",
"REJECTED")' DEFAULT='D' VALIDCHOICES=(CHOICE1='D' )[298519]
RULE=(RULE1=(DESCRIPTION='USEATLEAST1INPUTREJECT' WHERE='(ROLE = "INPUT" and USE in("Y" "D"))
or (ROLE = "REJECTED" and USE = "Y")' MIN=. )[298523] )[298521] )[298517] TARGET=(WHERE='ROLE
= "TARGET"' DEFAULT='Y' VALIDCHOICES=(CHOICE1='Y' CHOICE2='N' )[298527]
RULE=(RULE1=(DESCRIPTION='METADATA.USE1TARGET' VALUES=(VALUE1='Y' )[298533] MIN=1 MAX=1
EXCEEDMAXVALUE='N' )[298531] )[298529] )[298525] )[298507]
2461158    proc freq data=EMWS8.Ensmbl46_VariableSet noprint;
MPRINT(EM_DIAGRAM):    proc freq data=EMWS8.Ensmbl46_VariableSet noprint;
2461159    table ROLE*LEVEL/out=WORK.Ensmbl46META;
MPRINT(EM_DIAGRAM):   table ROLE*LEVEL/out=WORK.Ensmbl46META;
2461160    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.ENSMBL46_VARIABLESET.
NOTE: The data set WORK.ENSMBL46META has 5 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2461161    proc print data=WORK.Ensmbl46META label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.Ensmbl46META label noobs;
2461162    var ROLE LEVEL COUNT;
MPRINT(EM_DIAGRAM):   var ROLE LEVEL COUNT;
2461163    label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL =
2461163  ! "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT =
2461163  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label ROLE = "Role" LEVEL = "Measurement Level" COUNT = "Frequency
Count";
2461164    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
2461165    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Variable Summary";
MPRINT(EM_DIAGRAM):   run;
2461166    run;
 
NOTE: There were 5 observations read from the data set WORK.ENSMBL46META.
NOTE: The PROCEDURE PRINT printed page 2050.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2461167    title10;
MPRINT(EM_DIAGRAM):   title10;
2461168    %let EMNORLEN = %DMNORLEN;
MPRINT(EM_DIAGRAM):
EMWS8.AutoNeural9_TRAIN EMWS8.AutoNeural9_TRAIN
EMWS8.AutoNeural9_TRAIN EMWS8.AutoNeural9_TRAIN EMWS8 AutoNeural9_TRAIN
EMWS8.AutoNeural9_TRAIN EMWS8.AutoNeural9_TRAIN
EMWS8.AutoNeural9_TRAIN EMWS8.AutoNeural9_TRAIN EMWS8 AutoNeural9_TRAIN
MPRINT(EM_DIAGRAM):    proc dmdb data=EMWS8.AutoNeural9_TRAIN
classout=WORK._DMDBCLASSTARGET(keep=NAME NRAW CRAW LEVEL FREQUENCY NMISSPERCENT);
MPRINT(EM_DIAGRAM):   class DepVar(DESC) ;
MPRINT(EM_DIAGRAM):   run;
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _INIT >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _term >>
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set WORK._DMDBCLASSTARGET;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   if _N_=1 then call symput('_newevent', strip(LEVEL));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK._DMDBCLASSTARGET out=_TEMPCLASS(keep=LEVEL FREQUENCY
NMISSPERCENT rename=(LEVEL=DepVar));
MPRINT(EM_DIAGRAM):   by LEVEL;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _TEMPCLASS;
MPRINT(EM_DIAGRAM):   set _TEMPCLASS;
MPRINT(EM_DIAGRAM):   NMISSPERCENT= NMISSPERCENT/100;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.AutoNeural9_DepVar_DD out=_sortedDecdata;
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   merge _TEMPCLASS(in=_a) _sortedDecdata(in=_b);
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   if (_a and ^_b) or (^_a and _b) then call symput('_emresetDec', '1');
MPRINT(EM_DIAGRAM):   run;
2461197    data WORK.Ensmbl46_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS ORDER);
MPRINT(EM_DIAGRAM):    data WORK.Ensmbl46_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS
ORDER);
2461198    length ORDER $20;
MPRINT(EM_DIAGRAM):   length ORDER $20;
2461199    label VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel,  NOQUOTE))"
2461199  ! EVENT = "%sysfunc(sasmsg(sashelp.dmine, assmt_event_vlabel, NOQUOTE))" NUMLEVELS =
2461199  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_numcat_vlabel, NOQUOTE))" LEVEL =
2461200       "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" ORDER =
2461200  ! "%sysfunc(sasmsg(sashelp.dmine, meta_order_vlabel, NOQUOTE))" LABEL =
2461200  ! "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label VARIABLE = "Target" EVENT = "Event" NUMLEVELS = "Number of Levels"
LEVEL = "Measurement Level" ORDER = "Order" LABEL = "Label";
2461201    set EMWS8.AUTONEURAL9_DEPVAR_DM( where=(_TYPE_="TARGET"));
MPRINT(EM_DIAGRAM):   set EMWS8.AUTONEURAL9_DEPVAR_DM( where=(_TYPE_="TARGET"));
2461202    NumLevels=2;
MPRINT(EM_DIAGRAM):   NumLevels=2;
2461203    select(upcase(ORDER));
MPRINT(EM_DIAGRAM):   select(upcase(ORDER));
2461204    when('DESC') ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   when('DESC') ORDER = 'Descending';
2461205    when('ASC') ORDER = 'Ascending';
MPRINT(EM_DIAGRAM):   when('ASC') ORDER = 'Ascending';
2461206    when('FMTDESC') ORDER = 'Formatted Descending';
MPRINT(EM_DIAGRAM):   when('FMTDESC') ORDER = 'Formatted Descending';
2461207    when('FMTASC') ORDER = 'Formatted Ascending';
MPRINT(EM_DIAGRAM):   when('FMTASC') ORDER = 'Formatted Ascending';
2461208    otherwise ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   otherwise ORDER = 'Descending';
2461209    end;
MPRINT(EM_DIAGRAM):   end;
2461210    output;
MPRINT(EM_DIAGRAM):   output;
2461211    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL9_DEPVAR_DM.
      WHERE _TYPE_='TARGET';
NOTE: The data set WORK.ENSMBL46_EVENT has 1 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2461212    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
2461213    proc print data=WORK.Ensmbl46_EVENT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=WORK.Ensmbl46_EVENT noobs label;
2461214    var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
MPRINT(EM_DIAGRAM):   var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
2461215    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
2461216    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_modelEvent_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Model Events";
MPRINT(EM_DIAGRAM):   run;
2461217    run;
 
NOTE: There were 1 observations read from the data set WORK.ENSMBL46_EVENT.
NOTE: The PROCEDURE PRINT printed page 2051.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2461218    title10;
MPRINT(EM_DIAGRAM):   title10;
"No decisions defined for target "DepVar"."
2461219    proc print data = EMWS8.AutoNeural9_DepVar_DM noobs label;
MPRINT(EM_DIAGRAM):    proc print data = EMWS8.AutoNeural9_DepVar_DM noobs label;
2461220    var _type_ variable label;
MPRINT(EM_DIAGRAM):   var _type_ variable label;
2461221    where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR', 'DECPRIOR');
MPRINT(EM_DIAGRAM):   where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR',
'DECPRIOR');
2461222    label _TYPE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_type_vlabel,     NOQUOTE))"
2461222  ! VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))" LABEL =
2461222  ! "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Type" VARIABLE = "Variable" LABEL = "Label";
2461223    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
2461224    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_predDecVars_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Predicted and decision variables";
MPRINT(EM_DIAGRAM):   run;
2461225    run;
 
NOTE: There were 7 observations read from the data set EMWS8.AUTONEURAL9_DEPVAR_DM.
      WHERE _type_ not in ('DATAPRIOR', 'DECISION', 'DECPRIOR', 'MATRIX', 'TRAINPRIOR');
NOTE: The PROCEDURE PRINT printed page 2052.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2461226    title10;
MPRINT(EM_DIAGRAM):   title10;
2461227    %let groupid =;
2461228    %let endGroupid =;
2461229    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
2461230    set EMWS8.AutoNeural9_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural9_EMINFO;
2461231    where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
2461231  ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
2461232    if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
2461233    else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
2461234    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.AUTONEURAL9_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2461235    %let groupid =;
2461236    %let endGroupid =;
2461237    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
2461238    set EMWS8.AutoNeural11_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_EMINFO;
2461239    where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
2461239  ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
2461240    if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
2461241    else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
2461242    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.AUTONEURAL11_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2461243    %let groupid =;
2461244    %let endGroupid =;
2461245    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
2461246    set EMWS8.AutoNeural12_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural12_EMINFO;
2461247    where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
2461247  ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
2461248    if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
2461249    else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
2461250    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.AUTONEURAL12_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2461251    %let groupid =;
2461252    %let endGroupid =;
2461253    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
2461254    set EMWS8.AutoNeural7_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural7_EMINFO;
2461255    where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
2461255  ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
2461256    if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
2461257    else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
2461258    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.AUTONEURAL7_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2461259    %let groupid =;
2461260    %let endGroupid =;
2461261    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
2461262    set EMWS8.AutoNeural10_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_EMINFO;
2461263    where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
2461263  ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
2461264    if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
2461265    else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
2461266    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.AUTONEURAL10_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2461267    data WORK.Ensmbl46;
MPRINT(EM_DIAGRAM):    data WORK.Ensmbl46;
2461268    length NodeId $32 Model $64;
MPRINT(EM_DIAGRAM):   length NodeId $32 Model $64;
2461269    label Nodeid = "%sysfunc(sasmsg(sashelp.dmine, rpt_nodeId_vlabel,  NOQUOTE))" Model
2461269  ! = "%sysfunc(sasmsg(sashelp.dmine, rpt_modeltype,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label Nodeid = "Node Id" Model = "rpt_modeltype";
2461270    nodeid="AUTONEURAL9";
MPRINT(EM_DIAGRAM):   nodeid="AUTONEURAL9";
2461271    model="AutoNeural";
MPRINT(EM_DIAGRAM):   model="AutoNeural";
2461272    output;
MPRINT(EM_DIAGRAM):   output;
2461273    nodeid="AUTONEURAL11";
MPRINT(EM_DIAGRAM):   nodeid="AUTONEURAL11";
2461274    model="AutoNeural";
MPRINT(EM_DIAGRAM):   model="AutoNeural";
2461275    output;
MPRINT(EM_DIAGRAM):   output;
2461276    nodeid="AUTONEURAL12";
MPRINT(EM_DIAGRAM):   nodeid="AUTONEURAL12";
2461277    model="AutoNeural";
MPRINT(EM_DIAGRAM):   model="AutoNeural";
2461278    output;
MPRINT(EM_DIAGRAM):   output;
2461279    nodeid="AUTONEURAL7";
MPRINT(EM_DIAGRAM):   nodeid="AUTONEURAL7";
2461280    model="AutoNeural";
MPRINT(EM_DIAGRAM):   model="AutoNeural";
2461281    output;
MPRINT(EM_DIAGRAM):   output;
2461282    nodeid="AUTONEURAL10";
MPRINT(EM_DIAGRAM):   nodeid="AUTONEURAL10";
2461283    model="AutoNeural";
MPRINT(EM_DIAGRAM):   model="AutoNeural";
2461284    output;
MPRINT(EM_DIAGRAM):   output;
2461285    ;
MPRINT(EM_DIAGRAM):   ;
2461286    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK.ENSMBL46 has 5 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2461287    title;
MPRINT(EM_DIAGRAM):   title;
2461288    proc print data=WORK.Ensmbl46 label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.Ensmbl46 label noobs;
2461289    title9 "%sysfunc(sasmsg(sashelp.dmine, rpt_combinemodels_title,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   title9 "Imported Models to be Combined";
2461290    title10 "Probability Function: Maximum";
MPRINT(EM_DIAGRAM):   title10 "Probability Function: Maximum";
MPRINT(EM_DIAGRAM):   run;
2461291    run;
 
NOTE: There were 5 observations read from the data set WORK.ENSMBL46.
NOTE: The PROCEDURE PRINT printed page 2053.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2461292    title9;
MPRINT(EM_DIAGRAM):   title9;
2461293    title10;
MPRINT(EM_DIAGRAM):   title10;
2461294    data WORK.M2A1RTNX;
MPRINT(EM_DIAGRAM):    data WORK.M2A1RTNX;
2461295    set WORK.M2A1RTNX;
MPRINT(EM_DIAGRAM):   set WORK.M2A1RTNX;
2461296    where NAME = "DepVar";
MPRINT(EM_DIAGRAM):   where NAME = "DepVar";
2461297    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.M2A1RTNX.
      WHERE NAME='DepVar';
NOTE: The data set WORK.M2A1RTNX has 1 observations and 22 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2461298    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------* ;
2461299    * EM: DMDBClass Macro ;
MPRINT(EM_DIAGRAM):   * EM: DMDBClass Macro ;
2461300    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
2461301    %macro DMDBClass;
2461302        DepVar(DESC)
2461303    %mend DMDBClass;
2461304    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
2461305    * EM: DMDBVar Macro ;
MPRINT(EM_DIAGRAM):   * EM: DMDBVar Macro ;
2461306    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
2461307    %macro DMDBVar;
2461308
2461309    %mend DMDBVar;
2461310    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2461311    * EM: Create DMDB;
MPRINT(EM_DIAGRAM):   * EM: Create DMDB;
2461312    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2461313    proc dmdb batch data=EMWS8.AutoNeural9_TRAIN
2461314    dmdbcat=WORK.EM_DMDB
2461315    maxlevel = 513
2461316    ;
MPRINT(EM_DIAGRAM):   proc dmdb batch data=EMWS8.AutoNeural9_TRAIN dmdbcat=WORK.EM_DMDB
maxlevel = 513 ;
2461317    class %DMDBClass;
MPRINT(EM_DIAGRAM):   class
MPRINT(DMDBCLASS):   DepVar(DESC)
MPRINT(EM_DIAGRAM):  ;
2461318    target
2461319    DepVar
2461320    ;
MPRINT(EM_DIAGRAM):   target DepVar ;
2461321    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Records processed = 2374   Memory used = 511K.
NOTE: There were 2374 observations read from the data set EMWS8.PART_TRAIN.
NOTE: View EMWS8.AUTONEURAL9_TRAIN.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.03 seconds
 
NOTE: There were 2374 observations read from the data set EMWS8.META_TRAIN.
NOTE: There were 2374 observations read from the data set EMWS8.AUTONEURAL9_TRAIN.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.06 seconds
      cpu time            0.04 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *--- end code ---*;
2461322    quit;
2461323    *--- end code ---*;
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "20. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17.40 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                20. April 2016
Time:                17.40 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O3KZARXE
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl46\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O3KZARXE new;
MPRINT(EM_DIAGRAM):   run;
2461425    filename emflow
2461425  ! "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl46\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl46\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl46: Scoring AUTONEURAL9_TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2461426    *------------------------------------------------------------*;
2461427    * Ensmbl46: Scoring AUTONEURAL9_TRAIN data;
2461428    *------------------------------------------------------------*;
2461429    data EMWS8.Ensmbl46_TRAIN
2461430    / view=EMWS8.Ensmbl46_TRAIN
2461431    ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl46_TRAIN / view=EMWS8.Ensmbl46_TRAIN ;
2461432    set EMWS8.AutoNeural9_TRAIN
2461433    ;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural9_TRAIN ;
2461434    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file
      C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl46\EMFLOWSCORE.sas.
2461435   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2461436   +* Ensmbl46: Combine model for DepVar;
MPRINT(EM_DIAGRAM):   * Ensmbl46: Combine model for DepVar;
2461437   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2461438   +* Ensmbl46: Scoring Code of model 1 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl46: Scoring Code of model 1 of 5;
2461439   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2461440   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2461441   +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
2461442   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
2461443   +* NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
2461444   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2461445   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2461446   +* TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
2461447   +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
2461448   +* NODE: Stat;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
2461449   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2461450   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2461451   +* TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
2461452   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
2461453   +* NODE: Filter;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
2461454   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2461455   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2461456   +* TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
2461457   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
2461458   +* NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
2461459   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2461460   +
2461461   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
2461462   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
2461462  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
2461463   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
2461464   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
2461465   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
2461466   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
2461467   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
2461468   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2461469   +* TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
2461470   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
2461471   +* NODE: Trans;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
2461472   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2461473   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2461474   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
2461475   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2461476   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
2461477   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
2461478   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
2461479   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2461480   +* TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
2461481   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
2461482   +* NODE: Part;
MPRINT(EM_DIAGRAM):   * NODE: Part;
2461483   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2461484   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2461485   +* TOOL: Metadata Node;
MPRINT(EM_DIAGRAM):   * TOOL: Metadata Node;
2461486   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
2461487   +* NODE: Meta;
MPRINT(EM_DIAGRAM):   * NODE: Meta;
2461488   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2461489   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2461490   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
2461491   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2461492   +* NODE: AutoNeural9;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural9;
2461493   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2461494   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2461495   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2461496   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2461497   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2461498   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2461499   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2461500   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2461501   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2461502   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2461503   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2461504   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2461505   +LENGTH _WARN_ $4
2461506   +      F_DepVar  $ 12
2461507   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2461508   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2461509   +
2461510   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2461511   +
2461512   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2461513   +
2461514   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2461515   +
2461516   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2461517   +
2461518   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2461519   +
2461520   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2461521   +
2461522   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2461523   +
2461524   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2461525   +
2461526   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2461527   +
2461528   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2461529   +
2461530   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2461531   +
2461532   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2461533   +
2461534   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2461535   +
2461536   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2461537   +
2461538   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2461539   +
2461540   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2461541   +
2461542   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2461543   +
2461544   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2461545   +
2461546   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2461547   +
2461548   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2461549   +
2461550   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2461551   +
2461552   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2461553   +
2461554   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2461555   +
2461556   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2461557   +
2461558   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2461559   +
2461560   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2461561   +
2461562   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2461563   +
2461564   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2461565   +
2461566   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2461567   +
2461568   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2461569   +
2461570   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2461571   +
2461572   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2461573   +
2461574   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2461575   +
2461576   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2461577   +
2461578   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2461579   +
2461580   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2461581   +
2461582   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2461583   +
2461584   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2461585   +
2461586   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2461587   +
2461588   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2461589   +
2461590   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2461591   +
2461592   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2461593   +
2461594   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2461595   +
2461596   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2461597   +
2461598   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2461599   +
2461600   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2461601   +
2461602   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2461603   +
2461604   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2461605   +
2461606   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2461607   +
2461608   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2461609   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2461610   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2461611   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2461612   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2461613   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2461614   +end;
MPRINT(EM_DIAGRAM):   end;
2461615   +else do;
MPRINT(EM_DIAGRAM):   else do;
2461616   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2461617   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2461618   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2461619   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2461620   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2461621   +   end;
MPRINT(EM_DIAGRAM):   end;
2461622   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2461623   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2461624   +   end;
MPRINT(EM_DIAGRAM):   end;
2461625   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2461626   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2461627   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2461628   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2461629   +   end;
MPRINT(EM_DIAGRAM):   end;
2461630   +end;
MPRINT(EM_DIAGRAM):   end;
2461631   +
2461632   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2461633   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2461634   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2461635   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2461636   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2461637   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2461638   +end;
MPRINT(EM_DIAGRAM):   end;
2461639   +else do;
MPRINT(EM_DIAGRAM):   else do;
2461640   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2461641   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2461642   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2461643   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2461644   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2461645   +   end;
MPRINT(EM_DIAGRAM):   end;
2461646   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2461647   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2461648   +   end;
MPRINT(EM_DIAGRAM):   end;
2461649   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2461650   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2461651   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2461652   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2461653   +   end;
MPRINT(EM_DIAGRAM):   end;
2461654   +end;
MPRINT(EM_DIAGRAM):   end;
2461655   +
2461656   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2461657   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2461658   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2461659   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2461660   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2461661   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2461662   +end;
MPRINT(EM_DIAGRAM):   end;
2461663   +else do;
MPRINT(EM_DIAGRAM):   else do;
2461664   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2461665   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2461666   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2461667   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2461668   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2461669   +   end;
MPRINT(EM_DIAGRAM):   end;
2461670   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2461671   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2461672   +   end;
MPRINT(EM_DIAGRAM):   end;
2461673   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2461674   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2461675   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2461676   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2461677   +   end;
MPRINT(EM_DIAGRAM):   end;
2461678   +end;
MPRINT(EM_DIAGRAM):   end;
2461679   +
2461680   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2461681   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2461682   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2461683   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2461684   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2461685   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2461686   +end;
MPRINT(EM_DIAGRAM):   end;
2461687   +else do;
MPRINT(EM_DIAGRAM):   else do;
2461688   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2461689   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2461690   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2461691   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2461692   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2461693   +   end;
MPRINT(EM_DIAGRAM):   end;
2461694   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2461695   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2461696   +   end;
MPRINT(EM_DIAGRAM):   end;
2461697   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2461698   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2461699   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2461700   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2461701   +   end;
MPRINT(EM_DIAGRAM):   end;
2461702   +end;
MPRINT(EM_DIAGRAM):   end;
2461703   +
2461704   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2461705   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2461706   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2461707   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2461708   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2461709   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2461710   +end;
MPRINT(EM_DIAGRAM):   end;
2461711   +else do;
MPRINT(EM_DIAGRAM):   else do;
2461712   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2461713   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2461714   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2461715   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2461716   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2461717   +   end;
MPRINT(EM_DIAGRAM):   end;
2461718   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2461719   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2461720   +   end;
MPRINT(EM_DIAGRAM):   end;
2461721   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2461722   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2461723   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2461724   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2461725   +   end;
MPRINT(EM_DIAGRAM):   end;
2461726   +end;
MPRINT(EM_DIAGRAM):   end;
2461727   +
2461728   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2461729   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2461730   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2461731   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2461732   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2461733   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2461734   +end;
MPRINT(EM_DIAGRAM):   end;
2461735   +else do;
MPRINT(EM_DIAGRAM):   else do;
2461736   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2461737   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2461738   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2461739   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2461740   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2461741   +   end;
MPRINT(EM_DIAGRAM):   end;
2461742   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2461743   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2461744   +   end;
MPRINT(EM_DIAGRAM):   end;
2461745   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2461746   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2461747   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2461748   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2461749   +   end;
MPRINT(EM_DIAGRAM):   end;
2461750   +end;
MPRINT(EM_DIAGRAM):   end;
2461751   +
2461752   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2461753   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2461754   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2461755   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2461756   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2461757   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2461758   +end;
MPRINT(EM_DIAGRAM):   end;
2461759   +else do;
MPRINT(EM_DIAGRAM):   else do;
2461760   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2461761   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2461762   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2461763   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2461764   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2461765   +   end;
MPRINT(EM_DIAGRAM):   end;
2461766   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2461767   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2461768   +   end;
MPRINT(EM_DIAGRAM):   end;
2461769   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2461770   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2461771   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2461772   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2461773   +   end;
MPRINT(EM_DIAGRAM):   end;
2461774   +end;
MPRINT(EM_DIAGRAM):   end;
2461775   +
2461776   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2461777   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
2461778   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2461779   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2461780   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2461781   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2461782   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2461783   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2461784   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2461785   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2461786   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2461787   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2461788   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2461789   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2461790   +end;
MPRINT(EM_DIAGRAM):   end;
2461791   +else do;
MPRINT(EM_DIAGRAM):   else do;
2461792   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2461793   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2461794   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2461795   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2461796   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2461797   +   end;
MPRINT(EM_DIAGRAM):   end;
2461798   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2461799   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2461800   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2461801   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2461802   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2461803   +   end;
MPRINT(EM_DIAGRAM):   end;
2461804   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2461805   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2461806   +   end;
MPRINT(EM_DIAGRAM):   end;
2461807   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2461808   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2461809   +   end;
MPRINT(EM_DIAGRAM):   end;
2461810   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2461811   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2461812   +   end;
MPRINT(EM_DIAGRAM):   end;
2461813   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2461814   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2461815   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2461816   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2461817   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2461818   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2461819   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2461820   +   end;
MPRINT(EM_DIAGRAM):   end;
2461821   +end;
MPRINT(EM_DIAGRAM):   end;
2461822   +
2461823   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2461824   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2461825   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
2461826   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2461827   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2461828   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2461829   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2461830   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2461831   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2461832   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2461833   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2461834   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2461835   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2461836   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2461837   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2461838   +end;
MPRINT(EM_DIAGRAM):   end;
2461839   +else do;
MPRINT(EM_DIAGRAM):   else do;
2461840   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2461841   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2461842   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2461843   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2461844   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2461845   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2461846   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2461847   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2461848   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2461849   +         end;
MPRINT(EM_DIAGRAM):   end;
2461850   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2461851   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2461852   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2461853   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2461854   +            end;
MPRINT(EM_DIAGRAM):   end;
2461855   +         end;
MPRINT(EM_DIAGRAM):   end;
2461856   +      end;
MPRINT(EM_DIAGRAM):   end;
2461857   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2461858   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2461859   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2461860   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2461861   +         end;
MPRINT(EM_DIAGRAM):   end;
2461862   +      end;
MPRINT(EM_DIAGRAM):   end;
2461863   +   end;
MPRINT(EM_DIAGRAM):   end;
2461864   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2461865   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2461866   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2461867   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2461868   +      end;
MPRINT(EM_DIAGRAM):   end;
2461869   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2461870   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2461871   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2461872   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2461873   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2461874   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2461875   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2461876   +         end;
MPRINT(EM_DIAGRAM):   end;
2461877   +      end;
MPRINT(EM_DIAGRAM):   end;
2461878   +   end;
MPRINT(EM_DIAGRAM):   end;
2461879   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2461880   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2461881   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2461882   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2461883   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2461884   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2461885   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2461886   +   end;
MPRINT(EM_DIAGRAM):   end;
2461887   +end;
MPRINT(EM_DIAGRAM):   end;
2461888   +
2461889   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2461890   +*** Checking missing input Interval
2461891   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2461892   +
2461893   +IF NMISS(
2461894   +   AcceptedCmpTotal ,
2461895   +   Age ,
2461896   +   Frq ,
2461897   +   Income ,
2461898   +   Kidhome ,
2461899   +   Mnt ,
2461900   +   MntFishProducts ,
2461901   +   MntFruits ,
2461902   +   MntGoldProds ,
2461903   +   MntMeatProducts ,
2461904   +   MntSweetProducts ,
2461905   +   MntWines ,
2461906   +   MonthsAsCustomer ,
2461907   +   NumCatalogPurchases ,
2461908   +   NumDealsPurchases ,
2461909   +   NumDistPurchases ,
2461910   +   NumStorePurchases ,
2461911   +   NumWebPurchases ,
2461912   +   NumWebVisitsMonth ,
2461913   +   RFMstat ,
2461914   +   RMntFrq ,
2461915   +   Recency ,
2461916   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
2461917   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2461918   +
2461919   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2461920   +END;
MPRINT(EM_DIAGRAM):   END;
2461921   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2461922   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2461923   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2461924   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2461925   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2461926   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2461927   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2461928   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2461929   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2461930   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2461931   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2461932   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2461933   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2461934   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2461935   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2461936   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2461937   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2461938   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2461939   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2461940   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2461941   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2461942   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2461943   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
2461944   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2461945   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2461946   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2461947   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2461948   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2461949   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2461950   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2461951   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2461952   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2461953   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2461954   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2461955   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2461956   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2461957   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2461958   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2461959   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2461960   +END;
MPRINT(EM_DIAGRAM):   END;
2461961   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2461962   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2461963   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2461964   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2461965   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2461966   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2461967   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2461968   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2461969   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2461970   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2461971   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2461972   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2461973   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2461974   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2461975   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2461976   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2461977   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2461978   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2461979   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2461980   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2461981   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2461982   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2461983   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
2461984   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2461985   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2461986   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2461987   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2461988   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2461989   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2461990   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2461991   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2461992   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2461993   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2461994   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
2461995   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2461996   +   ELSE S_NumCatalogPurchases
2461997   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2461998   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2461999   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2462000   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2462001   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2462002   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2462003   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2462004   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2462005   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2462006   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2462007   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2462008   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2462009   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2462010   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2462011   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2462012   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2462013   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2462014   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2462015   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2462016   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2462017   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2462018   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2462019   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2462020   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2462021   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2462022   +END;
MPRINT(EM_DIAGRAM):   END;
2462023   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2462024   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2462025   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2462026   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2462027   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2462028   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2462029   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2462030   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2462031   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2462032   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2462033   +   H1x1_1  =     -0.7790327388408 * S_AcceptedCmpTotal
2462034   +          +     0.32193739579856 * S_Age  +    -0.43875684835169 * S_Frq
2462035   +          +     0.13013240455049 * S_Income  +    -0.74127716462976 *
2462036   +        S_Kidhome  +    -0.86416600561474 * S_Mnt  +     0.94819226754442 *
2462037   +        S_MntFishProducts  +     0.15895119408799 * S_MntFruits
2462038   +          +     0.03658391935071 * S_MntGoldProds  +    -3.75052142292398 *
2462039   +        S_MntMeatProducts  +    -0.22192220883538 * S_MntSweetProducts
2462040   +          +     0.80534656860633 * S_MntWines  +     0.16144794241259 *
2462041   +        S_MonthsAsCustomer  +    -1.53040364803625 * S_NumCatalogPurchases
2462042   +          +    -1.09856598010056 * S_NumDealsPurchases
2462043   +          +    -0.10571850472514 * S_NumDistPurchases
2462044   +          +     0.11898210654227 * S_NumStorePurchases
2462045   +          +      0.5984912060231 * S_NumWebPurchases
2462046   +          +     0.78592531126942 * S_NumWebVisitsMonth
2462047   +          +    -0.50004686386273 * S_RFMstat  +     0.40804018151571 *
2462048   +        S_RMntFrq  +    -0.94753260620308 * S_Recency
2462049   +          +    -0.49604118088328 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.7790327388408 * S_AcceptedCmpTotal + 0.32193739579856 *
S_Age + -0.43875684835169 * S_Frq + 0.13013240455049 * S_Income + -0.74127716462976 *
S_Kidhome + -0.86416600561474 * S_Mnt + 0.94819226754442 * S_MntFishProducts +
0.15895119408799 * S_MntFruits + 0.03658391935071 * S_MntGoldProds + -3.75052142292398 *
S_MntMeatProducts + -0.22192220883538 * S_MntSweetProducts + 0.80534656860633 * S_MntWines +
0.16144794241259 * S_MonthsAsCustomer + -1.53040364803625 * S_NumCatalogPurchases +
-1.09856598010056 * S_NumDealsPurchases + -0.10571850472514 * S_NumDistPurchases +
0.11898210654227 * S_NumStorePurchases + 0.5984912060231 * S_NumWebPurchases +
0.78592531126942 * S_NumWebVisitsMonth + -0.50004686386273 * S_RFMstat + 0.40804018151571 *
S_RMntFrq + -0.94753260620308 * S_Recency + -0.49604118088328 * S_Teenhome ;
2462050   +   H1x1_2  =    -0.22226926295489 * S_AcceptedCmpTotal
2462051   +          +     0.08523894206962 * S_Age  +    -0.13010378102207 * S_Frq
2462052   +          +    -0.61810906923536 * S_Income  +     0.26583917928045 *
2462053   +        S_Kidhome  +     0.57213479787981 * S_Mnt  +    -0.58077613046442 *
2462054   +        S_MntFishProducts  +      0.1530301493776 * S_MntFruits
2462055   +          +      0.4586167382631 * S_MntGoldProds  +     1.40179051129147 *
2462056   +        S_MntMeatProducts  +      0.0231413770297 * S_MntSweetProducts
2462057   +          +    -0.08483682112771 * S_MntWines  +     0.22891006905064 *
2462058   +        S_MonthsAsCustomer  +    -1.21866617917435 * S_NumCatalogPurchases
2462059   +          +    -0.84042044250624 * S_NumDealsPurchases
2462060   +          +    -0.10246261015488 * S_NumDistPurchases
2462061   +          +     0.06886149708824 * S_NumStorePurchases
2462062   +          +     0.63156910388199 * S_NumWebPurchases
2462063   +          +    -1.33032061845311 * S_NumWebVisitsMonth
2462064   +          +     0.51240040684649 * S_RFMstat  +     0.77604047421115 *
2462065   +        S_RMntFrq  +     1.27964260226958 * S_Recency
2462066   +          +     0.12022076571016 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.22226926295489 * S_AcceptedCmpTotal + 0.08523894206962 *
S_Age + -0.13010378102207 * S_Frq + -0.61810906923536 * S_Income + 0.26583917928045 *
S_Kidhome + 0.57213479787981 * S_Mnt + -0.58077613046442 * S_MntFishProducts + 0.1530301493776
* S_MntFruits + 0.4586167382631 * S_MntGoldProds + 1.40179051129147 * S_MntMeatProducts +
0.0231413770297 * S_MntSweetProducts + -0.08483682112771 * S_MntWines + 0.22891006905064 *
S_MonthsAsCustomer + -1.21866617917435 * S_NumCatalogPurchases + -0.84042044250624 *
S_NumDealsPurchases + -0.10246261015488 * S_NumDistPurchases + 0.06886149708824 *
S_NumStorePurchases + 0.63156910388199 * S_NumWebPurchases + -1.33032061845311 *
S_NumWebVisitsMonth + 0.51240040684649 * S_RFMstat + 0.77604047421115 * S_RMntFrq +
1.27964260226958 * S_Recency + 0.12022076571016 * S_Teenhome ;
2462067   +   H1x1_3  =     1.19879097976404 * S_AcceptedCmpTotal
2462068   +          +     0.14973951999399 * S_Age  +    -0.90630756390399 * S_Frq
2462069   +          +     0.64934241358682 * S_Income  +    -0.66249532206724 *
2462070   +        S_Kidhome  +     0.54195490560813 * S_Mnt  +    -0.58497380565417 *
2462071   +        S_MntFishProducts  +     0.12409202833851 * S_MntFruits
2462072   +          +     0.44480061346561 * S_MntGoldProds  +     3.27513201048136 *
2462073   +        S_MntMeatProducts  +     -0.1256493054184 * S_MntSweetProducts
2462074   +          +    -0.56080685022301 * S_MntWines  +     0.08633469383177 *
2462075   +        S_MonthsAsCustomer  +     0.45482673505107 * S_NumCatalogPurchases
2462076   +          +     0.45393712455366 * S_NumDealsPurchases
2462077   +          +    -0.25292198053552 * S_NumDistPurchases
2462078   +          +    -1.35582215064749 * S_NumStorePurchases
2462079   +          +    -0.83132202302639 * S_NumWebPurchases
2462080   +          +     1.87116225272678 * S_NumWebVisitsMonth
2462081   +          +     0.39564162951481 * S_RFMstat  +    -1.08810221295144 *
2462082   +        S_RMntFrq  +    -2.07407859514648 * S_Recency
2462083   +          +     -0.6849099475723 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.19879097976404 * S_AcceptedCmpTotal + 0.14973951999399 *
S_Age + -0.90630756390399 * S_Frq + 0.64934241358682 * S_Income + -0.66249532206724 *
S_Kidhome + 0.54195490560813 * S_Mnt + -0.58497380565417 * S_MntFishProducts +
0.12409202833851 * S_MntFruits + 0.44480061346561 * S_MntGoldProds + 3.27513201048136 *
S_MntMeatProducts + -0.1256493054184 * S_MntSweetProducts + -0.56080685022301 * S_MntWines +
0.08633469383177 * S_MonthsAsCustomer + 0.45482673505107 * S_NumCatalogPurchases +
0.45393712455366 * S_NumDealsPurchases + -0.25292198053552 * S_NumDistPurchases +
-1.35582215064749 * S_NumStorePurchases + -0.83132202302639 * S_NumWebPurchases +
1.87116225272678 * S_NumWebVisitsMonth + 0.39564162951481 * S_RFMstat + -1.08810221295144 *
S_RMntFrq + -2.07407859514648 * S_Recency + -0.6849099475723 * S_Teenhome ;
2462084   +   H1x1_1  = H1x1_1  +     0.81075414854045 * AcceptedCmp10
2462085   +          +    -0.33403710427327 * AcceptedCmp20  +    -0.62242387435975 *
2462086   +        AcceptedCmp30  +    -0.89439410552439 * AcceptedCmp40
2462087   +          +     0.77335976756467 * AcceptedCmp50  +    -0.08825784612626 *
2462088   +        Complain0  +      0.3404395194267 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.81075414854045 * AcceptedCmp10 + -0.33403710427327 *
AcceptedCmp20 + -0.62242387435975 * AcceptedCmp30 + -0.89439410552439 * AcceptedCmp40 +
0.77335976756467 * AcceptedCmp50 + -0.08825784612626 * Complain0 + 0.3404395194267 *
HigherEducationBinary0 ;
2462089   +   H1x1_2  = H1x1_2  +    -0.16741179709566 * AcceptedCmp10
2462090   +          +    -0.53751033948061 * AcceptedCmp20  +     0.80285496945068 *
2462091   +        AcceptedCmp30  +     0.39379279966091 * AcceptedCmp40
2462092   +          +    -1.40366799083237 * AcceptedCmp50  +     -0.4265482924132 *
2462093   +        Complain0  +     0.37272103593422 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.16741179709566 * AcceptedCmp10 + -0.53751033948061
* AcceptedCmp20 + 0.80285496945068 * AcceptedCmp30 + 0.39379279966091 * AcceptedCmp40 +
-1.40366799083237 * AcceptedCmp50 + -0.4265482924132 * Complain0 + 0.37272103593422 *
HigherEducationBinary0 ;
2462094   +   H1x1_3  = H1x1_3  +    -0.19417657656326 * AcceptedCmp10
2462095   +          +    -0.06547746897317 * AcceptedCmp20  +     0.21980739904513 *
2462096   +        AcceptedCmp30  +    -0.19452210052301 * AcceptedCmp40
2462097   +          +    -2.02403282278574 * AcceptedCmp50  +    -0.18250261144524 *
2462098   +        Complain0  +     0.34168103813312 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.19417657656326 * AcceptedCmp10 + -0.06547746897317
* AcceptedCmp20 + 0.21980739904513 * AcceptedCmp30 + -0.19452210052301 * AcceptedCmp40 +
-2.02403282278574 * AcceptedCmp50 + -0.18250261144524 * Complain0 + 0.34168103813312 *
HigherEducationBinary0 ;
2462099   +   H1x1_1  = H1x1_1  +    -0.03956789621002 * Education2n_Cycle
2462100   +          +    -0.38372374638888 * EducationBasic  +     -0.4178927802606 *
2462101   +        EducationGraduation  +    -0.61278625923288 * EducationMaster
2462102   +          +      0.4695898100094 * Marital_StatusDivorced
2462103   +          +    -0.52137742289262 * Marital_StatusMarried
2462104   +          +    -0.32382086914936 * Marital_StatusSingle
2462105   +          +    -0.66163012672344 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.03956789621002 * Education2n_Cycle +
-0.38372374638888 * EducationBasic + -0.4178927802606 * EducationGraduation +
-0.61278625923288 * EducationMaster + 0.4695898100094 * Marital_StatusDivorced +
-0.52137742289262 * Marital_StatusMarried + -0.32382086914936 * Marital_StatusSingle +
-0.66163012672344 * Marital_StatusTogether ;
2462106   +   H1x1_2  = H1x1_2  +    -0.25832319223886 * Education2n_Cycle
2462107   +          +     0.05602860720141 * EducationBasic  +    -0.86282852488383 *
2462108   +        EducationGraduation  +     0.18916317018059 * EducationMaster
2462109   +          +    -1.04858218653238 * Marital_StatusDivorced
2462110   +          +     2.41098335093061 * Marital_StatusMarried
2462111   +          +    -1.94696044861334 * Marital_StatusSingle
2462112   +          +     2.16021514856437 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.25832319223886 * Education2n_Cycle +
0.05602860720141 * EducationBasic + -0.86282852488383 * EducationGraduation + 0.18916317018059
* EducationMaster + -1.04858218653238 * Marital_StatusDivorced + 2.41098335093061 *
Marital_StatusMarried + -1.94696044861334 * Marital_StatusSingle + 2.16021514856437 *
Marital_StatusTogether ;
2462113   +   H1x1_3  = H1x1_3  +    -0.05351872242069 * Education2n_Cycle
2462114   +          +    -0.56850783552841 * EducationBasic  +    -0.14880907057098 *
2462115   +        EducationGraduation  +    -0.32850851013319 * EducationMaster
2462116   +          +     0.42964114177062 * Marital_StatusDivorced
2462117   +          +    -0.38607635605816 * Marital_StatusMarried
2462118   +          +    -0.02157405407852 * Marital_StatusSingle
2462119   +          +    -0.59995619744527 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.05351872242069 * Education2n_Cycle +
-0.56850783552841 * EducationBasic + -0.14880907057098 * EducationGraduation +
-0.32850851013319 * EducationMaster + 0.42964114177062 * Marital_StatusDivorced +
-0.38607635605816 * Marital_StatusMarried + -0.02157405407852 * Marital_StatusSingle +
-0.59995619744527 * Marital_StatusTogether ;
2462120   +   H1x1_1  =    -0.53239337390307 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.53239337390307 + H1x1_1 ;
2462121   +   H1x1_2  =     0.99428677123948 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.99428677123948 + H1x1_2 ;
2462122   +   H1x1_3  =       1.835877082844 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.835877082844 + H1x1_3 ;
2462123   +   H1x1_4  = 0;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0;
2462124   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
2462125   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2462126   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
2462127   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
2462128   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
2462129   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
2462130   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
2462131   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
2462132   +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
2462133   +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
2462134   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
2462135   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
2462136   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
2462137   +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
2462138   +END;
MPRINT(EM_DIAGRAM):   END;
2462139   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2462140   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2462141   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2462142   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2462143   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2462144   +END;
MPRINT(EM_DIAGRAM):   END;
2462145   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2462146   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2462147   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2462148   +
2462149   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2462150   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2462151   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2462152   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2462153   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2462154   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2462155   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2462156   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2462157   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2462158   +end;
MPRINT(EM_DIAGRAM):   end;
2462159   +else do;
MPRINT(EM_DIAGRAM):   else do;
2462160   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2462161   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2462162   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2462163   +   end;
MPRINT(EM_DIAGRAM):   end;
2462164   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2462165   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2462166   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2462167   +   end;
MPRINT(EM_DIAGRAM):   end;
2462168   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2462169   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2462170   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2462171   +   end;
MPRINT(EM_DIAGRAM):   end;
2462172   +end;
MPRINT(EM_DIAGRAM):   end;
2462173   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2462174   +   P_DepVar1  =    -3.41904253756965 * H1x1_1  +    -7.11204151517034 * H1x1_2
2462175   +          +     10.7909509395818 * H1x1_3  +    -2.20432578352426 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.41904253756965 * H1x1_1 + -7.11204151517034 * H1x1_2 +
10.7909509395818 * H1x1_3 + -2.20432578352426 * H1x1_4 ;
2462176   +   P_DepVar1  =    -3.66951098257489 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.66951098257489 + P_DepVar1 ;
2462177   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2462178   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2462179   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2462180   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2462181   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2462182   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2462183   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2462184   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2462185   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2462186   +END;
MPRINT(EM_DIAGRAM):   END;
2462187   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2462188   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2462189   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2462190   +END;
MPRINT(EM_DIAGRAM):   END;
2462191   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2462192   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2462193   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2462194   +END;
MPRINT(EM_DIAGRAM):   END;
2462195   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2462196   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2462197   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2462198   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2462199   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2462200   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2462201   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2462202   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2462203   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2462204   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2462205   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2462206   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2462207   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2462208   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2462209   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2462210   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2462211   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2462212   +END;
MPRINT(EM_DIAGRAM):   END;
2462213   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2462214   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2462215   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2462216   +drop
2462217   +H1x1_1
2462218   +H1x1_2
2462219   +H1x1_3
2462220   +H1x1_4
2462221   +;
MPRINT(EM_DIAGRAM):   drop H1x1_1 H1x1_2 H1x1_3 H1x1_4 ;
2462222   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2462223   +* Renaming variables for AutoNeural9;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural9;
2462224   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2462225   +* Renaming Posterior variables for AutoNeural9;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural9;
2462226   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2462227   +drop AutoNeural9_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_P_DepVar1;
2462228   +AutoNeural9_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural9_P_DepVar1 = P_DepVar1;
2462229   +drop AutoNeural9_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_P_DepVar0;
2462230   +AutoNeural9_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural9_P_DepVar0 = P_DepVar0;
2462231   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2462232   +* Renaming _WARN_ variable for AutoNeural9;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural9;
2462233   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2462234   +length AutoNeural9_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural9_WARN_ $4;
2462235   +drop AutoNeural9_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_WARN_;
2462236   +AutoNeural9_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural9_WARN_ = _WARN_;
2462237   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2462238   +* Ensmbl46: Scoring Code of model 2 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl46: Scoring Code of model 2 of 5;
2462239   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2462240   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2462241   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
2462242   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2462243   +* NODE: AutoNeural11;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural11;
2462244   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2462245   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2462246   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2462247   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2462248   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2462249   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2462250   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2462251   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2462252   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2462253   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2462254   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2462255   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2462256   +LENGTH _WARN_ $4
2462257   +      F_DepVar  $ 12
2462258   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2462259   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2462260   +
2462261   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2462262   +
2462263   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2462264   +
2462265   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2462266   +
2462267   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2462268   +
2462269   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2462270   +
2462271   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2462272   +
2462273   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2462274   +
2462275   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2462276   +
2462277   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2462278   +
2462279   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2462280   +
2462281   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2462282   +
2462283   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2462284   +
2462285   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2462286   +
2462287   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2462288   +
2462289   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2462290   +
2462291   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2462292   +
2462293   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2462294   +
2462295   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2462296   +
2462297   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2462298   +
2462299   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2462300   +
2462301   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2462302   +
2462303   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2462304   +
2462305   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2462306   +
2462307   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2462308   +
2462309   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2462310   +
2462311   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2462312   +
2462313   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2462314   +
2462315   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2462316   +
2462317   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2462318   +
2462319   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2462320   +
2462321   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2462322   +
2462323   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2462324   +
2462325   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2462326   +
2462327   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2462328   +
2462329   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2462330   +
2462331   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2462332   +
2462333   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2462334   +
2462335   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2462336   +
2462337   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2462338   +
2462339   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2462340   +
2462341   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2462342   +
2462343   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
2462344   +
2462345   +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
2462346   +
2462347   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2462348   +
2462349   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2462350   +
2462351   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2462352   +
2462353   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2462354   +
2462355   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2462356   +
2462357   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2462358   +
2462359   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2462360   +
2462361   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2462362   +
2462363   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2462364   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2462365   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2462366   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2462367   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2462368   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2462369   +end;
MPRINT(EM_DIAGRAM):   end;
2462370   +else do;
MPRINT(EM_DIAGRAM):   else do;
2462371   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2462372   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2462373   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2462374   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2462375   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2462376   +   end;
MPRINT(EM_DIAGRAM):   end;
2462377   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2462378   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2462379   +   end;
MPRINT(EM_DIAGRAM):   end;
2462380   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2462381   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2462382   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2462383   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2462384   +   end;
MPRINT(EM_DIAGRAM):   end;
2462385   +end;
MPRINT(EM_DIAGRAM):   end;
2462386   +
2462387   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2462388   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2462389   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2462390   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2462391   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2462392   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2462393   +end;
MPRINT(EM_DIAGRAM):   end;
2462394   +else do;
MPRINT(EM_DIAGRAM):   else do;
2462395   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2462396   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2462397   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2462398   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2462399   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2462400   +   end;
MPRINT(EM_DIAGRAM):   end;
2462401   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2462402   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2462403   +   end;
MPRINT(EM_DIAGRAM):   end;
2462404   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2462405   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2462406   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2462407   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2462408   +   end;
MPRINT(EM_DIAGRAM):   end;
2462409   +end;
MPRINT(EM_DIAGRAM):   end;
2462410   +
2462411   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2462412   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2462413   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2462414   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2462415   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2462416   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2462417   +end;
MPRINT(EM_DIAGRAM):   end;
2462418   +else do;
MPRINT(EM_DIAGRAM):   else do;
2462419   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2462420   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2462421   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2462422   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2462423   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2462424   +   end;
MPRINT(EM_DIAGRAM):   end;
2462425   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2462426   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2462427   +   end;
MPRINT(EM_DIAGRAM):   end;
2462428   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2462429   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2462430   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2462431   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2462432   +   end;
MPRINT(EM_DIAGRAM):   end;
2462433   +end;
MPRINT(EM_DIAGRAM):   end;
2462434   +
2462435   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2462436   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2462437   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2462438   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2462439   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2462440   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2462441   +end;
MPRINT(EM_DIAGRAM):   end;
2462442   +else do;
MPRINT(EM_DIAGRAM):   else do;
2462443   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2462444   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2462445   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2462446   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2462447   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2462448   +   end;
MPRINT(EM_DIAGRAM):   end;
2462449   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2462450   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2462451   +   end;
MPRINT(EM_DIAGRAM):   end;
2462452   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2462453   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2462454   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2462455   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2462456   +   end;
MPRINT(EM_DIAGRAM):   end;
2462457   +end;
MPRINT(EM_DIAGRAM):   end;
2462458   +
2462459   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2462460   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2462461   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2462462   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2462463   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2462464   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2462465   +end;
MPRINT(EM_DIAGRAM):   end;
2462466   +else do;
MPRINT(EM_DIAGRAM):   else do;
2462467   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2462468   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2462469   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2462470   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2462471   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2462472   +   end;
MPRINT(EM_DIAGRAM):   end;
2462473   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2462474   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2462475   +   end;
MPRINT(EM_DIAGRAM):   end;
2462476   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2462477   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2462478   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2462479   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2462480   +   end;
MPRINT(EM_DIAGRAM):   end;
2462481   +end;
MPRINT(EM_DIAGRAM):   end;
2462482   +
2462483   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2462484   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2462485   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2462486   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2462487   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2462488   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2462489   +end;
MPRINT(EM_DIAGRAM):   end;
2462490   +else do;
MPRINT(EM_DIAGRAM):   else do;
2462491   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2462492   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2462493   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2462494   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2462495   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2462496   +   end;
MPRINT(EM_DIAGRAM):   end;
2462497   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2462498   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2462499   +   end;
MPRINT(EM_DIAGRAM):   end;
2462500   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2462501   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2462502   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2462503   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2462504   +   end;
MPRINT(EM_DIAGRAM):   end;
2462505   +end;
MPRINT(EM_DIAGRAM):   end;
2462506   +
2462507   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2462508   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2462509   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2462510   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2462511   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2462512   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2462513   +end;
MPRINT(EM_DIAGRAM):   end;
2462514   +else do;
MPRINT(EM_DIAGRAM):   else do;
2462515   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2462516   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2462517   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2462518   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2462519   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2462520   +   end;
MPRINT(EM_DIAGRAM):   end;
2462521   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2462522   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2462523   +   end;
MPRINT(EM_DIAGRAM):   end;
2462524   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2462525   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2462526   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2462527   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2462528   +   end;
MPRINT(EM_DIAGRAM):   end;
2462529   +end;
MPRINT(EM_DIAGRAM):   end;
2462530   +
2462531   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2462532   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
2462533   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2462534   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2462535   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2462536   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2462537   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2462538   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2462539   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2462540   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2462541   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2462542   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2462543   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2462544   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2462545   +end;
MPRINT(EM_DIAGRAM):   end;
2462546   +else do;
MPRINT(EM_DIAGRAM):   else do;
2462547   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2462548   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2462549   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2462550   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2462551   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2462552   +   end;
MPRINT(EM_DIAGRAM):   end;
2462553   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2462554   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2462555   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2462556   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2462557   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2462558   +   end;
MPRINT(EM_DIAGRAM):   end;
2462559   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2462560   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2462561   +   end;
MPRINT(EM_DIAGRAM):   end;
2462562   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2462563   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2462564   +   end;
MPRINT(EM_DIAGRAM):   end;
2462565   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2462566   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2462567   +   end;
MPRINT(EM_DIAGRAM):   end;
2462568   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2462569   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2462570   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2462571   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2462572   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2462573   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2462574   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2462575   +   end;
MPRINT(EM_DIAGRAM):   end;
2462576   +end;
MPRINT(EM_DIAGRAM):   end;
2462577   +
2462578   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2462579   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2462580   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
2462581   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2462582   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2462583   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2462584   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2462585   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2462586   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2462587   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2462588   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2462589   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2462590   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2462591   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2462592   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2462593   +end;
MPRINT(EM_DIAGRAM):   end;
2462594   +else do;
MPRINT(EM_DIAGRAM):   else do;
2462595   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2462596   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2462597   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2462598   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2462599   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2462600   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2462601   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2462602   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2462603   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2462604   +         end;
MPRINT(EM_DIAGRAM):   end;
2462605   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2462606   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2462607   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2462608   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2462609   +            end;
MPRINT(EM_DIAGRAM):   end;
2462610   +         end;
MPRINT(EM_DIAGRAM):   end;
2462611   +      end;
MPRINT(EM_DIAGRAM):   end;
2462612   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2462613   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2462614   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2462615   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2462616   +         end;
MPRINT(EM_DIAGRAM):   end;
2462617   +      end;
MPRINT(EM_DIAGRAM):   end;
2462618   +   end;
MPRINT(EM_DIAGRAM):   end;
2462619   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2462620   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2462621   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2462622   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2462623   +      end;
MPRINT(EM_DIAGRAM):   end;
2462624   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2462625   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2462626   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2462627   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2462628   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2462629   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2462630   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2462631   +         end;
MPRINT(EM_DIAGRAM):   end;
2462632   +      end;
MPRINT(EM_DIAGRAM):   end;
2462633   +   end;
MPRINT(EM_DIAGRAM):   end;
2462634   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2462635   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2462636   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2462637   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2462638   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2462639   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2462640   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2462641   +   end;
MPRINT(EM_DIAGRAM):   end;
2462642   +end;
MPRINT(EM_DIAGRAM):   end;
2462643   +
2462644   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2462645   +*** Checking missing input Interval
2462646   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2462647   +
2462648   +IF NMISS(
2462649   +   AcceptedCmpTotal ,
2462650   +   Age ,
2462651   +   Frq ,
2462652   +   Income ,
2462653   +   Kidhome ,
2462654   +   Mnt ,
2462655   +   MntFishProducts ,
2462656   +   MntFruits ,
2462657   +   MntGoldProds ,
2462658   +   MntMeatProducts ,
2462659   +   MntSweetProducts ,
2462660   +   MntWines ,
2462661   +   MonthsAsCustomer ,
2462662   +   NumCatalogPurchases ,
2462663   +   NumDealsPurchases ,
2462664   +   NumDistPurchases ,
2462665   +   NumStorePurchases ,
2462666   +   NumWebPurchases ,
2462667   +   NumWebVisitsMonth ,
2462668   +   RFMstat ,
2462669   +   RMntFrq ,
2462670   +   Recency ,
2462671   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
2462672   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2462673   +
2462674   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2462675   +END;
MPRINT(EM_DIAGRAM):   END;
2462676   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2462677   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2462678   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2462679   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2462680   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2462681   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2462682   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2462683   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2462684   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2462685   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2462686   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2462687   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2462688   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2462689   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2462690   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2462691   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2462692   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2462693   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2462694   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2462695   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2462696   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2462697   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2462698   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
2462699   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2462700   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2462701   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2462702   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2462703   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2462704   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2462705   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2462706   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2462707   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2462708   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2462709   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2462710   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2462711   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2462712   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2462713   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2462714   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2462715   +END;
MPRINT(EM_DIAGRAM):   END;
2462716   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2462717   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2462718   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2462719   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2462720   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2462721   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2462722   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2462723   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2462724   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2462725   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2462726   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2462727   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2462728   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2462729   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2462730   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2462731   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2462732   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2462733   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2462734   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2462735   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2462736   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2462737   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2462738   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
2462739   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2462740   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2462741   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2462742   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2462743   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2462744   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2462745   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2462746   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2462747   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2462748   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2462749   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
2462750   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2462751   +   ELSE S_NumCatalogPurchases
2462752   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2462753   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2462754   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2462755   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2462756   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2462757   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2462758   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2462759   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2462760   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2462761   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2462762   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2462763   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2462764   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2462765   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2462766   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2462767   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2462768   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2462769   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2462770   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2462771   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2462772   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2462773   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2462774   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2462775   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2462776   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2462777   +END;
MPRINT(EM_DIAGRAM):   END;
2462778   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2462779   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2462780   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2462781   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2462782   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2462783   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2462784   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2462785   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2462786   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2462787   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2462788   +   H1x1_1  =     0.08465472857554 * S_AcceptedCmpTotal
2462789   +          +     0.23104131534618 * S_Age  +     0.27646175976509 * S_Frq
2462790   +          +     0.45938840681203 * S_Income  +     0.09814900830666 *
2462791   +        S_Kidhome  +     0.23249430277518 * S_Mnt  +    -0.51905493105122 *
2462792   +        S_MntFishProducts  +    -0.07604226481078 * S_MntFruits
2462793   +          +     0.10100393832157 * S_MntGoldProds  +     1.56159221713858 *
2462794   +        S_MntMeatProducts  +     0.12166799382268 * S_MntSweetProducts
2462795   +          +    -0.63388816790524 * S_MntWines  +     0.00878303775585 *
2462796   +        S_MonthsAsCustomer  +     0.01990411233136 * S_NumCatalogPurchases
2462797   +          +     0.19770934886328 * S_NumDealsPurchases
2462798   +          +      0.0515215988111 * S_NumDistPurchases
2462799   +          +    -0.34569346346089 * S_NumStorePurchases
2462800   +          +    -0.27122293596124 * S_NumWebPurchases
2462801   +          +    -0.17061565609755 * S_NumWebVisitsMonth
2462802   +          +      0.1271178187502 * S_RFMstat  +     0.38306508975954 *
2462803   +        S_RMntFrq  +     0.05823588653853 * S_Recency
2462804   +          +    -0.03760117378617 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.08465472857554 * S_AcceptedCmpTotal + 0.23104131534618 *
S_Age + 0.27646175976509 * S_Frq + 0.45938840681203 * S_Income + 0.09814900830666 * S_Kidhome
+ 0.23249430277518 * S_Mnt + -0.51905493105122 * S_MntFishProducts + -0.07604226481078 *
S_MntFruits + 0.10100393832157 * S_MntGoldProds + 1.56159221713858 * S_MntMeatProducts +
0.12166799382268 * S_MntSweetProducts + -0.63388816790524 * S_MntWines + 0.00878303775585 *
S_MonthsAsCustomer + 0.01990411233136 * S_NumCatalogPurchases + 0.19770934886328 *
S_NumDealsPurchases + 0.0515215988111 * S_NumDistPurchases + -0.34569346346089 *
S_NumStorePurchases + -0.27122293596124 * S_NumWebPurchases + -0.17061565609755 *
S_NumWebVisitsMonth + 0.1271178187502 * S_RFMstat + 0.38306508975954 * S_RMntFrq +
0.05823588653853 * S_Recency + -0.03760117378617 * S_Teenhome ;
2462805   +   H1x1_2  =     0.16564144258189 * S_AcceptedCmpTotal
2462806   +          +    -0.18930338067433 * S_Age  +    -0.23013558761757 * S_Frq
2462807   +          +     -0.1347135122598 * S_Income  +     0.04776498811407 *
2462808   +        S_Kidhome  +    -0.14940302068852 * S_Mnt  +    -0.13108691405604 *
2462809   +        S_MntFishProducts  +    -0.02561341150704 * S_MntFruits
2462810   +          +    -0.02022222891948 * S_MntGoldProds  +     0.80867688993093 *
2462811   +        S_MntMeatProducts  +    -0.08374488783635 * S_MntSweetProducts
2462812   +          +     -0.6719369441832 * S_MntWines  +    -0.14760035685198 *
2462813   +        S_MonthsAsCustomer  +      0.4007376271331 * S_NumCatalogPurchases
2462814   +          +     0.54308887602031 * S_NumDealsPurchases
2462815   +          +    -0.22507315320192 * S_NumDistPurchases
2462816   +          +    -0.79861387328361 * S_NumStorePurchases
2462817   +          +    -0.45467494002747 * S_NumWebPurchases
2462818   +          +      0.2119048824613 * S_NumWebVisitsMonth
2462819   +          +     0.30167662748678 * S_RFMstat  +     0.10712110659027 *
2462820   +        S_RMntFrq  +    -0.03061918029089 * S_Recency
2462821   +          +    -0.06096313113607 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.16564144258189 * S_AcceptedCmpTotal + -0.18930338067433 *
S_Age + -0.23013558761757 * S_Frq + -0.1347135122598 * S_Income + 0.04776498811407 * S_Kidhome
+ -0.14940302068852 * S_Mnt + -0.13108691405604 * S_MntFishProducts + -0.02561341150704 *
S_MntFruits + -0.02022222891948 * S_MntGoldProds + 0.80867688993093 * S_MntMeatProducts +
-0.08374488783635 * S_MntSweetProducts + -0.6719369441832 * S_MntWines + -0.14760035685198 *
S_MonthsAsCustomer + 0.4007376271331 * S_NumCatalogPurchases + 0.54308887602031 *
S_NumDealsPurchases + -0.22507315320192 * S_NumDistPurchases + -0.79861387328361 *
S_NumStorePurchases + -0.45467494002747 * S_NumWebPurchases + 0.2119048824613 *
S_NumWebVisitsMonth + 0.30167662748678 * S_RFMstat + 0.10712110659027 * S_RMntFrq +
-0.03061918029089 * S_Recency + -0.06096313113607 * S_Teenhome ;
2462822   +   H1x1_3  =     0.02674875562898 * S_AcceptedCmpTotal
2462823   +          +    -0.19731891748843 * S_Age  +    -0.00753784701259 * S_Frq
2462824   +          +    -0.31764694608254 * S_Income  +     0.49525183733398 *
2462825   +        S_Kidhome  +     0.24623619243686 * S_Mnt  +     0.25904859702044 *
2462826   +        S_MntFishProducts  +     0.26153358982994 * S_MntFruits
2462827   +          +    -0.07223707213485 * S_MntGoldProds  +    -0.15192960471493 *
2462828   +        S_MntMeatProducts  +     0.08241128624385 * S_MntSweetProducts
2462829   +          +     0.62479763709054 * S_MntWines  +     0.03593742779349 *
2462830   +        S_MonthsAsCustomer  +     0.00825730323418 * S_NumCatalogPurchases
2462831   +          +     -0.0771083149302 * S_NumDealsPurchases
2462832   +          +     0.03403621221162 * S_NumDistPurchases
2462833   +          +     0.61303946422025 * S_NumStorePurchases
2462834   +          +     0.27126793634053 * S_NumWebPurchases
2462835   +          +     -0.9769688424222 * S_NumWebVisitsMonth
2462836   +          +     0.08832170040425 * S_RFMstat  +     0.13241491054212 *
2462837   +        S_RMntFrq  +     0.94872655811163 * S_Recency
2462838   +          +     0.22002222738147 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.02674875562898 * S_AcceptedCmpTotal + -0.19731891748843 *
S_Age + -0.00753784701259 * S_Frq + -0.31764694608254 * S_Income + 0.49525183733398 *
S_Kidhome + 0.24623619243686 * S_Mnt + 0.25904859702044 * S_MntFishProducts + 0.26153358982994
* S_MntFruits + -0.07223707213485 * S_MntGoldProds + -0.15192960471493 * S_MntMeatProducts +
0.08241128624385 * S_MntSweetProducts + 0.62479763709054 * S_MntWines + 0.03593742779349 *
S_MonthsAsCustomer + 0.00825730323418 * S_NumCatalogPurchases + -0.0771083149302 *
S_NumDealsPurchases + 0.03403621221162 * S_NumDistPurchases + 0.61303946422025 *
S_NumStorePurchases + 0.27126793634053 * S_NumWebPurchases + -0.9769688424222 *
S_NumWebVisitsMonth + 0.08832170040425 * S_RFMstat + 0.13241491054212 * S_RMntFrq +
0.94872655811163 * S_Recency + 0.22002222738147 * S_Teenhome ;
2462839   +   H1x1_4  =     0.46328587348713 * S_AcceptedCmpTotal
2462840   +          +      -0.306946385792 * S_Age  +    -0.24247964225191 * S_Frq
2462841   +          +    -0.42968609314513 * S_Income  +    -0.08934431746158 *
2462842   +        S_Kidhome  +     0.15972194979558 * S_Mnt  +    -0.22174909818279 *
2462843   +        S_MntFishProducts  +    -0.23755215058744 * S_MntFruits
2462844   +          +      -0.124789433808 * S_MntGoldProds  +     0.50040173514144 *
2462845   +        S_MntMeatProducts  +     0.02850063230459 * S_MntSweetProducts
2462846   +          +     0.13427582671876 * S_MntWines  +     0.25569886862761 *
2462847   +        S_MonthsAsCustomer  +     0.34004201732149 * S_NumCatalogPurchases
2462848   +          +     0.29894603062327 * S_NumDealsPurchases
2462849   +          +     0.07614620530875 * S_NumDistPurchases
2462850   +          +     0.15402335009896 * S_NumStorePurchases
2462851   +          +     0.10615749096863 * S_NumWebPurchases
2462852   +          +     0.41962286816879 * S_NumWebVisitsMonth
2462853   +          +     0.00203630873093 * S_RFMstat  +     0.04736976805951 *
2462854   +        S_RMntFrq  +    -0.84751074132422 * S_Recency
2462855   +          +      0.2189023557249 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.46328587348713 * S_AcceptedCmpTotal + -0.306946385792 * S_Age
+ -0.24247964225191 * S_Frq + -0.42968609314513 * S_Income + -0.08934431746158 * S_Kidhome +
0.15972194979558 * S_Mnt + -0.22174909818279 * S_MntFishProducts + -0.23755215058744 *
S_MntFruits + -0.124789433808 * S_MntGoldProds + 0.50040173514144 * S_MntMeatProducts +
0.02850063230459 * S_MntSweetProducts + 0.13427582671876 * S_MntWines + 0.25569886862761 *
S_MonthsAsCustomer + 0.34004201732149 * S_NumCatalogPurchases + 0.29894603062327 *
S_NumDealsPurchases + 0.07614620530875 * S_NumDistPurchases + 0.15402335009896 *
S_NumStorePurchases + 0.10615749096863 * S_NumWebPurchases + 0.41962286816879 *
S_NumWebVisitsMonth + 0.00203630873093 * S_RFMstat + 0.04736976805951 * S_RMntFrq +
-0.84751074132422 * S_Recency + 0.2189023557249 * S_Teenhome ;
2462856   +   H1x1_5  =    -0.32353341757368 * S_AcceptedCmpTotal
2462857   +          +     0.03233494925748 * S_Age  +    -0.21296093282526 * S_Frq
2462858   +          +    -0.33919081075007 * S_Income  +     0.08771362671573 *
2462859   +        S_Kidhome  +    -0.10797068838726 * S_Mnt  +    -0.19736358637985 *
2462860   +        S_MntFishProducts  +    -0.19679917231132 * S_MntFruits
2462861   +          +     0.07502386205588 * S_MntGoldProds  +    -0.50948750987247 *
2462862   +        S_MntMeatProducts  +     0.00413757018488 * S_MntSweetProducts
2462863   +          +      0.0788538305785 * S_MntWines  +    -0.02917052455021 *
2462864   +        S_MonthsAsCustomer  +    -0.53933514609821 * S_NumCatalogPurchases
2462865   +          +     0.14392502416642 * S_NumDealsPurchases
2462866   +          +    -0.10026304978633 * S_NumDistPurchases
2462867   +          +     -0.0588453022746 * S_NumStorePurchases
2462868   +          +     0.24799398610395 * S_NumWebPurchases
2462869   +          +    -0.52695548549717 * S_NumWebVisitsMonth
2462870   +          +     0.01855620452049 * S_RFMstat  +    -0.00189170766477 *
2462871   +        S_RMntFrq  +     0.51841177421912 * S_Recency
2462872   +          +     0.31491299720207 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.32353341757368 * S_AcceptedCmpTotal + 0.03233494925748 *
S_Age + -0.21296093282526 * S_Frq + -0.33919081075007 * S_Income + 0.08771362671573 *
S_Kidhome + -0.10797068838726 * S_Mnt + -0.19736358637985 * S_MntFishProducts +
-0.19679917231132 * S_MntFruits + 0.07502386205588 * S_MntGoldProds + -0.50948750987247 *
S_MntMeatProducts + 0.00413757018488 * S_MntSweetProducts + 0.0788538305785 * S_MntWines +
-0.02917052455021 * S_MonthsAsCustomer + -0.53933514609821 * S_NumCatalogPurchases +
0.14392502416642 * S_NumDealsPurchases + -0.10026304978633 * S_NumDistPurchases +
-0.0588453022746 * S_NumStorePurchases + 0.24799398610395 * S_NumWebPurchases +
-0.52695548549717 * S_NumWebVisitsMonth + 0.01855620452049 * S_RFMstat + -0.00189170766477 *
S_RMntFrq + 0.51841177421912 * S_Recency + 0.31491299720207 * S_Teenhome ;
2462873   +   H1x1_6  =     -0.2113594539647 * S_AcceptedCmpTotal
2462874   +          +     -0.1052829531896 * S_Age  +     0.30802959734964 * S_Frq
2462875   +          +    -0.03112570586685 * S_Income  +     0.19129661263247 *
2462876   +        S_Kidhome  +     0.00533736622639 * S_Mnt  +    -0.06112703732925 *
2462877   +        S_MntFishProducts  +    -0.15875686512247 * S_MntFruits
2462878   +          +    -0.08040179272112 * S_MntGoldProds  +    -0.14462087536907 *
2462879   +        S_MntMeatProducts  +     0.21353582706121 * S_MntSweetProducts
2462880   +          +    -0.30180630737612 * S_MntWines  +    -0.11825033043182 *
2462881   +        S_MonthsAsCustomer  +     -0.2917393256645 * S_NumCatalogPurchases
2462882   +          +     0.08149600854964 * S_NumDealsPurchases
2462883   +          +     0.16873541613513 * S_NumDistPurchases
2462884   +          +    -0.20437343413446 * S_NumStorePurchases
2462885   +          +     -0.1671107527288 * S_NumWebPurchases
2462886   +          +     0.03677043100993 * S_NumWebVisitsMonth
2462887   +          +      0.0240516540488 * S_RFMstat  +     0.06155030856383 *
2462888   +        S_RMntFrq  +    -0.28802122451372 * S_Recency
2462889   +          +     0.06998878697307 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -0.2113594539647 * S_AcceptedCmpTotal + -0.1052829531896 *
S_Age + 0.30802959734964 * S_Frq + -0.03112570586685 * S_Income + 0.19129661263247 * S_Kidhome
+ 0.00533736622639 * S_Mnt + -0.06112703732925 * S_MntFishProducts + -0.15875686512247 *
S_MntFruits + -0.08040179272112 * S_MntGoldProds + -0.14462087536907 * S_MntMeatProducts +
0.21353582706121 * S_MntSweetProducts + -0.30180630737612 * S_MntWines + -0.11825033043182 *
S_MonthsAsCustomer + -0.2917393256645 * S_NumCatalogPurchases + 0.08149600854964 *
S_NumDealsPurchases + 0.16873541613513 * S_NumDistPurchases + -0.20437343413446 *
S_NumStorePurchases + -0.1671107527288 * S_NumWebPurchases + 0.03677043100993 *
S_NumWebVisitsMonth + 0.0240516540488 * S_RFMstat + 0.06155030856383 * S_RMntFrq +
-0.28802122451372 * S_Recency + 0.06998878697307 * S_Teenhome ;
2462890   +   H1x1_1  = H1x1_1  +    -0.33641509021082 * AcceptedCmp10
2462891   +          +     0.03092292109435 * AcceptedCmp20  +    -0.23551187181907 *
2462892   +        AcceptedCmp30  +    -0.06694400005185 * AcceptedCmp40
2462893   +          +    -0.14203506237074 * AcceptedCmp50  +    -0.25866390496966 *
2462894   +        Complain0  +     0.19505921178308 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.33641509021082 * AcceptedCmp10 + 0.03092292109435 *
AcceptedCmp20 + -0.23551187181907 * AcceptedCmp30 + -0.06694400005185 * AcceptedCmp40 +
-0.14203506237074 * AcceptedCmp50 + -0.25866390496966 * Complain0 + 0.19505921178308 *
HigherEducationBinary0 ;
2462895   +   H1x1_2  = H1x1_2  +     0.09937599707203 * AcceptedCmp10
2462896   +          +     0.03831208573575 * AcceptedCmp20  +     0.39683693019758 *
2462897   +        AcceptedCmp30  +     0.37006277175295 * AcceptedCmp40
2462898   +          +     0.21293419476895 * AcceptedCmp50  +     0.15528568367473 *
2462899   +        Complain0  +    -0.30210013299822 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.09937599707203 * AcceptedCmp10 + 0.03831208573575 *
AcceptedCmp20 + 0.39683693019758 * AcceptedCmp30 + 0.37006277175295 * AcceptedCmp40 +
0.21293419476895 * AcceptedCmp50 + 0.15528568367473 * Complain0 + -0.30210013299822 *
HigherEducationBinary0 ;
2462900   +   H1x1_3  = H1x1_3  +     0.29891621770856 * AcceptedCmp10
2462901   +          +     0.64938384482014 * AcceptedCmp20  +     0.44997242602142 *
2462902   +        AcceptedCmp30  +       0.479093722666 * AcceptedCmp40
2462903   +          +     0.50957180373919 * AcceptedCmp50  +     0.27833535432461 *
2462904   +        Complain0  +    -0.20383534906723 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.29891621770856 * AcceptedCmp10 + 0.64938384482014 *
AcceptedCmp20 + 0.44997242602142 * AcceptedCmp30 + 0.479093722666 * AcceptedCmp40 +
0.50957180373919 * AcceptedCmp50 + 0.27833535432461 * Complain0 + -0.20383534906723 *
HigherEducationBinary0 ;
2462905   +   H1x1_4  = H1x1_4  +    -0.26872515586946 * AcceptedCmp10
2462906   +          +    -0.24299337381911 * AcceptedCmp20  +    -0.01147155911926 *
2462907   +        AcceptedCmp30  +     -0.3056041277894 * AcceptedCmp40
2462908   +          +    -0.05496409609003 * AcceptedCmp50  +     0.07858238173893 *
2462909   +        Complain0  +     0.05721550070076 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.26872515586946 * AcceptedCmp10 + -0.24299337381911
* AcceptedCmp20 + -0.01147155911926 * AcceptedCmp30 + -0.3056041277894 * AcceptedCmp40 +
-0.05496409609003 * AcceptedCmp50 + 0.07858238173893 * Complain0 + 0.05721550070076 *
HigherEducationBinary0 ;
2462910   +   H1x1_5  = H1x1_5  +    -0.14067626649899 * AcceptedCmp10
2462911   +          +    -0.30627802828357 * AcceptedCmp20  +     0.05057942365592 *
2462912   +        AcceptedCmp30  +    -0.10378506600459 * AcceptedCmp40
2462913   +          +     0.07479232390108 * AcceptedCmp50  +     0.07252750671496 *
2462914   +        Complain0  +     0.11114854035831 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.14067626649899 * AcceptedCmp10 + -0.30627802828357
* AcceptedCmp20 + 0.05057942365592 * AcceptedCmp30 + -0.10378506600459 * AcceptedCmp40 +
0.07479232390108 * AcceptedCmp50 + 0.07252750671496 * Complain0 + 0.11114854035831 *
HigherEducationBinary0 ;
2462915   +   H1x1_6  = H1x1_6  +    -0.25806332334976 * AcceptedCmp10
2462916   +          +     0.03944021903138 * AcceptedCmp20  +    -0.08792206887119 *
2462917   +        AcceptedCmp30  +    -0.24631282865199 * AcceptedCmp40
2462918   +          +    -0.06123991538969 * AcceptedCmp50  +    -0.03114784375357 *
2462919   +        Complain0  +    -0.25204544481193 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + -0.25806332334976 * AcceptedCmp10 + 0.03944021903138 *
AcceptedCmp20 + -0.08792206887119 * AcceptedCmp30 + -0.24631282865199 * AcceptedCmp40 +
-0.06123991538969 * AcceptedCmp50 + -0.03114784375357 * Complain0 + -0.25204544481193 *
HigherEducationBinary0 ;
2462920   +   H1x1_1  = H1x1_1  +      0.2972170984261 * Education2n_Cycle
2462921   +          +     0.01651368568996 * EducationBasic  +     -0.1186055936649 *
2462922   +        EducationGraduation  +      0.0228208538951 * EducationMaster
2462923   +          +    -0.31045295887604 * Marital_StatusDivorced
2462924   +          +    -0.01109401001539 * Marital_StatusMarried
2462925   +          +     0.01325135981025 * Marital_StatusSingle
2462926   +          +     0.16609357475978 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.2972170984261 * Education2n_Cycle + 0.01651368568996
* EducationBasic + -0.1186055936649 * EducationGraduation + 0.0228208538951 * EducationMaster
+ -0.31045295887604 * Marital_StatusDivorced + -0.01109401001539 * Marital_StatusMarried +
0.01325135981025 * Marital_StatusSingle + 0.16609357475978 * Marital_StatusTogether ;
2462927   +   H1x1_2  = H1x1_2  +    -0.07095220065018 * Education2n_Cycle
2462928   +          +    -0.23491732567608 * EducationBasic  +     0.20187086452315 *
2462929   +        EducationGraduation  +     0.07524128723108 * EducationMaster
2462930   +          +     0.02275101861599 * Marital_StatusDivorced
2462931   +          +     0.20271548664903 * Marital_StatusMarried
2462932   +          +    -0.12132069210718 * Marital_StatusSingle
2462933   +          +     0.00085090729385 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.07095220065018 * Education2n_Cycle +
-0.23491732567608 * EducationBasic + 0.20187086452315 * EducationGraduation + 0.07524128723108
* EducationMaster + 0.02275101861599 * Marital_StatusDivorced + 0.20271548664903 *
Marital_StatusMarried + -0.12132069210718 * Marital_StatusSingle + 0.00085090729385 *
Marital_StatusTogether ;
2462934   +   H1x1_3  = H1x1_3  +    -0.02268297689573 * Education2n_Cycle
2462935   +          +     0.06359770535369 * EducationBasic  +     -0.1194001280088 *
2462936   +        EducationGraduation  +     0.17299848976308 * EducationMaster
2462937   +          +     -0.4992959703281 * Marital_StatusDivorced
2462938   +          +     0.62071659624138 * Marital_StatusMarried
2462939   +          +    -0.21776202274494 * Marital_StatusSingle
2462940   +          +     0.54712874598141 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.02268297689573 * Education2n_Cycle +
0.06359770535369 * EducationBasic + -0.1194001280088 * EducationGraduation + 0.17299848976308
* EducationMaster + -0.4992959703281 * Marital_StatusDivorced + 0.62071659624138 *
Marital_StatusMarried + -0.21776202274494 * Marital_StatusSingle + 0.54712874598141 *
Marital_StatusTogether ;
2462941   +   H1x1_4  = H1x1_4  +    -0.17773353520266 * Education2n_Cycle
2462942   +          +     0.17998728120628 * EducationBasic  +    -0.00324602612825 *
2462943   +        EducationGraduation  +    -0.22448876765089 * EducationMaster
2462944   +          +     0.05626212670587 * Marital_StatusDivorced
2462945   +          +     0.14353891364597 * Marital_StatusMarried
2462946   +          +    -0.29006765622997 * Marital_StatusSingle
2462947   +          +     0.05503638282535 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.17773353520266 * Education2n_Cycle +
0.17998728120628 * EducationBasic + -0.00324602612825 * EducationGraduation +
-0.22448876765089 * EducationMaster + 0.05626212670587 * Marital_StatusDivorced +
0.14353891364597 * Marital_StatusMarried + -0.29006765622997 * Marital_StatusSingle +
0.05503638282535 * Marital_StatusTogether ;
2462948   +   H1x1_5  = H1x1_5  +     0.06634316870499 * Education2n_Cycle
2462949   +          +    -0.36153880127411 * EducationBasic  +     0.23023144658635 *
2462950   +        EducationGraduation  +    -0.06568730318683 * EducationMaster
2462951   +          +    -0.21206913700604 * Marital_StatusDivorced
2462952   +          +     0.58790643614629 * Marital_StatusMarried
2462953   +          +    -0.65995982578062 * Marital_StatusSingle
2462954   +          +     0.49642503732428 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 0.06634316870499 * Education2n_Cycle +
-0.36153880127411 * EducationBasic + 0.23023144658635 * EducationGraduation +
-0.06568730318683 * EducationMaster + -0.21206913700604 * Marital_StatusDivorced +
0.58790643614629 * Marital_StatusMarried + -0.65995982578062 * Marital_StatusSingle +
0.49642503732428 * Marital_StatusTogether ;
2462955   +   H1x1_6  = H1x1_6  +     0.16504024096118 * Education2n_Cycle
2462956   +          +     0.11925867171875 * EducationBasic  +    -0.04213907014732 *
2462957   +        EducationGraduation  +    -0.21389968555475 * EducationMaster
2462958   +          +    -0.05047370516008 * Marital_StatusDivorced
2462959   +          +    -0.23139090963669 * Marital_StatusMarried
2462960   +          +     0.04816197463249 * Marital_StatusSingle
2462961   +          +     0.04977890114896 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + 0.16504024096118 * Education2n_Cycle +
0.11925867171875 * EducationBasic + -0.04213907014732 * EducationGraduation +
-0.21389968555475 * EducationMaster + -0.05047370516008 * Marital_StatusDivorced +
-0.23139090963669 * Marital_StatusMarried + 0.04816197463249 * Marital_StatusSingle +
0.04977890114896 * Marital_StatusTogether ;
2462962   +   H1x1_1  =    -1.90576647346127 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.90576647346127 + H1x1_1 ;
2462963   +   H1x1_2  =     0.32295787429294 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.32295787429294 + H1x1_2 ;
2462964   +   H1x1_3  =     0.75117643107919 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.75117643107919 + H1x1_3 ;
2462965   +   H1x1_4  =      1.2336762751587 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.2336762751587 + H1x1_4 ;
2462966   +   H1x1_5  =    -0.97062317465491 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.97062317465491 + H1x1_5 ;
2462967   +   H1x1_6  =    -1.15756803634408 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -1.15756803634408 + H1x1_6 ;
2462968   +   _EPS = SQRT(CONSTANT('MACEPS')) ;
MPRINT(EM_DIAGRAM):   _EPS = SQRT(CONSTANT('MACEPS')) ;
2462969   +   _REC_EPS = 1/_EPS ;
MPRINT(EM_DIAGRAM):   _REC_EPS = 1/_EPS ;
2462970   +   DROP _REC_EPS _EPS ;
MPRINT(EM_DIAGRAM):   DROP _REC_EPS _EPS ;
2462971   +   IF H1x1_1  < _REC_EPS AND H1x1_1  > - _REC_EPS THEN
2462972   +   H1x1_1  = H1x1_1  * H1x1_1 ;
MPRINT(EM_DIAGRAM):   IF H1x1_1 < _REC_EPS AND H1x1_1 > - _REC_EPS THEN H1x1_1 = H1x1_1 *
H1x1_1 ;
2462973   +   ELSE H1x1_1  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_1 = _REC_EPS ;
2462974   +   IF H1x1_2  < _REC_EPS AND H1x1_2  > - _REC_EPS THEN
2462975   +   H1x1_2  = H1x1_2  * H1x1_2 ;
MPRINT(EM_DIAGRAM):   IF H1x1_2 < _REC_EPS AND H1x1_2 > - _REC_EPS THEN H1x1_2 = H1x1_2 *
H1x1_2 ;
2462976   +   ELSE H1x1_2  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_2 = _REC_EPS ;
2462977   +   IF H1x1_3  < _REC_EPS AND H1x1_3  > - _REC_EPS THEN
2462978   +   H1x1_3  = H1x1_3  * H1x1_3 ;
MPRINT(EM_DIAGRAM):   IF H1x1_3 < _REC_EPS AND H1x1_3 > - _REC_EPS THEN H1x1_3 = H1x1_3 *
H1x1_3 ;
2462979   +   ELSE H1x1_3  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_3 = _REC_EPS ;
2462980   +   IF H1x1_4  < _REC_EPS AND H1x1_4  > - _REC_EPS THEN
2462981   +   H1x1_4  = H1x1_4  * H1x1_4 ;
MPRINT(EM_DIAGRAM):   IF H1x1_4 < _REC_EPS AND H1x1_4 > - _REC_EPS THEN H1x1_4 = H1x1_4 *
H1x1_4 ;
2462982   +   ELSE H1x1_4  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_4 = _REC_EPS ;
2462983   +   IF H1x1_5  < _REC_EPS AND H1x1_5  > - _REC_EPS THEN
2462984   +   H1x1_5  = H1x1_5  * H1x1_5 ;
MPRINT(EM_DIAGRAM):   IF H1x1_5 < _REC_EPS AND H1x1_5 > - _REC_EPS THEN H1x1_5 = H1x1_5 *
H1x1_5 ;
2462985   +   ELSE H1x1_5  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_5 = _REC_EPS ;
2462986   +   IF H1x1_6  < _REC_EPS AND H1x1_6  > - _REC_EPS THEN
2462987   +   H1x1_6  = H1x1_6  * H1x1_6 ;
MPRINT(EM_DIAGRAM):   IF H1x1_6 < _REC_EPS AND H1x1_6 > - _REC_EPS THEN H1x1_6 = H1x1_6 *
H1x1_6 ;
2462988   +   ELSE H1x1_6  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_6 = _REC_EPS ;
2462989   +END;
MPRINT(EM_DIAGRAM):   END;
2462990   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2462991   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2462992   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2462993   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2462994   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2462995   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
2462996   +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
2462997   +END;
MPRINT(EM_DIAGRAM):   END;
2462998   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2462999   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2463000   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2463001   +
2463002   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2463003   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2463004   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2463005   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2463006   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2463007   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2463008   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2463009   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2463010   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2463011   +end;
MPRINT(EM_DIAGRAM):   end;
2463012   +else do;
MPRINT(EM_DIAGRAM):   else do;
2463013   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2463014   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2463015   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2463016   +   end;
MPRINT(EM_DIAGRAM):   end;
2463017   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2463018   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2463019   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2463020   +   end;
MPRINT(EM_DIAGRAM):   end;
2463021   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2463022   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2463023   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2463024   +   end;
MPRINT(EM_DIAGRAM):   end;
2463025   +end;
MPRINT(EM_DIAGRAM):   end;
2463026   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2463027   +   P_DepVar1  =    -0.99830813428318 * H1x1_1  +     1.33495006526712 * H1x1_2
2463028   +          +    -1.37942150026657 * H1x1_3  +     1.22714974922576 * H1x1_4
2463029   +          +     1.73375794385595 * H1x1_5  +     -0.0100306049679 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.99830813428318 * H1x1_1 + 1.33495006526712 * H1x1_2 +
-1.37942150026657 * H1x1_3 + 1.22714974922576 * H1x1_4 + 1.73375794385595 * H1x1_5 +
-0.0100306049679 * H1x1_6 ;
2463030   +   P_DepVar1  =    -1.90393999986167 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.90393999986167 + P_DepVar1 ;
2463031   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2463032   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2463033   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2463034   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2463035   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2463036   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2463037   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2463038   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2463039   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2463040   +END;
MPRINT(EM_DIAGRAM):   END;
2463041   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2463042   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2463043   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2463044   +END;
MPRINT(EM_DIAGRAM):   END;
2463045   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2463046   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2463047   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2463048   +END;
MPRINT(EM_DIAGRAM):   END;
2463049   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2463050   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2463051   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2463052   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2463053   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2463054   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2463055   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2463056   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2463057   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2463058   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2463059   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2463060   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2463061   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2463062   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2463063   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2463064   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2463065   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2463066   +END;
MPRINT(EM_DIAGRAM):   END;
2463067   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2463068   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2463069   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2463070   +drop
2463071   +H1x1_1
2463072   +H1x1_2
2463073   +H1x1_3
2463074   +H1x1_4
2463075   +H1x1_5
2463076   +H1x1_6
2463077   +;
MPRINT(EM_DIAGRAM):   drop H1x1_1 H1x1_2 H1x1_3 H1x1_4 H1x1_5 H1x1_6 ;
2463078   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2463079   +* Renaming variables for AutoNeural11;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural11;
2463080   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2463081   +* Renaming Posterior variables for AutoNeural11;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural11;
2463082   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2463083   +drop AutoNeural11_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural11_P_DepVar1;
2463084   +AutoNeural11_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural11_P_DepVar1 = P_DepVar1;
2463085   +drop AutoNeural11_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural11_P_DepVar0;
2463086   +AutoNeural11_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural11_P_DepVar0 = P_DepVar0;
2463087   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2463088   +* Renaming _WARN_ variable for AutoNeural11;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural11;
2463089   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2463090   +length AutoNeural11_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural11_WARN_ $4;
2463091   +drop AutoNeural11_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural11_WARN_;
2463092   +AutoNeural11_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural11_WARN_ = _WARN_;
2463093   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2463094   +* Ensmbl46: Scoring Code of model 3 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl46: Scoring Code of model 3 of 5;
2463095   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2463096   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2463097   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
2463098   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2463099   +* NODE: AutoNeural12;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural12;
2463100   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2463101   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2463102   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2463103   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2463104   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2463105   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2463106   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2463107   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2463108   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2463109   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2463110   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2463111   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2463112   +LENGTH _WARN_ $4
2463113   +      F_DepVar  $ 12
2463114   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2463115   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2463116   +
2463117   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2463118   +
2463119   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2463120   +
2463121   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2463122   +
2463123   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2463124   +
2463125   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2463126   +
2463127   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2463128   +
2463129   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2463130   +
2463131   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2463132   +
2463133   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2463134   +
2463135   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2463136   +
2463137   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2463138   +
2463139   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2463140   +
2463141   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2463142   +
2463143   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2463144   +
2463145   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2463146   +
2463147   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2463148   +
2463149   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2463150   +
2463151   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2463152   +
2463153   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2463154   +
2463155   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2463156   +
2463157   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2463158   +
2463159   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2463160   +
2463161   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2463162   +
2463163   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2463164   +
2463165   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2463166   +
2463167   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2463168   +
2463169   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2463170   +
2463171   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2463172   +
2463173   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2463174   +
2463175   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2463176   +
2463177   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2463178   +
2463179   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2463180   +
2463181   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2463182   +
2463183   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2463184   +
2463185   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2463186   +
2463187   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2463188   +
2463189   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2463190   +
2463191   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2463192   +
2463193   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2463194   +
2463195   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2463196   +
2463197   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2463198   +
2463199   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
2463200   +
2463201   +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
2463202   +
2463203   +      label H1x1_7 = 'Hidden: H1x1_=7' ;
MPRINT(EM_DIAGRAM):   label H1x1_7 = 'Hidden: H1x1_=7' ;
2463204   +
2463205   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
2463206   +
2463207   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
2463208   +
2463209   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
2463210   +
2463211   +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
2463212   +
2463213   +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
2463214   +
2463215   +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
2463216   +
2463217   +      label H1x2_7 = 'Hidden: H1x2_=7' ;
MPRINT(EM_DIAGRAM):   label H1x2_7 = 'Hidden: H1x2_=7' ;
2463218   +
2463219   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2463220   +
2463221   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2463222   +
2463223   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2463224   +
2463225   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2463226   +
2463227   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2463228   +
2463229   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2463230   +
2463231   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2463232   +
2463233   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2463234   +
2463235   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2463236   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2463237   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2463238   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2463239   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2463240   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2463241   +end;
MPRINT(EM_DIAGRAM):   end;
2463242   +else do;
MPRINT(EM_DIAGRAM):   else do;
2463243   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2463244   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2463245   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2463246   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2463247   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2463248   +   end;
MPRINT(EM_DIAGRAM):   end;
2463249   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2463250   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2463251   +   end;
MPRINT(EM_DIAGRAM):   end;
2463252   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2463253   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2463254   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2463255   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2463256   +   end;
MPRINT(EM_DIAGRAM):   end;
2463257   +end;
MPRINT(EM_DIAGRAM):   end;
2463258   +
2463259   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2463260   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2463261   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2463262   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2463263   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2463264   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2463265   +end;
MPRINT(EM_DIAGRAM):   end;
2463266   +else do;
MPRINT(EM_DIAGRAM):   else do;
2463267   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2463268   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2463269   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2463270   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2463271   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2463272   +   end;
MPRINT(EM_DIAGRAM):   end;
2463273   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2463274   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2463275   +   end;
MPRINT(EM_DIAGRAM):   end;
2463276   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2463277   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2463278   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2463279   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2463280   +   end;
MPRINT(EM_DIAGRAM):   end;
2463281   +end;
MPRINT(EM_DIAGRAM):   end;
2463282   +
2463283   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2463284   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2463285   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2463286   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2463287   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2463288   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2463289   +end;
MPRINT(EM_DIAGRAM):   end;
2463290   +else do;
MPRINT(EM_DIAGRAM):   else do;
2463291   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2463292   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2463293   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2463294   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2463295   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2463296   +   end;
MPRINT(EM_DIAGRAM):   end;
2463297   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2463298   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2463299   +   end;
MPRINT(EM_DIAGRAM):   end;
2463300   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2463301   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2463302   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2463303   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2463304   +   end;
MPRINT(EM_DIAGRAM):   end;
2463305   +end;
MPRINT(EM_DIAGRAM):   end;
2463306   +
2463307   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2463308   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2463309   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2463310   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2463311   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2463312   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2463313   +end;
MPRINT(EM_DIAGRAM):   end;
2463314   +else do;
MPRINT(EM_DIAGRAM):   else do;
2463315   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2463316   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2463317   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2463318   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2463319   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2463320   +   end;
MPRINT(EM_DIAGRAM):   end;
2463321   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2463322   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2463323   +   end;
MPRINT(EM_DIAGRAM):   end;
2463324   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2463325   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2463326   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2463327   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2463328   +   end;
MPRINT(EM_DIAGRAM):   end;
2463329   +end;
MPRINT(EM_DIAGRAM):   end;
2463330   +
2463331   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2463332   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2463333   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2463334   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2463335   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2463336   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2463337   +end;
MPRINT(EM_DIAGRAM):   end;
2463338   +else do;
MPRINT(EM_DIAGRAM):   else do;
2463339   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2463340   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2463341   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2463342   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2463343   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2463344   +   end;
MPRINT(EM_DIAGRAM):   end;
2463345   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2463346   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2463347   +   end;
MPRINT(EM_DIAGRAM):   end;
2463348   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2463349   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2463350   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2463351   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2463352   +   end;
MPRINT(EM_DIAGRAM):   end;
2463353   +end;
MPRINT(EM_DIAGRAM):   end;
2463354   +
2463355   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2463356   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2463357   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2463358   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2463359   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2463360   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2463361   +end;
MPRINT(EM_DIAGRAM):   end;
2463362   +else do;
MPRINT(EM_DIAGRAM):   else do;
2463363   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2463364   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2463365   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2463366   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2463367   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2463368   +   end;
MPRINT(EM_DIAGRAM):   end;
2463369   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2463370   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2463371   +   end;
MPRINT(EM_DIAGRAM):   end;
2463372   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2463373   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2463374   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2463375   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2463376   +   end;
MPRINT(EM_DIAGRAM):   end;
2463377   +end;
MPRINT(EM_DIAGRAM):   end;
2463378   +
2463379   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2463380   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2463381   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2463382   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2463383   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2463384   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2463385   +end;
MPRINT(EM_DIAGRAM):   end;
2463386   +else do;
MPRINT(EM_DIAGRAM):   else do;
2463387   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2463388   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2463389   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2463390   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2463391   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2463392   +   end;
MPRINT(EM_DIAGRAM):   end;
2463393   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2463394   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2463395   +   end;
MPRINT(EM_DIAGRAM):   end;
2463396   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2463397   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2463398   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2463399   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2463400   +   end;
MPRINT(EM_DIAGRAM):   end;
2463401   +end;
MPRINT(EM_DIAGRAM):   end;
2463402   +
2463403   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2463404   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
2463405   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2463406   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2463407   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2463408   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2463409   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2463410   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2463411   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2463412   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2463413   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2463414   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2463415   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2463416   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2463417   +end;
MPRINT(EM_DIAGRAM):   end;
2463418   +else do;
MPRINT(EM_DIAGRAM):   else do;
2463419   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2463420   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2463421   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2463422   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2463423   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2463424   +   end;
MPRINT(EM_DIAGRAM):   end;
2463425   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2463426   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2463427   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2463428   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2463429   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2463430   +   end;
MPRINT(EM_DIAGRAM):   end;
2463431   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2463432   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2463433   +   end;
MPRINT(EM_DIAGRAM):   end;
2463434   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2463435   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2463436   +   end;
MPRINT(EM_DIAGRAM):   end;
2463437   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2463438   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2463439   +   end;
MPRINT(EM_DIAGRAM):   end;
2463440   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2463441   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2463442   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2463443   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2463444   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2463445   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2463446   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2463447   +   end;
MPRINT(EM_DIAGRAM):   end;
2463448   +end;
MPRINT(EM_DIAGRAM):   end;
2463449   +
2463450   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2463451   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2463452   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
2463453   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2463454   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2463455   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2463456   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2463457   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2463458   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2463459   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2463460   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2463461   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2463462   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2463463   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2463464   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2463465   +end;
MPRINT(EM_DIAGRAM):   end;
2463466   +else do;
MPRINT(EM_DIAGRAM):   else do;
2463467   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2463468   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2463469   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2463470   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2463471   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2463472   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2463473   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2463474   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2463475   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2463476   +         end;
MPRINT(EM_DIAGRAM):   end;
2463477   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2463478   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2463479   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2463480   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2463481   +            end;
MPRINT(EM_DIAGRAM):   end;
2463482   +         end;
MPRINT(EM_DIAGRAM):   end;
2463483   +      end;
MPRINT(EM_DIAGRAM):   end;
2463484   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2463485   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2463486   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2463487   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2463488   +         end;
MPRINT(EM_DIAGRAM):   end;
2463489   +      end;
MPRINT(EM_DIAGRAM):   end;
2463490   +   end;
MPRINT(EM_DIAGRAM):   end;
2463491   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2463492   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2463493   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2463494   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2463495   +      end;
MPRINT(EM_DIAGRAM):   end;
2463496   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2463497   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2463498   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2463499   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2463500   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2463501   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2463502   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2463503   +         end;
MPRINT(EM_DIAGRAM):   end;
2463504   +      end;
MPRINT(EM_DIAGRAM):   end;
2463505   +   end;
MPRINT(EM_DIAGRAM):   end;
2463506   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2463507   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2463508   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2463509   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2463510   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2463511   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2463512   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2463513   +   end;
MPRINT(EM_DIAGRAM):   end;
2463514   +end;
MPRINT(EM_DIAGRAM):   end;
2463515   +
2463516   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2463517   +*** Checking missing input Interval
2463518   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2463519   +
2463520   +IF NMISS(
2463521   +   AcceptedCmpTotal ,
2463522   +   Age ,
2463523   +   Frq ,
2463524   +   Income ,
2463525   +   Kidhome ,
2463526   +   Mnt ,
2463527   +   MntFishProducts ,
2463528   +   MntFruits ,
2463529   +   MntGoldProds ,
2463530   +   MntMeatProducts ,
2463531   +   MntSweetProducts ,
2463532   +   MntWines ,
2463533   +   MonthsAsCustomer ,
2463534   +   NumCatalogPurchases ,
2463535   +   NumDealsPurchases ,
2463536   +   NumDistPurchases ,
2463537   +   NumStorePurchases ,
2463538   +   NumWebPurchases ,
2463539   +   NumWebVisitsMonth ,
2463540   +   RFMstat ,
2463541   +   RMntFrq ,
2463542   +   Recency ,
2463543   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
2463544   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2463545   +
2463546   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2463547   +END;
MPRINT(EM_DIAGRAM):   END;
2463548   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2463549   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2463550   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2463551   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2463552   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2463553   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2463554   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2463555   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2463556   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2463557   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2463558   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2463559   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2463560   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2463561   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2463562   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2463563   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2463564   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2463565   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2463566   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2463567   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2463568   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2463569   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2463570   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
2463571   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2463572   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2463573   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2463574   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2463575   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2463576   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2463577   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2463578   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2463579   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2463580   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2463581   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2463582   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2463583   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2463584   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2463585   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2463586   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2463587   +END;
MPRINT(EM_DIAGRAM):   END;
2463588   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2463589   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2463590   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2463591   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2463592   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2463593   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2463594   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2463595   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2463596   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2463597   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2463598   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2463599   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2463600   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2463601   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2463602   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2463603   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2463604   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2463605   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2463606   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2463607   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2463608   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2463609   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2463610   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
2463611   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2463612   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2463613   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2463614   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2463615   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2463616   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2463617   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2463618   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2463619   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2463620   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2463621   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
2463622   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2463623   +   ELSE S_NumCatalogPurchases
2463624   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2463625   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2463626   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2463627   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2463628   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2463629   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2463630   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2463631   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2463632   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2463633   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2463634   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2463635   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2463636   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2463637   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2463638   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2463639   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2463640   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2463641   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2463642   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2463643   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2463644   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2463645   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2463646   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2463647   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2463648   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2463649   +END;
MPRINT(EM_DIAGRAM):   END;
2463650   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2463651   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2463652   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2463653   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2463654   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2463655   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2463656   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2463657   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2463658   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2463659   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2463660   +   H1x1_1  =    -0.08478534961354 * S_AcceptedCmpTotal
2463661   +          +     0.21528166003219 * S_Age  +    -0.16079737422774 * S_Frq
2463662   +          +     0.04922044955183 * S_Income  +     0.06245849112135 *
2463663   +        S_Kidhome  +    -0.12820970008154 * S_Mnt  +    -0.00676959308959 *
2463664   +        S_MntFishProducts  +    -0.20367403957375 * S_MntFruits
2463665   +          +    -0.06459558558968 * S_MntGoldProds  +     0.01557669100416 *
2463666   +        S_MntMeatProducts  +    -0.16342003924117 * S_MntSweetProducts
2463667   +          +     0.34676276369853 * S_MntWines  +    -0.08454570225616 *
2463668   +        S_MonthsAsCustomer  +    -0.00318885387905 * S_NumCatalogPurchases
2463669   +          +      0.1112677116841 * S_NumDealsPurchases
2463670   +          +     0.01563584187072 * S_NumDistPurchases
2463671   +          +     0.19193969522995 * S_NumStorePurchases
2463672   +          +      0.3133556199984 * S_NumWebPurchases
2463673   +          +    -0.21884874785716 * S_NumWebVisitsMonth
2463674   +          +     0.08478875792216 * S_RFMstat  +     0.05964414665285 *
2463675   +        S_RMntFrq  +    -0.12595000497726 * S_Recency
2463676   +          +     -0.1238719414537 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.08478534961354 * S_AcceptedCmpTotal + 0.21528166003219 *
S_Age + -0.16079737422774 * S_Frq + 0.04922044955183 * S_Income + 0.06245849112135 * S_Kidhome
+ -0.12820970008154 * S_Mnt + -0.00676959308959 * S_MntFishProducts + -0.20367403957375 *
S_MntFruits + -0.06459558558968 * S_MntGoldProds + 0.01557669100416 * S_MntMeatProducts +
-0.16342003924117 * S_MntSweetProducts + 0.34676276369853 * S_MntWines + -0.08454570225616 *
S_MonthsAsCustomer + -0.00318885387905 * S_NumCatalogPurchases + 0.1112677116841 *
S_NumDealsPurchases + 0.01563584187072 * S_NumDistPurchases + 0.19193969522995 *
S_NumStorePurchases + 0.3133556199984 * S_NumWebPurchases + -0.21884874785716 *
S_NumWebVisitsMonth + 0.08478875792216 * S_RFMstat + 0.05964414665285 * S_RMntFrq +
-0.12595000497726 * S_Recency + -0.1238719414537 * S_Teenhome ;
2463677   +   H1x1_2  =     0.20807487357943 * S_AcceptedCmpTotal
2463678   +          +    -0.27223051908987 * S_Age  +     0.28649391533674 * S_Frq
2463679   +          +     0.46493719675068 * S_Income  +     0.10180542910079 *
2463680   +        S_Kidhome  +    -0.19573056673819 * S_Mnt  +    -0.05332725327514 *
2463681   +        S_MntFishProducts  +    -0.28610692329433 * S_MntFruits
2463682   +          +    -0.13417237194849 * S_MntGoldProds  +     0.45697707494335 *
2463683   +        S_MntMeatProducts  +    -0.28280545785477 * S_MntSweetProducts
2463684   +          +    -0.13234920069688 * S_MntWines  +     -0.2710938018651 *
2463685   +        S_MonthsAsCustomer  +     0.31174284041905 * S_NumCatalogPurchases
2463686   +          +     0.30225032753275 * S_NumDealsPurchases
2463687   +          +     0.33833359923595 * S_NumDistPurchases
2463688   +          +    -0.20255599575849 * S_NumStorePurchases
2463689   +          +    -0.12040071168942 * S_NumWebPurchases
2463690   +          +    -0.12407090307061 * S_NumWebVisitsMonth
2463691   +          +    -0.05688936259515 * S_RFMstat  +     0.15514736649245 *
2463692   +        S_RMntFrq  +     0.00838555462657 * S_Recency
2463693   +          +     0.04609426861136 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.20807487357943 * S_AcceptedCmpTotal + -0.27223051908987 *
S_Age + 0.28649391533674 * S_Frq + 0.46493719675068 * S_Income + 0.10180542910079 * S_Kidhome
+ -0.19573056673819 * S_Mnt + -0.05332725327514 * S_MntFishProducts + -0.28610692329433 *
S_MntFruits + -0.13417237194849 * S_MntGoldProds + 0.45697707494335 * S_MntMeatProducts +
-0.28280545785477 * S_MntSweetProducts + -0.13234920069688 * S_MntWines + -0.2710938018651 *
S_MonthsAsCustomer + 0.31174284041905 * S_NumCatalogPurchases + 0.30225032753275 *
S_NumDealsPurchases + 0.33833359923595 * S_NumDistPurchases + -0.20255599575849 *
S_NumStorePurchases + -0.12040071168942 * S_NumWebPurchases + -0.12407090307061 *
S_NumWebVisitsMonth + -0.05688936259515 * S_RFMstat + 0.15514736649245 * S_RMntFrq +
0.00838555462657 * S_Recency + 0.04609426861136 * S_Teenhome ;
2463694   +   H1x1_3  =    -0.30541463116928 * S_AcceptedCmpTotal
2463695   +          +    -0.01746117216025 * S_Age  +    -0.44156473334329 * S_Frq
2463696   +          +    -0.51952426304193 * S_Income  +     0.20419921255777 *
2463697   +        S_Kidhome  +    -0.18174316707953 * S_Mnt  +    -0.03813675536406 *
2463698   +        S_MntFishProducts  +     -0.0959023413712 * S_MntFruits
2463699   +          +     0.12724081783278 * S_MntGoldProds  +    -0.07639148541426 *
2463700   +        S_MntMeatProducts  +     -0.0797214413833 * S_MntSweetProducts
2463701   +          +    -0.57705931875808 * S_MntWines  +    -0.12638551201991 *
2463702   +        S_MonthsAsCustomer  +    -0.21854676704549 * S_NumCatalogPurchases
2463703   +          +     0.16792903091627 * S_NumDealsPurchases
2463704   +          +    -0.37408945626745 * S_NumDistPurchases
2463705   +          +    -0.18067262995566 * S_NumStorePurchases
2463706   +          +     0.21192146789881 * S_NumWebPurchases
2463707   +          +    -0.23547702310669 * S_NumWebVisitsMonth
2463708   +          +    -0.02272089758813 * S_RFMstat  +    -0.16409330281075 *
2463709   +        S_RMntFrq  +     0.45021846112946 * S_Recency
2463710   +          +     0.32988735727394 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.30541463116928 * S_AcceptedCmpTotal + -0.01746117216025 *
S_Age + -0.44156473334329 * S_Frq + -0.51952426304193 * S_Income + 0.20419921255777 *
S_Kidhome + -0.18174316707953 * S_Mnt + -0.03813675536406 * S_MntFishProducts +
-0.0959023413712 * S_MntFruits + 0.12724081783278 * S_MntGoldProds + -0.07639148541426 *
S_MntMeatProducts + -0.0797214413833 * S_MntSweetProducts + -0.57705931875808 * S_MntWines +
-0.12638551201991 * S_MonthsAsCustomer + -0.21854676704549 * S_NumCatalogPurchases +
0.16792903091627 * S_NumDealsPurchases + -0.37408945626745 * S_NumDistPurchases +
-0.18067262995566 * S_NumStorePurchases + 0.21192146789881 * S_NumWebPurchases +
-0.23547702310669 * S_NumWebVisitsMonth + -0.02272089758813 * S_RFMstat + -0.16409330281075 *
S_RMntFrq + 0.45021846112946 * S_Recency + 0.32988735727394 * S_Teenhome ;
2463711   +   H1x1_4  =     0.05205198916717 * S_AcceptedCmpTotal
2463712   +          +     0.25568653619739 * S_Age  +    -0.31037252146959 * S_Frq
2463713   +          +     0.42636025358982 * S_Income  +    -0.24453708980866 *
2463714   +        S_Kidhome  +    -0.07832530945892 * S_Mnt  +    -0.48332124476182 *
2463715   +        S_MntFishProducts  +    -0.13932879119138 * S_MntFruits
2463716   +          +      0.1984121566988 * S_MntGoldProds  +     1.14965897015972 *
2463717   +        S_MntMeatProducts  +     0.07027485457428 * S_MntSweetProducts
2463718   +          +    -0.56598097754046 * S_MntWines  +     0.07317190938075 *
2463719   +        S_MonthsAsCustomer  +       0.075756987983 * S_NumCatalogPurchases
2463720   +          +     0.29407429399136 * S_NumDealsPurchases
2463721   +          +     0.01610745252195 * S_NumDistPurchases
2463722   +          +    -0.17767939085628 * S_NumStorePurchases
2463723   +          +    -0.15168958538637 * S_NumWebPurchases
2463724   +          +     0.17433622143988 * S_NumWebVisitsMonth
2463725   +          +     0.11635602973993 * S_RFMstat  +     0.32632751843433 *
2463726   +        S_RMntFrq  +    -0.24758483374458 * S_Recency
2463727   +          +    -0.31468291567479 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.05205198916717 * S_AcceptedCmpTotal + 0.25568653619739 *
S_Age + -0.31037252146959 * S_Frq + 0.42636025358982 * S_Income + -0.24453708980866 *
S_Kidhome + -0.07832530945892 * S_Mnt + -0.48332124476182 * S_MntFishProducts +
-0.13932879119138 * S_MntFruits + 0.1984121566988 * S_MntGoldProds + 1.14965897015972 *
S_MntMeatProducts + 0.07027485457428 * S_MntSweetProducts + -0.56598097754046 * S_MntWines +
0.07317190938075 * S_MonthsAsCustomer + 0.075756987983 * S_NumCatalogPurchases +
0.29407429399136 * S_NumDealsPurchases + 0.01610745252195 * S_NumDistPurchases +
-0.17767939085628 * S_NumStorePurchases + -0.15168958538637 * S_NumWebPurchases +
0.17433622143988 * S_NumWebVisitsMonth + 0.11635602973993 * S_RFMstat + 0.32632751843433 *
S_RMntFrq + -0.24758483374458 * S_Recency + -0.31468291567479 * S_Teenhome ;
2463728   +   H1x1_5  =    -0.59657492903543 * S_AcceptedCmpTotal
2463729   +          +     0.23513672763458 * S_Age  +    -0.14882104210954 * S_Frq
2463730   +          +    -0.07762660201035 * S_Income  +     0.01424651904783 *
2463731   +        S_Kidhome  +     0.18748607813081 * S_Mnt  +     0.11088464897095 *
2463732   +        S_MntFishProducts  +    -0.10064450211557 * S_MntFruits
2463733   +          +     0.11161391354421 * S_MntGoldProds  +    -1.36345407290644 *
2463734   +        S_MntMeatProducts  +     0.04868729717044 * S_MntSweetProducts
2463735   +          +     0.80284342329654 * S_MntWines  +     -0.0179539622492 *
2463736   +        S_MonthsAsCustomer  +    -0.60051908798715 * S_NumCatalogPurchases
2463737   +          +    -0.37976451362108 * S_NumDealsPurchases
2463738   +          +    -0.17027731520801 * S_NumDistPurchases
2463739   +          +     0.59849493667087 * S_NumStorePurchases
2463740   +          +     0.65481480560301 * S_NumWebPurchases
2463741   +          +    -0.68253224576609 * S_NumWebVisitsMonth
2463742   +          +    -0.16723490165629 * S_RFMstat  +    -0.10533797887644 *
2463743   +        S_RMntFrq  +     0.81382723915873 * S_Recency
2463744   +          +     0.06049401205856 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.59657492903543 * S_AcceptedCmpTotal + 0.23513672763458 *
S_Age + -0.14882104210954 * S_Frq + -0.07762660201035 * S_Income + 0.01424651904783 *
S_Kidhome + 0.18748607813081 * S_Mnt + 0.11088464897095 * S_MntFishProducts +
-0.10064450211557 * S_MntFruits + 0.11161391354421 * S_MntGoldProds + -1.36345407290644 *
S_MntMeatProducts + 0.04868729717044 * S_MntSweetProducts + 0.80284342329654 * S_MntWines +
-0.0179539622492 * S_MonthsAsCustomer + -0.60051908798715 * S_NumCatalogPurchases +
-0.37976451362108 * S_NumDealsPurchases + -0.17027731520801 * S_NumDistPurchases +
0.59849493667087 * S_NumStorePurchases + 0.65481480560301 * S_NumWebPurchases +
-0.68253224576609 * S_NumWebVisitsMonth + -0.16723490165629 * S_RFMstat + -0.10533797887644 *
S_RMntFrq + 0.81382723915873 * S_Recency + 0.06049401205856 * S_Teenhome ;
2463745   +   H1x1_6  =    -0.07547841798202 * S_AcceptedCmpTotal
2463746   +          +     0.22445278254589 * S_Age  +    -0.26357481075143 * S_Frq
2463747   +          +     0.06894154144261 * S_Income  +     0.20713236126681 *
2463748   +        S_Kidhome  +    -0.14103612934526 * S_Mnt  +     0.36334508557452 *
2463749   +        S_MntFishProducts  +    -0.20862425337296 * S_MntFruits
2463750   +          +    -0.29089690099273 * S_MntGoldProds  +     0.11336893090527 *
2463751   +        S_MntMeatProducts  +    -0.13547374281924 * S_MntSweetProducts
2463752   +          +     0.02228828195539 * S_MntWines  +    -0.19257650420334 *
2463753   +        S_MonthsAsCustomer  +      0.1365526319824 * S_NumCatalogPurchases
2463754   +          +    -0.07686699131623 * S_NumDealsPurchases
2463755   +          +    -0.07220460738926 * S_NumDistPurchases
2463756   +          +    -0.06554027468389 * S_NumStorePurchases
2463757   +          +     0.10422838158001 * S_NumWebPurchases
2463758   +          +    -0.03858550147892 * S_NumWebVisitsMonth
2463759   +          +    -0.06397448441373 * S_RFMstat  +     0.21747838287147 *
2463760   +        S_RMntFrq  +     0.24839313159913 * S_Recency
2463761   +          +    -0.06317317698653 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -0.07547841798202 * S_AcceptedCmpTotal + 0.22445278254589 *
S_Age + -0.26357481075143 * S_Frq + 0.06894154144261 * S_Income + 0.20713236126681 * S_Kidhome
+ -0.14103612934526 * S_Mnt + 0.36334508557452 * S_MntFishProducts + -0.20862425337296 *
S_MntFruits + -0.29089690099273 * S_MntGoldProds + 0.11336893090527 * S_MntMeatProducts +
-0.13547374281924 * S_MntSweetProducts + 0.02228828195539 * S_MntWines + -0.19257650420334 *
S_MonthsAsCustomer + 0.1365526319824 * S_NumCatalogPurchases + -0.07686699131623 *
S_NumDealsPurchases + -0.07220460738926 * S_NumDistPurchases + -0.06554027468389 *
S_NumStorePurchases + 0.10422838158001 * S_NumWebPurchases + -0.03858550147892 *
S_NumWebVisitsMonth + -0.06397448441373 * S_RFMstat + 0.21747838287147 * S_RMntFrq +
0.24839313159913 * S_Recency + -0.06317317698653 * S_Teenhome ;
2463762   +   H1x1_7  =    -0.08604903695444 * S_AcceptedCmpTotal
2463763   +          +    -0.14807437541992 * S_Age  +     0.01466157584549 * S_Frq
2463764   +          +    -0.09883966180507 * S_Income  +     0.51992566778352 *
2463765   +        S_Kidhome  +     0.29795006703636 * S_Mnt  +    -0.08922020500011 *
2463766   +        S_MntFishProducts  +     0.19836834402079 * S_MntFruits
2463767   +          +    -0.11292241468378 * S_MntGoldProds  +       0.584464452194 *
2463768   +        S_MntMeatProducts  +     0.22625326024073 * S_MntSweetProducts
2463769   +          +     0.24074129944382 * S_MntWines  +     0.13538906557527 *
2463770   +        S_MonthsAsCustomer  +    -0.01228250248922 * S_NumCatalogPurchases
2463771   +          +    -0.07920122387563 * S_NumDealsPurchases
2463772   +          +      0.3649244061347 * S_NumDistPurchases
2463773   +          +     0.36475853688403 * S_NumStorePurchases
2463774   +          +     0.02153991404063 * S_NumWebPurchases
2463775   +          +    -0.94080669139388 * S_NumWebVisitsMonth
2463776   +          +     0.24853677977494 * S_RFMstat  +     0.37015183933951 *
2463777   +        S_RMntFrq  +      0.6724157721663 * S_Recency
2463778   +          +      0.1615471643866 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_7 = -0.08604903695444 * S_AcceptedCmpTotal + -0.14807437541992 *
S_Age + 0.01466157584549 * S_Frq + -0.09883966180507 * S_Income + 0.51992566778352 * S_Kidhome
+ 0.29795006703636 * S_Mnt + -0.08922020500011 * S_MntFishProducts + 0.19836834402079 *
S_MntFruits + -0.11292241468378 * S_MntGoldProds + 0.584464452194 * S_MntMeatProducts +
0.22625326024073 * S_MntSweetProducts + 0.24074129944382 * S_MntWines + 0.13538906557527 *
S_MonthsAsCustomer + -0.01228250248922 * S_NumCatalogPurchases + -0.07920122387563 *
S_NumDealsPurchases + 0.3649244061347 * S_NumDistPurchases + 0.36475853688403 *
S_NumStorePurchases + 0.02153991404063 * S_NumWebPurchases + -0.94080669139388 *
S_NumWebVisitsMonth + 0.24853677977494 * S_RFMstat + 0.37015183933951 * S_RMntFrq +
0.6724157721663 * S_Recency + 0.1615471643866 * S_Teenhome ;
2463779   +   H1x1_1  = H1x1_1  +     0.04431608362128 * AcceptedCmp10
2463780   +          +       0.145592087795 * AcceptedCmp20  +    -0.18972867139938 *
2463781   +        AcceptedCmp30  +     0.11297731320888 * AcceptedCmp40
2463782   +          +     0.15203974410995 * AcceptedCmp50  +     0.05130421316428 *
2463783   +        Complain0  +     0.33576036450343 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.04431608362128 * AcceptedCmp10 + 0.145592087795 *
AcceptedCmp20 + -0.18972867139938 * AcceptedCmp30 + 0.11297731320888 * AcceptedCmp40 +
0.15203974410995 * AcceptedCmp50 + 0.05130421316428 * Complain0 + 0.33576036450343 *
HigherEducationBinary0 ;
2463784   +   H1x1_2  = H1x1_2  +    -0.05495742609855 * AcceptedCmp10
2463785   +          +    -0.08873650760176 * AcceptedCmp20  +    -0.16380549867313 *
2463786   +        AcceptedCmp30  +    -0.24495261884932 * AcceptedCmp40
2463787   +          +    -0.22199506896148 * AcceptedCmp50  +       0.149484615172 *
2463788   +        Complain0  +     0.01091791142552 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.05495742609855 * AcceptedCmp10 + -0.08873650760176
* AcceptedCmp20 + -0.16380549867313 * AcceptedCmp30 + -0.24495261884932 * AcceptedCmp40 +
-0.22199506896148 * AcceptedCmp50 + 0.149484615172 * Complain0 + 0.01091791142552 *
HigherEducationBinary0 ;
2463789   +   H1x1_3  = H1x1_3  +     0.03473702421341 * AcceptedCmp10
2463790   +          +    -0.11226718065217 * AcceptedCmp20  +     0.19024579384296 *
2463791   +        AcceptedCmp30  +     0.15478548865598 * AcceptedCmp40
2463792   +          +     0.15222823671897 * AcceptedCmp50  +     0.07713012834947 *
2463793   +        Complain0  +    -0.18741708707661 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.03473702421341 * AcceptedCmp10 + -0.11226718065217 *
AcceptedCmp20 + 0.19024579384296 * AcceptedCmp30 + 0.15478548865598 * AcceptedCmp40 +
0.15222823671897 * AcceptedCmp50 + 0.07713012834947 * Complain0 + -0.18741708707661 *
HigherEducationBinary0 ;
2463794   +   H1x1_4  = H1x1_4  +    -0.25622127302429 * AcceptedCmp10
2463795   +          +    -0.39059103518073 * AcceptedCmp20  +    -0.29716603631807 *
2463796   +        AcceptedCmp30  +    -0.20875694971526 * AcceptedCmp40
2463797   +          +    -0.35128787139073 * AcceptedCmp50  +    -0.28848733462386 *
2463798   +        Complain0  +      0.4276503747649 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.25622127302429 * AcceptedCmp10 + -0.39059103518073
* AcceptedCmp20 + -0.29716603631807 * AcceptedCmp30 + -0.20875694971526 * AcceptedCmp40 +
-0.35128787139073 * AcceptedCmp50 + -0.28848733462386 * Complain0 + 0.4276503747649 *
HigherEducationBinary0 ;
2463799   +   H1x1_5  = H1x1_5  +    -0.06574875851088 * AcceptedCmp10
2463800   +          +    -0.27375195259265 * AcceptedCmp20  +     -0.2740681662293 *
2463801   +        AcceptedCmp30  +    -0.14697156898736 * AcceptedCmp40
2463802   +          +     0.17684649468835 * AcceptedCmp50  +    -0.09979172944646 *
2463803   +        Complain0  +     0.38986664202197 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.06574875851088 * AcceptedCmp10 + -0.27375195259265
* AcceptedCmp20 + -0.2740681662293 * AcceptedCmp30 + -0.14697156898736 * AcceptedCmp40 +
0.17684649468835 * AcceptedCmp50 + -0.09979172944646 * Complain0 + 0.38986664202197 *
HigherEducationBinary0 ;
2463804   +   H1x1_6  = H1x1_6  +     0.08696678529441 * AcceptedCmp10
2463805   +          +     0.09467543942215 * AcceptedCmp20  +     0.04586779705477 *
2463806   +        AcceptedCmp30  +    -0.12591921836379 * AcceptedCmp40
2463807   +          +     0.20150138392895 * AcceptedCmp50  +     0.27764282700214 *
2463808   +        Complain0  +     0.13985738522066 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + 0.08696678529441 * AcceptedCmp10 + 0.09467543942215 *
AcceptedCmp20 + 0.04586779705477 * AcceptedCmp30 + -0.12591921836379 * AcceptedCmp40 +
0.20150138392895 * AcceptedCmp50 + 0.27764282700214 * Complain0 + 0.13985738522066 *
HigherEducationBinary0 ;
2463809   +   H1x1_7  = H1x1_7  +    -0.10455069401218 * AcceptedCmp10
2463810   +          +      0.1311831941372 * AcceptedCmp20  +     0.17844209104604 *
2463811   +        AcceptedCmp30  +     0.19406707592815 * AcceptedCmp40
2463812   +          +    -0.00068155012319 * AcceptedCmp50  +     0.13245364846536 *
2463813   +        Complain0  +    -0.05165256160872 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_7 = H1x1_7 + -0.10455069401218 * AcceptedCmp10 + 0.1311831941372 *
AcceptedCmp20 + 0.17844209104604 * AcceptedCmp30 + 0.19406707592815 * AcceptedCmp40 +
-0.00068155012319 * AcceptedCmp50 + 0.13245364846536 * Complain0 + -0.05165256160872 *
HigherEducationBinary0 ;
2463814   +   H1x1_1  = H1x1_1  +     0.28967939808759 * Education2n_Cycle
2463815   +          +    -0.15795056374781 * EducationBasic  +    -0.00649803471307 *
2463816   +        EducationGraduation  +     0.19520715924532 * EducationMaster
2463817   +          +     0.07744097241553 * Marital_StatusDivorced
2463818   +          +     -0.0247463100385 * Marital_StatusMarried
2463819   +          +     0.05804915234573 * Marital_StatusSingle
2463820   +          +    -0.08320125047871 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.28967939808759 * Education2n_Cycle +
-0.15795056374781 * EducationBasic + -0.00649803471307 * EducationGraduation +
0.19520715924532 * EducationMaster + 0.07744097241553 * Marital_StatusDivorced +
-0.0247463100385 * Marital_StatusMarried + 0.05804915234573 * Marital_StatusSingle +
-0.08320125047871 * Marital_StatusTogether ;
2463821   +   H1x1_2  = H1x1_2  +     0.12524444422085 * Education2n_Cycle
2463822   +          +    -0.30278286924729 * EducationBasic  +     0.37480827366421 *
2463823   +        EducationGraduation  +     0.34209136290694 * EducationMaster
2463824   +          +     0.01390668926269 * Marital_StatusDivorced
2463825   +          +     0.01136282152074 * Marital_StatusMarried
2463826   +          +     0.12450246418789 * Marital_StatusSingle
2463827   +          +     -0.1576148519872 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.12524444422085 * Education2n_Cycle +
-0.30278286924729 * EducationBasic + 0.37480827366421 * EducationGraduation + 0.34209136290694
* EducationMaster + 0.01390668926269 * Marital_StatusDivorced + 0.01136282152074 *
Marital_StatusMarried + 0.12450246418789 * Marital_StatusSingle + -0.1576148519872 *
Marital_StatusTogether ;
2463828   +   H1x1_3  = H1x1_3  +    -0.14589041643593 * Education2n_Cycle
2463829   +          +    -0.15691118816463 * EducationBasic  +      0.1993616073183 *
2463830   +        EducationGraduation  +     0.02862010255145 * EducationMaster
2463831   +          +    -0.19133456931879 * Marital_StatusDivorced
2463832   +          +     0.56263566654996 * Marital_StatusMarried
2463833   +          +    -0.42172822038882 * Marital_StatusSingle
2463834   +          +     0.42023140643292 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.14589041643593 * Education2n_Cycle +
-0.15691118816463 * EducationBasic + 0.1993616073183 * EducationGraduation + 0.02862010255145
* EducationMaster + -0.19133456931879 * Marital_StatusDivorced + 0.56263566654996 *
Marital_StatusMarried + -0.42172822038882 * Marital_StatusSingle + 0.42023140643292 *
Marital_StatusTogether ;
2463835   +   H1x1_4  = H1x1_4  +     0.10038585978656 * Education2n_Cycle
2463836   +          +    -0.11388609002984 * EducationBasic  +    -0.14980553500983 *
2463837   +        EducationGraduation  +    -0.07646595330369 * EducationMaster
2463838   +          +    -0.19871205065609 * Marital_StatusDivorced
2463839   +          +    -0.14730795681603 * Marital_StatusMarried
2463840   +          +     0.05055432510362 * Marital_StatusSingle
2463841   +          +     0.06558965292395 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.10038585978656 * Education2n_Cycle +
-0.11388609002984 * EducationBasic + -0.14980553500983 * EducationGraduation +
-0.07646595330369 * EducationMaster + -0.19871205065609 * Marital_StatusDivorced +
-0.14730795681603 * Marital_StatusMarried + 0.05055432510362 * Marital_StatusSingle +
0.06558965292395 * Marital_StatusTogether ;
2463842   +   H1x1_5  = H1x1_5  +      0.0015835307855 * Education2n_Cycle
2463843   +          +    -0.22658746797638 * EducationBasic  +    -0.03445982386977 *
2463844   +        EducationGraduation  +     0.11375378192685 * EducationMaster
2463845   +          +    -0.35623807358995 * Marital_StatusDivorced
2463846   +          +     0.30324726283965 * Marital_StatusMarried
2463847   +          +    -0.18561093467927 * Marital_StatusSingle
2463848   +          +       0.395424582152 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 0.0015835307855 * Education2n_Cycle +
-0.22658746797638 * EducationBasic + -0.03445982386977 * EducationGraduation +
0.11375378192685 * EducationMaster + -0.35623807358995 * Marital_StatusDivorced +
0.30324726283965 * Marital_StatusMarried + -0.18561093467927 * Marital_StatusSingle +
0.395424582152 * Marital_StatusTogether ;
2463849   +   H1x1_6  = H1x1_6  +    -0.23751822587858 * Education2n_Cycle
2463850   +          +    -0.01687300040825 * EducationBasic  +     0.23236967703011 *
2463851   +        EducationGraduation  +      0.0725289831541 * EducationMaster
2463852   +          +     0.11581014663368 * Marital_StatusDivorced
2463853   +          +    -0.31070638037659 * Marital_StatusMarried
2463854   +          +     0.17131747253949 * Marital_StatusSingle
2463855   +          +    -0.19314955966476 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + -0.23751822587858 * Education2n_Cycle +
-0.01687300040825 * EducationBasic + 0.23236967703011 * EducationGraduation + 0.0725289831541
* EducationMaster + 0.11581014663368 * Marital_StatusDivorced + -0.31070638037659 *
Marital_StatusMarried + 0.17131747253949 * Marital_StatusSingle + -0.19314955966476 *
Marital_StatusTogether ;
2463856   +   H1x1_7  = H1x1_7  +     0.00103693282479 * Education2n_Cycle
2463857   +          +     0.12608909598752 * EducationBasic  +     -0.2366673091666 *
2463858   +        EducationGraduation  +     0.24413217290922 * EducationMaster
2463859   +          +    -0.42450599871892 * Marital_StatusDivorced
2463860   +          +     0.48162905075885 * Marital_StatusMarried
2463861   +          +    -0.26618507749283 * Marital_StatusSingle
2463862   +          +     0.38053668740338 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_7 = H1x1_7 + 0.00103693282479 * Education2n_Cycle +
0.12608909598752 * EducationBasic + -0.2366673091666 * EducationGraduation + 0.24413217290922
* EducationMaster + -0.42450599871892 * Marital_StatusDivorced + 0.48162905075885 *
Marital_StatusMarried + -0.26618507749283 * Marital_StatusSingle + 0.38053668740338 *
Marital_StatusTogether ;
2463863   +   H1x1_1  =     0.12149136705075 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.12149136705075 + H1x1_1 ;
2463864   +   H1x1_2  =    -0.97489696657001 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.97489696657001 + H1x1_2 ;
2463865   +   H1x1_3  =    -0.70605220802968 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.70605220802968 + H1x1_3 ;
2463866   +   H1x1_4  =    -1.07783206982379 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -1.07783206982379 + H1x1_4 ;
2463867   +   H1x1_5  =    -1.00400706261511 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.00400706261511 + H1x1_5 ;
2463868   +   H1x1_6  =     0.22600488314839 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0.22600488314839 + H1x1_6 ;
2463869   +   H1x1_7  =     1.55642446968077 + H1x1_7 ;
MPRINT(EM_DIAGRAM):   H1x1_7 = 1.55642446968077 + H1x1_7 ;
2463870   +   _EPS = SQRT(CONSTANT('MACEPS')) ;
MPRINT(EM_DIAGRAM):   _EPS = SQRT(CONSTANT('MACEPS')) ;
2463871   +   _REC_EPS = 1/_EPS ;
MPRINT(EM_DIAGRAM):   _REC_EPS = 1/_EPS ;
2463872   +   DROP _REC_EPS _EPS ;
MPRINT(EM_DIAGRAM):   DROP _REC_EPS _EPS ;
2463873   +   IF H1x1_1  < _REC_EPS AND H1x1_1  > - _REC_EPS THEN
2463874   +   H1x1_1  = H1x1_1  * H1x1_1 ;
MPRINT(EM_DIAGRAM):   IF H1x1_1 < _REC_EPS AND H1x1_1 > - _REC_EPS THEN H1x1_1 = H1x1_1 *
H1x1_1 ;
2463875   +   ELSE H1x1_1  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_1 = _REC_EPS ;
2463876   +   IF H1x1_2  < _REC_EPS AND H1x1_2  > - _REC_EPS THEN
2463877   +   H1x1_2  = H1x1_2  * H1x1_2 ;
MPRINT(EM_DIAGRAM):   IF H1x1_2 < _REC_EPS AND H1x1_2 > - _REC_EPS THEN H1x1_2 = H1x1_2 *
H1x1_2 ;
2463878   +   ELSE H1x1_2  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_2 = _REC_EPS ;
2463879   +   IF H1x1_3  < _REC_EPS AND H1x1_3  > - _REC_EPS THEN
2463880   +   H1x1_3  = H1x1_3  * H1x1_3 ;
MPRINT(EM_DIAGRAM):   IF H1x1_3 < _REC_EPS AND H1x1_3 > - _REC_EPS THEN H1x1_3 = H1x1_3 *
H1x1_3 ;
2463881   +   ELSE H1x1_3  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_3 = _REC_EPS ;
2463882   +   IF H1x1_4  < _REC_EPS AND H1x1_4  > - _REC_EPS THEN
2463883   +   H1x1_4  = H1x1_4  * H1x1_4 ;
MPRINT(EM_DIAGRAM):   IF H1x1_4 < _REC_EPS AND H1x1_4 > - _REC_EPS THEN H1x1_4 = H1x1_4 *
H1x1_4 ;
2463884   +   ELSE H1x1_4  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_4 = _REC_EPS ;
2463885   +   IF H1x1_5  < _REC_EPS AND H1x1_5  > - _REC_EPS THEN
2463886   +   H1x1_5  = H1x1_5  * H1x1_5 ;
MPRINT(EM_DIAGRAM):   IF H1x1_5 < _REC_EPS AND H1x1_5 > - _REC_EPS THEN H1x1_5 = H1x1_5 *
H1x1_5 ;
2463887   +   ELSE H1x1_5  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_5 = _REC_EPS ;
2463888   +   IF H1x1_6  < _REC_EPS AND H1x1_6  > - _REC_EPS THEN
2463889   +   H1x1_6  = H1x1_6  * H1x1_6 ;
MPRINT(EM_DIAGRAM):   IF H1x1_6 < _REC_EPS AND H1x1_6 > - _REC_EPS THEN H1x1_6 = H1x1_6 *
H1x1_6 ;
2463890   +   ELSE H1x1_6  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_6 = _REC_EPS ;
2463891   +   IF H1x1_7  < _REC_EPS AND H1x1_7  > - _REC_EPS THEN
2463892   +   H1x1_7  = H1x1_7  * H1x1_7 ;
MPRINT(EM_DIAGRAM):   IF H1x1_7 < _REC_EPS AND H1x1_7 > - _REC_EPS THEN H1x1_7 = H1x1_7 *
H1x1_7 ;
2463893   +   ELSE H1x1_7  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_7 = _REC_EPS ;
2463894   +END;
MPRINT(EM_DIAGRAM):   END;
2463895   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2463896   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2463897   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2463898   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2463899   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2463900   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
2463901   +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
2463902   +   H1x1_7  = .;
MPRINT(EM_DIAGRAM):   H1x1_7 = .;
2463903   +END;
MPRINT(EM_DIAGRAM):   END;
2463904   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2463905   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
2463906   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2463907   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2463908   +   H1x2_1  =    -1.36226288448745 * S_AcceptedCmpTotal
2463909   +          +     -1.3328616352886 * S_Age  +     1.25346137866034 * S_Frq
2463910   +          +    -1.21746243786295 * S_Income  +     2.83911738158074 *
2463911   +        S_Kidhome  +    -0.60784009102409 * S_Mnt  +     1.57752173634223 *
2463912   +        S_MntFishProducts  +    -0.26776567401075 * S_MntFruits
2463913   +          +     1.09584731081081 * S_MntGoldProds  +     1.22333044103532 *
2463914   +        S_MntMeatProducts  +     0.42827942745016 * S_MntSweetProducts
2463915   +          +     0.67813472792448 * S_MntWines  +     0.56816492004798 *
2463916   +        S_MonthsAsCustomer  +     0.58113470399079 * S_NumCatalogPurchases
2463917   +          +     1.96719021971894 * S_NumDealsPurchases
2463918   +          +    -0.44535354794671 * S_NumDistPurchases
2463919   +          +    -0.54827762736866 * S_NumStorePurchases
2463920   +          +     1.02703310241897 * S_NumWebPurchases
2463921   +          +    -0.12526997502601 * S_NumWebVisitsMonth
2463922   +          +    -0.55803926383776 * S_RFMstat  +     0.01819380776809 *
2463923   +        S_RMntFrq  +       0.651688575044 * S_Recency
2463924   +          +     1.58682398186611 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -1.36226288448745 * S_AcceptedCmpTotal + -1.3328616352886 *
S_Age + 1.25346137866034 * S_Frq + -1.21746243786295 * S_Income + 2.83911738158074 * S_Kidhome
+ -0.60784009102409 * S_Mnt + 1.57752173634223 * S_MntFishProducts + -0.26776567401075 *
S_MntFruits + 1.09584731081081 * S_MntGoldProds + 1.22333044103532 * S_MntMeatProducts +
0.42827942745016 * S_MntSweetProducts + 0.67813472792448 * S_MntWines + 0.56816492004798 *
S_MonthsAsCustomer + 0.58113470399079 * S_NumCatalogPurchases + 1.96719021971894 *
S_NumDealsPurchases + -0.44535354794671 * S_NumDistPurchases + -0.54827762736866 *
S_NumStorePurchases + 1.02703310241897 * S_NumWebPurchases + -0.12526997502601 *
S_NumWebVisitsMonth + -0.55803926383776 * S_RFMstat + 0.01819380776809 * S_RMntFrq +
0.651688575044 * S_Recency + 1.58682398186611 * S_Teenhome ;
2463925   +   H1x2_2  =    -0.38064507857029 * S_AcceptedCmpTotal
2463926   +          +    -0.49661801158351 * S_Age  +    -0.89589399799916 * S_Frq
2463927   +          +     -0.0121499288597 * S_Income  +    -0.48023022827846 *
2463928   +        S_Kidhome  +     -0.5183846206029 * S_Mnt  +    -3.13913899012334 *
2463929   +        S_MntFishProducts  +    -2.07291335687615 * S_MntFruits
2463930   +          +     0.51019753905662 * S_MntGoldProds  +     0.11458666377917 *
2463931   +        S_MntMeatProducts  +     -1.8499241966205 * S_MntSweetProducts
2463932   +          +     0.23160544044172 * S_MntWines  +    -0.48210626907943 *
2463933   +        S_MonthsAsCustomer  +     0.15500845227752 * S_NumCatalogPurchases
2463934   +          +     1.34659447971131 * S_NumDealsPurchases
2463935   +          +    -0.51624251310423 * S_NumDistPurchases
2463936   +          +      -1.283121574848 * S_NumStorePurchases
2463937   +          +    -1.83517806228926 * S_NumWebPurchases
2463938   +          +     0.51321339475285 * S_NumWebVisitsMonth
2463939   +          +    -1.86431704283342 * S_RFMstat  +    -1.52065204326569 *
2463940   +        S_RMntFrq  +    -0.33186055095462 * S_Recency
2463941   +          +    -0.49524729407054 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.38064507857029 * S_AcceptedCmpTotal + -0.49661801158351 *
S_Age + -0.89589399799916 * S_Frq + -0.0121499288597 * S_Income + -0.48023022827846 *
S_Kidhome + -0.5183846206029 * S_Mnt + -3.13913899012334 * S_MntFishProducts +
-2.07291335687615 * S_MntFruits + 0.51019753905662 * S_MntGoldProds + 0.11458666377917 *
S_MntMeatProducts + -1.8499241966205 * S_MntSweetProducts + 0.23160544044172 * S_MntWines +
-0.48210626907943 * S_MonthsAsCustomer + 0.15500845227752 * S_NumCatalogPurchases +
1.34659447971131 * S_NumDealsPurchases + -0.51624251310423 * S_NumDistPurchases +
-1.283121574848 * S_NumStorePurchases + -1.83517806228926 * S_NumWebPurchases +
0.51321339475285 * S_NumWebVisitsMonth + -1.86431704283342 * S_RFMstat + -1.52065204326569 *
S_RMntFrq + -0.33186055095462 * S_Recency + -0.49524729407054 * S_Teenhome ;
2463942   +   H1x2_3  =    -0.75774003934728 * S_AcceptedCmpTotal
2463943   +          +    -0.85312030825337 * S_Age  +    -0.01726294458221 * S_Frq
2463944   +          +     0.58598267983786 * S_Income  +     1.30497766805554 *
2463945   +        S_Kidhome  +    -0.84214135491022 * S_Mnt  +     0.55305862453787 *
2463946   +        S_MntFishProducts  +      0.6488663613899 * S_MntFruits
2463947   +          +    -0.83189439197558 * S_MntGoldProds  +    -0.07500050412653 *
2463948   +        S_MntMeatProducts  +    -0.06401928810253 * S_MntSweetProducts
2463949   +          +      0.5940135658334 * S_MntWines  +    -0.04573352455984 *
2463950   +        S_MonthsAsCustomer  +    -1.53610650634069 * S_NumCatalogPurchases
2463951   +          +     0.67492297345004 * S_NumDealsPurchases
2463952   +          +    -0.40437875375926 * S_NumDistPurchases
2463953   +          +     0.36322603681545 * S_NumStorePurchases
2463954   +          +    -1.15315070635524 * S_NumWebPurchases
2463955   +          +     1.20707272201156 * S_NumWebVisitsMonth
2463956   +          +     0.12192566357285 * S_RFMstat  +    -0.46711219170047 *
2463957   +        S_RMntFrq  +     1.89703582493259 * S_Recency
2463958   +          +     1.07511942237188 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.75774003934728 * S_AcceptedCmpTotal + -0.85312030825337 *
S_Age + -0.01726294458221 * S_Frq + 0.58598267983786 * S_Income + 1.30497766805554 * S_Kidhome
+ -0.84214135491022 * S_Mnt + 0.55305862453787 * S_MntFishProducts + 0.6488663613899 *
S_MntFruits + -0.83189439197558 * S_MntGoldProds + -0.07500050412653 * S_MntMeatProducts +
-0.06401928810253 * S_MntSweetProducts + 0.5940135658334 * S_MntWines + -0.04573352455984 *
S_MonthsAsCustomer + -1.53610650634069 * S_NumCatalogPurchases + 0.67492297345004 *
S_NumDealsPurchases + -0.40437875375926 * S_NumDistPurchases + 0.36322603681545 *
S_NumStorePurchases + -1.15315070635524 * S_NumWebPurchases + 1.20707272201156 *
S_NumWebVisitsMonth + 0.12192566357285 * S_RFMstat + -0.46711219170047 * S_RMntFrq +
1.89703582493259 * S_Recency + 1.07511942237188 * S_Teenhome ;
2463959   +   H1x2_4  =     0.62123819069495 * S_AcceptedCmpTotal
2463960   +          +     0.03399237520702 * S_Age  +    -0.01971421795338 * S_Frq
2463961   +          +    -0.54728266919056 * S_Income  +     -0.4634195771237 *
2463962   +        S_Kidhome  +    -1.19055247712911 * S_Mnt  +      1.4307770729159 *
2463963   +        S_MntFishProducts  +    -0.83895281276374 * S_MntFruits
2463964   +          +    -0.48578798244317 * S_MntGoldProds  +     -0.2846617807101 *
2463965   +        S_MntMeatProducts  +     0.70721686533987 * S_MntSweetProducts
2463966   +          +     1.32824513551741 * S_MntWines  +    -0.62654342755965 *
2463967   +        S_MonthsAsCustomer  +    -0.97245161056543 * S_NumCatalogPurchases
2463968   +          +    -0.41427983342148 * S_NumDealsPurchases
2463969   +          +    -0.22714305629205 * S_NumDistPurchases
2463970   +          +    -0.78763182048862 * S_NumStorePurchases
2463971   +          +    -0.26669253451501 * S_NumWebPurchases
2463972   +          +    -0.79601078616342 * S_NumWebVisitsMonth
2463973   +          +    -0.03863278696502 * S_RFMstat  +     0.95011556103056 *
2463974   +        S_RMntFrq  +     0.57184629262878 * S_Recency
2463975   +          +    -0.21560478702461 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.62123819069495 * S_AcceptedCmpTotal + 0.03399237520702 *
S_Age + -0.01971421795338 * S_Frq + -0.54728266919056 * S_Income + -0.4634195771237 *
S_Kidhome + -1.19055247712911 * S_Mnt + 1.4307770729159 * S_MntFishProducts +
-0.83895281276374 * S_MntFruits + -0.48578798244317 * S_MntGoldProds + -0.2846617807101 *
S_MntMeatProducts + 0.70721686533987 * S_MntSweetProducts + 1.32824513551741 * S_MntWines +
-0.62654342755965 * S_MonthsAsCustomer + -0.97245161056543 * S_NumCatalogPurchases +
-0.41427983342148 * S_NumDealsPurchases + -0.22714305629205 * S_NumDistPurchases +
-0.78763182048862 * S_NumStorePurchases + -0.26669253451501 * S_NumWebPurchases +
-0.79601078616342 * S_NumWebVisitsMonth + -0.03863278696502 * S_RFMstat + 0.95011556103056 *
S_RMntFrq + 0.57184629262878 * S_Recency + -0.21560478702461 * S_Teenhome ;
2463976   +   H1x2_5  =     1.47906557745075 * S_AcceptedCmpTotal
2463977   +          +    -0.31060566334198 * S_Age  +     0.56472424389718 * S_Frq
2463978   +          +     2.16541682726249 * S_Income  +    -0.34119803841059 *
2463979   +        S_Kidhome  +    -0.53783050542796 * S_Mnt  +     0.54954821448236 *
2463980   +        S_MntFishProducts  +    -0.48449918837838 * S_MntFruits
2463981   +          +     0.29783052620672 * S_MntGoldProds  +    -0.15068954343013 *
2463982   +        S_MntMeatProducts  +     0.12733251381761 * S_MntSweetProducts
2463983   +          +    -2.46709166794296 * S_MntWines  +     -1.2011286508879 *
2463984   +        S_MonthsAsCustomer  +    -0.88194814936932 * S_NumCatalogPurchases
2463985   +          +      0.7697882092212 * S_NumDealsPurchases
2463986   +          +     0.51864835453056 * S_NumDistPurchases
2463987   +          +    -1.18320366630444 * S_NumStorePurchases
2463988   +          +     -0.6608394639529 * S_NumWebPurchases
2463989   +          +    -0.03948137707769 * S_NumWebVisitsMonth
2463990   +          +     1.01076462488608 * S_RFMstat  +    -0.91562280329354 *
2463991   +        S_RMntFrq  +    -1.07576669501238 * S_Recency
2463992   +          +     -0.5946628412106 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.47906557745075 * S_AcceptedCmpTotal + -0.31060566334198 *
S_Age + 0.56472424389718 * S_Frq + 2.16541682726249 * S_Income + -0.34119803841059 * S_Kidhome
+ -0.53783050542796 * S_Mnt + 0.54954821448236 * S_MntFishProducts + -0.48449918837838 *
S_MntFruits + 0.29783052620672 * S_MntGoldProds + -0.15068954343013 * S_MntMeatProducts +
0.12733251381761 * S_MntSweetProducts + -2.46709166794296 * S_MntWines + -1.2011286508879 *
S_MonthsAsCustomer + -0.88194814936932 * S_NumCatalogPurchases + 0.7697882092212 *
S_NumDealsPurchases + 0.51864835453056 * S_NumDistPurchases + -1.18320366630444 *
S_NumStorePurchases + -0.6608394639529 * S_NumWebPurchases + -0.03948137707769 *
S_NumWebVisitsMonth + 1.01076462488608 * S_RFMstat + -0.91562280329354 * S_RMntFrq +
-1.07576669501238 * S_Recency + -0.5946628412106 * S_Teenhome ;
2463993   +   H1x2_6  =     0.42130900994246 * S_AcceptedCmpTotal
2463994   +          +     1.64256522546546 * S_Age  +    -0.31822237495441 * S_Frq
2463995   +          +     0.39698710846967 * S_Income  +    -1.30075584525681 *
2463996   +        S_Kidhome  +    -1.74733472316294 * S_Mnt  +    -1.04423575539078 *
2463997   +        S_MntFishProducts  +     0.28025913700744 * S_MntFruits
2463998   +          +     0.92062413073229 * S_MntGoldProds  +     0.38487452173084 *
2463999   +        S_MntMeatProducts  +     2.15808673418264 * S_MntSweetProducts
2464000   +          +     -0.5364274323591 * S_MntWines  +     0.64447858852609 *
2464001   +        S_MonthsAsCustomer  +     0.33683873873337 * S_NumCatalogPurchases
2464002   +          +     1.45707983202269 * S_NumDealsPurchases
2464003   +          +     0.83341887728641 * S_NumDistPurchases
2464004   +          +    -0.36664450469423 * S_NumStorePurchases
2464005   +          +     0.63911579043339 * S_NumWebPurchases
2464006   +          +     0.67144790303554 * S_NumWebVisitsMonth
2464007   +          +    -0.22124390112376 * S_RFMstat  +     1.72222071547971 *
2464008   +        S_RMntFrq  +    -0.02323382627271 * S_Recency
2464009   +          +    -0.09494567508522 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_6 = 0.42130900994246 * S_AcceptedCmpTotal + 1.64256522546546 *
S_Age + -0.31822237495441 * S_Frq + 0.39698710846967 * S_Income + -1.30075584525681 *
S_Kidhome + -1.74733472316294 * S_Mnt + -1.04423575539078 * S_MntFishProducts +
0.28025913700744 * S_MntFruits + 0.92062413073229 * S_MntGoldProds + 0.38487452173084 *
S_MntMeatProducts + 2.15808673418264 * S_MntSweetProducts + -0.5364274323591 * S_MntWines +
0.64447858852609 * S_MonthsAsCustomer + 0.33683873873337 * S_NumCatalogPurchases +
1.45707983202269 * S_NumDealsPurchases + 0.83341887728641 * S_NumDistPurchases +
-0.36664450469423 * S_NumStorePurchases + 0.63911579043339 * S_NumWebPurchases +
0.67144790303554 * S_NumWebVisitsMonth + -0.22124390112376 * S_RFMstat + 1.72222071547971 *
S_RMntFrq + -0.02323382627271 * S_Recency + -0.09494567508522 * S_Teenhome ;
2464010   +   H1x2_7  =      0.0903330772553 * S_AcceptedCmpTotal
2464011   +          +     0.13217959089196 * S_Age  +     0.93600629225871 * S_Frq
2464012   +          +     1.23765169211392 * S_Income  +     1.27732984858098 *
2464013   +        S_Kidhome  +     1.54889765360944 * S_Mnt  +     0.84618173514761 *
2464014   +        S_MntFishProducts  +    -0.32044356786958 * S_MntFruits
2464015   +          +    -0.26357995597029 * S_MntGoldProds  +     0.53649229087334 *
2464016   +        S_MntMeatProducts  +     1.46955866272889 * S_MntSweetProducts
2464017   +          +    -0.34260315437319 * S_MntWines  +    -1.70693604004836 *
2464018   +        S_MonthsAsCustomer  +     -0.4612555130737 * S_NumCatalogPurchases
2464019   +          +     0.68491896063662 * S_NumDealsPurchases
2464020   +          +      0.5386312048592 * S_NumDistPurchases
2464021   +          +     1.28108942503912 * S_NumStorePurchases
2464022   +          +    -0.88282270505969 * S_NumWebPurchases
2464023   +          +    -0.66670958211416 * S_NumWebVisitsMonth
2464024   +          +     0.94315921733739 * S_RFMstat  +     0.70533705858561 *
2464025   +        S_RMntFrq  +     0.23896687873405 * S_Recency
2464026   +          +     0.66289635918858 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_7 = 0.0903330772553 * S_AcceptedCmpTotal + 0.13217959089196 * S_Age
+ 0.93600629225871 * S_Frq + 1.23765169211392 * S_Income + 1.27732984858098 * S_Kidhome +
1.54889765360944 * S_Mnt + 0.84618173514761 * S_MntFishProducts + -0.32044356786958 *
S_MntFruits + -0.26357995597029 * S_MntGoldProds + 0.53649229087334 * S_MntMeatProducts +
1.46955866272889 * S_MntSweetProducts + -0.34260315437319 * S_MntWines + -1.70693604004836 *
S_MonthsAsCustomer + -0.4612555130737 * S_NumCatalogPurchases + 0.68491896063662 *
S_NumDealsPurchases + 0.5386312048592 * S_NumDistPurchases + 1.28108942503912 *
S_NumStorePurchases + -0.88282270505969 * S_NumWebPurchases + -0.66670958211416 *
S_NumWebVisitsMonth + 0.94315921733739 * S_RFMstat + 0.70533705858561 * S_RMntFrq +
0.23896687873405 * S_Recency + 0.66289635918858 * S_Teenhome ;
2464027   +   H1x2_1  = H1x2_1  +     0.22958861848016 * AcceptedCmp10
2464028   +          +    -1.11069938765475 * AcceptedCmp20  +     1.18563222829069 *
2464029   +        AcceptedCmp30  +    -0.97028253571173 * AcceptedCmp40
2464030   +          +     0.60850082670391 * AcceptedCmp50  +     0.31163990605418 *
2464031   +        Complain0  +     1.10957053966326 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 0.22958861848016 * AcceptedCmp10 + -1.11069938765475 *
AcceptedCmp20 + 1.18563222829069 * AcceptedCmp30 + -0.97028253571173 * AcceptedCmp40 +
0.60850082670391 * AcceptedCmp50 + 0.31163990605418 * Complain0 + 1.10957053966326 *
HigherEducationBinary0 ;
2464032   +   H1x2_2  = H1x2_2  +    -0.99409862826118 * AcceptedCmp10
2464033   +          +    -0.76360093699992 * AcceptedCmp20  +     0.82772534103696 *
2464034   +        AcceptedCmp30  +     1.74232000787449 * AcceptedCmp40
2464035   +          +    -1.37356239255127 * AcceptedCmp50  +      0.0919811154199 *
2464036   +        Complain0  +    -0.00220513515877 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.99409862826118 * AcceptedCmp10 + -0.76360093699992
* AcceptedCmp20 + 0.82772534103696 * AcceptedCmp30 + 1.74232000787449 * AcceptedCmp40 +
-1.37356239255127 * AcceptedCmp50 + 0.0919811154199 * Complain0 + -0.00220513515877 *
HigherEducationBinary0 ;
2464037   +   H1x2_3  = H1x2_3  +    -0.21003647134105 * AcceptedCmp10
2464038   +          +    -0.08930317176477 * AcceptedCmp20  +    -0.39109673162041 *
2464039   +        AcceptedCmp30  +     1.14094450038946 * AcceptedCmp40
2464040   +          +     1.26041997788848 * AcceptedCmp50  +    -0.10972130900569 *
2464041   +        Complain0  +    -0.99352598480407 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -0.21003647134105 * AcceptedCmp10 + -0.08930317176477
* AcceptedCmp20 + -0.39109673162041 * AcceptedCmp30 + 1.14094450038946 * AcceptedCmp40 +
1.26041997788848 * AcceptedCmp50 + -0.10972130900569 * Complain0 + -0.99352598480407 *
HigherEducationBinary0 ;
2464042   +   H1x2_4  = H1x2_4  +     2.02630284432093 * AcceptedCmp10
2464043   +          +    -2.50721904229276 * AcceptedCmp20  +    -1.31026450397446 *
2464044   +        AcceptedCmp30  +    -0.83440880266914 * AcceptedCmp40
2464045   +          +     -0.0570899805015 * AcceptedCmp50  +    -0.55525351434733 *
2464046   +        Complain0  +     0.27306601694081 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 2.02630284432093 * AcceptedCmp10 + -2.50721904229276 *
AcceptedCmp20 + -1.31026450397446 * AcceptedCmp30 + -0.83440880266914 * AcceptedCmp40 +
-0.0570899805015 * AcceptedCmp50 + -0.55525351434733 * Complain0 + 0.27306601694081 *
HigherEducationBinary0 ;
2464047   +   H1x2_5  = H1x2_5  +    -0.18595284227194 * AcceptedCmp10
2464048   +          +    -1.55973916517392 * AcceptedCmp20  +    -3.81563768970049 *
2464049   +        AcceptedCmp30  +    -0.09331430915239 * AcceptedCmp40
2464050   +          +     0.76128118177142 * AcceptedCmp50  +    -0.17283107047755 *
2464051   +        Complain0  +    -1.01028562804392 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + -0.18595284227194 * AcceptedCmp10 + -1.55973916517392
* AcceptedCmp20 + -3.81563768970049 * AcceptedCmp30 + -0.09331430915239 * AcceptedCmp40 +
0.76128118177142 * AcceptedCmp50 + -0.17283107047755 * Complain0 + -1.01028562804392 *
HigherEducationBinary0 ;
2464052   +   H1x2_6  = H1x2_6  +    -1.21475169836565 * AcceptedCmp10
2464053   +          +     0.28748729216575 * AcceptedCmp20  +     1.15908030413172 *
2464054   +        AcceptedCmp30  +    -0.05889528676549 * AcceptedCmp40
2464055   +          +    -0.41661363625562 * AcceptedCmp50  +    -0.77939130028952 *
2464056   +        Complain0  +     2.19510865765326 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + -1.21475169836565 * AcceptedCmp10 + 0.28748729216575 *
AcceptedCmp20 + 1.15908030413172 * AcceptedCmp30 + -0.05889528676549 * AcceptedCmp40 +
-0.41661363625562 * AcceptedCmp50 + -0.77939130028952 * Complain0 + 2.19510865765326 *
HigherEducationBinary0 ;
2464057   +   H1x2_7  = H1x2_7  +     0.87360423179644 * AcceptedCmp10
2464058   +          +    -0.47867594186426 * AcceptedCmp20  +    -0.30325818223392 *
2464059   +        AcceptedCmp30  +    -0.96085556588297 * AcceptedCmp40
2464060   +          +    -0.19693158209969 * AcceptedCmp50  +    -0.73731792634553 *
2464061   +        Complain0  +    -1.10021678806679 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_7 = H1x2_7 + 0.87360423179644 * AcceptedCmp10 + -0.47867594186426 *
AcceptedCmp20 + -0.30325818223392 * AcceptedCmp30 + -0.96085556588297 * AcceptedCmp40 +
-0.19693158209969 * AcceptedCmp50 + -0.73731792634553 * Complain0 + -1.10021678806679 *
HigherEducationBinary0 ;
2464062   +   H1x2_1  = H1x2_1  +    -1.17876013389516 * Education2n_Cycle
2464063   +          +    -0.35670434275624 * EducationBasic  +    -0.12456502068616 *
2464064   +        EducationGraduation  +     -1.0620373133508 * EducationMaster
2464065   +          +    -3.97961426831865 * Marital_StatusDivorced
2464066   +          +     0.00932639813867 * Marital_StatusMarried
2464067   +          +     1.29310186574718 * Marital_StatusSingle
2464068   +          +     1.60940802221114 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -1.17876013389516 * Education2n_Cycle +
-0.35670434275624 * EducationBasic + -0.12456502068616 * EducationGraduation +
-1.0620373133508 * EducationMaster + -3.97961426831865 * Marital_StatusDivorced +
0.00932639813867 * Marital_StatusMarried + 1.29310186574718 * Marital_StatusSingle +
1.60940802221114 * Marital_StatusTogether ;
2464069   +   H1x2_2  = H1x2_2  +     0.58497813059595 * Education2n_Cycle
2464070   +          +     0.98038586431321 * EducationBasic  +    -0.20442806724521 *
2464071   +        EducationGraduation  +     0.64973046142001 * EducationMaster
2464072   +          +    -0.30358516578188 * Marital_StatusDivorced
2464073   +          +    -0.96176709360703 * Marital_StatusMarried
2464074   +          +     1.26977690921649 * Marital_StatusSingle
2464075   +          +     -0.6681544336237 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.58497813059595 * Education2n_Cycle +
0.98038586431321 * EducationBasic + -0.20442806724521 * EducationGraduation + 0.64973046142001
* EducationMaster + -0.30358516578188 * Marital_StatusDivorced + -0.96176709360703 *
Marital_StatusMarried + 1.26977690921649 * Marital_StatusSingle + -0.6681544336237 *
Marital_StatusTogether ;
2464076   +   H1x2_3  = H1x2_3  +     0.42123479646947 * Education2n_Cycle
2464077   +          +     0.22705854674045 * EducationBasic  +     0.34794003687348 *
2464078   +        EducationGraduation  +     0.18356390207843 * EducationMaster
2464079   +          +     0.55272671490757 * Marital_StatusDivorced
2464080   +          +      0.1499239288334 * Marital_StatusMarried
2464081   +          +    -0.46840941760604 * Marital_StatusSingle
2464082   +          +     0.93706218273755 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.42123479646947 * Education2n_Cycle +
0.22705854674045 * EducationBasic + 0.34794003687348 * EducationGraduation + 0.18356390207843
* EducationMaster + 0.55272671490757 * Marital_StatusDivorced + 0.1499239288334 *
Marital_StatusMarried + -0.46840941760604 * Marital_StatusSingle + 0.93706218273755 *
Marital_StatusTogether ;
2464083   +   H1x2_4  = H1x2_4  +     0.85035585831723 * Education2n_Cycle
2464084   +          +    -0.70680576286167 * EducationBasic  +    -0.24487676912938 *
2464085   +        EducationGraduation  +    -0.33030970028481 * EducationMaster
2464086   +          +      -1.240735370138 * Marital_StatusDivorced
2464087   +          +    -1.20089294883599 * Marital_StatusMarried
2464088   +          +     0.57492674426149 * Marital_StatusSingle
2464089   +          +     1.44189292990255 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.85035585831723 * Education2n_Cycle +
-0.70680576286167 * EducationBasic + -0.24487676912938 * EducationGraduation +
-0.33030970028481 * EducationMaster + -1.240735370138 * Marital_StatusDivorced +
-1.20089294883599 * Marital_StatusMarried + 0.57492674426149 * Marital_StatusSingle +
1.44189292990255 * Marital_StatusTogether ;
2464090   +   H1x2_5  = H1x2_5  +    -0.62461434654579 * Education2n_Cycle
2464091   +          +    -0.34090423965869 * EducationBasic  +    -0.82493401834396 *
2464092   +        EducationGraduation  +    -1.09423426649553 * EducationMaster
2464093   +          +     1.05435442049802 * Marital_StatusDivorced
2464094   +          +      0.3571256349717 * Marital_StatusMarried
2464095   +          +    -0.44741267266578 * Marital_StatusSingle
2464096   +          +     0.02948931507994 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + -0.62461434654579 * Education2n_Cycle +
-0.34090423965869 * EducationBasic + -0.82493401834396 * EducationGraduation +
-1.09423426649553 * EducationMaster + 1.05435442049802 * Marital_StatusDivorced +
0.3571256349717 * Marital_StatusMarried + -0.44741267266578 * Marital_StatusSingle +
0.02948931507994 * Marital_StatusTogether ;
2464097   +   H1x2_6  = H1x2_6  +     0.09620501635178 * Education2n_Cycle
2464098   +          +    -0.54617424401993 * EducationBasic  +    -0.43305038404558 *
2464099   +        EducationGraduation  +     0.05453229059502 * EducationMaster
2464100   +          +     2.06026721980778 * Marital_StatusDivorced
2464101   +          +    -0.49583258645166 * Marital_StatusMarried
2464102   +          +    -1.14824900824474 * Marital_StatusSingle
2464103   +          +     0.57690093967839 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + 0.09620501635178 * Education2n_Cycle +
-0.54617424401993 * EducationBasic + -0.43305038404558 * EducationGraduation +
0.05453229059502 * EducationMaster + 2.06026721980778 * Marital_StatusDivorced +
-0.49583258645166 * Marital_StatusMarried + -1.14824900824474 * Marital_StatusSingle +
0.57690093967839 * Marital_StatusTogether ;
2464104   +   H1x2_7  = H1x2_7  +    -0.31251046777442 * Education2n_Cycle
2464105   +          +    -1.69272922870259 * EducationBasic  +    -0.08682253496961 *
2464106   +        EducationGraduation  +     0.58241644186309 * EducationMaster
2464107   +          +     -1.1890908607447 * Marital_StatusDivorced
2464108   +          +    -0.46668809907123 * Marital_StatusMarried
2464109   +          +     1.20342564763422 * Marital_StatusSingle
2464110   +          +    -1.75740662969578 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_7 = H1x2_7 + -0.31251046777442 * Education2n_Cycle +
-1.69272922870259 * EducationBasic + -0.08682253496961 * EducationGraduation +
0.58241644186309 * EducationMaster + -1.1890908607447 * Marital_StatusDivorced +
-0.46668809907123 * Marital_StatusMarried + 1.20342564763422 * Marital_StatusSingle +
-1.75740662969578 * Marital_StatusTogether ;
2464111   +   H1x2_1  =    -0.14973719401763 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.14973719401763 + H1x2_1 ;
2464112   +   H1x2_2  =    -0.56259582407931 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.56259582407931 + H1x2_2 ;
2464113   +   H1x2_3  =     0.42132483186492 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = 0.42132483186492 + H1x2_3 ;
2464114   +   H1x2_4  =      1.1996209421335 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 1.1996209421335 + H1x2_4 ;
2464115   +   H1x2_5  =     0.95827018478011 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 0.95827018478011 + H1x2_5 ;
2464116   +   H1x2_6  =     1.88844492435344 + H1x2_6 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = 1.88844492435344 + H1x2_6 ;
2464117   +   H1x2_7  =     0.77184516675485 + H1x2_7 ;
MPRINT(EM_DIAGRAM):   H1x2_7 = 0.77184516675485 + H1x2_7 ;
2464118   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2464119   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2464120   +   H1x2_1  = EXP(MIN(H1x2_1 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(MIN(H1x2_1 , _EXP_BAR));
2464121   +   H1x2_2  = EXP(MIN(H1x2_2 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(MIN(H1x2_2 , _EXP_BAR));
2464122   +   H1x2_3  = EXP(MIN(H1x2_3 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(MIN(H1x2_3 , _EXP_BAR));
2464123   +   H1x2_4  = EXP(MIN(H1x2_4 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(MIN(H1x2_4 , _EXP_BAR));
2464124   +   H1x2_5  = EXP(MIN(H1x2_5 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(MIN(H1x2_5 , _EXP_BAR));
2464125   +   H1x2_6  = EXP(MIN(H1x2_6 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(MIN(H1x2_6 , _EXP_BAR));
2464126   +   H1x2_7  = EXP(MIN(H1x2_7 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_7 = EXP(MIN(H1x2_7 , _EXP_BAR));
2464127   +END;
MPRINT(EM_DIAGRAM):   END;
2464128   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2464129   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
2464130   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
2464131   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
2464132   +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
2464133   +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
2464134   +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
2464135   +   H1x2_7  = .;
MPRINT(EM_DIAGRAM):   H1x2_7 = .;
2464136   +END;
MPRINT(EM_DIAGRAM):   END;
2464137   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2464138   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2464139   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2464140   +
2464141   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2464142   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2464143   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2464144   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2464145   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2464146   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2464147   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2464148   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2464149   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2464150   +end;
MPRINT(EM_DIAGRAM):   end;
2464151   +else do;
MPRINT(EM_DIAGRAM):   else do;
2464152   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2464153   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2464154   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2464155   +   end;
MPRINT(EM_DIAGRAM):   end;
2464156   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2464157   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2464158   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2464159   +   end;
MPRINT(EM_DIAGRAM):   end;
2464160   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2464161   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2464162   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2464163   +   end;
MPRINT(EM_DIAGRAM):   end;
2464164   +end;
MPRINT(EM_DIAGRAM):   end;
2464165   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2464166   +   P_DepVar1  =     0.10431866610268 * H1x1_1  +    -0.48100701431081 * H1x1_2
2464167   +          +      1.1561061025832 * H1x1_3  +    -1.23928879501664 * H1x1_4
2464168   +          +     1.22057275321508 * H1x1_5  +     0.21972347471711 * H1x1_6
2464169   +          +    -0.98998788335495 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.10431866610268 * H1x1_1 + -0.48100701431081 * H1x1_2 +
1.1561061025832 * H1x1_3 + -1.23928879501664 * H1x1_4 + 1.22057275321508 * H1x1_5 +
0.21972347471711 * H1x1_6 + -0.98998788335495 * H1x1_7 ;
2464170   +   P_DepVar1  = P_DepVar1  + -4.9985478923183E-10 * H1x2_1
2464171   +          +   2.7724573038604E-6 * H1x2_2  +  -3.3263781208921E-6 * H1x2_3
2464172   +          +     1.90169432265E-8 * H1x2_4  +  -9.7460294571708E-9 * H1x2_5
2464173   +          +  -2.0885179583168E-6 * H1x2_6  +    3.038660449943E-8 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 + -4.9985478923183E-10 * H1x2_1 +
2.7724573038604E-6 * H1x2_2 + -3.3263781208921E-6 * H1x2_3 + 1.90169432265E-8 * H1x2_4 +
-9.7460294571708E-9 * H1x2_5 + -2.0885179583168E-6 * H1x2_6 + 3.038660449943E-8 * H1x2_7 ;
2464174   +   P_DepVar1  =    -2.34500119066237 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.34500119066237 + P_DepVar1 ;
2464175   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2464176   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2464177   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2464178   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2464179   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2464180   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2464181   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2464182   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2464183   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2464184   +END;
MPRINT(EM_DIAGRAM):   END;
2464185   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2464186   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2464187   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2464188   +END;
MPRINT(EM_DIAGRAM):   END;
2464189   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2464190   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2464191   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2464192   +END;
MPRINT(EM_DIAGRAM):   END;
2464193   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2464194   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2464195   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2464196   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2464197   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2464198   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2464199   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2464200   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2464201   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2464202   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2464203   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2464204   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2464205   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2464206   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2464207   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2464208   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2464209   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2464210   +END;
MPRINT(EM_DIAGRAM):   END;
2464211   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2464212   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2464213   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2464214   +drop
2464215   +H1x1_1
2464216   +H1x1_2
2464217   +H1x1_3
2464218   +H1x1_4
2464219   +H1x1_5
2464220   +H1x1_6
2464221   +H1x1_7
2464222   +H1x2_1
2464223   +H1x2_2
2464224   +H1x2_3
2464225   +H1x2_4
2464226   +H1x2_5
2464227   +H1x2_6
2464228   +H1x2_7
2464229   +;
MPRINT(EM_DIAGRAM):   drop H1x1_1 H1x1_2 H1x1_3 H1x1_4 H1x1_5 H1x1_6 H1x1_7 H1x2_1 H1x2_2
H1x2_3 H1x2_4 H1x2_5 H1x2_6 H1x2_7 ;
2464230   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2464231   +* Renaming variables for AutoNeural12;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural12;
2464232   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2464233   +* Renaming Posterior variables for AutoNeural12;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural12;
2464234   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2464235   +drop AutoNeural12_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_P_DepVar1;
2464236   +AutoNeural12_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural12_P_DepVar1 = P_DepVar1;
2464237   +drop AutoNeural12_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_P_DepVar0;
2464238   +AutoNeural12_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural12_P_DepVar0 = P_DepVar0;
2464239   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2464240   +* Renaming _WARN_ variable for AutoNeural12;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural12;
2464241   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2464242   +length AutoNeural12_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural12_WARN_ $4;
2464243   +drop AutoNeural12_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_WARN_;
2464244   +AutoNeural12_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural12_WARN_ = _WARN_;
2464245   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2464246   +* Ensmbl46: Scoring Code of model 4 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl46: Scoring Code of model 4 of 5;
2464247   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2464248   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2464249   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
2464250   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2464251   +* NODE: AutoNeural7;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural7;
2464252   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2464253   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2464254   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2464255   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2464256   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2464257   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2464258   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2464259   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2464260   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2464261   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2464262   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2464263   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2464264   +LENGTH _WARN_ $4
2464265   +      F_DepVar  $ 12
2464266   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2464267   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2464268   +
2464269   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2464270   +
2464271   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2464272   +
2464273   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2464274   +
2464275   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2464276   +
2464277   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2464278   +
2464279   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2464280   +
2464281   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2464282   +
2464283   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2464284   +
2464285   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2464286   +
2464287   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2464288   +
2464289   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2464290   +
2464291   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2464292   +
2464293   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2464294   +
2464295   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2464296   +
2464297   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2464298   +
2464299   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2464300   +
2464301   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2464302   +
2464303   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2464304   +
2464305   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2464306   +
2464307   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2464308   +
2464309   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2464310   +
2464311   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2464312   +
2464313   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2464314   +
2464315   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2464316   +
2464317   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2464318   +
2464319   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2464320   +
2464321   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2464322   +
2464323   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2464324   +
2464325   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2464326   +
2464327   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2464328   +
2464329   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2464330   +
2464331   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2464332   +
2464333   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2464334   +
2464335   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2464336   +
2464337   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2464338   +
2464339   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2464340   +
2464341   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2464342   +
2464343   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2464344   +
2464345   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2464346   +
2464347   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
2464348   +
2464349   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
2464350   +
2464351   +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
2464352   +
2464353   +      label H1x3_2 = 'Hidden: H1x3_=2' ;
MPRINT(EM_DIAGRAM):   label H1x3_2 = 'Hidden: H1x3_=2' ;
2464354   +
2464355   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2464356   +
2464357   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2464358   +
2464359   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2464360   +
2464361   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2464362   +
2464363   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2464364   +
2464365   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2464366   +
2464367   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2464368   +
2464369   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2464370   +
2464371   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2464372   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2464373   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2464374   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2464375   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2464376   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2464377   +end;
MPRINT(EM_DIAGRAM):   end;
2464378   +else do;
MPRINT(EM_DIAGRAM):   else do;
2464379   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2464380   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2464381   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2464382   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2464383   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2464384   +   end;
MPRINT(EM_DIAGRAM):   end;
2464385   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2464386   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2464387   +   end;
MPRINT(EM_DIAGRAM):   end;
2464388   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2464389   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2464390   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2464391   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2464392   +   end;
MPRINT(EM_DIAGRAM):   end;
2464393   +end;
MPRINT(EM_DIAGRAM):   end;
2464394   +
2464395   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2464396   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2464397   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2464398   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2464399   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2464400   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2464401   +end;
MPRINT(EM_DIAGRAM):   end;
2464402   +else do;
MPRINT(EM_DIAGRAM):   else do;
2464403   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2464404   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2464405   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2464406   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2464407   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2464408   +   end;
MPRINT(EM_DIAGRAM):   end;
2464409   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2464410   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2464411   +   end;
MPRINT(EM_DIAGRAM):   end;
2464412   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2464413   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2464414   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2464415   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2464416   +   end;
MPRINT(EM_DIAGRAM):   end;
2464417   +end;
MPRINT(EM_DIAGRAM):   end;
2464418   +
2464419   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2464420   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2464421   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2464422   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2464423   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2464424   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2464425   +end;
MPRINT(EM_DIAGRAM):   end;
2464426   +else do;
MPRINT(EM_DIAGRAM):   else do;
2464427   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2464428   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2464429   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2464430   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2464431   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2464432   +   end;
MPRINT(EM_DIAGRAM):   end;
2464433   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2464434   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2464435   +   end;
MPRINT(EM_DIAGRAM):   end;
2464436   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2464437   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2464438   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2464439   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2464440   +   end;
MPRINT(EM_DIAGRAM):   end;
2464441   +end;
MPRINT(EM_DIAGRAM):   end;
2464442   +
2464443   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2464444   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2464445   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2464446   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2464447   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2464448   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2464449   +end;
MPRINT(EM_DIAGRAM):   end;
2464450   +else do;
MPRINT(EM_DIAGRAM):   else do;
2464451   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2464452   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2464453   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2464454   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2464455   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2464456   +   end;
MPRINT(EM_DIAGRAM):   end;
2464457   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2464458   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2464459   +   end;
MPRINT(EM_DIAGRAM):   end;
2464460   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2464461   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2464462   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2464463   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2464464   +   end;
MPRINT(EM_DIAGRAM):   end;
2464465   +end;
MPRINT(EM_DIAGRAM):   end;
2464466   +
2464467   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2464468   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2464469   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2464470   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2464471   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2464472   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2464473   +end;
MPRINT(EM_DIAGRAM):   end;
2464474   +else do;
MPRINT(EM_DIAGRAM):   else do;
2464475   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2464476   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2464477   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2464478   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2464479   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2464480   +   end;
MPRINT(EM_DIAGRAM):   end;
2464481   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2464482   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2464483   +   end;
MPRINT(EM_DIAGRAM):   end;
2464484   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2464485   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2464486   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2464487   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2464488   +   end;
MPRINT(EM_DIAGRAM):   end;
2464489   +end;
MPRINT(EM_DIAGRAM):   end;
2464490   +
2464491   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2464492   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2464493   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2464494   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2464495   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2464496   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2464497   +end;
MPRINT(EM_DIAGRAM):   end;
2464498   +else do;
MPRINT(EM_DIAGRAM):   else do;
2464499   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2464500   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2464501   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2464502   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2464503   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2464504   +   end;
MPRINT(EM_DIAGRAM):   end;
2464505   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2464506   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2464507   +   end;
MPRINT(EM_DIAGRAM):   end;
2464508   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2464509   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2464510   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2464511   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2464512   +   end;
MPRINT(EM_DIAGRAM):   end;
2464513   +end;
MPRINT(EM_DIAGRAM):   end;
2464514   +
2464515   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2464516   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2464517   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2464518   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2464519   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2464520   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2464521   +end;
MPRINT(EM_DIAGRAM):   end;
2464522   +else do;
MPRINT(EM_DIAGRAM):   else do;
2464523   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2464524   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2464525   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2464526   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2464527   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2464528   +   end;
MPRINT(EM_DIAGRAM):   end;
2464529   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2464530   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2464531   +   end;
MPRINT(EM_DIAGRAM):   end;
2464532   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2464533   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2464534   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2464535   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2464536   +   end;
MPRINT(EM_DIAGRAM):   end;
2464537   +end;
MPRINT(EM_DIAGRAM):   end;
2464538   +
2464539   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2464540   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
2464541   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2464542   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2464543   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2464544   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2464545   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2464546   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2464547   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2464548   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2464549   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2464550   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2464551   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2464552   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2464553   +end;
MPRINT(EM_DIAGRAM):   end;
2464554   +else do;
MPRINT(EM_DIAGRAM):   else do;
2464555   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2464556   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2464557   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2464558   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2464559   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2464560   +   end;
MPRINT(EM_DIAGRAM):   end;
2464561   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2464562   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2464563   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2464564   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2464565   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2464566   +   end;
MPRINT(EM_DIAGRAM):   end;
2464567   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2464568   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2464569   +   end;
MPRINT(EM_DIAGRAM):   end;
2464570   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2464571   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2464572   +   end;
MPRINT(EM_DIAGRAM):   end;
2464573   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2464574   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2464575   +   end;
MPRINT(EM_DIAGRAM):   end;
2464576   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2464577   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2464578   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2464579   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2464580   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2464581   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2464582   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2464583   +   end;
MPRINT(EM_DIAGRAM):   end;
2464584   +end;
MPRINT(EM_DIAGRAM):   end;
2464585   +
2464586   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2464587   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2464588   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
2464589   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2464590   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2464591   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2464592   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2464593   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2464594   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2464595   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2464596   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2464597   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2464598   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2464599   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2464600   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2464601   +end;
MPRINT(EM_DIAGRAM):   end;
2464602   +else do;
MPRINT(EM_DIAGRAM):   else do;
2464603   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2464604   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2464605   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2464606   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2464607   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2464608   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2464609   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2464610   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2464611   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2464612   +         end;
MPRINT(EM_DIAGRAM):   end;
2464613   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2464614   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2464615   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2464616   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2464617   +            end;
MPRINT(EM_DIAGRAM):   end;
2464618   +         end;
MPRINT(EM_DIAGRAM):   end;
2464619   +      end;
MPRINT(EM_DIAGRAM):   end;
2464620   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2464621   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2464622   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2464623   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2464624   +         end;
MPRINT(EM_DIAGRAM):   end;
2464625   +      end;
MPRINT(EM_DIAGRAM):   end;
2464626   +   end;
MPRINT(EM_DIAGRAM):   end;
2464627   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2464628   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2464629   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2464630   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2464631   +      end;
MPRINT(EM_DIAGRAM):   end;
2464632   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2464633   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2464634   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2464635   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2464636   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2464637   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2464638   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2464639   +         end;
MPRINT(EM_DIAGRAM):   end;
2464640   +      end;
MPRINT(EM_DIAGRAM):   end;
2464641   +   end;
MPRINT(EM_DIAGRAM):   end;
2464642   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2464643   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2464644   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2464645   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2464646   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2464647   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2464648   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2464649   +   end;
MPRINT(EM_DIAGRAM):   end;
2464650   +end;
MPRINT(EM_DIAGRAM):   end;
2464651   +
2464652   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2464653   +*** Checking missing input Interval
2464654   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2464655   +
2464656   +IF NMISS(
2464657   +   AcceptedCmpTotal ,
2464658   +   Age ,
2464659   +   Frq ,
2464660   +   Income ,
2464661   +   Kidhome ,
2464662   +   Mnt ,
2464663   +   MntFishProducts ,
2464664   +   MntFruits ,
2464665   +   MntGoldProds ,
2464666   +   MntMeatProducts ,
2464667   +   MntSweetProducts ,
2464668   +   MntWines ,
2464669   +   MonthsAsCustomer ,
2464670   +   NumCatalogPurchases ,
2464671   +   NumDealsPurchases ,
2464672   +   NumDistPurchases ,
2464673   +   NumStorePurchases ,
2464674   +   NumWebPurchases ,
2464675   +   NumWebVisitsMonth ,
2464676   +   RFMstat ,
2464677   +   RMntFrq ,
2464678   +   Recency ,
2464679   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
2464680   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2464681   +
2464682   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2464683   +END;
MPRINT(EM_DIAGRAM):   END;
2464684   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2464685   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2464686   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2464687   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2464688   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2464689   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2464690   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2464691   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2464692   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2464693   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2464694   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2464695   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2464696   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2464697   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2464698   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2464699   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2464700   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2464701   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2464702   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2464703   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2464704   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2464705   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2464706   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
The SAS System
 
2464707   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2464708   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2464709   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2464710   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2464711   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2464712   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2464713   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2464714   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2464715   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2464716   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2464717   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2464718   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2464719   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2464720   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2464721   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2464722   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2464723   +END;
MPRINT(EM_DIAGRAM):   END;
2464724   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2464725   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2464726   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2464727   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2464728   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2464729   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2464730   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2464731   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2464732   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2464733   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2464734   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2464735   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2464736   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2464737   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2464738   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2464739   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2464740   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2464741   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2464742   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2464743   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2464744   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2464745   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2464746   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
2464747   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2464748   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2464749   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2464750   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2464751   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2464752   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2464753   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2464754   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2464755   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2464756   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2464757   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
2464758   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2464759   +   ELSE S_NumCatalogPurchases
2464760   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2464761   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2464762   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2464763   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2464764   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2464765   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2464766   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2464767   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2464768   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2464769   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2464770   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2464771   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2464772   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2464773   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2464774   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2464775   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2464776   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2464777   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2464778   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2464779   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2464780   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2464781   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2464782   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2464783   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2464784   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2464785   +END;
MPRINT(EM_DIAGRAM):   END;
2464786   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2464787   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2464788   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2464789   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2464790   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2464791   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2464792   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2464793   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2464794   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2464795   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2464796   +   H1x1_1  =     0.26454269681311 * S_AcceptedCmpTotal
2464797   +          +    -0.01281904987956 * S_Age  +    -0.19309516267581 * S_Frq
2464798   +          +    -0.19077579202378 * S_Income  +      0.1806651018562 *
2464799   +        S_Kidhome  +    -0.31002612826472 * S_Mnt  +    -0.05901796512011 *
2464800   +        S_MntFishProducts  +    -0.03760930101165 * S_MntFruits
2464801   +          +     0.01720900715043 * S_MntGoldProds  +     0.21472292961422 *
2464802   +        S_MntMeatProducts  +    -0.02880706568684 * S_MntSweetProducts
2464803   +          +    -0.37993583170844 * S_MntWines  +    -0.00848444156361 *
2464804   +        S_MonthsAsCustomer  +     0.15939611818942 * S_NumCatalogPurchases
2464805   +          +     0.08390531145773 * S_NumDealsPurchases
2464806   +          +    -0.29505970645775 * S_NumDistPurchases
2464807   +          +    -0.13820571170194 * S_NumStorePurchases
2464808   +          +     0.11468011313368 * S_NumWebPurchases
2464809   +          +    -0.18421241371843 * S_NumWebVisitsMonth
2464810   +          +     0.11564064971509 * S_RFMstat  +    -0.02223928001432 *
2464811   +        S_RMntFrq  +     0.18022777532589 * S_Recency
2464812   +          +     0.14654831145379 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.26454269681311 * S_AcceptedCmpTotal + -0.01281904987956 *
S_Age + -0.19309516267581 * S_Frq + -0.19077579202378 * S_Income + 0.1806651018562 * S_Kidhome
+ -0.31002612826472 * S_Mnt + -0.05901796512011 * S_MntFishProducts + -0.03760930101165 *
S_MntFruits + 0.01720900715043 * S_MntGoldProds + 0.21472292961422 * S_MntMeatProducts +
-0.02880706568684 * S_MntSweetProducts + -0.37993583170844 * S_MntWines + -0.00848444156361 *
S_MonthsAsCustomer + 0.15939611818942 * S_NumCatalogPurchases + 0.08390531145773 *
S_NumDealsPurchases + -0.29505970645775 * S_NumDistPurchases + -0.13820571170194 *
S_NumStorePurchases + 0.11468011313368 * S_NumWebPurchases + -0.18421241371843 *
S_NumWebVisitsMonth + 0.11564064971509 * S_RFMstat + -0.02223928001432 * S_RMntFrq +
0.18022777532589 * S_Recency + 0.14654831145379 * S_Teenhome ;
2464813   +   H1x1_2  =     0.27055972468014 * S_AcceptedCmpTotal
2464814   +          +      0.0025862891193 * S_Age  +    -0.07147307366817 * S_Frq
2464815   +          +      0.1883776136263 * S_Income  +    -0.12712510891181 *
2464816   +        S_Kidhome  +    -0.42099927948686 * S_Mnt  +    -0.07047631817862 *
2464817   +        S_MntFishProducts  +    -0.06658475152878 * S_MntFruits
2464818   +          +     0.01943025682869 * S_MntGoldProds  +     0.29481794109465 *
2464819   +        S_MntMeatProducts  +    -0.06573502094591 * S_MntSweetProducts
2464820   +          +    -0.46266722725002 * S_MntWines  +    -0.00472333181469 *
2464821   +        S_MonthsAsCustomer  +     0.35081452017576 * S_NumCatalogPurchases
2464822   +          +     0.18009076035363 * S_NumDealsPurchases
2464823   +          +     0.03853861006587 * S_NumDistPurchases
2464824   +          +    -0.05118063952874 * S_NumStorePurchases
2464825   +          +    -0.03282286120473 * S_NumWebPurchases
2464826   +          +     0.31160900419026 * S_NumWebVisitsMonth
2464827   +          +     0.08027884378429 * S_RFMstat  +     0.39057239541393 *
2464828   +        S_RMntFrq  +    -0.34796767111274 * S_Recency
2464829   +          +    -0.12099758522271 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.27055972468014 * S_AcceptedCmpTotal + 0.0025862891193 * S_Age
+ -0.07147307366817 * S_Frq + 0.1883776136263 * S_Income + -0.12712510891181 * S_Kidhome +
-0.42099927948686 * S_Mnt + -0.07047631817862 * S_MntFishProducts + -0.06658475152878 *
S_MntFruits + 0.01943025682869 * S_MntGoldProds + 0.29481794109465 * S_MntMeatProducts +
-0.06573502094591 * S_MntSweetProducts + -0.46266722725002 * S_MntWines + -0.00472333181469 *
S_MonthsAsCustomer + 0.35081452017576 * S_NumCatalogPurchases + 0.18009076035363 *
S_NumDealsPurchases + 0.03853861006587 * S_NumDistPurchases + -0.05118063952874 *
S_NumStorePurchases + -0.03282286120473 * S_NumWebPurchases + 0.31160900419026 *
S_NumWebVisitsMonth + 0.08027884378429 * S_RFMstat + 0.39057239541393 * S_RMntFrq +
-0.34796767111274 * S_Recency + -0.12099758522271 * S_Teenhome ;
2464830   +   H1x1_1  = H1x1_1  +     0.12539246465239 * AcceptedCmp10
2464831   +          +     0.38473652869745 * AcceptedCmp20  +     0.29820983391886 *
2464832   +        AcceptedCmp30  +     0.29085092779792 * AcceptedCmp40
2464833   +          +     0.18918195914981 * AcceptedCmp50  +    -0.26812516781697 *
2464834   +        Complain0  +    -0.08804110897148 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.12539246465239 * AcceptedCmp10 + 0.38473652869745 *
AcceptedCmp20 + 0.29820983391886 * AcceptedCmp30 + 0.29085092779792 * AcceptedCmp40 +
0.18918195914981 * AcceptedCmp50 + -0.26812516781697 * Complain0 + -0.08804110897148 *
HigherEducationBinary0 ;
2464835   +   H1x1_2  = H1x1_2  +    -0.02312897825565 * AcceptedCmp10
2464836   +          +     0.03909481703523 * AcceptedCmp20  +     0.02531081539721 *
2464837   +        AcceptedCmp30  +     0.03109641300151 * AcceptedCmp40
2464838   +          +     0.01985718189621 * AcceptedCmp50  +     0.13425456375085 *
2464839   +        Complain0  +    -0.08222486590117 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.02312897825565 * AcceptedCmp10 + 0.03909481703523 *
AcceptedCmp20 + 0.02531081539721 * AcceptedCmp30 + 0.03109641300151 * AcceptedCmp40 +
0.01985718189621 * AcceptedCmp50 + 0.13425456375085 * Complain0 + -0.08222486590117 *
HigherEducationBinary0 ;
2464840   +   H1x1_1  = H1x1_1  +    -0.01975862863669 * Education2n_Cycle
2464841   +          +     0.14654730697956 * EducationBasic  +    -0.00459515646452 *
2464842   +        EducationGraduation  +     0.01586948449127 * EducationMaster
2464843   +          +    -0.04750981393889 * Marital_StatusDivorced
2464844   +          +     0.28216925676677 * Marital_StatusMarried
2464845   +          +    -0.20757827413964 * Marital_StatusSingle
2464846   +          +     0.22622509024122 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.01975862863669 * Education2n_Cycle +
0.14654730697956 * EducationBasic + -0.00459515646452 * EducationGraduation + 0.01586948449127
* EducationMaster + -0.04750981393889 * Marital_StatusDivorced + 0.28216925676677 *
Marital_StatusMarried + -0.20757827413964 * Marital_StatusSingle + 0.22622509024122 *
Marital_StatusTogether ;
2464847   +   H1x1_2  = H1x1_2  +     0.12009608969049 * Education2n_Cycle
2464848   +          +     0.01793460710056 * EducationBasic  +    -0.04257710051346 *
2464849   +        EducationGraduation  +    -0.06975725710115 * EducationMaster
2464850   +          +     0.05981919620577 * Marital_StatusDivorced
2464851   +          +    -0.17161573846062 * Marital_StatusMarried
2464852   +          +     0.15869440681091 * Marital_StatusSingle
2464853   +          +    -0.13282372850158 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.12009608969049 * Education2n_Cycle +
0.01793460710056 * EducationBasic + -0.04257710051346 * EducationGraduation +
-0.06975725710115 * EducationMaster + 0.05981919620577 * Marital_StatusDivorced +
-0.17161573846062 * Marital_StatusMarried + 0.15869440681091 * Marital_StatusSingle +
-0.13282372850158 * Marital_StatusTogether ;
2464854   +   H1x1_1  =     0.87962277715971 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.87962277715971 + H1x1_1 ;
2464855   +   H1x1_2  =    -0.62570339696782 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.62570339696782 + H1x1_2 ;
2464856   +   H1x1_1  = SIN(H1x1_1 );
MPRINT(EM_DIAGRAM):   H1x1_1 = SIN(H1x1_1 );
2464857   +   H1x1_2  = SIN(H1x1_2 );
MPRINT(EM_DIAGRAM):   H1x1_2 = SIN(H1x1_2 );
2464858   +END;
MPRINT(EM_DIAGRAM):   END;
2464859   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2464860   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2464861   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2464862   +END;
MPRINT(EM_DIAGRAM):   END;
2464863   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2464864   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
2464865   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2464866   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2464867   +   H1x2_1  =      0.1719390672121 * S_AcceptedCmpTotal
2464868   +          +     0.23586839288361 * S_Age  +    -1.85384134180372 * S_Frq
2464869   +          +    -0.43561758063577 * S_Income  +     -2.5581498901473 *
2464870   +        S_Kidhome  +      1.7031888248428 * S_Mnt  +     0.84982621124736 *
2464871   +        S_MntFishProducts  +     0.25990173458485 * S_MntFruits
2464872   +          +    -2.80730469703961 * S_MntGoldProds  +     0.64923500711702 *
2464873   +        S_MntMeatProducts  +     0.27458645458502 * S_MntSweetProducts
2464874   +          +    -0.47723589182372 * S_MntWines  +    -0.66777488145507 *
2464875   +        S_MonthsAsCustomer  +    -0.46364414558282 * S_NumCatalogPurchases
2464876   +          +     0.00741910846933 * S_NumDealsPurchases
2464877   +          +       1.334289252268 * S_NumDistPurchases
2464878   +          +    -0.29851567180932 * S_NumStorePurchases
2464879   +          +    -0.52115313259666 * S_NumWebPurchases
2464880   +          +     0.93907168501909 * S_NumWebVisitsMonth
2464881   +          +    -0.26126881318451 * S_RFMstat  +     -1.3003763542929 *
2464882   +        S_RMntFrq  +    -0.12807368149309 * S_Recency
2464883   +          +    -0.21296116974623 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.1719390672121 * S_AcceptedCmpTotal + 0.23586839288361 * S_Age
+ -1.85384134180372 * S_Frq + -0.43561758063577 * S_Income + -2.5581498901473 * S_Kidhome +
1.7031888248428 * S_Mnt + 0.84982621124736 * S_MntFishProducts + 0.25990173458485 *
S_MntFruits + -2.80730469703961 * S_MntGoldProds + 0.64923500711702 * S_MntMeatProducts +
0.27458645458502 * S_MntSweetProducts + -0.47723589182372 * S_MntWines + -0.66777488145507 *
S_MonthsAsCustomer + -0.46364414558282 * S_NumCatalogPurchases + 0.00741910846933 *
S_NumDealsPurchases + 1.334289252268 * S_NumDistPurchases + -0.29851567180932 *
S_NumStorePurchases + -0.52115313259666 * S_NumWebPurchases + 0.93907168501909 *
S_NumWebVisitsMonth + -0.26126881318451 * S_RFMstat + -1.3003763542929 * S_RMntFrq +
-0.12807368149309 * S_Recency + -0.21296116974623 * S_Teenhome ;
2464884   +   H1x2_2  =     0.30897763700303 * S_AcceptedCmpTotal
2464885   +          +    -0.77727886396317 * S_Age  +    -0.79298582494973 * S_Frq
2464886   +          +    -1.73199353738093 * S_Income  +     1.12984956989288 *
2464887   +        S_Kidhome  +    -1.36701096993984 * S_Mnt  +    -0.21063950702424 *
2464888   +        S_MntFishProducts  +    -0.20027336686257 * S_MntFruits
2464889   +          +    -0.06955810418489 * S_MntGoldProds  +     0.16672767423533 *
2464890   +        S_MntMeatProducts  +    -1.56675269740541 * S_MntSweetProducts
2464891   +          +     1.85366479127485 * S_MntWines  +    -0.58178621903094 *
2464892   +        S_MonthsAsCustomer  +     1.31024619253935 * S_NumCatalogPurchases
2464893   +          +     1.60427001186844 * S_NumDealsPurchases
2464894   +          +    -0.18447618033353 * S_NumDistPurchases
2464895   +          +    -1.29966073003539 * S_NumStorePurchases
2464896   +          +    -1.12373457341536 * S_NumWebPurchases
2464897   +          +     1.46099221440494 * S_NumWebVisitsMonth
2464898   +          +     0.17795038564406 * S_RFMstat  +    -0.82372068140832 *
2464899   +        S_RMntFrq  +      0.4480370534729 * S_Recency
2464900   +          +     0.19272737691538 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.30897763700303 * S_AcceptedCmpTotal + -0.77727886396317 *
S_Age + -0.79298582494973 * S_Frq + -1.73199353738093 * S_Income + 1.12984956989288 *
S_Kidhome + -1.36701096993984 * S_Mnt + -0.21063950702424 * S_MntFishProducts +
-0.20027336686257 * S_MntFruits + -0.06955810418489 * S_MntGoldProds + 0.16672767423533 *
S_MntMeatProducts + -1.56675269740541 * S_MntSweetProducts + 1.85366479127485 * S_MntWines +
-0.58178621903094 * S_MonthsAsCustomer + 1.31024619253935 * S_NumCatalogPurchases +
1.60427001186844 * S_NumDealsPurchases + -0.18447618033353 * S_NumDistPurchases +
-1.29966073003539 * S_NumStorePurchases + -1.12373457341536 * S_NumWebPurchases +
1.46099221440494 * S_NumWebVisitsMonth + 0.17795038564406 * S_RFMstat + -0.82372068140832 *
S_RMntFrq + 0.4480370534729 * S_Recency + 0.19272737691538 * S_Teenhome ;
2464901   +   H1x2_1  = H1x2_1  +     -0.6569942252053 * AcceptedCmp10
2464902   +          +    -0.89152555599538 * AcceptedCmp20  +     1.00488730476017 *
2464903   +        AcceptedCmp30  +     0.34286042692068 * AcceptedCmp40
2464904   +          +    -1.19198820362508 * AcceptedCmp50  +    -0.86571531914686 *
2464905   +        Complain0  +     0.14303136037365 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.6569942252053 * AcceptedCmp10 + -0.89152555599538 *
AcceptedCmp20 + 1.00488730476017 * AcceptedCmp30 + 0.34286042692068 * AcceptedCmp40 +
-1.19198820362508 * AcceptedCmp50 + -0.86571531914686 * Complain0 + 0.14303136037365 *
HigherEducationBinary0 ;
2464906   +   H1x2_2  = H1x2_2  +     1.79481763784518 * AcceptedCmp10
2464907   +          +    -2.85912280013336 * AcceptedCmp20  +     0.16890012708431 *
2464908   +        AcceptedCmp30  +     0.94639083182751 * AcceptedCmp40
2464909   +          +    -0.62141828005946 * AcceptedCmp50  +    -0.39098882491277 *
2464910   +        Complain0  +     0.85700787946581 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 1.79481763784518 * AcceptedCmp10 + -2.85912280013336 *
AcceptedCmp20 + 0.16890012708431 * AcceptedCmp30 + 0.94639083182751 * AcceptedCmp40 +
-0.62141828005946 * AcceptedCmp50 + -0.39098882491277 * Complain0 + 0.85700787946581 *
HigherEducationBinary0 ;
2464911   +   H1x2_1  = H1x2_1  +      0.0737054452993 * Education2n_Cycle
2464912   +          +       0.362372261752 * EducationBasic  +      -1.485941295677 *
2464913   +        EducationGraduation  +    -0.81257694655594 * EducationMaster
2464914   +          +     0.59819559998538 * Marital_StatusDivorced
2464915   +          +     0.92957772553633 * Marital_StatusMarried
2464916   +          +    -1.11796266958894 * Marital_StatusSingle
2464917   +          +     -2.0576132087002 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 0.0737054452993 * Education2n_Cycle + 0.362372261752 *
EducationBasic + -1.485941295677 * EducationGraduation + -0.81257694655594 * EducationMaster +
0.59819559998538 * Marital_StatusDivorced + 0.92957772553633 * Marital_StatusMarried +
-1.11796266958894 * Marital_StatusSingle + -2.0576132087002 * Marital_StatusTogether ;
2464918   +   H1x2_2  = H1x2_2  +    -1.10016528859962 * Education2n_Cycle
2464919   +          +    -1.46816646165468 * EducationBasic  +    -0.11241499152788 *
2464920   +        EducationGraduation  +    -0.65110715251273 * EducationMaster
2464921   +          +      1.0870909562212 * Marital_StatusDivorced
2464922   +          +     1.50333961797515 * Marital_StatusMarried
2464923   +          +    -1.41407780765932 * Marital_StatusSingle
2464924   +          +    -0.52528072358697 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -1.10016528859962 * Education2n_Cycle +
-1.46816646165468 * EducationBasic + -0.11241499152788 * EducationGraduation +
-0.65110715251273 * EducationMaster + 1.0870909562212 * Marital_StatusDivorced +
1.50333961797515 * Marital_StatusMarried + -1.41407780765932 * Marital_StatusSingle +
-0.52528072358697 * Marital_StatusTogether ;
2464925   +   H1x2_1  =     1.46376024534028 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.46376024534028 + H1x2_1 ;
2464926   +   H1x2_2  =    -0.21341526379366 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.21341526379366 + H1x2_2 ;
2464927   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2464928   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2464929   +   H1x2_1  = EXP(MIN(-0.5 * H1x2_1 **2, _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(MIN(-0.5 * H1x2_1 **2, _EXP_BAR));
2464930   +   H1x2_2  = EXP(MIN(-0.5 * H1x2_2 **2, _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(MIN(-0.5 * H1x2_2 **2, _EXP_BAR));
2464931   +END;
MPRINT(EM_DIAGRAM):   END;
2464932   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2464933   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
2464934   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
2464935   +END;
MPRINT(EM_DIAGRAM):   END;
2464936   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2464937   +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
2464938   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2464939   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2464940   +   H1x3_1  =     0.29299707972123 * S_AcceptedCmpTotal
2464941   +          +     1.39797329466471 * S_Age  +    -2.02673480388837 * S_Frq
2464942   +          +    -1.09682777516542 * S_Income  +    -1.22241109888643 *
2464943   +        S_Kidhome  +    -1.35766076466324 * S_Mnt  +    -2.90812690982576 *
2464944   +        S_MntFishProducts  +    -0.48174923069843 * S_MntFruits
2464945   +          +     1.57335575145195 * S_MntGoldProds  +    -0.55248873552176 *
2464946   +        S_MntMeatProducts  +     0.54536808091745 * S_MntSweetProducts
2464947   +          +    -0.41516162035296 * S_MntWines  +     0.07715050596116 *
2464948   +        S_MonthsAsCustomer  +    -2.18785324142159 * S_NumCatalogPurchases
2464949   +          +     -1.1174504455343 * S_NumDealsPurchases
2464950   +          +    -0.18561253113498 * S_NumDistPurchases
2464951   +          +    -0.35231054612792 * S_NumStorePurchases
2464952   +          +      0.9249490354172 * S_NumWebPurchases
2464953   +          +    -0.79868535147175 * S_NumWebVisitsMonth
2464954   +          +    -0.17158151681124 * S_RFMstat  +     -0.9870286843901 *
2464955   +        S_RMntFrq  +     0.62439123699986 * S_Recency
2464956   +          +    -0.45845377794308 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.29299707972123 * S_AcceptedCmpTotal + 1.39797329466471 *
S_Age + -2.02673480388837 * S_Frq + -1.09682777516542 * S_Income + -1.22241109888643 *
S_Kidhome + -1.35766076466324 * S_Mnt + -2.90812690982576 * S_MntFishProducts +
-0.48174923069843 * S_MntFruits + 1.57335575145195 * S_MntGoldProds + -0.55248873552176 *
S_MntMeatProducts + 0.54536808091745 * S_MntSweetProducts + -0.41516162035296 * S_MntWines +
0.07715050596116 * S_MonthsAsCustomer + -2.18785324142159 * S_NumCatalogPurchases +
-1.1174504455343 * S_NumDealsPurchases + -0.18561253113498 * S_NumDistPurchases +
-0.35231054612792 * S_NumStorePurchases + 0.9249490354172 * S_NumWebPurchases +
-0.79868535147175 * S_NumWebVisitsMonth + -0.17158151681124 * S_RFMstat + -0.9870286843901 *
S_RMntFrq + 0.62439123699986 * S_Recency + -0.45845377794308 * S_Teenhome ;
2464957   +   H1x3_2  =    -1.07483179793421 * S_AcceptedCmpTotal
2464958   +          +     1.03558600048684 * S_Age  +     1.11497695424161 * S_Frq
2464959   +          +     0.27297296926116 * S_Income  +     0.77036019999023 *
2464960   +        S_Kidhome  +     0.02567848304605 * S_Mnt  +     0.38661977628442 *
2464961   +        S_MntFishProducts  +    -0.36751750771945 * S_MntFruits
2464962   +          +     0.93924107558212 * S_MntGoldProds  +     0.93046859422523 *
2464963   +        S_MntMeatProducts  +    -0.46124679979068 * S_MntSweetProducts
2464964   +          +    -0.45348234529786 * S_MntWines  +     1.60057890623864 *
2464965   +        S_MonthsAsCustomer  +    -1.74657448073162 * S_NumCatalogPurchases
2464966   +          +     1.05434863590054 * S_NumDealsPurchases
2464967   +          +    -0.73255174632068 * S_NumDistPurchases
2464968   +          +     0.53949953455044 * S_NumStorePurchases
2464969   +          +    -0.61709467816649 * S_NumWebPurchases
2464970   +          +     1.36235282484348 * S_NumWebVisitsMonth
2464971   +          +     -0.0352720913953 * S_RFMstat  +     0.14001475375682 *
2464972   +        S_RMntFrq  +    -0.24276831608869 * S_Recency
2464973   +          +     0.09762798365722 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_2 = -1.07483179793421 * S_AcceptedCmpTotal + 1.03558600048684 *
S_Age + 1.11497695424161 * S_Frq + 0.27297296926116 * S_Income + 0.77036019999023 * S_Kidhome
+ 0.02567848304605 * S_Mnt + 0.38661977628442 * S_MntFishProducts + -0.36751750771945 *
S_MntFruits + 0.93924107558212 * S_MntGoldProds + 0.93046859422523 * S_MntMeatProducts +
-0.46124679979068 * S_MntSweetProducts + -0.45348234529786 * S_MntWines + 1.60057890623864 *
S_MonthsAsCustomer + -1.74657448073162 * S_NumCatalogPurchases + 1.05434863590054 *
S_NumDealsPurchases + -0.73255174632068 * S_NumDistPurchases + 0.53949953455044 *
S_NumStorePurchases + -0.61709467816649 * S_NumWebPurchases + 1.36235282484348 *
S_NumWebVisitsMonth + -0.0352720913953 * S_RFMstat + 0.14001475375682 * S_RMntFrq +
-0.24276831608869 * S_Recency + 0.09762798365722 * S_Teenhome ;
2464974   +   H1x3_1  = H1x3_1  +    -0.94208577947628 * AcceptedCmp10
2464975   +          +     -0.5233017415423 * AcceptedCmp20  +    -0.76900164563331 *
2464976   +        AcceptedCmp30  +    -0.79512141055877 * AcceptedCmp40
2464977   +          +     0.20126599116957 * AcceptedCmp50  +    -0.43046555689873 *
2464978   +        Complain0  +     0.31565229685815 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + -0.94208577947628 * AcceptedCmp10 + -0.5233017415423 *
AcceptedCmp20 + -0.76900164563331 * AcceptedCmp30 + -0.79512141055877 * AcceptedCmp40 +
0.20126599116957 * AcceptedCmp50 + -0.43046555689873 * Complain0 + 0.31565229685815 *
HigherEducationBinary0 ;
2464979   +   H1x3_2  = H1x3_2  +    -1.24961064002454 * AcceptedCmp10
2464980   +          +    -0.89859693224833 * AcceptedCmp20  +     1.15884958881232 *
2464981   +        AcceptedCmp30  +     0.38250389164472 * AcceptedCmp40
2464982   +          +     0.47123004358879 * AcceptedCmp50  +     -2.1232679844098 *
2464983   +        Complain0  +     0.97226091069674 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + -1.24961064002454 * AcceptedCmp10 + -0.89859693224833
* AcceptedCmp20 + 1.15884958881232 * AcceptedCmp30 + 0.38250389164472 * AcceptedCmp40 +
0.47123004358879 * AcceptedCmp50 + -2.1232679844098 * Complain0 + 0.97226091069674 *
HigherEducationBinary0 ;
2464984   +   H1x3_1  = H1x3_1  +    -0.07500306665919 * Education2n_Cycle
2464985   +          +     0.04122924311058 * EducationBasic  +    -0.49410102102951 *
2464986   +        EducationGraduation  +    -0.45477734340809 * EducationMaster
2464987   +          +     0.22253248036322 * Marital_StatusDivorced
2464988   +          +    -1.72455332745001 * Marital_StatusMarried
2464989   +          +     0.57787272107232 * Marital_StatusSingle
2464990   +          +     0.16267074825086 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + -0.07500306665919 * Education2n_Cycle +
0.04122924311058 * EducationBasic + -0.49410102102951 * EducationGraduation +
-0.45477734340809 * EducationMaster + 0.22253248036322 * Marital_StatusDivorced +
-1.72455332745001 * Marital_StatusMarried + 0.57787272107232 * Marital_StatusSingle +
0.16267074825086 * Marital_StatusTogether ;
2464991   +   H1x3_2  = H1x3_2  +    -0.21560233542581 * Education2n_Cycle
2464992   +          +    -0.36476815429069 * EducationBasic  +     1.63334881201349 *
2464993   +        EducationGraduation  +    -1.12620982139344 * EducationMaster
2464994   +          +     0.14637124403046 * Marital_StatusDivorced
2464995   +          +     0.18905186437528 * Marital_StatusMarried
2464996   +          +     0.00511958458521 * Marital_StatusSingle
2464997   +          +      -0.915980703129 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + -0.21560233542581 * Education2n_Cycle +
-0.36476815429069 * EducationBasic + 1.63334881201349 * EducationGraduation +
-1.12620982139344 * EducationMaster + 0.14637124403046 * Marital_StatusDivorced +
0.18905186437528 * Marital_StatusMarried + 0.00511958458521 * Marital_StatusSingle +
-0.915980703129 * Marital_StatusTogether ;
2464998   +   H1x3_1  =     0.54853846322055 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.54853846322055 + H1x3_1 ;
2464999   +   H1x3_2  =     1.36395858099198 + H1x3_2 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = 1.36395858099198 + H1x3_2 ;
2465000   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2465001   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2465002   +   H1x3_1  = EXP(MIN(H1x3_1 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x3_1 = EXP(MIN(H1x3_1 , _EXP_BAR));
2465003   +   H1x3_2  = EXP(MIN(H1x3_2 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x3_2 = EXP(MIN(H1x3_2 , _EXP_BAR));
2465004   +END;
MPRINT(EM_DIAGRAM):   END;
2465005   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2465006   +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
2465007   +   H1x3_2  = .;
MPRINT(EM_DIAGRAM):   H1x3_2 = .;
2465008   +END;
MPRINT(EM_DIAGRAM):   END;
2465009   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2465010   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2465011   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2465012   +
2465013   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2465014   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2465015   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2465016   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2465017   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2465018   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2465019   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2465020   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2465021   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2465022   +end;
MPRINT(EM_DIAGRAM):   end;
2465023   +else do;
MPRINT(EM_DIAGRAM):   else do;
2465024   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2465025   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2465026   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2465027   +   end;
MPRINT(EM_DIAGRAM):   end;
2465028   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2465029   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2465030   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2465031   +   end;
MPRINT(EM_DIAGRAM):   end;
2465032   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2465033   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2465034   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2465035   +   end;
MPRINT(EM_DIAGRAM):   end;
2465036   +end;
MPRINT(EM_DIAGRAM):   end;
2465037   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2465038   +   P_DepVar1  =    -10.6892993503201 * H1x1_1  +     16.2938756734008 * H1x1_2
2465039   +         ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -10.6892993503201 * H1x1_1 + 16.2938756734008 * H1x1_2 ;
2465040   +   P_DepVar1  = P_DepVar1  +      1.2332183930826 * H1x2_1
2465041   +          +    -0.85206858106106 * H1x2_2 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 + 1.2332183930826 * H1x2_1 + -0.85206858106106 *
H1x2_2 ;
2465042   +   P_DepVar1  = P_DepVar1  +    -0.00087126688031 * H1x3_1
2465043   +          +    -0.00025812675645 * H1x3_2 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 + -0.00087126688031 * H1x3_1 + -0.00025812675645 *
H1x3_2 ;
2465044   +   P_DepVar1  =     2.20710379818135 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.20710379818135 + P_DepVar1 ;
2465045   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2465046   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2465047   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2465048   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2465049   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2465050   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2465051   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2465052   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2465053   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2465054   +END;
MPRINT(EM_DIAGRAM):   END;
2465055   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2465056   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2465057   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2465058   +END;
MPRINT(EM_DIAGRAM):   END;
2465059   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2465060   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2465061   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2465062   +END;
MPRINT(EM_DIAGRAM):   END;
2465063   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2465064   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2465065   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2465066   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2465067   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2465068   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2465069   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2465070   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2465071   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2465072   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2465073   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2465074   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2465075   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2465076   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2465077   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2465078   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2465079   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2465080   +END;
MPRINT(EM_DIAGRAM):   END;
2465081   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2465082   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2465083   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2465084   +drop
2465085   +H1x1_1
2465086   +H1x1_2
2465087   +H1x2_1
2465088   +H1x2_2
2465089   +H1x3_1
2465090   +H1x3_2
2465091   +;
MPRINT(EM_DIAGRAM):   drop H1x1_1 H1x1_2 H1x2_1 H1x2_2 H1x3_1 H1x3_2 ;
2465092   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2465093   +* Renaming variables for AutoNeural7;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural7;
2465094   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2465095   +* Renaming Posterior variables for AutoNeural7;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural7;
2465096   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2465097   +drop AutoNeural7_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural7_P_DepVar1;
2465098   +AutoNeural7_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural7_P_DepVar1 = P_DepVar1;
2465099   +drop AutoNeural7_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural7_P_DepVar0;
2465100   +AutoNeural7_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural7_P_DepVar0 = P_DepVar0;
2465101   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2465102   +* Renaming _WARN_ variable for AutoNeural7;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural7;
2465103   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2465104   +length AutoNeural7_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural7_WARN_ $4;
2465105   +drop AutoNeural7_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural7_WARN_;
2465106   +AutoNeural7_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural7_WARN_ = _WARN_;
2465107   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2465108   +* Ensmbl46: Scoring Code of model 5 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl46: Scoring Code of model 5 of 5;
2465109   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2465110   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2465111   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
2465112   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2465113   +* NODE: AutoNeural10;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural10;
2465114   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2465115   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2465116   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2465117   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2465118   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2465119   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2465120   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2465121   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2465122   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2465123   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2465124   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2465125   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2465126   +LENGTH _WARN_ $4
2465127   +      F_DepVar  $ 12
2465128   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2465129   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2465130   +
2465131   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2465132   +
2465133   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2465134   +
2465135   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2465136   +
2465137   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2465138   +
2465139   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2465140   +
2465141   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2465142   +
2465143   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2465144   +
2465145   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2465146   +
2465147   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2465148   +
2465149   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2465150   +
2465151   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2465152   +
2465153   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2465154   +
2465155   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2465156   +
2465157   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2465158   +
2465159   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2465160   +
2465161   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2465162   +
2465163   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2465164   +
2465165   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2465166   +
2465167   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2465168   +
2465169   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2465170   +
2465171   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2465172   +
2465173   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2465174   +
2465175   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2465176   +
2465177   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2465178   +
2465179   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2465180   +
2465181   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2465182   +
2465183   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2465184   +
2465185   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2465186   +
2465187   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2465188   +
2465189   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2465190   +
2465191   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2465192   +
2465193   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2465194   +
2465195   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2465196   +
2465197   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2465198   +
2465199   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2465200   +
2465201   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2465202   +
2465203   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2465204   +
2465205   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2465206   +
2465207   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2465208   +
2465209   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2465210   +
2465211   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2465212   +
2465213   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
2465214   +
2465215   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
2465216   +
2465217   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
2465218   +
2465219   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
2465220   +
2465221   +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
2465222   +
2465223   +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
2465224   +
2465225   +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
2465226   +
2465227   +      label H1x3_2 = 'Hidden: H1x3_=2' ;
MPRINT(EM_DIAGRAM):   label H1x3_2 = 'Hidden: H1x3_=2' ;
2465228   +
2465229   +      label H1x3_3 = 'Hidden: H1x3_=3' ;
MPRINT(EM_DIAGRAM):   label H1x3_3 = 'Hidden: H1x3_=3' ;
2465230   +
2465231   +      label H1x3_4 = 'Hidden: H1x3_=4' ;
MPRINT(EM_DIAGRAM):   label H1x3_4 = 'Hidden: H1x3_=4' ;
2465232   +
2465233   +      label H1x3_5 = 'Hidden: H1x3_=5' ;
MPRINT(EM_DIAGRAM):   label H1x3_5 = 'Hidden: H1x3_=5' ;
2465234   +
2465235   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2465236   +
2465237   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2465238   +
2465239   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2465240   +
2465241   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2465242   +
2465243   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2465244   +
2465245   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2465246   +
2465247   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2465248   +
2465249   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2465250   +
2465251   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2465252   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2465253   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2465254   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2465255   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2465256   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2465257   +end;
MPRINT(EM_DIAGRAM):   end;
2465258   +else do;
MPRINT(EM_DIAGRAM):   else do;
2465259   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2465260   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2465261   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2465262   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2465263   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2465264   +   end;
MPRINT(EM_DIAGRAM):   end;
2465265   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2465266   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2465267   +   end;
MPRINT(EM_DIAGRAM):   end;
2465268   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2465269   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2465270   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2465271   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2465272   +   end;
MPRINT(EM_DIAGRAM):   end;
2465273   +end;
MPRINT(EM_DIAGRAM):   end;
2465274   +
2465275   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2465276   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2465277   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2465278   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2465279   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2465280   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2465281   +end;
MPRINT(EM_DIAGRAM):   end;
2465282   +else do;
MPRINT(EM_DIAGRAM):   else do;
2465283   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2465284   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2465285   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2465286   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2465287   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2465288   +   end;
MPRINT(EM_DIAGRAM):   end;
2465289   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2465290   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2465291   +   end;
MPRINT(EM_DIAGRAM):   end;
2465292   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2465293   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2465294   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2465295   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2465296   +   end;
MPRINT(EM_DIAGRAM):   end;
2465297   +end;
MPRINT(EM_DIAGRAM):   end;
2465298   +
2465299   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2465300   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2465301   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2465302   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2465303   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2465304   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2465305   +end;
MPRINT(EM_DIAGRAM):   end;
2465306   +else do;
MPRINT(EM_DIAGRAM):   else do;
2465307   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2465308   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2465309   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2465310   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2465311   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2465312   +   end;
MPRINT(EM_DIAGRAM):   end;
2465313   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2465314   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2465315   +   end;
MPRINT(EM_DIAGRAM):   end;
2465316   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2465317   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2465318   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2465319   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2465320   +   end;
MPRINT(EM_DIAGRAM):   end;
2465321   +end;
MPRINT(EM_DIAGRAM):   end;
2465322   +
2465323   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2465324   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2465325   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2465326   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2465327   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2465328   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2465329   +end;
MPRINT(EM_DIAGRAM):   end;
2465330   +else do;
MPRINT(EM_DIAGRAM):   else do;
2465331   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2465332   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2465333   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2465334   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2465335   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2465336   +   end;
MPRINT(EM_DIAGRAM):   end;
2465337   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2465338   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2465339   +   end;
MPRINT(EM_DIAGRAM):   end;
2465340   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2465341   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2465342   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2465343   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2465344   +   end;
MPRINT(EM_DIAGRAM):   end;
2465345   +end;
MPRINT(EM_DIAGRAM):   end;
2465346   +
2465347   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2465348   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2465349   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2465350   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2465351   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2465352   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2465353   +end;
MPRINT(EM_DIAGRAM):   end;
2465354   +else do;
MPRINT(EM_DIAGRAM):   else do;
2465355   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2465356   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2465357   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2465358   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2465359   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2465360   +   end;
MPRINT(EM_DIAGRAM):   end;
2465361   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2465362   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2465363   +   end;
MPRINT(EM_DIAGRAM):   end;
2465364   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2465365   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2465366   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2465367   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2465368   +   end;
MPRINT(EM_DIAGRAM):   end;
2465369   +end;
MPRINT(EM_DIAGRAM):   end;
2465370   +
2465371   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2465372   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2465373   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2465374   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2465375   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2465376   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2465377   +end;
MPRINT(EM_DIAGRAM):   end;
2465378   +else do;
MPRINT(EM_DIAGRAM):   else do;
2465379   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2465380   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2465381   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2465382   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2465383   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2465384   +   end;
MPRINT(EM_DIAGRAM):   end;
2465385   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2465386   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2465387   +   end;
MPRINT(EM_DIAGRAM):   end;
2465388   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2465389   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2465390   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2465391   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2465392   +   end;
MPRINT(EM_DIAGRAM):   end;
2465393   +end;
MPRINT(EM_DIAGRAM):   end;
2465394   +
2465395   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2465396   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2465397   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2465398   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2465399   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2465400   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2465401   +end;
MPRINT(EM_DIAGRAM):   end;
2465402   +else do;
MPRINT(EM_DIAGRAM):   else do;
2465403   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2465404   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2465405   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2465406   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2465407   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2465408   +   end;
MPRINT(EM_DIAGRAM):   end;
2465409   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2465410   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2465411   +   end;
MPRINT(EM_DIAGRAM):   end;
2465412   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2465413   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2465414   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2465415   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2465416   +   end;
MPRINT(EM_DIAGRAM):   end;
2465417   +end;
MPRINT(EM_DIAGRAM):   end;
2465418   +
2465419   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2465420   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
2465421   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2465422   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2465423   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2465424   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2465425   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2465426   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2465427   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2465428   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2465429   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2465430   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2465431   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2465432   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2465433   +end;
MPRINT(EM_DIAGRAM):   end;
2465434   +else do;
MPRINT(EM_DIAGRAM):   else do;
2465435   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2465436   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2465437   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2465438   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2465439   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2465440   +   end;
MPRINT(EM_DIAGRAM):   end;
2465441   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2465442   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2465443   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2465444   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2465445   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2465446   +   end;
MPRINT(EM_DIAGRAM):   end;
2465447   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2465448   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2465449   +   end;
MPRINT(EM_DIAGRAM):   end;
2465450   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2465451   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2465452   +   end;
MPRINT(EM_DIAGRAM):   end;
2465453   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2465454   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2465455   +   end;
MPRINT(EM_DIAGRAM):   end;
2465456   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2465457   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2465458   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2465459   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2465460   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2465461   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2465462   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2465463   +   end;
MPRINT(EM_DIAGRAM):   end;
2465464   +end;
MPRINT(EM_DIAGRAM):   end;
2465465   +
2465466   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2465467   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2465468   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
2465469   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2465470   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2465471   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2465472   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2465473   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2465474   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2465475   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2465476   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2465477   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2465478   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2465479   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2465480   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2465481   +end;
MPRINT(EM_DIAGRAM):   end;
2465482   +else do;
MPRINT(EM_DIAGRAM):   else do;
2465483   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2465484   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2465485   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2465486   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2465487   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2465488   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2465489   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2465490   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2465491   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2465492   +         end;
MPRINT(EM_DIAGRAM):   end;
2465493   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2465494   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2465495   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2465496   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2465497   +            end;
MPRINT(EM_DIAGRAM):   end;
2465498   +         end;
MPRINT(EM_DIAGRAM):   end;
2465499   +      end;
MPRINT(EM_DIAGRAM):   end;
2465500   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2465501   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2465502   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2465503   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2465504   +         end;
MPRINT(EM_DIAGRAM):   end;
2465505   +      end;
MPRINT(EM_DIAGRAM):   end;
2465506   +   end;
MPRINT(EM_DIAGRAM):   end;
2465507   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2465508   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2465509   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2465510   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2465511   +      end;
MPRINT(EM_DIAGRAM):   end;
2465512   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2465513   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2465514   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2465515   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2465516   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2465517   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2465518   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2465519   +         end;
MPRINT(EM_DIAGRAM):   end;
2465520   +      end;
MPRINT(EM_DIAGRAM):   end;
2465521   +   end;
MPRINT(EM_DIAGRAM):   end;
2465522   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2465523   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2465524   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2465525   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2465526   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2465527   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2465528   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2465529   +   end;
MPRINT(EM_DIAGRAM):   end;
2465530   +end;
MPRINT(EM_DIAGRAM):   end;
2465531   +
2465532   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2465533   +*** Checking missing input Interval
2465534   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2465535   +
2465536   +IF NMISS(
2465537   +   AcceptedCmpTotal ,
2465538   +   Age ,
2465539   +   Frq ,
2465540   +   Income ,
2465541   +   Kidhome ,
2465542   +   Mnt ,
2465543   +   MntFishProducts ,
2465544   +   MntFruits ,
2465545   +   MntGoldProds ,
2465546   +   MntMeatProducts ,
2465547   +   MntSweetProducts ,
2465548   +   MntWines ,
2465549   +   MonthsAsCustomer ,
2465550   +   NumCatalogPurchases ,
2465551   +   NumDealsPurchases ,
2465552   +   NumDistPurchases ,
2465553   +   NumStorePurchases ,
2465554   +   NumWebPurchases ,
2465555   +   NumWebVisitsMonth ,
2465556   +   RFMstat ,
2465557   +   RMntFrq ,
2465558   +   Recency ,
2465559   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
2465560   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2465561   +
2465562   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2465563   +END;
MPRINT(EM_DIAGRAM):   END;
2465564   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2465565   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2465566   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2465567   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2465568   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2465569   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2465570   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2465571   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2465572   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2465573   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2465574   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2465575   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2465576   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2465577   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2465578   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2465579   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2465580   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2465581   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2465582   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2465583   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2465584   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2465585   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2465586   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
2465587   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2465588   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2465589   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2465590   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2465591   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2465592   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2465593   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2465594   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2465595   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2465596   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2465597   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2465598   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2465599   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2465600   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2465601   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2465602   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2465603   +END;
MPRINT(EM_DIAGRAM):   END;
2465604   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2465605   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2465606   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2465607   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2465608   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2465609   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2465610   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2465611   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2465612   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2465613   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2465614   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2465615   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2465616   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2465617   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2465618   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2465619   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2465620   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2465621   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2465622   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2465623   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2465624   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2465625   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2465626   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
2465627   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2465628   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2465629   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2465630   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2465631   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2465632   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2465633   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2465634   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2465635   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2465636   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2465637   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
2465638   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2465639   +   ELSE S_NumCatalogPurchases
2465640   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2465641   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2465642   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2465643   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2465644   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2465645   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2465646   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2465647   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2465648   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2465649   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2465650   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2465651   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2465652   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2465653   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2465654   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2465655   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2465656   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2465657   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2465658   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2465659   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2465660   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2465661   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2465662   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2465663   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2465664   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2465665   +END;
MPRINT(EM_DIAGRAM):   END;
2465666   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2465667   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2465668   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2465669   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2465670   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2465671   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2465672   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2465673   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2465674   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2465675   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2465676   +   H1x1_1  =     -1.5235159368138 * S_AcceptedCmpTotal
2465677   +          +     0.13941271308016 * S_Age  +    -0.84765157270503 * S_Frq
2465678   +          +    -0.89386555046676 * S_Income  +     1.62709236629244 *
2465679   +        S_Kidhome  +    -1.21416429819342 * S_Mnt  +    -1.95640488965637 *
2465680   +        S_MntFishProducts  +    -0.08621024993404 * S_MntFruits
2465681   +          +    -0.38536990009586 * S_MntGoldProds  +     3.12553097304637 *
2465682   +        S_MntMeatProducts  +    -2.50680711036653 * S_MntSweetProducts
2465683   +          +    -3.77770073626477 * S_MntWines  +     0.39118206604766 *
2465684   +        S_MonthsAsCustomer  +     1.80485993754239 * S_NumCatalogPurchases
2465685   +          +     3.21215425524619 * S_NumDealsPurchases
2465686   +          +     0.08695198777156 * S_NumDistPurchases
2465687   +          +    -2.58697971128295 * S_NumStorePurchases
2465688   +          +    -0.44431924796059 * S_NumWebPurchases
2465689   +          +     -1.4492698984921 * S_NumWebVisitsMonth
2465690   +          +     2.16652214648037 * S_RFMstat  +    -0.48027961131639 *
2465691   +        S_RMntFrq  +    -0.27206877070748 * S_Recency
2465692   +          +    -0.34774852853763 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.5235159368138 * S_AcceptedCmpTotal + 0.13941271308016 *
S_Age + -0.84765157270503 * S_Frq + -0.89386555046676 * S_Income + 1.62709236629244 *
S_Kidhome + -1.21416429819342 * S_Mnt + -1.95640488965637 * S_MntFishProducts +
-0.08621024993404 * S_MntFruits + -0.38536990009586 * S_MntGoldProds + 3.12553097304637 *
S_MntMeatProducts + -2.50680711036653 * S_MntSweetProducts + -3.77770073626477 * S_MntWines +
0.39118206604766 * S_MonthsAsCustomer + 1.80485993754239 * S_NumCatalogPurchases +
3.21215425524619 * S_NumDealsPurchases + 0.08695198777156 * S_NumDistPurchases +
-2.58697971128295 * S_NumStorePurchases + -0.44431924796059 * S_NumWebPurchases +
-1.4492698984921 * S_NumWebVisitsMonth + 2.16652214648037 * S_RFMstat + -0.48027961131639 *
S_RMntFrq + -0.27206877070748 * S_Recency + -0.34774852853763 * S_Teenhome ;
2465693   +   H1x1_2  =     -0.5665707820209 * S_AcceptedCmpTotal
2465694   +          +    -1.33582859121223 * S_Age  +     0.90483024742522 * S_Frq
2465695   +          +    -2.00588558815165 * S_Income  +      3.0373198083895 *
2465696   +        S_Kidhome  +      0.4356905004225 * S_Mnt  +     0.19619626354366 *
2465697   +        S_MntFishProducts  +    -1.09111340184132 * S_MntFruits
2465698   +          +     0.36844676336289 * S_MntGoldProds  +    -2.23832561375429 *
2465699   +        S_MntMeatProducts  +    -0.18280081530069 * S_MntSweetProducts
2465700   +          +     2.11599309139107 * S_MntWines  +     0.68147940490709 *
2465701   +        S_MonthsAsCustomer  +    -0.73940648599397 * S_NumCatalogPurchases
2465702   +          +    -0.83844506398484 * S_NumDealsPurchases
2465703   +          +     0.60831936516804 * S_NumDistPurchases
2465704   +          +     1.79084087761626 * S_NumStorePurchases
2465705   +          +     1.17119196356453 * S_NumWebPurchases
2465706   +          +    -3.63586683518718 * S_NumWebVisitsMonth
2465707   +          +     0.60521990735996 * S_RFMstat  +     0.56036381019221 *
2465708   +        S_RMntFrq  +     3.84599118896159 * S_Recency
2465709   +          +     2.42091939246471 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.5665707820209 * S_AcceptedCmpTotal + -1.33582859121223 *
S_Age + 0.90483024742522 * S_Frq + -2.00588558815165 * S_Income + 3.0373198083895 * S_Kidhome
+ 0.4356905004225 * S_Mnt + 0.19619626354366 * S_MntFishProducts + -1.09111340184132 *
S_MntFruits + 0.36844676336289 * S_MntGoldProds + -2.23832561375429 * S_MntMeatProducts +
-0.18280081530069 * S_MntSweetProducts + 2.11599309139107 * S_MntWines + 0.68147940490709 *
S_MonthsAsCustomer + -0.73940648599397 * S_NumCatalogPurchases + -0.83844506398484 *
S_NumDealsPurchases + 0.60831936516804 * S_NumDistPurchases + 1.79084087761626 *
S_NumStorePurchases + 1.17119196356453 * S_NumWebPurchases + -3.63586683518718 *
S_NumWebVisitsMonth + 0.60521990735996 * S_RFMstat + 0.56036381019221 * S_RMntFrq +
3.84599118896159 * S_Recency + 2.42091939246471 * S_Teenhome ;
2465710   +   H1x1_3  =    -2.34864034635966 * S_AcceptedCmpTotal
2465711   +          +     0.38417502023066 * S_Age  +     0.18241442054661 * S_Frq
2465712   +          +    -0.36643054878492 * S_Income  +    -0.01464967964014 *
2465713   +        S_Kidhome  +     0.13084033882631 * S_Mnt  +     1.43066752801424 *
2465714   +        S_MntFishProducts  +     0.30678881611098 * S_MntFruits
2465715   +          +    -0.35038082288662 * S_MntGoldProds  +    -6.79650673935808 *
2465716   +        S_MntMeatProducts  +    -0.35154740308081 * S_MntSweetProducts
2465717   +          +     4.53406963590593 * S_MntWines  +     0.35082802515055 *
2465718   +        S_MonthsAsCustomer  +    -1.62489937965567 * S_NumCatalogPurchases
2465719   +          +    -0.31484031572628 * S_NumDealsPurchases
2465720   +          +    -0.18273941035679 * S_NumDistPurchases
2465721   +          +     0.99501789733882 * S_NumStorePurchases
2465722   +          +     1.32014078829379 * S_NumWebPurchases
2465723   +          +    -1.34393498450215 * S_NumWebVisitsMonth
2465724   +          +    -0.93549119966022 * S_RFMstat  +    -1.74825390192193 *
2465725   +        S_RMntFrq  +     0.84406941726743 * S_Recency
2465726   +          +     -0.5004540381333 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -2.34864034635966 * S_AcceptedCmpTotal + 0.38417502023066 *
S_Age + 0.18241442054661 * S_Frq + -0.36643054878492 * S_Income + -0.01464967964014 *
S_Kidhome + 0.13084033882631 * S_Mnt + 1.43066752801424 * S_MntFishProducts + 0.30678881611098
* S_MntFruits + -0.35038082288662 * S_MntGoldProds + -6.79650673935808 * S_MntMeatProducts +
-0.35154740308081 * S_MntSweetProducts + 4.53406963590593 * S_MntWines + 0.35082802515055 *
S_MonthsAsCustomer + -1.62489937965567 * S_NumCatalogPurchases + -0.31484031572628 *
S_NumDealsPurchases + -0.18273941035679 * S_NumDistPurchases + 0.99501789733882 *
S_NumStorePurchases + 1.32014078829379 * S_NumWebPurchases + -1.34393498450215 *
S_NumWebVisitsMonth + -0.93549119966022 * S_RFMstat + -1.74825390192193 * S_RMntFrq +
0.84406941726743 * S_Recency + -0.5004540381333 * S_Teenhome ;
2465727   +   H1x1_4  =     0.46772023050431 * S_AcceptedCmpTotal
2465728   +          +    -0.64609651992636 * S_Age  +     0.65433283816167 * S_Frq
2465729   +          +     0.97922442633265 * S_Income  +    -0.37705204232056 *
2465730   +        S_Kidhome  +     0.00937752600299 * S_Mnt  +     -0.6082843846013 *
2465731   +        S_MntFishProducts  +     -0.6227107898918 * S_MntFruits
2465732   +          +      0.0291421224006 * S_MntGoldProds  +     1.09748402313736 *
2465733   +        S_MntMeatProducts  +     0.00604619863622 * S_MntSweetProducts
2465734   +          +    -0.74684537570529 * S_MntWines  +    -0.00266569003481 *
2465735   +        S_MonthsAsCustomer  +     2.01081657735872 * S_NumCatalogPurchases
2465736   +          +     1.19658719134196 * S_NumDealsPurchases
2465737   +          +     0.87478204472986 * S_NumDistPurchases
2465738   +          +    -0.20635856288784 * S_NumStorePurchases
2465739   +          +    -0.89927356974242 * S_NumWebPurchases
2465740   +          +     2.92285244132576 * S_NumWebVisitsMonth
2465741   +          +    -0.10913907245142 * S_RFMstat  +     1.64233441899256 *
2465742   +        S_RMntFrq  +    -3.64945971202322 * S_Recency
2465743   +          +    -1.78841346993558 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.46772023050431 * S_AcceptedCmpTotal + -0.64609651992636 *
S_Age + 0.65433283816167 * S_Frq + 0.97922442633265 * S_Income + -0.37705204232056 * S_Kidhome
+ 0.00937752600299 * S_Mnt + -0.6082843846013 * S_MntFishProducts + -0.6227107898918 *
S_MntFruits + 0.0291421224006 * S_MntGoldProds + 1.09748402313736 * S_MntMeatProducts +
0.00604619863622 * S_MntSweetProducts + -0.74684537570529 * S_MntWines + -0.00266569003481 *
S_MonthsAsCustomer + 2.01081657735872 * S_NumCatalogPurchases + 1.19658719134196 *
S_NumDealsPurchases + 0.87478204472986 * S_NumDistPurchases + -0.20635856288784 *
S_NumStorePurchases + -0.89927356974242 * S_NumWebPurchases + 2.92285244132576 *
S_NumWebVisitsMonth + -0.10913907245142 * S_RFMstat + 1.64233441899256 * S_RMntFrq +
-3.64945971202322 * S_Recency + -1.78841346993558 * S_Teenhome ;
2465744   +   H1x1_5  =    -1.22491918863941 * S_AcceptedCmpTotal
2465745   +          +     0.16201659993217 * S_Age  +     0.17189537824457 * S_Frq
2465746   +          +    -0.87922900323563 * S_Income  +    -0.79268410231108 *
2465747   +        S_Kidhome  +     0.62793961676074 * S_Mnt  +     0.20877761882787 *
2465748   +        S_MntFishProducts  +     0.99367872286661 * S_MntFruits
2465749   +          +     -0.4347564565882 * S_MntGoldProds  +    -0.16203279329295 *
2465750   +        S_MntMeatProducts  +     0.81409215344356 * S_MntSweetProducts
2465751   +          +     1.33482971563984 * S_MntWines  +    -1.17441882196058 *
2465752   +        S_MonthsAsCustomer  +    -1.72330829533107 * S_NumCatalogPurchases
2465753   +          +       -2.32617124568 * S_NumDealsPurchases
2465754   +          +    -0.56589187730672 * S_NumDistPurchases
2465755   +          +     1.07062299863482 * S_NumStorePurchases
2465756   +          +     0.30077273739578 * S_NumWebPurchases
2465757   +          +    -1.67745421915317 * S_NumWebVisitsMonth
2465758   +          +      0.0530074713265 * S_RFMstat  +    -0.55969729655382 *
2465759   +        S_RMntFrq  +     1.32196704233234 * S_Recency
2465760   +          +     1.05470622089613 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.22491918863941 * S_AcceptedCmpTotal + 0.16201659993217 *
S_Age + 0.17189537824457 * S_Frq + -0.87922900323563 * S_Income + -0.79268410231108 *
S_Kidhome + 0.62793961676074 * S_Mnt + 0.20877761882787 * S_MntFishProducts + 0.99367872286661
* S_MntFruits + -0.4347564565882 * S_MntGoldProds + -0.16203279329295 * S_MntMeatProducts +
0.81409215344356 * S_MntSweetProducts + 1.33482971563984 * S_MntWines + -1.17441882196058 *
S_MonthsAsCustomer + -1.72330829533107 * S_NumCatalogPurchases + -2.32617124568 *
S_NumDealsPurchases + -0.56589187730672 * S_NumDistPurchases + 1.07062299863482 *
S_NumStorePurchases + 0.30077273739578 * S_NumWebPurchases + -1.67745421915317 *
S_NumWebVisitsMonth + 0.0530074713265 * S_RFMstat + -0.55969729655382 * S_RMntFrq +
1.32196704233234 * S_Recency + 1.05470622089613 * S_Teenhome ;
2465761   +   H1x1_1  = H1x1_1  +     0.19875423759582 * AcceptedCmp10
2465762   +          +    -1.84163905120352 * AcceptedCmp20  +    -1.63149345314696 *
2465763   +        AcceptedCmp30  +    -1.52652349127913 * AcceptedCmp40
2465764   +          +    -0.97663634905647 * AcceptedCmp50  +    -0.94352222509088 *
2465765   +        Complain0  +    -0.63297203617355 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.19875423759582 * AcceptedCmp10 + -1.84163905120352 *
AcceptedCmp20 + -1.63149345314696 * AcceptedCmp30 + -1.52652349127913 * AcceptedCmp40 +
-0.97663634905647 * AcceptedCmp50 + -0.94352222509088 * Complain0 + -0.63297203617355 *
HigherEducationBinary0 ;
2465766   +   H1x1_2  = H1x1_2  +      0.0505791781839 * AcceptedCmp10
2465767   +          +    -0.19407965320143 * AcceptedCmp20  +     0.35537657271506 *
2465768   +        AcceptedCmp30  +    -0.84577216347728 * AcceptedCmp40
2465769   +          +     1.73085566880686 * AcceptedCmp50  +     0.05800586053869 *
2465770   +        Complain0  +    -0.62505561129469 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.0505791781839 * AcceptedCmp10 + -0.19407965320143 *
AcceptedCmp20 + 0.35537657271506 * AcceptedCmp30 + -0.84577216347728 * AcceptedCmp40 +
1.73085566880686 * AcceptedCmp50 + 0.05800586053869 * Complain0 + -0.62505561129469 *
HigherEducationBinary0 ;
2465771   +   H1x1_3  = H1x1_3  +     0.54825581966403 * AcceptedCmp10
2465772   +          +     -0.0966204838125 * AcceptedCmp20  +    -1.31707923763053 *
2465773   +        AcceptedCmp30  +    -1.21021077486757 * AcceptedCmp40
2465774   +          +     3.29102250037389 * AcceptedCmp50  +    -0.16383687725206 *
2465775   +        Complain0  +     0.00651446514934 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.54825581966403 * AcceptedCmp10 + -0.0966204838125 *
AcceptedCmp20 + -1.31707923763053 * AcceptedCmp30 + -1.21021077486757 * AcceptedCmp40 +
3.29102250037389 * AcceptedCmp50 + -0.16383687725206 * Complain0 + 0.00651446514934 *
HigherEducationBinary0 ;
2465776   +   H1x1_4  = H1x1_4  +    -1.18573650260336 * AcceptedCmp10
2465777   +          +    -1.73968979068234 * AcceptedCmp20  +    -1.31277698137778 *
2465778   +        AcceptedCmp30  +    -1.74346538593922 * AcceptedCmp40
2465779   +          +    -0.72543919818299 * AcceptedCmp50  +    -0.06328353200384 *
2465780   +        Complain0  +     0.74828735398796 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -1.18573650260336 * AcceptedCmp10 + -1.73968979068234
* AcceptedCmp20 + -1.31277698137778 * AcceptedCmp30 + -1.74346538593922 * AcceptedCmp40 +
-0.72543919818299 * AcceptedCmp50 + -0.06328353200384 * Complain0 + 0.74828735398796 *
HigherEducationBinary0 ;
2465781   +   H1x1_5  = H1x1_5  +    -0.19622185523754 * AcceptedCmp10
2465782   +          +     -0.4643498903813 * AcceptedCmp20  +     0.69293644934542 *
2465783   +        AcceptedCmp30  +     0.23077838801355 * AcceptedCmp40
2465784   +          +     0.53061813608476 * AcceptedCmp50  +    -0.56870999936869 *
2465785   +        Complain0  +      0.5917990310858 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.19622185523754 * AcceptedCmp10 + -0.4643498903813 *
AcceptedCmp20 + 0.69293644934542 * AcceptedCmp30 + 0.23077838801355 * AcceptedCmp40 +
0.53061813608476 * AcceptedCmp50 + -0.56870999936869 * Complain0 + 0.5917990310858 *
HigherEducationBinary0 ;
2465786   +   H1x1_1  = H1x1_1  +     1.01422000032629 * Education2n_Cycle
2465787   +          +    -0.77619298826287 * EducationBasic  +     0.35633748974614 *
2465788   +        EducationGraduation  +     0.98491516107588 * EducationMaster
2465789   +          +    -0.27797737429678 * Marital_StatusDivorced
2465790   +          +    -0.08137635862327 * Marital_StatusMarried
2465791   +          +     0.06275411820495 * Marital_StatusSingle
2465792   +          +    -0.19979743343415 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 1.01422000032629 * Education2n_Cycle +
-0.77619298826287 * EducationBasic + 0.35633748974614 * EducationGraduation + 0.98491516107588
* EducationMaster + -0.27797737429678 * Marital_StatusDivorced + -0.08137635862327 *
Marital_StatusMarried + 0.06275411820495 * Marital_StatusSingle + -0.19979743343415 *
Marital_StatusTogether ;
2465793   +   H1x1_2  = H1x1_2  +    -0.66224206017124 * Education2n_Cycle
2465794   +          +     0.80729589186486 * EducationBasic  +     0.75931615755998 *
2465795   +        EducationGraduation  +    -0.05470462753112 * EducationMaster
2465796   +          +     0.05151426841441 * Marital_StatusDivorced
2465797   +          +     1.19165082030442 * Marital_StatusMarried
2465798   +          +    -1.08257080662611 * Marital_StatusSingle
2465799   +          +     0.13534863375625 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.66224206017124 * Education2n_Cycle +
0.80729589186486 * EducationBasic + 0.75931615755998 * EducationGraduation + -0.05470462753112
* EducationMaster + 0.05151426841441 * Marital_StatusDivorced + 1.19165082030442 *
Marital_StatusMarried + -1.08257080662611 * Marital_StatusSingle + 0.13534863375625 *
Marital_StatusTogether ;
2465800   +   H1x1_3  = H1x1_3  +     0.20065577451105 * Education2n_Cycle
2465801   +          +    -0.14205714608311 * EducationBasic  +    -0.07077711368393 *
2465802   +        EducationGraduation  +     0.40262329710793 * EducationMaster
2465803   +          +      0.0238206459022 * Marital_StatusDivorced
2465804   +          +     -0.4653244204261 * Marital_StatusMarried
2465805   +          +     0.13051613619882 * Marital_StatusSingle
2465806   +          +    -0.35951366919755 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.20065577451105 * Education2n_Cycle +
-0.14205714608311 * EducationBasic + -0.07077711368393 * EducationGraduation +
0.40262329710793 * EducationMaster + 0.0238206459022 * Marital_StatusDivorced +
-0.4653244204261 * Marital_StatusMarried + 0.13051613619882 * Marital_StatusSingle +
-0.35951366919755 * Marital_StatusTogether ;
2465807   +   H1x1_4  = H1x1_4  +     -0.8555672630555 * Education2n_Cycle
2465808   +          +     0.58439980233621 * EducationBasic  +     0.04784356342853 *
2465809   +        EducationGraduation  +    -0.79764992264249 * EducationMaster
2465810   +          +     -0.7449356409222 * Marital_StatusDivorced
2465811   +          +    -1.46604673521535 * Marital_StatusMarried
2465812   +          +     0.74484771688818 * Marital_StatusSingle
2465813   +          +    -1.91273009779071 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.8555672630555 * Education2n_Cycle +
0.58439980233621 * EducationBasic + 0.04784356342853 * EducationGraduation + -0.79764992264249
* EducationMaster + -0.7449356409222 * Marital_StatusDivorced + -1.46604673521535 *
Marital_StatusMarried + 0.74484771688818 * Marital_StatusSingle + -1.91273009779071 *
Marital_StatusTogether ;
2465814   +   H1x1_5  = H1x1_5  +    -0.45561096683674 * Education2n_Cycle
2465815   +          +    -0.08389156101858 * EducationBasic  +    -1.24281299616343 *
2465816   +        EducationGraduation  +    -0.00999807517226 * EducationMaster
2465817   +          +    -3.68044980584423 * Marital_StatusDivorced
2465818   +          +     3.14587407902338 * Marital_StatusMarried
2465819   +          +    -2.66118132753024 * Marital_StatusSingle
2465820   +          +     3.50991640149914 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.45561096683674 * Education2n_Cycle +
-0.08389156101858 * EducationBasic + -1.24281299616343 * EducationGraduation +
-0.00999807517226 * EducationMaster + -3.68044980584423 * Marital_StatusDivorced +
3.14587407902338 * Marital_StatusMarried + -2.66118132753024 * Marital_StatusSingle +
3.50991640149914 * Marital_StatusTogether ;
2465821   +   H1x1_1  =    -2.87464368543529 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -2.87464368543529 + H1x1_1 ;
2465822   +   H1x1_2  =     0.69745433976458 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.69745433976458 + H1x1_2 ;
2465823   +   H1x1_3  =    -0.71895677211617 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.71895677211617 + H1x1_3 ;
2465824   +   H1x1_4  =    -3.07619671976178 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -3.07619671976178 + H1x1_4 ;
2465825   +   H1x1_5  =    -1.74345318000473 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.74345318000473 + H1x1_5 ;
2465826   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2465827   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2465828   +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
2465829   +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
2465830   +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
2465831   +   H1x1_4  = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
2465832   +   H1x1_5  = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_5 = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
2465833   +END;
MPRINT(EM_DIAGRAM):   END;
2465834   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2465835   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2465836   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2465837   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2465838   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2465839   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
2465840   +END;
MPRINT(EM_DIAGRAM):   END;
2465841   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2465842   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
2465843   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2465844   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2465845   +   H1x2_1  =     0.02206354442682 * S_AcceptedCmpTotal
2465846   +          +    -1.34753268833642 * S_Age  +    -2.08377331969695 * S_Frq
2465847   +          +    -1.39854535380539 * S_Income  +     2.13620611759545 *
2465848   +        S_Kidhome  +    -1.50515365217324 * S_Mnt  +     0.85499321862984 *
2465849   +        S_MntFishProducts  +    -1.17732452790345 * S_MntFruits
2465850   +          +     1.52355640622249 * S_MntGoldProds  +     1.31854239360457 *
2465851   +        S_MntMeatProducts  +    -0.03265851293389 * S_MntSweetProducts
2465852   +          +     2.18666242847435 * S_MntWines  +     0.08246249957908 *
2465853   +        S_MonthsAsCustomer  +    -1.06901902236609 * S_NumCatalogPurchases
2465854   +          +     0.89261880438741 * S_NumDealsPurchases
2465855   +          +    -1.61647413199892 * S_NumDistPurchases
2465856   +          +    -0.56304669045195 * S_NumStorePurchases
2465857   +          +      0.7766837080945 * S_NumWebPurchases
2465858   +          +     -2.2953497398902 * S_NumWebVisitsMonth
2465859   +          +    -3.34547809243199 * S_RFMstat  +     0.07311937799261 *
2465860   +        S_RMntFrq  +     -0.5786489917247 * S_Recency
2465861   +          +    -1.06532056361117 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.02206354442682 * S_AcceptedCmpTotal + -1.34753268833642 *
S_Age + -2.08377331969695 * S_Frq + -1.39854535380539 * S_Income + 2.13620611759545 *
S_Kidhome + -1.50515365217324 * S_Mnt + 0.85499321862984 * S_MntFishProducts +
-1.17732452790345 * S_MntFruits + 1.52355640622249 * S_MntGoldProds + 1.31854239360457 *
S_MntMeatProducts + -0.03265851293389 * S_MntSweetProducts + 2.18666242847435 * S_MntWines +
0.08246249957908 * S_MonthsAsCustomer + -1.06901902236609 * S_NumCatalogPurchases +
0.89261880438741 * S_NumDealsPurchases + -1.61647413199892 * S_NumDistPurchases +
-0.56304669045195 * S_NumStorePurchases + 0.7766837080945 * S_NumWebPurchases +
-2.2953497398902 * S_NumWebVisitsMonth + -3.34547809243199 * S_RFMstat + 0.07311937799261 *
S_RMntFrq + -0.5786489917247 * S_Recency + -1.06532056361117 * S_Teenhome ;
2465862   +   H1x2_2  =      0.0341880757331 * S_AcceptedCmpTotal
2465863   +          +     0.72034771315738 * S_Age  +     0.64155966340389 * S_Frq
2465864   +          +    -1.06570008729492 * S_Income  +    -1.84532938869849 *
2465865   +        S_Kidhome  +     0.94433555965982 * S_Mnt  +     1.23831916074831 *
2465866   +        S_MntFishProducts  +     1.33415870886475 * S_MntFruits
2465867   +          +    -0.51253922893993 * S_MntGoldProds  +     0.02241594009025 *
2465868   +        S_MntMeatProducts  +     -1.2811169586741 * S_MntSweetProducts
2465869   +          +     1.96686773881953 * S_MntWines  +     1.44655944802715 *
2465870   +        S_MonthsAsCustomer  +    -1.18627316384798 * S_NumCatalogPurchases
2465871   +          +     1.02431289724643 * S_NumDealsPurchases
2465872   +          +    -0.90960173637405 * S_NumDistPurchases
2465873   +          +     1.24283490404772 * S_NumStorePurchases
2465874   +          +     1.23072413154592 * S_NumWebPurchases
2465875   +          +    -0.21533378473931 * S_NumWebVisitsMonth
2465876   +          +     1.26438704884008 * S_RFMstat  +      0.0014042871018 *
2465877   +        S_RMntFrq  +     0.32357651423135 * S_Recency
2465878   +          +    -0.49834512433407 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.0341880757331 * S_AcceptedCmpTotal + 0.72034771315738 * S_Age
+ 0.64155966340389 * S_Frq + -1.06570008729492 * S_Income + -1.84532938869849 * S_Kidhome +
0.94433555965982 * S_Mnt + 1.23831916074831 * S_MntFishProducts + 1.33415870886475 *
S_MntFruits + -0.51253922893993 * S_MntGoldProds + 0.02241594009025 * S_MntMeatProducts +
-1.2811169586741 * S_MntSweetProducts + 1.96686773881953 * S_MntWines + 1.44655944802715 *
S_MonthsAsCustomer + -1.18627316384798 * S_NumCatalogPurchases + 1.02431289724643 *
S_NumDealsPurchases + -0.90960173637405 * S_NumDistPurchases + 1.24283490404772 *
S_NumStorePurchases + 1.23072413154592 * S_NumWebPurchases + -0.21533378473931 *
S_NumWebVisitsMonth + 1.26438704884008 * S_RFMstat + 0.0014042871018 * S_RMntFrq +
0.32357651423135 * S_Recency + -0.49834512433407 * S_Teenhome ;
2465879   +   H1x2_3  =    -0.57066024275015 * S_AcceptedCmpTotal
2465880   +          +     0.16615358153136 * S_Age  +    -0.60017461612499 * S_Frq
2465881   +          +    -0.21195793925019 * S_Income  +    -0.36049126996499 *
2465882   +        S_Kidhome  +     0.97458542661118 * S_Mnt  +     0.62279162661518 *
2465883   +        S_MntFishProducts  +    -0.44715765367363 * S_MntFruits
2465884   +          +     0.91519163455361 * S_MntGoldProds  +     1.07312113398768 *
2465885   +        S_MntMeatProducts  +    -1.61967017526055 * S_MntSweetProducts
2465886   +          +    -1.88327677412185 * S_MntWines  +    -1.67067768979245 *
2465887   +        S_MonthsAsCustomer  +    -0.64725516463464 * S_NumCatalogPurchases
2465888   +          +    -0.26249596122198 * S_NumDealsPurchases
2465889   +          +    -0.63328519804758 * S_NumDistPurchases
2465890   +          +    -0.88467503575886 * S_NumStorePurchases
2465891   +          +    -0.83120537310738 * S_NumWebPurchases
2465892   +          +     1.40072282351719 * S_NumWebVisitsMonth
2465893   +          +     1.42591300760984 * S_RFMstat  +     1.93593865100837 *
2465894   +        S_RMntFrq  +     -1.2794275536508 * S_Recency
2465895   +          +    -0.78582664529339 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.57066024275015 * S_AcceptedCmpTotal + 0.16615358153136 *
S_Age + -0.60017461612499 * S_Frq + -0.21195793925019 * S_Income + -0.36049126996499 *
S_Kidhome + 0.97458542661118 * S_Mnt + 0.62279162661518 * S_MntFishProducts +
-0.44715765367363 * S_MntFruits + 0.91519163455361 * S_MntGoldProds + 1.07312113398768 *
S_MntMeatProducts + -1.61967017526055 * S_MntSweetProducts + -1.88327677412185 * S_MntWines +
-1.67067768979245 * S_MonthsAsCustomer + -0.64725516463464 * S_NumCatalogPurchases +
-0.26249596122198 * S_NumDealsPurchases + -0.63328519804758 * S_NumDistPurchases +
-0.88467503575886 * S_NumStorePurchases + -0.83120537310738 * S_NumWebPurchases +
1.40072282351719 * S_NumWebVisitsMonth + 1.42591300760984 * S_RFMstat + 1.93593865100837 *
S_RMntFrq + -1.2794275536508 * S_Recency + -0.78582664529339 * S_Teenhome ;
2465896   +   H1x2_4  =     0.70159995537759 * S_AcceptedCmpTotal
2465897   +          +    -0.70199351793792 * S_Age  +     1.63573967285806 * S_Frq
2465898   +          +     -0.1930098634567 * S_Income  +    -0.43173926207337 *
2465899   +        S_Kidhome  +    -0.45239271926178 * S_Mnt  +    -0.14139816383874 *
2465900   +        S_MntFishProducts  +    -0.70568635660703 * S_MntFruits
2465901   +          +     1.68796268038024 * S_MntGoldProds  +     0.80481626355934 *
2465902   +        S_MntMeatProducts  +     0.29831384975096 * S_MntSweetProducts
2465903   +          +    -0.50792336172825 * S_MntWines  +     0.80425149159678 *
2465904   +        S_MonthsAsCustomer  +    -2.26171302044375 * S_NumCatalogPurchases
2465905   +          +     1.30167361451945 * S_NumDealsPurchases
2465906   +          +     1.45457613716235 * S_NumDistPurchases
2465907   +          +    -0.40226463685252 * S_NumStorePurchases
2465908   +          +     0.36369161683572 * S_NumWebPurchases
2465909   +          +    -2.65684851610403 * S_NumWebVisitsMonth
2465910   +          +    -1.14810413235545 * S_RFMstat  +       1.291857215261 *
2465911   +        S_RMntFrq  +     1.36572595403825 * S_Recency
2465912   +          +    -0.54958418574963 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.70159995537759 * S_AcceptedCmpTotal + -0.70199351793792 *
S_Age + 1.63573967285806 * S_Frq + -0.1930098634567 * S_Income + -0.43173926207337 * S_Kidhome
+ -0.45239271926178 * S_Mnt + -0.14139816383874 * S_MntFishProducts + -0.70568635660703 *
S_MntFruits + 1.68796268038024 * S_MntGoldProds + 0.80481626355934 * S_MntMeatProducts +
0.29831384975096 * S_MntSweetProducts + -0.50792336172825 * S_MntWines + 0.80425149159678 *
S_MonthsAsCustomer + -2.26171302044375 * S_NumCatalogPurchases + 1.30167361451945 *
S_NumDealsPurchases + 1.45457613716235 * S_NumDistPurchases + -0.40226463685252 *
S_NumStorePurchases + 0.36369161683572 * S_NumWebPurchases + -2.65684851610403 *
S_NumWebVisitsMonth + -1.14810413235545 * S_RFMstat + 1.291857215261 * S_RMntFrq +
1.36572595403825 * S_Recency + -0.54958418574963 * S_Teenhome ;
2465913   +   H1x2_5  =    -1.00456225444665 * S_AcceptedCmpTotal
2465914   +          +     0.19033874303798 * S_Age  +    -0.62578451616415 * S_Frq
2465915   +          +    -0.96647190269426 * S_Income  +     1.77002676974464 *
2465916   +        S_Kidhome  +    -0.53816249322166 * S_Mnt  +     0.21322270253871 *
2465917   +        S_MntFishProducts  +     0.84210241961105 * S_MntFruits
2465918   +          +     0.44153678515007 * S_MntGoldProds  +    -0.23120999196747 *
2465919   +        S_MntMeatProducts  +     0.62950730283125 * S_MntSweetProducts
2465920   +          +    -0.64043011108056 * S_MntWines  +    -2.74922907599662 *
2465921   +        S_MonthsAsCustomer  +     0.67939322758717 * S_NumCatalogPurchases
2465922   +          +    -0.54572162665338 * S_NumDealsPurchases
2465923   +          +      0.9607390449318 * S_NumDistPurchases
2465924   +          +    -0.03259470545754 * S_NumStorePurchases
2465925   +          +     0.19202241423412 * S_NumWebPurchases
2465926   +          +     0.61085831658456 * S_NumWebVisitsMonth
2465927   +          +    -0.08582160429243 * S_RFMstat  +     1.73862452808565 *
2465928   +        S_RMntFrq  +    -0.01216476188714 * S_Recency
2465929   +          +     -0.3304403270473 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -1.00456225444665 * S_AcceptedCmpTotal + 0.19033874303798 *
S_Age + -0.62578451616415 * S_Frq + -0.96647190269426 * S_Income + 1.77002676974464 *
S_Kidhome + -0.53816249322166 * S_Mnt + 0.21322270253871 * S_MntFishProducts +
0.84210241961105 * S_MntFruits + 0.44153678515007 * S_MntGoldProds + -0.23120999196747 *
S_MntMeatProducts + 0.62950730283125 * S_MntSweetProducts + -0.64043011108056 * S_MntWines +
-2.74922907599662 * S_MonthsAsCustomer + 0.67939322758717 * S_NumCatalogPurchases +
-0.54572162665338 * S_NumDealsPurchases + 0.9607390449318 * S_NumDistPurchases +
-0.03259470545754 * S_NumStorePurchases + 0.19202241423412 * S_NumWebPurchases +
0.61085831658456 * S_NumWebVisitsMonth + -0.08582160429243 * S_RFMstat + 1.73862452808565 *
S_RMntFrq + -0.01216476188714 * S_Recency + -0.3304403270473 * S_Teenhome ;
2465930   +   H1x2_1  = H1x2_1  +     0.83453601566539 * AcceptedCmp10
2465931   +          +     0.59109136511077 * AcceptedCmp20  +     -0.9669340701943 *
2465932   +        AcceptedCmp30  +    -2.31468262956126 * AcceptedCmp40
2465933   +          +    -0.76277791850069 * AcceptedCmp50  +     0.30895289981412 *
2465934   +        Complain0  +       0.147233855837 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 0.83453601566539 * AcceptedCmp10 + 0.59109136511077 *
AcceptedCmp20 + -0.9669340701943 * AcceptedCmp30 + -2.31468262956126 * AcceptedCmp40 +
-0.76277791850069 * AcceptedCmp50 + 0.30895289981412 * Complain0 + 0.147233855837 *
HigherEducationBinary0 ;
2465935   +   H1x2_2  = H1x2_2  +     0.42789425545567 * AcceptedCmp10
2465936   +          +     0.08505833889085 * AcceptedCmp20  +    -1.15112188313855 *
2465937   +        AcceptedCmp30  +    -1.24362486486214 * AcceptedCmp40
2465938   +          +     0.04131419116048 * AcceptedCmp50  +    -0.45255799355317 *
2465939   +        Complain0  +    -0.32616423192953 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.42789425545567 * AcceptedCmp10 + 0.08505833889085 *
AcceptedCmp20 + -1.15112188313855 * AcceptedCmp30 + -1.24362486486214 * AcceptedCmp40 +
0.04131419116048 * AcceptedCmp50 + -0.45255799355317 * Complain0 + -0.32616423192953 *
HigherEducationBinary0 ;
2465940   +   H1x2_3  = H1x2_3  +    -0.03136360497649 * AcceptedCmp10
2465941   +          +     0.33867713207886 * AcceptedCmp20  +     0.05809342990544 *
2465942   +        AcceptedCmp30  +    -0.06416815079894 * AcceptedCmp40
2465943   +          +     1.14617960682421 * AcceptedCmp50  +    -0.82461320336041 *
2465944   +        Complain0  +     0.58944444655621 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -0.03136360497649 * AcceptedCmp10 + 0.33867713207886 *
AcceptedCmp20 + 0.05809342990544 * AcceptedCmp30 + -0.06416815079894 * AcceptedCmp40 +
1.14617960682421 * AcceptedCmp50 + -0.82461320336041 * Complain0 + 0.58944444655621 *
HigherEducationBinary0 ;
2465945   +   H1x2_4  = H1x2_4  +    -1.12705500616438 * AcceptedCmp10
2465946   +          +      0.0487863004734 * AcceptedCmp20  +     1.30229008593765 *
2465947   +        AcceptedCmp30  +      0.1726718549662 * AcceptedCmp40
2465948   +          +     0.68443569845295 * AcceptedCmp50  +     2.39733248962228 *
2465949   +        Complain0  +      -0.620937291929 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + -1.12705500616438 * AcceptedCmp10 + 0.0487863004734 *
AcceptedCmp20 + 1.30229008593765 * AcceptedCmp30 + 0.1726718549662 * AcceptedCmp40 +
0.68443569845295 * AcceptedCmp50 + 2.39733248962228 * Complain0 + -0.620937291929 *
HigherEducationBinary0 ;
2465950   +   H1x2_5  = H1x2_5  +     1.42400460803453 * AcceptedCmp10
2465951   +          +    -1.22361480936625 * AcceptedCmp20  +     1.31090186367202 *
2465952   +        AcceptedCmp30  +    -1.40343404818254 * AcceptedCmp40
2465953   +          +    -0.57377230862494 * AcceptedCmp50  +     0.58622740778295 *
2465954   +        Complain0  +    -0.83222074319962 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 1.42400460803453 * AcceptedCmp10 + -1.22361480936625 *
AcceptedCmp20 + 1.31090186367202 * AcceptedCmp30 + -1.40343404818254 * AcceptedCmp40 +
-0.57377230862494 * AcceptedCmp50 + 0.58622740778295 * Complain0 + -0.83222074319962 *
HigherEducationBinary0 ;
2465955   +   H1x2_1  = H1x2_1  +     1.56508379719546 * Education2n_Cycle
2465956   +          +     0.52302987210661 * EducationBasic  +     -0.0570045326497 *
2465957   +        EducationGraduation  +    -0.01838790774804 * EducationMaster
2465958   +          +    -2.32430245081383 * Marital_StatusDivorced
2465959   +          +    -0.09815511356796 * Marital_StatusMarried
2465960   +          +     0.13075504294551 * Marital_StatusSingle
2465961   +          +     -0.0278875765201 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 1.56508379719546 * Education2n_Cycle +
0.52302987210661 * EducationBasic + -0.0570045326497 * EducationGraduation + -0.01838790774804
* EducationMaster + -2.32430245081383 * Marital_StatusDivorced + -0.09815511356796 *
Marital_StatusMarried + 0.13075504294551 * Marital_StatusSingle + -0.0278875765201 *
Marital_StatusTogether ;
2465962   +   H1x2_2  = H1x2_2  +    -0.85592920992847 * Education2n_Cycle
2465963   +          +     0.93272618259957 * EducationBasic  +     0.48987674771079 *
2465964   +        EducationGraduation  +    -1.12454002820451 * EducationMaster
2465965   +          +    -0.65574603869224 * Marital_StatusDivorced
2465966   +          +     1.54672472575294 * Marital_StatusMarried
2465967   +          +    -1.59817602340208 * Marital_StatusSingle
2465968   +          +     1.94381954546813 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.85592920992847 * Education2n_Cycle +
0.93272618259957 * EducationBasic + 0.48987674771079 * EducationGraduation + -1.12454002820451
* EducationMaster + -0.65574603869224 * Marital_StatusDivorced + 1.54672472575294 *
Marital_StatusMarried + -1.59817602340208 * Marital_StatusSingle + 1.94381954546813 *
Marital_StatusTogether ;
2465969   +   H1x2_3  = H1x2_3  +     0.37093371596523 * Education2n_Cycle
2465970   +          +    -2.05531065359129 * EducationBasic  +     1.16090743585078 *
2465971   +        EducationGraduation  +     0.87547303889444 * EducationMaster
2465972   +          +    -0.50911604604781 * Marital_StatusDivorced
2465973   +          +     0.30403066135719 * Marital_StatusMarried
2465974   +          +      0.1026950879545 * Marital_StatusSingle
2465975   +          +     0.01000166524405 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.37093371596523 * Education2n_Cycle +
-2.05531065359129 * EducationBasic + 1.16090743585078 * EducationGraduation + 0.87547303889444
* EducationMaster + -0.50911604604781 * Marital_StatusDivorced + 0.30403066135719 *
Marital_StatusMarried + 0.1026950879545 * Marital_StatusSingle + 0.01000166524405 *
Marital_StatusTogether ;
2465976   +   H1x2_4  = H1x2_4  +     1.28509086202466 * Education2n_Cycle
2465977   +          +     0.07860157688162 * EducationBasic  +     0.24607672351689 *
2465978   +        EducationGraduation  +    -0.06009602645566 * EducationMaster
2465979   +          +     1.07371507133318 * Marital_StatusDivorced
2465980   +          +    -0.07097334129051 * Marital_StatusMarried
2465981   +          +    -0.48339718568621 * Marital_StatusSingle
2465982   +          +    -0.08900780355835 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 1.28509086202466 * Education2n_Cycle +
0.07860157688162 * EducationBasic + 0.24607672351689 * EducationGraduation + -0.06009602645566
* EducationMaster + 1.07371507133318 * Marital_StatusDivorced + -0.07097334129051 *
Marital_StatusMarried + -0.48339718568621 * Marital_StatusSingle + -0.08900780355835 *
Marital_StatusTogether ;
2465983   +   H1x2_5  = H1x2_5  +    -1.08109633810919 * Education2n_Cycle
2465984   +          +    -0.54966585100103 * EducationBasic  +      0.5388683065169 *
2465985   +        EducationGraduation  +     0.46960055830119 * EducationMaster
2465986   +          +     1.04342893515504 * Marital_StatusDivorced
2465987   +          +     1.16171312085032 * Marital_StatusMarried
2465988   +          +    -0.30201646939913 * Marital_StatusSingle
2465989   +          +     1.84122645884771 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + -1.08109633810919 * Education2n_Cycle +
-0.54966585100103 * EducationBasic + 0.5388683065169 * EducationGraduation + 0.46960055830119
* EducationMaster + 1.04342893515504 * Marital_StatusDivorced + 1.16171312085032 *
Marital_StatusMarried + -0.30201646939913 * Marital_StatusSingle + 1.84122645884771 *
Marital_StatusTogether ;
2465990   +   H1x2_1  =     1.56970796025332 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.56970796025332 + H1x2_1 ;
2465991   +   H1x2_2  =    -0.11766478836824 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.11766478836824 + H1x2_2 ;
2465992   +   H1x2_3  =    -2.78218653641036 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -2.78218653641036 + H1x2_3 ;
2465993   +   H1x2_4  =     0.51979515224467 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.51979515224467 + H1x2_4 ;
2465994   +   H1x2_5  =     -0.4635890987824 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.4635890987824 + H1x2_5 ;
2465995   +END;
MPRINT(EM_DIAGRAM):   END;
2465996   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2465997   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
2465998   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
2465999   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
2466000   +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
2466001   +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
2466002   +END;
MPRINT(EM_DIAGRAM):   END;
2466003   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2466004   +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
2466005   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2466006   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2466007   +   H1x3_1  =     0.04411772880581 * S_AcceptedCmpTotal
2466008   +          +    -1.62725197326682 * S_Age  +    -1.99668213406033 * S_Frq
2466009   +          +     -1.2265241921112 * S_Income  +     1.99702869958035 *
2466010   +        S_Kidhome  +    -1.46762539068512 * S_Mnt  +     0.97784534044189 *
2466011   +        S_MntFishProducts  +    -1.07945265688497 * S_MntFruits
2466012   +          +     2.09306294956674 * S_MntGoldProds  +     1.46219664114361 *
2466013   +        S_MntMeatProducts  +     0.10961158671991 * S_MntSweetProducts
2466014   +          +     2.03040669273977 * S_MntWines  +     0.16536646017211 *
2466015   +        S_MonthsAsCustomer  +    -0.88077951545076 * S_NumCatalogPurchases
2466016   +          +     1.32256781010645 * S_NumDealsPurchases
2466017   +          +    -1.43015438973619 * S_NumDistPurchases
2466018   +          +    -0.63489289584421 * S_NumStorePurchases
2466019   +          +     0.90508699686841 * S_NumWebPurchases
2466020   +          +    -2.24234858061014 * S_NumWebVisitsMonth
2466021   +          +     -2.9988027991146 * S_RFMstat  +     0.35987461993699 *
2466022   +        S_RMntFrq  +    -1.09317668626142 * S_Recency
2466023   +          +    -1.09925349438658 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.04411772880581 * S_AcceptedCmpTotal + -1.62725197326682 *
S_Age + -1.99668213406033 * S_Frq + -1.2265241921112 * S_Income + 1.99702869958035 * S_Kidhome
+ -1.46762539068512 * S_Mnt + 0.97784534044189 * S_MntFishProducts + -1.07945265688497 *
S_MntFruits + 2.09306294956674 * S_MntGoldProds + 1.46219664114361 * S_MntMeatProducts +
0.10961158671991 * S_MntSweetProducts + 2.03040669273977 * S_MntWines + 0.16536646017211 *
S_MonthsAsCustomer + -0.88077951545076 * S_NumCatalogPurchases + 1.32256781010645 *
S_NumDealsPurchases + -1.43015438973619 * S_NumDistPurchases + -0.63489289584421 *
S_NumStorePurchases + 0.90508699686841 * S_NumWebPurchases + -2.24234858061014 *
S_NumWebVisitsMonth + -2.9988027991146 * S_RFMstat + 0.35987461993699 * S_RMntFrq +
-1.09317668626142 * S_Recency + -1.09925349438658 * S_Teenhome ;
2466024   +   H1x3_2  =     0.10522923391314 * S_AcceptedCmpTotal
2466025   +          +     0.68417479453112 * S_Age  +     0.46966162186743 * S_Frq
2466026   +          +    -1.21537535753115 * S_Income  +    -1.87423294109672 *
2466027   +        S_Kidhome  +     0.76913864731495 * S_Mnt  +     1.08535778796502 *
2466028   +        S_MntFishProducts  +     1.27743864099826 * S_MntFruits
2466029   +          +     -0.3186089651882 * S_MntGoldProds  +    -0.00224333051647 *
2466030   +        S_MntMeatProducts  +    -1.28169616734092 * S_MntSweetProducts
2466031   +          +     1.67350500234032 * S_MntWines  +     1.09584504562467 *
2466032   +        S_MonthsAsCustomer  +    -1.45467876727494 * S_NumCatalogPurchases
2466033   +          +     0.85965187264096 * S_NumDealsPurchases
2466034   +          +    -1.15239933286756 * S_NumDistPurchases
2466035   +          +     1.20800889102387 * S_NumStorePurchases
2466036   +          +     1.08790389130242 * S_NumWebPurchases
2466037   +          +    -0.13665551161149 * S_NumWebVisitsMonth
2466038   +          +     1.02103499612659 * S_RFMstat  +    -0.12980097143044 *
2466039   +        S_RMntFrq  +     0.65854311654256 * S_Recency
2466040   +          +    -0.60999209572192 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_2 = 0.10522923391314 * S_AcceptedCmpTotal + 0.68417479453112 *
S_Age + 0.46966162186743 * S_Frq + -1.21537535753115 * S_Income + -1.87423294109672 *
S_Kidhome + 0.76913864731495 * S_Mnt + 1.08535778796502 * S_MntFishProducts + 1.27743864099826
* S_MntFruits + -0.3186089651882 * S_MntGoldProds + -0.00224333051647 * S_MntMeatProducts +
-1.28169616734092 * S_MntSweetProducts + 1.67350500234032 * S_MntWines + 1.09584504562467 *
S_MonthsAsCustomer + -1.45467876727494 * S_NumCatalogPurchases + 0.85965187264096 *
S_NumDealsPurchases + -1.15239933286756 * S_NumDistPurchases + 1.20800889102387 *
S_NumStorePurchases + 1.08790389130242 * S_NumWebPurchases + -0.13665551161149 *
S_NumWebVisitsMonth + 1.02103499612659 * S_RFMstat + -0.12980097143044 * S_RMntFrq +
0.65854311654256 * S_Recency + -0.60999209572192 * S_Teenhome ;
2466041   +   H1x3_3  =    -0.72575004293074 * S_AcceptedCmpTotal
2466042   +          +     0.34932839743259 * S_Age  +     -0.2673460618328 * S_Frq
2466043   +          +     0.25743187687481 * S_Income  +    -0.02172890929346 *
2466044   +        S_Kidhome  +     1.21785656626837 * S_Mnt  +     0.37454359336223 *
2466045   +        S_MntFishProducts  +    -0.32600053706408 * S_MntFruits
2466046   +          +     0.57807148940534 * S_MntGoldProds  +     1.14736546512366 *
2466047   +        S_MntMeatProducts  +    -1.41517082393978 * S_MntSweetProducts
2466048   +          +    -1.44899595080061 * S_MntWines  +    -1.45520867126531 *
2466049   +        S_MonthsAsCustomer  +    -0.33372174099196 * S_NumCatalogPurchases
2466050   +          +     -0.5767607129654 * S_NumDealsPurchases
2466051   +          +     -0.2643921429796 * S_NumDistPurchases
2466052   +          +    -0.67417489911206 * S_NumStorePurchases
2466053   +          +    -0.51423877684891 * S_NumWebPurchases
2466054   +          +     1.40328299605176 * S_NumWebVisitsMonth
2466055   +          +     1.35588787174957 * S_RFMstat  +     1.98416436137119 *
2466056   +        S_RMntFrq  +     -0.8447362450681 * S_Recency
2466057   +          +    -1.04372961736437 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_3 = -0.72575004293074 * S_AcceptedCmpTotal + 0.34932839743259 *
S_Age + -0.2673460618328 * S_Frq + 0.25743187687481 * S_Income + -0.02172890929346 * S_Kidhome
+ 1.21785656626837 * S_Mnt + 0.37454359336223 * S_MntFishProducts + -0.32600053706408 *
S_MntFruits + 0.57807148940534 * S_MntGoldProds + 1.14736546512366 * S_MntMeatProducts +
-1.41517082393978 * S_MntSweetProducts + -1.44899595080061 * S_MntWines + -1.45520867126531 *
S_MonthsAsCustomer + -0.33372174099196 * S_NumCatalogPurchases + -0.5767607129654 *
S_NumDealsPurchases + -0.2643921429796 * S_NumDistPurchases + -0.67417489911206 *
S_NumStorePurchases + -0.51423877684891 * S_NumWebPurchases + 1.40328299605176 *
S_NumWebVisitsMonth + 1.35588787174957 * S_RFMstat + 1.98416436137119 * S_RMntFrq +
-0.8447362450681 * S_Recency + -1.04372961736437 * S_Teenhome ;
2466058   +   H1x3_4  =     0.05745684959388 * S_AcceptedCmpTotal
2466059   +          +    -0.71077680161454 * S_Age  +      1.4854566142375 * S_Frq
2466060   +          +    -0.32870416928843 * S_Income  +    -0.24944295149087 *
2466061   +        S_Kidhome  +     -0.8312409740431 * S_Mnt  +    -0.09638646505384 *
2466062   +        S_MntFishProducts  +    -0.86550491354678 * S_MntFruits
2466063   +          +     1.46902858697296 * S_MntGoldProds  +      0.3661164136841 *
2466064   +        S_MntMeatProducts  +     0.43108270077708 * S_MntSweetProducts
2466065   +          +    -0.87140466249616 * S_MntWines  +     0.17511224898094 *
2466066   +        S_MonthsAsCustomer  +    -2.66256923117027 * S_NumCatalogPurchases
2466067   +          +      1.2821617657076 * S_NumDealsPurchases
2466068   +          +     1.26584115202735 * S_NumDistPurchases
2466069   +          +    -0.46597664211833 * S_NumStorePurchases
2466070   +          +     0.45652363472866 * S_NumWebPurchases
2466071   +          +    -2.66296112021252 * S_NumWebVisitsMonth
2466072   +          +    -0.86670667018974 * S_RFMstat  +     0.60866041131732 *
2466073   +        S_RMntFrq  +     1.31886754707923 * S_Recency
2466074   +          +    -0.09949653139413 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_4 = 0.05745684959388 * S_AcceptedCmpTotal + -0.71077680161454 *
S_Age + 1.4854566142375 * S_Frq + -0.32870416928843 * S_Income + -0.24944295149087 * S_Kidhome
+ -0.8312409740431 * S_Mnt + -0.09638646505384 * S_MntFishProducts + -0.86550491354678 *
S_MntFruits + 1.46902858697296 * S_MntGoldProds + 0.3661164136841 * S_MntMeatProducts +
0.43108270077708 * S_MntSweetProducts + -0.87140466249616 * S_MntWines + 0.17511224898094 *
S_MonthsAsCustomer + -2.66256923117027 * S_NumCatalogPurchases + 1.2821617657076 *
S_NumDealsPurchases + 1.26584115202735 * S_NumDistPurchases + -0.46597664211833 *
S_NumStorePurchases + 0.45652363472866 * S_NumWebPurchases + -2.66296112021252 *
S_NumWebVisitsMonth + -0.86670667018974 * S_RFMstat + 0.60866041131732 * S_RMntFrq +
1.31886754707923 * S_Recency + -0.09949653139413 * S_Teenhome ;
2466075   +   H1x3_5  =    -0.66850525418144 * S_AcceptedCmpTotal
2466076   +          +     0.14331320698516 * S_Age  +    -0.82708146094779 * S_Frq
2466077   +          +    -0.95718847240937 * S_Income  +     1.37375648833049 *
2466078   +        S_Kidhome  +    -0.48314397401233 * S_Mnt  +     0.07047324834759 *
2466079   +        S_MntFishProducts  +     0.86114312801139 * S_MntFruits
2466080   +          +     0.54573348379533 * S_MntGoldProds  +    -0.05966372249273 *
2466081   +        S_MntMeatProducts  +     0.47275063848217 * S_MntSweetProducts
2466082   +          +    -0.62962007155261 * S_MntWines  +    -2.38081462831488 *
2466083   +        S_MonthsAsCustomer  +     0.56594272689824 * S_NumCatalogPurchases
2466084   +          +    -0.85162564171681 * S_NumDealsPurchases
2466085   +          +     0.64631099667221 * S_NumDistPurchases
2466086   +          +    -0.03081963858636 * S_NumStorePurchases
2466087   +          +    -0.24124717624664 * S_NumWebPurchases
2466088   +          +     0.56425980772372 * S_NumWebVisitsMonth
2466089   +          +    -0.32254616624678 * S_RFMstat  +     1.84875225899832 *
2466090   +        S_RMntFrq  +     0.08133312388911 * S_Recency
2466091   +          +    -0.19004451996479 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_5 = -0.66850525418144 * S_AcceptedCmpTotal + 0.14331320698516 *
S_Age + -0.82708146094779 * S_Frq + -0.95718847240937 * S_Income + 1.37375648833049 *
S_Kidhome + -0.48314397401233 * S_Mnt + 0.07047324834759 * S_MntFishProducts +
0.86114312801139 * S_MntFruits + 0.54573348379533 * S_MntGoldProds + -0.05966372249273 *
S_MntMeatProducts + 0.47275063848217 * S_MntSweetProducts + -0.62962007155261 * S_MntWines +
-2.38081462831488 * S_MonthsAsCustomer + 0.56594272689824 * S_NumCatalogPurchases +
-0.85162564171681 * S_NumDealsPurchases + 0.64631099667221 * S_NumDistPurchases +
-0.03081963858636 * S_NumStorePurchases + -0.24124717624664 * S_NumWebPurchases +
0.56425980772372 * S_NumWebVisitsMonth + -0.32254616624678 * S_RFMstat + 1.84875225899832 *
S_RMntFrq + 0.08133312388911 * S_Recency + -0.19004451996479 * S_Teenhome ;
2466092   +   H1x3_1  = H1x3_1  +     1.03487942320068 * AcceptedCmp10
2466093   +          +     0.77723443135875 * AcceptedCmp20  +    -1.04686858569959 *
2466094   +        AcceptedCmp30  +    -1.87852311800194 * AcceptedCmp40
2466095   +          +    -0.69838759011672 * AcceptedCmp50  +     0.50242045854463 *
2466096   +        Complain0  +    -0.13339808164255 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + 1.03487942320068 * AcceptedCmp10 + 0.77723443135875 *
AcceptedCmp20 + -1.04686858569959 * AcceptedCmp30 + -1.87852311800194 * AcceptedCmp40 +
-0.69838759011672 * AcceptedCmp50 + 0.50242045854463 * Complain0 + -0.13339808164255 *
HigherEducationBinary0 ;
2466097   +   H1x3_2  = H1x3_2  +     0.39887299789564 * AcceptedCmp10
2466098   +          +     0.12293700562648 * AcceptedCmp20  +    -1.41656670681309 *
2466099   +        AcceptedCmp30  +    -1.04607557362847 * AcceptedCmp40
2466100   +          +     0.02824649030864 * AcceptedCmp50  +    -0.46581865837196 *
2466101   +        Complain0  +    -0.45913631308543 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + 0.39887299789564 * AcceptedCmp10 + 0.12293700562648 *
AcceptedCmp20 + -1.41656670681309 * AcceptedCmp30 + -1.04607557362847 * AcceptedCmp40 +
0.02824649030864 * AcceptedCmp50 + -0.46581865837196 * Complain0 + -0.45913631308543 *
HigherEducationBinary0 ;
2466102   +   H1x3_3  = H1x3_3  +     0.20672868292414 * AcceptedCmp10
2466103   +          +     0.52082182457868 * AcceptedCmp20  +     0.54911826263592 *
2466104   +        AcceptedCmp30  +    -0.02400616289922 * AcceptedCmp40
2466105   +          +     1.22209744911863 * AcceptedCmp50  +    -0.68243413694538 *
2466106   +        Complain0  +     0.15620895311704 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 + 0.20672868292414 * AcceptedCmp10 + 0.52082182457868 *
AcceptedCmp20 + 0.54911826263592 * AcceptedCmp30 + -0.02400616289922 * AcceptedCmp40 +
1.22209744911863 * AcceptedCmp50 + -0.68243413694538 * Complain0 + 0.15620895311704 *
HigherEducationBinary0 ;
2466107   +   H1x3_4  = H1x3_4  +    -0.88269820758187 * AcceptedCmp10
2466108   +          +    -0.19276892535938 * AcceptedCmp20  +     1.26789056018511 *
2466109   +        AcceptedCmp30  +     0.04396979158385 * AcceptedCmp40
2466110   +          +     0.54194186871284 * AcceptedCmp50  +     2.07766091697967 *
2466111   +        Complain0  +    -0.43514178858246 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 + -0.88269820758187 * AcceptedCmp10 + -0.19276892535938
* AcceptedCmp20 + 1.26789056018511 * AcceptedCmp30 + 0.04396979158385 * AcceptedCmp40 +
0.54194186871284 * AcceptedCmp50 + 2.07766091697967 * Complain0 + -0.43514178858246 *
HigherEducationBinary0 ;
2466112   +   H1x3_5  = H1x3_5  +     1.04303179873707 * AcceptedCmp10
2466113   +          +    -1.29742389809739 * AcceptedCmp20  +     1.21708533617895 *
2466114   +        AcceptedCmp30  +    -1.47807634614974 * AcceptedCmp40
2466115   +          +     -0.7694244559597 * AcceptedCmp50  +     0.51798162453723 *
2466116   +        Complain0  +    -0.95513113905832 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 + 1.04303179873707 * AcceptedCmp10 + -1.29742389809739 *
AcceptedCmp20 + 1.21708533617895 * AcceptedCmp30 + -1.47807634614974 * AcceptedCmp40 +
-0.7694244559597 * AcceptedCmp50 + 0.51798162453723 * Complain0 + -0.95513113905832 *
HigherEducationBinary0 ;
2466117   +   H1x3_1  = H1x3_1  +     1.27822716215014 * Education2n_Cycle
2466118   +          +     0.45900505383383 * EducationBasic  +    -0.35822992758656 *
2466119   +        EducationGraduation  +     0.05949934527868 * EducationMaster
2466120   +          +    -2.49973437075558 * Marital_StatusDivorced
2466121   +          +    -0.18076948182574 * Marital_StatusMarried
2466122   +          +     0.13498525495231 * Marital_StatusSingle
2466123   +          +    -0.02365465636052 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + 1.27822716215014 * Education2n_Cycle +
0.45900505383383 * EducationBasic + -0.35822992758656 * EducationGraduation + 0.05949934527868
* EducationMaster + -2.49973437075558 * Marital_StatusDivorced + -0.18076948182574 *
Marital_StatusMarried + 0.13498525495231 * Marital_StatusSingle + -0.02365465636052 *
Marital_StatusTogether ;
2466124   +   H1x3_2  = H1x3_2  +    -1.14981446246051 * Education2n_Cycle
2466125   +          +     0.68006996858541 * EducationBasic  +    -0.06493857044709 *
2466126   +        EducationGraduation  +    -1.22462805502453 * EducationMaster
2466127   +          +       -0.59463732835 * Marital_StatusDivorced
2466128   +          +     1.37741332427598 * Marital_StatusMarried
2466129   +          +     -1.5833455713231 * Marital_StatusSingle
2466130   +          +     1.79205360628448 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + -1.14981446246051 * Education2n_Cycle +
0.68006996858541 * EducationBasic + -0.06493857044709 * EducationGraduation +
-1.22462805502453 * EducationMaster + -0.59463732835 * Marital_StatusDivorced +
1.37741332427598 * Marital_StatusMarried + -1.5833455713231 * Marital_StatusSingle +
1.79205360628448 * Marital_StatusTogether ;
2466131   +   H1x3_3  = H1x3_3  +     0.17779609626753 * Education2n_Cycle
2466132   +          +    -2.22704675950779 * EducationBasic  +     1.30292325944162 *
2466133   +        EducationGraduation  +     0.68083131423474 * EducationMaster
2466134   +          +    -0.44569556289443 * Marital_StatusDivorced
2466135   +          +     0.29918053103557 * Marital_StatusMarried
2466136   +          +    -0.10337314064224 * Marital_StatusSingle
2466137   +          +     0.04054221993299 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 + 0.17779609626753 * Education2n_Cycle +
-2.22704675950779 * EducationBasic + 1.30292325944162 * EducationGraduation + 0.68083131423474
* EducationMaster + -0.44569556289443 * Marital_StatusDivorced + 0.29918053103557 *
Marital_StatusMarried + -0.10337314064224 * Marital_StatusSingle + 0.04054221993299 *
Marital_StatusTogether ;
2466138   +   H1x3_4  = H1x3_4  +     1.16412985277542 * Education2n_Cycle
2466139   +          +     0.18806330813344 * EducationBasic  +     0.00212145829045 *
2466140   +        EducationGraduation  +     0.00087354662697 * EducationMaster
2466141   +          +     1.13881957277462 * Marital_StatusDivorced
2466142   +          +    -0.35849807146313 * Marital_StatusMarried
2466143   +          +    -0.22168731316885 * Marital_StatusSingle
2466144   +          +    -0.22672306263461 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 + 1.16412985277542 * Education2n_Cycle +
0.18806330813344 * EducationBasic + 0.00212145829045 * EducationGraduation + 0.00087354662697
* EducationMaster + 1.13881957277462 * Marital_StatusDivorced + -0.35849807146313 *
Marital_StatusMarried + -0.22168731316885 * Marital_StatusSingle + -0.22672306263461 *
Marital_StatusTogether ;
2466145   +   H1x3_5  = H1x3_5  +    -1.25195599938207 * Education2n_Cycle
2466146   +          +    -0.60946428681789 * EducationBasic  +     0.39993500009227 *
2466147   +        EducationGraduation  +     0.43730905987249 * EducationMaster
2466148   +          +     1.10774969923269 * Marital_StatusDivorced
2466149   +          +     1.08409594073043 * Marital_StatusMarried
2466150   +          +    -0.33145048007894 * Marital_StatusSingle
2466151   +          +     1.68703837664761 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 + -1.25195599938207 * Education2n_Cycle +
-0.60946428681789 * EducationBasic + 0.39993500009227 * EducationGraduation + 0.43730905987249
* EducationMaster + 1.10774969923269 * Marital_StatusDivorced + 1.08409594073043 *
Marital_StatusMarried + -0.33145048007894 * Marital_StatusSingle + 1.68703837664761 *
Marital_StatusTogether ;
2466152   +   H1x3_1  =     1.76093149538288 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 1.76093149538288 + H1x3_1 ;
2466153   +   H1x3_2  =    -0.11243980195421 + H1x3_2 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = -0.11243980195421 + H1x3_2 ;
2466154   +   H1x3_3  =    -2.59474781862449 + H1x3_3 ;
MPRINT(EM_DIAGRAM):   H1x3_3 = -2.59474781862449 + H1x3_3 ;
2466155   +   H1x3_4  =     0.25376473610258 + H1x3_4 ;
MPRINT(EM_DIAGRAM):   H1x3_4 = 0.25376473610258 + H1x3_4 ;
2466156   +   H1x3_5  =    -0.54808648261397 + H1x3_5 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = -0.54808648261397 + H1x3_5 ;
2466157   +   _EPS = SQRT(CONSTANT('MACEPS')) ;
MPRINT(EM_DIAGRAM):   _EPS = SQRT(CONSTANT('MACEPS')) ;
2466158   +   _REC_EPS = 1/_EPS ;
MPRINT(EM_DIAGRAM):   _REC_EPS = 1/_EPS ;
2466159   +   DROP _REC_EPS _EPS ;
MPRINT(EM_DIAGRAM):   DROP _REC_EPS _EPS ;
2466160   +   IF H1x3_1  < _REC_EPS AND H1x3_1  > - _REC_EPS THEN
2466161   +   H1x3_1  = H1x3_1  * H1x3_1 ;
MPRINT(EM_DIAGRAM):   IF H1x3_1 < _REC_EPS AND H1x3_1 > - _REC_EPS THEN H1x3_1 = H1x3_1 *
H1x3_1 ;
2466162   +   ELSE H1x3_1  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x3_1 = _REC_EPS ;
2466163   +   IF H1x3_2  < _REC_EPS AND H1x3_2  > - _REC_EPS THEN
2466164   +   H1x3_2  = H1x3_2  * H1x3_2 ;
MPRINT(EM_DIAGRAM):   IF H1x3_2 < _REC_EPS AND H1x3_2 > - _REC_EPS THEN H1x3_2 = H1x3_2 *
H1x3_2 ;
2466165   +   ELSE H1x3_2  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x3_2 = _REC_EPS ;
2466166   +   IF H1x3_3  < _REC_EPS AND H1x3_3  > - _REC_EPS THEN
2466167   +   H1x3_3  = H1x3_3  * H1x3_3 ;
MPRINT(EM_DIAGRAM):   IF H1x3_3 < _REC_EPS AND H1x3_3 > - _REC_EPS THEN H1x3_3 = H1x3_3 *
H1x3_3 ;
2466168   +   ELSE H1x3_3  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x3_3 = _REC_EPS ;
2466169   +   IF H1x3_4  < _REC_EPS AND H1x3_4  > - _REC_EPS THEN
2466170   +   H1x3_4  = H1x3_4  * H1x3_4 ;
MPRINT(EM_DIAGRAM):   IF H1x3_4 < _REC_EPS AND H1x3_4 > - _REC_EPS THEN H1x3_4 = H1x3_4 *
H1x3_4 ;
2466171   +   ELSE H1x3_4  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x3_4 = _REC_EPS ;
2466172   +   IF H1x3_5  < _REC_EPS AND H1x3_5  > - _REC_EPS THEN
2466173   +   H1x3_5  = H1x3_5  * H1x3_5 ;
MPRINT(EM_DIAGRAM):   IF H1x3_5 < _REC_EPS AND H1x3_5 > - _REC_EPS THEN H1x3_5 = H1x3_5 *
H1x3_5 ;
2466174   +   ELSE H1x3_5  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x3_5 = _REC_EPS ;
2466175   +END;
MPRINT(EM_DIAGRAM):   END;
2466176   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2466177   +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
2466178   +   H1x3_2  = .;
MPRINT(EM_DIAGRAM):   H1x3_2 = .;
2466179   +   H1x3_3  = .;
MPRINT(EM_DIAGRAM):   H1x3_3 = .;
2466180   +   H1x3_4  = .;
MPRINT(EM_DIAGRAM):   H1x3_4 = .;
2466181   +   H1x3_5  = .;
MPRINT(EM_DIAGRAM):   H1x3_5 = .;
2466182   +END;
MPRINT(EM_DIAGRAM):   END;
2466183   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2466184   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2466185   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2466186   +
2466187   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2466188   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2466189   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2466190   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2466191   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2466192   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2466193   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2466194   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2466195   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2466196   +end;
MPRINT(EM_DIAGRAM):   end;
2466197   +else do;
MPRINT(EM_DIAGRAM):   else do;
2466198   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2466199   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2466200   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2466201   +   end;
MPRINT(EM_DIAGRAM):   end;
2466202   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2466203   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2466204   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2466205   +   end;
MPRINT(EM_DIAGRAM):   end;
2466206   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2466207   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2466208   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2466209   +   end;
MPRINT(EM_DIAGRAM):   end;
2466210   +end;
MPRINT(EM_DIAGRAM):   end;
2466211   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2466212   +   P_DepVar1  =     12.3694111963696 * H1x1_1  +     -9.1014019341077 * H1x1_2
2466213   +          +    -14.9093780045901 * H1x1_3  +     25.4505756686259 * H1x1_4
2466214   +          +    -13.3798044908382 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 12.3694111963696 * H1x1_1 + -9.1014019341077 * H1x1_2 +
-14.9093780045901 * H1x1_3 + 25.4505756686259 * H1x1_4 + -13.3798044908382 * H1x1_5 ;
2466215   +   P_DepVar1  = P_DepVar1  +     -0.2373753683635 * H1x2_1
2466216   +          +    -0.03661175538589 * H1x2_2  +     0.29534813812803 * H1x2_3
2466217   +          +     0.11908166898588 * H1x2_4  +      -0.241544638637 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 + -0.2373753683635 * H1x2_1 + -0.03661175538589 *
H1x2_2 + 0.29534813812803 * H1x2_3 + 0.11908166898588 * H1x2_4 + -0.241544638637 * H1x2_5 ;
2466218   +   P_DepVar1  = P_DepVar1  +    -0.00276620815201 * H1x3_1
2466219   +          +     0.00487849269566 * H1x3_2  +     0.01323887261394 * H1x3_3
2466220   +          +     -0.0271389925801 * H1x3_4  +     0.00026595473892 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 + -0.00276620815201 * H1x3_1 + 0.00487849269566 *
H1x3_2 + 0.01323887261394 * H1x3_3 + -0.0271389925801 * H1x3_4 + 0.00026595473892 * H1x3_5 ;
2466221   +   P_DepVar1  =      4.0541137239843 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 4.0541137239843 + P_DepVar1 ;
2466222   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2466223   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2466224   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2466225   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2466226   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2466227   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2466228   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2466229   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2466230   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2466231   +END;
MPRINT(EM_DIAGRAM):   END;
2466232   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2466233   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2466234   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2466235   +END;
MPRINT(EM_DIAGRAM):   END;
2466236   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2466237   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2466238   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2466239   +END;
MPRINT(EM_DIAGRAM):   END;
2466240   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2466241   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2466242   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2466243   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2466244   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2466245   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2466246   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2466247   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2466248   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2466249   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2466250   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2466251   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2466252   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2466253   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2466254   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2466255   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2466256   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2466257   +END;
MPRINT(EM_DIAGRAM):   END;
2466258   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2466259   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2466260   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2466261   +drop
2466262   +H1x1_1
2466263   +H1x1_2
2466264   +H1x1_3
2466265   +H1x1_4
2466266   +H1x1_5
2466267   +H1x2_1
2466268   +H1x2_2
2466269   +H1x2_3
2466270   +H1x2_4
2466271   +H1x2_5
2466272   +H1x3_1
2466273   +H1x3_2
2466274   +H1x3_3
2466275   +H1x3_4
2466276   +H1x3_5
2466277   +;
MPRINT(EM_DIAGRAM):   drop H1x1_1 H1x1_2 H1x1_3 H1x1_4 H1x1_5 H1x2_1 H1x2_2 H1x2_3 H1x2_4
H1x2_5 H1x3_1 H1x3_2 H1x3_3 H1x3_4 H1x3_5 ;
2466278   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2466279   +* Renaming variables for AutoNeural10;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural10;
2466280   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2466281   +* Renaming Posterior variables for AutoNeural10;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural10;
2466282   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2466283   +drop AutoNeural10_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural10_P_DepVar1;
2466284   +AutoNeural10_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural10_P_DepVar1 = P_DepVar1;
2466285   +drop AutoNeural10_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural10_P_DepVar0;
2466286   +AutoNeural10_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural10_P_DepVar0 = P_DepVar0;
2466287   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2466288   +* Renaming _WARN_ variable for AutoNeural10;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural10;
2466289   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2466290   +length AutoNeural10_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural10_WARN_ $4;
2466291   +drop AutoNeural10_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural10_WARN_;
2466292   +AutoNeural10_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural10_WARN_ = _WARN_;
2466293   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2466294   +* Ensmbl46: Maximum Posteriors of 5 models;
MPRINT(EM_DIAGRAM):   * Ensmbl46: Maximum Posteriors of 5 models;
2466295   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2466296   +_psum = 0;
MPRINT(EM_DIAGRAM):   _psum = 0;
2466297   +drop _psum _premainder;
MPRINT(EM_DIAGRAM):   drop _psum _premainder;
2466298   +P_DepVar1 = max(
2466299   +AutoNeural9_P_DepVar1 ,
2466300   +AutoNeural11_P_DepVar1 ,
2466301   +AutoNeural12_P_DepVar1 ,
2466302   +AutoNeural7_P_DepVar1 ,
2466303   +AutoNeural10_P_DepVar1
2466304   +);
MPRINT(EM_DIAGRAM):   P_DepVar1 = max( AutoNeural9_P_DepVar1 , AutoNeural11_P_DepVar1 ,
AutoNeural12_P_DepVar1 , AutoNeural7_P_DepVar1 , AutoNeural10_P_DepVar1 );
2466305   +_premainder =1 - _psum;
MPRINT(EM_DIAGRAM):   _premainder =1 - _psum;
2466306   +if P_DepVar1 > _premainder then do;
MPRINT(EM_DIAGRAM):   if P_DepVar1 > _premainder then do;
2466307   +P_DepVar1 = _premainder;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _premainder;
2466308   +end;
MPRINT(EM_DIAGRAM):   end;
2466309   +_psum + P_DepVar1;
MPRINT(EM_DIAGRAM):   _psum + P_DepVar1;
2466310   +P_DepVar0 = max(
2466311   +AutoNeural9_P_DepVar0 ,
2466312   +AutoNeural11_P_DepVar0 ,
2466313   +AutoNeural12_P_DepVar0 ,
2466314   +AutoNeural7_P_DepVar0 ,
2466315   +AutoNeural10_P_DepVar0
2466316   +);
MPRINT(EM_DIAGRAM):   P_DepVar0 = max( AutoNeural9_P_DepVar0 , AutoNeural11_P_DepVar0 ,
AutoNeural12_P_DepVar0 , AutoNeural7_P_DepVar0 , AutoNeural10_P_DepVar0 );
2466317   +_premainder =1 - _psum;
MPRINT(EM_DIAGRAM):   _premainder =1 - _psum;
2466318   +if P_DepVar0 > _premainder then do;
MPRINT(EM_DIAGRAM):   if P_DepVar0 > _premainder then do;
2466319   +P_DepVar0 = _premainder;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _premainder;
2466320   +end;
MPRINT(EM_DIAGRAM):   end;
2466321   +_psum + P_DepVar0;
MPRINT(EM_DIAGRAM):   _psum + P_DepVar0;
2466322   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2466323   +* Ensmbl46: Computing Classification Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl46: Computing Classification Vars;
2466324   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2466325   +length I_DepVar $32;
MPRINT(EM_DIAGRAM):   length I_DepVar $32;
WARNING: Length of character variable I_DepVar has already been set.
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the
         length of a character variable.
2466326   +label I_DepVar = 'Into: DepVar';
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar';
2466327   +length _format $200;
MPRINT(EM_DIAGRAM):   length _format $200;
2466328   +drop _format;
MPRINT(EM_DIAGRAM):   drop _format;
2466329   +_format= ' ';
MPRINT(EM_DIAGRAM):   _format= ' ';
2466330   +_p_= 0;
MPRINT(EM_DIAGRAM):   _p_= 0;
2466331   +drop _p_;
MPRINT(EM_DIAGRAM):   drop _p_;
2466332   +if P_DepVar1 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar1 > _p_ then do;
2466333   +_p_= P_DepVar1;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar1;
2466334   +_format= '1';
MPRINT(EM_DIAGRAM):   _format= '1';
2466335   +end;
MPRINT(EM_DIAGRAM):   end;
2466336   +if P_DepVar0 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar0 > _p_ then do;
2466337   +_p_= P_DepVar0;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar0;
2466338   +_format= '0';
MPRINT(EM_DIAGRAM):   _format= '0';
2466339   +end;
MPRINT(EM_DIAGRAM):   end;
2466340   +%DMNORMCP(_format,I_DepVar);
MPRINT(DMNORMCP):   I_DepVar=dmnorm(_format,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2466341   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2466342   +* Ensmbl46: Producing Unformatted variable;
MPRINT(EM_DIAGRAM):   * Ensmbl46: Producing Unformatted variable;
2466343   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2466344   +label U_DepVar = "Unnormalized Into: DepVar";
MPRINT(EM_DIAGRAM):   label U_DepVar = "Unnormalized Into: DepVar";
2466345   +if I_DepVar = '1' then U_DepVar = 1;
MPRINT(EM_DIAGRAM):   if I_DepVar = '1' then U_DepVar = 1;
2466346   +else
2466347   +if I_DepVar = '0' then U_DepVar = 0;
MPRINT(EM_DIAGRAM):   else if I_DepVar = '0' then U_DepVar = 0;
2466348   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2466349   +* Ensmbl46: Computing _WARN_ Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl46: Computing _WARN_ Variable;
2466350   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2466351   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
2466352   +label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
2466353   +_WARN_ = '';
MPRINT(EM_DIAGRAM):   _WARN_ = '';
2466354   +if index(AUTONEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
2466354  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
2466355   +if index(AUTONEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
2466355  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
2466356   +if index(AUTONEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
2466356  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
2466357   +if index(AUTONEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
2466357  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
2466358   +if index(AUTONEURAL11_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
2466358  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
2466359   +if index(AUTONEURAL11_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
2466359  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
2466360   +if index(AUTONEURAL11_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
2466360  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
2466361   +if index(AUTONEURAL11_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
2466361  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
2466362   +if index(AUTONEURAL12_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
2466362  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
2466363   +if index(AUTONEURAL12_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
2466363  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
2466364   +if index(AUTONEURAL12_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
2466364  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
2466365   +if index(AUTONEURAL12_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
2466365  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
2466366   +if index(AUTONEURAL7_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
2466366  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL7_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
2466367   +if index(AUTONEURAL7_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
2466367  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL7_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
2466368   +if index(AUTONEURAL7_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
2466368  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL7_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
2466369   +if index(AUTONEURAL7_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
2466369  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL7_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
2466370   +if index(AUTONEURAL10_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
2466370  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL10_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
2466371   +if index(AUTONEURAL10_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
2466371  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL10_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
2466372   +if index(AUTONEURAL10_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
2466372  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL10_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
2466373   +if index(AUTONEURAL10_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
2466373  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL10_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
2466374   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2466375   +* Ensmbl46: Computing Residual Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl46: Computing Residual Vars;
2466376   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2466377   +if
2466378   +F_DepVar NE '1'
2466379   +AND F_DepVar NE '0'
2466380   +then do;
MPRINT(EM_DIAGRAM):   if F_DepVar NE '1' AND F_DepVar NE '0' then do;
2466381   +R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
2466382   +R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
2466383   +end;
MPRINT(EM_DIAGRAM):   end;
2466384   +else do;
MPRINT(EM_DIAGRAM):   else do;
2466385   +R_DepVar1 = -P_DepVar1;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1;
2466386   +R_DepVar0 = -P_DepVar0;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0;
2466387   +SELECT(F_DepVar);
MPRINT(EM_DIAGRAM):   SELECT(F_DepVar);
2466388   +WHEN('1') R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   WHEN('1') R_DepVar1 = R_DepVar1 +1;
2466389   +WHEN('0') R_DepVar0 = R_DepVar0 +1;
MPRINT(EM_DIAGRAM):   WHEN('0') R_DepVar0 = R_DepVar0 +1;
2466390   +OTHERWISE;
MPRINT(EM_DIAGRAM):   OTHERWISE;
2466391   +END;
MPRINT(EM_DIAGRAM):   END;
2466392   +END;
MPRINT(EM_DIAGRAM):   END;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2466393    run;
 
NOTE: DATA STEP view saved on file EMWS8.ENSMBL46_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.AUTONEURAL9_TRAIN.VIEW used (Total process time):
      real time           0.16 seconds
      cpu time            0.17 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.17 seconds
      cpu time            0.18 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2466394    quit;
2466395    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
2466396    filename emflow
2466396  ! "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl46\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl46\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl46: Scoring AUTONEURAL9_VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2466397    *------------------------------------------------------------*;
2466398    * Ensmbl46: Scoring AUTONEURAL9_VALIDATE data;
2466399    *------------------------------------------------------------*;
2466400    data EMWS8.Ensmbl46_VALIDATE
2466401    / view=EMWS8.Ensmbl46_VALIDATE
2466402    ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl46_VALIDATE / view=EMWS8.Ensmbl46_VALIDATE ;
2466403    set EMWS8.AutoNeural9_VALIDATE
2466404    ;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural9_VALIDATE ;
2466405    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file
      C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl46\EMFLOWSCORE.sas.
2466406   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2466407   +* Ensmbl46: Combine model for DepVar;
MPRINT(EM_DIAGRAM):   * Ensmbl46: Combine model for DepVar;
2466408   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2466409   +* Ensmbl46: Scoring Code of model 1 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl46: Scoring Code of model 1 of 5;
2466410   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2466411   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2466412   +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
2466413   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
2466414   +* NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
2466415   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2466416   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2466417   +* TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
2466418   +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
2466419   +* NODE: Stat;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
2466420   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2466421   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2466422   +* TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
2466423   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
2466424   +* NODE: Filter;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
2466425   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2466426   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2466427   +* TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
2466428   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
2466429   +* NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
2466430   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2466431   +
2466432   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
2466433   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
2466433  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
2466434   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
2466435   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
2466436   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
2466437   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
2466438   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
2466439   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2466440   +* TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
2466441   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
2466442   +* NODE: Trans;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
2466443   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2466444   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2466445   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
2466446   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2466447   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
2466448   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
2466449   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
2466450   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2466451   +* TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
2466452   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
2466453   +* NODE: Part;
MPRINT(EM_DIAGRAM):   * NODE: Part;
2466454   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2466455   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2466456   +* TOOL: Metadata Node;
MPRINT(EM_DIAGRAM):   * TOOL: Metadata Node;
2466457   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
2466458   +* NODE: Meta;
MPRINT(EM_DIAGRAM):   * NODE: Meta;
2466459   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2466460   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2466461   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
2466462   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2466463   +* NODE: AutoNeural9;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural9;
2466464   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2466465   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2466466   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2466467   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2466468   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2466469   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2466470   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2466471   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2466472   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2466473   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2466474   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2466475   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2466476   +LENGTH _WARN_ $4
2466477   +      F_DepVar  $ 12
2466478   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2466479   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2466480   +
2466481   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2466482   +
2466483   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2466484   +
2466485   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2466486   +
2466487   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2466488   +
2466489   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2466490   +
2466491   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2466492   +
2466493   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2466494   +
2466495   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2466496   +
2466497   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2466498   +
2466499   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2466500   +
2466501   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2466502   +
2466503   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2466504   +
2466505   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2466506   +
2466507   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2466508   +
2466509   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2466510   +
2466511   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2466512   +
2466513   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2466514   +
2466515   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2466516   +
2466517   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2466518   +
2466519   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2466520   +
2466521   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2466522   +
2466523   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2466524   +
2466525   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2466526   +
2466527   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2466528   +
2466529   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2466530   +
2466531   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2466532   +
2466533   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2466534   +
2466535   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2466536   +
2466537   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2466538   +
2466539   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2466540   +
2466541   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2466542   +
2466543   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2466544   +
2466545   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2466546   +
2466547   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2466548   +
2466549   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2466550   +
2466551   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2466552   +
2466553   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2466554   +
2466555   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2466556   +
2466557   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2466558   +
2466559   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2466560   +
2466561   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2466562   +
2466563   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2466564   +
2466565   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2466566   +
2466567   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2466568   +
2466569   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2466570   +
2466571   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2466572   +
2466573   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2466574   +
2466575   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2466576   +
2466577   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2466578   +
2466579   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2466580   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2466581   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2466582   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2466583   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2466584   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2466585   +end;
MPRINT(EM_DIAGRAM):   end;
2466586   +else do;
MPRINT(EM_DIAGRAM):   else do;
2466587   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2466588   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2466589   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2466590   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2466591   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2466592   +   end;
MPRINT(EM_DIAGRAM):   end;
2466593   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2466594   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2466595   +   end;
MPRINT(EM_DIAGRAM):   end;
2466596   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2466597   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2466598   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2466599   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2466600   +   end;
MPRINT(EM_DIAGRAM):   end;
2466601   +end;
MPRINT(EM_DIAGRAM):   end;
2466602   +
2466603   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2466604   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2466605   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2466606   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2466607   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2466608   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2466609   +end;
MPRINT(EM_DIAGRAM):   end;
2466610   +else do;
MPRINT(EM_DIAGRAM):   else do;
2466611   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2466612   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2466613   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2466614   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2466615   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2466616   +   end;
MPRINT(EM_DIAGRAM):   end;
2466617   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2466618   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2466619   +   end;
MPRINT(EM_DIAGRAM):   end;
2466620   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2466621   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2466622   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2466623   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2466624   +   end;
MPRINT(EM_DIAGRAM):   end;
2466625   +end;
MPRINT(EM_DIAGRAM):   end;
2466626   +
2466627   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2466628   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2466629   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2466630   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2466631   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2466632   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2466633   +end;
MPRINT(EM_DIAGRAM):   end;
2466634   +else do;
MPRINT(EM_DIAGRAM):   else do;
2466635   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2466636   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2466637   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2466638   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2466639   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2466640   +   end;
MPRINT(EM_DIAGRAM):   end;
2466641   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2466642   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2466643   +   end;
MPRINT(EM_DIAGRAM):   end;
2466644   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2466645   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2466646   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2466647   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2466648   +   end;
MPRINT(EM_DIAGRAM):   end;
2466649   +end;
MPRINT(EM_DIAGRAM):   end;
2466650   +
2466651   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2466652   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2466653   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2466654   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2466655   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2466656   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2466657   +end;
MPRINT(EM_DIAGRAM):   end;
2466658   +else do;
MPRINT(EM_DIAGRAM):   else do;
2466659   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2466660   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2466661   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2466662   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2466663   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2466664   +   end;
MPRINT(EM_DIAGRAM):   end;
2466665   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2466666   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2466667   +   end;
MPRINT(EM_DIAGRAM):   end;
2466668   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2466669   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2466670   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2466671   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2466672   +   end;
MPRINT(EM_DIAGRAM):   end;
2466673   +end;
MPRINT(EM_DIAGRAM):   end;
2466674   +
2466675   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2466676   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2466677   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2466678   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2466679   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2466680   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2466681   +end;
MPRINT(EM_DIAGRAM):   end;
2466682   +else do;
MPRINT(EM_DIAGRAM):   else do;
2466683   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2466684   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2466685   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2466686   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2466687   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2466688   +   end;
MPRINT(EM_DIAGRAM):   end;
2466689   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2466690   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2466691   +   end;
MPRINT(EM_DIAGRAM):   end;
2466692   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2466693   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2466694   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2466695   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2466696   +   end;
MPRINT(EM_DIAGRAM):   end;
2466697   +end;
MPRINT(EM_DIAGRAM):   end;
2466698   +
2466699   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2466700   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2466701   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2466702   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2466703   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2466704   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2466705   +end;
MPRINT(EM_DIAGRAM):   end;
2466706   +else do;
MPRINT(EM_DIAGRAM):   else do;
2466707   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2466708   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2466709   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2466710   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2466711   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2466712   +   end;
MPRINT(EM_DIAGRAM):   end;
2466713   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2466714   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2466715   +   end;
MPRINT(EM_DIAGRAM):   end;
2466716   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2466717   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2466718   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2466719   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2466720   +   end;
MPRINT(EM_DIAGRAM):   end;
2466721   +end;
MPRINT(EM_DIAGRAM):   end;
2466722   +
2466723   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2466724   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2466725   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2466726   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2466727   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2466728   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2466729   +end;
MPRINT(EM_DIAGRAM):   end;
2466730   +else do;
MPRINT(EM_DIAGRAM):   else do;
2466731   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2466732   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2466733   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2466734   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2466735   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2466736   +   end;
MPRINT(EM_DIAGRAM):   end;
2466737   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2466738   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2466739   +   end;
MPRINT(EM_DIAGRAM):   end;
2466740   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2466741   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2466742   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2466743   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2466744   +   end;
MPRINT(EM_DIAGRAM):   end;
2466745   +end;
MPRINT(EM_DIAGRAM):   end;
2466746   +
2466747   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2466748   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
2466749   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2466750   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2466751   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2466752   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2466753   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2466754   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2466755   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2466756   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2466757   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2466758   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2466759   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2466760   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2466761   +end;
MPRINT(EM_DIAGRAM):   end;
2466762   +else do;
MPRINT(EM_DIAGRAM):   else do;
2466763   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2466764   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2466765   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2466766   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2466767   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2466768   +   end;
MPRINT(EM_DIAGRAM):   end;
2466769   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2466770   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2466771   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2466772   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2466773   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2466774   +   end;
MPRINT(EM_DIAGRAM):   end;
2466775   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2466776   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2466777   +   end;
MPRINT(EM_DIAGRAM):   end;
2466778   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2466779   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2466780   +   end;
MPRINT(EM_DIAGRAM):   end;
2466781   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2466782   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2466783   +   end;
MPRINT(EM_DIAGRAM):   end;
2466784   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2466785   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2466786   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2466787   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2466788   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2466789   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2466790   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2466791   +   end;
MPRINT(EM_DIAGRAM):   end;
2466792   +end;
MPRINT(EM_DIAGRAM):   end;
2466793   +
2466794   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2466795   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2466796   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
2466797   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2466798   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2466799   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2466800   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2466801   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2466802   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2466803   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2466804   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2466805   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2466806   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2466807   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2466808   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2466809   +end;
MPRINT(EM_DIAGRAM):   end;
2466810   +else do;
MPRINT(EM_DIAGRAM):   else do;
2466811   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2466812   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2466813   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2466814   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2466815   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2466816   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2466817   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2466818   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2466819   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2466820   +         end;
MPRINT(EM_DIAGRAM):   end;
2466821   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2466822   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2466823   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2466824   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2466825   +            end;
MPRINT(EM_DIAGRAM):   end;
2466826   +         end;
MPRINT(EM_DIAGRAM):   end;
2466827   +      end;
MPRINT(EM_DIAGRAM):   end;
2466828   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2466829   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2466830   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2466831   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2466832   +         end;
MPRINT(EM_DIAGRAM):   end;
2466833   +      end;
MPRINT(EM_DIAGRAM):   end;
2466834   +   end;
MPRINT(EM_DIAGRAM):   end;
2466835   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2466836   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2466837   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2466838   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2466839   +      end;
MPRINT(EM_DIAGRAM):   end;
2466840   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2466841   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2466842   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2466843   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2466844   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2466845   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2466846   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2466847   +         end;
MPRINT(EM_DIAGRAM):   end;
2466848   +      end;
MPRINT(EM_DIAGRAM):   end;
2466849   +   end;
MPRINT(EM_DIAGRAM):   end;
2466850   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2466851   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2466852   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2466853   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2466854   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2466855   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2466856   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2466857   +   end;
MPRINT(EM_DIAGRAM):   end;
2466858   +end;
MPRINT(EM_DIAGRAM):   end;
2466859   +
2466860   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2466861   +*** Checking missing input Interval
2466862   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2466863   +
2466864   +IF NMISS(
2466865   +   AcceptedCmpTotal ,
2466866   +   Age ,
2466867   +   Frq ,
2466868   +   Income ,
2466869   +   Kidhome ,
2466870   +   Mnt ,
2466871   +   MntFishProducts ,
2466872   +   MntFruits ,
2466873   +   MntGoldProds ,
2466874   +   MntMeatProducts ,
2466875   +   MntSweetProducts ,
2466876   +   MntWines ,
2466877   +   MonthsAsCustomer ,
2466878   +   NumCatalogPurchases ,
2466879   +   NumDealsPurchases ,
2466880   +   NumDistPurchases ,
2466881   +   NumStorePurchases ,
2466882   +   NumWebPurchases ,
2466883   +   NumWebVisitsMonth ,
2466884   +   RFMstat ,
2466885   +   RMntFrq ,
2466886   +   Recency ,
2466887   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
2466888   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2466889   +
2466890   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2466891   +END;
MPRINT(EM_DIAGRAM):   END;
2466892   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2466893   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2466894   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2466895   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2466896   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2466897   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2466898   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2466899   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2466900   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2466901   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2466902   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2466903   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2466904   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2466905   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2466906   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2466907   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2466908   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2466909   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2466910   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2466911   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2466912   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2466913   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2466914   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
2466915   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2466916   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2466917   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2466918   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2466919   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2466920   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2466921   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2466922   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2466923   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2466924   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2466925   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2466926   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2466927   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2466928   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2466929   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2466930   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2466931   +END;
MPRINT(EM_DIAGRAM):   END;
2466932   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2466933   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2466934   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2466935   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2466936   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2466937   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2466938   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2466939   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2466940   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2466941   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2466942   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2466943   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2466944   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2466945   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2466946   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2466947   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2466948   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2466949   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2466950   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2466951   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2466952   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2466953   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2466954   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
2466955   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2466956   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2466957   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2466958   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2466959   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2466960   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2466961   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2466962   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2466963   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2466964   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2466965   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
2466966   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2466967   +   ELSE S_NumCatalogPurchases
2466968   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2466969   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2466970   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2466971   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2466972   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2466973   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2466974   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2466975   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2466976   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2466977   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2466978   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2466979   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2466980   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2466981   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2466982   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2466983   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2466984   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2466985   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2466986   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2466987   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2466988   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2466989   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2466990   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2466991   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2466992   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2466993   +END;
MPRINT(EM_DIAGRAM):   END;
2466994   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2466995   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2466996   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2466997   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2466998   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2466999   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2467000   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2467001   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2467002   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2467003   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2467004   +   H1x1_1  =     -0.7790327388408 * S_AcceptedCmpTotal
2467005   +          +     0.32193739579856 * S_Age  +    -0.43875684835169 * S_Frq
2467006   +          +     0.13013240455049 * S_Income  +    -0.74127716462976 *
2467007   +        S_Kidhome  +    -0.86416600561474 * S_Mnt  +     0.94819226754442 *
2467008   +        S_MntFishProducts  +     0.15895119408799 * S_MntFruits
2467009   +          +     0.03658391935071 * S_MntGoldProds  +    -3.75052142292398 *
2467010   +        S_MntMeatProducts  +    -0.22192220883538 * S_MntSweetProducts
2467011   +          +     0.80534656860633 * S_MntWines  +     0.16144794241259 *
2467012   +        S_MonthsAsCustomer  +    -1.53040364803625 * S_NumCatalogPurchases
2467013   +          +    -1.09856598010056 * S_NumDealsPurchases
2467014   +          +    -0.10571850472514 * S_NumDistPurchases
2467015   +          +     0.11898210654227 * S_NumStorePurchases
2467016   +          +      0.5984912060231 * S_NumWebPurchases
2467017   +          +     0.78592531126942 * S_NumWebVisitsMonth
2467018   +          +    -0.50004686386273 * S_RFMstat  +     0.40804018151571 *
2467019   +        S_RMntFrq  +    -0.94753260620308 * S_Recency
2467020   +          +    -0.49604118088328 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.7790327388408 * S_AcceptedCmpTotal + 0.32193739579856 *
S_Age + -0.43875684835169 * S_Frq + 0.13013240455049 * S_Income + -0.74127716462976 *
S_Kidhome + -0.86416600561474 * S_Mnt + 0.94819226754442 * S_MntFishProducts +
0.15895119408799 * S_MntFruits + 0.03658391935071 * S_MntGoldProds + -3.75052142292398 *
S_MntMeatProducts + -0.22192220883538 * S_MntSweetProducts + 0.80534656860633 * S_MntWines +
0.16144794241259 * S_MonthsAsCustomer + -1.53040364803625 * S_NumCatalogPurchases +
-1.09856598010056 * S_NumDealsPurchases + -0.10571850472514 * S_NumDistPurchases +
0.11898210654227 * S_NumStorePurchases + 0.5984912060231 * S_NumWebPurchases +
0.78592531126942 * S_NumWebVisitsMonth + -0.50004686386273 * S_RFMstat + 0.40804018151571 *
S_RMntFrq + -0.94753260620308 * S_Recency + -0.49604118088328 * S_Teenhome ;
2467021   +   H1x1_2  =    -0.22226926295489 * S_AcceptedCmpTotal
2467022   +          +     0.08523894206962 * S_Age  +    -0.13010378102207 * S_Frq
2467023   +          +    -0.61810906923536 * S_Income  +     0.26583917928045 *
2467024   +        S_Kidhome  +     0.57213479787981 * S_Mnt  +    -0.58077613046442 *
2467025   +        S_MntFishProducts  +      0.1530301493776 * S_MntFruits
2467026   +          +      0.4586167382631 * S_MntGoldProds  +     1.40179051129147 *
2467027   +        S_MntMeatProducts  +      0.0231413770297 * S_MntSweetProducts
2467028   +          +    -0.08483682112771 * S_MntWines  +     0.22891006905064 *
2467029   +        S_MonthsAsCustomer  +    -1.21866617917435 * S_NumCatalogPurchases
2467030   +          +    -0.84042044250624 * S_NumDealsPurchases
2467031   +          +    -0.10246261015488 * S_NumDistPurchases
2467032   +          +     0.06886149708824 * S_NumStorePurchases
2467033   +          +     0.63156910388199 * S_NumWebPurchases
2467034   +          +    -1.33032061845311 * S_NumWebVisitsMonth
2467035   +          +     0.51240040684649 * S_RFMstat  +     0.77604047421115 *
2467036   +        S_RMntFrq  +     1.27964260226958 * S_Recency
2467037   +          +     0.12022076571016 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.22226926295489 * S_AcceptedCmpTotal + 0.08523894206962 *
S_Age + -0.13010378102207 * S_Frq + -0.61810906923536 * S_Income + 0.26583917928045 *
S_Kidhome + 0.57213479787981 * S_Mnt + -0.58077613046442 * S_MntFishProducts + 0.1530301493776
* S_MntFruits + 0.4586167382631 * S_MntGoldProds + 1.40179051129147 * S_MntMeatProducts +
0.0231413770297 * S_MntSweetProducts + -0.08483682112771 * S_MntWines + 0.22891006905064 *
S_MonthsAsCustomer + -1.21866617917435 * S_NumCatalogPurchases + -0.84042044250624 *
S_NumDealsPurchases + -0.10246261015488 * S_NumDistPurchases + 0.06886149708824 *
S_NumStorePurchases + 0.63156910388199 * S_NumWebPurchases + -1.33032061845311 *
S_NumWebVisitsMonth + 0.51240040684649 * S_RFMstat + 0.77604047421115 * S_RMntFrq +
1.27964260226958 * S_Recency + 0.12022076571016 * S_Teenhome ;
2467038   +   H1x1_3  =     1.19879097976404 * S_AcceptedCmpTotal
2467039   +          +     0.14973951999399 * S_Age  +    -0.90630756390399 * S_Frq
2467040   +          +     0.64934241358682 * S_Income  +    -0.66249532206724 *
2467041   +        S_Kidhome  +     0.54195490560813 * S_Mnt  +    -0.58497380565417 *
2467042   +        S_MntFishProducts  +     0.12409202833851 * S_MntFruits
2467043   +          +     0.44480061346561 * S_MntGoldProds  +     3.27513201048136 *
2467044   +        S_MntMeatProducts  +     -0.1256493054184 * S_MntSweetProducts
2467045   +          +    -0.56080685022301 * S_MntWines  +     0.08633469383177 *
2467046   +        S_MonthsAsCustomer  +     0.45482673505107 * S_NumCatalogPurchases
2467047   +          +     0.45393712455366 * S_NumDealsPurchases
2467048   +          +    -0.25292198053552 * S_NumDistPurchases
2467049   +          +    -1.35582215064749 * S_NumStorePurchases
2467050   +          +    -0.83132202302639 * S_NumWebPurchases
2467051   +          +     1.87116225272678 * S_NumWebVisitsMonth
2467052   +          +     0.39564162951481 * S_RFMstat  +    -1.08810221295144 *
2467053   +        S_RMntFrq  +    -2.07407859514648 * S_Recency
2467054   +          +     -0.6849099475723 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.19879097976404 * S_AcceptedCmpTotal + 0.14973951999399 *
S_Age + -0.90630756390399 * S_Frq + 0.64934241358682 * S_Income + -0.66249532206724 *
S_Kidhome + 0.54195490560813 * S_Mnt + -0.58497380565417 * S_MntFishProducts +
0.12409202833851 * S_MntFruits + 0.44480061346561 * S_MntGoldProds + 3.27513201048136 *
S_MntMeatProducts + -0.1256493054184 * S_MntSweetProducts + -0.56080685022301 * S_MntWines +
0.08633469383177 * S_MonthsAsCustomer + 0.45482673505107 * S_NumCatalogPurchases +
0.45393712455366 * S_NumDealsPurchases + -0.25292198053552 * S_NumDistPurchases +
-1.35582215064749 * S_NumStorePurchases + -0.83132202302639 * S_NumWebPurchases +
1.87116225272678 * S_NumWebVisitsMonth + 0.39564162951481 * S_RFMstat + -1.08810221295144 *
S_RMntFrq + -2.07407859514648 * S_Recency + -0.6849099475723 * S_Teenhome ;
2467055   +   H1x1_1  = H1x1_1  +     0.81075414854045 * AcceptedCmp10
2467056   +          +    -0.33403710427327 * AcceptedCmp20  +    -0.62242387435975 *
2467057   +        AcceptedCmp30  +    -0.89439410552439 * AcceptedCmp40
2467058   +          +     0.77335976756467 * AcceptedCmp50  +    -0.08825784612626 *
2467059   +        Complain0  +      0.3404395194267 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.81075414854045 * AcceptedCmp10 + -0.33403710427327 *
AcceptedCmp20 + -0.62242387435975 * AcceptedCmp30 + -0.89439410552439 * AcceptedCmp40 +
0.77335976756467 * AcceptedCmp50 + -0.08825784612626 * Complain0 + 0.3404395194267 *
HigherEducationBinary0 ;
2467060   +   H1x1_2  = H1x1_2  +    -0.16741179709566 * AcceptedCmp10
2467061   +          +    -0.53751033948061 * AcceptedCmp20  +     0.80285496945068 *
2467062   +        AcceptedCmp30  +     0.39379279966091 * AcceptedCmp40
2467063   +          +    -1.40366799083237 * AcceptedCmp50  +     -0.4265482924132 *
2467064   +        Complain0  +     0.37272103593422 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.16741179709566 * AcceptedCmp10 + -0.53751033948061
* AcceptedCmp20 + 0.80285496945068 * AcceptedCmp30 + 0.39379279966091 * AcceptedCmp40 +
-1.40366799083237 * AcceptedCmp50 + -0.4265482924132 * Complain0 + 0.37272103593422 *
HigherEducationBinary0 ;
2467065   +   H1x1_3  = H1x1_3  +    -0.19417657656326 * AcceptedCmp10
2467066   +          +    -0.06547746897317 * AcceptedCmp20  +     0.21980739904513 *
2467067   +        AcceptedCmp30  +    -0.19452210052301 * AcceptedCmp40
2467068   +          +    -2.02403282278574 * AcceptedCmp50  +    -0.18250261144524 *
2467069   +        Complain0  +     0.34168103813312 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.19417657656326 * AcceptedCmp10 + -0.06547746897317
* AcceptedCmp20 + 0.21980739904513 * AcceptedCmp30 + -0.19452210052301 * AcceptedCmp40 +
-2.02403282278574 * AcceptedCmp50 + -0.18250261144524 * Complain0 + 0.34168103813312 *
HigherEducationBinary0 ;
2467070   +   H1x1_1  = H1x1_1  +    -0.03956789621002 * Education2n_Cycle
2467071   +          +    -0.38372374638888 * EducationBasic  +     -0.4178927802606 *
2467072   +        EducationGraduation  +    -0.61278625923288 * EducationMaster
2467073   +          +      0.4695898100094 * Marital_StatusDivorced
2467074   +          +    -0.52137742289262 * Marital_StatusMarried
2467075   +          +    -0.32382086914936 * Marital_StatusSingle
2467076   +          +    -0.66163012672344 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.03956789621002 * Education2n_Cycle +
-0.38372374638888 * EducationBasic + -0.4178927802606 * EducationGraduation +
-0.61278625923288 * EducationMaster + 0.4695898100094 * Marital_StatusDivorced +
-0.52137742289262 * Marital_StatusMarried + -0.32382086914936 * Marital_StatusSingle +
-0.66163012672344 * Marital_StatusTogether ;
2467077   +   H1x1_2  = H1x1_2  +    -0.25832319223886 * Education2n_Cycle
2467078   +          +     0.05602860720141 * EducationBasic  +    -0.86282852488383 *
2467079   +        EducationGraduation  +     0.18916317018059 * EducationMaster
2467080   +          +    -1.04858218653238 * Marital_StatusDivorced
2467081   +          +     2.41098335093061 * Marital_StatusMarried
2467082   +          +    -1.94696044861334 * Marital_StatusSingle
2467083   +          +     2.16021514856437 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.25832319223886 * Education2n_Cycle +
0.05602860720141 * EducationBasic + -0.86282852488383 * EducationGraduation + 0.18916317018059
* EducationMaster + -1.04858218653238 * Marital_StatusDivorced + 2.41098335093061 *
Marital_StatusMarried + -1.94696044861334 * Marital_StatusSingle + 2.16021514856437 *
Marital_StatusTogether ;
2467084   +   H1x1_3  = H1x1_3  +    -0.05351872242069 * Education2n_Cycle
2467085   +          +    -0.56850783552841 * EducationBasic  +    -0.14880907057098 *
2467086   +        EducationGraduation  +    -0.32850851013319 * EducationMaster
2467087   +          +     0.42964114177062 * Marital_StatusDivorced
2467088   +          +    -0.38607635605816 * Marital_StatusMarried
2467089   +          +    -0.02157405407852 * Marital_StatusSingle
2467090   +          +    -0.59995619744527 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.05351872242069 * Education2n_Cycle +
-0.56850783552841 * EducationBasic + -0.14880907057098 * EducationGraduation +
-0.32850851013319 * EducationMaster + 0.42964114177062 * Marital_StatusDivorced +
-0.38607635605816 * Marital_StatusMarried + -0.02157405407852 * Marital_StatusSingle +
-0.59995619744527 * Marital_StatusTogether ;
2467091   +   H1x1_1  =    -0.53239337390307 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.53239337390307 + H1x1_1 ;
2467092   +   H1x1_2  =     0.99428677123948 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.99428677123948 + H1x1_2 ;
2467093   +   H1x1_3  =       1.835877082844 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.835877082844 + H1x1_3 ;
2467094   +   H1x1_4  = 0;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0;
2467095   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
2467096   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2467097   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
2467098   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
2467099   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
2467100   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
2467101   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
2467102   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
2467103   +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
2467104   +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
2467105   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
2467106   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
2467107   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
2467108   +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
2467109   +END;
MPRINT(EM_DIAGRAM):   END;
2467110   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2467111   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2467112   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2467113   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2467114   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2467115   +END;
MPRINT(EM_DIAGRAM):   END;
2467116   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2467117   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2467118   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2467119   +
2467120   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2467121   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2467122   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2467123   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2467124   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2467125   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2467126   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2467127   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2467128   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2467129   +end;
MPRINT(EM_DIAGRAM):   end;
2467130   +else do;
MPRINT(EM_DIAGRAM):   else do;
2467131   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2467132   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2467133   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2467134   +   end;
MPRINT(EM_DIAGRAM):   end;
2467135   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2467136   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2467137   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2467138   +   end;
MPRINT(EM_DIAGRAM):   end;
2467139   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2467140   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2467141   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2467142   +   end;
MPRINT(EM_DIAGRAM):   end;
2467143   +end;
MPRINT(EM_DIAGRAM):   end;
2467144   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2467145   +   P_DepVar1  =    -3.41904253756965 * H1x1_1  +    -7.11204151517034 * H1x1_2
2467146   +          +     10.7909509395818 * H1x1_3  +    -2.20432578352426 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.41904253756965 * H1x1_1 + -7.11204151517034 * H1x1_2 +
10.7909509395818 * H1x1_3 + -2.20432578352426 * H1x1_4 ;
2467147   +   P_DepVar1  =    -3.66951098257489 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.66951098257489 + P_DepVar1 ;
2467148   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2467149   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2467150   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2467151   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2467152   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2467153   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2467154   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2467155   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2467156   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2467157   +END;
MPRINT(EM_DIAGRAM):   END;
2467158   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2467159   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2467160   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2467161   +END;
MPRINT(EM_DIAGRAM):   END;
2467162   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2467163   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2467164   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2467165   +END;
MPRINT(EM_DIAGRAM):   END;
2467166   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2467167   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2467168   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2467169   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2467170   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2467171   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2467172   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2467173   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2467174   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2467175   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2467176   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2467177   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2467178   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2467179   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2467180   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2467181   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2467182   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2467183   +END;
MPRINT(EM_DIAGRAM):   END;
2467184   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2467185   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2467186   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2467187   +drop
2467188   +H1x1_1
2467189   +H1x1_2
2467190   +H1x1_3
2467191   +H1x1_4
2467192   +;
MPRINT(EM_DIAGRAM):   drop H1x1_1 H1x1_2 H1x1_3 H1x1_4 ;
2467193   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2467194   +* Renaming variables for AutoNeural9;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural9;
2467195   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2467196   +* Renaming Posterior variables for AutoNeural9;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural9;
2467197   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2467198   +drop AutoNeural9_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_P_DepVar1;
2467199   +AutoNeural9_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural9_P_DepVar1 = P_DepVar1;
2467200   +drop AutoNeural9_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_P_DepVar0;
2467201   +AutoNeural9_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural9_P_DepVar0 = P_DepVar0;
2467202   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2467203   +* Renaming _WARN_ variable for AutoNeural9;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural9;
2467204   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2467205   +length AutoNeural9_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural9_WARN_ $4;
2467206   +drop AutoNeural9_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_WARN_;
2467207   +AutoNeural9_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural9_WARN_ = _WARN_;
2467208   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2467209   +* Ensmbl46: Scoring Code of model 2 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl46: Scoring Code of model 2 of 5;
2467210   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2467211   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2467212   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
2467213   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2467214   +* NODE: AutoNeural11;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural11;
2467215   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2467216   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2467217   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2467218   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2467219   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2467220   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2467221   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2467222   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2467223   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2467224   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2467225   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2467226   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2467227   +LENGTH _WARN_ $4
2467228   +      F_DepVar  $ 12
2467229   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2467230   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2467231   +
2467232   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2467233   +
2467234   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2467235   +
2467236   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2467237   +
2467238   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2467239   +
2467240   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2467241   +
2467242   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2467243   +
2467244   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2467245   +
2467246   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2467247   +
2467248   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2467249   +
2467250   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2467251   +
2467252   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2467253   +
2467254   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2467255   +
2467256   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2467257   +
2467258   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2467259   +
2467260   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2467261   +
2467262   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2467263   +
2467264   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2467265   +
2467266   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2467267   +
2467268   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2467269   +
2467270   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2467271   +
2467272   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2467273   +
2467274   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2467275   +
2467276   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2467277   +
2467278   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2467279   +
2467280   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2467281   +
2467282   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2467283   +
2467284   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2467285   +
2467286   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2467287   +
2467288   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2467289   +
2467290   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2467291   +
2467292   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2467293   +
2467294   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2467295   +
2467296   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2467297   +
2467298   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2467299   +
2467300   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2467301   +
2467302   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2467303   +
2467304   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2467305   +
2467306   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2467307   +
2467308   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2467309   +
2467310   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2467311   +
2467312   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2467313   +
2467314   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
2467315   +
2467316   +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
2467317   +
2467318   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2467319   +
2467320   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2467321   +
2467322   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2467323   +
2467324   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2467325   +
2467326   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2467327   +
2467328   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2467329   +
2467330   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2467331   +
2467332   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2467333   +
2467334   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2467335   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2467336   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2467337   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2467338   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2467339   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2467340   +end;
MPRINT(EM_DIAGRAM):   end;
2467341   +else do;
MPRINT(EM_DIAGRAM):   else do;
2467342   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2467343   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2467344   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2467345   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2467346   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2467347   +   end;
MPRINT(EM_DIAGRAM):   end;
2467348   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2467349   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2467350   +   end;
MPRINT(EM_DIAGRAM):   end;
2467351   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2467352   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2467353   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2467354   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2467355   +   end;
MPRINT(EM_DIAGRAM):   end;
2467356   +end;
MPRINT(EM_DIAGRAM):   end;
2467357   +
2467358   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2467359   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2467360   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2467361   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2467362   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2467363   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2467364   +end;
MPRINT(EM_DIAGRAM):   end;
2467365   +else do;
MPRINT(EM_DIAGRAM):   else do;
2467366   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2467367   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2467368   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2467369   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2467370   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2467371   +   end;
MPRINT(EM_DIAGRAM):   end;
2467372   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2467373   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2467374   +   end;
MPRINT(EM_DIAGRAM):   end;
2467375   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2467376   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2467377   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2467378   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2467379   +   end;
MPRINT(EM_DIAGRAM):   end;
2467380   +end;
MPRINT(EM_DIAGRAM):   end;
2467381   +
2467382   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2467383   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2467384   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2467385   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2467386   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2467387   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2467388   +end;
MPRINT(EM_DIAGRAM):   end;
2467389   +else do;
MPRINT(EM_DIAGRAM):   else do;
2467390   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2467391   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2467392   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2467393   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2467394   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2467395   +   end;
MPRINT(EM_DIAGRAM):   end;
2467396   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2467397   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2467398   +   end;
MPRINT(EM_DIAGRAM):   end;
2467399   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2467400   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2467401   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2467402   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2467403   +   end;
MPRINT(EM_DIAGRAM):   end;
2467404   +end;
MPRINT(EM_DIAGRAM):   end;
2467405   +
2467406   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2467407   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2467408   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2467409   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2467410   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2467411   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2467412   +end;
MPRINT(EM_DIAGRAM):   end;
2467413   +else do;
MPRINT(EM_DIAGRAM):   else do;
2467414   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2467415   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2467416   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2467417   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2467418   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2467419   +   end;
MPRINT(EM_DIAGRAM):   end;
2467420   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2467421   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2467422   +   end;
MPRINT(EM_DIAGRAM):   end;
2467423   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2467424   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2467425   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2467426   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2467427   +   end;
MPRINT(EM_DIAGRAM):   end;
2467428   +end;
MPRINT(EM_DIAGRAM):   end;
2467429   +
2467430   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2467431   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2467432   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2467433   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2467434   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2467435   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2467436   +end;
MPRINT(EM_DIAGRAM):   end;
2467437   +else do;
MPRINT(EM_DIAGRAM):   else do;
2467438   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2467439   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2467440   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2467441   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2467442   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2467443   +   end;
MPRINT(EM_DIAGRAM):   end;
2467444   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2467445   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2467446   +   end;
MPRINT(EM_DIAGRAM):   end;
2467447   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2467448   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2467449   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2467450   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2467451   +   end;
MPRINT(EM_DIAGRAM):   end;
2467452   +end;
MPRINT(EM_DIAGRAM):   end;
2467453   +
2467454   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2467455   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2467456   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2467457   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2467458   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2467459   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2467460   +end;
MPRINT(EM_DIAGRAM):   end;
2467461   +else do;
MPRINT(EM_DIAGRAM):   else do;
2467462   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2467463   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2467464   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2467465   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2467466   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2467467   +   end;
MPRINT(EM_DIAGRAM):   end;
2467468   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2467469   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2467470   +   end;
MPRINT(EM_DIAGRAM):   end;
2467471   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2467472   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2467473   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2467474   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2467475   +   end;
MPRINT(EM_DIAGRAM):   end;
2467476   +end;
MPRINT(EM_DIAGRAM):   end;
2467477   +
2467478   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2467479   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2467480   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2467481   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2467482   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2467483   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2467484   +end;
MPRINT(EM_DIAGRAM):   end;
2467485   +else do;
MPRINT(EM_DIAGRAM):   else do;
2467486   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2467487   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2467488   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2467489   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2467490   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2467491   +   end;
MPRINT(EM_DIAGRAM):   end;
2467492   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2467493   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2467494   +   end;
MPRINT(EM_DIAGRAM):   end;
2467495   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2467496   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2467497   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2467498   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2467499   +   end;
MPRINT(EM_DIAGRAM):   end;
2467500   +end;
MPRINT(EM_DIAGRAM):   end;
2467501   +
2467502   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2467503   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
2467504   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2467505   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2467506   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2467507   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2467508   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2467509   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2467510   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2467511   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2467512   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2467513   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2467514   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2467515   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2467516   +end;
MPRINT(EM_DIAGRAM):   end;
2467517   +else do;
MPRINT(EM_DIAGRAM):   else do;
2467518   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2467519   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2467520   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2467521   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2467522   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2467523   +   end;
MPRINT(EM_DIAGRAM):   end;
2467524   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2467525   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2467526   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2467527   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2467528   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2467529   +   end;
MPRINT(EM_DIAGRAM):   end;
2467530   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2467531   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2467532   +   end;
MPRINT(EM_DIAGRAM):   end;
2467533   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2467534   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2467535   +   end;
MPRINT(EM_DIAGRAM):   end;
2467536   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2467537   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2467538   +   end;
MPRINT(EM_DIAGRAM):   end;
2467539   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2467540   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2467541   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2467542   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2467543   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2467544   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2467545   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2467546   +   end;
MPRINT(EM_DIAGRAM):   end;
2467547   +end;
MPRINT(EM_DIAGRAM):   end;
2467548   +
2467549   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2467550   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2467551   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
2467552   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2467553   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2467554   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2467555   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2467556   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2467557   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2467558   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2467559   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2467560   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2467561   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2467562   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2467563   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2467564   +end;
MPRINT(EM_DIAGRAM):   end;
2467565   +else do;
MPRINT(EM_DIAGRAM):   else do;
2467566   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2467567   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2467568   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2467569   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2467570   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2467571   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2467572   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2467573   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2467574   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2467575   +         end;
MPRINT(EM_DIAGRAM):   end;
2467576   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2467577   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2467578   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2467579   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2467580   +            end;
MPRINT(EM_DIAGRAM):   end;
2467581   +         end;
MPRINT(EM_DIAGRAM):   end;
2467582   +      end;
MPRINT(EM_DIAGRAM):   end;
2467583   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2467584   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2467585   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2467586   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2467587   +         end;
MPRINT(EM_DIAGRAM):   end;
2467588   +      end;
MPRINT(EM_DIAGRAM):   end;
2467589   +   end;
MPRINT(EM_DIAGRAM):   end;
2467590   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2467591   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2467592   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2467593   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2467594   +      end;
MPRINT(EM_DIAGRAM):   end;
2467595   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2467596   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2467597   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2467598   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2467599   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2467600   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2467601   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2467602   +         end;
MPRINT(EM_DIAGRAM):   end;
2467603   +      end;
MPRINT(EM_DIAGRAM):   end;
2467604   +   end;
MPRINT(EM_DIAGRAM):   end;
2467605   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2467606   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2467607   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2467608   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2467609   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2467610   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2467611   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2467612   +   end;
MPRINT(EM_DIAGRAM):   end;
2467613   +end;
MPRINT(EM_DIAGRAM):   end;
2467614   +
2467615   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2467616   +*** Checking missing input Interval
2467617   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2467618   +
2467619   +IF NMISS(
2467620   +   AcceptedCmpTotal ,
2467621   +   Age ,
2467622   +   Frq ,
2467623   +   Income ,
2467624   +   Kidhome ,
2467625   +   Mnt ,
2467626   +   MntFishProducts ,
2467627   +   MntFruits ,
2467628   +   MntGoldProds ,
2467629   +   MntMeatProducts ,
2467630   +   MntSweetProducts ,
2467631   +   MntWines ,
2467632   +   MonthsAsCustomer ,
2467633   +   NumCatalogPurchases ,
2467634   +   NumDealsPurchases ,
2467635   +   NumDistPurchases ,
2467636   +   NumStorePurchases ,
2467637   +   NumWebPurchases ,
2467638   +   NumWebVisitsMonth ,
2467639   +   RFMstat ,
2467640   +   RMntFrq ,
2467641   +   Recency ,
2467642   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
2467643   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2467644   +
2467645   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2467646   +END;
MPRINT(EM_DIAGRAM):   END;
2467647   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2467648   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2467649   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2467650   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2467651   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2467652   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2467653   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2467654   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2467655   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2467656   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2467657   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2467658   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2467659   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2467660   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2467661   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2467662   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2467663   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2467664   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2467665   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2467666   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2467667   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2467668   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2467669   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
2467670   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2467671   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2467672   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2467673   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2467674   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2467675   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2467676   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2467677   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2467678   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2467679   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2467680   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2467681   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2467682   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2467683   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2467684   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2467685   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2467686   +END;
MPRINT(EM_DIAGRAM):   END;
2467687   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2467688   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2467689   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2467690   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2467691   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2467692   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2467693   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2467694   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2467695   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2467696   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2467697   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2467698   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2467699   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2467700   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2467701   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2467702   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2467703   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2467704   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2467705   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2467706   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2467707   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2467708   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2467709   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
2467710   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2467711   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2467712   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2467713   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2467714   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2467715   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2467716   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2467717   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2467718   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2467719   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2467720   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
2467721   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2467722   +   ELSE S_NumCatalogPurchases
2467723   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2467724   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2467725   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2467726   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2467727   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2467728   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2467729   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2467730   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2467731   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2467732   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2467733   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2467734   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2467735   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2467736   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2467737   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2467738   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2467739   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2467740   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2467741   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2467742   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2467743   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2467744   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2467745   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2467746   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2467747   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2467748   +END;
MPRINT(EM_DIAGRAM):   END;
2467749   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2467750   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2467751   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2467752   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2467753   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2467754   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2467755   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2467756   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2467757   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2467758   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2467759   +   H1x1_1  =     0.08465472857554 * S_AcceptedCmpTotal
2467760   +          +     0.23104131534618 * S_Age  +     0.27646175976509 * S_Frq
2467761   +          +     0.45938840681203 * S_Income  +     0.09814900830666 *
2467762   +        S_Kidhome  +     0.23249430277518 * S_Mnt  +    -0.51905493105122 *
2467763   +        S_MntFishProducts  +    -0.07604226481078 * S_MntFruits
2467764   +          +     0.10100393832157 * S_MntGoldProds  +     1.56159221713858 *
2467765   +        S_MntMeatProducts  +     0.12166799382268 * S_MntSweetProducts
2467766   +          +    -0.63388816790524 * S_MntWines  +     0.00878303775585 *
2467767   +        S_MonthsAsCustomer  +     0.01990411233136 * S_NumCatalogPurchases
2467768   +          +     0.19770934886328 * S_NumDealsPurchases
2467769   +          +      0.0515215988111 * S_NumDistPurchases
2467770   +          +    -0.34569346346089 * S_NumStorePurchases
2467771   +          +    -0.27122293596124 * S_NumWebPurchases
2467772   +          +    -0.17061565609755 * S_NumWebVisitsMonth
2467773   +          +      0.1271178187502 * S_RFMstat  +     0.38306508975954 *
2467774   +        S_RMntFrq  +     0.05823588653853 * S_Recency
2467775   +          +    -0.03760117378617 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.08465472857554 * S_AcceptedCmpTotal + 0.23104131534618 *
S_Age + 0.27646175976509 * S_Frq + 0.45938840681203 * S_Income + 0.09814900830666 * S_Kidhome
+ 0.23249430277518 * S_Mnt + -0.51905493105122 * S_MntFishProducts + -0.07604226481078 *
S_MntFruits + 0.10100393832157 * S_MntGoldProds + 1.56159221713858 * S_MntMeatProducts +
0.12166799382268 * S_MntSweetProducts + -0.63388816790524 * S_MntWines + 0.00878303775585 *
S_MonthsAsCustomer + 0.01990411233136 * S_NumCatalogPurchases + 0.19770934886328 *
S_NumDealsPurchases + 0.0515215988111 * S_NumDistPurchases + -0.34569346346089 *
S_NumStorePurchases + -0.27122293596124 * S_NumWebPurchases + -0.17061565609755 *
S_NumWebVisitsMonth + 0.1271178187502 * S_RFMstat + 0.38306508975954 * S_RMntFrq +
0.05823588653853 * S_Recency + -0.03760117378617 * S_Teenhome ;
2467776   +   H1x1_2  =     0.16564144258189 * S_AcceptedCmpTotal
2467777   +          +    -0.18930338067433 * S_Age  +    -0.23013558761757 * S_Frq
2467778   +          +     -0.1347135122598 * S_Income  +     0.04776498811407 *
2467779   +        S_Kidhome  +    -0.14940302068852 * S_Mnt  +    -0.13108691405604 *
2467780   +        S_MntFishProducts  +    -0.02561341150704 * S_MntFruits
2467781   +          +    -0.02022222891948 * S_MntGoldProds  +     0.80867688993093 *
2467782   +        S_MntMeatProducts  +    -0.08374488783635 * S_MntSweetProducts
2467783   +          +     -0.6719369441832 * S_MntWines  +    -0.14760035685198 *
2467784   +        S_MonthsAsCustomer  +      0.4007376271331 * S_NumCatalogPurchases
2467785   +          +     0.54308887602031 * S_NumDealsPurchases
2467786   +          +    -0.22507315320192 * S_NumDistPurchases
2467787   +          +    -0.79861387328361 * S_NumStorePurchases
2467788   +          +    -0.45467494002747 * S_NumWebPurchases
2467789   +          +      0.2119048824613 * S_NumWebVisitsMonth
2467790   +          +     0.30167662748678 * S_RFMstat  +     0.10712110659027 *
2467791   +        S_RMntFrq  +    -0.03061918029089 * S_Recency
2467792   +          +    -0.06096313113607 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.16564144258189 * S_AcceptedCmpTotal + -0.18930338067433 *
S_Age + -0.23013558761757 * S_Frq + -0.1347135122598 * S_Income + 0.04776498811407 * S_Kidhome
+ -0.14940302068852 * S_Mnt + -0.13108691405604 * S_MntFishProducts + -0.02561341150704 *
S_MntFruits + -0.02022222891948 * S_MntGoldProds + 0.80867688993093 * S_MntMeatProducts +
-0.08374488783635 * S_MntSweetProducts + -0.6719369441832 * S_MntWines + -0.14760035685198 *
S_MonthsAsCustomer + 0.4007376271331 * S_NumCatalogPurchases + 0.54308887602031 *
S_NumDealsPurchases + -0.22507315320192 * S_NumDistPurchases + -0.79861387328361 *
S_NumStorePurchases + -0.45467494002747 * S_NumWebPurchases + 0.2119048824613 *
S_NumWebVisitsMonth + 0.30167662748678 * S_RFMstat + 0.10712110659027 * S_RMntFrq +
-0.03061918029089 * S_Recency + -0.06096313113607 * S_Teenhome ;
2467793   +   H1x1_3  =     0.02674875562898 * S_AcceptedCmpTotal
2467794   +          +    -0.19731891748843 * S_Age  +    -0.00753784701259 * S_Frq
2467795   +          +    -0.31764694608254 * S_Income  +     0.49525183733398 *
2467796   +        S_Kidhome  +     0.24623619243686 * S_Mnt  +     0.25904859702044 *
2467797   +        S_MntFishProducts  +     0.26153358982994 * S_MntFruits
2467798   +          +    -0.07223707213485 * S_MntGoldProds  +    -0.15192960471493 *
2467799   +        S_MntMeatProducts  +     0.08241128624385 * S_MntSweetProducts
2467800   +          +     0.62479763709054 * S_MntWines  +     0.03593742779349 *
2467801   +        S_MonthsAsCustomer  +     0.00825730323418 * S_NumCatalogPurchases
2467802   +          +     -0.0771083149302 * S_NumDealsPurchases
2467803   +          +     0.03403621221162 * S_NumDistPurchases
2467804   +          +     0.61303946422025 * S_NumStorePurchases
2467805   +          +     0.27126793634053 * S_NumWebPurchases
2467806   +          +     -0.9769688424222 * S_NumWebVisitsMonth
2467807   +          +     0.08832170040425 * S_RFMstat  +     0.13241491054212 *
2467808   +        S_RMntFrq  +     0.94872655811163 * S_Recency
2467809   +          +     0.22002222738147 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.02674875562898 * S_AcceptedCmpTotal + -0.19731891748843 *
S_Age + -0.00753784701259 * S_Frq + -0.31764694608254 * S_Income + 0.49525183733398 *
S_Kidhome + 0.24623619243686 * S_Mnt + 0.25904859702044 * S_MntFishProducts + 0.26153358982994
* S_MntFruits + -0.07223707213485 * S_MntGoldProds + -0.15192960471493 * S_MntMeatProducts +
0.08241128624385 * S_MntSweetProducts + 0.62479763709054 * S_MntWines + 0.03593742779349 *
S_MonthsAsCustomer + 0.00825730323418 * S_NumCatalogPurchases + -0.0771083149302 *
S_NumDealsPurchases + 0.03403621221162 * S_NumDistPurchases + 0.61303946422025 *
S_NumStorePurchases + 0.27126793634053 * S_NumWebPurchases + -0.9769688424222 *
S_NumWebVisitsMonth + 0.08832170040425 * S_RFMstat + 0.13241491054212 * S_RMntFrq +
0.94872655811163 * S_Recency + 0.22002222738147 * S_Teenhome ;
2467810   +   H1x1_4  =     0.46328587348713 * S_AcceptedCmpTotal
2467811   +          +      -0.306946385792 * S_Age  +    -0.24247964225191 * S_Frq
2467812   +          +    -0.42968609314513 * S_Income  +    -0.08934431746158 *
2467813   +        S_Kidhome  +     0.15972194979558 * S_Mnt  +    -0.22174909818279 *
2467814   +        S_MntFishProducts  +    -0.23755215058744 * S_MntFruits
2467815   +          +      -0.124789433808 * S_MntGoldProds  +     0.50040173514144 *
2467816   +        S_MntMeatProducts  +     0.02850063230459 * S_MntSweetProducts
2467817   +          +     0.13427582671876 * S_MntWines  +     0.25569886862761 *
2467818   +        S_MonthsAsCustomer  +     0.34004201732149 * S_NumCatalogPurchases
2467819   +          +     0.29894603062327 * S_NumDealsPurchases
2467820   +          +     0.07614620530875 * S_NumDistPurchases
2467821   +          +     0.15402335009896 * S_NumStorePurchases
2467822   +          +     0.10615749096863 * S_NumWebPurchases
2467823   +          +     0.41962286816879 * S_NumWebVisitsMonth
2467824   +          +     0.00203630873093 * S_RFMstat  +     0.04736976805951 *
2467825   +        S_RMntFrq  +    -0.84751074132422 * S_Recency
2467826   +          +      0.2189023557249 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.46328587348713 * S_AcceptedCmpTotal + -0.306946385792 * S_Age
+ -0.24247964225191 * S_Frq + -0.42968609314513 * S_Income + -0.08934431746158 * S_Kidhome +
0.15972194979558 * S_Mnt + -0.22174909818279 * S_MntFishProducts + -0.23755215058744 *
S_MntFruits + -0.124789433808 * S_MntGoldProds + 0.50040173514144 * S_MntMeatProducts +
0.02850063230459 * S_MntSweetProducts + 0.13427582671876 * S_MntWines + 0.25569886862761 *
S_MonthsAsCustomer + 0.34004201732149 * S_NumCatalogPurchases + 0.29894603062327 *
S_NumDealsPurchases + 0.07614620530875 * S_NumDistPurchases + 0.15402335009896 *
S_NumStorePurchases + 0.10615749096863 * S_NumWebPurchases + 0.41962286816879 *
S_NumWebVisitsMonth + 0.00203630873093 * S_RFMstat + 0.04736976805951 * S_RMntFrq +
-0.84751074132422 * S_Recency + 0.2189023557249 * S_Teenhome ;
2467827   +   H1x1_5  =    -0.32353341757368 * S_AcceptedCmpTotal
2467828   +          +     0.03233494925748 * S_Age  +    -0.21296093282526 * S_Frq
2467829   +          +    -0.33919081075007 * S_Income  +     0.08771362671573 *
2467830   +        S_Kidhome  +    -0.10797068838726 * S_Mnt  +    -0.19736358637985 *
2467831   +        S_MntFishProducts  +    -0.19679917231132 * S_MntFruits
2467832   +          +     0.07502386205588 * S_MntGoldProds  +    -0.50948750987247 *
2467833   +        S_MntMeatProducts  +     0.00413757018488 * S_MntSweetProducts
2467834   +          +      0.0788538305785 * S_MntWines  +    -0.02917052455021 *
2467835   +        S_MonthsAsCustomer  +    -0.53933514609821 * S_NumCatalogPurchases
2467836   +          +     0.14392502416642 * S_NumDealsPurchases
2467837   +          +    -0.10026304978633 * S_NumDistPurchases
2467838   +          +     -0.0588453022746 * S_NumStorePurchases
2467839   +          +     0.24799398610395 * S_NumWebPurchases
2467840   +          +    -0.52695548549717 * S_NumWebVisitsMonth
2467841   +          +     0.01855620452049 * S_RFMstat  +    -0.00189170766477 *
2467842   +        S_RMntFrq  +     0.51841177421912 * S_Recency
2467843   +          +     0.31491299720207 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.32353341757368 * S_AcceptedCmpTotal + 0.03233494925748 *
S_Age + -0.21296093282526 * S_Frq + -0.33919081075007 * S_Income + 0.08771362671573 *
S_Kidhome + -0.10797068838726 * S_Mnt + -0.19736358637985 * S_MntFishProducts +
-0.19679917231132 * S_MntFruits + 0.07502386205588 * S_MntGoldProds + -0.50948750987247 *
S_MntMeatProducts + 0.00413757018488 * S_MntSweetProducts + 0.0788538305785 * S_MntWines +
-0.02917052455021 * S_MonthsAsCustomer + -0.53933514609821 * S_NumCatalogPurchases +
0.14392502416642 * S_NumDealsPurchases + -0.10026304978633 * S_NumDistPurchases +
-0.0588453022746 * S_NumStorePurchases + 0.24799398610395 * S_NumWebPurchases +
-0.52695548549717 * S_NumWebVisitsMonth + 0.01855620452049 * S_RFMstat + -0.00189170766477 *
S_RMntFrq + 0.51841177421912 * S_Recency + 0.31491299720207 * S_Teenhome ;
2467844   +   H1x1_6  =     -0.2113594539647 * S_AcceptedCmpTotal
2467845   +          +     -0.1052829531896 * S_Age  +     0.30802959734964 * S_Frq
2467846   +          +    -0.03112570586685 * S_Income  +     0.19129661263247 *
2467847   +        S_Kidhome  +     0.00533736622639 * S_Mnt  +    -0.06112703732925 *
2467848   +        S_MntFishProducts  +    -0.15875686512247 * S_MntFruits
2467849   +          +    -0.08040179272112 * S_MntGoldProds  +    -0.14462087536907 *
2467850   +        S_MntMeatProducts  +     0.21353582706121 * S_MntSweetProducts
2467851   +          +    -0.30180630737612 * S_MntWines  +    -0.11825033043182 *
2467852   +        S_MonthsAsCustomer  +     -0.2917393256645 * S_NumCatalogPurchases
2467853   +          +     0.08149600854964 * S_NumDealsPurchases
2467854   +          +     0.16873541613513 * S_NumDistPurchases
2467855   +          +    -0.20437343413446 * S_NumStorePurchases
2467856   +          +     -0.1671107527288 * S_NumWebPurchases
2467857   +          +     0.03677043100993 * S_NumWebVisitsMonth
2467858   +          +      0.0240516540488 * S_RFMstat  +     0.06155030856383 *
2467859   +        S_RMntFrq  +    -0.28802122451372 * S_Recency
2467860   +          +     0.06998878697307 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -0.2113594539647 * S_AcceptedCmpTotal + -0.1052829531896 *
S_Age + 0.30802959734964 * S_Frq + -0.03112570586685 * S_Income + 0.19129661263247 * S_Kidhome
+ 0.00533736622639 * S_Mnt + -0.06112703732925 * S_MntFishProducts + -0.15875686512247 *
S_MntFruits + -0.08040179272112 * S_MntGoldProds + -0.14462087536907 * S_MntMeatProducts +
0.21353582706121 * S_MntSweetProducts + -0.30180630737612 * S_MntWines + -0.11825033043182 *
S_MonthsAsCustomer + -0.2917393256645 * S_NumCatalogPurchases + 0.08149600854964 *
S_NumDealsPurchases + 0.16873541613513 * S_NumDistPurchases + -0.20437343413446 *
S_NumStorePurchases + -0.1671107527288 * S_NumWebPurchases + 0.03677043100993 *
S_NumWebVisitsMonth + 0.0240516540488 * S_RFMstat + 0.06155030856383 * S_RMntFrq +
-0.28802122451372 * S_Recency + 0.06998878697307 * S_Teenhome ;
2467861   +   H1x1_1  = H1x1_1  +    -0.33641509021082 * AcceptedCmp10
2467862   +          +     0.03092292109435 * AcceptedCmp20  +    -0.23551187181907 *
2467863   +        AcceptedCmp30  +    -0.06694400005185 * AcceptedCmp40
2467864   +          +    -0.14203506237074 * AcceptedCmp50  +    -0.25866390496966 *
2467865   +        Complain0  +     0.19505921178308 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.33641509021082 * AcceptedCmp10 + 0.03092292109435 *
AcceptedCmp20 + -0.23551187181907 * AcceptedCmp30 + -0.06694400005185 * AcceptedCmp40 +
-0.14203506237074 * AcceptedCmp50 + -0.25866390496966 * Complain0 + 0.19505921178308 *
HigherEducationBinary0 ;
2467866   +   H1x1_2  = H1x1_2  +     0.09937599707203 * AcceptedCmp10
2467867   +          +     0.03831208573575 * AcceptedCmp20  +     0.39683693019758 *
2467868   +        AcceptedCmp30  +     0.37006277175295 * AcceptedCmp40
2467869   +          +     0.21293419476895 * AcceptedCmp50  +     0.15528568367473 *
2467870   +        Complain0  +    -0.30210013299822 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.09937599707203 * AcceptedCmp10 + 0.03831208573575 *
AcceptedCmp20 + 0.39683693019758 * AcceptedCmp30 + 0.37006277175295 * AcceptedCmp40 +
0.21293419476895 * AcceptedCmp50 + 0.15528568367473 * Complain0 + -0.30210013299822 *
HigherEducationBinary0 ;
2467871   +   H1x1_3  = H1x1_3  +     0.29891621770856 * AcceptedCmp10
2467872   +          +     0.64938384482014 * AcceptedCmp20  +     0.44997242602142 *
2467873   +        AcceptedCmp30  +       0.479093722666 * AcceptedCmp40
2467874   +          +     0.50957180373919 * AcceptedCmp50  +     0.27833535432461 *
2467875   +        Complain0  +    -0.20383534906723 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.29891621770856 * AcceptedCmp10 + 0.64938384482014 *
AcceptedCmp20 + 0.44997242602142 * AcceptedCmp30 + 0.479093722666 * AcceptedCmp40 +
0.50957180373919 * AcceptedCmp50 + 0.27833535432461 * Complain0 + -0.20383534906723 *
HigherEducationBinary0 ;
2467876   +   H1x1_4  = H1x1_4  +    -0.26872515586946 * AcceptedCmp10
2467877   +          +    -0.24299337381911 * AcceptedCmp20  +    -0.01147155911926 *
2467878   +        AcceptedCmp30  +     -0.3056041277894 * AcceptedCmp40
2467879   +          +    -0.05496409609003 * AcceptedCmp50  +     0.07858238173893 *
2467880   +        Complain0  +     0.05721550070076 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.26872515586946 * AcceptedCmp10 + -0.24299337381911
* AcceptedCmp20 + -0.01147155911926 * AcceptedCmp30 + -0.3056041277894 * AcceptedCmp40 +
-0.05496409609003 * AcceptedCmp50 + 0.07858238173893 * Complain0 + 0.05721550070076 *
HigherEducationBinary0 ;
2467881   +   H1x1_5  = H1x1_5  +    -0.14067626649899 * AcceptedCmp10
2467882   +          +    -0.30627802828357 * AcceptedCmp20  +     0.05057942365592 *
2467883   +        AcceptedCmp30  +    -0.10378506600459 * AcceptedCmp40
2467884   +          +     0.07479232390108 * AcceptedCmp50  +     0.07252750671496 *
2467885   +        Complain0  +     0.11114854035831 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.14067626649899 * AcceptedCmp10 + -0.30627802828357
* AcceptedCmp20 + 0.05057942365592 * AcceptedCmp30 + -0.10378506600459 * AcceptedCmp40 +
0.07479232390108 * AcceptedCmp50 + 0.07252750671496 * Complain0 + 0.11114854035831 *
HigherEducationBinary0 ;
2467886   +   H1x1_6  = H1x1_6  +    -0.25806332334976 * AcceptedCmp10
2467887   +          +     0.03944021903138 * AcceptedCmp20  +    -0.08792206887119 *
2467888   +        AcceptedCmp30  +    -0.24631282865199 * AcceptedCmp40
2467889   +          +    -0.06123991538969 * AcceptedCmp50  +    -0.03114784375357 *
2467890   +        Complain0  +    -0.25204544481193 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + -0.25806332334976 * AcceptedCmp10 + 0.03944021903138 *
AcceptedCmp20 + -0.08792206887119 * AcceptedCmp30 + -0.24631282865199 * AcceptedCmp40 +
-0.06123991538969 * AcceptedCmp50 + -0.03114784375357 * Complain0 + -0.25204544481193 *
HigherEducationBinary0 ;
2467891   +   H1x1_1  = H1x1_1  +      0.2972170984261 * Education2n_Cycle
2467892   +          +     0.01651368568996 * EducationBasic  +     -0.1186055936649 *
2467893   +        EducationGraduation  +      0.0228208538951 * EducationMaster
2467894   +          +    -0.31045295887604 * Marital_StatusDivorced
2467895   +          +    -0.01109401001539 * Marital_StatusMarried
2467896   +          +     0.01325135981025 * Marital_StatusSingle
2467897   +          +     0.16609357475978 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.2972170984261 * Education2n_Cycle + 0.01651368568996
* EducationBasic + -0.1186055936649 * EducationGraduation + 0.0228208538951 * EducationMaster
+ -0.31045295887604 * Marital_StatusDivorced + -0.01109401001539 * Marital_StatusMarried +
0.01325135981025 * Marital_StatusSingle + 0.16609357475978 * Marital_StatusTogether ;
2467898   +   H1x1_2  = H1x1_2  +    -0.07095220065018 * Education2n_Cycle
2467899   +          +    -0.23491732567608 * EducationBasic  +     0.20187086452315 *
2467900   +        EducationGraduation  +     0.07524128723108 * EducationMaster
2467901   +          +     0.02275101861599 * Marital_StatusDivorced
2467902   +          +     0.20271548664903 * Marital_StatusMarried
2467903   +          +    -0.12132069210718 * Marital_StatusSingle
2467904   +          +     0.00085090729385 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.07095220065018 * Education2n_Cycle +
-0.23491732567608 * EducationBasic + 0.20187086452315 * EducationGraduation + 0.07524128723108
* EducationMaster + 0.02275101861599 * Marital_StatusDivorced + 0.20271548664903 *
Marital_StatusMarried + -0.12132069210718 * Marital_StatusSingle + 0.00085090729385 *
Marital_StatusTogether ;
2467905   +   H1x1_3  = H1x1_3  +    -0.02268297689573 * Education2n_Cycle
2467906   +          +     0.06359770535369 * EducationBasic  +     -0.1194001280088 *
2467907   +        EducationGraduation  +     0.17299848976308 * EducationMaster
2467908   +          +     -0.4992959703281 * Marital_StatusDivorced
2467909   +          +     0.62071659624138 * Marital_StatusMarried
2467910   +          +    -0.21776202274494 * Marital_StatusSingle
2467911   +          +     0.54712874598141 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.02268297689573 * Education2n_Cycle +
0.06359770535369 * EducationBasic + -0.1194001280088 * EducationGraduation + 0.17299848976308
* EducationMaster + -0.4992959703281 * Marital_StatusDivorced + 0.62071659624138 *
Marital_StatusMarried + -0.21776202274494 * Marital_StatusSingle + 0.54712874598141 *
Marital_StatusTogether ;
2467912   +   H1x1_4  = H1x1_4  +    -0.17773353520266 * Education2n_Cycle
2467913   +          +     0.17998728120628 * EducationBasic  +    -0.00324602612825 *
2467914   +        EducationGraduation  +    -0.22448876765089 * EducationMaster
2467915   +          +     0.05626212670587 * Marital_StatusDivorced
2467916   +          +     0.14353891364597 * Marital_StatusMarried
2467917   +          +    -0.29006765622997 * Marital_StatusSingle
2467918   +          +     0.05503638282535 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.17773353520266 * Education2n_Cycle +
0.17998728120628 * EducationBasic + -0.00324602612825 * EducationGraduation +
-0.22448876765089 * EducationMaster + 0.05626212670587 * Marital_StatusDivorced +
0.14353891364597 * Marital_StatusMarried + -0.29006765622997 * Marital_StatusSingle +
0.05503638282535 * Marital_StatusTogether ;
2467919   +   H1x1_5  = H1x1_5  +     0.06634316870499 * Education2n_Cycle
2467920   +          +    -0.36153880127411 * EducationBasic  +     0.23023144658635 *
2467921   +        EducationGraduation  +    -0.06568730318683 * EducationMaster
2467922   +          +    -0.21206913700604 * Marital_StatusDivorced
2467923   +          +     0.58790643614629 * Marital_StatusMarried
2467924   +          +    -0.65995982578062 * Marital_StatusSingle
2467925   +          +     0.49642503732428 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 0.06634316870499 * Education2n_Cycle +
-0.36153880127411 * EducationBasic + 0.23023144658635 * EducationGraduation +
-0.06568730318683 * EducationMaster + -0.21206913700604 * Marital_StatusDivorced +
0.58790643614629 * Marital_StatusMarried + -0.65995982578062 * Marital_StatusSingle +
0.49642503732428 * Marital_StatusTogether ;
2467926   +   H1x1_6  = H1x1_6  +     0.16504024096118 * Education2n_Cycle
2467927   +          +     0.11925867171875 * EducationBasic  +    -0.04213907014732 *
2467928   +        EducationGraduation  +    -0.21389968555475 * EducationMaster
2467929   +          +    -0.05047370516008 * Marital_StatusDivorced
2467930   +          +    -0.23139090963669 * Marital_StatusMarried
2467931   +          +     0.04816197463249 * Marital_StatusSingle
2467932   +          +     0.04977890114896 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + 0.16504024096118 * Education2n_Cycle +
0.11925867171875 * EducationBasic + -0.04213907014732 * EducationGraduation +
-0.21389968555475 * EducationMaster + -0.05047370516008 * Marital_StatusDivorced +
-0.23139090963669 * Marital_StatusMarried + 0.04816197463249 * Marital_StatusSingle +
0.04977890114896 * Marital_StatusTogether ;
2467933   +   H1x1_1  =    -1.90576647346127 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.90576647346127 + H1x1_1 ;
2467934   +   H1x1_2  =     0.32295787429294 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.32295787429294 + H1x1_2 ;
2467935   +   H1x1_3  =     0.75117643107919 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.75117643107919 + H1x1_3 ;
2467936   +   H1x1_4  =      1.2336762751587 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.2336762751587 + H1x1_4 ;
2467937   +   H1x1_5  =    -0.97062317465491 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.97062317465491 + H1x1_5 ;
2467938   +   H1x1_6  =    -1.15756803634408 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -1.15756803634408 + H1x1_6 ;
2467939   +   _EPS = SQRT(CONSTANT('MACEPS')) ;
MPRINT(EM_DIAGRAM):   _EPS = SQRT(CONSTANT('MACEPS')) ;
2467940   +   _REC_EPS = 1/_EPS ;
MPRINT(EM_DIAGRAM):   _REC_EPS = 1/_EPS ;
2467941   +   DROP _REC_EPS _EPS ;
MPRINT(EM_DIAGRAM):   DROP _REC_EPS _EPS ;
2467942   +   IF H1x1_1  < _REC_EPS AND H1x1_1  > - _REC_EPS THEN
2467943   +   H1x1_1  = H1x1_1  * H1x1_1 ;
MPRINT(EM_DIAGRAM):   IF H1x1_1 < _REC_EPS AND H1x1_1 > - _REC_EPS THEN H1x1_1 = H1x1_1 *
H1x1_1 ;
2467944   +   ELSE H1x1_1  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_1 = _REC_EPS ;
2467945   +   IF H1x1_2  < _REC_EPS AND H1x1_2  > - _REC_EPS THEN
2467946   +   H1x1_2  = H1x1_2  * H1x1_2 ;
MPRINT(EM_DIAGRAM):   IF H1x1_2 < _REC_EPS AND H1x1_2 > - _REC_EPS THEN H1x1_2 = H1x1_2 *
H1x1_2 ;
2467947   +   ELSE H1x1_2  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_2 = _REC_EPS ;
2467948   +   IF H1x1_3  < _REC_EPS AND H1x1_3  > - _REC_EPS THEN
2467949   +   H1x1_3  = H1x1_3  * H1x1_3 ;
MPRINT(EM_DIAGRAM):   IF H1x1_3 < _REC_EPS AND H1x1_3 > - _REC_EPS THEN H1x1_3 = H1x1_3 *
H1x1_3 ;
2467950   +   ELSE H1x1_3  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_3 = _REC_EPS ;
2467951   +   IF H1x1_4  < _REC_EPS AND H1x1_4  > - _REC_EPS THEN
2467952   +   H1x1_4  = H1x1_4  * H1x1_4 ;
MPRINT(EM_DIAGRAM):   IF H1x1_4 < _REC_EPS AND H1x1_4 > - _REC_EPS THEN H1x1_4 = H1x1_4 *
H1x1_4 ;
2467953   +   ELSE H1x1_4  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_4 = _REC_EPS ;
2467954   +   IF H1x1_5  < _REC_EPS AND H1x1_5  > - _REC_EPS THEN
2467955   +   H1x1_5  = H1x1_5  * H1x1_5 ;
MPRINT(EM_DIAGRAM):   IF H1x1_5 < _REC_EPS AND H1x1_5 > - _REC_EPS THEN H1x1_5 = H1x1_5 *
H1x1_5 ;
2467956   +   ELSE H1x1_5  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_5 = _REC_EPS ;
2467957   +   IF H1x1_6  < _REC_EPS AND H1x1_6  > - _REC_EPS THEN
2467958   +   H1x1_6  = H1x1_6  * H1x1_6 ;
MPRINT(EM_DIAGRAM):   IF H1x1_6 < _REC_EPS AND H1x1_6 > - _REC_EPS THEN H1x1_6 = H1x1_6 *
H1x1_6 ;
2467959   +   ELSE H1x1_6  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_6 = _REC_EPS ;
2467960   +END;
MPRINT(EM_DIAGRAM):   END;
2467961   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2467962   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2467963   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2467964   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2467965   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2467966   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
2467967   +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
2467968   +END;
MPRINT(EM_DIAGRAM):   END;
2467969   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2467970   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2467971   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2467972   +
2467973   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2467974   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2467975   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2467976   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2467977   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2467978   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2467979   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2467980   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2467981   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2467982   +end;
MPRINT(EM_DIAGRAM):   end;
2467983   +else do;
MPRINT(EM_DIAGRAM):   else do;
2467984   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2467985   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2467986   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2467987   +   end;
MPRINT(EM_DIAGRAM):   end;
2467988   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2467989   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2467990   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2467991   +   end;
MPRINT(EM_DIAGRAM):   end;
2467992   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2467993   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2467994   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2467995   +   end;
MPRINT(EM_DIAGRAM):   end;
2467996   +end;
MPRINT(EM_DIAGRAM):   end;
2467997   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2467998   +   P_DepVar1  =    -0.99830813428318 * H1x1_1  +     1.33495006526712 * H1x1_2
2467999   +          +    -1.37942150026657 * H1x1_3  +     1.22714974922576 * H1x1_4
2468000   +          +     1.73375794385595 * H1x1_5  +     -0.0100306049679 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.99830813428318 * H1x1_1 + 1.33495006526712 * H1x1_2 +
-1.37942150026657 * H1x1_3 + 1.22714974922576 * H1x1_4 + 1.73375794385595 * H1x1_5 +
-0.0100306049679 * H1x1_6 ;
2468001   +   P_DepVar1  =    -1.90393999986167 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.90393999986167 + P_DepVar1 ;
2468002   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2468003   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2468004   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2468005   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2468006   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2468007   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2468008   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2468009   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2468010   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2468011   +END;
MPRINT(EM_DIAGRAM):   END;
2468012   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2468013   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2468014   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2468015   +END;
MPRINT(EM_DIAGRAM):   END;
2468016   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2468017   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2468018   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2468019   +END;
MPRINT(EM_DIAGRAM):   END;
2468020   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2468021   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2468022   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2468023   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2468024   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2468025   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2468026   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2468027   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2468028   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2468029   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2468030   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2468031   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2468032   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2468033   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2468034   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2468035   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2468036   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2468037   +END;
MPRINT(EM_DIAGRAM):   END;
2468038   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2468039   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2468040   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2468041   +drop
2468042   +H1x1_1
2468043   +H1x1_2
2468044   +H1x1_3
2468045   +H1x1_4
2468046   +H1x1_5
2468047   +H1x1_6
2468048   +;
MPRINT(EM_DIAGRAM):   drop H1x1_1 H1x1_2 H1x1_3 H1x1_4 H1x1_5 H1x1_6 ;
2468049   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2468050   +* Renaming variables for AutoNeural11;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural11;
2468051   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2468052   +* Renaming Posterior variables for AutoNeural11;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural11;
2468053   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2468054   +drop AutoNeural11_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural11_P_DepVar1;
2468055   +AutoNeural11_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural11_P_DepVar1 = P_DepVar1;
2468056   +drop AutoNeural11_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural11_P_DepVar0;
2468057   +AutoNeural11_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural11_P_DepVar0 = P_DepVar0;
2468058   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2468059   +* Renaming _WARN_ variable for AutoNeural11;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural11;
2468060   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2468061   +length AutoNeural11_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural11_WARN_ $4;
2468062   +drop AutoNeural11_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural11_WARN_;
2468063   +AutoNeural11_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural11_WARN_ = _WARN_;
2468064   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2468065   +* Ensmbl46: Scoring Code of model 3 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl46: Scoring Code of model 3 of 5;
2468066   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2468067   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2468068   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
2468069   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2468070   +* NODE: AutoNeural12;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural12;
2468071   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2468072   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2468073   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2468074   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2468075   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2468076   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2468077   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2468078   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2468079   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2468080   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2468081   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2468082   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2468083   +LENGTH _WARN_ $4
2468084   +      F_DepVar  $ 12
2468085   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2468086   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2468087   +
2468088   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2468089   +
2468090   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2468091   +
2468092   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2468093   +
2468094   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2468095   +
2468096   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2468097   +
2468098   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2468099   +
2468100   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2468101   +
2468102   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2468103   +
2468104   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2468105   +
2468106   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2468107   +
2468108   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2468109   +
2468110   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2468111   +
2468112   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2468113   +
2468114   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2468115   +
2468116   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2468117   +
2468118   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2468119   +
2468120   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2468121   +
2468122   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2468123   +
2468124   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2468125   +
2468126   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2468127   +
2468128   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2468129   +
2468130   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2468131   +
2468132   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2468133   +
2468134   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2468135   +
2468136   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2468137   +
2468138   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2468139   +
2468140   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2468141   +
2468142   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2468143   +
2468144   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2468145   +
2468146   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2468147   +
2468148   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2468149   +
2468150   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2468151   +
2468152   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2468153   +
2468154   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2468155   +
2468156   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2468157   +
2468158   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2468159   +
2468160   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2468161   +
2468162   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2468163   +
2468164   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2468165   +
2468166   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2468167   +
2468168   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2468169   +
2468170   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
2468171   +
2468172   +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
2468173   +
2468174   +      label H1x1_7 = 'Hidden: H1x1_=7' ;
MPRINT(EM_DIAGRAM):   label H1x1_7 = 'Hidden: H1x1_=7' ;
2468175   +
2468176   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
2468177   +
2468178   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
2468179   +
2468180   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
2468181   +
2468182   +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
2468183   +
2468184   +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
2468185   +
2468186   +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
2468187   +
2468188   +      label H1x2_7 = 'Hidden: H1x2_=7' ;
MPRINT(EM_DIAGRAM):   label H1x2_7 = 'Hidden: H1x2_=7' ;
2468189   +
2468190   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2468191   +
2468192   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2468193   +
2468194   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2468195   +
2468196   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2468197   +
2468198   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2468199   +
2468200   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2468201   +
2468202   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2468203   +
2468204   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2468205   +
2468206   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2468207   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2468208   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2468209   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2468210   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2468211   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2468212   +end;
MPRINT(EM_DIAGRAM):   end;
2468213   +else do;
MPRINT(EM_DIAGRAM):   else do;
2468214   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2468215   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2468216   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2468217   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2468218   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2468219   +   end;
MPRINT(EM_DIAGRAM):   end;
2468220   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2468221   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2468222   +   end;
MPRINT(EM_DIAGRAM):   end;
2468223   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2468224   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2468225   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2468226   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2468227   +   end;
MPRINT(EM_DIAGRAM):   end;
2468228   +end;
MPRINT(EM_DIAGRAM):   end;
2468229   +
2468230   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2468231   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2468232   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2468233   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2468234   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2468235   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2468236   +end;
MPRINT(EM_DIAGRAM):   end;
2468237   +else do;
MPRINT(EM_DIAGRAM):   else do;
2468238   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2468239   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2468240   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2468241   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2468242   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2468243   +   end;
MPRINT(EM_DIAGRAM):   end;
2468244   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2468245   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2468246   +   end;
MPRINT(EM_DIAGRAM):   end;
2468247   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2468248   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2468249   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2468250   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2468251   +   end;
MPRINT(EM_DIAGRAM):   end;
2468252   +end;
MPRINT(EM_DIAGRAM):   end;
2468253   +
2468254   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2468255   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2468256   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2468257   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2468258   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2468259   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2468260   +end;
MPRINT(EM_DIAGRAM):   end;
2468261   +else do;
MPRINT(EM_DIAGRAM):   else do;
2468262   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2468263   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2468264   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2468265   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2468266   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2468267   +   end;
MPRINT(EM_DIAGRAM):   end;
2468268   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2468269   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2468270   +   end;
MPRINT(EM_DIAGRAM):   end;
2468271   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2468272   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2468273   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2468274   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2468275   +   end;
MPRINT(EM_DIAGRAM):   end;
2468276   +end;
MPRINT(EM_DIAGRAM):   end;
2468277   +
2468278   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2468279   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2468280   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2468281   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2468282   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2468283   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2468284   +end;
MPRINT(EM_DIAGRAM):   end;
2468285   +else do;
MPRINT(EM_DIAGRAM):   else do;
2468286   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2468287   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2468288   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2468289   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2468290   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2468291   +   end;
MPRINT(EM_DIAGRAM):   end;
2468292   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2468293   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2468294   +   end;
MPRINT(EM_DIAGRAM):   end;
2468295   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2468296   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2468297   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2468298   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2468299   +   end;
MPRINT(EM_DIAGRAM):   end;
2468300   +end;
MPRINT(EM_DIAGRAM):   end;
2468301   +
2468302   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2468303   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2468304   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2468305   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2468306   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2468307   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2468308   +end;
MPRINT(EM_DIAGRAM):   end;
2468309   +else do;
MPRINT(EM_DIAGRAM):   else do;
2468310   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2468311   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2468312   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2468313   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2468314   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2468315   +   end;
MPRINT(EM_DIAGRAM):   end;
2468316   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2468317   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2468318   +   end;
MPRINT(EM_DIAGRAM):   end;
2468319   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2468320   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2468321   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2468322   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2468323   +   end;
MPRINT(EM_DIAGRAM):   end;
2468324   +end;
MPRINT(EM_DIAGRAM):   end;
2468325   +
2468326   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2468327   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2468328   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2468329   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2468330   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2468331   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2468332   +end;
MPRINT(EM_DIAGRAM):   end;
2468333   +else do;
MPRINT(EM_DIAGRAM):   else do;
2468334   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2468335   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2468336   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2468337   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2468338   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2468339   +   end;
MPRINT(EM_DIAGRAM):   end;
2468340   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2468341   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2468342   +   end;
MPRINT(EM_DIAGRAM):   end;
2468343   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2468344   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2468345   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2468346   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2468347   +   end;
MPRINT(EM_DIAGRAM):   end;
2468348   +end;
MPRINT(EM_DIAGRAM):   end;
2468349   +
2468350   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2468351   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2468352   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2468353   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2468354   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2468355   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2468356   +end;
MPRINT(EM_DIAGRAM):   end;
2468357   +else do;
MPRINT(EM_DIAGRAM):   else do;
2468358   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2468359   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2468360   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2468361   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2468362   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2468363   +   end;
MPRINT(EM_DIAGRAM):   end;
2468364   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2468365   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2468366   +   end;
MPRINT(EM_DIAGRAM):   end;
2468367   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2468368   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2468369   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2468370   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2468371   +   end;
MPRINT(EM_DIAGRAM):   end;
2468372   +end;
MPRINT(EM_DIAGRAM):   end;
2468373   +
2468374   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2468375   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
2468376   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2468377   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2468378   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2468379   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2468380   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2468381   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2468382   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2468383   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2468384   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2468385   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2468386   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2468387   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2468388   +end;
MPRINT(EM_DIAGRAM):   end;
2468389   +else do;
MPRINT(EM_DIAGRAM):   else do;
2468390   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2468391   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2468392   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2468393   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2468394   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2468395   +   end;
MPRINT(EM_DIAGRAM):   end;
2468396   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2468397   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2468398   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2468399   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2468400   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2468401   +   end;
MPRINT(EM_DIAGRAM):   end;
2468402   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2468403   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2468404   +   end;
MPRINT(EM_DIAGRAM):   end;
2468405   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2468406   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2468407   +   end;
MPRINT(EM_DIAGRAM):   end;
2468408   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2468409   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2468410   +   end;
MPRINT(EM_DIAGRAM):   end;
2468411   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2468412   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2468413   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2468414   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2468415   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2468416   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2468417   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2468418   +   end;
MPRINT(EM_DIAGRAM):   end;
2468419   +end;
MPRINT(EM_DIAGRAM):   end;
2468420   +
2468421   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2468422   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2468423   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
2468424   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2468425   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2468426   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2468427   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2468428   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2468429   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2468430   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2468431   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2468432   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2468433   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2468434   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2468435   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2468436   +end;
MPRINT(EM_DIAGRAM):   end;
2468437   +else do;
MPRINT(EM_DIAGRAM):   else do;
2468438   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2468439   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2468440   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2468441   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2468442   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2468443   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2468444   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2468445   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2468446   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2468447   +         end;
MPRINT(EM_DIAGRAM):   end;
2468448   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2468449   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2468450   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2468451   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2468452   +            end;
MPRINT(EM_DIAGRAM):   end;
2468453   +         end;
MPRINT(EM_DIAGRAM):   end;
2468454   +      end;
MPRINT(EM_DIAGRAM):   end;
2468455   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2468456   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2468457   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2468458   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2468459   +         end;
MPRINT(EM_DIAGRAM):   end;
2468460   +      end;
MPRINT(EM_DIAGRAM):   end;
2468461   +   end;
MPRINT(EM_DIAGRAM):   end;
2468462   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2468463   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2468464   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2468465   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2468466   +      end;
MPRINT(EM_DIAGRAM):   end;
2468467   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2468468   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2468469   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2468470   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2468471   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2468472   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2468473   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2468474   +         end;
MPRINT(EM_DIAGRAM):   end;
2468475   +      end;
MPRINT(EM_DIAGRAM):   end;
2468476   +   end;
MPRINT(EM_DIAGRAM):   end;
2468477   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2468478   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2468479   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2468480   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2468481   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2468482   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2468483   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2468484   +   end;
MPRINT(EM_DIAGRAM):   end;
2468485   +end;
MPRINT(EM_DIAGRAM):   end;
2468486   +
2468487   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2468488   +*** Checking missing input Interval
2468489   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2468490   +
2468491   +IF NMISS(
2468492   +   AcceptedCmpTotal ,
2468493   +   Age ,
2468494   +   Frq ,
2468495   +   Income ,
2468496   +   Kidhome ,
2468497   +   Mnt ,
2468498   +   MntFishProducts ,
2468499   +   MntFruits ,
2468500   +   MntGoldProds ,
2468501   +   MntMeatProducts ,
2468502   +   MntSweetProducts ,
2468503   +   MntWines ,
2468504   +   MonthsAsCustomer ,
2468505   +   NumCatalogPurchases ,
2468506   +   NumDealsPurchases ,
2468507   +   NumDistPurchases ,
2468508   +   NumStorePurchases ,
2468509   +   NumWebPurchases ,
2468510   +   NumWebVisitsMonth ,
2468511   +   RFMstat ,
2468512   +   RMntFrq ,
2468513   +   Recency ,
2468514   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
2468515   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2468516   +
2468517   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2468518   +END;
MPRINT(EM_DIAGRAM):   END;
2468519   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2468520   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2468521   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2468522   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2468523   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2468524   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2468525   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2468526   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2468527   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2468528   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2468529   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2468530   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2468531   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2468532   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2468533   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2468534   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2468535   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2468536   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2468537   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2468538   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2468539   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2468540   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2468541   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
2468542   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2468543   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2468544   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2468545   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2468546   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2468547   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2468548   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2468549   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2468550   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2468551   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2468552   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2468553   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2468554   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2468555   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2468556   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2468557   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2468558   +END;
MPRINT(EM_DIAGRAM):   END;
2468559   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2468560   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2468561   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2468562   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2468563   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2468564   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2468565   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2468566   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2468567   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2468568   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2468569   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2468570   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2468571   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2468572   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2468573   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2468574   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2468575   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2468576   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2468577   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2468578   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2468579   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2468580   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2468581   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
2468582   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2468583   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2468584   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2468585   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2468586   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2468587   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2468588   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2468589   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2468590   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2468591   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2468592   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
2468593   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2468594   +   ELSE S_NumCatalogPurchases
2468595   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2468596   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2468597   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2468598   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2468599   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2468600   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2468601   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2468602   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2468603   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2468604   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2468605   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2468606   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2468607   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2468608   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2468609   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2468610   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2468611   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2468612   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2468613   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2468614   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2468615   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2468616   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2468617   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2468618   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2468619   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2468620   +END;
MPRINT(EM_DIAGRAM):   END;
2468621   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2468622   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2468623   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2468624   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2468625   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2468626   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2468627   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2468628   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2468629   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2468630   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2468631   +   H1x1_1  =    -0.08478534961354 * S_AcceptedCmpTotal
2468632   +          +     0.21528166003219 * S_Age  +    -0.16079737422774 * S_Frq
2468633   +          +     0.04922044955183 * S_Income  +     0.06245849112135 *
2468634   +        S_Kidhome  +    -0.12820970008154 * S_Mnt  +    -0.00676959308959 *
2468635   +        S_MntFishProducts  +    -0.20367403957375 * S_MntFruits
2468636   +          +    -0.06459558558968 * S_MntGoldProds  +     0.01557669100416 *
2468637   +        S_MntMeatProducts  +    -0.16342003924117 * S_MntSweetProducts
2468638   +          +     0.34676276369853 * S_MntWines  +    -0.08454570225616 *
2468639   +        S_MonthsAsCustomer  +    -0.00318885387905 * S_NumCatalogPurchases
2468640   +          +      0.1112677116841 * S_NumDealsPurchases
2468641   +          +     0.01563584187072 * S_NumDistPurchases
2468642   +          +     0.19193969522995 * S_NumStorePurchases
2468643   +          +      0.3133556199984 * S_NumWebPurchases
2468644   +          +    -0.21884874785716 * S_NumWebVisitsMonth
2468645   +          +     0.08478875792216 * S_RFMstat  +     0.05964414665285 *
2468646   +        S_RMntFrq  +    -0.12595000497726 * S_Recency
2468647   +          +     -0.1238719414537 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.08478534961354 * S_AcceptedCmpTotal + 0.21528166003219 *
S_Age + -0.16079737422774 * S_Frq + 0.04922044955183 * S_Income + 0.06245849112135 * S_Kidhome
+ -0.12820970008154 * S_Mnt + -0.00676959308959 * S_MntFishProducts + -0.20367403957375 *
S_MntFruits + -0.06459558558968 * S_MntGoldProds + 0.01557669100416 * S_MntMeatProducts +
-0.16342003924117 * S_MntSweetProducts + 0.34676276369853 * S_MntWines + -0.08454570225616 *
S_MonthsAsCustomer + -0.00318885387905 * S_NumCatalogPurchases + 0.1112677116841 *
S_NumDealsPurchases + 0.01563584187072 * S_NumDistPurchases + 0.19193969522995 *
S_NumStorePurchases + 0.3133556199984 * S_NumWebPurchases + -0.21884874785716 *
S_NumWebVisitsMonth + 0.08478875792216 * S_RFMstat + 0.05964414665285 * S_RMntFrq +
-0.12595000497726 * S_Recency + -0.1238719414537 * S_Teenhome ;
2468648   +   H1x1_2  =     0.20807487357943 * S_AcceptedCmpTotal
2468649   +          +    -0.27223051908987 * S_Age  +     0.28649391533674 * S_Frq
2468650   +          +     0.46493719675068 * S_Income  +     0.10180542910079 *
2468651   +        S_Kidhome  +    -0.19573056673819 * S_Mnt  +    -0.05332725327514 *
2468652   +        S_MntFishProducts  +    -0.28610692329433 * S_MntFruits
2468653   +          +    -0.13417237194849 * S_MntGoldProds  +     0.45697707494335 *
2468654   +        S_MntMeatProducts  +    -0.28280545785477 * S_MntSweetProducts
2468655   +          +    -0.13234920069688 * S_MntWines  +     -0.2710938018651 *
2468656   +        S_MonthsAsCustomer  +     0.31174284041905 * S_NumCatalogPurchases
2468657   +          +     0.30225032753275 * S_NumDealsPurchases
2468658   +          +     0.33833359923595 * S_NumDistPurchases
2468659   +          +    -0.20255599575849 * S_NumStorePurchases
2468660   +          +    -0.12040071168942 * S_NumWebPurchases
2468661   +          +    -0.12407090307061 * S_NumWebVisitsMonth
2468662   +          +    -0.05688936259515 * S_RFMstat  +     0.15514736649245 *
2468663   +        S_RMntFrq  +     0.00838555462657 * S_Recency
2468664   +          +     0.04609426861136 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.20807487357943 * S_AcceptedCmpTotal + -0.27223051908987 *
S_Age + 0.28649391533674 * S_Frq + 0.46493719675068 * S_Income + 0.10180542910079 * S_Kidhome
+ -0.19573056673819 * S_Mnt + -0.05332725327514 * S_MntFishProducts + -0.28610692329433 *
S_MntFruits + -0.13417237194849 * S_MntGoldProds + 0.45697707494335 * S_MntMeatProducts +
-0.28280545785477 * S_MntSweetProducts + -0.13234920069688 * S_MntWines + -0.2710938018651 *
S_MonthsAsCustomer + 0.31174284041905 * S_NumCatalogPurchases + 0.30225032753275 *
S_NumDealsPurchases + 0.33833359923595 * S_NumDistPurchases + -0.20255599575849 *
S_NumStorePurchases + -0.12040071168942 * S_NumWebPurchases + -0.12407090307061 *
S_NumWebVisitsMonth + -0.05688936259515 * S_RFMstat + 0.15514736649245 * S_RMntFrq +
0.00838555462657 * S_Recency + 0.04609426861136 * S_Teenhome ;
2468665   +   H1x1_3  =    -0.30541463116928 * S_AcceptedCmpTotal
2468666   +          +    -0.01746117216025 * S_Age  +    -0.44156473334329 * S_Frq
2468667   +          +    -0.51952426304193 * S_Income  +     0.20419921255777 *
2468668   +        S_Kidhome  +    -0.18174316707953 * S_Mnt  +    -0.03813675536406 *
2468669   +        S_MntFishProducts  +     -0.0959023413712 * S_MntFruits
2468670   +          +     0.12724081783278 * S_MntGoldProds  +    -0.07639148541426 *
2468671   +        S_MntMeatProducts  +     -0.0797214413833 * S_MntSweetProducts
2468672   +          +    -0.57705931875808 * S_MntWines  +    -0.12638551201991 *
2468673   +        S_MonthsAsCustomer  +    -0.21854676704549 * S_NumCatalogPurchases
2468674   +          +     0.16792903091627 * S_NumDealsPurchases
2468675   +          +    -0.37408945626745 * S_NumDistPurchases
2468676   +          +    -0.18067262995566 * S_NumStorePurchases
2468677   +          +     0.21192146789881 * S_NumWebPurchases
2468678   +          +    -0.23547702310669 * S_NumWebVisitsMonth
2468679   +          +    -0.02272089758813 * S_RFMstat  +    -0.16409330281075 *
2468680   +        S_RMntFrq  +     0.45021846112946 * S_Recency
2468681   +          +     0.32988735727394 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.30541463116928 * S_AcceptedCmpTotal + -0.01746117216025 *
S_Age + -0.44156473334329 * S_Frq + -0.51952426304193 * S_Income + 0.20419921255777 *
S_Kidhome + -0.18174316707953 * S_Mnt + -0.03813675536406 * S_MntFishProducts +
-0.0959023413712 * S_MntFruits + 0.12724081783278 * S_MntGoldProds + -0.07639148541426 *
S_MntMeatProducts + -0.0797214413833 * S_MntSweetProducts + -0.57705931875808 * S_MntWines +
-0.12638551201991 * S_MonthsAsCustomer + -0.21854676704549 * S_NumCatalogPurchases +
0.16792903091627 * S_NumDealsPurchases + -0.37408945626745 * S_NumDistPurchases +
-0.18067262995566 * S_NumStorePurchases + 0.21192146789881 * S_NumWebPurchases +
-0.23547702310669 * S_NumWebVisitsMonth + -0.02272089758813 * S_RFMstat + -0.16409330281075 *
S_RMntFrq + 0.45021846112946 * S_Recency + 0.32988735727394 * S_Teenhome ;
2468682   +   H1x1_4  =     0.05205198916717 * S_AcceptedCmpTotal
2468683   +          +     0.25568653619739 * S_Age  +    -0.31037252146959 * S_Frq
2468684   +          +     0.42636025358982 * S_Income  +    -0.24453708980866 *
2468685   +        S_Kidhome  +    -0.07832530945892 * S_Mnt  +    -0.48332124476182 *
2468686   +        S_MntFishProducts  +    -0.13932879119138 * S_MntFruits
2468687   +          +      0.1984121566988 * S_MntGoldProds  +     1.14965897015972 *
2468688   +        S_MntMeatProducts  +     0.07027485457428 * S_MntSweetProducts
2468689   +          +    -0.56598097754046 * S_MntWines  +     0.07317190938075 *
2468690   +        S_MonthsAsCustomer  +       0.075756987983 * S_NumCatalogPurchases
2468691   +          +     0.29407429399136 * S_NumDealsPurchases
2468692   +          +     0.01610745252195 * S_NumDistPurchases
2468693   +          +    -0.17767939085628 * S_NumStorePurchases
2468694   +          +    -0.15168958538637 * S_NumWebPurchases
2468695   +          +     0.17433622143988 * S_NumWebVisitsMonth
2468696   +          +     0.11635602973993 * S_RFMstat  +     0.32632751843433 *
2468697   +        S_RMntFrq  +    -0.24758483374458 * S_Recency
2468698   +          +    -0.31468291567479 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.05205198916717 * S_AcceptedCmpTotal + 0.25568653619739 *
S_Age + -0.31037252146959 * S_Frq + 0.42636025358982 * S_Income + -0.24453708980866 *
S_Kidhome + -0.07832530945892 * S_Mnt + -0.48332124476182 * S_MntFishProducts +
-0.13932879119138 * S_MntFruits + 0.1984121566988 * S_MntGoldProds + 1.14965897015972 *
S_MntMeatProducts + 0.07027485457428 * S_MntSweetProducts + -0.56598097754046 * S_MntWines +
0.07317190938075 * S_MonthsAsCustomer + 0.075756987983 * S_NumCatalogPurchases +
0.29407429399136 * S_NumDealsPurchases + 0.01610745252195 * S_NumDistPurchases +
-0.17767939085628 * S_NumStorePurchases + -0.15168958538637 * S_NumWebPurchases +
0.17433622143988 * S_NumWebVisitsMonth + 0.11635602973993 * S_RFMstat + 0.32632751843433 *
S_RMntFrq + -0.24758483374458 * S_Recency + -0.31468291567479 * S_Teenhome ;
2468699   +   H1x1_5  =    -0.59657492903543 * S_AcceptedCmpTotal
2468700   +          +     0.23513672763458 * S_Age  +    -0.14882104210954 * S_Frq
2468701   +          +    -0.07762660201035 * S_Income  +     0.01424651904783 *
2468702   +        S_Kidhome  +     0.18748607813081 * S_Mnt  +     0.11088464897095 *
2468703   +        S_MntFishProducts  +    -0.10064450211557 * S_MntFruits
2468704   +          +     0.11161391354421 * S_MntGoldProds  +    -1.36345407290644 *
2468705   +        S_MntMeatProducts  +     0.04868729717044 * S_MntSweetProducts
2468706   +          +     0.80284342329654 * S_MntWines  +     -0.0179539622492 *
2468707   +        S_MonthsAsCustomer  +    -0.60051908798715 * S_NumCatalogPurchases
2468708   +          +    -0.37976451362108 * S_NumDealsPurchases
2468709   +          +    -0.17027731520801 * S_NumDistPurchases
2468710   +          +     0.59849493667087 * S_NumStorePurchases
2468711   +          +     0.65481480560301 * S_NumWebPurchases
2468712   +          +    -0.68253224576609 * S_NumWebVisitsMonth
2468713   +          +    -0.16723490165629 * S_RFMstat  +    -0.10533797887644 *
2468714   +        S_RMntFrq  +     0.81382723915873 * S_Recency
2468715   +          +     0.06049401205856 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.59657492903543 * S_AcceptedCmpTotal + 0.23513672763458 *
S_Age + -0.14882104210954 * S_Frq + -0.07762660201035 * S_Income + 0.01424651904783 *
S_Kidhome + 0.18748607813081 * S_Mnt + 0.11088464897095 * S_MntFishProducts +
-0.10064450211557 * S_MntFruits + 0.11161391354421 * S_MntGoldProds + -1.36345407290644 *
S_MntMeatProducts + 0.04868729717044 * S_MntSweetProducts + 0.80284342329654 * S_MntWines +
-0.0179539622492 * S_MonthsAsCustomer + -0.60051908798715 * S_NumCatalogPurchases +
-0.37976451362108 * S_NumDealsPurchases + -0.17027731520801 * S_NumDistPurchases +
0.59849493667087 * S_NumStorePurchases + 0.65481480560301 * S_NumWebPurchases +
-0.68253224576609 * S_NumWebVisitsMonth + -0.16723490165629 * S_RFMstat + -0.10533797887644 *
S_RMntFrq + 0.81382723915873 * S_Recency + 0.06049401205856 * S_Teenhome ;
2468716   +   H1x1_6  =    -0.07547841798202 * S_AcceptedCmpTotal
2468717   +          +     0.22445278254589 * S_Age  +    -0.26357481075143 * S_Frq
2468718   +          +     0.06894154144261 * S_Income  +     0.20713236126681 *
2468719   +        S_Kidhome  +    -0.14103612934526 * S_Mnt  +     0.36334508557452 *
2468720   +        S_MntFishProducts  +    -0.20862425337296 * S_MntFruits
2468721   +          +    -0.29089690099273 * S_MntGoldProds  +     0.11336893090527 *
2468722   +        S_MntMeatProducts  +    -0.13547374281924 * S_MntSweetProducts
2468723   +          +     0.02228828195539 * S_MntWines  +    -0.19257650420334 *
2468724   +        S_MonthsAsCustomer  +      0.1365526319824 * S_NumCatalogPurchases
2468725   +          +    -0.07686699131623 * S_NumDealsPurchases
2468726   +          +    -0.07220460738926 * S_NumDistPurchases
2468727   +          +    -0.06554027468389 * S_NumStorePurchases
2468728   +          +     0.10422838158001 * S_NumWebPurchases
2468729   +          +    -0.03858550147892 * S_NumWebVisitsMonth
2468730   +          +    -0.06397448441373 * S_RFMstat  +     0.21747838287147 *
2468731   +        S_RMntFrq  +     0.24839313159913 * S_Recency
2468732   +          +    -0.06317317698653 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -0.07547841798202 * S_AcceptedCmpTotal + 0.22445278254589 *
S_Age + -0.26357481075143 * S_Frq + 0.06894154144261 * S_Income + 0.20713236126681 * S_Kidhome
+ -0.14103612934526 * S_Mnt + 0.36334508557452 * S_MntFishProducts + -0.20862425337296 *
S_MntFruits + -0.29089690099273 * S_MntGoldProds + 0.11336893090527 * S_MntMeatProducts +
-0.13547374281924 * S_MntSweetProducts + 0.02228828195539 * S_MntWines + -0.19257650420334 *
S_MonthsAsCustomer + 0.1365526319824 * S_NumCatalogPurchases + -0.07686699131623 *
S_NumDealsPurchases + -0.07220460738926 * S_NumDistPurchases + -0.06554027468389 *
S_NumStorePurchases + 0.10422838158001 * S_NumWebPurchases + -0.03858550147892 *
S_NumWebVisitsMonth + -0.06397448441373 * S_RFMstat + 0.21747838287147 * S_RMntFrq +
0.24839313159913 * S_Recency + -0.06317317698653 * S_Teenhome ;
2468733   +   H1x1_7  =    -0.08604903695444 * S_AcceptedCmpTotal
2468734   +          +    -0.14807437541992 * S_Age  +     0.01466157584549 * S_Frq
2468735   +          +    -0.09883966180507 * S_Income  +     0.51992566778352 *
2468736   +        S_Kidhome  +     0.29795006703636 * S_Mnt  +    -0.08922020500011 *
2468737   +        S_MntFishProducts  +     0.19836834402079 * S_MntFruits
2468738   +          +    -0.11292241468378 * S_MntGoldProds  +       0.584464452194 *
2468739   +        S_MntMeatProducts  +     0.22625326024073 * S_MntSweetProducts
2468740   +          +     0.24074129944382 * S_MntWines  +     0.13538906557527 *
2468741   +        S_MonthsAsCustomer  +    -0.01228250248922 * S_NumCatalogPurchases
2468742   +          +    -0.07920122387563 * S_NumDealsPurchases
2468743   +          +      0.3649244061347 * S_NumDistPurchases
2468744   +          +     0.36475853688403 * S_NumStorePurchases
2468745   +          +     0.02153991404063 * S_NumWebPurchases
2468746   +          +    -0.94080669139388 * S_NumWebVisitsMonth
2468747   +          +     0.24853677977494 * S_RFMstat  +     0.37015183933951 *
2468748   +        S_RMntFrq  +      0.6724157721663 * S_Recency
2468749   +          +      0.1615471643866 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_7 = -0.08604903695444 * S_AcceptedCmpTotal + -0.14807437541992 *
S_Age + 0.01466157584549 * S_Frq + -0.09883966180507 * S_Income + 0.51992566778352 * S_Kidhome
+ 0.29795006703636 * S_Mnt + -0.08922020500011 * S_MntFishProducts + 0.19836834402079 *
S_MntFruits + -0.11292241468378 * S_MntGoldProds + 0.584464452194 * S_MntMeatProducts +
0.22625326024073 * S_MntSweetProducts + 0.24074129944382 * S_MntWines + 0.13538906557527 *
S_MonthsAsCustomer + -0.01228250248922 * S_NumCatalogPurchases + -0.07920122387563 *
S_NumDealsPurchases + 0.3649244061347 * S_NumDistPurchases + 0.36475853688403 *
S_NumStorePurchases + 0.02153991404063 * S_NumWebPurchases + -0.94080669139388 *
S_NumWebVisitsMonth + 0.24853677977494 * S_RFMstat + 0.37015183933951 * S_RMntFrq +
0.6724157721663 * S_Recency + 0.1615471643866 * S_Teenhome ;
2468750   +   H1x1_1  = H1x1_1  +     0.04431608362128 * AcceptedCmp10
2468751   +          +       0.145592087795 * AcceptedCmp20  +    -0.18972867139938 *
2468752   +        AcceptedCmp30  +     0.11297731320888 * AcceptedCmp40
2468753   +          +     0.15203974410995 * AcceptedCmp50  +     0.05130421316428 *
2468754   +        Complain0  +     0.33576036450343 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.04431608362128 * AcceptedCmp10 + 0.145592087795 *
AcceptedCmp20 + -0.18972867139938 * AcceptedCmp30 + 0.11297731320888 * AcceptedCmp40 +
0.15203974410995 * AcceptedCmp50 + 0.05130421316428 * Complain0 + 0.33576036450343 *
HigherEducationBinary0 ;
2468755   +   H1x1_2  = H1x1_2  +    -0.05495742609855 * AcceptedCmp10
2468756   +          +    -0.08873650760176 * AcceptedCmp20  +    -0.16380549867313 *
2468757   +        AcceptedCmp30  +    -0.24495261884932 * AcceptedCmp40
2468758   +          +    -0.22199506896148 * AcceptedCmp50  +       0.149484615172 *
2468759   +        Complain0  +     0.01091791142552 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.05495742609855 * AcceptedCmp10 + -0.08873650760176
* AcceptedCmp20 + -0.16380549867313 * AcceptedCmp30 + -0.24495261884932 * AcceptedCmp40 +
-0.22199506896148 * AcceptedCmp50 + 0.149484615172 * Complain0 + 0.01091791142552 *
HigherEducationBinary0 ;
2468760   +   H1x1_3  = H1x1_3  +     0.03473702421341 * AcceptedCmp10
2468761   +          +    -0.11226718065217 * AcceptedCmp20  +     0.19024579384296 *
2468762   +        AcceptedCmp30  +     0.15478548865598 * AcceptedCmp40
2468763   +          +     0.15222823671897 * AcceptedCmp50  +     0.07713012834947 *
2468764   +        Complain0  +    -0.18741708707661 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.03473702421341 * AcceptedCmp10 + -0.11226718065217 *
AcceptedCmp20 + 0.19024579384296 * AcceptedCmp30 + 0.15478548865598 * AcceptedCmp40 +
0.15222823671897 * AcceptedCmp50 + 0.07713012834947 * Complain0 + -0.18741708707661 *
HigherEducationBinary0 ;
2468765   +   H1x1_4  = H1x1_4  +    -0.25622127302429 * AcceptedCmp10
2468766   +          +    -0.39059103518073 * AcceptedCmp20  +    -0.29716603631807 *
2468767   +        AcceptedCmp30  +    -0.20875694971526 * AcceptedCmp40
2468768   +          +    -0.35128787139073 * AcceptedCmp50  +    -0.28848733462386 *
2468769   +        Complain0  +      0.4276503747649 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.25622127302429 * AcceptedCmp10 + -0.39059103518073
* AcceptedCmp20 + -0.29716603631807 * AcceptedCmp30 + -0.20875694971526 * AcceptedCmp40 +
-0.35128787139073 * AcceptedCmp50 + -0.28848733462386 * Complain0 + 0.4276503747649 *
HigherEducationBinary0 ;
2468770   +   H1x1_5  = H1x1_5  +    -0.06574875851088 * AcceptedCmp10
2468771   +          +    -0.27375195259265 * AcceptedCmp20  +     -0.2740681662293 *
2468772   +        AcceptedCmp30  +    -0.14697156898736 * AcceptedCmp40
2468773   +          +     0.17684649468835 * AcceptedCmp50  +    -0.09979172944646 *
2468774   +        Complain0  +     0.38986664202197 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.06574875851088 * AcceptedCmp10 + -0.27375195259265
* AcceptedCmp20 + -0.2740681662293 * AcceptedCmp30 + -0.14697156898736 * AcceptedCmp40 +
0.17684649468835 * AcceptedCmp50 + -0.09979172944646 * Complain0 + 0.38986664202197 *
HigherEducationBinary0 ;
2468775   +   H1x1_6  = H1x1_6  +     0.08696678529441 * AcceptedCmp10
2468776   +          +     0.09467543942215 * AcceptedCmp20  +     0.04586779705477 *
2468777   +        AcceptedCmp30  +    -0.12591921836379 * AcceptedCmp40
2468778   +          +     0.20150138392895 * AcceptedCmp50  +     0.27764282700214 *
2468779   +        Complain0  +     0.13985738522066 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + 0.08696678529441 * AcceptedCmp10 + 0.09467543942215 *
AcceptedCmp20 + 0.04586779705477 * AcceptedCmp30 + -0.12591921836379 * AcceptedCmp40 +
0.20150138392895 * AcceptedCmp50 + 0.27764282700214 * Complain0 + 0.13985738522066 *
HigherEducationBinary0 ;
2468780   +   H1x1_7  = H1x1_7  +    -0.10455069401218 * AcceptedCmp10
2468781   +          +      0.1311831941372 * AcceptedCmp20  +     0.17844209104604 *
2468782   +        AcceptedCmp30  +     0.19406707592815 * AcceptedCmp40
2468783   +          +    -0.00068155012319 * AcceptedCmp50  +     0.13245364846536 *
2468784   +        Complain0  +    -0.05165256160872 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_7 = H1x1_7 + -0.10455069401218 * AcceptedCmp10 + 0.1311831941372 *
AcceptedCmp20 + 0.17844209104604 * AcceptedCmp30 + 0.19406707592815 * AcceptedCmp40 +
-0.00068155012319 * AcceptedCmp50 + 0.13245364846536 * Complain0 + -0.05165256160872 *
HigherEducationBinary0 ;
2468785   +   H1x1_1  = H1x1_1  +     0.28967939808759 * Education2n_Cycle
2468786   +          +    -0.15795056374781 * EducationBasic  +    -0.00649803471307 *
2468787   +        EducationGraduation  +     0.19520715924532 * EducationMaster
2468788   +          +     0.07744097241553 * Marital_StatusDivorced
2468789   +          +     -0.0247463100385 * Marital_StatusMarried
2468790   +          +     0.05804915234573 * Marital_StatusSingle
2468791   +          +    -0.08320125047871 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.28967939808759 * Education2n_Cycle +
-0.15795056374781 * EducationBasic + -0.00649803471307 * EducationGraduation +
0.19520715924532 * EducationMaster + 0.07744097241553 * Marital_StatusDivorced +
-0.0247463100385 * Marital_StatusMarried + 0.05804915234573 * Marital_StatusSingle +
-0.08320125047871 * Marital_StatusTogether ;
2468792   +   H1x1_2  = H1x1_2  +     0.12524444422085 * Education2n_Cycle
2468793   +          +    -0.30278286924729 * EducationBasic  +     0.37480827366421 *
2468794   +        EducationGraduation  +     0.34209136290694 * EducationMaster
2468795   +          +     0.01390668926269 * Marital_StatusDivorced
2468796   +          +     0.01136282152074 * Marital_StatusMarried
2468797   +          +     0.12450246418789 * Marital_StatusSingle
2468798   +          +     -0.1576148519872 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.12524444422085 * Education2n_Cycle +
-0.30278286924729 * EducationBasic + 0.37480827366421 * EducationGraduation + 0.34209136290694
* EducationMaster + 0.01390668926269 * Marital_StatusDivorced + 0.01136282152074 *
Marital_StatusMarried + 0.12450246418789 * Marital_StatusSingle + -0.1576148519872 *
Marital_StatusTogether ;
2468799   +   H1x1_3  = H1x1_3  +    -0.14589041643593 * Education2n_Cycle
2468800   +          +    -0.15691118816463 * EducationBasic  +      0.1993616073183 *
2468801   +        EducationGraduation  +     0.02862010255145 * EducationMaster
2468802   +          +    -0.19133456931879 * Marital_StatusDivorced
2468803   +          +     0.56263566654996 * Marital_StatusMarried
2468804   +          +    -0.42172822038882 * Marital_StatusSingle
2468805   +          +     0.42023140643292 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.14589041643593 * Education2n_Cycle +
-0.15691118816463 * EducationBasic + 0.1993616073183 * EducationGraduation + 0.02862010255145
* EducationMaster + -0.19133456931879 * Marital_StatusDivorced + 0.56263566654996 *
Marital_StatusMarried + -0.42172822038882 * Marital_StatusSingle + 0.42023140643292 *
Marital_StatusTogether ;
2468806   +   H1x1_4  = H1x1_4  +     0.10038585978656 * Education2n_Cycle
2468807   +          +    -0.11388609002984 * EducationBasic  +    -0.14980553500983 *
2468808   +        EducationGraduation  +    -0.07646595330369 * EducationMaster
2468809   +          +    -0.19871205065609 * Marital_StatusDivorced
2468810   +          +    -0.14730795681603 * Marital_StatusMarried
2468811   +          +     0.05055432510362 * Marital_StatusSingle
2468812   +          +     0.06558965292395 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.10038585978656 * Education2n_Cycle +
-0.11388609002984 * EducationBasic + -0.14980553500983 * EducationGraduation +
-0.07646595330369 * EducationMaster + -0.19871205065609 * Marital_StatusDivorced +
-0.14730795681603 * Marital_StatusMarried + 0.05055432510362 * Marital_StatusSingle +
0.06558965292395 * Marital_StatusTogether ;
2468813   +   H1x1_5  = H1x1_5  +      0.0015835307855 * Education2n_Cycle
2468814   +          +    -0.22658746797638 * EducationBasic  +    -0.03445982386977 *
2468815   +        EducationGraduation  +     0.11375378192685 * EducationMaster
2468816   +          +    -0.35623807358995 * Marital_StatusDivorced
2468817   +          +     0.30324726283965 * Marital_StatusMarried
2468818   +          +    -0.18561093467927 * Marital_StatusSingle
2468819   +          +       0.395424582152 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 0.0015835307855 * Education2n_Cycle +
-0.22658746797638 * EducationBasic + -0.03445982386977 * EducationGraduation +
0.11375378192685 * EducationMaster + -0.35623807358995 * Marital_StatusDivorced +
0.30324726283965 * Marital_StatusMarried + -0.18561093467927 * Marital_StatusSingle +
0.395424582152 * Marital_StatusTogether ;
2468820   +   H1x1_6  = H1x1_6  +    -0.23751822587858 * Education2n_Cycle
2468821   +          +    -0.01687300040825 * EducationBasic  +     0.23236967703011 *
2468822   +        EducationGraduation  +      0.0725289831541 * EducationMaster
2468823   +          +     0.11581014663368 * Marital_StatusDivorced
2468824   +          +    -0.31070638037659 * Marital_StatusMarried
2468825   +          +     0.17131747253949 * Marital_StatusSingle
2468826   +          +    -0.19314955966476 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + -0.23751822587858 * Education2n_Cycle +
-0.01687300040825 * EducationBasic + 0.23236967703011 * EducationGraduation + 0.0725289831541
* EducationMaster + 0.11581014663368 * Marital_StatusDivorced + -0.31070638037659 *
Marital_StatusMarried + 0.17131747253949 * Marital_StatusSingle + -0.19314955966476 *
Marital_StatusTogether ;
2468827   +   H1x1_7  = H1x1_7  +     0.00103693282479 * Education2n_Cycle
2468828   +          +     0.12608909598752 * EducationBasic  +     -0.2366673091666 *
2468829   +        EducationGraduation  +     0.24413217290922 * EducationMaster
2468830   +          +    -0.42450599871892 * Marital_StatusDivorced
2468831   +          +     0.48162905075885 * Marital_StatusMarried
2468832   +          +    -0.26618507749283 * Marital_StatusSingle
2468833   +          +     0.38053668740338 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_7 = H1x1_7 + 0.00103693282479 * Education2n_Cycle +
0.12608909598752 * EducationBasic + -0.2366673091666 * EducationGraduation + 0.24413217290922
* EducationMaster + -0.42450599871892 * Marital_StatusDivorced + 0.48162905075885 *
Marital_StatusMarried + -0.26618507749283 * Marital_StatusSingle + 0.38053668740338 *
Marital_StatusTogether ;
2468834   +   H1x1_1  =     0.12149136705075 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.12149136705075 + H1x1_1 ;
2468835   +   H1x1_2  =    -0.97489696657001 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.97489696657001 + H1x1_2 ;
2468836   +   H1x1_3  =    -0.70605220802968 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.70605220802968 + H1x1_3 ;
2468837   +   H1x1_4  =    -1.07783206982379 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -1.07783206982379 + H1x1_4 ;
2468838   +   H1x1_5  =    -1.00400706261511 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.00400706261511 + H1x1_5 ;
2468839   +   H1x1_6  =     0.22600488314839 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0.22600488314839 + H1x1_6 ;
2468840   +   H1x1_7  =     1.55642446968077 + H1x1_7 ;
MPRINT(EM_DIAGRAM):   H1x1_7 = 1.55642446968077 + H1x1_7 ;
2468841   +   _EPS = SQRT(CONSTANT('MACEPS')) ;
MPRINT(EM_DIAGRAM):   _EPS = SQRT(CONSTANT('MACEPS')) ;
2468842   +   _REC_EPS = 1/_EPS ;
MPRINT(EM_DIAGRAM):   _REC_EPS = 1/_EPS ;
2468843   +   DROP _REC_EPS _EPS ;
MPRINT(EM_DIAGRAM):   DROP _REC_EPS _EPS ;
2468844   +   IF H1x1_1  < _REC_EPS AND H1x1_1  > - _REC_EPS THEN
2468845   +   H1x1_1  = H1x1_1  * H1x1_1 ;
MPRINT(EM_DIAGRAM):   IF H1x1_1 < _REC_EPS AND H1x1_1 > - _REC_EPS THEN H1x1_1 = H1x1_1 *
H1x1_1 ;
2468846   +   ELSE H1x1_1  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_1 = _REC_EPS ;
2468847   +   IF H1x1_2  < _REC_EPS AND H1x1_2  > - _REC_EPS THEN
2468848   +   H1x1_2  = H1x1_2  * H1x1_2 ;
MPRINT(EM_DIAGRAM):   IF H1x1_2 < _REC_EPS AND H1x1_2 > - _REC_EPS THEN H1x1_2 = H1x1_2 *
H1x1_2 ;
2468849   +   ELSE H1x1_2  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_2 = _REC_EPS ;
2468850   +   IF H1x1_3  < _REC_EPS AND H1x1_3  > - _REC_EPS THEN
2468851   +   H1x1_3  = H1x1_3  * H1x1_3 ;
MPRINT(EM_DIAGRAM):   IF H1x1_3 < _REC_EPS AND H1x1_3 > - _REC_EPS THEN H1x1_3 = H1x1_3 *
H1x1_3 ;
2468852   +   ELSE H1x1_3  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_3 = _REC_EPS ;
2468853   +   IF H1x1_4  < _REC_EPS AND H1x1_4  > - _REC_EPS THEN
2468854   +   H1x1_4  = H1x1_4  * H1x1_4 ;
MPRINT(EM_DIAGRAM):   IF H1x1_4 < _REC_EPS AND H1x1_4 > - _REC_EPS THEN H1x1_4 = H1x1_4 *
H1x1_4 ;
2468855   +   ELSE H1x1_4  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_4 = _REC_EPS ;
2468856   +   IF H1x1_5  < _REC_EPS AND H1x1_5  > - _REC_EPS THEN
2468857   +   H1x1_5  = H1x1_5  * H1x1_5 ;
MPRINT(EM_DIAGRAM):   IF H1x1_5 < _REC_EPS AND H1x1_5 > - _REC_EPS THEN H1x1_5 = H1x1_5 *
H1x1_5 ;
2468858   +   ELSE H1x1_5  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_5 = _REC_EPS ;
2468859   +   IF H1x1_6  < _REC_EPS AND H1x1_6  > - _REC_EPS THEN
2468860   +   H1x1_6  = H1x1_6  * H1x1_6 ;
MPRINT(EM_DIAGRAM):   IF H1x1_6 < _REC_EPS AND H1x1_6 > - _REC_EPS THEN H1x1_6 = H1x1_6 *
H1x1_6 ;
2468861   +   ELSE H1x1_6  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_6 = _REC_EPS ;
2468862   +   IF H1x1_7  < _REC_EPS AND H1x1_7  > - _REC_EPS THEN
2468863   +   H1x1_7  = H1x1_7  * H1x1_7 ;
MPRINT(EM_DIAGRAM):   IF H1x1_7 < _REC_EPS AND H1x1_7 > - _REC_EPS THEN H1x1_7 = H1x1_7 *
H1x1_7 ;
2468864   +   ELSE H1x1_7  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_7 = _REC_EPS ;
2468865   +END;
MPRINT(EM_DIAGRAM):   END;
2468866   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2468867   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2468868   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2468869   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2468870   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2468871   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
2468872   +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
2468873   +   H1x1_7  = .;
MPRINT(EM_DIAGRAM):   H1x1_7 = .;
2468874   +END;
MPRINT(EM_DIAGRAM):   END;
2468875   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2468876   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
2468877   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2468878   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2468879   +   H1x2_1  =    -1.36226288448745 * S_AcceptedCmpTotal
2468880   +          +     -1.3328616352886 * S_Age  +     1.25346137866034 * S_Frq
2468881   +          +    -1.21746243786295 * S_Income  +     2.83911738158074 *
2468882   +        S_Kidhome  +    -0.60784009102409 * S_Mnt  +     1.57752173634223 *
2468883   +        S_MntFishProducts  +    -0.26776567401075 * S_MntFruits
2468884   +          +     1.09584731081081 * S_MntGoldProds  +     1.22333044103532 *
2468885   +        S_MntMeatProducts  +     0.42827942745016 * S_MntSweetProducts
2468886   +          +     0.67813472792448 * S_MntWines  +     0.56816492004798 *
2468887   +        S_MonthsAsCustomer  +     0.58113470399079 * S_NumCatalogPurchases
2468888   +          +     1.96719021971894 * S_NumDealsPurchases
2468889   +          +    -0.44535354794671 * S_NumDistPurchases
2468890   +          +    -0.54827762736866 * S_NumStorePurchases
2468891   +          +     1.02703310241897 * S_NumWebPurchases
2468892   +          +    -0.12526997502601 * S_NumWebVisitsMonth
2468893   +          +    -0.55803926383776 * S_RFMstat  +     0.01819380776809 *
2468894   +        S_RMntFrq  +       0.651688575044 * S_Recency
2468895   +          +     1.58682398186611 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -1.36226288448745 * S_AcceptedCmpTotal + -1.3328616352886 *
S_Age + 1.25346137866034 * S_Frq + -1.21746243786295 * S_Income + 2.83911738158074 * S_Kidhome
+ -0.60784009102409 * S_Mnt + 1.57752173634223 * S_MntFishProducts + -0.26776567401075 *
S_MntFruits + 1.09584731081081 * S_MntGoldProds + 1.22333044103532 * S_MntMeatProducts +
0.42827942745016 * S_MntSweetProducts + 0.67813472792448 * S_MntWines + 0.56816492004798 *
S_MonthsAsCustomer + 0.58113470399079 * S_NumCatalogPurchases + 1.96719021971894 *
S_NumDealsPurchases + -0.44535354794671 * S_NumDistPurchases + -0.54827762736866 *
S_NumStorePurchases + 1.02703310241897 * S_NumWebPurchases + -0.12526997502601 *
S_NumWebVisitsMonth + -0.55803926383776 * S_RFMstat + 0.01819380776809 * S_RMntFrq +
0.651688575044 * S_Recency + 1.58682398186611 * S_Teenhome ;
2468896   +   H1x2_2  =    -0.38064507857029 * S_AcceptedCmpTotal
2468897   +          +    -0.49661801158351 * S_Age  +    -0.89589399799916 * S_Frq
2468898   +          +     -0.0121499288597 * S_Income  +    -0.48023022827846 *
2468899   +        S_Kidhome  +     -0.5183846206029 * S_Mnt  +    -3.13913899012334 *
2468900   +        S_MntFishProducts  +    -2.07291335687615 * S_MntFruits
2468901   +          +     0.51019753905662 * S_MntGoldProds  +     0.11458666377917 *
2468902   +        S_MntMeatProducts  +     -1.8499241966205 * S_MntSweetProducts
2468903   +          +     0.23160544044172 * S_MntWines  +    -0.48210626907943 *
2468904   +        S_MonthsAsCustomer  +     0.15500845227752 * S_NumCatalogPurchases
2468905   +          +     1.34659447971131 * S_NumDealsPurchases
2468906   +          +    -0.51624251310423 * S_NumDistPurchases
2468907   +          +      -1.283121574848 * S_NumStorePurchases
2468908   +          +    -1.83517806228926 * S_NumWebPurchases
2468909   +          +     0.51321339475285 * S_NumWebVisitsMonth
2468910   +          +    -1.86431704283342 * S_RFMstat  +    -1.52065204326569 *
2468911   +        S_RMntFrq  +    -0.33186055095462 * S_Recency
2468912   +          +    -0.49524729407054 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.38064507857029 * S_AcceptedCmpTotal + -0.49661801158351 *
S_Age + -0.89589399799916 * S_Frq + -0.0121499288597 * S_Income + -0.48023022827846 *
S_Kidhome + -0.5183846206029 * S_Mnt + -3.13913899012334 * S_MntFishProducts +
-2.07291335687615 * S_MntFruits + 0.51019753905662 * S_MntGoldProds + 0.11458666377917 *
S_MntMeatProducts + -1.8499241966205 * S_MntSweetProducts + 0.23160544044172 * S_MntWines +
-0.48210626907943 * S_MonthsAsCustomer + 0.15500845227752 * S_NumCatalogPurchases +
1.34659447971131 * S_NumDealsPurchases + -0.51624251310423 * S_NumDistPurchases +
-1.283121574848 * S_NumStorePurchases + -1.83517806228926 * S_NumWebPurchases +
0.51321339475285 * S_NumWebVisitsMonth + -1.86431704283342 * S_RFMstat + -1.52065204326569 *
S_RMntFrq + -0.33186055095462 * S_Recency + -0.49524729407054 * S_Teenhome ;
2468913   +   H1x2_3  =    -0.75774003934728 * S_AcceptedCmpTotal
2468914   +          +    -0.85312030825337 * S_Age  +    -0.01726294458221 * S_Frq
2468915   +          +     0.58598267983786 * S_Income  +     1.30497766805554 *
2468916   +        S_Kidhome  +    -0.84214135491022 * S_Mnt  +     0.55305862453787 *
2468917   +        S_MntFishProducts  +      0.6488663613899 * S_MntFruits
2468918   +          +    -0.83189439197558 * S_MntGoldProds  +    -0.07500050412653 *
2468919   +        S_MntMeatProducts  +    -0.06401928810253 * S_MntSweetProducts
2468920   +          +      0.5940135658334 * S_MntWines  +    -0.04573352455984 *
2468921   +        S_MonthsAsCustomer  +    -1.53610650634069 * S_NumCatalogPurchases
2468922   +          +     0.67492297345004 * S_NumDealsPurchases
2468923   +          +    -0.40437875375926 * S_NumDistPurchases
2468924   +          +     0.36322603681545 * S_NumStorePurchases
2468925   +          +    -1.15315070635524 * S_NumWebPurchases
2468926   +          +     1.20707272201156 * S_NumWebVisitsMonth
2468927   +          +     0.12192566357285 * S_RFMstat  +    -0.46711219170047 *
2468928   +        S_RMntFrq  +     1.89703582493259 * S_Recency
2468929   +          +     1.07511942237188 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.75774003934728 * S_AcceptedCmpTotal + -0.85312030825337 *
S_Age + -0.01726294458221 * S_Frq + 0.58598267983786 * S_Income + 1.30497766805554 * S_Kidhome
+ -0.84214135491022 * S_Mnt + 0.55305862453787 * S_MntFishProducts + 0.6488663613899 *
S_MntFruits + -0.83189439197558 * S_MntGoldProds + -0.07500050412653 * S_MntMeatProducts +
-0.06401928810253 * S_MntSweetProducts + 0.5940135658334 * S_MntWines + -0.04573352455984 *
S_MonthsAsCustomer + -1.53610650634069 * S_NumCatalogPurchases + 0.67492297345004 *
S_NumDealsPurchases + -0.40437875375926 * S_NumDistPurchases + 0.36322603681545 *
S_NumStorePurchases + -1.15315070635524 * S_NumWebPurchases + 1.20707272201156 *
S_NumWebVisitsMonth + 0.12192566357285 * S_RFMstat + -0.46711219170047 * S_RMntFrq +
1.89703582493259 * S_Recency + 1.07511942237188 * S_Teenhome ;
2468930   +   H1x2_4  =     0.62123819069495 * S_AcceptedCmpTotal
2468931   +          +     0.03399237520702 * S_Age  +    -0.01971421795338 * S_Frq
2468932   +          +    -0.54728266919056 * S_Income  +     -0.4634195771237 *
2468933   +        S_Kidhome  +    -1.19055247712911 * S_Mnt  +      1.4307770729159 *
2468934   +        S_MntFishProducts  +    -0.83895281276374 * S_MntFruits
2468935   +          +    -0.48578798244317 * S_MntGoldProds  +     -0.2846617807101 *
2468936   +        S_MntMeatProducts  +     0.70721686533987 * S_MntSweetProducts
2468937   +          +     1.32824513551741 * S_MntWines  +    -0.62654342755965 *
2468938   +        S_MonthsAsCustomer  +    -0.97245161056543 * S_NumCatalogPurchases
2468939   +          +    -0.41427983342148 * S_NumDealsPurchases
2468940   +          +    -0.22714305629205 * S_NumDistPurchases
2468941   +          +    -0.78763182048862 * S_NumStorePurchases
2468942   +          +    -0.26669253451501 * S_NumWebPurchases
2468943   +          +    -0.79601078616342 * S_NumWebVisitsMonth
2468944   +          +    -0.03863278696502 * S_RFMstat  +     0.95011556103056 *
2468945   +        S_RMntFrq  +     0.57184629262878 * S_Recency
2468946   +          +    -0.21560478702461 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.62123819069495 * S_AcceptedCmpTotal + 0.03399237520702 *
S_Age + -0.01971421795338 * S_Frq + -0.54728266919056 * S_Income + -0.4634195771237 *
S_Kidhome + -1.19055247712911 * S_Mnt + 1.4307770729159 * S_MntFishProducts +
-0.83895281276374 * S_MntFruits + -0.48578798244317 * S_MntGoldProds + -0.2846617807101 *
S_MntMeatProducts + 0.70721686533987 * S_MntSweetProducts + 1.32824513551741 * S_MntWines +
-0.62654342755965 * S_MonthsAsCustomer + -0.97245161056543 * S_NumCatalogPurchases +
-0.41427983342148 * S_NumDealsPurchases + -0.22714305629205 * S_NumDistPurchases +
-0.78763182048862 * S_NumStorePurchases + -0.26669253451501 * S_NumWebPurchases +
-0.79601078616342 * S_NumWebVisitsMonth + -0.03863278696502 * S_RFMstat + 0.95011556103056 *
S_RMntFrq + 0.57184629262878 * S_Recency + -0.21560478702461 * S_Teenhome ;
2468947   +   H1x2_5  =     1.47906557745075 * S_AcceptedCmpTotal
2468948   +          +    -0.31060566334198 * S_Age  +     0.56472424389718 * S_Frq
2468949   +          +     2.16541682726249 * S_Income  +    -0.34119803841059 *
2468950   +        S_Kidhome  +    -0.53783050542796 * S_Mnt  +     0.54954821448236 *
2468951   +        S_MntFishProducts  +    -0.48449918837838 * S_MntFruits
2468952   +          +     0.29783052620672 * S_MntGoldProds  +    -0.15068954343013 *
2468953   +        S_MntMeatProducts  +     0.12733251381761 * S_MntSweetProducts
2468954   +          +    -2.46709166794296 * S_MntWines  +     -1.2011286508879 *
2468955   +        S_MonthsAsCustomer  +    -0.88194814936932 * S_NumCatalogPurchases
2468956   +          +      0.7697882092212 * S_NumDealsPurchases
2468957   +          +     0.51864835453056 * S_NumDistPurchases
2468958   +          +    -1.18320366630444 * S_NumStorePurchases
2468959   +          +     -0.6608394639529 * S_NumWebPurchases
2468960   +          +    -0.03948137707769 * S_NumWebVisitsMonth
2468961   +          +     1.01076462488608 * S_RFMstat  +    -0.91562280329354 *
2468962   +        S_RMntFrq  +    -1.07576669501238 * S_Recency
2468963   +          +     -0.5946628412106 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.47906557745075 * S_AcceptedCmpTotal + -0.31060566334198 *
S_Age + 0.56472424389718 * S_Frq + 2.16541682726249 * S_Income + -0.34119803841059 * S_Kidhome
+ -0.53783050542796 * S_Mnt + 0.54954821448236 * S_MntFishProducts + -0.48449918837838 *
S_MntFruits + 0.29783052620672 * S_MntGoldProds + -0.15068954343013 * S_MntMeatProducts +
0.12733251381761 * S_MntSweetProducts + -2.46709166794296 * S_MntWines + -1.2011286508879 *
S_MonthsAsCustomer + -0.88194814936932 * S_NumCatalogPurchases + 0.7697882092212 *
S_NumDealsPurchases + 0.51864835453056 * S_NumDistPurchases + -1.18320366630444 *
S_NumStorePurchases + -0.6608394639529 * S_NumWebPurchases + -0.03948137707769 *
S_NumWebVisitsMonth + 1.01076462488608 * S_RFMstat + -0.91562280329354 * S_RMntFrq +
-1.07576669501238 * S_Recency + -0.5946628412106 * S_Teenhome ;
2468964   +   H1x2_6  =     0.42130900994246 * S_AcceptedCmpTotal
2468965   +          +     1.64256522546546 * S_Age  +    -0.31822237495441 * S_Frq
2468966   +          +     0.39698710846967 * S_Income  +    -1.30075584525681 *
2468967   +        S_Kidhome  +    -1.74733472316294 * S_Mnt  +    -1.04423575539078 *
2468968   +        S_MntFishProducts  +     0.28025913700744 * S_MntFruits
2468969   +          +     0.92062413073229 * S_MntGoldProds  +     0.38487452173084 *
2468970   +        S_MntMeatProducts  +     2.15808673418264 * S_MntSweetProducts
2468971   +          +     -0.5364274323591 * S_MntWines  +     0.64447858852609 *
2468972   +        S_MonthsAsCustomer  +     0.33683873873337 * S_NumCatalogPurchases
2468973   +          +     1.45707983202269 * S_NumDealsPurchases
2468974   +          +     0.83341887728641 * S_NumDistPurchases
2468975   +          +    -0.36664450469423 * S_NumStorePurchases
2468976   +          +     0.63911579043339 * S_NumWebPurchases
2468977   +          +     0.67144790303554 * S_NumWebVisitsMonth
2468978   +          +    -0.22124390112376 * S_RFMstat  +     1.72222071547971 *
2468979   +        S_RMntFrq  +    -0.02323382627271 * S_Recency
2468980   +          +    -0.09494567508522 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_6 = 0.42130900994246 * S_AcceptedCmpTotal + 1.64256522546546 *
S_Age + -0.31822237495441 * S_Frq + 0.39698710846967 * S_Income + -1.30075584525681 *
S_Kidhome + -1.74733472316294 * S_Mnt + -1.04423575539078 * S_MntFishProducts +
0.28025913700744 * S_MntFruits + 0.92062413073229 * S_MntGoldProds + 0.38487452173084 *
S_MntMeatProducts + 2.15808673418264 * S_MntSweetProducts + -0.5364274323591 * S_MntWines +
0.64447858852609 * S_MonthsAsCustomer + 0.33683873873337 * S_NumCatalogPurchases +
1.45707983202269 * S_NumDealsPurchases + 0.83341887728641 * S_NumDistPurchases +
-0.36664450469423 * S_NumStorePurchases + 0.63911579043339 * S_NumWebPurchases +
0.67144790303554 * S_NumWebVisitsMonth + -0.22124390112376 * S_RFMstat + 1.72222071547971 *
S_RMntFrq + -0.02323382627271 * S_Recency + -0.09494567508522 * S_Teenhome ;
2468981   +   H1x2_7  =      0.0903330772553 * S_AcceptedCmpTotal
2468982   +          +     0.13217959089196 * S_Age  +     0.93600629225871 * S_Frq
2468983   +          +     1.23765169211392 * S_Income  +     1.27732984858098 *
2468984   +        S_Kidhome  +     1.54889765360944 * S_Mnt  +     0.84618173514761 *
2468985   +        S_MntFishProducts  +    -0.32044356786958 * S_MntFruits
2468986   +          +    -0.26357995597029 * S_MntGoldProds  +     0.53649229087334 *
2468987   +        S_MntMeatProducts  +     1.46955866272889 * S_MntSweetProducts
2468988   +          +    -0.34260315437319 * S_MntWines  +    -1.70693604004836 *
2468989   +        S_MonthsAsCustomer  +     -0.4612555130737 * S_NumCatalogPurchases
2468990   +          +     0.68491896063662 * S_NumDealsPurchases
2468991   +          +      0.5386312048592 * S_NumDistPurchases
2468992   +          +     1.28108942503912 * S_NumStorePurchases
2468993   +          +    -0.88282270505969 * S_NumWebPurchases
2468994   +          +    -0.66670958211416 * S_NumWebVisitsMonth
2468995   +          +     0.94315921733739 * S_RFMstat  +     0.70533705858561 *
2468996   +        S_RMntFrq  +     0.23896687873405 * S_Recency
2468997   +          +     0.66289635918858 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_7 = 0.0903330772553 * S_AcceptedCmpTotal + 0.13217959089196 * S_Age
+ 0.93600629225871 * S_Frq + 1.23765169211392 * S_Income + 1.27732984858098 * S_Kidhome +
1.54889765360944 * S_Mnt + 0.84618173514761 * S_MntFishProducts + -0.32044356786958 *
S_MntFruits + -0.26357995597029 * S_MntGoldProds + 0.53649229087334 * S_MntMeatProducts +
1.46955866272889 * S_MntSweetProducts + -0.34260315437319 * S_MntWines + -1.70693604004836 *
S_MonthsAsCustomer + -0.4612555130737 * S_NumCatalogPurchases + 0.68491896063662 *
S_NumDealsPurchases + 0.5386312048592 * S_NumDistPurchases + 1.28108942503912 *
S_NumStorePurchases + -0.88282270505969 * S_NumWebPurchases + -0.66670958211416 *
S_NumWebVisitsMonth + 0.94315921733739 * S_RFMstat + 0.70533705858561 * S_RMntFrq +
0.23896687873405 * S_Recency + 0.66289635918858 * S_Teenhome ;
2468998   +   H1x2_1  = H1x2_1  +     0.22958861848016 * AcceptedCmp10
2468999   +          +    -1.11069938765475 * AcceptedCmp20  +     1.18563222829069 *
2469000   +        AcceptedCmp30  +    -0.97028253571173 * AcceptedCmp40
2469001   +          +     0.60850082670391 * AcceptedCmp50  +     0.31163990605418 *
2469002   +        Complain0  +     1.10957053966326 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 0.22958861848016 * AcceptedCmp10 + -1.11069938765475 *
AcceptedCmp20 + 1.18563222829069 * AcceptedCmp30 + -0.97028253571173 * AcceptedCmp40 +
0.60850082670391 * AcceptedCmp50 + 0.31163990605418 * Complain0 + 1.10957053966326 *
HigherEducationBinary0 ;
2469003   +   H1x2_2  = H1x2_2  +    -0.99409862826118 * AcceptedCmp10
2469004   +          +    -0.76360093699992 * AcceptedCmp20  +     0.82772534103696 *
2469005   +        AcceptedCmp30  +     1.74232000787449 * AcceptedCmp40
2469006   +          +    -1.37356239255127 * AcceptedCmp50  +      0.0919811154199 *
2469007   +        Complain0  +    -0.00220513515877 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.99409862826118 * AcceptedCmp10 + -0.76360093699992
* AcceptedCmp20 + 0.82772534103696 * AcceptedCmp30 + 1.74232000787449 * AcceptedCmp40 +
-1.37356239255127 * AcceptedCmp50 + 0.0919811154199 * Complain0 + -0.00220513515877 *
HigherEducationBinary0 ;
2469008   +   H1x2_3  = H1x2_3  +    -0.21003647134105 * AcceptedCmp10
2469009   +          +    -0.08930317176477 * AcceptedCmp20  +    -0.39109673162041 *
2469010   +        AcceptedCmp30  +     1.14094450038946 * AcceptedCmp40
2469011   +          +     1.26041997788848 * AcceptedCmp50  +    -0.10972130900569 *
2469012   +        Complain0  +    -0.99352598480407 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -0.21003647134105 * AcceptedCmp10 + -0.08930317176477
* AcceptedCmp20 + -0.39109673162041 * AcceptedCmp30 + 1.14094450038946 * AcceptedCmp40 +
1.26041997788848 * AcceptedCmp50 + -0.10972130900569 * Complain0 + -0.99352598480407 *
HigherEducationBinary0 ;
2469013   +   H1x2_4  = H1x2_4  +     2.02630284432093 * AcceptedCmp10
2469014   +          +    -2.50721904229276 * AcceptedCmp20  +    -1.31026450397446 *
2469015   +        AcceptedCmp30  +    -0.83440880266914 * AcceptedCmp40
2469016   +          +     -0.0570899805015 * AcceptedCmp50  +    -0.55525351434733 *
2469017   +        Complain0  +     0.27306601694081 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 2.02630284432093 * AcceptedCmp10 + -2.50721904229276 *
AcceptedCmp20 + -1.31026450397446 * AcceptedCmp30 + -0.83440880266914 * AcceptedCmp40 +
-0.0570899805015 * AcceptedCmp50 + -0.55525351434733 * Complain0 + 0.27306601694081 *
HigherEducationBinary0 ;
2469018   +   H1x2_5  = H1x2_5  +    -0.18595284227194 * AcceptedCmp10
2469019   +          +    -1.55973916517392 * AcceptedCmp20  +    -3.81563768970049 *
2469020   +        AcceptedCmp30  +    -0.09331430915239 * AcceptedCmp40
2469021   +          +     0.76128118177142 * AcceptedCmp50  +    -0.17283107047755 *
2469022   +        Complain0  +    -1.01028562804392 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + -0.18595284227194 * AcceptedCmp10 + -1.55973916517392
* AcceptedCmp20 + -3.81563768970049 * AcceptedCmp30 + -0.09331430915239 * AcceptedCmp40 +
0.76128118177142 * AcceptedCmp50 + -0.17283107047755 * Complain0 + -1.01028562804392 *
HigherEducationBinary0 ;
2469023   +   H1x2_6  = H1x2_6  +    -1.21475169836565 * AcceptedCmp10
2469024   +          +     0.28748729216575 * AcceptedCmp20  +     1.15908030413172 *
2469025   +        AcceptedCmp30  +    -0.05889528676549 * AcceptedCmp40
2469026   +          +    -0.41661363625562 * AcceptedCmp50  +    -0.77939130028952 *
2469027   +        Complain0  +     2.19510865765326 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + -1.21475169836565 * AcceptedCmp10 + 0.28748729216575 *
AcceptedCmp20 + 1.15908030413172 * AcceptedCmp30 + -0.05889528676549 * AcceptedCmp40 +
-0.41661363625562 * AcceptedCmp50 + -0.77939130028952 * Complain0 + 2.19510865765326 *
HigherEducationBinary0 ;
2469028   +   H1x2_7  = H1x2_7  +     0.87360423179644 * AcceptedCmp10
2469029   +          +    -0.47867594186426 * AcceptedCmp20  +    -0.30325818223392 *
2469030   +        AcceptedCmp30  +    -0.96085556588297 * AcceptedCmp40
2469031   +          +    -0.19693158209969 * AcceptedCmp50  +    -0.73731792634553 *
2469032   +        Complain0  +    -1.10021678806679 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_7 = H1x2_7 + 0.87360423179644 * AcceptedCmp10 + -0.47867594186426 *
AcceptedCmp20 + -0.30325818223392 * AcceptedCmp30 + -0.96085556588297 * AcceptedCmp40 +
-0.19693158209969 * AcceptedCmp50 + -0.73731792634553 * Complain0 + -1.10021678806679 *
HigherEducationBinary0 ;
2469033   +   H1x2_1  = H1x2_1  +    -1.17876013389516 * Education2n_Cycle
2469034   +          +    -0.35670434275624 * EducationBasic  +    -0.12456502068616 *
2469035   +        EducationGraduation  +     -1.0620373133508 * EducationMaster
2469036   +          +    -3.97961426831865 * Marital_StatusDivorced
2469037   +          +     0.00932639813867 * Marital_StatusMarried
2469038   +          +     1.29310186574718 * Marital_StatusSingle
2469039   +          +     1.60940802221114 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -1.17876013389516 * Education2n_Cycle +
-0.35670434275624 * EducationBasic + -0.12456502068616 * EducationGraduation +
-1.0620373133508 * EducationMaster + -3.97961426831865 * Marital_StatusDivorced +
0.00932639813867 * Marital_StatusMarried + 1.29310186574718 * Marital_StatusSingle +
1.60940802221114 * Marital_StatusTogether ;
2469040   +   H1x2_2  = H1x2_2  +     0.58497813059595 * Education2n_Cycle
2469041   +          +     0.98038586431321 * EducationBasic  +    -0.20442806724521 *
2469042   +        EducationGraduation  +     0.64973046142001 * EducationMaster
2469043   +          +    -0.30358516578188 * Marital_StatusDivorced
2469044   +          +    -0.96176709360703 * Marital_StatusMarried
2469045   +          +     1.26977690921649 * Marital_StatusSingle
2469046   +          +     -0.6681544336237 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.58497813059595 * Education2n_Cycle +
0.98038586431321 * EducationBasic + -0.20442806724521 * EducationGraduation + 0.64973046142001
* EducationMaster + -0.30358516578188 * Marital_StatusDivorced + -0.96176709360703 *
Marital_StatusMarried + 1.26977690921649 * Marital_StatusSingle + -0.6681544336237 *
Marital_StatusTogether ;
2469047   +   H1x2_3  = H1x2_3  +     0.42123479646947 * Education2n_Cycle
2469048   +          +     0.22705854674045 * EducationBasic  +     0.34794003687348 *
2469049   +        EducationGraduation  +     0.18356390207843 * EducationMaster
2469050   +          +     0.55272671490757 * Marital_StatusDivorced
2469051   +          +      0.1499239288334 * Marital_StatusMarried
2469052   +          +    -0.46840941760604 * Marital_StatusSingle
2469053   +          +     0.93706218273755 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.42123479646947 * Education2n_Cycle +
0.22705854674045 * EducationBasic + 0.34794003687348 * EducationGraduation + 0.18356390207843
* EducationMaster + 0.55272671490757 * Marital_StatusDivorced + 0.1499239288334 *
Marital_StatusMarried + -0.46840941760604 * Marital_StatusSingle + 0.93706218273755 *
Marital_StatusTogether ;
2469054   +   H1x2_4  = H1x2_4  +     0.85035585831723 * Education2n_Cycle
2469055   +          +    -0.70680576286167 * EducationBasic  +    -0.24487676912938 *
2469056   +        EducationGraduation  +    -0.33030970028481 * EducationMaster
2469057   +          +      -1.240735370138 * Marital_StatusDivorced
2469058   +          +    -1.20089294883599 * Marital_StatusMarried
2469059   +          +     0.57492674426149 * Marital_StatusSingle
2469060   +          +     1.44189292990255 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.85035585831723 * Education2n_Cycle +
-0.70680576286167 * EducationBasic + -0.24487676912938 * EducationGraduation +
-0.33030970028481 * EducationMaster + -1.240735370138 * Marital_StatusDivorced +
-1.20089294883599 * Marital_StatusMarried + 0.57492674426149 * Marital_StatusSingle +
1.44189292990255 * Marital_StatusTogether ;
2469061   +   H1x2_5  = H1x2_5  +    -0.62461434654579 * Education2n_Cycle
2469062   +          +    -0.34090423965869 * EducationBasic  +    -0.82493401834396 *
2469063   +        EducationGraduation  +    -1.09423426649553 * EducationMaster
2469064   +          +     1.05435442049802 * Marital_StatusDivorced
2469065   +          +      0.3571256349717 * Marital_StatusMarried
2469066   +          +    -0.44741267266578 * Marital_StatusSingle
2469067   +          +     0.02948931507994 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + -0.62461434654579 * Education2n_Cycle +
-0.34090423965869 * EducationBasic + -0.82493401834396 * EducationGraduation +
-1.09423426649553 * EducationMaster + 1.05435442049802 * Marital_StatusDivorced +
0.3571256349717 * Marital_StatusMarried + -0.44741267266578 * Marital_StatusSingle +
0.02948931507994 * Marital_StatusTogether ;
2469068   +   H1x2_6  = H1x2_6  +     0.09620501635178 * Education2n_Cycle
2469069   +          +    -0.54617424401993 * EducationBasic  +    -0.43305038404558 *
2469070   +        EducationGraduation  +     0.05453229059502 * EducationMaster
2469071   +          +     2.06026721980778 * Marital_StatusDivorced
2469072   +          +    -0.49583258645166 * Marital_StatusMarried
2469073   +          +    -1.14824900824474 * Marital_StatusSingle
2469074   +          +     0.57690093967839 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + 0.09620501635178 * Education2n_Cycle +
-0.54617424401993 * EducationBasic + -0.43305038404558 * EducationGraduation +
0.05453229059502 * EducationMaster + 2.06026721980778 * Marital_StatusDivorced +
-0.49583258645166 * Marital_StatusMarried + -1.14824900824474 * Marital_StatusSingle +
0.57690093967839 * Marital_StatusTogether ;
2469075   +   H1x2_7  = H1x2_7  +    -0.31251046777442 * Education2n_Cycle
2469076   +          +    -1.69272922870259 * EducationBasic  +    -0.08682253496961 *
2469077   +        EducationGraduation  +     0.58241644186309 * EducationMaster
2469078   +          +     -1.1890908607447 * Marital_StatusDivorced
2469079   +          +    -0.46668809907123 * Marital_StatusMarried
2469080   +          +     1.20342564763422 * Marital_StatusSingle
2469081   +          +    -1.75740662969578 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_7 = H1x2_7 + -0.31251046777442 * Education2n_Cycle +
-1.69272922870259 * EducationBasic + -0.08682253496961 * EducationGraduation +
0.58241644186309 * EducationMaster + -1.1890908607447 * Marital_StatusDivorced +
-0.46668809907123 * Marital_StatusMarried + 1.20342564763422 * Marital_StatusSingle +
-1.75740662969578 * Marital_StatusTogether ;
2469082   +   H1x2_1  =    -0.14973719401763 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.14973719401763 + H1x2_1 ;
2469083   +   H1x2_2  =    -0.56259582407931 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.56259582407931 + H1x2_2 ;
2469084   +   H1x2_3  =     0.42132483186492 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = 0.42132483186492 + H1x2_3 ;
2469085   +   H1x2_4  =      1.1996209421335 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 1.1996209421335 + H1x2_4 ;
2469086   +   H1x2_5  =     0.95827018478011 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 0.95827018478011 + H1x2_5 ;
2469087   +   H1x2_6  =     1.88844492435344 + H1x2_6 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = 1.88844492435344 + H1x2_6 ;
2469088   +   H1x2_7  =     0.77184516675485 + H1x2_7 ;
MPRINT(EM_DIAGRAM):   H1x2_7 = 0.77184516675485 + H1x2_7 ;
2469089   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2469090   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2469091   +   H1x2_1  = EXP(MIN(H1x2_1 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(MIN(H1x2_1 , _EXP_BAR));
2469092   +   H1x2_2  = EXP(MIN(H1x2_2 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(MIN(H1x2_2 , _EXP_BAR));
2469093   +   H1x2_3  = EXP(MIN(H1x2_3 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(MIN(H1x2_3 , _EXP_BAR));
2469094   +   H1x2_4  = EXP(MIN(H1x2_4 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(MIN(H1x2_4 , _EXP_BAR));
2469095   +   H1x2_5  = EXP(MIN(H1x2_5 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(MIN(H1x2_5 , _EXP_BAR));
2469096   +   H1x2_6  = EXP(MIN(H1x2_6 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(MIN(H1x2_6 , _EXP_BAR));
2469097   +   H1x2_7  = EXP(MIN(H1x2_7 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_7 = EXP(MIN(H1x2_7 , _EXP_BAR));
2469098   +END;
MPRINT(EM_DIAGRAM):   END;
2469099   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2469100   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
2469101   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
2469102   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
2469103   +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
2469104   +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
2469105   +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
2469106   +   H1x2_7  = .;
MPRINT(EM_DIAGRAM):   H1x2_7 = .;
2469107   +END;
MPRINT(EM_DIAGRAM):   END;
2469108   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2469109   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2469110   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2469111   +
2469112   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2469113   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2469114   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2469115   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2469116   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2469117   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2469118   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2469119   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2469120   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2469121   +end;
MPRINT(EM_DIAGRAM):   end;
2469122   +else do;
MPRINT(EM_DIAGRAM):   else do;
2469123   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2469124   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2469125   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2469126   +   end;
MPRINT(EM_DIAGRAM):   end;
2469127   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2469128   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2469129   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2469130   +   end;
MPRINT(EM_DIAGRAM):   end;
2469131   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2469132   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2469133   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2469134   +   end;
MPRINT(EM_DIAGRAM):   end;
2469135   +end;
MPRINT(EM_DIAGRAM):   end;
2469136   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2469137   +   P_DepVar1  =     0.10431866610268 * H1x1_1  +    -0.48100701431081 * H1x1_2
2469138   +          +      1.1561061025832 * H1x1_3  +    -1.23928879501664 * H1x1_4
2469139   +          +     1.22057275321508 * H1x1_5  +     0.21972347471711 * H1x1_6
2469140   +          +    -0.98998788335495 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.10431866610268 * H1x1_1 + -0.48100701431081 * H1x1_2 +
1.1561061025832 * H1x1_3 + -1.23928879501664 * H1x1_4 + 1.22057275321508 * H1x1_5 +
0.21972347471711 * H1x1_6 + -0.98998788335495 * H1x1_7 ;
2469141   +   P_DepVar1  = P_DepVar1  + -4.9985478923183E-10 * H1x2_1
2469142   +          +   2.7724573038604E-6 * H1x2_2  +  -3.3263781208921E-6 * H1x2_3
2469143   +          +     1.90169432265E-8 * H1x2_4  +  -9.7460294571708E-9 * H1x2_5
2469144   +          +  -2.0885179583168E-6 * H1x2_6  +    3.038660449943E-8 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 + -4.9985478923183E-10 * H1x2_1 +
2.7724573038604E-6 * H1x2_2 + -3.3263781208921E-6 * H1x2_3 + 1.90169432265E-8 * H1x2_4 +
-9.7460294571708E-9 * H1x2_5 + -2.0885179583168E-6 * H1x2_6 + 3.038660449943E-8 * H1x2_7 ;
2469145   +   P_DepVar1  =    -2.34500119066237 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.34500119066237 + P_DepVar1 ;
2469146   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2469147   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2469148   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2469149   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2469150   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2469151   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2469152   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2469153   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2469154   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2469155   +END;
MPRINT(EM_DIAGRAM):   END;
2469156   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2469157   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2469158   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2469159   +END;
MPRINT(EM_DIAGRAM):   END;
2469160   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2469161   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2469162   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2469163   +END;
MPRINT(EM_DIAGRAM):   END;
2469164   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2469165   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2469166   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2469167   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2469168   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2469169   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2469170   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2469171   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2469172   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2469173   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2469174   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2469175   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2469176   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2469177   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2469178   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2469179   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2469180   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2469181   +END;
MPRINT(EM_DIAGRAM):   END;
2469182   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2469183   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2469184   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2469185   +drop
2469186   +H1x1_1
2469187   +H1x1_2
2469188   +H1x1_3
2469189   +H1x1_4
2469190   +H1x1_5
2469191   +H1x1_6
2469192   +H1x1_7
2469193   +H1x2_1
2469194   +H1x2_2
2469195   +H1x2_3
2469196   +H1x2_4
2469197   +H1x2_5
2469198   +H1x2_6
2469199   +H1x2_7
2469200   +;
MPRINT(EM_DIAGRAM):   drop H1x1_1 H1x1_2 H1x1_3 H1x1_4 H1x1_5 H1x1_6 H1x1_7 H1x2_1 H1x2_2
H1x2_3 H1x2_4 H1x2_5 H1x2_6 H1x2_7 ;
2469201   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2469202   +* Renaming variables for AutoNeural12;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural12;
2469203   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2469204   +* Renaming Posterior variables for AutoNeural12;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural12;
2469205   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2469206   +drop AutoNeural12_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_P_DepVar1;
2469207   +AutoNeural12_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural12_P_DepVar1 = P_DepVar1;
2469208   +drop AutoNeural12_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_P_DepVar0;
2469209   +AutoNeural12_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural12_P_DepVar0 = P_DepVar0;
2469210   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2469211   +* Renaming _WARN_ variable for AutoNeural12;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural12;
2469212   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2469213   +length AutoNeural12_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural12_WARN_ $4;
2469214   +drop AutoNeural12_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_WARN_;
2469215   +AutoNeural12_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural12_WARN_ = _WARN_;
2469216   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2469217   +* Ensmbl46: Scoring Code of model 4 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl46: Scoring Code of model 4 of 5;
2469218   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2469219   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2469220   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
2469221   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2469222   +* NODE: AutoNeural7;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural7;
2469223   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2469224   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2469225   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2469226   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2469227   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2469228   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2469229   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2469230   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2469231   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2469232   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2469233   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2469234   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2469235   +LENGTH _WARN_ $4
2469236   +      F_DepVar  $ 12
2469237   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2469238   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2469239   +
2469240   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2469241   +
2469242   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2469243   +
2469244   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2469245   +
2469246   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2469247   +
2469248   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2469249   +
2469250   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2469251   +
2469252   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2469253   +
2469254   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2469255   +
2469256   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2469257   +
2469258   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2469259   +
2469260   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2469261   +
2469262   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2469263   +
2469264   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2469265   +
2469266   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2469267   +
2469268   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2469269   +
2469270   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2469271   +
2469272   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2469273   +
2469274   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2469275   +
2469276   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2469277   +
2469278   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2469279   +
2469280   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2469281   +
2469282   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2469283   +
2469284   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2469285   +
2469286   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2469287   +
2469288   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2469289   +
2469290   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2469291   +
2469292   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2469293   +
2469294   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2469295   +
2469296   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2469297   +
2469298   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2469299   +
2469300   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2469301   +
2469302   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2469303   +
2469304   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2469305   +
2469306   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2469307   +
2469308   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2469309   +
2469310   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2469311   +
2469312   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2469313   +
2469314   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2469315   +
2469316   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2469317   +
2469318   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
2469319   +
2469320   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
2469321   +
2469322   +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
2469323   +
2469324   +      label H1x3_2 = 'Hidden: H1x3_=2' ;
MPRINT(EM_DIAGRAM):   label H1x3_2 = 'Hidden: H1x3_=2' ;
2469325   +
2469326   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2469327   +
2469328   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2469329   +
2469330   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2469331   +
2469332   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2469333   +
2469334   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2469335   +
2469336   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2469337   +
2469338   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2469339   +
2469340   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2469341   +
2469342   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2469343   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2469344   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2469345   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2469346   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2469347   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2469348   +end;
MPRINT(EM_DIAGRAM):   end;
2469349   +else do;
MPRINT(EM_DIAGRAM):   else do;
2469350   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2469351   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2469352   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2469353   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2469354   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2469355   +   end;
MPRINT(EM_DIAGRAM):   end;
2469356   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2469357   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2469358   +   end;
MPRINT(EM_DIAGRAM):   end;
2469359   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2469360   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2469361   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2469362   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2469363   +   end;
MPRINT(EM_DIAGRAM):   end;
2469364   +end;
MPRINT(EM_DIAGRAM):   end;
2469365   +
2469366   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2469367   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2469368   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2469369   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2469370   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2469371   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2469372   +end;
MPRINT(EM_DIAGRAM):   end;
2469373   +else do;
MPRINT(EM_DIAGRAM):   else do;
2469374   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2469375   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2469376   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2469377   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2469378   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2469379   +   end;
MPRINT(EM_DIAGRAM):   end;
2469380   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2469381   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2469382   +   end;
MPRINT(EM_DIAGRAM):   end;
2469383   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2469384   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2469385   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2469386   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2469387   +   end;
MPRINT(EM_DIAGRAM):   end;
2469388   +end;
MPRINT(EM_DIAGRAM):   end;
2469389   +
2469390   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2469391   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2469392   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2469393   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2469394   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2469395   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2469396   +end;
MPRINT(EM_DIAGRAM):   end;
2469397   +else do;
MPRINT(EM_DIAGRAM):   else do;
2469398   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2469399   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2469400   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2469401   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2469402   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2469403   +   end;
MPRINT(EM_DIAGRAM):   end;
2469404   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2469405   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2469406   +   end;
MPRINT(EM_DIAGRAM):   end;
2469407   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2469408   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2469409   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2469410   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2469411   +   end;
MPRINT(EM_DIAGRAM):   end;
2469412   +end;
MPRINT(EM_DIAGRAM):   end;
2469413   +
2469414   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2469415   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2469416   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2469417   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2469418   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2469419   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2469420   +end;
MPRINT(EM_DIAGRAM):   end;
2469421   +else do;
MPRINT(EM_DIAGRAM):   else do;
2469422   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2469423   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2469424   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2469425   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2469426   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2469427   +   end;
MPRINT(EM_DIAGRAM):   end;
2469428   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2469429   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2469430   +   end;
MPRINT(EM_DIAGRAM):   end;
2469431   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2469432   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2469433   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2469434   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2469435   +   end;
MPRINT(EM_DIAGRAM):   end;
2469436   +end;
MPRINT(EM_DIAGRAM):   end;
2469437   +
2469438   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2469439   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2469440   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2469441   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2469442   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2469443   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2469444   +end;
MPRINT(EM_DIAGRAM):   end;
2469445   +else do;
MPRINT(EM_DIAGRAM):   else do;
2469446   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2469447   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2469448   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2469449   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2469450   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2469451   +   end;
MPRINT(EM_DIAGRAM):   end;
2469452   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2469453   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2469454   +   end;
MPRINT(EM_DIAGRAM):   end;
2469455   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2469456   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2469457   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2469458   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2469459   +   end;
MPRINT(EM_DIAGRAM):   end;
2469460   +end;
MPRINT(EM_DIAGRAM):   end;
2469461   +
2469462   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2469463   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2469464   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2469465   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2469466   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2469467   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2469468   +end;
MPRINT(EM_DIAGRAM):   end;
2469469   +else do;
MPRINT(EM_DIAGRAM):   else do;
2469470   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2469471   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2469472   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2469473   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2469474   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2469475   +   end;
MPRINT(EM_DIAGRAM):   end;
2469476   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2469477   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2469478   +   end;
MPRINT(EM_DIAGRAM):   end;
2469479   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2469480   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2469481   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2469482   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2469483   +   end;
MPRINT(EM_DIAGRAM):   end;
2469484   +end;
MPRINT(EM_DIAGRAM):   end;
2469485   +
2469486   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2469487   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2469488   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2469489   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2469490   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2469491   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2469492   +end;
MPRINT(EM_DIAGRAM):   end;
2469493   +else do;
MPRINT(EM_DIAGRAM):   else do;
2469494   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2469495   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2469496   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2469497   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2469498   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2469499   +   end;
MPRINT(EM_DIAGRAM):   end;
2469500   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2469501   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2469502   +   end;
MPRINT(EM_DIAGRAM):   end;
2469503   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2469504   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2469505   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2469506   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2469507   +   end;
MPRINT(EM_DIAGRAM):   end;
2469508   +end;
MPRINT(EM_DIAGRAM):   end;
2469509   +
2469510   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2469511   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
2469512   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2469513   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2469514   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2469515   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2469516   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2469517   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2469518   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2469519   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2469520   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2469521   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2469522   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2469523   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2469524   +end;
MPRINT(EM_DIAGRAM):   end;
2469525   +else do;
MPRINT(EM_DIAGRAM):   else do;
2469526   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2469527   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2469528   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2469529   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2469530   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2469531   +   end;
MPRINT(EM_DIAGRAM):   end;
2469532   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2469533   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2469534   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2469535   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2469536   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2469537   +   end;
MPRINT(EM_DIAGRAM):   end;
2469538   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2469539   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2469540   +   end;
MPRINT(EM_DIAGRAM):   end;
2469541   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2469542   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2469543   +   end;
MPRINT(EM_DIAGRAM):   end;
2469544   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2469545   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2469546   +   end;
MPRINT(EM_DIAGRAM):   end;
2469547   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2469548   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2469549   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2469550   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2469551   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2469552   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2469553   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2469554   +   end;
MPRINT(EM_DIAGRAM):   end;
2469555   +end;
MPRINT(EM_DIAGRAM):   end;
2469556   +
2469557   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2469558   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2469559   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
2469560   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2469561   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2469562   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2469563   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2469564   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2469565   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2469566   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2469567   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2469568   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2469569   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2469570   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2469571   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2469572   +end;
MPRINT(EM_DIAGRAM):   end;
2469573   +else do;
MPRINT(EM_DIAGRAM):   else do;
2469574   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2469575   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2469576   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2469577   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2469578   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2469579   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2469580   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2469581   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2469582   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2469583   +         end;
MPRINT(EM_DIAGRAM):   end;
2469584   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2469585   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2469586   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2469587   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2469588   +            end;
MPRINT(EM_DIAGRAM):   end;
2469589   +         end;
MPRINT(EM_DIAGRAM):   end;
2469590   +      end;
MPRINT(EM_DIAGRAM):   end;
2469591   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2469592   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2469593   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2469594   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2469595   +         end;
MPRINT(EM_DIAGRAM):   end;
2469596   +      end;
MPRINT(EM_DIAGRAM):   end;
2469597   +   end;
MPRINT(EM_DIAGRAM):   end;
2469598   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2469599   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2469600   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2469601   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2469602   +      end;
MPRINT(EM_DIAGRAM):   end;
2469603   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2469604   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2469605   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2469606   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2469607   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2469608   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2469609   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2469610   +         end;
MPRINT(EM_DIAGRAM):   end;
2469611   +      end;
MPRINT(EM_DIAGRAM):   end;
2469612   +   end;
MPRINT(EM_DIAGRAM):   end;
2469613   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2469614   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2469615   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2469616   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2469617   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2469618   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2469619   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2469620   +   end;
MPRINT(EM_DIAGRAM):   end;
2469621   +end;
MPRINT(EM_DIAGRAM):   end;
2469622   +
2469623   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2469624   +*** Checking missing input Interval
2469625   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2469626   +
2469627   +IF NMISS(
2469628   +   AcceptedCmpTotal ,
2469629   +   Age ,
2469630   +   Frq ,
2469631   +   Income ,
2469632   +   Kidhome ,
2469633   +   Mnt ,
2469634   +   MntFishProducts ,
2469635   +   MntFruits ,
2469636   +   MntGoldProds ,
2469637   +   MntMeatProducts ,
2469638   +   MntSweetProducts ,
2469639   +   MntWines ,
2469640   +   MonthsAsCustomer ,
2469641   +   NumCatalogPurchases ,
2469642   +   NumDealsPurchases ,
2469643   +   NumDistPurchases ,
2469644   +   NumStorePurchases ,
2469645   +   NumWebPurchases ,
2469646   +   NumWebVisitsMonth ,
2469647   +   RFMstat ,
2469648   +   RMntFrq ,
2469649   +   Recency ,
2469650   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
2469651   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2469652   +
2469653   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2469654   +END;
MPRINT(EM_DIAGRAM):   END;
2469655   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2469656   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2469657   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2469658   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2469659   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2469660   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2469661   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2469662   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2469663   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2469664   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2469665   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2469666   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2469667   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2469668   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2469669   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2469670   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2469671   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2469672   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2469673   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2469674   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2469675   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2469676   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2469677   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
2469678   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2469679   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2469680   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2469681   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2469682   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2469683   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2469684   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2469685   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2469686   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2469687   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2469688   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2469689   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2469690   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2469691   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2469692   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2469693   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2469694   +END;
MPRINT(EM_DIAGRAM):   END;
2469695   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2469696   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2469697   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2469698   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2469699   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2469700   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2469701   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2469702   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2469703   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2469704   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2469705   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2469706   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2469707   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2469708   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2469709   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2469710   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2469711   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2469712   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2469713   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2469714   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2469715   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2469716   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2469717   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
2469718   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2469719   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2469720   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2469721   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2469722   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2469723   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2469724   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2469725   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2469726   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2469727   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2469728   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
2469729   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2469730   +   ELSE S_NumCatalogPurchases
2469731   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2469732   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2469733   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2469734   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2469735   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2469736   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2469737   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2469738   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2469739   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2469740   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2469741   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2469742   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2469743   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2469744   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2469745   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2469746   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2469747   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2469748   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2469749   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2469750   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2469751   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2469752   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2469753   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2469754   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2469755   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2469756   +END;
MPRINT(EM_DIAGRAM):   END;
2469757   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2469758   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2469759   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2469760   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2469761   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2469762   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2469763   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2469764   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2469765   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2469766   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2469767   +   H1x1_1  =     0.26454269681311 * S_AcceptedCmpTotal
2469768   +          +    -0.01281904987956 * S_Age  +    -0.19309516267581 * S_Frq
2469769   +          +    -0.19077579202378 * S_Income  +      0.1806651018562 *
2469770   +        S_Kidhome  +    -0.31002612826472 * S_Mnt  +    -0.05901796512011 *
2469771   +        S_MntFishProducts  +    -0.03760930101165 * S_MntFruits
2469772   +          +     0.01720900715043 * S_MntGoldProds  +     0.21472292961422 *
2469773   +        S_MntMeatProducts  +    -0.02880706568684 * S_MntSweetProducts
2469774   +          +    -0.37993583170844 * S_MntWines  +    -0.00848444156361 *
2469775   +        S_MonthsAsCustomer  +     0.15939611818942 * S_NumCatalogPurchases
2469776   +          +     0.08390531145773 * S_NumDealsPurchases
2469777   +          +    -0.29505970645775 * S_NumDistPurchases
2469778   +          +    -0.13820571170194 * S_NumStorePurchases
2469779   +          +     0.11468011313368 * S_NumWebPurchases
2469780   +          +    -0.18421241371843 * S_NumWebVisitsMonth
2469781   +          +     0.11564064971509 * S_RFMstat  +    -0.02223928001432 *
2469782   +        S_RMntFrq  +     0.18022777532589 * S_Recency
2469783   +          +     0.14654831145379 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.26454269681311 * S_AcceptedCmpTotal + -0.01281904987956 *
S_Age + -0.19309516267581 * S_Frq + -0.19077579202378 * S_Income + 0.1806651018562 * S_Kidhome
+ -0.31002612826472 * S_Mnt + -0.05901796512011 * S_MntFishProducts + -0.03760930101165 *
S_MntFruits + 0.01720900715043 * S_MntGoldProds + 0.21472292961422 * S_MntMeatProducts +
-0.02880706568684 * S_MntSweetProducts + -0.37993583170844 * S_MntWines + -0.00848444156361 *
S_MonthsAsCustomer + 0.15939611818942 * S_NumCatalogPurchases + 0.08390531145773 *
S_NumDealsPurchases + -0.29505970645775 * S_NumDistPurchases + -0.13820571170194 *
S_NumStorePurchases + 0.11468011313368 * S_NumWebPurchases + -0.18421241371843 *
S_NumWebVisitsMonth + 0.11564064971509 * S_RFMstat + -0.02223928001432 * S_RMntFrq +
0.18022777532589 * S_Recency + 0.14654831145379 * S_Teenhome ;
2469784   +   H1x1_2  =     0.27055972468014 * S_AcceptedCmpTotal
2469785   +          +      0.0025862891193 * S_Age  +    -0.07147307366817 * S_Frq
2469786   +          +      0.1883776136263 * S_Income  +    -0.12712510891181 *
2469787   +        S_Kidhome  +    -0.42099927948686 * S_Mnt  +    -0.07047631817862 *
2469788   +        S_MntFishProducts  +    -0.06658475152878 * S_MntFruits
2469789   +          +     0.01943025682869 * S_MntGoldProds  +     0.29481794109465 *
2469790   +        S_MntMeatProducts  +    -0.06573502094591 * S_MntSweetProducts
2469791   +          +    -0.46266722725002 * S_MntWines  +    -0.00472333181469 *
2469792   +        S_MonthsAsCustomer  +     0.35081452017576 * S_NumCatalogPurchases
2469793   +          +     0.18009076035363 * S_NumDealsPurchases
2469794   +          +     0.03853861006587 * S_NumDistPurchases
2469795   +          +    -0.05118063952874 * S_NumStorePurchases
2469796   +          +    -0.03282286120473 * S_NumWebPurchases
2469797   +          +     0.31160900419026 * S_NumWebVisitsMonth
2469798   +          +     0.08027884378429 * S_RFMstat  +     0.39057239541393 *
2469799   +        S_RMntFrq  +    -0.34796767111274 * S_Recency
2469800   +          +    -0.12099758522271 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.27055972468014 * S_AcceptedCmpTotal + 0.0025862891193 * S_Age
+ -0.07147307366817 * S_Frq + 0.1883776136263 * S_Income + -0.12712510891181 * S_Kidhome +
-0.42099927948686 * S_Mnt + -0.07047631817862 * S_MntFishProducts + -0.06658475152878 *
S_MntFruits + 0.01943025682869 * S_MntGoldProds + 0.29481794109465 * S_MntMeatProducts +
-0.06573502094591 * S_MntSweetProducts + -0.46266722725002 * S_MntWines + -0.00472333181469 *
S_MonthsAsCustomer + 0.35081452017576 * S_NumCatalogPurchases + 0.18009076035363 *
S_NumDealsPurchases + 0.03853861006587 * S_NumDistPurchases + -0.05118063952874 *
S_NumStorePurchases + -0.03282286120473 * S_NumWebPurchases + 0.31160900419026 *
S_NumWebVisitsMonth + 0.08027884378429 * S_RFMstat + 0.39057239541393 * S_RMntFrq +
-0.34796767111274 * S_Recency + -0.12099758522271 * S_Teenhome ;
2469801   +   H1x1_1  = H1x1_1  +     0.12539246465239 * AcceptedCmp10
2469802   +          +     0.38473652869745 * AcceptedCmp20  +     0.29820983391886 *
2469803   +        AcceptedCmp30  +     0.29085092779792 * AcceptedCmp40
2469804   +          +     0.18918195914981 * AcceptedCmp50  +    -0.26812516781697 *
2469805   +        Complain0  +    -0.08804110897148 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.12539246465239 * AcceptedCmp10 + 0.38473652869745 *
AcceptedCmp20 + 0.29820983391886 * AcceptedCmp30 + 0.29085092779792 * AcceptedCmp40 +
0.18918195914981 * AcceptedCmp50 + -0.26812516781697 * Complain0 + -0.08804110897148 *
HigherEducationBinary0 ;
2469806   +   H1x1_2  = H1x1_2  +    -0.02312897825565 * AcceptedCmp10
2469807   +          +     0.03909481703523 * AcceptedCmp20  +     0.02531081539721 *
2469808   +        AcceptedCmp30  +     0.03109641300151 * AcceptedCmp40
2469809   +          +     0.01985718189621 * AcceptedCmp50  +     0.13425456375085 *
2469810   +        Complain0  +    -0.08222486590117 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.02312897825565 * AcceptedCmp10 + 0.03909481703523 *
AcceptedCmp20 + 0.02531081539721 * AcceptedCmp30 + 0.03109641300151 * AcceptedCmp40 +
0.01985718189621 * AcceptedCmp50 + 0.13425456375085 * Complain0 + -0.08222486590117 *
HigherEducationBinary0 ;
2469811   +   H1x1_1  = H1x1_1  +    -0.01975862863669 * Education2n_Cycle
2469812   +          +     0.14654730697956 * EducationBasic  +    -0.00459515646452 *
2469813   +        EducationGraduation  +     0.01586948449127 * EducationMaster
2469814   +          +    -0.04750981393889 * Marital_StatusDivorced
2469815   +          +     0.28216925676677 * Marital_StatusMarried
2469816   +          +    -0.20757827413964 * Marital_StatusSingle
2469817   +          +     0.22622509024122 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.01975862863669 * Education2n_Cycle +
0.14654730697956 * EducationBasic + -0.00459515646452 * EducationGraduation + 0.01586948449127
* EducationMaster + -0.04750981393889 * Marital_StatusDivorced + 0.28216925676677 *
Marital_StatusMarried + -0.20757827413964 * Marital_StatusSingle + 0.22622509024122 *
Marital_StatusTogether ;
2469818   +   H1x1_2  = H1x1_2  +     0.12009608969049 * Education2n_Cycle
2469819   +          +     0.01793460710056 * EducationBasic  +    -0.04257710051346 *
2469820   +        EducationGraduation  +    -0.06975725710115 * EducationMaster
2469821   +          +     0.05981919620577 * Marital_StatusDivorced
2469822   +          +    -0.17161573846062 * Marital_StatusMarried
2469823   +          +     0.15869440681091 * Marital_StatusSingle
2469824   +          +    -0.13282372850158 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.12009608969049 * Education2n_Cycle +
0.01793460710056 * EducationBasic + -0.04257710051346 * EducationGraduation +
-0.06975725710115 * EducationMaster + 0.05981919620577 * Marital_StatusDivorced +
-0.17161573846062 * Marital_StatusMarried + 0.15869440681091 * Marital_StatusSingle +
-0.13282372850158 * Marital_StatusTogether ;
2469825   +   H1x1_1  =     0.87962277715971 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.87962277715971 + H1x1_1 ;
2469826   +   H1x1_2  =    -0.62570339696782 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.62570339696782 + H1x1_2 ;
2469827   +   H1x1_1  = SIN(H1x1_1 );
MPRINT(EM_DIAGRAM):   H1x1_1 = SIN(H1x1_1 );
2469828   +   H1x1_2  = SIN(H1x1_2 );
MPRINT(EM_DIAGRAM):   H1x1_2 = SIN(H1x1_2 );
2469829   +END;
MPRINT(EM_DIAGRAM):   END;
2469830   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2469831   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2469832   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2469833   +END;
MPRINT(EM_DIAGRAM):   END;
2469834   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2469835   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
2469836   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2469837   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2469838   +   H1x2_1  =      0.1719390672121 * S_AcceptedCmpTotal
2469839   +          +     0.23586839288361 * S_Age  +    -1.85384134180372 * S_Frq
2469840   +          +    -0.43561758063577 * S_Income  +     -2.5581498901473 *
2469841   +        S_Kidhome  +      1.7031888248428 * S_Mnt  +     0.84982621124736 *
2469842   +        S_MntFishProducts  +     0.25990173458485 * S_MntFruits
2469843   +          +    -2.80730469703961 * S_MntGoldProds  +     0.64923500711702 *
2469844   +        S_MntMeatProducts  +     0.27458645458502 * S_MntSweetProducts
2469845   +          +    -0.47723589182372 * S_MntWines  +    -0.66777488145507 *
2469846   +        S_MonthsAsCustomer  +    -0.46364414558282 * S_NumCatalogPurchases
2469847   +          +     0.00741910846933 * S_NumDealsPurchases
2469848   +          +       1.334289252268 * S_NumDistPurchases
2469849   +          +    -0.29851567180932 * S_NumStorePurchases
2469850   +          +    -0.52115313259666 * S_NumWebPurchases
2469851   +          +     0.93907168501909 * S_NumWebVisitsMonth
2469852   +          +    -0.26126881318451 * S_RFMstat  +     -1.3003763542929 *
2469853   +        S_RMntFrq  +    -0.12807368149309 * S_Recency
2469854   +          +    -0.21296116974623 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.1719390672121 * S_AcceptedCmpTotal + 0.23586839288361 * S_Age
+ -1.85384134180372 * S_Frq + -0.43561758063577 * S_Income + -2.5581498901473 * S_Kidhome +
1.7031888248428 * S_Mnt + 0.84982621124736 * S_MntFishProducts + 0.25990173458485 *
S_MntFruits + -2.80730469703961 * S_MntGoldProds + 0.64923500711702 * S_MntMeatProducts +
0.27458645458502 * S_MntSweetProducts + -0.47723589182372 * S_MntWines + -0.66777488145507 *
S_MonthsAsCustomer + -0.46364414558282 * S_NumCatalogPurchases + 0.00741910846933 *
S_NumDealsPurchases + 1.334289252268 * S_NumDistPurchases + -0.29851567180932 *
S_NumStorePurchases + -0.52115313259666 * S_NumWebPurchases + 0.93907168501909 *
S_NumWebVisitsMonth + -0.26126881318451 * S_RFMstat + -1.3003763542929 * S_RMntFrq +
-0.12807368149309 * S_Recency + -0.21296116974623 * S_Teenhome ;
2469855   +   H1x2_2  =     0.30897763700303 * S_AcceptedCmpTotal
2469856   +          +    -0.77727886396317 * S_Age  +    -0.79298582494973 * S_Frq
2469857   +          +    -1.73199353738093 * S_Income  +     1.12984956989288 *
2469858   +        S_Kidhome  +    -1.36701096993984 * S_Mnt  +    -0.21063950702424 *
2469859   +        S_MntFishProducts  +    -0.20027336686257 * S_MntFruits
2469860   +          +    -0.06955810418489 * S_MntGoldProds  +     0.16672767423533 *
2469861   +        S_MntMeatProducts  +    -1.56675269740541 * S_MntSweetProducts
2469862   +          +     1.85366479127485 * S_MntWines  +    -0.58178621903094 *
2469863   +        S_MonthsAsCustomer  +     1.31024619253935 * S_NumCatalogPurchases
2469864   +          +     1.60427001186844 * S_NumDealsPurchases
2469865   +          +    -0.18447618033353 * S_NumDistPurchases
2469866   +          +    -1.29966073003539 * S_NumStorePurchases
2469867   +          +    -1.12373457341536 * S_NumWebPurchases
2469868   +          +     1.46099221440494 * S_NumWebVisitsMonth
2469869   +          +     0.17795038564406 * S_RFMstat  +    -0.82372068140832 *
2469870   +        S_RMntFrq  +      0.4480370534729 * S_Recency
2469871   +          +     0.19272737691538 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.30897763700303 * S_AcceptedCmpTotal + -0.77727886396317 *
S_Age + -0.79298582494973 * S_Frq + -1.73199353738093 * S_Income + 1.12984956989288 *
S_Kidhome + -1.36701096993984 * S_Mnt + -0.21063950702424 * S_MntFishProducts +
-0.20027336686257 * S_MntFruits + -0.06955810418489 * S_MntGoldProds + 0.16672767423533 *
S_MntMeatProducts + -1.56675269740541 * S_MntSweetProducts + 1.85366479127485 * S_MntWines +
-0.58178621903094 * S_MonthsAsCustomer + 1.31024619253935 * S_NumCatalogPurchases +
1.60427001186844 * S_NumDealsPurchases + -0.18447618033353 * S_NumDistPurchases +
-1.29966073003539 * S_NumStorePurchases + -1.12373457341536 * S_NumWebPurchases +
1.46099221440494 * S_NumWebVisitsMonth + 0.17795038564406 * S_RFMstat + -0.82372068140832 *
S_RMntFrq + 0.4480370534729 * S_Recency + 0.19272737691538 * S_Teenhome ;
2469872   +   H1x2_1  = H1x2_1  +     -0.6569942252053 * AcceptedCmp10
2469873   +          +    -0.89152555599538 * AcceptedCmp20  +     1.00488730476017 *
2469874   +        AcceptedCmp30  +     0.34286042692068 * AcceptedCmp40
2469875   +          +    -1.19198820362508 * AcceptedCmp50  +    -0.86571531914686 *
2469876   +        Complain0  +     0.14303136037365 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.6569942252053 * AcceptedCmp10 + -0.89152555599538 *
AcceptedCmp20 + 1.00488730476017 * AcceptedCmp30 + 0.34286042692068 * AcceptedCmp40 +
-1.19198820362508 * AcceptedCmp50 + -0.86571531914686 * Complain0 + 0.14303136037365 *
HigherEducationBinary0 ;
2469877   +   H1x2_2  = H1x2_2  +     1.79481763784518 * AcceptedCmp10
2469878   +          +    -2.85912280013336 * AcceptedCmp20  +     0.16890012708431 *
2469879   +        AcceptedCmp30  +     0.94639083182751 * AcceptedCmp40
2469880   +          +    -0.62141828005946 * AcceptedCmp50  +    -0.39098882491277 *
2469881   +        Complain0  +     0.85700787946581 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 1.79481763784518 * AcceptedCmp10 + -2.85912280013336 *
AcceptedCmp20 + 0.16890012708431 * AcceptedCmp30 + 0.94639083182751 * AcceptedCmp40 +
-0.62141828005946 * AcceptedCmp50 + -0.39098882491277 * Complain0 + 0.85700787946581 *
HigherEducationBinary0 ;
2469882   +   H1x2_1  = H1x2_1  +      0.0737054452993 * Education2n_Cycle
2469883   +          +       0.362372261752 * EducationBasic  +      -1.485941295677 *
2469884   +        EducationGraduation  +    -0.81257694655594 * EducationMaster
2469885   +          +     0.59819559998538 * Marital_StatusDivorced
2469886   +          +     0.92957772553633 * Marital_StatusMarried
2469887   +          +    -1.11796266958894 * Marital_StatusSingle
2469888   +          +     -2.0576132087002 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 0.0737054452993 * Education2n_Cycle + 0.362372261752 *
EducationBasic + -1.485941295677 * EducationGraduation + -0.81257694655594 * EducationMaster +
0.59819559998538 * Marital_StatusDivorced + 0.92957772553633 * Marital_StatusMarried +
-1.11796266958894 * Marital_StatusSingle + -2.0576132087002 * Marital_StatusTogether ;
2469889   +   H1x2_2  = H1x2_2  +    -1.10016528859962 * Education2n_Cycle
2469890   +          +    -1.46816646165468 * EducationBasic  +    -0.11241499152788 *
2469891   +        EducationGraduation  +    -0.65110715251273 * EducationMaster
2469892   +          +      1.0870909562212 * Marital_StatusDivorced
2469893   +          +     1.50333961797515 * Marital_StatusMarried
2469894   +          +    -1.41407780765932 * Marital_StatusSingle
2469895   +          +    -0.52528072358697 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -1.10016528859962 * Education2n_Cycle +
-1.46816646165468 * EducationBasic + -0.11241499152788 * EducationGraduation +
-0.65110715251273 * EducationMaster + 1.0870909562212 * Marital_StatusDivorced +
1.50333961797515 * Marital_StatusMarried + -1.41407780765932 * Marital_StatusSingle +
-0.52528072358697 * Marital_StatusTogether ;
2469896   +   H1x2_1  =     1.46376024534028 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.46376024534028 + H1x2_1 ;
2469897   +   H1x2_2  =    -0.21341526379366 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.21341526379366 + H1x2_2 ;
2469898   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2469899   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2469900   +   H1x2_1  = EXP(MIN(-0.5 * H1x2_1 **2, _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(MIN(-0.5 * H1x2_1 **2, _EXP_BAR));
2469901   +   H1x2_2  = EXP(MIN(-0.5 * H1x2_2 **2, _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(MIN(-0.5 * H1x2_2 **2, _EXP_BAR));
2469902   +END;
MPRINT(EM_DIAGRAM):   END;
2469903   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2469904   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
2469905   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
2469906   +END;
MPRINT(EM_DIAGRAM):   END;
2469907   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2469908   +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
2469909   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2469910   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2469911   +   H1x3_1  =     0.29299707972123 * S_AcceptedCmpTotal
2469912   +          +     1.39797329466471 * S_Age  +    -2.02673480388837 * S_Frq
2469913   +          +    -1.09682777516542 * S_Income  +    -1.22241109888643 *
2469914   +        S_Kidhome  +    -1.35766076466324 * S_Mnt  +    -2.90812690982576 *
2469915   +        S_MntFishProducts  +    -0.48174923069843 * S_MntFruits
2469916   +          +     1.57335575145195 * S_MntGoldProds  +    -0.55248873552176 *
2469917   +        S_MntMeatProducts  +     0.54536808091745 * S_MntSweetProducts
2469918   +          +    -0.41516162035296 * S_MntWines  +     0.07715050596116 *
2469919   +        S_MonthsAsCustomer  +    -2.18785324142159 * S_NumCatalogPurchases
2469920   +          +     -1.1174504455343 * S_NumDealsPurchases
2469921   +          +    -0.18561253113498 * S_NumDistPurchases
2469922   +          +    -0.35231054612792 * S_NumStorePurchases
2469923   +          +      0.9249490354172 * S_NumWebPurchases
2469924   +          +    -0.79868535147175 * S_NumWebVisitsMonth
2469925   +          +    -0.17158151681124 * S_RFMstat  +     -0.9870286843901 *
2469926   +        S_RMntFrq  +     0.62439123699986 * S_Recency
2469927   +          +    -0.45845377794308 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.29299707972123 * S_AcceptedCmpTotal + 1.39797329466471 *
S_Age + -2.02673480388837 * S_Frq + -1.09682777516542 * S_Income + -1.22241109888643 *
S_Kidhome + -1.35766076466324 * S_Mnt + -2.90812690982576 * S_MntFishProducts +
-0.48174923069843 * S_MntFruits + 1.57335575145195 * S_MntGoldProds + -0.55248873552176 *
S_MntMeatProducts + 0.54536808091745 * S_MntSweetProducts + -0.41516162035296 * S_MntWines +
0.07715050596116 * S_MonthsAsCustomer + -2.18785324142159 * S_NumCatalogPurchases +
-1.1174504455343 * S_NumDealsPurchases + -0.18561253113498 * S_NumDistPurchases +
-0.35231054612792 * S_NumStorePurchases + 0.9249490354172 * S_NumWebPurchases +
-0.79868535147175 * S_NumWebVisitsMonth + -0.17158151681124 * S_RFMstat + -0.9870286843901 *
S_RMntFrq + 0.62439123699986 * S_Recency + -0.45845377794308 * S_Teenhome ;
2469928   +   H1x3_2  =    -1.07483179793421 * S_AcceptedCmpTotal
2469929   +          +     1.03558600048684 * S_Age  +     1.11497695424161 * S_Frq
2469930   +          +     0.27297296926116 * S_Income  +     0.77036019999023 *
2469931   +        S_Kidhome  +     0.02567848304605 * S_Mnt  +     0.38661977628442 *
2469932   +        S_MntFishProducts  +    -0.36751750771945 * S_MntFruits
2469933   +          +     0.93924107558212 * S_MntGoldProds  +     0.93046859422523 *
2469934   +        S_MntMeatProducts  +    -0.46124679979068 * S_MntSweetProducts
2469935   +          +    -0.45348234529786 * S_MntWines  +     1.60057890623864 *
2469936   +        S_MonthsAsCustomer  +    -1.74657448073162 * S_NumCatalogPurchases
2469937   +          +     1.05434863590054 * S_NumDealsPurchases
2469938   +          +    -0.73255174632068 * S_NumDistPurchases
2469939   +          +     0.53949953455044 * S_NumStorePurchases
2469940   +          +    -0.61709467816649 * S_NumWebPurchases
2469941   +          +     1.36235282484348 * S_NumWebVisitsMonth
2469942   +          +     -0.0352720913953 * S_RFMstat  +     0.14001475375682 *
2469943   +        S_RMntFrq  +    -0.24276831608869 * S_Recency
2469944   +          +     0.09762798365722 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_2 = -1.07483179793421 * S_AcceptedCmpTotal + 1.03558600048684 *
S_Age + 1.11497695424161 * S_Frq + 0.27297296926116 * S_Income + 0.77036019999023 * S_Kidhome
+ 0.02567848304605 * S_Mnt + 0.38661977628442 * S_MntFishProducts + -0.36751750771945 *
S_MntFruits + 0.93924107558212 * S_MntGoldProds + 0.93046859422523 * S_MntMeatProducts +
-0.46124679979068 * S_MntSweetProducts + -0.45348234529786 * S_MntWines + 1.60057890623864 *
S_MonthsAsCustomer + -1.74657448073162 * S_NumCatalogPurchases + 1.05434863590054 *
S_NumDealsPurchases + -0.73255174632068 * S_NumDistPurchases + 0.53949953455044 *
S_NumStorePurchases + -0.61709467816649 * S_NumWebPurchases + 1.36235282484348 *
S_NumWebVisitsMonth + -0.0352720913953 * S_RFMstat + 0.14001475375682 * S_RMntFrq +
-0.24276831608869 * S_Recency + 0.09762798365722 * S_Teenhome ;
2469945   +   H1x3_1  = H1x3_1  +    -0.94208577947628 * AcceptedCmp10
2469946   +          +     -0.5233017415423 * AcceptedCmp20  +    -0.76900164563331 *
2469947   +        AcceptedCmp30  +    -0.79512141055877 * AcceptedCmp40
2469948   +          +     0.20126599116957 * AcceptedCmp50  +    -0.43046555689873 *
2469949   +        Complain0  +     0.31565229685815 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + -0.94208577947628 * AcceptedCmp10 + -0.5233017415423 *
AcceptedCmp20 + -0.76900164563331 * AcceptedCmp30 + -0.79512141055877 * AcceptedCmp40 +
0.20126599116957 * AcceptedCmp50 + -0.43046555689873 * Complain0 + 0.31565229685815 *
HigherEducationBinary0 ;
2469950   +   H1x3_2  = H1x3_2  +    -1.24961064002454 * AcceptedCmp10
2469951   +          +    -0.89859693224833 * AcceptedCmp20  +     1.15884958881232 *
2469952   +        AcceptedCmp30  +     0.38250389164472 * AcceptedCmp40
2469953   +          +     0.47123004358879 * AcceptedCmp50  +     -2.1232679844098 *
2469954   +        Complain0  +     0.97226091069674 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + -1.24961064002454 * AcceptedCmp10 + -0.89859693224833
* AcceptedCmp20 + 1.15884958881232 * AcceptedCmp30 + 0.38250389164472 * AcceptedCmp40 +
0.47123004358879 * AcceptedCmp50 + -2.1232679844098 * Complain0 + 0.97226091069674 *
HigherEducationBinary0 ;
2469955   +   H1x3_1  = H1x3_1  +    -0.07500306665919 * Education2n_Cycle
2469956   +          +     0.04122924311058 * EducationBasic  +    -0.49410102102951 *
2469957   +        EducationGraduation  +    -0.45477734340809 * EducationMaster
2469958   +          +     0.22253248036322 * Marital_StatusDivorced
2469959   +          +    -1.72455332745001 * Marital_StatusMarried
2469960   +          +     0.57787272107232 * Marital_StatusSingle
2469961   +          +     0.16267074825086 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + -0.07500306665919 * Education2n_Cycle +
0.04122924311058 * EducationBasic + -0.49410102102951 * EducationGraduation +
-0.45477734340809 * EducationMaster + 0.22253248036322 * Marital_StatusDivorced +
-1.72455332745001 * Marital_StatusMarried + 0.57787272107232 * Marital_StatusSingle +
0.16267074825086 * Marital_StatusTogether ;
2469962   +   H1x3_2  = H1x3_2  +    -0.21560233542581 * Education2n_Cycle
2469963   +          +    -0.36476815429069 * EducationBasic  +     1.63334881201349 *
2469964   +        EducationGraduation  +    -1.12620982139344 * EducationMaster
2469965   +          +     0.14637124403046 * Marital_StatusDivorced
2469966   +          +     0.18905186437528 * Marital_StatusMarried
2469967   +          +     0.00511958458521 * Marital_StatusSingle
2469968   +          +      -0.915980703129 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + -0.21560233542581 * Education2n_Cycle +
-0.36476815429069 * EducationBasic + 1.63334881201349 * EducationGraduation +
-1.12620982139344 * EducationMaster + 0.14637124403046 * Marital_StatusDivorced +
0.18905186437528 * Marital_StatusMarried + 0.00511958458521 * Marital_StatusSingle +
-0.915980703129 * Marital_StatusTogether ;
2469969   +   H1x3_1  =     0.54853846322055 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.54853846322055 + H1x3_1 ;
2469970   +   H1x3_2  =     1.36395858099198 + H1x3_2 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = 1.36395858099198 + H1x3_2 ;
2469971   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2469972   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2469973   +   H1x3_1  = EXP(MIN(H1x3_1 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x3_1 = EXP(MIN(H1x3_1 , _EXP_BAR));
2469974   +   H1x3_2  = EXP(MIN(H1x3_2 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x3_2 = EXP(MIN(H1x3_2 , _EXP_BAR));
2469975   +END;
MPRINT(EM_DIAGRAM):   END;
2469976   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2469977   +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
2469978   +   H1x3_2  = .;
MPRINT(EM_DIAGRAM):   H1x3_2 = .;
2469979   +END;
MPRINT(EM_DIAGRAM):   END;
2469980   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2469981   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2469982   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2469983   +
2469984   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2469985   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2469986   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2469987   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2469988   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2469989   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2469990   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2469991   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2469992   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2469993   +end;
MPRINT(EM_DIAGRAM):   end;
2469994   +else do;
MPRINT(EM_DIAGRAM):   else do;
2469995   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2469996   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2469997   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2469998   +   end;
MPRINT(EM_DIAGRAM):   end;
2469999   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2470000   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2470001   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2470002   +   end;
MPRINT(EM_DIAGRAM):   end;
2470003   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2470004   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2470005   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2470006   +   end;
MPRINT(EM_DIAGRAM):   end;
2470007   +end;
MPRINT(EM_DIAGRAM):   end;
2470008   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2470009   +   P_DepVar1  =    -10.6892993503201 * H1x1_1  +     16.2938756734008 * H1x1_2
2470010   +         ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -10.6892993503201 * H1x1_1 + 16.2938756734008 * H1x1_2 ;
2470011   +   P_DepVar1  = P_DepVar1  +      1.2332183930826 * H1x2_1
2470012   +          +    -0.85206858106106 * H1x2_2 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 + 1.2332183930826 * H1x2_1 + -0.85206858106106 *
H1x2_2 ;
2470013   +   P_DepVar1  = P_DepVar1  +    -0.00087126688031 * H1x3_1
2470014   +          +    -0.00025812675645 * H1x3_2 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 + -0.00087126688031 * H1x3_1 + -0.00025812675645 *
H1x3_2 ;
2470015   +   P_DepVar1  =     2.20710379818135 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.20710379818135 + P_DepVar1 ;
2470016   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2470017   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2470018   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2470019   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2470020   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2470021   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2470022   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2470023   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2470024   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2470025   +END;
MPRINT(EM_DIAGRAM):   END;
2470026   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2470027   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2470028   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2470029   +END;
MPRINT(EM_DIAGRAM):   END;
2470030   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2470031   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2470032   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2470033   +END;
MPRINT(EM_DIAGRAM):   END;
2470034   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2470035   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2470036   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2470037   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2470038   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2470039   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2470040   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2470041   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2470042   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2470043   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2470044   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2470045   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2470046   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2470047   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2470048   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2470049   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2470050   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2470051   +END;
MPRINT(EM_DIAGRAM):   END;
2470052   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2470053   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2470054   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2470055   +drop
2470056   +H1x1_1
2470057   +H1x1_2
2470058   +H1x2_1
2470059   +H1x2_2
2470060   +H1x3_1
2470061   +H1x3_2
2470062   +;
MPRINT(EM_DIAGRAM):   drop H1x1_1 H1x1_2 H1x2_1 H1x2_2 H1x3_1 H1x3_2 ;
2470063   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2470064   +* Renaming variables for AutoNeural7;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural7;
2470065   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2470066   +* Renaming Posterior variables for AutoNeural7;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural7;
2470067   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2470068   +drop AutoNeural7_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural7_P_DepVar1;
2470069   +AutoNeural7_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural7_P_DepVar1 = P_DepVar1;
2470070   +drop AutoNeural7_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural7_P_DepVar0;
2470071   +AutoNeural7_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural7_P_DepVar0 = P_DepVar0;
2470072   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2470073   +* Renaming _WARN_ variable for AutoNeural7;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural7;
2470074   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2470075   +length AutoNeural7_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural7_WARN_ $4;
2470076   +drop AutoNeural7_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural7_WARN_;
2470077   +AutoNeural7_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural7_WARN_ = _WARN_;
2470078   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2470079   +* Ensmbl46: Scoring Code of model 5 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl46: Scoring Code of model 5 of 5;
2470080   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2470081   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2470082   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
2470083   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2470084   +* NODE: AutoNeural10;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural10;
2470085   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2470086   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2470087   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2470088   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2470089   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2470090   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2470091   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2470092   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2470093   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2470094   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2470095   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2470096   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2470097   +LENGTH _WARN_ $4
2470098   +      F_DepVar  $ 12
2470099   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2470100   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2470101   +
2470102   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2470103   +
2470104   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2470105   +
2470106   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2470107   +
2470108   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2470109   +
2470110   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2470111   +
2470112   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2470113   +
2470114   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2470115   +
2470116   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2470117   +
2470118   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2470119   +
2470120   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2470121   +
2470122   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2470123   +
2470124   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
The SAS System
 
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2470125   +
2470126   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2470127   +
2470128   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2470129   +
2470130   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2470131   +
2470132   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2470133   +
2470134   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2470135   +
2470136   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2470137   +
2470138   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2470139   +
2470140   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2470141   +
2470142   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2470143   +
2470144   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2470145   +
2470146   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2470147   +
2470148   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2470149   +
2470150   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2470151   +
2470152   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2470153   +
2470154   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2470155   +
2470156   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2470157   +
2470158   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2470159   +
2470160   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2470161   +
2470162   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2470163   +
2470164   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2470165   +
2470166   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2470167   +
2470168   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2470169   +
2470170   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2470171   +
2470172   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2470173   +
2470174   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2470175   +
2470176   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2470177   +
2470178   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2470179   +
2470180   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2470181   +
2470182   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2470183   +
2470184   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
2470185   +
2470186   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
2470187   +
2470188   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
2470189   +
2470190   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
2470191   +
2470192   +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
2470193   +
2470194   +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
2470195   +
2470196   +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
2470197   +
2470198   +      label H1x3_2 = 'Hidden: H1x3_=2' ;
MPRINT(EM_DIAGRAM):   label H1x3_2 = 'Hidden: H1x3_=2' ;
2470199   +
2470200   +      label H1x3_3 = 'Hidden: H1x3_=3' ;
MPRINT(EM_DIAGRAM):   label H1x3_3 = 'Hidden: H1x3_=3' ;
2470201   +
2470202   +      label H1x3_4 = 'Hidden: H1x3_=4' ;
MPRINT(EM_DIAGRAM):   label H1x3_4 = 'Hidden: H1x3_=4' ;
2470203   +
2470204   +      label H1x3_5 = 'Hidden: H1x3_=5' ;
MPRINT(EM_DIAGRAM):   label H1x3_5 = 'Hidden: H1x3_=5' ;
2470205   +
2470206   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2470207   +
2470208   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2470209   +
2470210   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2470211   +
2470212   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2470213   +
2470214   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2470215   +
2470216   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2470217   +
2470218   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2470219   +
2470220   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2470221   +
2470222   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2470223   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2470224   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2470225   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2470226   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2470227   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2470228   +end;
MPRINT(EM_DIAGRAM):   end;
2470229   +else do;
MPRINT(EM_DIAGRAM):   else do;
2470230   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2470231   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2470232   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2470233   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2470234   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2470235   +   end;
MPRINT(EM_DIAGRAM):   end;
2470236   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2470237   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2470238   +   end;
MPRINT(EM_DIAGRAM):   end;
2470239   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2470240   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2470241   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2470242   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2470243   +   end;
MPRINT(EM_DIAGRAM):   end;
2470244   +end;
MPRINT(EM_DIAGRAM):   end;
2470245   +
2470246   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2470247   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2470248   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2470249   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2470250   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2470251   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2470252   +end;
MPRINT(EM_DIAGRAM):   end;
2470253   +else do;
MPRINT(EM_DIAGRAM):   else do;
2470254   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2470255   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2470256   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2470257   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2470258   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2470259   +   end;
MPRINT(EM_DIAGRAM):   end;
2470260   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2470261   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2470262   +   end;
MPRINT(EM_DIAGRAM):   end;
2470263   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2470264   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2470265   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2470266   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2470267   +   end;
MPRINT(EM_DIAGRAM):   end;
2470268   +end;
MPRINT(EM_DIAGRAM):   end;
2470269   +
2470270   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2470271   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2470272   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2470273   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2470274   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2470275   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2470276   +end;
MPRINT(EM_DIAGRAM):   end;
2470277   +else do;
MPRINT(EM_DIAGRAM):   else do;
2470278   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2470279   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2470280   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2470281   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2470282   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2470283   +   end;
MPRINT(EM_DIAGRAM):   end;
2470284   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2470285   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2470286   +   end;
MPRINT(EM_DIAGRAM):   end;
2470287   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2470288   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2470289   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2470290   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2470291   +   end;
MPRINT(EM_DIAGRAM):   end;
2470292   +end;
MPRINT(EM_DIAGRAM):   end;
2470293   +
2470294   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2470295   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2470296   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2470297   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2470298   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2470299   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2470300   +end;
MPRINT(EM_DIAGRAM):   end;
2470301   +else do;
MPRINT(EM_DIAGRAM):   else do;
2470302   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2470303   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2470304   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2470305   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2470306   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2470307   +   end;
MPRINT(EM_DIAGRAM):   end;
2470308   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2470309   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2470310   +   end;
MPRINT(EM_DIAGRAM):   end;
2470311   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2470312   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2470313   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2470314   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2470315   +   end;
MPRINT(EM_DIAGRAM):   end;
2470316   +end;
MPRINT(EM_DIAGRAM):   end;
2470317   +
2470318   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2470319   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2470320   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2470321   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2470322   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2470323   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2470324   +end;
MPRINT(EM_DIAGRAM):   end;
2470325   +else do;
MPRINT(EM_DIAGRAM):   else do;
2470326   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2470327   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2470328   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2470329   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2470330   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2470331   +   end;
MPRINT(EM_DIAGRAM):   end;
2470332   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2470333   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2470334   +   end;
MPRINT(EM_DIAGRAM):   end;
2470335   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2470336   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2470337   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2470338   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2470339   +   end;
MPRINT(EM_DIAGRAM):   end;
2470340   +end;
MPRINT(EM_DIAGRAM):   end;
2470341   +
2470342   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2470343   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2470344   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2470345   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2470346   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2470347   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2470348   +end;
MPRINT(EM_DIAGRAM):   end;
2470349   +else do;
MPRINT(EM_DIAGRAM):   else do;
2470350   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2470351   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2470352   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2470353   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2470354   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2470355   +   end;
MPRINT(EM_DIAGRAM):   end;
2470356   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2470357   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2470358   +   end;
MPRINT(EM_DIAGRAM):   end;
2470359   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2470360   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2470361   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2470362   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2470363   +   end;
MPRINT(EM_DIAGRAM):   end;
2470364   +end;
MPRINT(EM_DIAGRAM):   end;
2470365   +
2470366   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2470367   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2470368   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2470369   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2470370   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2470371   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2470372   +end;
MPRINT(EM_DIAGRAM):   end;
2470373   +else do;
MPRINT(EM_DIAGRAM):   else do;
2470374   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2470375   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2470376   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2470377   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2470378   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2470379   +   end;
MPRINT(EM_DIAGRAM):   end;
2470380   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2470381   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2470382   +   end;
MPRINT(EM_DIAGRAM):   end;
2470383   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2470384   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2470385   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2470386   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2470387   +   end;
MPRINT(EM_DIAGRAM):   end;
2470388   +end;
MPRINT(EM_DIAGRAM):   end;
2470389   +
2470390   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2470391   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
2470392   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2470393   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2470394   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2470395   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2470396   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2470397   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2470398   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2470399   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2470400   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2470401   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2470402   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2470403   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2470404   +end;
MPRINT(EM_DIAGRAM):   end;
2470405   +else do;
MPRINT(EM_DIAGRAM):   else do;
2470406   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2470407   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2470408   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2470409   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2470410   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2470411   +   end;
MPRINT(EM_DIAGRAM):   end;
2470412   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2470413   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2470414   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2470415   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2470416   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2470417   +   end;
MPRINT(EM_DIAGRAM):   end;
2470418   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2470419   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2470420   +   end;
MPRINT(EM_DIAGRAM):   end;
2470421   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2470422   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2470423   +   end;
MPRINT(EM_DIAGRAM):   end;
2470424   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2470425   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2470426   +   end;
MPRINT(EM_DIAGRAM):   end;
2470427   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2470428   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2470429   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2470430   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2470431   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2470432   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2470433   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2470434   +   end;
MPRINT(EM_DIAGRAM):   end;
2470435   +end;
MPRINT(EM_DIAGRAM):   end;
2470436   +
2470437   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2470438   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2470439   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
2470440   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2470441   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2470442   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2470443   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2470444   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2470445   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2470446   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2470447   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2470448   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2470449   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2470450   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2470451   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2470452   +end;
MPRINT(EM_DIAGRAM):   end;
2470453   +else do;
MPRINT(EM_DIAGRAM):   else do;
2470454   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2470455   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2470456   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2470457   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2470458   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2470459   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2470460   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2470461   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2470462   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2470463   +         end;
MPRINT(EM_DIAGRAM):   end;
2470464   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2470465   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2470466   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2470467   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2470468   +            end;
MPRINT(EM_DIAGRAM):   end;
2470469   +         end;
MPRINT(EM_DIAGRAM):   end;
2470470   +      end;
MPRINT(EM_DIAGRAM):   end;
2470471   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2470472   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2470473   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2470474   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2470475   +         end;
MPRINT(EM_DIAGRAM):   end;
2470476   +      end;
MPRINT(EM_DIAGRAM):   end;
2470477   +   end;
MPRINT(EM_DIAGRAM):   end;
2470478   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2470479   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2470480   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2470481   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2470482   +      end;
MPRINT(EM_DIAGRAM):   end;
2470483   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2470484   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2470485   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2470486   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2470487   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2470488   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2470489   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2470490   +         end;
MPRINT(EM_DIAGRAM):   end;
2470491   +      end;
MPRINT(EM_DIAGRAM):   end;
2470492   +   end;
MPRINT(EM_DIAGRAM):   end;
2470493   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2470494   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2470495   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2470496   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2470497   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2470498   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2470499   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2470500   +   end;
MPRINT(EM_DIAGRAM):   end;
2470501   +end;
MPRINT(EM_DIAGRAM):   end;
2470502   +
2470503   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2470504   +*** Checking missing input Interval
2470505   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2470506   +
2470507   +IF NMISS(
2470508   +   AcceptedCmpTotal ,
2470509   +   Age ,
2470510   +   Frq ,
2470511   +   Income ,
2470512   +   Kidhome ,
2470513   +   Mnt ,
2470514   +   MntFishProducts ,
2470515   +   MntFruits ,
2470516   +   MntGoldProds ,
2470517   +   MntMeatProducts ,
2470518   +   MntSweetProducts ,
2470519   +   MntWines ,
2470520   +   MonthsAsCustomer ,
2470521   +   NumCatalogPurchases ,
2470522   +   NumDealsPurchases ,
2470523   +   NumDistPurchases ,
2470524   +   NumStorePurchases ,
2470525   +   NumWebPurchases ,
2470526   +   NumWebVisitsMonth ,
2470527   +   RFMstat ,
2470528   +   RMntFrq ,
2470529   +   Recency ,
2470530   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
2470531   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2470532   +
2470533   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2470534   +END;
MPRINT(EM_DIAGRAM):   END;
2470535   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2470536   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2470537   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2470538   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2470539   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2470540   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2470541   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2470542   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2470543   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2470544   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2470545   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2470546   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2470547   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2470548   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2470549   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2470550   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2470551   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2470552   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2470553   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2470554   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2470555   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2470556   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2470557   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
2470558   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2470559   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2470560   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2470561   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2470562   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2470563   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2470564   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2470565   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2470566   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2470567   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2470568   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2470569   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2470570   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2470571   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2470572   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2470573   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2470574   +END;
MPRINT(EM_DIAGRAM):   END;
2470575   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2470576   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2470577   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2470578   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2470579   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2470580   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2470581   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2470582   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2470583   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2470584   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2470585   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2470586   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2470587   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2470588   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2470589   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2470590   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2470591   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2470592   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2470593   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2470594   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2470595   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2470596   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2470597   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
2470598   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2470599   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2470600   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2470601   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2470602   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2470603   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2470604   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2470605   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2470606   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2470607   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2470608   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
2470609   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2470610   +   ELSE S_NumCatalogPurchases
2470611   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2470612   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2470613   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2470614   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2470615   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2470616   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2470617   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2470618   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2470619   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2470620   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2470621   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2470622   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2470623   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2470624   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2470625   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2470626   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2470627   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2470628   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2470629   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2470630   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2470631   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2470632   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2470633   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2470634   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2470635   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2470636   +END;
MPRINT(EM_DIAGRAM):   END;
2470637   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2470638   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2470639   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2470640   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2470641   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2470642   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2470643   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2470644   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2470645   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2470646   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2470647   +   H1x1_1  =     -1.5235159368138 * S_AcceptedCmpTotal
2470648   +          +     0.13941271308016 * S_Age  +    -0.84765157270503 * S_Frq
2470649   +          +    -0.89386555046676 * S_Income  +     1.62709236629244 *
2470650   +        S_Kidhome  +    -1.21416429819342 * S_Mnt  +    -1.95640488965637 *
2470651   +        S_MntFishProducts  +    -0.08621024993404 * S_MntFruits
2470652   +          +    -0.38536990009586 * S_MntGoldProds  +     3.12553097304637 *
2470653   +        S_MntMeatProducts  +    -2.50680711036653 * S_MntSweetProducts
2470654   +          +    -3.77770073626477 * S_MntWines  +     0.39118206604766 *
2470655   +        S_MonthsAsCustomer  +     1.80485993754239 * S_NumCatalogPurchases
2470656   +          +     3.21215425524619 * S_NumDealsPurchases
2470657   +          +     0.08695198777156 * S_NumDistPurchases
2470658   +          +    -2.58697971128295 * S_NumStorePurchases
2470659   +          +    -0.44431924796059 * S_NumWebPurchases
2470660   +          +     -1.4492698984921 * S_NumWebVisitsMonth
2470661   +          +     2.16652214648037 * S_RFMstat  +    -0.48027961131639 *
2470662   +        S_RMntFrq  +    -0.27206877070748 * S_Recency
2470663   +          +    -0.34774852853763 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.5235159368138 * S_AcceptedCmpTotal + 0.13941271308016 *
S_Age + -0.84765157270503 * S_Frq + -0.89386555046676 * S_Income + 1.62709236629244 *
S_Kidhome + -1.21416429819342 * S_Mnt + -1.95640488965637 * S_MntFishProducts +
-0.08621024993404 * S_MntFruits + -0.38536990009586 * S_MntGoldProds + 3.12553097304637 *
S_MntMeatProducts + -2.50680711036653 * S_MntSweetProducts + -3.77770073626477 * S_MntWines +
0.39118206604766 * S_MonthsAsCustomer + 1.80485993754239 * S_NumCatalogPurchases +
3.21215425524619 * S_NumDealsPurchases + 0.08695198777156 * S_NumDistPurchases +
-2.58697971128295 * S_NumStorePurchases + -0.44431924796059 * S_NumWebPurchases +
-1.4492698984921 * S_NumWebVisitsMonth + 2.16652214648037 * S_RFMstat + -0.48027961131639 *
S_RMntFrq + -0.27206877070748 * S_Recency + -0.34774852853763 * S_Teenhome ;
2470664   +   H1x1_2  =     -0.5665707820209 * S_AcceptedCmpTotal
2470665   +          +    -1.33582859121223 * S_Age  +     0.90483024742522 * S_Frq
2470666   +          +    -2.00588558815165 * S_Income  +      3.0373198083895 *
2470667   +        S_Kidhome  +      0.4356905004225 * S_Mnt  +     0.19619626354366 *
2470668   +        S_MntFishProducts  +    -1.09111340184132 * S_MntFruits
2470669   +          +     0.36844676336289 * S_MntGoldProds  +    -2.23832561375429 *
2470670   +        S_MntMeatProducts  +    -0.18280081530069 * S_MntSweetProducts
2470671   +          +     2.11599309139107 * S_MntWines  +     0.68147940490709 *
2470672   +        S_MonthsAsCustomer  +    -0.73940648599397 * S_NumCatalogPurchases
2470673   +          +    -0.83844506398484 * S_NumDealsPurchases
2470674   +          +     0.60831936516804 * S_NumDistPurchases
2470675   +          +     1.79084087761626 * S_NumStorePurchases
2470676   +          +     1.17119196356453 * S_NumWebPurchases
2470677   +          +    -3.63586683518718 * S_NumWebVisitsMonth
2470678   +          +     0.60521990735996 * S_RFMstat  +     0.56036381019221 *
2470679   +        S_RMntFrq  +     3.84599118896159 * S_Recency
2470680   +          +     2.42091939246471 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.5665707820209 * S_AcceptedCmpTotal + -1.33582859121223 *
S_Age + 0.90483024742522 * S_Frq + -2.00588558815165 * S_Income + 3.0373198083895 * S_Kidhome
+ 0.4356905004225 * S_Mnt + 0.19619626354366 * S_MntFishProducts + -1.09111340184132 *
S_MntFruits + 0.36844676336289 * S_MntGoldProds + -2.23832561375429 * S_MntMeatProducts +
-0.18280081530069 * S_MntSweetProducts + 2.11599309139107 * S_MntWines + 0.68147940490709 *
S_MonthsAsCustomer + -0.73940648599397 * S_NumCatalogPurchases + -0.83844506398484 *
S_NumDealsPurchases + 0.60831936516804 * S_NumDistPurchases + 1.79084087761626 *
S_NumStorePurchases + 1.17119196356453 * S_NumWebPurchases + -3.63586683518718 *
S_NumWebVisitsMonth + 0.60521990735996 * S_RFMstat + 0.56036381019221 * S_RMntFrq +
3.84599118896159 * S_Recency + 2.42091939246471 * S_Teenhome ;
2470681   +   H1x1_3  =    -2.34864034635966 * S_AcceptedCmpTotal
2470682   +          +     0.38417502023066 * S_Age  +     0.18241442054661 * S_Frq
2470683   +          +    -0.36643054878492 * S_Income  +    -0.01464967964014 *
2470684   +        S_Kidhome  +     0.13084033882631 * S_Mnt  +     1.43066752801424 *
2470685   +        S_MntFishProducts  +     0.30678881611098 * S_MntFruits
2470686   +          +    -0.35038082288662 * S_MntGoldProds  +    -6.79650673935808 *
2470687   +        S_MntMeatProducts  +    -0.35154740308081 * S_MntSweetProducts
2470688   +          +     4.53406963590593 * S_MntWines  +     0.35082802515055 *
2470689   +        S_MonthsAsCustomer  +    -1.62489937965567 * S_NumCatalogPurchases
2470690   +          +    -0.31484031572628 * S_NumDealsPurchases
2470691   +          +    -0.18273941035679 * S_NumDistPurchases
2470692   +          +     0.99501789733882 * S_NumStorePurchases
2470693   +          +     1.32014078829379 * S_NumWebPurchases
2470694   +          +    -1.34393498450215 * S_NumWebVisitsMonth
2470695   +          +    -0.93549119966022 * S_RFMstat  +    -1.74825390192193 *
2470696   +        S_RMntFrq  +     0.84406941726743 * S_Recency
2470697   +          +     -0.5004540381333 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -2.34864034635966 * S_AcceptedCmpTotal + 0.38417502023066 *
S_Age + 0.18241442054661 * S_Frq + -0.36643054878492 * S_Income + -0.01464967964014 *
S_Kidhome + 0.13084033882631 * S_Mnt + 1.43066752801424 * S_MntFishProducts + 0.30678881611098
* S_MntFruits + -0.35038082288662 * S_MntGoldProds + -6.79650673935808 * S_MntMeatProducts +
-0.35154740308081 * S_MntSweetProducts + 4.53406963590593 * S_MntWines + 0.35082802515055 *
S_MonthsAsCustomer + -1.62489937965567 * S_NumCatalogPurchases + -0.31484031572628 *
S_NumDealsPurchases + -0.18273941035679 * S_NumDistPurchases + 0.99501789733882 *
S_NumStorePurchases + 1.32014078829379 * S_NumWebPurchases + -1.34393498450215 *
S_NumWebVisitsMonth + -0.93549119966022 * S_RFMstat + -1.74825390192193 * S_RMntFrq +
0.84406941726743 * S_Recency + -0.5004540381333 * S_Teenhome ;
2470698   +   H1x1_4  =     0.46772023050431 * S_AcceptedCmpTotal
2470699   +          +    -0.64609651992636 * S_Age  +     0.65433283816167 * S_Frq
2470700   +          +     0.97922442633265 * S_Income  +    -0.37705204232056 *
2470701   +        S_Kidhome  +     0.00937752600299 * S_Mnt  +     -0.6082843846013 *
2470702   +        S_MntFishProducts  +     -0.6227107898918 * S_MntFruits
2470703   +          +      0.0291421224006 * S_MntGoldProds  +     1.09748402313736 *
2470704   +        S_MntMeatProducts  +     0.00604619863622 * S_MntSweetProducts
2470705   +          +    -0.74684537570529 * S_MntWines  +    -0.00266569003481 *
2470706   +        S_MonthsAsCustomer  +     2.01081657735872 * S_NumCatalogPurchases
2470707   +          +     1.19658719134196 * S_NumDealsPurchases
2470708   +          +     0.87478204472986 * S_NumDistPurchases
2470709   +          +    -0.20635856288784 * S_NumStorePurchases
2470710   +          +    -0.89927356974242 * S_NumWebPurchases
2470711   +          +     2.92285244132576 * S_NumWebVisitsMonth
2470712   +          +    -0.10913907245142 * S_RFMstat  +     1.64233441899256 *
2470713   +        S_RMntFrq  +    -3.64945971202322 * S_Recency
2470714   +          +    -1.78841346993558 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.46772023050431 * S_AcceptedCmpTotal + -0.64609651992636 *
S_Age + 0.65433283816167 * S_Frq + 0.97922442633265 * S_Income + -0.37705204232056 * S_Kidhome
+ 0.00937752600299 * S_Mnt + -0.6082843846013 * S_MntFishProducts + -0.6227107898918 *
S_MntFruits + 0.0291421224006 * S_MntGoldProds + 1.09748402313736 * S_MntMeatProducts +
0.00604619863622 * S_MntSweetProducts + -0.74684537570529 * S_MntWines + -0.00266569003481 *
S_MonthsAsCustomer + 2.01081657735872 * S_NumCatalogPurchases + 1.19658719134196 *
S_NumDealsPurchases + 0.87478204472986 * S_NumDistPurchases + -0.20635856288784 *
S_NumStorePurchases + -0.89927356974242 * S_NumWebPurchases + 2.92285244132576 *
S_NumWebVisitsMonth + -0.10913907245142 * S_RFMstat + 1.64233441899256 * S_RMntFrq +
-3.64945971202322 * S_Recency + -1.78841346993558 * S_Teenhome ;
2470715   +   H1x1_5  =    -1.22491918863941 * S_AcceptedCmpTotal
2470716   +          +     0.16201659993217 * S_Age  +     0.17189537824457 * S_Frq
2470717   +          +    -0.87922900323563 * S_Income  +    -0.79268410231108 *
2470718   +        S_Kidhome  +     0.62793961676074 * S_Mnt  +     0.20877761882787 *
2470719   +        S_MntFishProducts  +     0.99367872286661 * S_MntFruits
2470720   +          +     -0.4347564565882 * S_MntGoldProds  +    -0.16203279329295 *
2470721   +        S_MntMeatProducts  +     0.81409215344356 * S_MntSweetProducts
2470722   +          +     1.33482971563984 * S_MntWines  +    -1.17441882196058 *
2470723   +        S_MonthsAsCustomer  +    -1.72330829533107 * S_NumCatalogPurchases
2470724   +          +       -2.32617124568 * S_NumDealsPurchases
2470725   +          +    -0.56589187730672 * S_NumDistPurchases
2470726   +          +     1.07062299863482 * S_NumStorePurchases
2470727   +          +     0.30077273739578 * S_NumWebPurchases
2470728   +          +    -1.67745421915317 * S_NumWebVisitsMonth
2470729   +          +      0.0530074713265 * S_RFMstat  +    -0.55969729655382 *
2470730   +        S_RMntFrq  +     1.32196704233234 * S_Recency
2470731   +          +     1.05470622089613 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.22491918863941 * S_AcceptedCmpTotal + 0.16201659993217 *
S_Age + 0.17189537824457 * S_Frq + -0.87922900323563 * S_Income + -0.79268410231108 *
S_Kidhome + 0.62793961676074 * S_Mnt + 0.20877761882787 * S_MntFishProducts + 0.99367872286661
* S_MntFruits + -0.4347564565882 * S_MntGoldProds + -0.16203279329295 * S_MntMeatProducts +
0.81409215344356 * S_MntSweetProducts + 1.33482971563984 * S_MntWines + -1.17441882196058 *
S_MonthsAsCustomer + -1.72330829533107 * S_NumCatalogPurchases + -2.32617124568 *
S_NumDealsPurchases + -0.56589187730672 * S_NumDistPurchases + 1.07062299863482 *
S_NumStorePurchases + 0.30077273739578 * S_NumWebPurchases + -1.67745421915317 *
S_NumWebVisitsMonth + 0.0530074713265 * S_RFMstat + -0.55969729655382 * S_RMntFrq +
1.32196704233234 * S_Recency + 1.05470622089613 * S_Teenhome ;
2470732   +   H1x1_1  = H1x1_1  +     0.19875423759582 * AcceptedCmp10
2470733   +          +    -1.84163905120352 * AcceptedCmp20  +    -1.63149345314696 *
2470734   +        AcceptedCmp30  +    -1.52652349127913 * AcceptedCmp40
2470735   +          +    -0.97663634905647 * AcceptedCmp50  +    -0.94352222509088 *
2470736   +        Complain0  +    -0.63297203617355 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.19875423759582 * AcceptedCmp10 + -1.84163905120352 *
AcceptedCmp20 + -1.63149345314696 * AcceptedCmp30 + -1.52652349127913 * AcceptedCmp40 +
-0.97663634905647 * AcceptedCmp50 + -0.94352222509088 * Complain0 + -0.63297203617355 *
HigherEducationBinary0 ;
2470737   +   H1x1_2  = H1x1_2  +      0.0505791781839 * AcceptedCmp10
2470738   +          +    -0.19407965320143 * AcceptedCmp20  +     0.35537657271506 *
2470739   +        AcceptedCmp30  +    -0.84577216347728 * AcceptedCmp40
2470740   +          +     1.73085566880686 * AcceptedCmp50  +     0.05800586053869 *
2470741   +        Complain0  +    -0.62505561129469 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.0505791781839 * AcceptedCmp10 + -0.19407965320143 *
AcceptedCmp20 + 0.35537657271506 * AcceptedCmp30 + -0.84577216347728 * AcceptedCmp40 +
1.73085566880686 * AcceptedCmp50 + 0.05800586053869 * Complain0 + -0.62505561129469 *
HigherEducationBinary0 ;
2470742   +   H1x1_3  = H1x1_3  +     0.54825581966403 * AcceptedCmp10
2470743   +          +     -0.0966204838125 * AcceptedCmp20  +    -1.31707923763053 *
2470744   +        AcceptedCmp30  +    -1.21021077486757 * AcceptedCmp40
2470745   +          +     3.29102250037389 * AcceptedCmp50  +    -0.16383687725206 *
2470746   +        Complain0  +     0.00651446514934 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.54825581966403 * AcceptedCmp10 + -0.0966204838125 *
AcceptedCmp20 + -1.31707923763053 * AcceptedCmp30 + -1.21021077486757 * AcceptedCmp40 +
3.29102250037389 * AcceptedCmp50 + -0.16383687725206 * Complain0 + 0.00651446514934 *
HigherEducationBinary0 ;
2470747   +   H1x1_4  = H1x1_4  +    -1.18573650260336 * AcceptedCmp10
2470748   +          +    -1.73968979068234 * AcceptedCmp20  +    -1.31277698137778 *
2470749   +        AcceptedCmp30  +    -1.74346538593922 * AcceptedCmp40
2470750   +          +    -0.72543919818299 * AcceptedCmp50  +    -0.06328353200384 *
2470751   +        Complain0  +     0.74828735398796 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -1.18573650260336 * AcceptedCmp10 + -1.73968979068234
* AcceptedCmp20 + -1.31277698137778 * AcceptedCmp30 + -1.74346538593922 * AcceptedCmp40 +
-0.72543919818299 * AcceptedCmp50 + -0.06328353200384 * Complain0 + 0.74828735398796 *
HigherEducationBinary0 ;
2470752   +   H1x1_5  = H1x1_5  +    -0.19622185523754 * AcceptedCmp10
2470753   +          +     -0.4643498903813 * AcceptedCmp20  +     0.69293644934542 *
2470754   +        AcceptedCmp30  +     0.23077838801355 * AcceptedCmp40
2470755   +          +     0.53061813608476 * AcceptedCmp50  +    -0.56870999936869 *
2470756   +        Complain0  +      0.5917990310858 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.19622185523754 * AcceptedCmp10 + -0.4643498903813 *
AcceptedCmp20 + 0.69293644934542 * AcceptedCmp30 + 0.23077838801355 * AcceptedCmp40 +
0.53061813608476 * AcceptedCmp50 + -0.56870999936869 * Complain0 + 0.5917990310858 *
HigherEducationBinary0 ;
2470757   +   H1x1_1  = H1x1_1  +     1.01422000032629 * Education2n_Cycle
2470758   +          +    -0.77619298826287 * EducationBasic  +     0.35633748974614 *
2470759   +        EducationGraduation  +     0.98491516107588 * EducationMaster
2470760   +          +    -0.27797737429678 * Marital_StatusDivorced
2470761   +          +    -0.08137635862327 * Marital_StatusMarried
2470762   +          +     0.06275411820495 * Marital_StatusSingle
2470763   +          +    -0.19979743343415 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 1.01422000032629 * Education2n_Cycle +
-0.77619298826287 * EducationBasic + 0.35633748974614 * EducationGraduation + 0.98491516107588
* EducationMaster + -0.27797737429678 * Marital_StatusDivorced + -0.08137635862327 *
Marital_StatusMarried + 0.06275411820495 * Marital_StatusSingle + -0.19979743343415 *
Marital_StatusTogether ;
2470764   +   H1x1_2  = H1x1_2  +    -0.66224206017124 * Education2n_Cycle
2470765   +          +     0.80729589186486 * EducationBasic  +     0.75931615755998 *
2470766   +        EducationGraduation  +    -0.05470462753112 * EducationMaster
2470767   +          +     0.05151426841441 * Marital_StatusDivorced
2470768   +          +     1.19165082030442 * Marital_StatusMarried
2470769   +          +    -1.08257080662611 * Marital_StatusSingle
2470770   +          +     0.13534863375625 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.66224206017124 * Education2n_Cycle +
0.80729589186486 * EducationBasic + 0.75931615755998 * EducationGraduation + -0.05470462753112
* EducationMaster + 0.05151426841441 * Marital_StatusDivorced + 1.19165082030442 *
Marital_StatusMarried + -1.08257080662611 * Marital_StatusSingle + 0.13534863375625 *
Marital_StatusTogether ;
2470771   +   H1x1_3  = H1x1_3  +     0.20065577451105 * Education2n_Cycle
2470772   +          +    -0.14205714608311 * EducationBasic  +    -0.07077711368393 *
2470773   +        EducationGraduation  +     0.40262329710793 * EducationMaster
2470774   +          +      0.0238206459022 * Marital_StatusDivorced
2470775   +          +     -0.4653244204261 * Marital_StatusMarried
2470776   +          +     0.13051613619882 * Marital_StatusSingle
2470777   +          +    -0.35951366919755 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.20065577451105 * Education2n_Cycle +
-0.14205714608311 * EducationBasic + -0.07077711368393 * EducationGraduation +
0.40262329710793 * EducationMaster + 0.0238206459022 * Marital_StatusDivorced +
-0.4653244204261 * Marital_StatusMarried + 0.13051613619882 * Marital_StatusSingle +
-0.35951366919755 * Marital_StatusTogether ;
2470778   +   H1x1_4  = H1x1_4  +     -0.8555672630555 * Education2n_Cycle
2470779   +          +     0.58439980233621 * EducationBasic  +     0.04784356342853 *
2470780   +        EducationGraduation  +    -0.79764992264249 * EducationMaster
2470781   +          +     -0.7449356409222 * Marital_StatusDivorced
2470782   +          +    -1.46604673521535 * Marital_StatusMarried
2470783   +          +     0.74484771688818 * Marital_StatusSingle
2470784   +          +    -1.91273009779071 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.8555672630555 * Education2n_Cycle +
0.58439980233621 * EducationBasic + 0.04784356342853 * EducationGraduation + -0.79764992264249
* EducationMaster + -0.7449356409222 * Marital_StatusDivorced + -1.46604673521535 *
Marital_StatusMarried + 0.74484771688818 * Marital_StatusSingle + -1.91273009779071 *
Marital_StatusTogether ;
2470785   +   H1x1_5  = H1x1_5  +    -0.45561096683674 * Education2n_Cycle
2470786   +          +    -0.08389156101858 * EducationBasic  +    -1.24281299616343 *
2470787   +        EducationGraduation  +    -0.00999807517226 * EducationMaster
2470788   +          +    -3.68044980584423 * Marital_StatusDivorced
2470789   +          +     3.14587407902338 * Marital_StatusMarried
2470790   +          +    -2.66118132753024 * Marital_StatusSingle
2470791   +          +     3.50991640149914 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.45561096683674 * Education2n_Cycle +
-0.08389156101858 * EducationBasic + -1.24281299616343 * EducationGraduation +
-0.00999807517226 * EducationMaster + -3.68044980584423 * Marital_StatusDivorced +
3.14587407902338 * Marital_StatusMarried + -2.66118132753024 * Marital_StatusSingle +
3.50991640149914 * Marital_StatusTogether ;
2470792   +   H1x1_1  =    -2.87464368543529 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -2.87464368543529 + H1x1_1 ;
2470793   +   H1x1_2  =     0.69745433976458 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.69745433976458 + H1x1_2 ;
2470794   +   H1x1_3  =    -0.71895677211617 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.71895677211617 + H1x1_3 ;
2470795   +   H1x1_4  =    -3.07619671976178 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -3.07619671976178 + H1x1_4 ;
2470796   +   H1x1_5  =    -1.74345318000473 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.74345318000473 + H1x1_5 ;
2470797   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2470798   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2470799   +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
2470800   +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
2470801   +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
2470802   +   H1x1_4  = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
2470803   +   H1x1_5  = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_5 = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
2470804   +END;
MPRINT(EM_DIAGRAM):   END;
2470805   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2470806   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2470807   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2470808   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2470809   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2470810   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
2470811   +END;
MPRINT(EM_DIAGRAM):   END;
2470812   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2470813   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
2470814   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2470815   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2470816   +   H1x2_1  =     0.02206354442682 * S_AcceptedCmpTotal
2470817   +          +    -1.34753268833642 * S_Age  +    -2.08377331969695 * S_Frq
2470818   +          +    -1.39854535380539 * S_Income  +     2.13620611759545 *
2470819   +        S_Kidhome  +    -1.50515365217324 * S_Mnt  +     0.85499321862984 *
2470820   +        S_MntFishProducts  +    -1.17732452790345 * S_MntFruits
2470821   +          +     1.52355640622249 * S_MntGoldProds  +     1.31854239360457 *
2470822   +        S_MntMeatProducts  +    -0.03265851293389 * S_MntSweetProducts
2470823   +          +     2.18666242847435 * S_MntWines  +     0.08246249957908 *
2470824   +        S_MonthsAsCustomer  +    -1.06901902236609 * S_NumCatalogPurchases
2470825   +          +     0.89261880438741 * S_NumDealsPurchases
2470826   +          +    -1.61647413199892 * S_NumDistPurchases
2470827   +          +    -0.56304669045195 * S_NumStorePurchases
2470828   +          +      0.7766837080945 * S_NumWebPurchases
2470829   +          +     -2.2953497398902 * S_NumWebVisitsMonth
2470830   +          +    -3.34547809243199 * S_RFMstat  +     0.07311937799261 *
2470831   +        S_RMntFrq  +     -0.5786489917247 * S_Recency
2470832   +          +    -1.06532056361117 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.02206354442682 * S_AcceptedCmpTotal + -1.34753268833642 *
S_Age + -2.08377331969695 * S_Frq + -1.39854535380539 * S_Income + 2.13620611759545 *
S_Kidhome + -1.50515365217324 * S_Mnt + 0.85499321862984 * S_MntFishProducts +
-1.17732452790345 * S_MntFruits + 1.52355640622249 * S_MntGoldProds + 1.31854239360457 *
S_MntMeatProducts + -0.03265851293389 * S_MntSweetProducts + 2.18666242847435 * S_MntWines +
0.08246249957908 * S_MonthsAsCustomer + -1.06901902236609 * S_NumCatalogPurchases +
0.89261880438741 * S_NumDealsPurchases + -1.61647413199892 * S_NumDistPurchases +
-0.56304669045195 * S_NumStorePurchases + 0.7766837080945 * S_NumWebPurchases +
-2.2953497398902 * S_NumWebVisitsMonth + -3.34547809243199 * S_RFMstat + 0.07311937799261 *
S_RMntFrq + -0.5786489917247 * S_Recency + -1.06532056361117 * S_Teenhome ;
2470833   +   H1x2_2  =      0.0341880757331 * S_AcceptedCmpTotal
2470834   +          +     0.72034771315738 * S_Age  +     0.64155966340389 * S_Frq
2470835   +          +    -1.06570008729492 * S_Income  +    -1.84532938869849 *
2470836   +        S_Kidhome  +     0.94433555965982 * S_Mnt  +     1.23831916074831 *
2470837   +        S_MntFishProducts  +     1.33415870886475 * S_MntFruits
2470838   +          +    -0.51253922893993 * S_MntGoldProds  +     0.02241594009025 *
2470839   +        S_MntMeatProducts  +     -1.2811169586741 * S_MntSweetProducts
2470840   +          +     1.96686773881953 * S_MntWines  +     1.44655944802715 *
2470841   +        S_MonthsAsCustomer  +    -1.18627316384798 * S_NumCatalogPurchases
2470842   +          +     1.02431289724643 * S_NumDealsPurchases
2470843   +          +    -0.90960173637405 * S_NumDistPurchases
2470844   +          +     1.24283490404772 * S_NumStorePurchases
2470845   +          +     1.23072413154592 * S_NumWebPurchases
2470846   +          +    -0.21533378473931 * S_NumWebVisitsMonth
2470847   +          +     1.26438704884008 * S_RFMstat  +      0.0014042871018 *
2470848   +        S_RMntFrq  +     0.32357651423135 * S_Recency
2470849   +          +    -0.49834512433407 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.0341880757331 * S_AcceptedCmpTotal + 0.72034771315738 * S_Age
+ 0.64155966340389 * S_Frq + -1.06570008729492 * S_Income + -1.84532938869849 * S_Kidhome +
0.94433555965982 * S_Mnt + 1.23831916074831 * S_MntFishProducts + 1.33415870886475 *
S_MntFruits + -0.51253922893993 * S_MntGoldProds + 0.02241594009025 * S_MntMeatProducts +
-1.2811169586741 * S_MntSweetProducts + 1.96686773881953 * S_MntWines + 1.44655944802715 *
S_MonthsAsCustomer + -1.18627316384798 * S_NumCatalogPurchases + 1.02431289724643 *
S_NumDealsPurchases + -0.90960173637405 * S_NumDistPurchases + 1.24283490404772 *
S_NumStorePurchases + 1.23072413154592 * S_NumWebPurchases + -0.21533378473931 *
S_NumWebVisitsMonth + 1.26438704884008 * S_RFMstat + 0.0014042871018 * S_RMntFrq +
0.32357651423135 * S_Recency + -0.49834512433407 * S_Teenhome ;
2470850   +   H1x2_3  =    -0.57066024275015 * S_AcceptedCmpTotal
2470851   +          +     0.16615358153136 * S_Age  +    -0.60017461612499 * S_Frq
2470852   +          +    -0.21195793925019 * S_Income  +    -0.36049126996499 *
2470853   +        S_Kidhome  +     0.97458542661118 * S_Mnt  +     0.62279162661518 *
2470854   +        S_MntFishProducts  +    -0.44715765367363 * S_MntFruits
2470855   +          +     0.91519163455361 * S_MntGoldProds  +     1.07312113398768 *
2470856   +        S_MntMeatProducts  +    -1.61967017526055 * S_MntSweetProducts
2470857   +          +    -1.88327677412185 * S_MntWines  +    -1.67067768979245 *
2470858   +        S_MonthsAsCustomer  +    -0.64725516463464 * S_NumCatalogPurchases
2470859   +          +    -0.26249596122198 * S_NumDealsPurchases
2470860   +          +    -0.63328519804758 * S_NumDistPurchases
2470861   +          +    -0.88467503575886 * S_NumStorePurchases
2470862   +          +    -0.83120537310738 * S_NumWebPurchases
2470863   +          +     1.40072282351719 * S_NumWebVisitsMonth
2470864   +          +     1.42591300760984 * S_RFMstat  +     1.93593865100837 *
2470865   +        S_RMntFrq  +     -1.2794275536508 * S_Recency
2470866   +          +    -0.78582664529339 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.57066024275015 * S_AcceptedCmpTotal + 0.16615358153136 *
S_Age + -0.60017461612499 * S_Frq + -0.21195793925019 * S_Income + -0.36049126996499 *
S_Kidhome + 0.97458542661118 * S_Mnt + 0.62279162661518 * S_MntFishProducts +
-0.44715765367363 * S_MntFruits + 0.91519163455361 * S_MntGoldProds + 1.07312113398768 *
S_MntMeatProducts + -1.61967017526055 * S_MntSweetProducts + -1.88327677412185 * S_MntWines +
-1.67067768979245 * S_MonthsAsCustomer + -0.64725516463464 * S_NumCatalogPurchases +
-0.26249596122198 * S_NumDealsPurchases + -0.63328519804758 * S_NumDistPurchases +
-0.88467503575886 * S_NumStorePurchases + -0.83120537310738 * S_NumWebPurchases +
1.40072282351719 * S_NumWebVisitsMonth + 1.42591300760984 * S_RFMstat + 1.93593865100837 *
S_RMntFrq + -1.2794275536508 * S_Recency + -0.78582664529339 * S_Teenhome ;
2470867   +   H1x2_4  =     0.70159995537759 * S_AcceptedCmpTotal
2470868   +          +    -0.70199351793792 * S_Age  +     1.63573967285806 * S_Frq
2470869   +          +     -0.1930098634567 * S_Income  +    -0.43173926207337 *
2470870   +        S_Kidhome  +    -0.45239271926178 * S_Mnt  +    -0.14139816383874 *
2470871   +        S_MntFishProducts  +    -0.70568635660703 * S_MntFruits
2470872   +          +     1.68796268038024 * S_MntGoldProds  +     0.80481626355934 *
2470873   +        S_MntMeatProducts  +     0.29831384975096 * S_MntSweetProducts
2470874   +          +    -0.50792336172825 * S_MntWines  +     0.80425149159678 *
2470875   +        S_MonthsAsCustomer  +    -2.26171302044375 * S_NumCatalogPurchases
2470876   +          +     1.30167361451945 * S_NumDealsPurchases
2470877   +          +     1.45457613716235 * S_NumDistPurchases
2470878   +          +    -0.40226463685252 * S_NumStorePurchases
2470879   +          +     0.36369161683572 * S_NumWebPurchases
2470880   +          +    -2.65684851610403 * S_NumWebVisitsMonth
2470881   +          +    -1.14810413235545 * S_RFMstat  +       1.291857215261 *
2470882   +        S_RMntFrq  +     1.36572595403825 * S_Recency
2470883   +          +    -0.54958418574963 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.70159995537759 * S_AcceptedCmpTotal + -0.70199351793792 *
S_Age + 1.63573967285806 * S_Frq + -0.1930098634567 * S_Income + -0.43173926207337 * S_Kidhome
+ -0.45239271926178 * S_Mnt + -0.14139816383874 * S_MntFishProducts + -0.70568635660703 *
S_MntFruits + 1.68796268038024 * S_MntGoldProds + 0.80481626355934 * S_MntMeatProducts +
0.29831384975096 * S_MntSweetProducts + -0.50792336172825 * S_MntWines + 0.80425149159678 *
S_MonthsAsCustomer + -2.26171302044375 * S_NumCatalogPurchases + 1.30167361451945 *
S_NumDealsPurchases + 1.45457613716235 * S_NumDistPurchases + -0.40226463685252 *
S_NumStorePurchases + 0.36369161683572 * S_NumWebPurchases + -2.65684851610403 *
S_NumWebVisitsMonth + -1.14810413235545 * S_RFMstat + 1.291857215261 * S_RMntFrq +
1.36572595403825 * S_Recency + -0.54958418574963 * S_Teenhome ;
2470884   +   H1x2_5  =    -1.00456225444665 * S_AcceptedCmpTotal
2470885   +          +     0.19033874303798 * S_Age  +    -0.62578451616415 * S_Frq
2470886   +          +    -0.96647190269426 * S_Income  +     1.77002676974464 *
2470887   +        S_Kidhome  +    -0.53816249322166 * S_Mnt  +     0.21322270253871 *
2470888   +        S_MntFishProducts  +     0.84210241961105 * S_MntFruits
2470889   +          +     0.44153678515007 * S_MntGoldProds  +    -0.23120999196747 *
2470890   +        S_MntMeatProducts  +     0.62950730283125 * S_MntSweetProducts
2470891   +          +    -0.64043011108056 * S_MntWines  +    -2.74922907599662 *
2470892   +        S_MonthsAsCustomer  +     0.67939322758717 * S_NumCatalogPurchases
2470893   +          +    -0.54572162665338 * S_NumDealsPurchases
2470894   +          +      0.9607390449318 * S_NumDistPurchases
2470895   +          +    -0.03259470545754 * S_NumStorePurchases
2470896   +          +     0.19202241423412 * S_NumWebPurchases
2470897   +          +     0.61085831658456 * S_NumWebVisitsMonth
2470898   +          +    -0.08582160429243 * S_RFMstat  +     1.73862452808565 *
2470899   +        S_RMntFrq  +    -0.01216476188714 * S_Recency
2470900   +          +     -0.3304403270473 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -1.00456225444665 * S_AcceptedCmpTotal + 0.19033874303798 *
S_Age + -0.62578451616415 * S_Frq + -0.96647190269426 * S_Income + 1.77002676974464 *
S_Kidhome + -0.53816249322166 * S_Mnt + 0.21322270253871 * S_MntFishProducts +
0.84210241961105 * S_MntFruits + 0.44153678515007 * S_MntGoldProds + -0.23120999196747 *
S_MntMeatProducts + 0.62950730283125 * S_MntSweetProducts + -0.64043011108056 * S_MntWines +
-2.74922907599662 * S_MonthsAsCustomer + 0.67939322758717 * S_NumCatalogPurchases +
-0.54572162665338 * S_NumDealsPurchases + 0.9607390449318 * S_NumDistPurchases +
-0.03259470545754 * S_NumStorePurchases + 0.19202241423412 * S_NumWebPurchases +
0.61085831658456 * S_NumWebVisitsMonth + -0.08582160429243 * S_RFMstat + 1.73862452808565 *
S_RMntFrq + -0.01216476188714 * S_Recency + -0.3304403270473 * S_Teenhome ;
2470901   +   H1x2_1  = H1x2_1  +     0.83453601566539 * AcceptedCmp10
2470902   +          +     0.59109136511077 * AcceptedCmp20  +     -0.9669340701943 *
2470903   +        AcceptedCmp30  +    -2.31468262956126 * AcceptedCmp40
2470904   +          +    -0.76277791850069 * AcceptedCmp50  +     0.30895289981412 *
2470905   +        Complain0  +       0.147233855837 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 0.83453601566539 * AcceptedCmp10 + 0.59109136511077 *
AcceptedCmp20 + -0.9669340701943 * AcceptedCmp30 + -2.31468262956126 * AcceptedCmp40 +
-0.76277791850069 * AcceptedCmp50 + 0.30895289981412 * Complain0 + 0.147233855837 *
HigherEducationBinary0 ;
2470906   +   H1x2_2  = H1x2_2  +     0.42789425545567 * AcceptedCmp10
2470907   +          +     0.08505833889085 * AcceptedCmp20  +    -1.15112188313855 *
2470908   +        AcceptedCmp30  +    -1.24362486486214 * AcceptedCmp40
2470909   +          +     0.04131419116048 * AcceptedCmp50  +    -0.45255799355317 *
2470910   +        Complain0  +    -0.32616423192953 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.42789425545567 * AcceptedCmp10 + 0.08505833889085 *
AcceptedCmp20 + -1.15112188313855 * AcceptedCmp30 + -1.24362486486214 * AcceptedCmp40 +
0.04131419116048 * AcceptedCmp50 + -0.45255799355317 * Complain0 + -0.32616423192953 *
HigherEducationBinary0 ;
2470911   +   H1x2_3  = H1x2_3  +    -0.03136360497649 * AcceptedCmp10
2470912   +          +     0.33867713207886 * AcceptedCmp20  +     0.05809342990544 *
2470913   +        AcceptedCmp30  +    -0.06416815079894 * AcceptedCmp40
2470914   +          +     1.14617960682421 * AcceptedCmp50  +    -0.82461320336041 *
2470915   +        Complain0  +     0.58944444655621 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -0.03136360497649 * AcceptedCmp10 + 0.33867713207886 *
AcceptedCmp20 + 0.05809342990544 * AcceptedCmp30 + -0.06416815079894 * AcceptedCmp40 +
1.14617960682421 * AcceptedCmp50 + -0.82461320336041 * Complain0 + 0.58944444655621 *
HigherEducationBinary0 ;
2470916   +   H1x2_4  = H1x2_4  +    -1.12705500616438 * AcceptedCmp10
2470917   +          +      0.0487863004734 * AcceptedCmp20  +     1.30229008593765 *
2470918   +        AcceptedCmp30  +      0.1726718549662 * AcceptedCmp40
2470919   +          +     0.68443569845295 * AcceptedCmp50  +     2.39733248962228 *
2470920   +        Complain0  +      -0.620937291929 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + -1.12705500616438 * AcceptedCmp10 + 0.0487863004734 *
AcceptedCmp20 + 1.30229008593765 * AcceptedCmp30 + 0.1726718549662 * AcceptedCmp40 +
0.68443569845295 * AcceptedCmp50 + 2.39733248962228 * Complain0 + -0.620937291929 *
HigherEducationBinary0 ;
2470921   +   H1x2_5  = H1x2_5  +     1.42400460803453 * AcceptedCmp10
2470922   +          +    -1.22361480936625 * AcceptedCmp20  +     1.31090186367202 *
2470923   +        AcceptedCmp30  +    -1.40343404818254 * AcceptedCmp40
2470924   +          +    -0.57377230862494 * AcceptedCmp50  +     0.58622740778295 *
2470925   +        Complain0  +    -0.83222074319962 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 1.42400460803453 * AcceptedCmp10 + -1.22361480936625 *
AcceptedCmp20 + 1.31090186367202 * AcceptedCmp30 + -1.40343404818254 * AcceptedCmp40 +
-0.57377230862494 * AcceptedCmp50 + 0.58622740778295 * Complain0 + -0.83222074319962 *
HigherEducationBinary0 ;
2470926   +   H1x2_1  = H1x2_1  +     1.56508379719546 * Education2n_Cycle
2470927   +          +     0.52302987210661 * EducationBasic  +     -0.0570045326497 *
2470928   +        EducationGraduation  +    -0.01838790774804 * EducationMaster
2470929   +          +    -2.32430245081383 * Marital_StatusDivorced
2470930   +          +    -0.09815511356796 * Marital_StatusMarried
2470931   +          +     0.13075504294551 * Marital_StatusSingle
2470932   +          +     -0.0278875765201 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 1.56508379719546 * Education2n_Cycle +
0.52302987210661 * EducationBasic + -0.0570045326497 * EducationGraduation + -0.01838790774804
* EducationMaster + -2.32430245081383 * Marital_StatusDivorced + -0.09815511356796 *
Marital_StatusMarried + 0.13075504294551 * Marital_StatusSingle + -0.0278875765201 *
Marital_StatusTogether ;
2470933   +   H1x2_2  = H1x2_2  +    -0.85592920992847 * Education2n_Cycle
2470934   +          +     0.93272618259957 * EducationBasic  +     0.48987674771079 *
2470935   +        EducationGraduation  +    -1.12454002820451 * EducationMaster
2470936   +          +    -0.65574603869224 * Marital_StatusDivorced
2470937   +          +     1.54672472575294 * Marital_StatusMarried
2470938   +          +    -1.59817602340208 * Marital_StatusSingle
2470939   +          +     1.94381954546813 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.85592920992847 * Education2n_Cycle +
0.93272618259957 * EducationBasic + 0.48987674771079 * EducationGraduation + -1.12454002820451
* EducationMaster + -0.65574603869224 * Marital_StatusDivorced + 1.54672472575294 *
Marital_StatusMarried + -1.59817602340208 * Marital_StatusSingle + 1.94381954546813 *
Marital_StatusTogether ;
2470940   +   H1x2_3  = H1x2_3  +     0.37093371596523 * Education2n_Cycle
2470941   +          +    -2.05531065359129 * EducationBasic  +     1.16090743585078 *
2470942   +        EducationGraduation  +     0.87547303889444 * EducationMaster
2470943   +          +    -0.50911604604781 * Marital_StatusDivorced
2470944   +          +     0.30403066135719 * Marital_StatusMarried
2470945   +          +      0.1026950879545 * Marital_StatusSingle
2470946   +          +     0.01000166524405 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.37093371596523 * Education2n_Cycle +
-2.05531065359129 * EducationBasic + 1.16090743585078 * EducationGraduation + 0.87547303889444
* EducationMaster + -0.50911604604781 * Marital_StatusDivorced + 0.30403066135719 *
Marital_StatusMarried + 0.1026950879545 * Marital_StatusSingle + 0.01000166524405 *
Marital_StatusTogether ;
2470947   +   H1x2_4  = H1x2_4  +     1.28509086202466 * Education2n_Cycle
2470948   +          +     0.07860157688162 * EducationBasic  +     0.24607672351689 *
2470949   +        EducationGraduation  +    -0.06009602645566 * EducationMaster
2470950   +          +     1.07371507133318 * Marital_StatusDivorced
2470951   +          +    -0.07097334129051 * Marital_StatusMarried
2470952   +          +    -0.48339718568621 * Marital_StatusSingle
2470953   +          +    -0.08900780355835 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 1.28509086202466 * Education2n_Cycle +
0.07860157688162 * EducationBasic + 0.24607672351689 * EducationGraduation + -0.06009602645566
* EducationMaster + 1.07371507133318 * Marital_StatusDivorced + -0.07097334129051 *
Marital_StatusMarried + -0.48339718568621 * Marital_StatusSingle + -0.08900780355835 *
Marital_StatusTogether ;
2470954   +   H1x2_5  = H1x2_5  +    -1.08109633810919 * Education2n_Cycle
2470955   +          +    -0.54966585100103 * EducationBasic  +      0.5388683065169 *
2470956   +        EducationGraduation  +     0.46960055830119 * EducationMaster
2470957   +          +     1.04342893515504 * Marital_StatusDivorced
2470958   +          +     1.16171312085032 * Marital_StatusMarried
2470959   +          +    -0.30201646939913 * Marital_StatusSingle
2470960   +          +     1.84122645884771 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + -1.08109633810919 * Education2n_Cycle +
-0.54966585100103 * EducationBasic + 0.5388683065169 * EducationGraduation + 0.46960055830119
* EducationMaster + 1.04342893515504 * Marital_StatusDivorced + 1.16171312085032 *
Marital_StatusMarried + -0.30201646939913 * Marital_StatusSingle + 1.84122645884771 *
Marital_StatusTogether ;
2470961   +   H1x2_1  =     1.56970796025332 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.56970796025332 + H1x2_1 ;
2470962   +   H1x2_2  =    -0.11766478836824 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.11766478836824 + H1x2_2 ;
2470963   +   H1x2_3  =    -2.78218653641036 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -2.78218653641036 + H1x2_3 ;
2470964   +   H1x2_4  =     0.51979515224467 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.51979515224467 + H1x2_4 ;
2470965   +   H1x2_5  =     -0.4635890987824 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.4635890987824 + H1x2_5 ;
2470966   +END;
MPRINT(EM_DIAGRAM):   END;
2470967   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2470968   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
2470969   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
2470970   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
2470971   +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
2470972   +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
2470973   +END;
MPRINT(EM_DIAGRAM):   END;
2470974   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2470975   +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
2470976   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2470977   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2470978   +   H1x3_1  =     0.04411772880581 * S_AcceptedCmpTotal
2470979   +          +    -1.62725197326682 * S_Age  +    -1.99668213406033 * S_Frq
2470980   +          +     -1.2265241921112 * S_Income  +     1.99702869958035 *
2470981   +        S_Kidhome  +    -1.46762539068512 * S_Mnt  +     0.97784534044189 *
2470982   +        S_MntFishProducts  +    -1.07945265688497 * S_MntFruits
2470983   +          +     2.09306294956674 * S_MntGoldProds  +     1.46219664114361 *
2470984   +        S_MntMeatProducts  +     0.10961158671991 * S_MntSweetProducts
2470985   +          +     2.03040669273977 * S_MntWines  +     0.16536646017211 *
2470986   +        S_MonthsAsCustomer  +    -0.88077951545076 * S_NumCatalogPurchases
2470987   +          +     1.32256781010645 * S_NumDealsPurchases
2470988   +          +    -1.43015438973619 * S_NumDistPurchases
2470989   +          +    -0.63489289584421 * S_NumStorePurchases
2470990   +          +     0.90508699686841 * S_NumWebPurchases
2470991   +          +    -2.24234858061014 * S_NumWebVisitsMonth
2470992   +          +     -2.9988027991146 * S_RFMstat  +     0.35987461993699 *
2470993   +        S_RMntFrq  +    -1.09317668626142 * S_Recency
2470994   +          +    -1.09925349438658 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.04411772880581 * S_AcceptedCmpTotal + -1.62725197326682 *
S_Age + -1.99668213406033 * S_Frq + -1.2265241921112 * S_Income + 1.99702869958035 * S_Kidhome
+ -1.46762539068512 * S_Mnt + 0.97784534044189 * S_MntFishProducts + -1.07945265688497 *
S_MntFruits + 2.09306294956674 * S_MntGoldProds + 1.46219664114361 * S_MntMeatProducts +
0.10961158671991 * S_MntSweetProducts + 2.03040669273977 * S_MntWines + 0.16536646017211 *
S_MonthsAsCustomer + -0.88077951545076 * S_NumCatalogPurchases + 1.32256781010645 *
S_NumDealsPurchases + -1.43015438973619 * S_NumDistPurchases + -0.63489289584421 *
S_NumStorePurchases + 0.90508699686841 * S_NumWebPurchases + -2.24234858061014 *
S_NumWebVisitsMonth + -2.9988027991146 * S_RFMstat + 0.35987461993699 * S_RMntFrq +
-1.09317668626142 * S_Recency + -1.09925349438658 * S_Teenhome ;
2470995   +   H1x3_2  =     0.10522923391314 * S_AcceptedCmpTotal
2470996   +          +     0.68417479453112 * S_Age  +     0.46966162186743 * S_Frq
2470997   +          +    -1.21537535753115 * S_Income  +    -1.87423294109672 *
2470998   +        S_Kidhome  +     0.76913864731495 * S_Mnt  +     1.08535778796502 *
2470999   +        S_MntFishProducts  +     1.27743864099826 * S_MntFruits
2471000   +          +     -0.3186089651882 * S_MntGoldProds  +    -0.00224333051647 *
2471001   +        S_MntMeatProducts  +    -1.28169616734092 * S_MntSweetProducts
2471002   +          +     1.67350500234032 * S_MntWines  +     1.09584504562467 *
2471003   +        S_MonthsAsCustomer  +    -1.45467876727494 * S_NumCatalogPurchases
2471004   +          +     0.85965187264096 * S_NumDealsPurchases
2471005   +          +    -1.15239933286756 * S_NumDistPurchases
2471006   +          +     1.20800889102387 * S_NumStorePurchases
2471007   +          +     1.08790389130242 * S_NumWebPurchases
2471008   +          +    -0.13665551161149 * S_NumWebVisitsMonth
2471009   +          +     1.02103499612659 * S_RFMstat  +    -0.12980097143044 *
2471010   +        S_RMntFrq  +     0.65854311654256 * S_Recency
2471011   +          +    -0.60999209572192 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_2 = 0.10522923391314 * S_AcceptedCmpTotal + 0.68417479453112 *
S_Age + 0.46966162186743 * S_Frq + -1.21537535753115 * S_Income + -1.87423294109672 *
S_Kidhome + 0.76913864731495 * S_Mnt + 1.08535778796502 * S_MntFishProducts + 1.27743864099826
* S_MntFruits + -0.3186089651882 * S_MntGoldProds + -0.00224333051647 * S_MntMeatProducts +
-1.28169616734092 * S_MntSweetProducts + 1.67350500234032 * S_MntWines + 1.09584504562467 *
S_MonthsAsCustomer + -1.45467876727494 * S_NumCatalogPurchases + 0.85965187264096 *
S_NumDealsPurchases + -1.15239933286756 * S_NumDistPurchases + 1.20800889102387 *
S_NumStorePurchases + 1.08790389130242 * S_NumWebPurchases + -0.13665551161149 *
S_NumWebVisitsMonth + 1.02103499612659 * S_RFMstat + -0.12980097143044 * S_RMntFrq +
0.65854311654256 * S_Recency + -0.60999209572192 * S_Teenhome ;
2471012   +   H1x3_3  =    -0.72575004293074 * S_AcceptedCmpTotal
2471013   +          +     0.34932839743259 * S_Age  +     -0.2673460618328 * S_Frq
2471014   +          +     0.25743187687481 * S_Income  +    -0.02172890929346 *
2471015   +        S_Kidhome  +     1.21785656626837 * S_Mnt  +     0.37454359336223 *
2471016   +        S_MntFishProducts  +    -0.32600053706408 * S_MntFruits
2471017   +          +     0.57807148940534 * S_MntGoldProds  +     1.14736546512366 *
2471018   +        S_MntMeatProducts  +    -1.41517082393978 * S_MntSweetProducts
2471019   +          +    -1.44899595080061 * S_MntWines  +    -1.45520867126531 *
2471020   +        S_MonthsAsCustomer  +    -0.33372174099196 * S_NumCatalogPurchases
2471021   +          +     -0.5767607129654 * S_NumDealsPurchases
2471022   +          +     -0.2643921429796 * S_NumDistPurchases
2471023   +          +    -0.67417489911206 * S_NumStorePurchases
2471024   +          +    -0.51423877684891 * S_NumWebPurchases
2471025   +          +     1.40328299605176 * S_NumWebVisitsMonth
2471026   +          +     1.35588787174957 * S_RFMstat  +     1.98416436137119 *
2471027   +        S_RMntFrq  +     -0.8447362450681 * S_Recency
2471028   +          +    -1.04372961736437 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_3 = -0.72575004293074 * S_AcceptedCmpTotal + 0.34932839743259 *
S_Age + -0.2673460618328 * S_Frq + 0.25743187687481 * S_Income + -0.02172890929346 * S_Kidhome
+ 1.21785656626837 * S_Mnt + 0.37454359336223 * S_MntFishProducts + -0.32600053706408 *
S_MntFruits + 0.57807148940534 * S_MntGoldProds + 1.14736546512366 * S_MntMeatProducts +
-1.41517082393978 * S_MntSweetProducts + -1.44899595080061 * S_MntWines + -1.45520867126531 *
S_MonthsAsCustomer + -0.33372174099196 * S_NumCatalogPurchases + -0.5767607129654 *
S_NumDealsPurchases + -0.2643921429796 * S_NumDistPurchases + -0.67417489911206 *
S_NumStorePurchases + -0.51423877684891 * S_NumWebPurchases + 1.40328299605176 *
S_NumWebVisitsMonth + 1.35588787174957 * S_RFMstat + 1.98416436137119 * S_RMntFrq +
-0.8447362450681 * S_Recency + -1.04372961736437 * S_Teenhome ;
2471029   +   H1x3_4  =     0.05745684959388 * S_AcceptedCmpTotal
2471030   +          +    -0.71077680161454 * S_Age  +      1.4854566142375 * S_Frq
2471031   +          +    -0.32870416928843 * S_Income  +    -0.24944295149087 *
2471032   +        S_Kidhome  +     -0.8312409740431 * S_Mnt  +    -0.09638646505384 *
2471033   +        S_MntFishProducts  +    -0.86550491354678 * S_MntFruits
2471034   +          +     1.46902858697296 * S_MntGoldProds  +      0.3661164136841 *
2471035   +        S_MntMeatProducts  +     0.43108270077708 * S_MntSweetProducts
2471036   +          +    -0.87140466249616 * S_MntWines  +     0.17511224898094 *
2471037   +        S_MonthsAsCustomer  +    -2.66256923117027 * S_NumCatalogPurchases
2471038   +          +      1.2821617657076 * S_NumDealsPurchases
2471039   +          +     1.26584115202735 * S_NumDistPurchases
2471040   +          +    -0.46597664211833 * S_NumStorePurchases
2471041   +          +     0.45652363472866 * S_NumWebPurchases
2471042   +          +    -2.66296112021252 * S_NumWebVisitsMonth
2471043   +          +    -0.86670667018974 * S_RFMstat  +     0.60866041131732 *
2471044   +        S_RMntFrq  +     1.31886754707923 * S_Recency
2471045   +          +    -0.09949653139413 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_4 = 0.05745684959388 * S_AcceptedCmpTotal + -0.71077680161454 *
S_Age + 1.4854566142375 * S_Frq + -0.32870416928843 * S_Income + -0.24944295149087 * S_Kidhome
+ -0.8312409740431 * S_Mnt + -0.09638646505384 * S_MntFishProducts + -0.86550491354678 *
S_MntFruits + 1.46902858697296 * S_MntGoldProds + 0.3661164136841 * S_MntMeatProducts +
0.43108270077708 * S_MntSweetProducts + -0.87140466249616 * S_MntWines + 0.17511224898094 *
S_MonthsAsCustomer + -2.66256923117027 * S_NumCatalogPurchases + 1.2821617657076 *
S_NumDealsPurchases + 1.26584115202735 * S_NumDistPurchases + -0.46597664211833 *
S_NumStorePurchases + 0.45652363472866 * S_NumWebPurchases + -2.66296112021252 *
S_NumWebVisitsMonth + -0.86670667018974 * S_RFMstat + 0.60866041131732 * S_RMntFrq +
1.31886754707923 * S_Recency + -0.09949653139413 * S_Teenhome ;
2471046   +   H1x3_5  =    -0.66850525418144 * S_AcceptedCmpTotal
2471047   +          +     0.14331320698516 * S_Age  +    -0.82708146094779 * S_Frq
2471048   +          +    -0.95718847240937 * S_Income  +     1.37375648833049 *
2471049   +        S_Kidhome  +    -0.48314397401233 * S_Mnt  +     0.07047324834759 *
2471050   +        S_MntFishProducts  +     0.86114312801139 * S_MntFruits
2471051   +          +     0.54573348379533 * S_MntGoldProds  +    -0.05966372249273 *
2471052   +        S_MntMeatProducts  +     0.47275063848217 * S_MntSweetProducts
2471053   +          +    -0.62962007155261 * S_MntWines  +    -2.38081462831488 *
2471054   +        S_MonthsAsCustomer  +     0.56594272689824 * S_NumCatalogPurchases
2471055   +          +    -0.85162564171681 * S_NumDealsPurchases
2471056   +          +     0.64631099667221 * S_NumDistPurchases
2471057   +          +    -0.03081963858636 * S_NumStorePurchases
2471058   +          +    -0.24124717624664 * S_NumWebPurchases
2471059   +          +     0.56425980772372 * S_NumWebVisitsMonth
2471060   +          +    -0.32254616624678 * S_RFMstat  +     1.84875225899832 *
2471061   +        S_RMntFrq  +     0.08133312388911 * S_Recency
2471062   +          +    -0.19004451996479 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_5 = -0.66850525418144 * S_AcceptedCmpTotal + 0.14331320698516 *
S_Age + -0.82708146094779 * S_Frq + -0.95718847240937 * S_Income + 1.37375648833049 *
S_Kidhome + -0.48314397401233 * S_Mnt + 0.07047324834759 * S_MntFishProducts +
0.86114312801139 * S_MntFruits + 0.54573348379533 * S_MntGoldProds + -0.05966372249273 *
S_MntMeatProducts + 0.47275063848217 * S_MntSweetProducts + -0.62962007155261 * S_MntWines +
-2.38081462831488 * S_MonthsAsCustomer + 0.56594272689824 * S_NumCatalogPurchases +
-0.85162564171681 * S_NumDealsPurchases + 0.64631099667221 * S_NumDistPurchases +
-0.03081963858636 * S_NumStorePurchases + -0.24124717624664 * S_NumWebPurchases +
0.56425980772372 * S_NumWebVisitsMonth + -0.32254616624678 * S_RFMstat + 1.84875225899832 *
S_RMntFrq + 0.08133312388911 * S_Recency + -0.19004451996479 * S_Teenhome ;
2471063   +   H1x3_1  = H1x3_1  +     1.03487942320068 * AcceptedCmp10
2471064   +          +     0.77723443135875 * AcceptedCmp20  +    -1.04686858569959 *
2471065   +        AcceptedCmp30  +    -1.87852311800194 * AcceptedCmp40
2471066   +          +    -0.69838759011672 * AcceptedCmp50  +     0.50242045854463 *
2471067   +        Complain0  +    -0.13339808164255 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + 1.03487942320068 * AcceptedCmp10 + 0.77723443135875 *
AcceptedCmp20 + -1.04686858569959 * AcceptedCmp30 + -1.87852311800194 * AcceptedCmp40 +
-0.69838759011672 * AcceptedCmp50 + 0.50242045854463 * Complain0 + -0.13339808164255 *
HigherEducationBinary0 ;
2471068   +   H1x3_2  = H1x3_2  +     0.39887299789564 * AcceptedCmp10
2471069   +          +     0.12293700562648 * AcceptedCmp20  +    -1.41656670681309 *
2471070   +        AcceptedCmp30  +    -1.04607557362847 * AcceptedCmp40
2471071   +          +     0.02824649030864 * AcceptedCmp50  +    -0.46581865837196 *
2471072   +        Complain0  +    -0.45913631308543 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + 0.39887299789564 * AcceptedCmp10 + 0.12293700562648 *
AcceptedCmp20 + -1.41656670681309 * AcceptedCmp30 + -1.04607557362847 * AcceptedCmp40 +
0.02824649030864 * AcceptedCmp50 + -0.46581865837196 * Complain0 + -0.45913631308543 *
HigherEducationBinary0 ;
2471073   +   H1x3_3  = H1x3_3  +     0.20672868292414 * AcceptedCmp10
2471074   +          +     0.52082182457868 * AcceptedCmp20  +     0.54911826263592 *
2471075   +        AcceptedCmp30  +    -0.02400616289922 * AcceptedCmp40
2471076   +          +     1.22209744911863 * AcceptedCmp50  +    -0.68243413694538 *
2471077   +        Complain0  +     0.15620895311704 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 + 0.20672868292414 * AcceptedCmp10 + 0.52082182457868 *
AcceptedCmp20 + 0.54911826263592 * AcceptedCmp30 + -0.02400616289922 * AcceptedCmp40 +
1.22209744911863 * AcceptedCmp50 + -0.68243413694538 * Complain0 + 0.15620895311704 *
HigherEducationBinary0 ;
2471078   +   H1x3_4  = H1x3_4  +    -0.88269820758187 * AcceptedCmp10
2471079   +          +    -0.19276892535938 * AcceptedCmp20  +     1.26789056018511 *
2471080   +        AcceptedCmp30  +     0.04396979158385 * AcceptedCmp40
2471081   +          +     0.54194186871284 * AcceptedCmp50  +     2.07766091697967 *
2471082   +        Complain0  +    -0.43514178858246 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 + -0.88269820758187 * AcceptedCmp10 + -0.19276892535938
* AcceptedCmp20 + 1.26789056018511 * AcceptedCmp30 + 0.04396979158385 * AcceptedCmp40 +
0.54194186871284 * AcceptedCmp50 + 2.07766091697967 * Complain0 + -0.43514178858246 *
HigherEducationBinary0 ;
2471083   +   H1x3_5  = H1x3_5  +     1.04303179873707 * AcceptedCmp10
2471084   +          +    -1.29742389809739 * AcceptedCmp20  +     1.21708533617895 *
2471085   +        AcceptedCmp30  +    -1.47807634614974 * AcceptedCmp40
2471086   +          +     -0.7694244559597 * AcceptedCmp50  +     0.51798162453723 *
2471087   +        Complain0  +    -0.95513113905832 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 + 1.04303179873707 * AcceptedCmp10 + -1.29742389809739 *
AcceptedCmp20 + 1.21708533617895 * AcceptedCmp30 + -1.47807634614974 * AcceptedCmp40 +
-0.7694244559597 * AcceptedCmp50 + 0.51798162453723 * Complain0 + -0.95513113905832 *
HigherEducationBinary0 ;
2471088   +   H1x3_1  = H1x3_1  +     1.27822716215014 * Education2n_Cycle
2471089   +          +     0.45900505383383 * EducationBasic  +    -0.35822992758656 *
2471090   +        EducationGraduation  +     0.05949934527868 * EducationMaster
2471091   +          +    -2.49973437075558 * Marital_StatusDivorced
2471092   +          +    -0.18076948182574 * Marital_StatusMarried
2471093   +          +     0.13498525495231 * Marital_StatusSingle
2471094   +          +    -0.02365465636052 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + 1.27822716215014 * Education2n_Cycle +
0.45900505383383 * EducationBasic + -0.35822992758656 * EducationGraduation + 0.05949934527868
* EducationMaster + -2.49973437075558 * Marital_StatusDivorced + -0.18076948182574 *
Marital_StatusMarried + 0.13498525495231 * Marital_StatusSingle + -0.02365465636052 *
Marital_StatusTogether ;
2471095   +   H1x3_2  = H1x3_2  +    -1.14981446246051 * Education2n_Cycle
2471096   +          +     0.68006996858541 * EducationBasic  +    -0.06493857044709 *
2471097   +        EducationGraduation  +    -1.22462805502453 * EducationMaster
2471098   +          +       -0.59463732835 * Marital_StatusDivorced
2471099   +          +     1.37741332427598 * Marital_StatusMarried
2471100   +          +     -1.5833455713231 * Marital_StatusSingle
2471101   +          +     1.79205360628448 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + -1.14981446246051 * Education2n_Cycle +
0.68006996858541 * EducationBasic + -0.06493857044709 * EducationGraduation +
-1.22462805502453 * EducationMaster + -0.59463732835 * Marital_StatusDivorced +
1.37741332427598 * Marital_StatusMarried + -1.5833455713231 * Marital_StatusSingle +
1.79205360628448 * Marital_StatusTogether ;
2471102   +   H1x3_3  = H1x3_3  +     0.17779609626753 * Education2n_Cycle
2471103   +          +    -2.22704675950779 * EducationBasic  +     1.30292325944162 *
2471104   +        EducationGraduation  +     0.68083131423474 * EducationMaster
2471105   +          +    -0.44569556289443 * Marital_StatusDivorced
2471106   +          +     0.29918053103557 * Marital_StatusMarried
2471107   +          +    -0.10337314064224 * Marital_StatusSingle
2471108   +          +     0.04054221993299 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 + 0.17779609626753 * Education2n_Cycle +
-2.22704675950779 * EducationBasic + 1.30292325944162 * EducationGraduation + 0.68083131423474
* EducationMaster + -0.44569556289443 * Marital_StatusDivorced + 0.29918053103557 *
Marital_StatusMarried + -0.10337314064224 * Marital_StatusSingle + 0.04054221993299 *
Marital_StatusTogether ;
2471109   +   H1x3_4  = H1x3_4  +     1.16412985277542 * Education2n_Cycle
2471110   +          +     0.18806330813344 * EducationBasic  +     0.00212145829045 *
2471111   +        EducationGraduation  +     0.00087354662697 * EducationMaster
2471112   +          +     1.13881957277462 * Marital_StatusDivorced
2471113   +          +    -0.35849807146313 * Marital_StatusMarried
2471114   +          +    -0.22168731316885 * Marital_StatusSingle
2471115   +          +    -0.22672306263461 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 + 1.16412985277542 * Education2n_Cycle +
0.18806330813344 * EducationBasic + 0.00212145829045 * EducationGraduation + 0.00087354662697
* EducationMaster + 1.13881957277462 * Marital_StatusDivorced + -0.35849807146313 *
Marital_StatusMarried + -0.22168731316885 * Marital_StatusSingle + -0.22672306263461 *
Marital_StatusTogether ;
2471116   +   H1x3_5  = H1x3_5  +    -1.25195599938207 * Education2n_Cycle
2471117   +          +    -0.60946428681789 * EducationBasic  +     0.39993500009227 *
2471118   +        EducationGraduation  +     0.43730905987249 * EducationMaster
2471119   +          +     1.10774969923269 * Marital_StatusDivorced
2471120   +          +     1.08409594073043 * Marital_StatusMarried
2471121   +          +    -0.33145048007894 * Marital_StatusSingle
2471122   +          +     1.68703837664761 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 + -1.25195599938207 * Education2n_Cycle +
-0.60946428681789 * EducationBasic + 0.39993500009227 * EducationGraduation + 0.43730905987249
* EducationMaster + 1.10774969923269 * Marital_StatusDivorced + 1.08409594073043 *
Marital_StatusMarried + -0.33145048007894 * Marital_StatusSingle + 1.68703837664761 *
Marital_StatusTogether ;
2471123   +   H1x3_1  =     1.76093149538288 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 1.76093149538288 + H1x3_1 ;
2471124   +   H1x3_2  =    -0.11243980195421 + H1x3_2 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = -0.11243980195421 + H1x3_2 ;
2471125   +   H1x3_3  =    -2.59474781862449 + H1x3_3 ;
MPRINT(EM_DIAGRAM):   H1x3_3 = -2.59474781862449 + H1x3_3 ;
2471126   +   H1x3_4  =     0.25376473610258 + H1x3_4 ;
MPRINT(EM_DIAGRAM):   H1x3_4 = 0.25376473610258 + H1x3_4 ;
2471127   +   H1x3_5  =    -0.54808648261397 + H1x3_5 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = -0.54808648261397 + H1x3_5 ;
2471128   +   _EPS = SQRT(CONSTANT('MACEPS')) ;
MPRINT(EM_DIAGRAM):   _EPS = SQRT(CONSTANT('MACEPS')) ;
2471129   +   _REC_EPS = 1/_EPS ;
MPRINT(EM_DIAGRAM):   _REC_EPS = 1/_EPS ;
2471130   +   DROP _REC_EPS _EPS ;
MPRINT(EM_DIAGRAM):   DROP _REC_EPS _EPS ;
2471131   +   IF H1x3_1  < _REC_EPS AND H1x3_1  > - _REC_EPS THEN
2471132   +   H1x3_1  = H1x3_1  * H1x3_1 ;
MPRINT(EM_DIAGRAM):   IF H1x3_1 < _REC_EPS AND H1x3_1 > - _REC_EPS THEN H1x3_1 = H1x3_1 *
H1x3_1 ;
2471133   +   ELSE H1x3_1  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x3_1 = _REC_EPS ;
2471134   +   IF H1x3_2  < _REC_EPS AND H1x3_2  > - _REC_EPS THEN
2471135   +   H1x3_2  = H1x3_2  * H1x3_2 ;
MPRINT(EM_DIAGRAM):   IF H1x3_2 < _REC_EPS AND H1x3_2 > - _REC_EPS THEN H1x3_2 = H1x3_2 *
H1x3_2 ;
2471136   +   ELSE H1x3_2  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x3_2 = _REC_EPS ;
2471137   +   IF H1x3_3  < _REC_EPS AND H1x3_3  > - _REC_EPS THEN
2471138   +   H1x3_3  = H1x3_3  * H1x3_3 ;
MPRINT(EM_DIAGRAM):   IF H1x3_3 < _REC_EPS AND H1x3_3 > - _REC_EPS THEN H1x3_3 = H1x3_3 *
H1x3_3 ;
2471139   +   ELSE H1x3_3  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x3_3 = _REC_EPS ;
2471140   +   IF H1x3_4  < _REC_EPS AND H1x3_4  > - _REC_EPS THEN
2471141   +   H1x3_4  = H1x3_4  * H1x3_4 ;
MPRINT(EM_DIAGRAM):   IF H1x3_4 < _REC_EPS AND H1x3_4 > - _REC_EPS THEN H1x3_4 = H1x3_4 *
H1x3_4 ;
2471142   +   ELSE H1x3_4  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x3_4 = _REC_EPS ;
2471143   +   IF H1x3_5  < _REC_EPS AND H1x3_5  > - _REC_EPS THEN
2471144   +   H1x3_5  = H1x3_5  * H1x3_5 ;
MPRINT(EM_DIAGRAM):   IF H1x3_5 < _REC_EPS AND H1x3_5 > - _REC_EPS THEN H1x3_5 = H1x3_5 *
H1x3_5 ;
2471145   +   ELSE H1x3_5  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x3_5 = _REC_EPS ;
2471146   +END;
MPRINT(EM_DIAGRAM):   END;
2471147   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2471148   +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
2471149   +   H1x3_2  = .;
MPRINT(EM_DIAGRAM):   H1x3_2 = .;
2471150   +   H1x3_3  = .;
MPRINT(EM_DIAGRAM):   H1x3_3 = .;
2471151   +   H1x3_4  = .;
MPRINT(EM_DIAGRAM):   H1x3_4 = .;
2471152   +   H1x3_5  = .;
MPRINT(EM_DIAGRAM):   H1x3_5 = .;
2471153   +END;
MPRINT(EM_DIAGRAM):   END;
2471154   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2471155   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2471156   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2471157   +
2471158   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2471159   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2471160   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2471161   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2471162   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2471163   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2471164   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2471165   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2471166   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2471167   +end;
MPRINT(EM_DIAGRAM):   end;
2471168   +else do;
MPRINT(EM_DIAGRAM):   else do;
2471169   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2471170   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2471171   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2471172   +   end;
MPRINT(EM_DIAGRAM):   end;
2471173   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2471174   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2471175   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2471176   +   end;
MPRINT(EM_DIAGRAM):   end;
2471177   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2471178   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2471179   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2471180   +   end;
MPRINT(EM_DIAGRAM):   end;
2471181   +end;
MPRINT(EM_DIAGRAM):   end;
2471182   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2471183   +   P_DepVar1  =     12.3694111963696 * H1x1_1  +     -9.1014019341077 * H1x1_2
2471184   +          +    -14.9093780045901 * H1x1_3  +     25.4505756686259 * H1x1_4
2471185   +          +    -13.3798044908382 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 12.3694111963696 * H1x1_1 + -9.1014019341077 * H1x1_2 +
-14.9093780045901 * H1x1_3 + 25.4505756686259 * H1x1_4 + -13.3798044908382 * H1x1_5 ;
2471186   +   P_DepVar1  = P_DepVar1  +     -0.2373753683635 * H1x2_1
2471187   +          +    -0.03661175538589 * H1x2_2  +     0.29534813812803 * H1x2_3
2471188   +          +     0.11908166898588 * H1x2_4  +      -0.241544638637 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 + -0.2373753683635 * H1x2_1 + -0.03661175538589 *
H1x2_2 + 0.29534813812803 * H1x2_3 + 0.11908166898588 * H1x2_4 + -0.241544638637 * H1x2_5 ;
2471189   +   P_DepVar1  = P_DepVar1  +    -0.00276620815201 * H1x3_1
2471190   +          +     0.00487849269566 * H1x3_2  +     0.01323887261394 * H1x3_3
2471191   +          +     -0.0271389925801 * H1x3_4  +     0.00026595473892 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 + -0.00276620815201 * H1x3_1 + 0.00487849269566 *
H1x3_2 + 0.01323887261394 * H1x3_3 + -0.0271389925801 * H1x3_4 + 0.00026595473892 * H1x3_5 ;
2471192   +   P_DepVar1  =      4.0541137239843 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 4.0541137239843 + P_DepVar1 ;
2471193   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2471194   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2471195   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2471196   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2471197   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2471198   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2471199   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2471200   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2471201   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2471202   +END;
MPRINT(EM_DIAGRAM):   END;
2471203   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2471204   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2471205   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2471206   +END;
MPRINT(EM_DIAGRAM):   END;
2471207   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2471208   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2471209   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2471210   +END;
MPRINT(EM_DIAGRAM):   END;
2471211   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2471212   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2471213   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2471214   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2471215   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2471216   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2471217   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2471218   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2471219   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2471220   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2471221   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2471222   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2471223   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2471224   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2471225   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2471226   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2471227   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2471228   +END;
MPRINT(EM_DIAGRAM):   END;
2471229   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2471230   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2471231   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2471232   +drop
2471233   +H1x1_1
2471234   +H1x1_2
2471235   +H1x1_3
2471236   +H1x1_4
2471237   +H1x1_5
2471238   +H1x2_1
2471239   +H1x2_2
2471240   +H1x2_3
2471241   +H1x2_4
2471242   +H1x2_5
2471243   +H1x3_1
2471244   +H1x3_2
2471245   +H1x3_3
2471246   +H1x3_4
2471247   +H1x3_5
2471248   +;
MPRINT(EM_DIAGRAM):   drop H1x1_1 H1x1_2 H1x1_3 H1x1_4 H1x1_5 H1x2_1 H1x2_2 H1x2_3 H1x2_4
H1x2_5 H1x3_1 H1x3_2 H1x3_3 H1x3_4 H1x3_5 ;
2471249   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2471250   +* Renaming variables for AutoNeural10;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural10;
2471251   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2471252   +* Renaming Posterior variables for AutoNeural10;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural10;
2471253   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2471254   +drop AutoNeural10_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural10_P_DepVar1;
2471255   +AutoNeural10_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural10_P_DepVar1 = P_DepVar1;
2471256   +drop AutoNeural10_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural10_P_DepVar0;
2471257   +AutoNeural10_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural10_P_DepVar0 = P_DepVar0;
2471258   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2471259   +* Renaming _WARN_ variable for AutoNeural10;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural10;
2471260   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2471261   +length AutoNeural10_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural10_WARN_ $4;
2471262   +drop AutoNeural10_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural10_WARN_;
2471263   +AutoNeural10_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural10_WARN_ = _WARN_;
2471264   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2471265   +* Ensmbl46: Maximum Posteriors of 5 models;
MPRINT(EM_DIAGRAM):   * Ensmbl46: Maximum Posteriors of 5 models;
2471266   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2471267   +_psum = 0;
MPRINT(EM_DIAGRAM):   _psum = 0;
2471268   +drop _psum _premainder;
MPRINT(EM_DIAGRAM):   drop _psum _premainder;
2471269   +P_DepVar1 = max(
2471270   +AutoNeural9_P_DepVar1 ,
2471271   +AutoNeural11_P_DepVar1 ,
2471272   +AutoNeural12_P_DepVar1 ,
2471273   +AutoNeural7_P_DepVar1 ,
2471274   +AutoNeural10_P_DepVar1
2471275   +);
MPRINT(EM_DIAGRAM):   P_DepVar1 = max( AutoNeural9_P_DepVar1 , AutoNeural11_P_DepVar1 ,
AutoNeural12_P_DepVar1 , AutoNeural7_P_DepVar1 , AutoNeural10_P_DepVar1 );
2471276   +_premainder =1 - _psum;
MPRINT(EM_DIAGRAM):   _premainder =1 - _psum;
2471277   +if P_DepVar1 > _premainder then do;
MPRINT(EM_DIAGRAM):   if P_DepVar1 > _premainder then do;
2471278   +P_DepVar1 = _premainder;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _premainder;
2471279   +end;
MPRINT(EM_DIAGRAM):   end;
2471280   +_psum + P_DepVar1;
MPRINT(EM_DIAGRAM):   _psum + P_DepVar1;
2471281   +P_DepVar0 = max(
2471282   +AutoNeural9_P_DepVar0 ,
2471283   +AutoNeural11_P_DepVar0 ,
2471284   +AutoNeural12_P_DepVar0 ,
2471285   +AutoNeural7_P_DepVar0 ,
2471286   +AutoNeural10_P_DepVar0
2471287   +);
MPRINT(EM_DIAGRAM):   P_DepVar0 = max( AutoNeural9_P_DepVar0 , AutoNeural11_P_DepVar0 ,
AutoNeural12_P_DepVar0 , AutoNeural7_P_DepVar0 , AutoNeural10_P_DepVar0 );
2471288   +_premainder =1 - _psum;
MPRINT(EM_DIAGRAM):   _premainder =1 - _psum;
2471289   +if P_DepVar0 > _premainder then do;
MPRINT(EM_DIAGRAM):   if P_DepVar0 > _premainder then do;
2471290   +P_DepVar0 = _premainder;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _premainder;
2471291   +end;
MPRINT(EM_DIAGRAM):   end;
2471292   +_psum + P_DepVar0;
MPRINT(EM_DIAGRAM):   _psum + P_DepVar0;
2471293   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2471294   +* Ensmbl46: Computing Classification Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl46: Computing Classification Vars;
2471295   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2471296   +length I_DepVar $32;
MPRINT(EM_DIAGRAM):   length I_DepVar $32;
WARNING: Length of character variable I_DepVar has already been set.
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the
         length of a character variable.
2471297   +label I_DepVar = 'Into: DepVar';
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar';
2471298   +length _format $200;
MPRINT(EM_DIAGRAM):   length _format $200;
2471299   +drop _format;
MPRINT(EM_DIAGRAM):   drop _format;
2471300   +_format= ' ';
MPRINT(EM_DIAGRAM):   _format= ' ';
2471301   +_p_= 0;
MPRINT(EM_DIAGRAM):   _p_= 0;
2471302   +drop _p_;
MPRINT(EM_DIAGRAM):   drop _p_;
2471303   +if P_DepVar1 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar1 > _p_ then do;
2471304   +_p_= P_DepVar1;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar1;
2471305   +_format= '1';
MPRINT(EM_DIAGRAM):   _format= '1';
2471306   +end;
MPRINT(EM_DIAGRAM):   end;
2471307   +if P_DepVar0 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar0 > _p_ then do;
2471308   +_p_= P_DepVar0;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar0;
2471309   +_format= '0';
MPRINT(EM_DIAGRAM):   _format= '0';
2471310   +end;
MPRINT(EM_DIAGRAM):   end;
2471311   +%DMNORMCP(_format,I_DepVar);
MPRINT(DMNORMCP):   I_DepVar=dmnorm(_format,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2471312   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2471313   +* Ensmbl46: Producing Unformatted variable;
MPRINT(EM_DIAGRAM):   * Ensmbl46: Producing Unformatted variable;
2471314   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2471315   +label U_DepVar = "Unnormalized Into: DepVar";
MPRINT(EM_DIAGRAM):   label U_DepVar = "Unnormalized Into: DepVar";
2471316   +if I_DepVar = '1' then U_DepVar = 1;
MPRINT(EM_DIAGRAM):   if I_DepVar = '1' then U_DepVar = 1;
2471317   +else
2471318   +if I_DepVar = '0' then U_DepVar = 0;
MPRINT(EM_DIAGRAM):   else if I_DepVar = '0' then U_DepVar = 0;
2471319   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2471320   +* Ensmbl46: Computing _WARN_ Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl46: Computing _WARN_ Variable;
2471321   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2471322   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
2471323   +label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
2471324   +_WARN_ = '';
MPRINT(EM_DIAGRAM):   _WARN_ = '';
2471325   +if index(AUTONEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
2471325  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
2471326   +if index(AUTONEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
2471326  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
2471327   +if index(AUTONEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
2471327  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
2471328   +if index(AUTONEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
2471328  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
2471329   +if index(AUTONEURAL11_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
2471329  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
2471330   +if index(AUTONEURAL11_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
2471330  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
2471331   +if index(AUTONEURAL11_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
2471331  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
2471332   +if index(AUTONEURAL11_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
2471332  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
2471333   +if index(AUTONEURAL12_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
2471333  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
2471334   +if index(AUTONEURAL12_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
2471334  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
2471335   +if index(AUTONEURAL12_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
2471335  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
2471336   +if index(AUTONEURAL12_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
2471336  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
2471337   +if index(AUTONEURAL7_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
2471337  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL7_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
2471338   +if index(AUTONEURAL7_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
2471338  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL7_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
2471339   +if index(AUTONEURAL7_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
2471339  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL7_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
2471340   +if index(AUTONEURAL7_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
2471340  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL7_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
2471341   +if index(AUTONEURAL10_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
2471341  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL10_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
2471342   +if index(AUTONEURAL10_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
2471342  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL10_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
2471343   +if index(AUTONEURAL10_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
2471343  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL10_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
2471344   +if index(AUTONEURAL10_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
2471344  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL10_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
2471345   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2471346   +* Ensmbl46: Computing Residual Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl46: Computing Residual Vars;
2471347   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2471348   +if
2471349   +F_DepVar NE '1'
2471350   +AND F_DepVar NE '0'
2471351   +then do;
MPRINT(EM_DIAGRAM):   if F_DepVar NE '1' AND F_DepVar NE '0' then do;
2471352   +R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
2471353   +R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
2471354   +end;
MPRINT(EM_DIAGRAM):   end;
2471355   +else do;
MPRINT(EM_DIAGRAM):   else do;
2471356   +R_DepVar1 = -P_DepVar1;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1;
2471357   +R_DepVar0 = -P_DepVar0;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0;
2471358   +SELECT(F_DepVar);
MPRINT(EM_DIAGRAM):   SELECT(F_DepVar);
2471359   +WHEN('1') R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   WHEN('1') R_DepVar1 = R_DepVar1 +1;
2471360   +WHEN('0') R_DepVar0 = R_DepVar0 +1;
MPRINT(EM_DIAGRAM):   WHEN('0') R_DepVar0 = R_DepVar0 +1;
2471361   +OTHERWISE;
MPRINT(EM_DIAGRAM):   OTHERWISE;
2471362   +END;
MPRINT(EM_DIAGRAM):   END;
2471363   +END;
MPRINT(EM_DIAGRAM):   END;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2471364    run;
 
NOTE: DATA STEP view saved on file EMWS8.ENSMBL46_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.AUTONEURAL9_VALIDATE.VIEW used (Total process time):
      real time           0.16 seconds
      cpu time            0.17 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.17 seconds
      cpu time            0.18 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2471365    quit;
2471366    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
MPRINT(EM_DIAGRAM):
MPRINT(CALFITSTATSNOMINAL):   data _tmpTrainFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_
_RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS8.Ensmbl46_TRAIN end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_
_WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Train: Target Variable" _NOBS_= "Train: Sum of
Frequencies" _SSE_= "Train: Sum of Squared Errors" _MAX_= "Train: Maximum Absolute Error"
_DIV_ = "Train: Divisor for ASE" _WRONG_= "Train: Number of Wrong Classifications" _DISF_=
"Train: Frequency of Classified Cases" _MISC_= "Train: Misclassification Rate" _ASE_ = "Train:
Average Squared Error" _RASE_ = "Train: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_
_RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar ne "" then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl46_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set _tmpTrainFitTable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):
MPRINT(CALFITSTATSNOMINAL):   data _tmpValidFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_
_RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS8.Ensmbl46_VALIDATE end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_
_WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Valid: Target Variable" _NOBS_= "Valid: Sum of
Frequencies" _SSE_= "Valid: Sum of Squared Errors" _MAX_= "Valid: Maximum Absolute Error"
_DIV_ = "Valid: Divisor for ASE" _WRONG_= "Valid: Number of Wrong Classifications" _DISF_=
"Valid: Frequency of Classified Cases" _MISC_= "Valid: Misclassification Rate" _ASE_ = "Valid:
Average Squared Error" _RASE_ = "Valid: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_
_RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar ne "" then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _tmpdata_(DROP= TARGET);
MPRINT(EM_DIAGRAM):   set _tmpValidFitTable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _tmpdata_;
MPRINT(EM_DIAGRAM):   set _tmpdata_;
MPRINT(EM_DIAGRAM):   rename _ASE_=_VASE_;
MPRINT(EM_DIAGRAM):   rename _DIV_=_VDIV_;
MPRINT(EM_DIAGRAM):   rename _MAX_=_VMAX_;
MPRINT(EM_DIAGRAM):   rename _NOBS_=_VNOBS_;
MPRINT(EM_DIAGRAM):   rename _RASE_=_VRASE_;
MPRINT(EM_DIAGRAM):   rename _SSE_=_VSSE_;
MPRINT(EM_DIAGRAM):   rename _DISF_=_VDISF_;
MPRINT(EM_DIAGRAM):   rename _MISC_=_VMISC_;
MPRINT(EM_DIAGRAM):   rename _WRONG_=_VWRONG_;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl46_EMOUTFIT;
MPRINT(EM_DIAGRAM):   merge EMWS8.Ensmbl46_EMOUTFIT _tmpdata_;
MPRINT(EM_DIAGRAM):   run;
2471426    filename _pref
2471426  ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural9\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural9\EMPUBLISHSCORE.sas";
2471427    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2471428    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural9\EMPUBLISHSCORE.sas.
2471429   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2471430   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2471431   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2471432   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2471433   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2471434   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2471435   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2471436   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2471437   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2471438   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2471439   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2471440   +LENGTH _WARN_ $4
2471441   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
2471442   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2471443   +
2471444   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2471445   +
2471446   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2471447   +
2471448   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2471449   +
2471450   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2471451   +
2471452   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2471453   +
2471454   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2471455   +
2471456   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2471457   +
2471458   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2471459   +
2471460   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2471461   +
2471462   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2471463   +
2471464   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2471465   +
2471466   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2471467   +
2471468   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2471469   +
2471470   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2471471   +
2471472   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2471473   +
2471474   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2471475   +
2471476   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2471477   +
2471478   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2471479   +
2471480   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2471481   +
2471482   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2471483   +
2471484   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2471485   +
2471486   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2471487   +
2471488   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2471489   +
2471490   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2471491   +
2471492   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2471493   +
2471494   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2471495   +
2471496   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2471497   +
2471498   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2471499   +
2471500   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2471501   +
2471502   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2471503   +
2471504   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2471505   +
2471506   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2471507   +
2471508   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2471509   +
2471510   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2471511   +
2471512   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2471513   +
2471514   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2471515   +
2471516   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2471517   +
2471518   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2471519   +
2471520   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2471521   +
2471522   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2471523   +
2471524   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2471525   +
2471526   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2471527   +
2471528   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2471529   +
2471530   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2471531   +
2471532   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2471533   +
2471534   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2471535   +
2471536   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2471537   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2471538   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2471539   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2471540   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2471541   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2471542   +end;
MPRINT(EM_DIAGRAM):   end;
2471543   +else do;
MPRINT(EM_DIAGRAM):   else do;
2471544   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2471545   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2471546   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2471547   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2471548   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2471549   +   end;
MPRINT(EM_DIAGRAM):   end;
2471550   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2471551   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2471552   +   end;
MPRINT(EM_DIAGRAM):   end;
2471553   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2471554   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2471555   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2471556   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2471557   +   end;
MPRINT(EM_DIAGRAM):   end;
2471558   +end;
MPRINT(EM_DIAGRAM):   end;
2471559   +
2471560   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2471561   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2471562   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2471563   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2471564   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2471565   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2471566   +end;
MPRINT(EM_DIAGRAM):   end;
2471567   +else do;
MPRINT(EM_DIAGRAM):   else do;
2471568   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2471569   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2471570   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2471571   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2471572   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2471573   +   end;
MPRINT(EM_DIAGRAM):   end;
2471574   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2471575   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2471576   +   end;
MPRINT(EM_DIAGRAM):   end;
2471577   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2471578   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2471579   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2471580   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2471581   +   end;
MPRINT(EM_DIAGRAM):   end;
2471582   +end;
MPRINT(EM_DIAGRAM):   end;
2471583   +
2471584   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2471585   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2471586   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2471587   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2471588   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2471589   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2471590   +end;
MPRINT(EM_DIAGRAM):   end;
2471591   +else do;
MPRINT(EM_DIAGRAM):   else do;
2471592   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2471593   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2471594   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2471595   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2471596   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2471597   +   end;
MPRINT(EM_DIAGRAM):   end;
2471598   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2471599   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2471600   +   end;
MPRINT(EM_DIAGRAM):   end;
2471601   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2471602   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2471603   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2471604   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2471605   +   end;
MPRINT(EM_DIAGRAM):   end;
2471606   +end;
MPRINT(EM_DIAGRAM):   end;
2471607   +
2471608   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2471609   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2471610   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2471611   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2471612   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2471613   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2471614   +end;
MPRINT(EM_DIAGRAM):   end;
2471615   +else do;
MPRINT(EM_DIAGRAM):   else do;
2471616   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2471617   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2471618   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2471619   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2471620   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2471621   +   end;
MPRINT(EM_DIAGRAM):   end;
2471622   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2471623   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2471624   +   end;
MPRINT(EM_DIAGRAM):   end;
2471625   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2471626   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2471627   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2471628   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2471629   +   end;
MPRINT(EM_DIAGRAM):   end;
2471630   +end;
MPRINT(EM_DIAGRAM):   end;
2471631   +
2471632   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2471633   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2471634   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2471635   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2471636   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2471637   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2471638   +end;
MPRINT(EM_DIAGRAM):   end;
2471639   +else do;
MPRINT(EM_DIAGRAM):   else do;
2471640   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2471641   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2471642   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2471643   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2471644   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2471645   +   end;
MPRINT(EM_DIAGRAM):   end;
2471646   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2471647   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2471648   +   end;
MPRINT(EM_DIAGRAM):   end;
2471649   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2471650   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2471651   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2471652   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2471653   +   end;
MPRINT(EM_DIAGRAM):   end;
2471654   +end;
MPRINT(EM_DIAGRAM):   end;
2471655   +
2471656   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2471657   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2471658   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2471659   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2471660   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2471661   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2471662   +end;
MPRINT(EM_DIAGRAM):   end;
2471663   +else do;
MPRINT(EM_DIAGRAM):   else do;
2471664   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2471665   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2471666   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2471667   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2471668   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2471669   +   end;
MPRINT(EM_DIAGRAM):   end;
2471670   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2471671   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2471672   +   end;
MPRINT(EM_DIAGRAM):   end;
2471673   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2471674   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2471675   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2471676   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2471677   +   end;
MPRINT(EM_DIAGRAM):   end;
2471678   +end;
MPRINT(EM_DIAGRAM):   end;
2471679   +
2471680   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2471681   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2471682   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2471683   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2471684   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2471685   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2471686   +end;
MPRINT(EM_DIAGRAM):   end;
2471687   +else do;
MPRINT(EM_DIAGRAM):   else do;
2471688   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2471689   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2471690   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2471691   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2471692   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2471693   +   end;
MPRINT(EM_DIAGRAM):   end;
2471694   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2471695   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2471696   +   end;
MPRINT(EM_DIAGRAM):   end;
2471697   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2471698   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2471699   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2471700   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2471701   +   end;
MPRINT(EM_DIAGRAM):   end;
2471702   +end;
MPRINT(EM_DIAGRAM):   end;
2471703   +
2471704   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2471705   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
2471706   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2471707   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2471708   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2471709   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2471710   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2471711   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2471712   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2471713   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2471714   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2471715   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2471716   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2471717   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2471718   +end;
MPRINT(EM_DIAGRAM):   end;
2471719   +else do;
MPRINT(EM_DIAGRAM):   else do;
2471720   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2471721   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2471722   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2471723   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2471724   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2471725   +   end;
MPRINT(EM_DIAGRAM):   end;
2471726   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2471727   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2471728   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2471729   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2471730   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2471731   +   end;
MPRINT(EM_DIAGRAM):   end;
2471732   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2471733   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2471734   +   end;
MPRINT(EM_DIAGRAM):   end;
2471735   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2471736   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2471737   +   end;
MPRINT(EM_DIAGRAM):   end;
2471738   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2471739   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2471740   +   end;
MPRINT(EM_DIAGRAM):   end;
2471741   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2471742   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2471743   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2471744   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2471745   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2471746   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2471747   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2471748   +   end;
MPRINT(EM_DIAGRAM):   end;
2471749   +end;
MPRINT(EM_DIAGRAM):   end;
2471750   +
2471751   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2471752   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2471753   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
2471754   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2471755   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2471756   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2471757   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2471758   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2471759   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2471760   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2471761   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2471762   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2471763   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2471764   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2471765   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2471766   +end;
MPRINT(EM_DIAGRAM):   end;
2471767   +else do;
MPRINT(EM_DIAGRAM):   else do;
2471768   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2471769   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2471770   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2471771   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2471772   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2471773   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2471774   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2471775   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2471776   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2471777   +         end;
MPRINT(EM_DIAGRAM):   end;
2471778   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2471779   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2471780   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2471781   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2471782   +            end;
MPRINT(EM_DIAGRAM):   end;
2471783   +         end;
MPRINT(EM_DIAGRAM):   end;
2471784   +      end;
MPRINT(EM_DIAGRAM):   end;
2471785   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2471786   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2471787   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2471788   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2471789   +         end;
MPRINT(EM_DIAGRAM):   end;
2471790   +      end;
MPRINT(EM_DIAGRAM):   end;
2471791   +   end;
MPRINT(EM_DIAGRAM):   end;
2471792   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2471793   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2471794   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2471795   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2471796   +      end;
MPRINT(EM_DIAGRAM):   end;
2471797   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2471798   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2471799   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2471800   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2471801   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2471802   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2471803   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2471804   +         end;
MPRINT(EM_DIAGRAM):   end;
2471805   +      end;
MPRINT(EM_DIAGRAM):   end;
2471806   +   end;
MPRINT(EM_DIAGRAM):   end;
2471807   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2471808   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2471809   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2471810   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2471811   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2471812   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2471813   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2471814   +   end;
MPRINT(EM_DIAGRAM):   end;
2471815   +end;
MPRINT(EM_DIAGRAM):   end;
2471816   +
2471817   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2471818   +*** Checking missing input Interval
2471819   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2471820   +
2471821   +IF NMISS(
2471822   +   AcceptedCmpTotal ,
2471823   +   Age ,
2471824   +   Frq ,
2471825   +   Income ,
2471826   +   Kidhome ,
2471827   +   Mnt ,
2471828   +   MntFishProducts ,
2471829   +   MntFruits ,
2471830   +   MntGoldProds ,
2471831   +   MntMeatProducts ,
2471832   +   MntSweetProducts ,
2471833   +   MntWines ,
2471834   +   MonthsAsCustomer ,
2471835   +   NumCatalogPurchases ,
2471836   +   NumDealsPurchases ,
2471837   +   NumDistPurchases ,
2471838   +   NumStorePurchases ,
2471839   +   NumWebPurchases ,
2471840   +   NumWebVisitsMonth ,
2471841   +   RFMstat ,
2471842   +   RMntFrq ,
2471843   +   Recency ,
2471844   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
2471845   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2471846   +
2471847   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2471848   +END;
MPRINT(EM_DIAGRAM):   END;
2471849   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2471850   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2471851   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2471852   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2471853   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2471854   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2471855   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2471856   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2471857   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2471858   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2471859   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2471860   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2471861   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2471862   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2471863   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2471864   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2471865   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2471866   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2471867   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2471868   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2471869   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2471870   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2471871   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
2471872   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2471873   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2471874   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2471875   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2471876   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2471877   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2471878   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2471879   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2471880   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2471881   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2471882   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2471883   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2471884   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2471885   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2471886   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2471887   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2471888   +END;
MPRINT(EM_DIAGRAM):   END;
2471889   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2471890   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2471891   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2471892   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2471893   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2471894   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2471895   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2471896   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2471897   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2471898   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2471899   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2471900   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2471901   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2471902   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2471903   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2471904   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2471905   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2471906   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2471907   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2471908   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2471909   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2471910   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2471911   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
2471912   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2471913   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2471914   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2471915   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2471916   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2471917   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2471918   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2471919   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2471920   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2471921   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2471922   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
2471923   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2471924   +   ELSE S_NumCatalogPurchases
2471925   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2471926   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2471927   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2471928   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2471929   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2471930   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2471931   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2471932   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2471933   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2471934   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2471935   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2471936   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2471937   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2471938   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2471939   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2471940   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2471941   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2471942   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2471943   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2471944   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2471945   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2471946   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2471947   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2471948   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2471949   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2471950   +END;
MPRINT(EM_DIAGRAM):   END;
2471951   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2471952   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2471953   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2471954   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2471955   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2471956   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2471957   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2471958   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2471959   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2471960   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2471961   +   H1x1_1  =     -0.7790327388408 * S_AcceptedCmpTotal
2471962   +          +     0.32193739579856 * S_Age  +    -0.43875684835169 * S_Frq
2471963   +          +     0.13013240455049 * S_Income  +    -0.74127716462976 *
2471964   +        S_Kidhome  +    -0.86416600561474 * S_Mnt  +     0.94819226754442 *
2471965   +        S_MntFishProducts  +     0.15895119408799 * S_MntFruits
2471966   +          +     0.03658391935071 * S_MntGoldProds  +    -3.75052142292398 *
2471967   +        S_MntMeatProducts  +    -0.22192220883538 * S_MntSweetProducts
2471968   +          +     0.80534656860633 * S_MntWines  +     0.16144794241259 *
2471969   +        S_MonthsAsCustomer  +    -1.53040364803625 * S_NumCatalogPurchases
2471970   +          +    -1.09856598010056 * S_NumDealsPurchases
2471971   +          +    -0.10571850472514 * S_NumDistPurchases
2471972   +          +     0.11898210654227 * S_NumStorePurchases
2471973   +          +      0.5984912060231 * S_NumWebPurchases
2471974   +          +     0.78592531126942 * S_NumWebVisitsMonth
2471975   +          +    -0.50004686386273 * S_RFMstat  +     0.40804018151571 *
2471976   +        S_RMntFrq  +    -0.94753260620308 * S_Recency
2471977   +          +    -0.49604118088328 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.7790327388408 * S_AcceptedCmpTotal + 0.32193739579856 *
S_Age + -0.43875684835169 * S_Frq + 0.13013240455049 * S_Income + -0.74127716462976 *
S_Kidhome + -0.86416600561474 * S_Mnt + 0.94819226754442 * S_MntFishProducts +
0.15895119408799 * S_MntFruits + 0.03658391935071 * S_MntGoldProds + -3.75052142292398 *
S_MntMeatProducts + -0.22192220883538 * S_MntSweetProducts + 0.80534656860633 * S_MntWines +
0.16144794241259 * S_MonthsAsCustomer + -1.53040364803625 * S_NumCatalogPurchases +
-1.09856598010056 * S_NumDealsPurchases + -0.10571850472514 * S_NumDistPurchases +
0.11898210654227 * S_NumStorePurchases + 0.5984912060231 * S_NumWebPurchases +
0.78592531126942 * S_NumWebVisitsMonth + -0.50004686386273 * S_RFMstat + 0.40804018151571 *
S_RMntFrq + -0.94753260620308 * S_Recency + -0.49604118088328 * S_Teenhome ;
2471978   +   H1x1_2  =    -0.22226926295489 * S_AcceptedCmpTotal
2471979   +          +     0.08523894206962 * S_Age  +    -0.13010378102207 * S_Frq
2471980   +          +    -0.61810906923536 * S_Income  +     0.26583917928045 *
2471981   +        S_Kidhome  +     0.57213479787981 * S_Mnt  +    -0.58077613046442 *
2471982   +        S_MntFishProducts  +      0.1530301493776 * S_MntFruits
2471983   +          +      0.4586167382631 * S_MntGoldProds  +     1.40179051129147 *
2471984   +        S_MntMeatProducts  +      0.0231413770297 * S_MntSweetProducts
2471985   +          +    -0.08483682112771 * S_MntWines  +     0.22891006905064 *
2471986   +        S_MonthsAsCustomer  +    -1.21866617917435 * S_NumCatalogPurchases
2471987   +          +    -0.84042044250624 * S_NumDealsPurchases
2471988   +          +    -0.10246261015488 * S_NumDistPurchases
2471989   +          +     0.06886149708824 * S_NumStorePurchases
2471990   +          +     0.63156910388199 * S_NumWebPurchases
2471991   +          +    -1.33032061845311 * S_NumWebVisitsMonth
2471992   +          +     0.51240040684649 * S_RFMstat  +     0.77604047421115 *
2471993   +        S_RMntFrq  +     1.27964260226958 * S_Recency
2471994   +          +     0.12022076571016 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.22226926295489 * S_AcceptedCmpTotal + 0.08523894206962 *
S_Age + -0.13010378102207 * S_Frq + -0.61810906923536 * S_Income + 0.26583917928045 *
S_Kidhome + 0.57213479787981 * S_Mnt + -0.58077613046442 * S_MntFishProducts + 0.1530301493776
* S_MntFruits + 0.4586167382631 * S_MntGoldProds + 1.40179051129147 * S_MntMeatProducts +
0.0231413770297 * S_MntSweetProducts + -0.08483682112771 * S_MntWines + 0.22891006905064 *
S_MonthsAsCustomer + -1.21866617917435 * S_NumCatalogPurchases + -0.84042044250624 *
S_NumDealsPurchases + -0.10246261015488 * S_NumDistPurchases + 0.06886149708824 *
S_NumStorePurchases + 0.63156910388199 * S_NumWebPurchases + -1.33032061845311 *
S_NumWebVisitsMonth + 0.51240040684649 * S_RFMstat + 0.77604047421115 * S_RMntFrq +
1.27964260226958 * S_Recency + 0.12022076571016 * S_Teenhome ;
2471995   +   H1x1_3  =     1.19879097976404 * S_AcceptedCmpTotal
2471996   +          +     0.14973951999399 * S_Age  +    -0.90630756390399 * S_Frq
2471997   +          +     0.64934241358682 * S_Income  +    -0.66249532206724 *
2471998   +        S_Kidhome  +     0.54195490560813 * S_Mnt  +    -0.58497380565417 *
2471999   +        S_MntFishProducts  +     0.12409202833851 * S_MntFruits
2472000   +          +     0.44480061346561 * S_MntGoldProds  +     3.27513201048136 *
2472001   +        S_MntMeatProducts  +     -0.1256493054184 * S_MntSweetProducts
2472002   +          +    -0.56080685022301 * S_MntWines  +     0.08633469383177 *
2472003   +        S_MonthsAsCustomer  +     0.45482673505107 * S_NumCatalogPurchases
2472004   +          +     0.45393712455366 * S_NumDealsPurchases
2472005   +          +    -0.25292198053552 * S_NumDistPurchases
2472006   +          +    -1.35582215064749 * S_NumStorePurchases
2472007   +          +    -0.83132202302639 * S_NumWebPurchases
2472008   +          +     1.87116225272678 * S_NumWebVisitsMonth
2472009   +          +     0.39564162951481 * S_RFMstat  +    -1.08810221295144 *
2472010   +        S_RMntFrq  +    -2.07407859514648 * S_Recency
2472011   +          +     -0.6849099475723 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.19879097976404 * S_AcceptedCmpTotal + 0.14973951999399 *
S_Age + -0.90630756390399 * S_Frq + 0.64934241358682 * S_Income + -0.66249532206724 *
S_Kidhome + 0.54195490560813 * S_Mnt + -0.58497380565417 * S_MntFishProducts +
0.12409202833851 * S_MntFruits + 0.44480061346561 * S_MntGoldProds + 3.27513201048136 *
S_MntMeatProducts + -0.1256493054184 * S_MntSweetProducts + -0.56080685022301 * S_MntWines +
0.08633469383177 * S_MonthsAsCustomer + 0.45482673505107 * S_NumCatalogPurchases +
0.45393712455366 * S_NumDealsPurchases + -0.25292198053552 * S_NumDistPurchases +
-1.35582215064749 * S_NumStorePurchases + -0.83132202302639 * S_NumWebPurchases +
1.87116225272678 * S_NumWebVisitsMonth + 0.39564162951481 * S_RFMstat + -1.08810221295144 *
S_RMntFrq + -2.07407859514648 * S_Recency + -0.6849099475723 * S_Teenhome ;
2472012   +   H1x1_1  = H1x1_1  +     0.81075414854045 * AcceptedCmp10
2472013   +          +    -0.33403710427327 * AcceptedCmp20  +    -0.62242387435975 *
2472014   +        AcceptedCmp30  +    -0.89439410552439 * AcceptedCmp40
2472015   +          +     0.77335976756467 * AcceptedCmp50  +    -0.08825784612626 *
2472016   +        Complain0  +      0.3404395194267 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.81075414854045 * AcceptedCmp10 + -0.33403710427327 *
AcceptedCmp20 + -0.62242387435975 * AcceptedCmp30 + -0.89439410552439 * AcceptedCmp40 +
0.77335976756467 * AcceptedCmp50 + -0.08825784612626 * Complain0 + 0.3404395194267 *
HigherEducationBinary0 ;
2472017   +   H1x1_2  = H1x1_2  +    -0.16741179709566 * AcceptedCmp10
2472018   +          +    -0.53751033948061 * AcceptedCmp20  +     0.80285496945068 *
2472019   +        AcceptedCmp30  +     0.39379279966091 * AcceptedCmp40
2472020   +          +    -1.40366799083237 * AcceptedCmp50  +     -0.4265482924132 *
2472021   +        Complain0  +     0.37272103593422 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.16741179709566 * AcceptedCmp10 + -0.53751033948061
* AcceptedCmp20 + 0.80285496945068 * AcceptedCmp30 + 0.39379279966091 * AcceptedCmp40 +
-1.40366799083237 * AcceptedCmp50 + -0.4265482924132 * Complain0 + 0.37272103593422 *
HigherEducationBinary0 ;
2472022   +   H1x1_3  = H1x1_3  +    -0.19417657656326 * AcceptedCmp10
2472023   +          +    -0.06547746897317 * AcceptedCmp20  +     0.21980739904513 *
2472024   +        AcceptedCmp30  +    -0.19452210052301 * AcceptedCmp40
2472025   +          +    -2.02403282278574 * AcceptedCmp50  +    -0.18250261144524 *
2472026   +        Complain0  +     0.34168103813312 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.19417657656326 * AcceptedCmp10 + -0.06547746897317
* AcceptedCmp20 + 0.21980739904513 * AcceptedCmp30 + -0.19452210052301 * AcceptedCmp40 +
-2.02403282278574 * AcceptedCmp50 + -0.18250261144524 * Complain0 + 0.34168103813312 *
HigherEducationBinary0 ;
2472027   +   H1x1_1  = H1x1_1  +    -0.03956789621002 * Education2n_Cycle
2472028   +          +    -0.38372374638888 * EducationBasic  +     -0.4178927802606 *
2472029   +        EducationGraduation  +    -0.61278625923288 * EducationMaster
2472030   +          +      0.4695898100094 * Marital_StatusDivorced
2472031   +          +    -0.52137742289262 * Marital_StatusMarried
2472032   +          +    -0.32382086914936 * Marital_StatusSingle
2472033   +          +    -0.66163012672344 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.03956789621002 * Education2n_Cycle +
-0.38372374638888 * EducationBasic + -0.4178927802606 * EducationGraduation +
-0.61278625923288 * EducationMaster + 0.4695898100094 * Marital_StatusDivorced +
-0.52137742289262 * Marital_StatusMarried + -0.32382086914936 * Marital_StatusSingle +
-0.66163012672344 * Marital_StatusTogether ;
2472034   +   H1x1_2  = H1x1_2  +    -0.25832319223886 * Education2n_Cycle
2472035   +          +     0.05602860720141 * EducationBasic  +    -0.86282852488383 *
2472036   +        EducationGraduation  +     0.18916317018059 * EducationMaster
2472037   +          +    -1.04858218653238 * Marital_StatusDivorced
2472038   +          +     2.41098335093061 * Marital_StatusMarried
2472039   +          +    -1.94696044861334 * Marital_StatusSingle
2472040   +          +     2.16021514856437 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.25832319223886 * Education2n_Cycle +
0.05602860720141 * EducationBasic + -0.86282852488383 * EducationGraduation + 0.18916317018059
* EducationMaster + -1.04858218653238 * Marital_StatusDivorced + 2.41098335093061 *
Marital_StatusMarried + -1.94696044861334 * Marital_StatusSingle + 2.16021514856437 *
Marital_StatusTogether ;
2472041   +   H1x1_3  = H1x1_3  +    -0.05351872242069 * Education2n_Cycle
2472042   +          +    -0.56850783552841 * EducationBasic  +    -0.14880907057098 *
2472043   +        EducationGraduation  +    -0.32850851013319 * EducationMaster
2472044   +          +     0.42964114177062 * Marital_StatusDivorced
2472045   +          +    -0.38607635605816 * Marital_StatusMarried
2472046   +          +    -0.02157405407852 * Marital_StatusSingle
2472047   +          +    -0.59995619744527 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.05351872242069 * Education2n_Cycle +
-0.56850783552841 * EducationBasic + -0.14880907057098 * EducationGraduation +
-0.32850851013319 * EducationMaster + 0.42964114177062 * Marital_StatusDivorced +
-0.38607635605816 * Marital_StatusMarried + -0.02157405407852 * Marital_StatusSingle +
-0.59995619744527 * Marital_StatusTogether ;
2472048   +   H1x1_1  =    -0.53239337390307 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.53239337390307 + H1x1_1 ;
2472049   +   H1x1_2  =     0.99428677123948 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.99428677123948 + H1x1_2 ;
2472050   +   H1x1_3  =       1.835877082844 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.835877082844 + H1x1_3 ;
2472051   +   H1x1_4  = 0;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0;
2472052   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
2472053   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2472054   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
2472055   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
2472056   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
2472057   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
2472058   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
2472059   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
2472060   +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
2472061   +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
2472062   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
2472063   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
2472064   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
2472065   +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
2472066   +END;
MPRINT(EM_DIAGRAM):   END;
2472067   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2472068   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2472069   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2472070   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2472071   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2472072   +END;
MPRINT(EM_DIAGRAM):   END;
2472073   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2472074   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2472075   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2472076   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2472077   +   P_DepVar1  =    -3.41904253756965 * H1x1_1  +    -7.11204151517034 * H1x1_2
2472078   +          +     10.7909509395818 * H1x1_3  +    -2.20432578352426 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.41904253756965 * H1x1_1 + -7.11204151517034 * H1x1_2 +
10.7909509395818 * H1x1_3 + -2.20432578352426 * H1x1_4 ;
2472079   +   P_DepVar1  =    -3.66951098257489 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.66951098257489 + P_DepVar1 ;
2472080   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2472081   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2472082   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2472083   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2472084   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2472085   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2472086   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2472087   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2472088   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2472089   +END;
MPRINT(EM_DIAGRAM):   END;
2472090   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2472091   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2472092   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2472093   +END;
MPRINT(EM_DIAGRAM):   END;
2472094   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2472095   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2472096   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2472097   +END;
MPRINT(EM_DIAGRAM):   END;
2472098   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2472099   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2472100   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2472101   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2472102   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2472103   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2472104   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2472105   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2472106   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2472107   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2472108   +END;
MPRINT(EM_DIAGRAM):   END;
2472109   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2472110   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2472111   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2472112   +drop
2472113   +H1x1_1
2472114   +H1x1_2
2472115   +H1x1_3
2472116   +H1x1_4
2472117   +;
MPRINT(EM_DIAGRAM):   drop H1x1_1 H1x1_2 H1x1_3 H1x1_4 ;
2472118   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2472119    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2472120    quit;
2472121    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2472122    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2472123    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2472124    retain ID 2 Node "AutoNeural9";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural9";
2472125    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2472126    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2632 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2632 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2472127    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2472128    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2472129    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2632 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2632 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2472130    proc sort data=EMWS8.AutoNeural9_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural9_variableset out=_temp2(keep=NAME
CREATOR);
2472131    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2472132    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL9_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2472133    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2472134    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2472135    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2472136    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2472137    proc contents data=EMWS8.AutoNeural9_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural9_train out=_meta(keep=NAME) noprint;
2472138    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
2472139    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2472140    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2472141    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2472142    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2472143    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2472144    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2472145    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2472146    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2472147    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2472147  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1479 rows and 5 columns.
 
2472148    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2472149    proc append base=EMWS8.Ensmbl46_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl46_FCMP data=_tempx;
2472150    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL46_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1479 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL46_FCMP has 1479 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2472151    filename _pref
2472151  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
2472152    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2472153    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
2472154   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2472155   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
2472156   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2472157   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
2472158   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
2472159   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2472160    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2472161    quit;
2472162    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2472163    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2472164    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2472165    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
2472166    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2472167    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2472168    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2472169    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2472170    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2472171    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
2472172    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2472173    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2472174    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2472175    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2472176    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2472177    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2472178    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
2472179    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
2472180    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2472181    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2472182    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2472183    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2472184    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2472185    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2472186    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2472187    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2472188    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2472188  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
2472189    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2472190    proc append base=EMWS8.Ensmbl46_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl46_FCMP data=_tempx;
2472191    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL46_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL46_FCMP has 1483 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2472192    filename _pref
2472192  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
2472193    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2472194    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
2472195   +
2472196   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
2472197   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
2472197  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
2472198   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
2472199   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
2472200   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
2472201   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
2472202   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2472203    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2472204    quit;
2472205    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2472206    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2472207    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2472208    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
2472209    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2472210    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2472211    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2472212    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2472213    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2472214    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
2472215    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2472216    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2472217    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2472218    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2472219    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2472220    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2472221    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
2472222    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2472223    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2472224    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2472225    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2472226    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2472227    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2472228    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2472229    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2472230    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2472231    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2472231  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
2472232    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2472233    proc append base=EMWS8.Ensmbl46_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl46_FCMP data=_tempx;
2472234    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL46_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL46_FCMP has 1522 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2472235    filename _pref
2472235  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
2472236    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2472237    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
2472238   +
2472239   +
2472240   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
2472241   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
2472242   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
2472243   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
2472244   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
2472245   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2472246   +
2472247   +
2472248   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
2472249   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
2472250   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
2472251   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
2472252   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
2472253   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2472254   +
2472255   +
2472256   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
2472257   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
2472258   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
2472259   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
2472260   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
2472261   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2472262   +
2472263   +
2472264   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
2472265   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
2472266   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
2472267   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
2472268   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
2472269   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2472270   +
2472271   +
2472272   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
2472273   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
2472274   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
2472275   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
2472276   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
2472277   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2472278   +
2472279   +
2472280   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
2472281   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
2472282   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
2472283   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
2472284   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
2472285   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2472286   +
2472287   +
2472288   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
2472289   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
2472290   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
2472291   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
2472292   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
2472293   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2472294   +
2472295   +
2472296   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
2472297   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
2472298   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
2472299   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
2472300   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
2472301   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2472302   +if
2472303   +_FILTERNORM1 not in ( '.')
2472304   + and
2472305   +_FILTERNORM2 not in ( '.')
2472306   + and
2472307   +_FILTERNORM3 not in ( '.')
2472308   + and
2472309   +_FILTERNORM4 not in ( '.')
2472310   + and
2472311   +_FILTERNORM5 not in ( '.')
2472312   + and
2472313   +_FILTERNORM6 not in ( '.')
2472314   + and
2472315   +_FILTERNORM7 not in ( ' ')
2472316   + and
2472317   +_FILTERNORM8 not in ( ' ')
2472318   +and
2472319   +( Dt_Customer ne .)
2472320   +and ( Income ne . and (Income<=107000))
2472321   +and ( Kidhome ne .)
2472322   +and ( MntFishProducts ne .)
2472323   +and ( MntFruits ne .)
2472324   +and ( MntGoldProds ne .)
2472325   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
2472326   +and ( MntSweetProducts ne .)
2472327   +and ( MntWines ne .)
2472328   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
2472329   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
2472330   +and ( NumStorePurchases ne .)
2472331   +and ( NumWebPurchases ne .)
2472332   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
2472333   +and ( Recency ne .)
2472334   +and ( Teenhome ne .)
2472335   +and ( Year_Birth ne .)
2472336   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
2472337   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
2472338   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
2472339   +end;
MPRINT(EM_DIAGRAM):   end;
2472340   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
2472341   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2472342    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2472343    quit;
2472344    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2472345    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2472346    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2472347    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
2472348    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2472349    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2472350    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2472351    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2472352    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2472353    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
2472354    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2472355    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2472356    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2472357    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2472358    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2472359    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2472360    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
2472361    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
2472362    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2472363    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2472364    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2472365    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2472366    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2472367    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2472368    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2472369    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2472370    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2472370  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
2472371    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2472372    proc append base=EMWS8.Ensmbl46_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl46_FCMP data=_tempx;
2472373    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL46_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL46_FCMP has 1588 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2472374    %macro varDept(fcmpdata=,id=);
2472375    %global nobs&id scoreFlag&id;
2472376    %let scoreFlag&id = 0;
2472377    %if &id=1 or ^&fcmpStart %then %do;
2472378    proc sort data=&fcmpdata out=_temp&id nodupkey;
2472379    by NAME;
2472380    where id=&id and LHS in( %let j=1;
2472381    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
2472382    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
2472383    "&var" %let j = %eval(&j+1);
2472384    %end;
2472385    );
2472386    run;
2472387    %let dsid = %sysfunc(open(_temp&id));
2472388    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2472389    %let dsid = %sysfunc(close(&dsid));
2472390    %if &&nobs&id %then %do;
2472391    %let scoreFlag&id = 1;
2472392    %let fcmpStart = 1;
2472393    %end;
2472394    %else %let fcmpStart = 0;
2472395    %end;
2472396    %else %do;
2472397    proc sort data=&fcmpdata out=_tempid;
2472398    where id=&id;
2472399    by LHS;
2472400    run;
2472401    %let dsid = %sysfunc(open(_tempid));
2472402    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2472403    %let dsid = %sysfunc(close(&dsid));
2472404    %if ^&&nobs&id %then %do;
2472405    proc datasets lib=work nolist;
2472406    delete _tempid;
2472407    run;
2472408    quit;
2472409    %end;
2472410    %else %do;
2472411    data _tempAll;
2472412    set %let j=%eval(&id-1);
2472413    %do x=1 %to &j;
2472414    %if &&nobs&x %then %do;
2472415    _temp&x %end;
2472416    %end;
2472417    ;
2472418    run;
2472419    proc sql;
2472420    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
2472420  ! work._tempid p2 where p.name=p2.lhs;
2472421    quit;
2472422    data _temp&id;
2472423    set _temp&id;
2472424    where LHS ne '' and NAME ne '' and Node ne '';
2472425    run;
2472426    proc datasets lib=work nolist;
2472427    delete _tempAll;
2472428    run;
2472429    %let dsid = %sysfunc(open(_temp&id));
2472430    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2472431    %let dsid = %sysfunc(close(&dsid));
2472432    %if ^&&nobs&id %then %do;
2472433    proc datasets lib=work nolist;
2472434    delete _temp&id;
2472435    run;
2472436    quit;
2472437    %end;
2472438    %else %do;
2472439    %let scoreFlag&id = 1;
2472440    data _temp&id;
2472441    set _temp&id;
2472442    where LHS ne NAME and node ne '';
2472443    run;
2472444    %let dsid = %sysfunc(open(_temp&id));
2472445    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2472446    %let dsid = %sysfunc(close(&dsid));
2472447    %if ^&&nobs&id %then %do;
2472448    proc datasets lib=work nolist;
2472449    delete _temp&id;
2472450    run;
2472451    quit;
2472452    %end;
2472453    %else %do;
2472454    proc sort data=_temp&id nodupkey;
2472455    by LHS NAME;
2472456    run;
2472457    %end;
2472458    %end;
2472459    %end;
2472460    %end;
2472461    %mend varDept;
2472462    %macro optCode(outdata=fcmpdata);
2472463    %global fcmpStart;
2472464    %let fcmpStart = 0;
2472465    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
2472466    %let NumNodes=9;
2472467    %do k=1 %to &NumNodes;
2472468    %vardept(fcmpdata=&outdata, id=&k);
2472469    %end;
2472470    %mend optCode;
2472471    %optcode(outData=EMWS8.Ensmbl46_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl46_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL46_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl46_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 134 observations read from the data set EMWS8.ENSMBL46_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 100 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 34 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl46_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL46_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl46_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL46_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.06 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl46_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL46_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 34 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl46_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL46_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 38 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl46_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL46_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 77 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl46_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL46_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl46_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL46_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
2472472    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
2472473    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
2472474    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
2472475    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2472476    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
2472477    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
2472478    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
2472479    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2472480    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2472481    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
2472481  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.
 
2472482    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
2472483    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
2472484    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
2472485    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2472486    filename _pref
2472486  ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural11\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural11\EMPUBLISHSCORE.sas";
2472487    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2472488    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural11\EMPUBLISHSCORE.sas.
2472489   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2472490   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2472491   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2472492   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2472493   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2472494   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2472495   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2472496   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2472497   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2472498   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2472499   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2472500   +LENGTH _WARN_ $4
2472501   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
2472502   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2472503   +
2472504   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2472505   +
2472506   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2472507   +
2472508   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2472509   +
2472510   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2472511   +
2472512   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2472513   +
2472514   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2472515   +
2472516   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2472517   +
2472518   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2472519   +
2472520   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2472521   +
2472522   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2472523   +
2472524   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2472525   +
2472526   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2472527   +
2472528   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2472529   +
2472530   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2472531   +
2472532   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2472533   +
2472534   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2472535   +
2472536   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2472537   +
2472538   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2472539   +
2472540   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2472541   +
2472542   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2472543   +
2472544   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2472545   +
2472546   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2472547   +
2472548   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2472549   +
2472550   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2472551   +
2472552   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2472553   +
2472554   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2472555   +
2472556   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2472557   +
2472558   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2472559   +
2472560   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2472561   +
2472562   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2472563   +
2472564   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2472565   +
2472566   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2472567   +
2472568   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2472569   +
2472570   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2472571   +
2472572   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2472573   +
2472574   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2472575   +
2472576   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2472577   +
2472578   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2472579   +
2472580   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2472581   +
2472582   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2472583   +
2472584   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2472585   +
2472586   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
2472587   +
2472588   +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
2472589   +
2472590   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2472591   +
2472592   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2472593   +
2472594   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2472595   +
2472596   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2472597   +
2472598   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2472599   +
2472600   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2472601   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2472602   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2472603   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2472604   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2472605   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2472606   +end;
MPRINT(EM_DIAGRAM):   end;
2472607   +else do;
MPRINT(EM_DIAGRAM):   else do;
2472608   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2472609   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2472610   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2472611   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2472612   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2472613   +   end;
MPRINT(EM_DIAGRAM):   end;
2472614   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2472615   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2472616   +   end;
MPRINT(EM_DIAGRAM):   end;
2472617   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2472618   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2472619   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2472620   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2472621   +   end;
MPRINT(EM_DIAGRAM):   end;
2472622   +end;
MPRINT(EM_DIAGRAM):   end;
2472623   +
2472624   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2472625   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2472626   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2472627   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2472628   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2472629   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2472630   +end;
MPRINT(EM_DIAGRAM):   end;
2472631   +else do;
MPRINT(EM_DIAGRAM):   else do;
2472632   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2472633   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2472634   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2472635   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2472636   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2472637   +   end;
MPRINT(EM_DIAGRAM):   end;
2472638   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2472639   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2472640   +   end;
MPRINT(EM_DIAGRAM):   end;
2472641   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2472642   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2472643   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2472644   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2472645   +   end;
MPRINT(EM_DIAGRAM):   end;
2472646   +end;
MPRINT(EM_DIAGRAM):   end;
2472647   +
2472648   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2472649   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2472650   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2472651   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2472652   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2472653   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2472654   +end;
MPRINT(EM_DIAGRAM):   end;
2472655   +else do;
MPRINT(EM_DIAGRAM):   else do;
2472656   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2472657   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2472658   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2472659   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2472660   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2472661   +   end;
MPRINT(EM_DIAGRAM):   end;
2472662   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2472663   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2472664   +   end;
MPRINT(EM_DIAGRAM):   end;
2472665   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2472666   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2472667   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2472668   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2472669   +   end;
MPRINT(EM_DIAGRAM):   end;
2472670   +end;
MPRINT(EM_DIAGRAM):   end;
2472671   +
2472672   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2472673   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2472674   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2472675   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2472676   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2472677   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2472678   +end;
MPRINT(EM_DIAGRAM):   end;
2472679   +else do;
MPRINT(EM_DIAGRAM):   else do;
2472680   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2472681   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2472682   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2472683   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2472684   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2472685   +   end;
MPRINT(EM_DIAGRAM):   end;
2472686   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2472687   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2472688   +   end;
MPRINT(EM_DIAGRAM):   end;
2472689   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2472690   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2472691   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2472692   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2472693   +   end;
MPRINT(EM_DIAGRAM):   end;
2472694   +end;
MPRINT(EM_DIAGRAM):   end;
2472695   +
2472696   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2472697   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2472698   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2472699   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2472700   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2472701   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2472702   +end;
MPRINT(EM_DIAGRAM):   end;
2472703   +else do;
MPRINT(EM_DIAGRAM):   else do;
2472704   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2472705   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2472706   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2472707   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2472708   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2472709   +   end;
MPRINT(EM_DIAGRAM):   end;
2472710   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2472711   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2472712   +   end;
MPRINT(EM_DIAGRAM):   end;
2472713   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2472714   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2472715   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2472716   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2472717   +   end;
MPRINT(EM_DIAGRAM):   end;
2472718   +end;
MPRINT(EM_DIAGRAM):   end;
2472719   +
2472720   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2472721   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2472722   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2472723   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2472724   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2472725   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2472726   +end;
MPRINT(EM_DIAGRAM):   end;
2472727   +else do;
MPRINT(EM_DIAGRAM):   else do;
2472728   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2472729   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2472730   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2472731   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2472732   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2472733   +   end;
MPRINT(EM_DIAGRAM):   end;
2472734   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2472735   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2472736   +   end;
MPRINT(EM_DIAGRAM):   end;
2472737   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2472738   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2472739   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2472740   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2472741   +   end;
MPRINT(EM_DIAGRAM):   end;
2472742   +end;
MPRINT(EM_DIAGRAM):   end;
2472743   +
2472744   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2472745   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2472746   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2472747   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2472748   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2472749   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2472750   +end;
MPRINT(EM_DIAGRAM):   end;
2472751   +else do;
MPRINT(EM_DIAGRAM):   else do;
2472752   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2472753   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2472754   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2472755   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2472756   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2472757   +   end;
MPRINT(EM_DIAGRAM):   end;
2472758   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2472759   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2472760   +   end;
MPRINT(EM_DIAGRAM):   end;
2472761   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2472762   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2472763   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2472764   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2472765   +   end;
MPRINT(EM_DIAGRAM):   end;
2472766   +end;
MPRINT(EM_DIAGRAM):   end;
2472767   +
2472768   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2472769   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
2472770   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2472771   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2472772   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2472773   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2472774   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2472775   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2472776   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2472777   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2472778   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2472779   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2472780   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2472781   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2472782   +end;
MPRINT(EM_DIAGRAM):   end;
2472783   +else do;
MPRINT(EM_DIAGRAM):   else do;
2472784   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2472785   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2472786   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2472787   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2472788   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2472789   +   end;
MPRINT(EM_DIAGRAM):   end;
2472790   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2472791   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2472792   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2472793   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2472794   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2472795   +   end;
MPRINT(EM_DIAGRAM):   end;
2472796   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2472797   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2472798   +   end;
MPRINT(EM_DIAGRAM):   end;
2472799   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2472800   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2472801   +   end;
MPRINT(EM_DIAGRAM):   end;
2472802   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2472803   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2472804   +   end;
MPRINT(EM_DIAGRAM):   end;
2472805   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2472806   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2472807   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2472808   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2472809   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2472810   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2472811   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2472812   +   end;
MPRINT(EM_DIAGRAM):   end;
2472813   +end;
MPRINT(EM_DIAGRAM):   end;
2472814   +
2472815   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2472816   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2472817   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
2472818   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2472819   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2472820   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2472821   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2472822   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2472823   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2472824   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2472825   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2472826   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2472827   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2472828   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2472829   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2472830   +end;
MPRINT(EM_DIAGRAM):   end;
2472831   +else do;
MPRINT(EM_DIAGRAM):   else do;
2472832   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2472833   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2472834   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2472835   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2472836   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2472837   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2472838   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2472839   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2472840   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2472841   +         end;
MPRINT(EM_DIAGRAM):   end;
2472842   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2472843   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2472844   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2472845   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2472846   +            end;
MPRINT(EM_DIAGRAM):   end;
2472847   +         end;
MPRINT(EM_DIAGRAM):   end;
2472848   +      end;
MPRINT(EM_DIAGRAM):   end;
2472849   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2472850   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2472851   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2472852   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2472853   +         end;
MPRINT(EM_DIAGRAM):   end;
2472854   +      end;
MPRINT(EM_DIAGRAM):   end;
2472855   +   end;
MPRINT(EM_DIAGRAM):   end;
2472856   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2472857   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2472858   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2472859   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2472860   +      end;
MPRINT(EM_DIAGRAM):   end;
2472861   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2472862   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2472863   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2472864   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2472865   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2472866   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2472867   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2472868   +         end;
MPRINT(EM_DIAGRAM):   end;
2472869   +      end;
MPRINT(EM_DIAGRAM):   end;
2472870   +   end;
MPRINT(EM_DIAGRAM):   end;
2472871   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2472872   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2472873   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2472874   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2472875   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2472876   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2472877   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2472878   +   end;
MPRINT(EM_DIAGRAM):   end;
2472879   +end;
MPRINT(EM_DIAGRAM):   end;
2472880   +
2472881   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2472882   +*** Checking missing input Interval
2472883   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2472884   +
2472885   +IF NMISS(
2472886   +   AcceptedCmpTotal ,
2472887   +   Age ,
2472888   +   Frq ,
2472889   +   Income ,
2472890   +   Kidhome ,
2472891   +   Mnt ,
2472892   +   MntFishProducts ,
2472893   +   MntFruits ,
2472894   +   MntGoldProds ,
2472895   +   MntMeatProducts ,
2472896   +   MntSweetProducts ,
2472897   +   MntWines ,
2472898   +   MonthsAsCustomer ,
2472899   +   NumCatalogPurchases ,
2472900   +   NumDealsPurchases ,
2472901   +   NumDistPurchases ,
2472902   +   NumStorePurchases ,
2472903   +   NumWebPurchases ,
2472904   +   NumWebVisitsMonth ,
2472905   +   RFMstat ,
2472906   +   RMntFrq ,
2472907   +   Recency ,
2472908   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
2472909   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2472910   +
2472911   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2472912   +END;
MPRINT(EM_DIAGRAM):   END;
2472913   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2472914   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2472915   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2472916   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2472917   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2472918   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2472919   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2472920   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2472921   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2472922   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2472923   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2472924   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2472925   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2472926   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2472927   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2472928   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2472929   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2472930   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2472931   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2472932   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2472933   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2472934   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2472935   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
2472936   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2472937   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2472938   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2472939   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2472940   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2472941   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2472942   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2472943   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2472944   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2472945   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2472946   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2472947   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2472948   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2472949   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2472950   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2472951   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2472952   +END;
MPRINT(EM_DIAGRAM):   END;
2472953   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2472954   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2472955   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2472956   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2472957   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2472958   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2472959   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2472960   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2472961   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2472962   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2472963   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2472964   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2472965   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2472966   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2472967   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2472968   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2472969   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2472970   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2472971   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2472972   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2472973   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2472974   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2472975   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
2472976   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2472977   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2472978   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2472979   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2472980   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2472981   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2472982   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2472983   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2472984   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2472985   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2472986   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
2472987   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2472988   +   ELSE S_NumCatalogPurchases
2472989   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2472990   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2472991   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2472992   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2472993   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2472994   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2472995   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2472996   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2472997   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2472998   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2472999   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2473000   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2473001   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2473002   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2473003   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2473004   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2473005   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2473006   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2473007   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2473008   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2473009   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2473010   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2473011   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2473012   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2473013   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2473014   +END;
MPRINT(EM_DIAGRAM):   END;
2473015   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2473016   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2473017   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2473018   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2473019   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2473020   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2473021   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2473022   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2473023   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2473024   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2473025   +   H1x1_1  =     0.08465472857554 * S_AcceptedCmpTotal
2473026   +          +     0.23104131534618 * S_Age  +     0.27646175976509 * S_Frq
2473027   +          +     0.45938840681203 * S_Income  +     0.09814900830666 *
2473028   +        S_Kidhome  +     0.23249430277518 * S_Mnt  +    -0.51905493105122 *
2473029   +        S_MntFishProducts  +    -0.07604226481078 * S_MntFruits
2473030   +          +     0.10100393832157 * S_MntGoldProds  +     1.56159221713858 *
2473031   +        S_MntMeatProducts  +     0.12166799382268 * S_MntSweetProducts
2473032   +          +    -0.63388816790524 * S_MntWines  +     0.00878303775585 *
2473033   +        S_MonthsAsCustomer  +     0.01990411233136 * S_NumCatalogPurchases
2473034   +          +     0.19770934886328 * S_NumDealsPurchases
2473035   +          +      0.0515215988111 * S_NumDistPurchases
2473036   +          +    -0.34569346346089 * S_NumStorePurchases
2473037   +          +    -0.27122293596124 * S_NumWebPurchases
2473038   +          +    -0.17061565609755 * S_NumWebVisitsMonth
2473039   +          +      0.1271178187502 * S_RFMstat  +     0.38306508975954 *
2473040   +        S_RMntFrq  +     0.05823588653853 * S_Recency
2473041   +          +    -0.03760117378617 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.08465472857554 * S_AcceptedCmpTotal + 0.23104131534618 *
S_Age + 0.27646175976509 * S_Frq + 0.45938840681203 * S_Income + 0.09814900830666 * S_Kidhome
+ 0.23249430277518 * S_Mnt + -0.51905493105122 * S_MntFishProducts + -0.07604226481078 *
S_MntFruits + 0.10100393832157 * S_MntGoldProds + 1.56159221713858 * S_MntMeatProducts +
0.12166799382268 * S_MntSweetProducts + -0.63388816790524 * S_MntWines + 0.00878303775585 *
S_MonthsAsCustomer + 0.01990411233136 * S_NumCatalogPurchases + 0.19770934886328 *
S_NumDealsPurchases + 0.0515215988111 * S_NumDistPurchases + -0.34569346346089 *
S_NumStorePurchases + -0.27122293596124 * S_NumWebPurchases + -0.17061565609755 *
S_NumWebVisitsMonth + 0.1271178187502 * S_RFMstat + 0.38306508975954 * S_RMntFrq +
0.05823588653853 * S_Recency + -0.03760117378617 * S_Teenhome ;
2473042   +   H1x1_2  =     0.16564144258189 * S_AcceptedCmpTotal
2473043   +          +    -0.18930338067433 * S_Age  +    -0.23013558761757 * S_Frq
2473044   +          +     -0.1347135122598 * S_Income  +     0.04776498811407 *
2473045   +        S_Kidhome  +    -0.14940302068852 * S_Mnt  +    -0.13108691405604 *
2473046   +        S_MntFishProducts  +    -0.02561341150704 * S_MntFruits
2473047   +          +    -0.02022222891948 * S_MntGoldProds  +     0.80867688993093 *
2473048   +        S_MntMeatProducts  +    -0.08374488783635 * S_MntSweetProducts
2473049   +          +     -0.6719369441832 * S_MntWines  +    -0.14760035685198 *
2473050   +        S_MonthsAsCustomer  +      0.4007376271331 * S_NumCatalogPurchases
2473051   +          +     0.54308887602031 * S_NumDealsPurchases
2473052   +          +    -0.22507315320192 * S_NumDistPurchases
2473053   +          +    -0.79861387328361 * S_NumStorePurchases
2473054   +          +    -0.45467494002747 * S_NumWebPurchases
2473055   +          +      0.2119048824613 * S_NumWebVisitsMonth
2473056   +          +     0.30167662748678 * S_RFMstat  +     0.10712110659027 *
2473057   +        S_RMntFrq  +    -0.03061918029089 * S_Recency
2473058   +          +    -0.06096313113607 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.16564144258189 * S_AcceptedCmpTotal + -0.18930338067433 *
S_Age + -0.23013558761757 * S_Frq + -0.1347135122598 * S_Income + 0.04776498811407 * S_Kidhome
+ -0.14940302068852 * S_Mnt + -0.13108691405604 * S_MntFishProducts + -0.02561341150704 *
S_MntFruits + -0.02022222891948 * S_MntGoldProds + 0.80867688993093 * S_MntMeatProducts +
-0.08374488783635 * S_MntSweetProducts + -0.6719369441832 * S_MntWines + -0.14760035685198 *
S_MonthsAsCustomer + 0.4007376271331 * S_NumCatalogPurchases + 0.54308887602031 *
S_NumDealsPurchases + -0.22507315320192 * S_NumDistPurchases + -0.79861387328361 *
S_NumStorePurchases + -0.45467494002747 * S_NumWebPurchases + 0.2119048824613 *
S_NumWebVisitsMonth + 0.30167662748678 * S_RFMstat + 0.10712110659027 * S_RMntFrq +
-0.03061918029089 * S_Recency + -0.06096313113607 * S_Teenhome ;
2473059   +   H1x1_3  =     0.02674875562898 * S_AcceptedCmpTotal
2473060   +          +    -0.19731891748843 * S_Age  +    -0.00753784701259 * S_Frq
2473061   +          +    -0.31764694608254 * S_Income  +     0.49525183733398 *
2473062   +        S_Kidhome  +     0.24623619243686 * S_Mnt  +     0.25904859702044 *
2473063   +        S_MntFishProducts  +     0.26153358982994 * S_MntFruits
2473064   +          +    -0.07223707213485 * S_MntGoldProds  +    -0.15192960471493 *
2473065   +        S_MntMeatProducts  +     0.08241128624385 * S_MntSweetProducts
2473066   +          +     0.62479763709054 * S_MntWines  +     0.03593742779349 *
2473067   +        S_MonthsAsCustomer  +     0.00825730323418 * S_NumCatalogPurchases
2473068   +          +     -0.0771083149302 * S_NumDealsPurchases
2473069   +          +     0.03403621221162 * S_NumDistPurchases
2473070   +          +     0.61303946422025 * S_NumStorePurchases
2473071   +          +     0.27126793634053 * S_NumWebPurchases
2473072   +          +     -0.9769688424222 * S_NumWebVisitsMonth
2473073   +          +     0.08832170040425 * S_RFMstat  +     0.13241491054212 *
2473074   +        S_RMntFrq  +     0.94872655811163 * S_Recency
2473075   +          +     0.22002222738147 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.02674875562898 * S_AcceptedCmpTotal + -0.19731891748843 *
S_Age + -0.00753784701259 * S_Frq + -0.31764694608254 * S_Income + 0.49525183733398 *
S_Kidhome + 0.24623619243686 * S_Mnt + 0.25904859702044 * S_MntFishProducts + 0.26153358982994
* S_MntFruits + -0.07223707213485 * S_MntGoldProds + -0.15192960471493 * S_MntMeatProducts +
0.08241128624385 * S_MntSweetProducts + 0.62479763709054 * S_MntWines + 0.03593742779349 *
S_MonthsAsCustomer + 0.00825730323418 * S_NumCatalogPurchases + -0.0771083149302 *
S_NumDealsPurchases + 0.03403621221162 * S_NumDistPurchases + 0.61303946422025 *
S_NumStorePurchases + 0.27126793634053 * S_NumWebPurchases + -0.9769688424222 *
S_NumWebVisitsMonth + 0.08832170040425 * S_RFMstat + 0.13241491054212 * S_RMntFrq +
0.94872655811163 * S_Recency + 0.22002222738147 * S_Teenhome ;
2473076   +   H1x1_4  =     0.46328587348713 * S_AcceptedCmpTotal
2473077   +          +      -0.306946385792 * S_Age  +    -0.24247964225191 * S_Frq
2473078   +          +    -0.42968609314513 * S_Income  +    -0.08934431746158 *
2473079   +        S_Kidhome  +     0.15972194979558 * S_Mnt  +    -0.22174909818279 *
2473080   +        S_MntFishProducts  +    -0.23755215058744 * S_MntFruits
2473081   +          +      -0.124789433808 * S_MntGoldProds  +     0.50040173514144 *
2473082   +        S_MntMeatProducts  +     0.02850063230459 * S_MntSweetProducts
2473083   +          +     0.13427582671876 * S_MntWines  +     0.25569886862761 *
2473084   +        S_MonthsAsCustomer  +     0.34004201732149 * S_NumCatalogPurchases
2473085   +          +     0.29894603062327 * S_NumDealsPurchases
2473086   +          +     0.07614620530875 * S_NumDistPurchases
2473087   +          +     0.15402335009896 * S_NumStorePurchases
2473088   +          +     0.10615749096863 * S_NumWebPurchases
2473089   +          +     0.41962286816879 * S_NumWebVisitsMonth
2473090   +          +     0.00203630873093 * S_RFMstat  +     0.04736976805951 *
2473091   +        S_RMntFrq  +    -0.84751074132422 * S_Recency
2473092   +          +      0.2189023557249 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.46328587348713 * S_AcceptedCmpTotal + -0.306946385792 * S_Age
+ -0.24247964225191 * S_Frq + -0.42968609314513 * S_Income + -0.08934431746158 * S_Kidhome +
0.15972194979558 * S_Mnt + -0.22174909818279 * S_MntFishProducts + -0.23755215058744 *
S_MntFruits + -0.124789433808 * S_MntGoldProds + 0.50040173514144 * S_MntMeatProducts +
0.02850063230459 * S_MntSweetProducts + 0.13427582671876 * S_MntWines + 0.25569886862761 *
S_MonthsAsCustomer + 0.34004201732149 * S_NumCatalogPurchases + 0.29894603062327 *
S_NumDealsPurchases + 0.07614620530875 * S_NumDistPurchases + 0.15402335009896 *
S_NumStorePurchases + 0.10615749096863 * S_NumWebPurchases + 0.41962286816879 *
S_NumWebVisitsMonth + 0.00203630873093 * S_RFMstat + 0.04736976805951 * S_RMntFrq +
-0.84751074132422 * S_Recency + 0.2189023557249 * S_Teenhome ;
2473093   +   H1x1_5  =    -0.32353341757368 * S_AcceptedCmpTotal
2473094   +          +     0.03233494925748 * S_Age  +    -0.21296093282526 * S_Frq
2473095   +          +    -0.33919081075007 * S_Income  +     0.08771362671573 *
2473096   +        S_Kidhome  +    -0.10797068838726 * S_Mnt  +    -0.19736358637985 *
2473097   +        S_MntFishProducts  +    -0.19679917231132 * S_MntFruits
2473098   +          +     0.07502386205588 * S_MntGoldProds  +    -0.50948750987247 *
2473099   +        S_MntMeatProducts  +     0.00413757018488 * S_MntSweetProducts
2473100   +          +      0.0788538305785 * S_MntWines  +    -0.02917052455021 *
2473101   +        S_MonthsAsCustomer  +    -0.53933514609821 * S_NumCatalogPurchases
2473102   +          +     0.14392502416642 * S_NumDealsPurchases
2473103   +          +    -0.10026304978633 * S_NumDistPurchases
2473104   +          +     -0.0588453022746 * S_NumStorePurchases
2473105   +          +     0.24799398610395 * S_NumWebPurchases
2473106   +          +    -0.52695548549717 * S_NumWebVisitsMonth
2473107   +          +     0.01855620452049 * S_RFMstat  +    -0.00189170766477 *
2473108   +        S_RMntFrq  +     0.51841177421912 * S_Recency
2473109   +          +     0.31491299720207 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.32353341757368 * S_AcceptedCmpTotal + 0.03233494925748 *
S_Age + -0.21296093282526 * S_Frq + -0.33919081075007 * S_Income + 0.08771362671573 *
S_Kidhome + -0.10797068838726 * S_Mnt + -0.19736358637985 * S_MntFishProducts +
-0.19679917231132 * S_MntFruits + 0.07502386205588 * S_MntGoldProds + -0.50948750987247 *
S_MntMeatProducts + 0.00413757018488 * S_MntSweetProducts + 0.0788538305785 * S_MntWines +
-0.02917052455021 * S_MonthsAsCustomer + -0.53933514609821 * S_NumCatalogPurchases +
0.14392502416642 * S_NumDealsPurchases + -0.10026304978633 * S_NumDistPurchases +
-0.0588453022746 * S_NumStorePurchases + 0.24799398610395 * S_NumWebPurchases +
-0.52695548549717 * S_NumWebVisitsMonth + 0.01855620452049 * S_RFMstat + -0.00189170766477 *
S_RMntFrq + 0.51841177421912 * S_Recency + 0.31491299720207 * S_Teenhome ;
2473110   +   H1x1_6  =     -0.2113594539647 * S_AcceptedCmpTotal
2473111   +          +     -0.1052829531896 * S_Age  +     0.30802959734964 * S_Frq
2473112   +          +    -0.03112570586685 * S_Income  +     0.19129661263247 *
2473113   +        S_Kidhome  +     0.00533736622639 * S_Mnt  +    -0.06112703732925 *
2473114   +        S_MntFishProducts  +    -0.15875686512247 * S_MntFruits
2473115   +          +    -0.08040179272112 * S_MntGoldProds  +    -0.14462087536907 *
2473116   +        S_MntMeatProducts  +     0.21353582706121 * S_MntSweetProducts
2473117   +          +    -0.30180630737612 * S_MntWines  +    -0.11825033043182 *
2473118   +        S_MonthsAsCustomer  +     -0.2917393256645 * S_NumCatalogPurchases
2473119   +          +     0.08149600854964 * S_NumDealsPurchases
2473120   +          +     0.16873541613513 * S_NumDistPurchases
2473121   +          +    -0.20437343413446 * S_NumStorePurchases
2473122   +          +     -0.1671107527288 * S_NumWebPurchases
2473123   +          +     0.03677043100993 * S_NumWebVisitsMonth
2473124   +          +      0.0240516540488 * S_RFMstat  +     0.06155030856383 *
2473125   +        S_RMntFrq  +    -0.28802122451372 * S_Recency
2473126   +          +     0.06998878697307 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -0.2113594539647 * S_AcceptedCmpTotal + -0.1052829531896 *
S_Age + 0.30802959734964 * S_Frq + -0.03112570586685 * S_Income + 0.19129661263247 * S_Kidhome
+ 0.00533736622639 * S_Mnt + -0.06112703732925 * S_MntFishProducts + -0.15875686512247 *
S_MntFruits + -0.08040179272112 * S_MntGoldProds + -0.14462087536907 * S_MntMeatProducts +
0.21353582706121 * S_MntSweetProducts + -0.30180630737612 * S_MntWines + -0.11825033043182 *
S_MonthsAsCustomer + -0.2917393256645 * S_NumCatalogPurchases + 0.08149600854964 *
S_NumDealsPurchases + 0.16873541613513 * S_NumDistPurchases + -0.20437343413446 *
S_NumStorePurchases + -0.1671107527288 * S_NumWebPurchases + 0.03677043100993 *
S_NumWebVisitsMonth + 0.0240516540488 * S_RFMstat + 0.06155030856383 * S_RMntFrq +
-0.28802122451372 * S_Recency + 0.06998878697307 * S_Teenhome ;
2473127   +   H1x1_1  = H1x1_1  +    -0.33641509021082 * AcceptedCmp10
2473128   +          +     0.03092292109435 * AcceptedCmp20  +    -0.23551187181907 *
2473129   +        AcceptedCmp30  +    -0.06694400005185 * AcceptedCmp40
2473130   +          +    -0.14203506237074 * AcceptedCmp50  +    -0.25866390496966 *
2473131   +        Complain0  +     0.19505921178308 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.33641509021082 * AcceptedCmp10 + 0.03092292109435 *
AcceptedCmp20 + -0.23551187181907 * AcceptedCmp30 + -0.06694400005185 * AcceptedCmp40 +
-0.14203506237074 * AcceptedCmp50 + -0.25866390496966 * Complain0 + 0.19505921178308 *
HigherEducationBinary0 ;
2473132   +   H1x1_2  = H1x1_2  +     0.09937599707203 * AcceptedCmp10
2473133   +          +     0.03831208573575 * AcceptedCmp20  +     0.39683693019758 *
2473134   +        AcceptedCmp30  +     0.37006277175295 * AcceptedCmp40
2473135   +          +     0.21293419476895 * AcceptedCmp50  +     0.15528568367473 *
2473136   +        Complain0  +    -0.30210013299822 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.09937599707203 * AcceptedCmp10 + 0.03831208573575 *
AcceptedCmp20 + 0.39683693019758 * AcceptedCmp30 + 0.37006277175295 * AcceptedCmp40 +
0.21293419476895 * AcceptedCmp50 + 0.15528568367473 * Complain0 + -0.30210013299822 *
HigherEducationBinary0 ;
2473137   +   H1x1_3  = H1x1_3  +     0.29891621770856 * AcceptedCmp10
2473138   +          +     0.64938384482014 * AcceptedCmp20  +     0.44997242602142 *
2473139   +        AcceptedCmp30  +       0.479093722666 * AcceptedCmp40
2473140   +          +     0.50957180373919 * AcceptedCmp50  +     0.27833535432461 *
2473141   +        Complain0  +    -0.20383534906723 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.29891621770856 * AcceptedCmp10 + 0.64938384482014 *
AcceptedCmp20 + 0.44997242602142 * AcceptedCmp30 + 0.479093722666 * AcceptedCmp40 +
0.50957180373919 * AcceptedCmp50 + 0.27833535432461 * Complain0 + -0.20383534906723 *
HigherEducationBinary0 ;
2473142   +   H1x1_4  = H1x1_4  +    -0.26872515586946 * AcceptedCmp10
2473143   +          +    -0.24299337381911 * AcceptedCmp20  +    -0.01147155911926 *
2473144   +        AcceptedCmp30  +     -0.3056041277894 * AcceptedCmp40
2473145   +          +    -0.05496409609003 * AcceptedCmp50  +     0.07858238173893 *
2473146   +        Complain0  +     0.05721550070076 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.26872515586946 * AcceptedCmp10 + -0.24299337381911
* AcceptedCmp20 + -0.01147155911926 * AcceptedCmp30 + -0.3056041277894 * AcceptedCmp40 +
-0.05496409609003 * AcceptedCmp50 + 0.07858238173893 * Complain0 + 0.05721550070076 *
HigherEducationBinary0 ;
2473147   +   H1x1_5  = H1x1_5  +    -0.14067626649899 * AcceptedCmp10
2473148   +          +    -0.30627802828357 * AcceptedCmp20  +     0.05057942365592 *
2473149   +        AcceptedCmp30  +    -0.10378506600459 * AcceptedCmp40
2473150   +          +     0.07479232390108 * AcceptedCmp50  +     0.07252750671496 *
2473151   +        Complain0  +     0.11114854035831 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.14067626649899 * AcceptedCmp10 + -0.30627802828357
* AcceptedCmp20 + 0.05057942365592 * AcceptedCmp30 + -0.10378506600459 * AcceptedCmp40 +
0.07479232390108 * AcceptedCmp50 + 0.07252750671496 * Complain0 + 0.11114854035831 *
HigherEducationBinary0 ;
2473152   +   H1x1_6  = H1x1_6  +    -0.25806332334976 * AcceptedCmp10
2473153   +          +     0.03944021903138 * AcceptedCmp20  +    -0.08792206887119 *
2473154   +        AcceptedCmp30  +    -0.24631282865199 * AcceptedCmp40
2473155   +          +    -0.06123991538969 * AcceptedCmp50  +    -0.03114784375357 *
2473156   +        Complain0  +    -0.25204544481193 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + -0.25806332334976 * AcceptedCmp10 + 0.03944021903138 *
AcceptedCmp20 + -0.08792206887119 * AcceptedCmp30 + -0.24631282865199 * AcceptedCmp40 +
-0.06123991538969 * AcceptedCmp50 + -0.03114784375357 * Complain0 + -0.25204544481193 *
HigherEducationBinary0 ;
2473157   +   H1x1_1  = H1x1_1  +      0.2972170984261 * Education2n_Cycle
2473158   +          +     0.01651368568996 * EducationBasic  +     -0.1186055936649 *
2473159   +        EducationGraduation  +      0.0228208538951 * EducationMaster
2473160   +          +    -0.31045295887604 * Marital_StatusDivorced
2473161   +          +    -0.01109401001539 * Marital_StatusMarried
2473162   +          +     0.01325135981025 * Marital_StatusSingle
2473163   +          +     0.16609357475978 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.2972170984261 * Education2n_Cycle + 0.01651368568996
* EducationBasic + -0.1186055936649 * EducationGraduation + 0.0228208538951 * EducationMaster
+ -0.31045295887604 * Marital_StatusDivorced + -0.01109401001539 * Marital_StatusMarried +
0.01325135981025 * Marital_StatusSingle + 0.16609357475978 * Marital_StatusTogether ;
2473164   +   H1x1_2  = H1x1_2  +    -0.07095220065018 * Education2n_Cycle
2473165   +          +    -0.23491732567608 * EducationBasic  +     0.20187086452315 *
2473166   +        EducationGraduation  +     0.07524128723108 * EducationMaster
2473167   +          +     0.02275101861599 * Marital_StatusDivorced
2473168   +          +     0.20271548664903 * Marital_StatusMarried
2473169   +          +    -0.12132069210718 * Marital_StatusSingle
2473170   +          +     0.00085090729385 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.07095220065018 * Education2n_Cycle +
-0.23491732567608 * EducationBasic + 0.20187086452315 * EducationGraduation + 0.07524128723108
* EducationMaster + 0.02275101861599 * Marital_StatusDivorced + 0.20271548664903 *
Marital_StatusMarried + -0.12132069210718 * Marital_StatusSingle + 0.00085090729385 *
Marital_StatusTogether ;
2473171   +   H1x1_3  = H1x1_3  +    -0.02268297689573 * Education2n_Cycle
2473172   +          +     0.06359770535369 * EducationBasic  +     -0.1194001280088 *
2473173   +        EducationGraduation  +     0.17299848976308 * EducationMaster
2473174   +          +     -0.4992959703281 * Marital_StatusDivorced
2473175   +          +     0.62071659624138 * Marital_StatusMarried
2473176   +          +    -0.21776202274494 * Marital_StatusSingle
2473177   +          +     0.54712874598141 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.02268297689573 * Education2n_Cycle +
0.06359770535369 * EducationBasic + -0.1194001280088 * EducationGraduation + 0.17299848976308
* EducationMaster + -0.4992959703281 * Marital_StatusDivorced + 0.62071659624138 *
Marital_StatusMarried + -0.21776202274494 * Marital_StatusSingle + 0.54712874598141 *
Marital_StatusTogether ;
2473178   +   H1x1_4  = H1x1_4  +    -0.17773353520266 * Education2n_Cycle
2473179   +          +     0.17998728120628 * EducationBasic  +    -0.00324602612825 *
2473180   +        EducationGraduation  +    -0.22448876765089 * EducationMaster
2473181   +          +     0.05626212670587 * Marital_StatusDivorced
2473182   +          +     0.14353891364597 * Marital_StatusMarried
2473183   +          +    -0.29006765622997 * Marital_StatusSingle
2473184   +          +     0.05503638282535 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.17773353520266 * Education2n_Cycle +
0.17998728120628 * EducationBasic + -0.00324602612825 * EducationGraduation +
-0.22448876765089 * EducationMaster + 0.05626212670587 * Marital_StatusDivorced +
0.14353891364597 * Marital_StatusMarried + -0.29006765622997 * Marital_StatusSingle +
0.05503638282535 * Marital_StatusTogether ;
2473185   +   H1x1_5  = H1x1_5  +     0.06634316870499 * Education2n_Cycle
2473186   +          +    -0.36153880127411 * EducationBasic  +     0.23023144658635 *
2473187   +        EducationGraduation  +    -0.06568730318683 * EducationMaster
2473188   +          +    -0.21206913700604 * Marital_StatusDivorced
2473189   +          +     0.58790643614629 * Marital_StatusMarried
2473190   +          +    -0.65995982578062 * Marital_StatusSingle
2473191   +          +     0.49642503732428 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 0.06634316870499 * Education2n_Cycle +
-0.36153880127411 * EducationBasic + 0.23023144658635 * EducationGraduation +
-0.06568730318683 * EducationMaster + -0.21206913700604 * Marital_StatusDivorced +
0.58790643614629 * Marital_StatusMarried + -0.65995982578062 * Marital_StatusSingle +
0.49642503732428 * Marital_StatusTogether ;
2473192   +   H1x1_6  = H1x1_6  +     0.16504024096118 * Education2n_Cycle
2473193   +          +     0.11925867171875 * EducationBasic  +    -0.04213907014732 *
2473194   +        EducationGraduation  +    -0.21389968555475 * EducationMaster
2473195   +          +    -0.05047370516008 * Marital_StatusDivorced
2473196   +          +    -0.23139090963669 * Marital_StatusMarried
2473197   +          +     0.04816197463249 * Marital_StatusSingle
2473198   +          +     0.04977890114896 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + 0.16504024096118 * Education2n_Cycle +
0.11925867171875 * EducationBasic + -0.04213907014732 * EducationGraduation +
-0.21389968555475 * EducationMaster + -0.05047370516008 * Marital_StatusDivorced +
-0.23139090963669 * Marital_StatusMarried + 0.04816197463249 * Marital_StatusSingle +
0.04977890114896 * Marital_StatusTogether ;
2473199   +   H1x1_1  =    -1.90576647346127 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.90576647346127 + H1x1_1 ;
2473200   +   H1x1_2  =     0.32295787429294 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.32295787429294 + H1x1_2 ;
2473201   +   H1x1_3  =     0.75117643107919 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.75117643107919 + H1x1_3 ;
2473202   +   H1x1_4  =      1.2336762751587 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.2336762751587 + H1x1_4 ;
2473203   +   H1x1_5  =    -0.97062317465491 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.97062317465491 + H1x1_5 ;
2473204   +   H1x1_6  =    -1.15756803634408 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -1.15756803634408 + H1x1_6 ;
2473205   +   _EPS = SQRT(CONSTANT('MACEPS')) ;
MPRINT(EM_DIAGRAM):   _EPS = SQRT(CONSTANT('MACEPS')) ;
2473206   +   _REC_EPS = 1/_EPS ;
MPRINT(EM_DIAGRAM):   _REC_EPS = 1/_EPS ;
2473207   +   DROP _REC_EPS _EPS ;
MPRINT(EM_DIAGRAM):   DROP _REC_EPS _EPS ;
2473208   +   IF H1x1_1  < _REC_EPS AND H1x1_1  > - _REC_EPS THEN
2473209   +   H1x1_1  = H1x1_1  * H1x1_1 ;
MPRINT(EM_DIAGRAM):   IF H1x1_1 < _REC_EPS AND H1x1_1 > - _REC_EPS THEN H1x1_1 = H1x1_1 *
H1x1_1 ;
2473210   +   ELSE H1x1_1  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_1 = _REC_EPS ;
2473211   +   IF H1x1_2  < _REC_EPS AND H1x1_2  > - _REC_EPS THEN
2473212   +   H1x1_2  = H1x1_2  * H1x1_2 ;
MPRINT(EM_DIAGRAM):   IF H1x1_2 < _REC_EPS AND H1x1_2 > - _REC_EPS THEN H1x1_2 = H1x1_2 *
H1x1_2 ;
2473213   +   ELSE H1x1_2  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_2 = _REC_EPS ;
2473214   +   IF H1x1_3  < _REC_EPS AND H1x1_3  > - _REC_EPS THEN
2473215   +   H1x1_3  = H1x1_3  * H1x1_3 ;
MPRINT(EM_DIAGRAM):   IF H1x1_3 < _REC_EPS AND H1x1_3 > - _REC_EPS THEN H1x1_3 = H1x1_3 *
H1x1_3 ;
2473216   +   ELSE H1x1_3  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_3 = _REC_EPS ;
2473217   +   IF H1x1_4  < _REC_EPS AND H1x1_4  > - _REC_EPS THEN
2473218   +   H1x1_4  = H1x1_4  * H1x1_4 ;
MPRINT(EM_DIAGRAM):   IF H1x1_4 < _REC_EPS AND H1x1_4 > - _REC_EPS THEN H1x1_4 = H1x1_4 *
H1x1_4 ;
2473219   +   ELSE H1x1_4  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_4 = _REC_EPS ;
2473220   +   IF H1x1_5  < _REC_EPS AND H1x1_5  > - _REC_EPS THEN
2473221   +   H1x1_5  = H1x1_5  * H1x1_5 ;
MPRINT(EM_DIAGRAM):   IF H1x1_5 < _REC_EPS AND H1x1_5 > - _REC_EPS THEN H1x1_5 = H1x1_5 *
H1x1_5 ;
2473222   +   ELSE H1x1_5  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_5 = _REC_EPS ;
2473223   +   IF H1x1_6  < _REC_EPS AND H1x1_6  > - _REC_EPS THEN
2473224   +   H1x1_6  = H1x1_6  * H1x1_6 ;
MPRINT(EM_DIAGRAM):   IF H1x1_6 < _REC_EPS AND H1x1_6 > - _REC_EPS THEN H1x1_6 = H1x1_6 *
H1x1_6 ;
2473225   +   ELSE H1x1_6  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_6 = _REC_EPS ;
2473226   +END;
MPRINT(EM_DIAGRAM):   END;
2473227   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2473228   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2473229   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2473230   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2473231   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2473232   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
2473233   +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
2473234   +END;
MPRINT(EM_DIAGRAM):   END;
2473235   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2473236   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2473237   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2473238   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2473239   +   P_DepVar1  =    -0.99830813428318 * H1x1_1  +     1.33495006526712 * H1x1_2
2473240   +          +    -1.37942150026657 * H1x1_3  +     1.22714974922576 * H1x1_4
2473241   +          +     1.73375794385595 * H1x1_5  +     -0.0100306049679 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.99830813428318 * H1x1_1 + 1.33495006526712 * H1x1_2 +
-1.37942150026657 * H1x1_3 + 1.22714974922576 * H1x1_4 + 1.73375794385595 * H1x1_5 +
-0.0100306049679 * H1x1_6 ;
2473242   +   P_DepVar1  =    -1.90393999986167 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.90393999986167 + P_DepVar1 ;
2473243   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2473244   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2473245   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2473246   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2473247   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2473248   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2473249   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2473250   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2473251   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2473252   +END;
MPRINT(EM_DIAGRAM):   END;
2473253   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2473254   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2473255   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2473256   +END;
MPRINT(EM_DIAGRAM):   END;
2473257   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2473258   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2473259   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2473260   +END;
MPRINT(EM_DIAGRAM):   END;
2473261   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2473262   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2473263   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2473264   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2473265   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2473266   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2473267   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2473268   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2473269   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2473270   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2473271   +END;
MPRINT(EM_DIAGRAM):   END;
2473272   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2473273   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2473274   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2473275   +drop
2473276   +H1x1_1
2473277   +H1x1_2
2473278   +H1x1_3
2473279   +H1x1_4
2473280   +H1x1_5
2473281   +H1x1_6
2473282   +;
MPRINT(EM_DIAGRAM):   drop H1x1_1 H1x1_2 H1x1_3 H1x1_4 H1x1_5 H1x1_6 ;
2473283   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2473284    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2473285    quit;
2473286    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2473287    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2473288    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2473289    retain ID 2 Node "AutoNeural11";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural11";
2473290    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2473291    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2995 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2995 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2473292    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2473293    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2473294    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2995 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2995 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2473295    proc sort data=EMWS8.AutoNeural11_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural11_variableset out=_temp2(keep=NAME
CREATOR);
2473296    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2473297    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL11_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2473298    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2473299    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2473300    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2473301    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2473302    proc contents data=EMWS8.AutoNeural11_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural11_train out=_meta(keep=NAME) noprint;
2473303    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
2473304    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2473305    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2473306    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2473307    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2473308    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2473309    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2473310    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2473311    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2473312    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2473312  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1655 rows and 5 columns.
 
2473313    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2473314    proc append base=EMWS8.Ensmbl46_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl46_FCMP data=_tempx;
2473315    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL46_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1655 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL46_FCMP has 1655 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2473316    filename _pref
2473316  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
2473317    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2473318    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
2473319   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2473320   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
2473321   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2473322   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
2473323   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
2473324   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2473325    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2473326    quit;
2473327    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2473328    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2473329    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2473330    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
2473331    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2473332    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2473333    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2473334    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2473335    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2473336    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
2473337    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2473338    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2473339    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2473340    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2473341    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2473342    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2473343    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
2473344    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
2473345    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2473346    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2473347    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2473348    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2473349    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2473350    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2473351    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2473352    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2473353    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2473353  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
2473354    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2473355    proc append base=EMWS8.Ensmbl46_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl46_FCMP data=_tempx;
2473356    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL46_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL46_FCMP has 1659 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2473357    filename _pref
2473357  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
2473358    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2473359    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
2473360   +
2473361   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
2473362   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
2473362  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
2473363   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
2473364   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
2473365   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
2473366   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
2473367   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2473368    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2473369    quit;
2473370    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2473371    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2473372    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2473373    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
2473374    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2473375    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2473376    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2473377    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2473378    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2473379    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
2473380    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2473381    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2473382    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2473383    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2473384    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2473385    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2473386    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
2473387    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2473388    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2473389    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2473390    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2473391    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2473392    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2473393    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2473394    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2473395    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2473396    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2473396  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
2473397    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2473398    proc append base=EMWS8.Ensmbl46_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl46_FCMP data=_tempx;
2473399    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL46_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL46_FCMP has 1698 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2473400    filename _pref
2473400  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
2473401    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2473402    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
2473403   +
2473404   +
2473405   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
2473406   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
2473407   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
2473408   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
2473409   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
2473410   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2473411   +
2473412   +
2473413   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
2473414   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
2473415   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
2473416   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
2473417   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
2473418   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2473419   +
2473420   +
2473421   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
2473422   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
2473423   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
2473424   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
2473425   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
2473426   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2473427   +
2473428   +
2473429   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
2473430   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
2473431   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
2473432   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
2473433   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
2473434   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2473435   +
2473436   +
2473437   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
2473438   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
2473439   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
2473440   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
2473441   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
2473442   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2473443   +
2473444   +
2473445   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
2473446   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
2473447   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
2473448   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
2473449   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
2473450   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2473451   +
2473452   +
2473453   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
2473454   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
2473455   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
2473456   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
2473457   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
2473458   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2473459   +
2473460   +
2473461   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
2473462   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
2473463   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
2473464   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
2473465   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
2473466   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2473467   +if
2473468   +_FILTERNORM1 not in ( '.')
2473469   + and
2473470   +_FILTERNORM2 not in ( '.')
2473471   + and
2473472   +_FILTERNORM3 not in ( '.')
2473473   + and
2473474   +_FILTERNORM4 not in ( '.')
2473475   + and
2473476   +_FILTERNORM5 not in ( '.')
2473477   + and
2473478   +_FILTERNORM6 not in ( '.')
2473479   + and
2473480   +_FILTERNORM7 not in ( ' ')
2473481   + and
2473482   +_FILTERNORM8 not in ( ' ')
2473483   +and
2473484   +( Dt_Customer ne .)
2473485   +and ( Income ne . and (Income<=107000))
2473486   +and ( Kidhome ne .)
2473487   +and ( MntFishProducts ne .)
2473488   +and ( MntFruits ne .)
2473489   +and ( MntGoldProds ne .)
2473490   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
2473491   +and ( MntSweetProducts ne .)
2473492   +and ( MntWines ne .)
2473493   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
2473494   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
2473495   +and ( NumStorePurchases ne .)
2473496   +and ( NumWebPurchases ne .)
2473497   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
2473498   +and ( Recency ne .)
2473499   +and ( Teenhome ne .)
2473500   +and ( Year_Birth ne .)
2473501   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
2473502   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
2473503   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
2473504   +end;
MPRINT(EM_DIAGRAM):   end;
2473505   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
2473506   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2473507    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2473508    quit;
2473509    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2473510    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2473511    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2473512    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
2473513    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2473514    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2473515    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2473516    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2473517    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2473518    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
2473519    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2473520    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2473521    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2473522    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2473523    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2473524    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2473525    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
2473526    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
2473527    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2473528    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2473529    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2473530    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2473531    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2473532    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2473533    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2473534    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2473535    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2473535  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
2473536    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2473537    proc append base=EMWS8.Ensmbl46_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl46_FCMP data=_tempx;
2473538    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL46_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL46_FCMP has 1764 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2473539    %macro varDept(fcmpdata=,id=);
2473540    %global nobs&id scoreFlag&id;
2473541    %let scoreFlag&id = 0;
2473542    %if &id=1 or ^&fcmpStart %then %do;
2473543    proc sort data=&fcmpdata out=_temp&id nodupkey;
2473544    by NAME;
2473545    where id=&id and LHS in( %let j=1;
2473546    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
2473547    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
2473548    "&var" %let j = %eval(&j+1);
2473549    %end;
2473550    );
2473551    run;
2473552    %let dsid = %sysfunc(open(_temp&id));
2473553    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2473554    %let dsid = %sysfunc(close(&dsid));
2473555    %if &&nobs&id %then %do;
2473556    %let scoreFlag&id = 1;
2473557    %let fcmpStart = 1;
2473558    %end;
2473559    %else %let fcmpStart = 0;
2473560    %end;
2473561    %else %do;
2473562    proc sort data=&fcmpdata out=_tempid;
2473563    where id=&id;
2473564    by LHS;
2473565    run;
2473566    %let dsid = %sysfunc(open(_tempid));
2473567    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2473568    %let dsid = %sysfunc(close(&dsid));
2473569    %if ^&&nobs&id %then %do;
2473570    proc datasets lib=work nolist;
2473571    delete _tempid;
2473572    run;
2473573    quit;
2473574    %end;
2473575    %else %do;
2473576    data _tempAll;
2473577    set %let j=%eval(&id-1);
2473578    %do x=1 %to &j;
2473579    %if &&nobs&x %then %do;
2473580    _temp&x %end;
2473581    %end;
2473582    ;
2473583    run;
2473584    proc sql;
2473585    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
2473585  ! work._tempid p2 where p.name=p2.lhs;
2473586    quit;
2473587    data _temp&id;
2473588    set _temp&id;
2473589    where LHS ne '' and NAME ne '' and Node ne '';
2473590    run;
2473591    proc datasets lib=work nolist;
2473592    delete _tempAll;
2473593    run;
2473594    %let dsid = %sysfunc(open(_temp&id));
2473595    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2473596    %let dsid = %sysfunc(close(&dsid));
2473597    %if ^&&nobs&id %then %do;
2473598    proc datasets lib=work nolist;
2473599    delete _temp&id;
2473600    run;
2473601    quit;
2473602    %end;
2473603    %else %do;
2473604    %let scoreFlag&id = 1;
2473605    data _temp&id;
2473606    set _temp&id;
2473607    where LHS ne NAME and node ne '';
2473608    run;
2473609    %let dsid = %sysfunc(open(_temp&id));
2473610    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2473611    %let dsid = %sysfunc(close(&dsid));
2473612    %if ^&&nobs&id %then %do;
2473613    proc datasets lib=work nolist;
2473614    delete _temp&id;
2473615    run;
2473616    quit;
2473617    %end;
2473618    %else %do;
2473619    proc sort data=_temp&id nodupkey;
2473620    by LHS NAME;
2473621    run;
2473622    %end;
2473623    %end;
2473624    %end;
2473625    %end;
2473626    %mend varDept;
2473627    %macro optCode(outdata=fcmpdata);
2473628    %global fcmpStart;
2473629    %let fcmpStart = 0;
2473630    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
2473631    %let NumNodes=9;
2473632    %do k=1 %to &NumNodes;
2473633    %vardept(fcmpdata=&outdata, id=&k);
2473634    %end;
2473635    %mend optCode;
2473636    %optcode(outData=EMWS8.Ensmbl46_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl46_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL46_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl46_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 134 observations read from the data set EMWS8.ENSMBL46_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 100 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 34 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl46_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL46_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl46_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL46_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl46_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL46_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 34 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl46_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL46_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 38 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl46_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL46_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 77 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl46_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL46_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl46_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL46_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
2473637    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
2473638    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
2473639    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
2473640    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2473641    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
2473642    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
2473643    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
2473644    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2473645    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2473646    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
2473646  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.
 
2473647    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2473648    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
2473649    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
2473650    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2473651    filename _pref
2473651  ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural12\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural12\EMPUBLISHSCORE.sas";
2473652    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2473653    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural12\EMPUBLISHSCORE.sas.
2473654   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2473655   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2473656   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2473657   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2473658   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2473659   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2473660   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2473661   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2473662   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2473663   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2473664   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2473665   +LENGTH _WARN_ $4
2473666   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
2473667   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2473668   +
2473669   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2473670   +
2473671   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2473672   +
2473673   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2473674   +
2473675   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2473676   +
2473677   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2473678   +
2473679   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2473680   +
2473681   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2473682   +
2473683   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2473684   +
2473685   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2473686   +
2473687   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2473688   +
2473689   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2473690   +
2473691   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2473692   +
2473693   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2473694   +
2473695   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2473696   +
2473697   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2473698   +
2473699   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2473700   +
2473701   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2473702   +
2473703   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2473704   +
2473705   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2473706   +
2473707   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2473708   +
2473709   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2473710   +
2473711   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2473712   +
2473713   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2473714   +
2473715   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2473716   +
2473717   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2473718   +
2473719   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2473720   +
2473721   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2473722   +
2473723   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2473724   +
2473725   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2473726   +
2473727   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2473728   +
2473729   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2473730   +
2473731   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2473732   +
2473733   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2473734   +
2473735   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2473736   +
2473737   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2473738   +
2473739   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2473740   +
2473741   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2473742   +
2473743   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2473744   +
2473745   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2473746   +
2473747   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2473748   +
2473749   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2473750   +
2473751   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
2473752   +
2473753   +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
2473754   +
2473755   +      label H1x1_7 = 'Hidden: H1x1_=7' ;
MPRINT(EM_DIAGRAM):   label H1x1_7 = 'Hidden: H1x1_=7' ;
2473756   +
2473757   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
2473758   +
2473759   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
2473760   +
2473761   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
2473762   +
2473763   +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
2473764   +
2473765   +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
2473766   +
2473767   +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
2473768   +
2473769   +      label H1x2_7 = 'Hidden: H1x2_=7' ;
MPRINT(EM_DIAGRAM):   label H1x2_7 = 'Hidden: H1x2_=7' ;
2473770   +
2473771   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2473772   +
2473773   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2473774   +
2473775   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2473776   +
2473777   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2473778   +
2473779   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2473780   +
2473781   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2473782   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2473783   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2473784   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2473785   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2473786   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2473787   +end;
MPRINT(EM_DIAGRAM):   end;
2473788   +else do;
MPRINT(EM_DIAGRAM):   else do;
2473789   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2473790   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2473791   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2473792   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2473793   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2473794   +   end;
MPRINT(EM_DIAGRAM):   end;
2473795   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2473796   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2473797   +   end;
MPRINT(EM_DIAGRAM):   end;
2473798   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2473799   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2473800   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2473801   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2473802   +   end;
MPRINT(EM_DIAGRAM):   end;
2473803   +end;
MPRINT(EM_DIAGRAM):   end;
2473804   +
2473805   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2473806   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2473807   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2473808   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2473809   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2473810   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2473811   +end;
MPRINT(EM_DIAGRAM):   end;
2473812   +else do;
MPRINT(EM_DIAGRAM):   else do;
2473813   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2473814   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2473815   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2473816   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2473817   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2473818   +   end;
MPRINT(EM_DIAGRAM):   end;
2473819   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2473820   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2473821   +   end;
MPRINT(EM_DIAGRAM):   end;
2473822   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2473823   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2473824   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2473825   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2473826   +   end;
MPRINT(EM_DIAGRAM):   end;
2473827   +end;
MPRINT(EM_DIAGRAM):   end;
2473828   +
2473829   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2473830   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2473831   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2473832   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2473833   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2473834   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2473835   +end;
MPRINT(EM_DIAGRAM):   end;
2473836   +else do;
MPRINT(EM_DIAGRAM):   else do;
2473837   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2473838   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2473839   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2473840   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2473841   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2473842   +   end;
MPRINT(EM_DIAGRAM):   end;
2473843   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2473844   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2473845   +   end;
MPRINT(EM_DIAGRAM):   end;
2473846   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2473847   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2473848   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2473849   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2473850   +   end;
MPRINT(EM_DIAGRAM):   end;
2473851   +end;
MPRINT(EM_DIAGRAM):   end;
2473852   +
2473853   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2473854   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2473855   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2473856   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2473857   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2473858   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2473859   +end;
MPRINT(EM_DIAGRAM):   end;
2473860   +else do;
MPRINT(EM_DIAGRAM):   else do;
2473861   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2473862   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2473863   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2473864   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2473865   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2473866   +   end;
MPRINT(EM_DIAGRAM):   end;
2473867   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2473868   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2473869   +   end;
MPRINT(EM_DIAGRAM):   end;
2473870   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2473871   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2473872   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2473873   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2473874   +   end;
MPRINT(EM_DIAGRAM):   end;
2473875   +end;
MPRINT(EM_DIAGRAM):   end;
2473876   +
2473877   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2473878   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2473879   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2473880   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2473881   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2473882   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2473883   +end;
MPRINT(EM_DIAGRAM):   end;
2473884   +else do;
MPRINT(EM_DIAGRAM):   else do;
2473885   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2473886   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2473887   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2473888   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2473889   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2473890   +   end;
MPRINT(EM_DIAGRAM):   end;
2473891   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2473892   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2473893   +   end;
MPRINT(EM_DIAGRAM):   end;
2473894   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2473895   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2473896   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2473897   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2473898   +   end;
MPRINT(EM_DIAGRAM):   end;
2473899   +end;
MPRINT(EM_DIAGRAM):   end;
2473900   +
2473901   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2473902   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2473903   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2473904   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2473905   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2473906   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2473907   +end;
MPRINT(EM_DIAGRAM):   end;
2473908   +else do;
MPRINT(EM_DIAGRAM):   else do;
2473909   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2473910   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2473911   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2473912   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2473913   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2473914   +   end;
MPRINT(EM_DIAGRAM):   end;
2473915   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2473916   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2473917   +   end;
MPRINT(EM_DIAGRAM):   end;
2473918   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2473919   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2473920   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2473921   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2473922   +   end;
MPRINT(EM_DIAGRAM):   end;
2473923   +end;
MPRINT(EM_DIAGRAM):   end;
2473924   +
2473925   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2473926   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2473927   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2473928   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2473929   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2473930   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2473931   +end;
MPRINT(EM_DIAGRAM):   end;
2473932   +else do;
MPRINT(EM_DIAGRAM):   else do;
2473933   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2473934   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2473935   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2473936   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2473937   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2473938   +   end;
MPRINT(EM_DIAGRAM):   end;
2473939   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2473940   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2473941   +   end;
MPRINT(EM_DIAGRAM):   end;
2473942   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2473943   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2473944   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2473945   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2473946   +   end;
MPRINT(EM_DIAGRAM):   end;
2473947   +end;
MPRINT(EM_DIAGRAM):   end;
2473948   +
2473949   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2473950   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
2473951   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2473952   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2473953   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2473954   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2473955   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2473956   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2473957   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2473958   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2473959   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2473960   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2473961   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2473962   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2473963   +end;
MPRINT(EM_DIAGRAM):   end;
2473964   +else do;
MPRINT(EM_DIAGRAM):   else do;
2473965   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2473966   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2473967   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2473968   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2473969   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2473970   +   end;
MPRINT(EM_DIAGRAM):   end;
2473971   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2473972   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2473973   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2473974   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2473975   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2473976   +   end;
MPRINT(EM_DIAGRAM):   end;
2473977   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2473978   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2473979   +   end;
MPRINT(EM_DIAGRAM):   end;
2473980   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2473981   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2473982   +   end;
MPRINT(EM_DIAGRAM):   end;
2473983   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2473984   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2473985   +   end;
MPRINT(EM_DIAGRAM):   end;
2473986   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2473987   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2473988   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2473989   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2473990   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2473991   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2473992   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2473993   +   end;
MPRINT(EM_DIAGRAM):   end;
2473994   +end;
MPRINT(EM_DIAGRAM):   end;
2473995   +
2473996   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2473997   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2473998   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
2473999   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2474000   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2474001   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2474002   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2474003   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2474004   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2474005   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2474006   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2474007   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2474008   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2474009   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2474010   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2474011   +end;
MPRINT(EM_DIAGRAM):   end;
2474012   +else do;
MPRINT(EM_DIAGRAM):   else do;
2474013   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2474014   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2474015   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2474016   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2474017   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2474018   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2474019   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2474020   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2474021   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2474022   +         end;
MPRINT(EM_DIAGRAM):   end;
2474023   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2474024   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2474025   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2474026   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2474027   +            end;
MPRINT(EM_DIAGRAM):   end;
2474028   +         end;
MPRINT(EM_DIAGRAM):   end;
2474029   +      end;
MPRINT(EM_DIAGRAM):   end;
2474030   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2474031   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2474032   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2474033   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2474034   +         end;
MPRINT(EM_DIAGRAM):   end;
2474035   +      end;
MPRINT(EM_DIAGRAM):   end;
2474036   +   end;
MPRINT(EM_DIAGRAM):   end;
2474037   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2474038   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2474039   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2474040   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2474041   +      end;
MPRINT(EM_DIAGRAM):   end;
2474042   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2474043   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2474044   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2474045   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2474046   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2474047   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2474048   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2474049   +         end;
MPRINT(EM_DIAGRAM):   end;
2474050   +      end;
MPRINT(EM_DIAGRAM):   end;
2474051   +   end;
MPRINT(EM_DIAGRAM):   end;
2474052   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2474053   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2474054   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2474055   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2474056   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2474057   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2474058   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2474059   +   end;
MPRINT(EM_DIAGRAM):   end;
2474060   +end;
MPRINT(EM_DIAGRAM):   end;
2474061   +
2474062   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2474063   +*** Checking missing input Interval
2474064   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2474065   +
2474066   +IF NMISS(
2474067   +   AcceptedCmpTotal ,
2474068   +   Age ,
2474069   +   Frq ,
2474070   +   Income ,
2474071   +   Kidhome ,
2474072   +   Mnt ,
2474073   +   MntFishProducts ,
2474074   +   MntFruits ,
2474075   +   MntGoldProds ,
2474076   +   MntMeatProducts ,
2474077   +   MntSweetProducts ,
2474078   +   MntWines ,
2474079   +   MonthsAsCustomer ,
2474080   +   NumCatalogPurchases ,
2474081   +   NumDealsPurchases ,
2474082   +   NumDistPurchases ,
2474083   +   NumStorePurchases ,
2474084   +   NumWebPurchases ,
2474085   +   NumWebVisitsMonth ,
2474086   +   RFMstat ,
2474087   +   RMntFrq ,
2474088   +   Recency ,
2474089   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
2474090   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2474091   +
2474092   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2474093   +END;
MPRINT(EM_DIAGRAM):   END;
2474094   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2474095   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2474096   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2474097   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2474098   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2474099   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2474100   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2474101   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2474102   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2474103   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2474104   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2474105   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2474106   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2474107   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2474108   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2474109   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2474110   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2474111   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2474112   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2474113   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2474114   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2474115   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2474116   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
2474117   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2474118   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2474119   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2474120   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2474121   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2474122   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2474123   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2474124   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2474125   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2474126   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2474127   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2474128   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2474129   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2474130   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2474131   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2474132   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2474133   +END;
MPRINT(EM_DIAGRAM):   END;
2474134   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2474135   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2474136   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2474137   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2474138   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2474139   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2474140   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2474141   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2474142   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2474143   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2474144   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2474145   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2474146   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2474147   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2474148   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2474149   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2474150   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2474151   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2474152   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2474153   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2474154   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2474155   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2474156   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
2474157   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2474158   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2474159   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2474160   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2474161   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2474162   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2474163   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2474164   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2474165   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2474166   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2474167   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
2474168   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2474169   +   ELSE S_NumCatalogPurchases
2474170   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2474171   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2474172   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2474173   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2474174   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2474175   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2474176   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2474177   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2474178   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2474179   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2474180   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2474181   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2474182   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2474183   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2474184   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2474185   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2474186   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2474187   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2474188   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2474189   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2474190   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2474191   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2474192   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2474193   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2474194   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2474195   +END;
MPRINT(EM_DIAGRAM):   END;
2474196   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2474197   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2474198   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2474199   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2474200   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2474201   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2474202   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2474203   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2474204   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2474205   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2474206   +   H1x1_1  =    -0.08478534961354 * S_AcceptedCmpTotal
2474207   +          +     0.21528166003219 * S_Age  +    -0.16079737422774 * S_Frq
2474208   +          +     0.04922044955183 * S_Income  +     0.06245849112135 *
2474209   +        S_Kidhome  +    -0.12820970008154 * S_Mnt  +    -0.00676959308959 *
2474210   +        S_MntFishProducts  +    -0.20367403957375 * S_MntFruits
2474211   +          +    -0.06459558558968 * S_MntGoldProds  +     0.01557669100416 *
2474212   +        S_MntMeatProducts  +    -0.16342003924117 * S_MntSweetProducts
2474213   +          +     0.34676276369853 * S_MntWines  +    -0.08454570225616 *
2474214   +        S_MonthsAsCustomer  +    -0.00318885387905 * S_NumCatalogPurchases
2474215   +          +      0.1112677116841 * S_NumDealsPurchases
2474216   +          +     0.01563584187072 * S_NumDistPurchases
2474217   +          +     0.19193969522995 * S_NumStorePurchases
2474218   +          +      0.3133556199984 * S_NumWebPurchases
2474219   +          +    -0.21884874785716 * S_NumWebVisitsMonth
2474220   +          +     0.08478875792216 * S_RFMstat  +     0.05964414665285 *
2474221   +        S_RMntFrq  +    -0.12595000497726 * S_Recency
2474222   +          +     -0.1238719414537 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.08478534961354 * S_AcceptedCmpTotal + 0.21528166003219 *
S_Age + -0.16079737422774 * S_Frq + 0.04922044955183 * S_Income + 0.06245849112135 * S_Kidhome
+ -0.12820970008154 * S_Mnt + -0.00676959308959 * S_MntFishProducts + -0.20367403957375 *
S_MntFruits + -0.06459558558968 * S_MntGoldProds + 0.01557669100416 * S_MntMeatProducts +
-0.16342003924117 * S_MntSweetProducts + 0.34676276369853 * S_MntWines + -0.08454570225616 *
S_MonthsAsCustomer + -0.00318885387905 * S_NumCatalogPurchases + 0.1112677116841 *
S_NumDealsPurchases + 0.01563584187072 * S_NumDistPurchases + 0.19193969522995 *
S_NumStorePurchases + 0.3133556199984 * S_NumWebPurchases + -0.21884874785716 *
S_NumWebVisitsMonth + 0.08478875792216 * S_RFMstat + 0.05964414665285 * S_RMntFrq +
-0.12595000497726 * S_Recency + -0.1238719414537 * S_Teenhome ;
2474223   +   H1x1_2  =     0.20807487357943 * S_AcceptedCmpTotal
2474224   +          +    -0.27223051908987 * S_Age  +     0.28649391533674 * S_Frq
2474225   +          +     0.46493719675068 * S_Income  +     0.10180542910079 *
2474226   +        S_Kidhome  +    -0.19573056673819 * S_Mnt  +    -0.05332725327514 *
2474227   +        S_MntFishProducts  +    -0.28610692329433 * S_MntFruits
2474228   +          +    -0.13417237194849 * S_MntGoldProds  +     0.45697707494335 *
2474229   +        S_MntMeatProducts  +    -0.28280545785477 * S_MntSweetProducts
2474230   +          +    -0.13234920069688 * S_MntWines  +     -0.2710938018651 *
2474231   +        S_MonthsAsCustomer  +     0.31174284041905 * S_NumCatalogPurchases
2474232   +          +     0.30225032753275 * S_NumDealsPurchases
2474233   +          +     0.33833359923595 * S_NumDistPurchases
2474234   +          +    -0.20255599575849 * S_NumStorePurchases
2474235   +          +    -0.12040071168942 * S_NumWebPurchases
2474236   +          +    -0.12407090307061 * S_NumWebVisitsMonth
2474237   +          +    -0.05688936259515 * S_RFMstat  +     0.15514736649245 *
2474238   +        S_RMntFrq  +     0.00838555462657 * S_Recency
2474239   +          +     0.04609426861136 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.20807487357943 * S_AcceptedCmpTotal + -0.27223051908987 *
S_Age + 0.28649391533674 * S_Frq + 0.46493719675068 * S_Income + 0.10180542910079 * S_Kidhome
+ -0.19573056673819 * S_Mnt + -0.05332725327514 * S_MntFishProducts + -0.28610692329433 *
S_MntFruits + -0.13417237194849 * S_MntGoldProds + 0.45697707494335 * S_MntMeatProducts +
-0.28280545785477 * S_MntSweetProducts + -0.13234920069688 * S_MntWines + -0.2710938018651 *
S_MonthsAsCustomer + 0.31174284041905 * S_NumCatalogPurchases + 0.30225032753275 *
S_NumDealsPurchases + 0.33833359923595 * S_NumDistPurchases + -0.20255599575849 *
S_NumStorePurchases + -0.12040071168942 * S_NumWebPurchases + -0.12407090307061 *
S_NumWebVisitsMonth + -0.05688936259515 * S_RFMstat + 0.15514736649245 * S_RMntFrq +
0.00838555462657 * S_Recency + 0.04609426861136 * S_Teenhome ;
2474240   +   H1x1_3  =    -0.30541463116928 * S_AcceptedCmpTotal
2474241   +          +    -0.01746117216025 * S_Age  +    -0.44156473334329 * S_Frq
2474242   +          +    -0.51952426304193 * S_Income  +     0.20419921255777 *
2474243   +        S_Kidhome  +    -0.18174316707953 * S_Mnt  +    -0.03813675536406 *
2474244   +        S_MntFishProducts  +     -0.0959023413712 * S_MntFruits
2474245   +          +     0.12724081783278 * S_MntGoldProds  +    -0.07639148541426 *
2474246   +        S_MntMeatProducts  +     -0.0797214413833 * S_MntSweetProducts
2474247   +          +    -0.57705931875808 * S_MntWines  +    -0.12638551201991 *
2474248   +        S_MonthsAsCustomer  +    -0.21854676704549 * S_NumCatalogPurchases
2474249   +          +     0.16792903091627 * S_NumDealsPurchases
2474250   +          +    -0.37408945626745 * S_NumDistPurchases
2474251   +          +    -0.18067262995566 * S_NumStorePurchases
2474252   +          +     0.21192146789881 * S_NumWebPurchases
2474253   +          +    -0.23547702310669 * S_NumWebVisitsMonth
2474254   +          +    -0.02272089758813 * S_RFMstat  +    -0.16409330281075 *
2474255   +        S_RMntFrq  +     0.45021846112946 * S_Recency
2474256   +          +     0.32988735727394 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.30541463116928 * S_AcceptedCmpTotal + -0.01746117216025 *
S_Age + -0.44156473334329 * S_Frq + -0.51952426304193 * S_Income + 0.20419921255777 *
S_Kidhome + -0.18174316707953 * S_Mnt + -0.03813675536406 * S_MntFishProducts +
-0.0959023413712 * S_MntFruits + 0.12724081783278 * S_MntGoldProds + -0.07639148541426 *
S_MntMeatProducts + -0.0797214413833 * S_MntSweetProducts + -0.57705931875808 * S_MntWines +
-0.12638551201991 * S_MonthsAsCustomer + -0.21854676704549 * S_NumCatalogPurchases +
0.16792903091627 * S_NumDealsPurchases + -0.37408945626745 * S_NumDistPurchases +
-0.18067262995566 * S_NumStorePurchases + 0.21192146789881 * S_NumWebPurchases +
-0.23547702310669 * S_NumWebVisitsMonth + -0.02272089758813 * S_RFMstat + -0.16409330281075 *
S_RMntFrq + 0.45021846112946 * S_Recency + 0.32988735727394 * S_Teenhome ;
2474257   +   H1x1_4  =     0.05205198916717 * S_AcceptedCmpTotal
2474258   +          +     0.25568653619739 * S_Age  +    -0.31037252146959 * S_Frq
2474259   +          +     0.42636025358982 * S_Income  +    -0.24453708980866 *
2474260   +        S_Kidhome  +    -0.07832530945892 * S_Mnt  +    -0.48332124476182 *
2474261   +        S_MntFishProducts  +    -0.13932879119138 * S_MntFruits
2474262   +          +      0.1984121566988 * S_MntGoldProds  +     1.14965897015972 *
2474263   +        S_MntMeatProducts  +     0.07027485457428 * S_MntSweetProducts
2474264   +          +    -0.56598097754046 * S_MntWines  +     0.07317190938075 *
2474265   +        S_MonthsAsCustomer  +       0.075756987983 * S_NumCatalogPurchases
2474266   +          +     0.29407429399136 * S_NumDealsPurchases
2474267   +          +     0.01610745252195 * S_NumDistPurchases
2474268   +          +    -0.17767939085628 * S_NumStorePurchases
2474269   +          +    -0.15168958538637 * S_NumWebPurchases
2474270   +          +     0.17433622143988 * S_NumWebVisitsMonth
2474271   +          +     0.11635602973993 * S_RFMstat  +     0.32632751843433 *
2474272   +        S_RMntFrq  +    -0.24758483374458 * S_Recency
2474273   +          +    -0.31468291567479 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.05205198916717 * S_AcceptedCmpTotal + 0.25568653619739 *
S_Age + -0.31037252146959 * S_Frq + 0.42636025358982 * S_Income + -0.24453708980866 *
S_Kidhome + -0.07832530945892 * S_Mnt + -0.48332124476182 * S_MntFishProducts +
-0.13932879119138 * S_MntFruits + 0.1984121566988 * S_MntGoldProds + 1.14965897015972 *
S_MntMeatProducts + 0.07027485457428 * S_MntSweetProducts + -0.56598097754046 * S_MntWines +
0.07317190938075 * S_MonthsAsCustomer + 0.075756987983 * S_NumCatalogPurchases +
0.29407429399136 * S_NumDealsPurchases + 0.01610745252195 * S_NumDistPurchases +
-0.17767939085628 * S_NumStorePurchases + -0.15168958538637 * S_NumWebPurchases +
0.17433622143988 * S_NumWebVisitsMonth + 0.11635602973993 * S_RFMstat + 0.32632751843433 *
S_RMntFrq + -0.24758483374458 * S_Recency + -0.31468291567479 * S_Teenhome ;
2474274   +   H1x1_5  =    -0.59657492903543 * S_AcceptedCmpTotal
2474275   +          +     0.23513672763458 * S_Age  +    -0.14882104210954 * S_Frq
2474276   +          +    -0.07762660201035 * S_Income  +     0.01424651904783 *
2474277   +        S_Kidhome  +     0.18748607813081 * S_Mnt  +     0.11088464897095 *
2474278   +        S_MntFishProducts  +    -0.10064450211557 * S_MntFruits
2474279   +          +     0.11161391354421 * S_MntGoldProds  +    -1.36345407290644 *
2474280   +        S_MntMeatProducts  +     0.04868729717044 * S_MntSweetProducts
2474281   +          +     0.80284342329654 * S_MntWines  +     -0.0179539622492 *
2474282   +        S_MonthsAsCustomer  +    -0.60051908798715 * S_NumCatalogPurchases
2474283   +          +    -0.37976451362108 * S_NumDealsPurchases
2474284   +          +    -0.17027731520801 * S_NumDistPurchases
2474285   +          +     0.59849493667087 * S_NumStorePurchases
2474286   +          +     0.65481480560301 * S_NumWebPurchases
2474287   +          +    -0.68253224576609 * S_NumWebVisitsMonth
2474288   +          +    -0.16723490165629 * S_RFMstat  +    -0.10533797887644 *
2474289   +        S_RMntFrq  +     0.81382723915873 * S_Recency
2474290   +          +     0.06049401205856 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.59657492903543 * S_AcceptedCmpTotal + 0.23513672763458 *
S_Age + -0.14882104210954 * S_Frq + -0.07762660201035 * S_Income + 0.01424651904783 *
S_Kidhome + 0.18748607813081 * S_Mnt + 0.11088464897095 * S_MntFishProducts +
-0.10064450211557 * S_MntFruits + 0.11161391354421 * S_MntGoldProds + -1.36345407290644 *
S_MntMeatProducts + 0.04868729717044 * S_MntSweetProducts + 0.80284342329654 * S_MntWines +
-0.0179539622492 * S_MonthsAsCustomer + -0.60051908798715 * S_NumCatalogPurchases +
-0.37976451362108 * S_NumDealsPurchases + -0.17027731520801 * S_NumDistPurchases +
0.59849493667087 * S_NumStorePurchases + 0.65481480560301 * S_NumWebPurchases +
-0.68253224576609 * S_NumWebVisitsMonth + -0.16723490165629 * S_RFMstat + -0.10533797887644 *
S_RMntFrq + 0.81382723915873 * S_Recency + 0.06049401205856 * S_Teenhome ;
2474291   +   H1x1_6  =    -0.07547841798202 * S_AcceptedCmpTotal
2474292   +          +     0.22445278254589 * S_Age  +    -0.26357481075143 * S_Frq
2474293   +          +     0.06894154144261 * S_Income  +     0.20713236126681 *
2474294   +        S_Kidhome  +    -0.14103612934526 * S_Mnt  +     0.36334508557452 *
2474295   +        S_MntFishProducts  +    -0.20862425337296 * S_MntFruits
2474296   +          +    -0.29089690099273 * S_MntGoldProds  +     0.11336893090527 *
2474297   +        S_MntMeatProducts  +    -0.13547374281924 * S_MntSweetProducts
2474298   +          +     0.02228828195539 * S_MntWines  +    -0.19257650420334 *
2474299   +        S_MonthsAsCustomer  +      0.1365526319824 * S_NumCatalogPurchases
2474300   +          +    -0.07686699131623 * S_NumDealsPurchases
2474301   +          +    -0.07220460738926 * S_NumDistPurchases
2474302   +          +    -0.06554027468389 * S_NumStorePurchases
2474303   +          +     0.10422838158001 * S_NumWebPurchases
2474304   +          +    -0.03858550147892 * S_NumWebVisitsMonth
2474305   +          +    -0.06397448441373 * S_RFMstat  +     0.21747838287147 *
2474306   +        S_RMntFrq  +     0.24839313159913 * S_Recency
2474307   +          +    -0.06317317698653 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -0.07547841798202 * S_AcceptedCmpTotal + 0.22445278254589 *
S_Age + -0.26357481075143 * S_Frq + 0.06894154144261 * S_Income + 0.20713236126681 * S_Kidhome
+ -0.14103612934526 * S_Mnt + 0.36334508557452 * S_MntFishProducts + -0.20862425337296 *
S_MntFruits + -0.29089690099273 * S_MntGoldProds + 0.11336893090527 * S_MntMeatProducts +
-0.13547374281924 * S_MntSweetProducts + 0.02228828195539 * S_MntWines + -0.19257650420334 *
S_MonthsAsCustomer + 0.1365526319824 * S_NumCatalogPurchases + -0.07686699131623 *
S_NumDealsPurchases + -0.07220460738926 * S_NumDistPurchases + -0.06554027468389 *
S_NumStorePurchases + 0.10422838158001 * S_NumWebPurchases + -0.03858550147892 *
S_NumWebVisitsMonth + -0.06397448441373 * S_RFMstat + 0.21747838287147 * S_RMntFrq +
0.24839313159913 * S_Recency + -0.06317317698653 * S_Teenhome ;
2474308   +   H1x1_7  =    -0.08604903695444 * S_AcceptedCmpTotal
2474309   +          +    -0.14807437541992 * S_Age  +     0.01466157584549 * S_Frq
2474310   +          +    -0.09883966180507 * S_Income  +     0.51992566778352 *
2474311   +        S_Kidhome  +     0.29795006703636 * S_Mnt  +    -0.08922020500011 *
2474312   +        S_MntFishProducts  +     0.19836834402079 * S_MntFruits
2474313   +          +    -0.11292241468378 * S_MntGoldProds  +       0.584464452194 *
2474314   +        S_MntMeatProducts  +     0.22625326024073 * S_MntSweetProducts
2474315   +          +     0.24074129944382 * S_MntWines  +     0.13538906557527 *
2474316   +        S_MonthsAsCustomer  +    -0.01228250248922 * S_NumCatalogPurchases
2474317   +          +    -0.07920122387563 * S_NumDealsPurchases
2474318   +          +      0.3649244061347 * S_NumDistPurchases
2474319   +          +     0.36475853688403 * S_NumStorePurchases
2474320   +          +     0.02153991404063 * S_NumWebPurchases
2474321   +          +    -0.94080669139388 * S_NumWebVisitsMonth
2474322   +          +     0.24853677977494 * S_RFMstat  +     0.37015183933951 *
2474323   +        S_RMntFrq  +      0.6724157721663 * S_Recency
2474324   +          +      0.1615471643866 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_7 = -0.08604903695444 * S_AcceptedCmpTotal + -0.14807437541992 *
S_Age + 0.01466157584549 * S_Frq + -0.09883966180507 * S_Income + 0.51992566778352 * S_Kidhome
+ 0.29795006703636 * S_Mnt + -0.08922020500011 * S_MntFishProducts + 0.19836834402079 *
S_MntFruits + -0.11292241468378 * S_MntGoldProds + 0.584464452194 * S_MntMeatProducts +
0.22625326024073 * S_MntSweetProducts + 0.24074129944382 * S_MntWines + 0.13538906557527 *
S_MonthsAsCustomer + -0.01228250248922 * S_NumCatalogPurchases + -0.07920122387563 *
S_NumDealsPurchases + 0.3649244061347 * S_NumDistPurchases + 0.36475853688403 *
S_NumStorePurchases + 0.02153991404063 * S_NumWebPurchases + -0.94080669139388 *
S_NumWebVisitsMonth + 0.24853677977494 * S_RFMstat + 0.37015183933951 * S_RMntFrq +
0.6724157721663 * S_Recency + 0.1615471643866 * S_Teenhome ;
2474325   +   H1x1_1  = H1x1_1  +     0.04431608362128 * AcceptedCmp10
2474326   +          +       0.145592087795 * AcceptedCmp20  +    -0.18972867139938 *
2474327   +        AcceptedCmp30  +     0.11297731320888 * AcceptedCmp40
2474328   +          +     0.15203974410995 * AcceptedCmp50  +     0.05130421316428 *
2474329   +        Complain0  +     0.33576036450343 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.04431608362128 * AcceptedCmp10 + 0.145592087795 *
AcceptedCmp20 + -0.18972867139938 * AcceptedCmp30 + 0.11297731320888 * AcceptedCmp40 +
0.15203974410995 * AcceptedCmp50 + 0.05130421316428 * Complain0 + 0.33576036450343 *
HigherEducationBinary0 ;
2474330   +   H1x1_2  = H1x1_2  +    -0.05495742609855 * AcceptedCmp10
2474331   +          +    -0.08873650760176 * AcceptedCmp20  +    -0.16380549867313 *
2474332   +        AcceptedCmp30  +    -0.24495261884932 * AcceptedCmp40
2474333   +          +    -0.22199506896148 * AcceptedCmp50  +       0.149484615172 *
2474334   +        Complain0  +     0.01091791142552 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.05495742609855 * AcceptedCmp10 + -0.08873650760176
* AcceptedCmp20 + -0.16380549867313 * AcceptedCmp30 + -0.24495261884932 * AcceptedCmp40 +
-0.22199506896148 * AcceptedCmp50 + 0.149484615172 * Complain0 + 0.01091791142552 *
HigherEducationBinary0 ;
2474335   +   H1x1_3  = H1x1_3  +     0.03473702421341 * AcceptedCmp10
2474336   +          +    -0.11226718065217 * AcceptedCmp20  +     0.19024579384296 *
2474337   +        AcceptedCmp30  +     0.15478548865598 * AcceptedCmp40
2474338   +          +     0.15222823671897 * AcceptedCmp50  +     0.07713012834947 *
2474339   +        Complain0  +    -0.18741708707661 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.03473702421341 * AcceptedCmp10 + -0.11226718065217 *
AcceptedCmp20 + 0.19024579384296 * AcceptedCmp30 + 0.15478548865598 * AcceptedCmp40 +
0.15222823671897 * AcceptedCmp50 + 0.07713012834947 * Complain0 + -0.18741708707661 *
HigherEducationBinary0 ;
2474340   +   H1x1_4  = H1x1_4  +    -0.25622127302429 * AcceptedCmp10
2474341   +          +    -0.39059103518073 * AcceptedCmp20  +    -0.29716603631807 *
2474342   +        AcceptedCmp30  +    -0.20875694971526 * AcceptedCmp40
2474343   +          +    -0.35128787139073 * AcceptedCmp50  +    -0.28848733462386 *
2474344   +        Complain0  +      0.4276503747649 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.25622127302429 * AcceptedCmp10 + -0.39059103518073
* AcceptedCmp20 + -0.29716603631807 * AcceptedCmp30 + -0.20875694971526 * AcceptedCmp40 +
-0.35128787139073 * AcceptedCmp50 + -0.28848733462386 * Complain0 + 0.4276503747649 *
HigherEducationBinary0 ;
2474345   +   H1x1_5  = H1x1_5  +    -0.06574875851088 * AcceptedCmp10
2474346   +          +    -0.27375195259265 * AcceptedCmp20  +     -0.2740681662293 *
2474347   +        AcceptedCmp30  +    -0.14697156898736 * AcceptedCmp40
2474348   +          +     0.17684649468835 * AcceptedCmp50  +    -0.09979172944646 *
2474349   +        Complain0  +     0.38986664202197 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.06574875851088 * AcceptedCmp10 + -0.27375195259265
* AcceptedCmp20 + -0.2740681662293 * AcceptedCmp30 + -0.14697156898736 * AcceptedCmp40 +
0.17684649468835 * AcceptedCmp50 + -0.09979172944646 * Complain0 + 0.38986664202197 *
HigherEducationBinary0 ;
2474350   +   H1x1_6  = H1x1_6  +     0.08696678529441 * AcceptedCmp10
2474351   +          +     0.09467543942215 * AcceptedCmp20  +     0.04586779705477 *
2474352   +        AcceptedCmp30  +    -0.12591921836379 * AcceptedCmp40
2474353   +          +     0.20150138392895 * AcceptedCmp50  +     0.27764282700214 *
2474354   +        Complain0  +     0.13985738522066 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + 0.08696678529441 * AcceptedCmp10 + 0.09467543942215 *
AcceptedCmp20 + 0.04586779705477 * AcceptedCmp30 + -0.12591921836379 * AcceptedCmp40 +
0.20150138392895 * AcceptedCmp50 + 0.27764282700214 * Complain0 + 0.13985738522066 *
HigherEducationBinary0 ;
2474355   +   H1x1_7  = H1x1_7  +    -0.10455069401218 * AcceptedCmp10
2474356   +          +      0.1311831941372 * AcceptedCmp20  +     0.17844209104604 *
2474357   +        AcceptedCmp30  +     0.19406707592815 * AcceptedCmp40
2474358   +          +    -0.00068155012319 * AcceptedCmp50  +     0.13245364846536 *
2474359   +        Complain0  +    -0.05165256160872 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_7 = H1x1_7 + -0.10455069401218 * AcceptedCmp10 + 0.1311831941372 *
AcceptedCmp20 + 0.17844209104604 * AcceptedCmp30 + 0.19406707592815 * AcceptedCmp40 +
-0.00068155012319 * AcceptedCmp50 + 0.13245364846536 * Complain0 + -0.05165256160872 *
HigherEducationBinary0 ;
2474360   +   H1x1_1  = H1x1_1  +     0.28967939808759 * Education2n_Cycle
2474361   +          +    -0.15795056374781 * EducationBasic  +    -0.00649803471307 *
2474362   +        EducationGraduation  +     0.19520715924532 * EducationMaster
2474363   +          +     0.07744097241553 * Marital_StatusDivorced
2474364   +          +     -0.0247463100385 * Marital_StatusMarried
2474365   +          +     0.05804915234573 * Marital_StatusSingle
2474366   +          +    -0.08320125047871 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.28967939808759 * Education2n_Cycle +
-0.15795056374781 * EducationBasic + -0.00649803471307 * EducationGraduation +
0.19520715924532 * EducationMaster + 0.07744097241553 * Marital_StatusDivorced +
-0.0247463100385 * Marital_StatusMarried + 0.05804915234573 * Marital_StatusSingle +
-0.08320125047871 * Marital_StatusTogether ;
2474367   +   H1x1_2  = H1x1_2  +     0.12524444422085 * Education2n_Cycle
2474368   +          +    -0.30278286924729 * EducationBasic  +     0.37480827366421 *
2474369   +        EducationGraduation  +     0.34209136290694 * EducationMaster
2474370   +          +     0.01390668926269 * Marital_StatusDivorced
2474371   +          +     0.01136282152074 * Marital_StatusMarried
2474372   +          +     0.12450246418789 * Marital_StatusSingle
2474373   +          +     -0.1576148519872 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.12524444422085 * Education2n_Cycle +
-0.30278286924729 * EducationBasic + 0.37480827366421 * EducationGraduation + 0.34209136290694
* EducationMaster + 0.01390668926269 * Marital_StatusDivorced + 0.01136282152074 *
Marital_StatusMarried + 0.12450246418789 * Marital_StatusSingle + -0.1576148519872 *
Marital_StatusTogether ;
2474374   +   H1x1_3  = H1x1_3  +    -0.14589041643593 * Education2n_Cycle
2474375   +          +    -0.15691118816463 * EducationBasic  +      0.1993616073183 *
2474376   +        EducationGraduation  +     0.02862010255145 * EducationMaster
2474377   +          +    -0.19133456931879 * Marital_StatusDivorced
2474378   +          +     0.56263566654996 * Marital_StatusMarried
2474379   +          +    -0.42172822038882 * Marital_StatusSingle
2474380   +          +     0.42023140643292 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.14589041643593 * Education2n_Cycle +
-0.15691118816463 * EducationBasic + 0.1993616073183 * EducationGraduation + 0.02862010255145
* EducationMaster + -0.19133456931879 * Marital_StatusDivorced + 0.56263566654996 *
Marital_StatusMarried + -0.42172822038882 * Marital_StatusSingle + 0.42023140643292 *
Marital_StatusTogether ;
2474381   +   H1x1_4  = H1x1_4  +     0.10038585978656 * Education2n_Cycle
2474382   +          +    -0.11388609002984 * EducationBasic  +    -0.14980553500983 *
2474383   +        EducationGraduation  +    -0.07646595330369 * EducationMaster
2474384   +          +    -0.19871205065609 * Marital_StatusDivorced
2474385   +          +    -0.14730795681603 * Marital_StatusMarried
2474386   +          +     0.05055432510362 * Marital_StatusSingle
2474387   +          +     0.06558965292395 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.10038585978656 * Education2n_Cycle +
-0.11388609002984 * EducationBasic + -0.14980553500983 * EducationGraduation +
-0.07646595330369 * EducationMaster + -0.19871205065609 * Marital_StatusDivorced +
-0.14730795681603 * Marital_StatusMarried + 0.05055432510362 * Marital_StatusSingle +
0.06558965292395 * Marital_StatusTogether ;
2474388   +   H1x1_5  = H1x1_5  +      0.0015835307855 * Education2n_Cycle
2474389   +          +    -0.22658746797638 * EducationBasic  +    -0.03445982386977 *
2474390   +        EducationGraduation  +     0.11375378192685 * EducationMaster
2474391   +          +    -0.35623807358995 * Marital_StatusDivorced
2474392   +          +     0.30324726283965 * Marital_StatusMarried
2474393   +          +    -0.18561093467927 * Marital_StatusSingle
2474394   +          +       0.395424582152 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 0.0015835307855 * Education2n_Cycle +
-0.22658746797638 * EducationBasic + -0.03445982386977 * EducationGraduation +
0.11375378192685 * EducationMaster + -0.35623807358995 * Marital_StatusDivorced +
0.30324726283965 * Marital_StatusMarried + -0.18561093467927 * Marital_StatusSingle +
0.395424582152 * Marital_StatusTogether ;
2474395   +   H1x1_6  = H1x1_6  +    -0.23751822587858 * Education2n_Cycle
2474396   +          +    -0.01687300040825 * EducationBasic  +     0.23236967703011 *
2474397   +        EducationGraduation  +      0.0725289831541 * EducationMaster
2474398   +          +     0.11581014663368 * Marital_StatusDivorced
2474399   +          +    -0.31070638037659 * Marital_StatusMarried
2474400   +          +     0.17131747253949 * Marital_StatusSingle
2474401   +          +    -0.19314955966476 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + -0.23751822587858 * Education2n_Cycle +
-0.01687300040825 * EducationBasic + 0.23236967703011 * EducationGraduation + 0.0725289831541
* EducationMaster + 0.11581014663368 * Marital_StatusDivorced + -0.31070638037659 *
Marital_StatusMarried + 0.17131747253949 * Marital_StatusSingle + -0.19314955966476 *
Marital_StatusTogether ;
2474402   +   H1x1_7  = H1x1_7  +     0.00103693282479 * Education2n_Cycle
2474403   +          +     0.12608909598752 * EducationBasic  +     -0.2366673091666 *
2474404   +        EducationGraduation  +     0.24413217290922 * EducationMaster
2474405   +          +    -0.42450599871892 * Marital_StatusDivorced
2474406   +          +     0.48162905075885 * Marital_StatusMarried
2474407   +          +    -0.26618507749283 * Marital_StatusSingle
2474408   +          +     0.38053668740338 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_7 = H1x1_7 + 0.00103693282479 * Education2n_Cycle +
0.12608909598752 * EducationBasic + -0.2366673091666 * EducationGraduation + 0.24413217290922
* EducationMaster + -0.42450599871892 * Marital_StatusDivorced + 0.48162905075885 *
Marital_StatusMarried + -0.26618507749283 * Marital_StatusSingle + 0.38053668740338 *
Marital_StatusTogether ;
2474409   +   H1x1_1  =     0.12149136705075 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.12149136705075 + H1x1_1 ;
2474410   +   H1x1_2  =    -0.97489696657001 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.97489696657001 + H1x1_2 ;
2474411   +   H1x1_3  =    -0.70605220802968 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.70605220802968 + H1x1_3 ;
2474412   +   H1x1_4  =    -1.07783206982379 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -1.07783206982379 + H1x1_4 ;
2474413   +   H1x1_5  =    -1.00400706261511 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.00400706261511 + H1x1_5 ;
2474414   +   H1x1_6  =     0.22600488314839 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0.22600488314839 + H1x1_6 ;
2474415   +   H1x1_7  =     1.55642446968077 + H1x1_7 ;
MPRINT(EM_DIAGRAM):   H1x1_7 = 1.55642446968077 + H1x1_7 ;
2474416   +   _EPS = SQRT(CONSTANT('MACEPS')) ;
MPRINT(EM_DIAGRAM):   _EPS = SQRT(CONSTANT('MACEPS')) ;
2474417   +   _REC_EPS = 1/_EPS ;
MPRINT(EM_DIAGRAM):   _REC_EPS = 1/_EPS ;
2474418   +   DROP _REC_EPS _EPS ;
MPRINT(EM_DIAGRAM):   DROP _REC_EPS _EPS ;
2474419   +   IF H1x1_1  < _REC_EPS AND H1x1_1  > - _REC_EPS THEN
2474420   +   H1x1_1  = H1x1_1  * H1x1_1 ;
MPRINT(EM_DIAGRAM):   IF H1x1_1 < _REC_EPS AND H1x1_1 > - _REC_EPS THEN H1x1_1 = H1x1_1 *
H1x1_1 ;
2474421   +   ELSE H1x1_1  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_1 = _REC_EPS ;
2474422   +   IF H1x1_2  < _REC_EPS AND H1x1_2  > - _REC_EPS THEN
2474423   +   H1x1_2  = H1x1_2  * H1x1_2 ;
MPRINT(EM_DIAGRAM):   IF H1x1_2 < _REC_EPS AND H1x1_2 > - _REC_EPS THEN H1x1_2 = H1x1_2 *
H1x1_2 ;
2474424   +   ELSE H1x1_2  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_2 = _REC_EPS ;
2474425   +   IF H1x1_3  < _REC_EPS AND H1x1_3  > - _REC_EPS THEN
2474426   +   H1x1_3  = H1x1_3  * H1x1_3 ;
MPRINT(EM_DIAGRAM):   IF H1x1_3 < _REC_EPS AND H1x1_3 > - _REC_EPS THEN H1x1_3 = H1x1_3 *
H1x1_3 ;
2474427   +   ELSE H1x1_3  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_3 = _REC_EPS ;
2474428   +   IF H1x1_4  < _REC_EPS AND H1x1_4  > - _REC_EPS THEN
2474429   +   H1x1_4  = H1x1_4  * H1x1_4 ;
MPRINT(EM_DIAGRAM):   IF H1x1_4 < _REC_EPS AND H1x1_4 > - _REC_EPS THEN H1x1_4 = H1x1_4 *
H1x1_4 ;
2474430   +   ELSE H1x1_4  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_4 = _REC_EPS ;
2474431   +   IF H1x1_5  < _REC_EPS AND H1x1_5  > - _REC_EPS THEN
2474432   +   H1x1_5  = H1x1_5  * H1x1_5 ;
MPRINT(EM_DIAGRAM):   IF H1x1_5 < _REC_EPS AND H1x1_5 > - _REC_EPS THEN H1x1_5 = H1x1_5 *
H1x1_5 ;
2474433   +   ELSE H1x1_5  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_5 = _REC_EPS ;
2474434   +   IF H1x1_6  < _REC_EPS AND H1x1_6  > - _REC_EPS THEN
2474435   +   H1x1_6  = H1x1_6  * H1x1_6 ;
MPRINT(EM_DIAGRAM):   IF H1x1_6 < _REC_EPS AND H1x1_6 > - _REC_EPS THEN H1x1_6 = H1x1_6 *
H1x1_6 ;
2474436   +   ELSE H1x1_6  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_6 = _REC_EPS ;
2474437   +   IF H1x1_7  < _REC_EPS AND H1x1_7  > - _REC_EPS THEN
2474438   +   H1x1_7  = H1x1_7  * H1x1_7 ;
MPRINT(EM_DIAGRAM):   IF H1x1_7 < _REC_EPS AND H1x1_7 > - _REC_EPS THEN H1x1_7 = H1x1_7 *
H1x1_7 ;
2474439   +   ELSE H1x1_7  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_7 = _REC_EPS ;
2474440   +END;
MPRINT(EM_DIAGRAM):   END;
2474441   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2474442   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2474443   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2474444   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2474445   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2474446   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
2474447   +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
2474448   +   H1x1_7  = .;
MPRINT(EM_DIAGRAM):   H1x1_7 = .;
2474449   +END;
MPRINT(EM_DIAGRAM):   END;
2474450   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2474451   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
2474452   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2474453   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2474454   +   H1x2_1  =    -1.36226288448745 * S_AcceptedCmpTotal
2474455   +          +     -1.3328616352886 * S_Age  +     1.25346137866034 * S_Frq
2474456   +          +    -1.21746243786295 * S_Income  +     2.83911738158074 *
2474457   +        S_Kidhome  +    -0.60784009102409 * S_Mnt  +     1.57752173634223 *
2474458   +        S_MntFishProducts  +    -0.26776567401075 * S_MntFruits
2474459   +          +     1.09584731081081 * S_MntGoldProds  +     1.22333044103532 *
2474460   +        S_MntMeatProducts  +     0.42827942745016 * S_MntSweetProducts
2474461   +          +     0.67813472792448 * S_MntWines  +     0.56816492004798 *
2474462   +        S_MonthsAsCustomer  +     0.58113470399079 * S_NumCatalogPurchases
2474463   +          +     1.96719021971894 * S_NumDealsPurchases
2474464   +          +    -0.44535354794671 * S_NumDistPurchases
2474465   +          +    -0.54827762736866 * S_NumStorePurchases
2474466   +          +     1.02703310241897 * S_NumWebPurchases
2474467   +          +    -0.12526997502601 * S_NumWebVisitsMonth
2474468   +          +    -0.55803926383776 * S_RFMstat  +     0.01819380776809 *
2474469   +        S_RMntFrq  +       0.651688575044 * S_Recency
2474470   +          +     1.58682398186611 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -1.36226288448745 * S_AcceptedCmpTotal + -1.3328616352886 *
S_Age + 1.25346137866034 * S_Frq + -1.21746243786295 * S_Income + 2.83911738158074 * S_Kidhome
+ -0.60784009102409 * S_Mnt + 1.57752173634223 * S_MntFishProducts + -0.26776567401075 *
S_MntFruits + 1.09584731081081 * S_MntGoldProds + 1.22333044103532 * S_MntMeatProducts +
0.42827942745016 * S_MntSweetProducts + 0.67813472792448 * S_MntWines + 0.56816492004798 *
S_MonthsAsCustomer + 0.58113470399079 * S_NumCatalogPurchases + 1.96719021971894 *
S_NumDealsPurchases + -0.44535354794671 * S_NumDistPurchases + -0.54827762736866 *
S_NumStorePurchases + 1.02703310241897 * S_NumWebPurchases + -0.12526997502601 *
S_NumWebVisitsMonth + -0.55803926383776 * S_RFMstat + 0.01819380776809 * S_RMntFrq +
0.651688575044 * S_Recency + 1.58682398186611 * S_Teenhome ;
2474471   +   H1x2_2  =    -0.38064507857029 * S_AcceptedCmpTotal
2474472   +          +    -0.49661801158351 * S_Age  +    -0.89589399799916 * S_Frq
2474473   +          +     -0.0121499288597 * S_Income  +    -0.48023022827846 *
2474474   +        S_Kidhome  +     -0.5183846206029 * S_Mnt  +    -3.13913899012334 *
2474475   +        S_MntFishProducts  +    -2.07291335687615 * S_MntFruits
2474476   +          +     0.51019753905662 * S_MntGoldProds  +     0.11458666377917 *
2474477   +        S_MntMeatProducts  +     -1.8499241966205 * S_MntSweetProducts
2474478   +          +     0.23160544044172 * S_MntWines  +    -0.48210626907943 *
2474479   +        S_MonthsAsCustomer  +     0.15500845227752 * S_NumCatalogPurchases
2474480   +          +     1.34659447971131 * S_NumDealsPurchases
2474481   +          +    -0.51624251310423 * S_NumDistPurchases
2474482   +          +      -1.283121574848 * S_NumStorePurchases
2474483   +          +    -1.83517806228926 * S_NumWebPurchases
2474484   +          +     0.51321339475285 * S_NumWebVisitsMonth
2474485   +          +    -1.86431704283342 * S_RFMstat  +    -1.52065204326569 *
2474486   +        S_RMntFrq  +    -0.33186055095462 * S_Recency
2474487   +          +    -0.49524729407054 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.38064507857029 * S_AcceptedCmpTotal + -0.49661801158351 *
S_Age + -0.89589399799916 * S_Frq + -0.0121499288597 * S_Income + -0.48023022827846 *
S_Kidhome + -0.5183846206029 * S_Mnt + -3.13913899012334 * S_MntFishProducts +
-2.07291335687615 * S_MntFruits + 0.51019753905662 * S_MntGoldProds + 0.11458666377917 *
S_MntMeatProducts + -1.8499241966205 * S_MntSweetProducts + 0.23160544044172 * S_MntWines +
-0.48210626907943 * S_MonthsAsCustomer + 0.15500845227752 * S_NumCatalogPurchases +
1.34659447971131 * S_NumDealsPurchases + -0.51624251310423 * S_NumDistPurchases +
-1.283121574848 * S_NumStorePurchases + -1.83517806228926 * S_NumWebPurchases +
0.51321339475285 * S_NumWebVisitsMonth + -1.86431704283342 * S_RFMstat + -1.52065204326569 *
S_RMntFrq + -0.33186055095462 * S_Recency + -0.49524729407054 * S_Teenhome ;
2474488   +   H1x2_3  =    -0.75774003934728 * S_AcceptedCmpTotal
2474489   +          +    -0.85312030825337 * S_Age  +    -0.01726294458221 * S_Frq
2474490   +          +     0.58598267983786 * S_Income  +     1.30497766805554 *
2474491   +        S_Kidhome  +    -0.84214135491022 * S_Mnt  +     0.55305862453787 *
2474492   +        S_MntFishProducts  +      0.6488663613899 * S_MntFruits
2474493   +          +    -0.83189439197558 * S_MntGoldProds  +    -0.07500050412653 *
2474494   +        S_MntMeatProducts  +    -0.06401928810253 * S_MntSweetProducts
2474495   +          +      0.5940135658334 * S_MntWines  +    -0.04573352455984 *
2474496   +        S_MonthsAsCustomer  +    -1.53610650634069 * S_NumCatalogPurchases
2474497   +          +     0.67492297345004 * S_NumDealsPurchases
2474498   +          +    -0.40437875375926 * S_NumDistPurchases
2474499   +          +     0.36322603681545 * S_NumStorePurchases
2474500   +          +    -1.15315070635524 * S_NumWebPurchases
2474501   +          +     1.20707272201156 * S_NumWebVisitsMonth
2474502   +          +     0.12192566357285 * S_RFMstat  +    -0.46711219170047 *
2474503   +        S_RMntFrq  +     1.89703582493259 * S_Recency
2474504   +          +     1.07511942237188 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.75774003934728 * S_AcceptedCmpTotal + -0.85312030825337 *
S_Age + -0.01726294458221 * S_Frq + 0.58598267983786 * S_Income + 1.30497766805554 * S_Kidhome
+ -0.84214135491022 * S_Mnt + 0.55305862453787 * S_MntFishProducts + 0.6488663613899 *
S_MntFruits + -0.83189439197558 * S_MntGoldProds + -0.07500050412653 * S_MntMeatProducts +
-0.06401928810253 * S_MntSweetProducts + 0.5940135658334 * S_MntWines + -0.04573352455984 *
S_MonthsAsCustomer + -1.53610650634069 * S_NumCatalogPurchases + 0.67492297345004 *
S_NumDealsPurchases + -0.40437875375926 * S_NumDistPurchases + 0.36322603681545 *
S_NumStorePurchases + -1.15315070635524 * S_NumWebPurchases + 1.20707272201156 *
S_NumWebVisitsMonth + 0.12192566357285 * S_RFMstat + -0.46711219170047 * S_RMntFrq +
1.89703582493259 * S_Recency + 1.07511942237188 * S_Teenhome ;
2474505   +   H1x2_4  =     0.62123819069495 * S_AcceptedCmpTotal
2474506   +          +     0.03399237520702 * S_Age  +    -0.01971421795338 * S_Frq
2474507   +          +    -0.54728266919056 * S_Income  +     -0.4634195771237 *
2474508   +        S_Kidhome  +    -1.19055247712911 * S_Mnt  +      1.4307770729159 *
2474509   +        S_MntFishProducts  +    -0.83895281276374 * S_MntFruits
2474510   +          +    -0.48578798244317 * S_MntGoldProds  +     -0.2846617807101 *
2474511   +        S_MntMeatProducts  +     0.70721686533987 * S_MntSweetProducts
2474512   +          +     1.32824513551741 * S_MntWines  +    -0.62654342755965 *
2474513   +        S_MonthsAsCustomer  +    -0.97245161056543 * S_NumCatalogPurchases
2474514   +          +    -0.41427983342148 * S_NumDealsPurchases
2474515   +          +    -0.22714305629205 * S_NumDistPurchases
2474516   +          +    -0.78763182048862 * S_NumStorePurchases
2474517   +          +    -0.26669253451501 * S_NumWebPurchases
2474518   +          +    -0.79601078616342 * S_NumWebVisitsMonth
2474519   +          +    -0.03863278696502 * S_RFMstat  +     0.95011556103056 *
2474520   +        S_RMntFrq  +     0.57184629262878 * S_Recency
2474521   +          +    -0.21560478702461 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.62123819069495 * S_AcceptedCmpTotal + 0.03399237520702 *
S_Age + -0.01971421795338 * S_Frq + -0.54728266919056 * S_Income + -0.4634195771237 *
S_Kidhome + -1.19055247712911 * S_Mnt + 1.4307770729159 * S_MntFishProducts +
-0.83895281276374 * S_MntFruits + -0.48578798244317 * S_MntGoldProds + -0.2846617807101 *
S_MntMeatProducts + 0.70721686533987 * S_MntSweetProducts + 1.32824513551741 * S_MntWines +
-0.62654342755965 * S_MonthsAsCustomer + -0.97245161056543 * S_NumCatalogPurchases +
-0.41427983342148 * S_NumDealsPurchases + -0.22714305629205 * S_NumDistPurchases +
-0.78763182048862 * S_NumStorePurchases + -0.26669253451501 * S_NumWebPurchases +
-0.79601078616342 * S_NumWebVisitsMonth + -0.03863278696502 * S_RFMstat + 0.95011556103056 *
S_RMntFrq + 0.57184629262878 * S_Recency + -0.21560478702461 * S_Teenhome ;
2474522   +   H1x2_5  =     1.47906557745075 * S_AcceptedCmpTotal
2474523   +          +    -0.31060566334198 * S_Age  +     0.56472424389718 * S_Frq
2474524   +          +     2.16541682726249 * S_Income  +    -0.34119803841059 *
2474525   +        S_Kidhome  +    -0.53783050542796 * S_Mnt  +     0.54954821448236 *
2474526   +        S_MntFishProducts  +    -0.48449918837838 * S_MntFruits
2474527   +          +     0.29783052620672 * S_MntGoldProds  +    -0.15068954343013 *
2474528   +        S_MntMeatProducts  +     0.12733251381761 * S_MntSweetProducts
2474529   +          +    -2.46709166794296 * S_MntWines  +     -1.2011286508879 *
2474530   +        S_MonthsAsCustomer  +    -0.88194814936932 * S_NumCatalogPurchases
2474531   +          +      0.7697882092212 * S_NumDealsPurchases
2474532   +          +     0.51864835453056 * S_NumDistPurchases
2474533   +          +    -1.18320366630444 * S_NumStorePurchases
2474534   +          +     -0.6608394639529 * S_NumWebPurchases
2474535   +          +    -0.03948137707769 * S_NumWebVisitsMonth
2474536   +          +     1.01076462488608 * S_RFMstat  +    -0.91562280329354 *
2474537   +        S_RMntFrq  +    -1.07576669501238 * S_Recency
2474538   +          +     -0.5946628412106 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.47906557745075 * S_AcceptedCmpTotal + -0.31060566334198 *
S_Age + 0.56472424389718 * S_Frq + 2.16541682726249 * S_Income + -0.34119803841059 * S_Kidhome
+ -0.53783050542796 * S_Mnt + 0.54954821448236 * S_MntFishProducts + -0.48449918837838 *
S_MntFruits + 0.29783052620672 * S_MntGoldProds + -0.15068954343013 * S_MntMeatProducts +
0.12733251381761 * S_MntSweetProducts + -2.46709166794296 * S_MntWines + -1.2011286508879 *
S_MonthsAsCustomer + -0.88194814936932 * S_NumCatalogPurchases + 0.7697882092212 *
S_NumDealsPurchases + 0.51864835453056 * S_NumDistPurchases + -1.18320366630444 *
S_NumStorePurchases + -0.6608394639529 * S_NumWebPurchases + -0.03948137707769 *
S_NumWebVisitsMonth + 1.01076462488608 * S_RFMstat + -0.91562280329354 * S_RMntFrq +
-1.07576669501238 * S_Recency + -0.5946628412106 * S_Teenhome ;
2474539   +   H1x2_6  =     0.42130900994246 * S_AcceptedCmpTotal
2474540   +          +     1.64256522546546 * S_Age  +    -0.31822237495441 * S_Frq
2474541   +          +     0.39698710846967 * S_Income  +    -1.30075584525681 *
2474542   +        S_Kidhome  +    -1.74733472316294 * S_Mnt  +    -1.04423575539078 *
2474543   +        S_MntFishProducts  +     0.28025913700744 * S_MntFruits
2474544   +          +     0.92062413073229 * S_MntGoldProds  +     0.38487452173084 *
2474545   +        S_MntMeatProducts  +     2.15808673418264 * S_MntSweetProducts
2474546   +          +     -0.5364274323591 * S_MntWines  +     0.64447858852609 *
2474547   +        S_MonthsAsCustomer  +     0.33683873873337 * S_NumCatalogPurchases
2474548   +          +     1.45707983202269 * S_NumDealsPurchases
2474549   +          +     0.83341887728641 * S_NumDistPurchases
2474550   +          +    -0.36664450469423 * S_NumStorePurchases
2474551   +          +     0.63911579043339 * S_NumWebPurchases
2474552   +          +     0.67144790303554 * S_NumWebVisitsMonth
2474553   +          +    -0.22124390112376 * S_RFMstat  +     1.72222071547971 *
2474554   +        S_RMntFrq  +    -0.02323382627271 * S_Recency
2474555   +          +    -0.09494567508522 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_6 = 0.42130900994246 * S_AcceptedCmpTotal + 1.64256522546546 *
S_Age + -0.31822237495441 * S_Frq + 0.39698710846967 * S_Income + -1.30075584525681 *
S_Kidhome + -1.74733472316294 * S_Mnt + -1.04423575539078 * S_MntFishProducts +
0.28025913700744 * S_MntFruits + 0.92062413073229 * S_MntGoldProds + 0.38487452173084 *
S_MntMeatProducts + 2.15808673418264 * S_MntSweetProducts + -0.5364274323591 * S_MntWines +
0.64447858852609 * S_MonthsAsCustomer + 0.33683873873337 * S_NumCatalogPurchases +
1.45707983202269 * S_NumDealsPurchases + 0.83341887728641 * S_NumDistPurchases +
-0.36664450469423 * S_NumStorePurchases + 0.63911579043339 * S_NumWebPurchases +
0.67144790303554 * S_NumWebVisitsMonth + -0.22124390112376 * S_RFMstat + 1.72222071547971 *
S_RMntFrq + -0.02323382627271 * S_Recency + -0.09494567508522 * S_Teenhome ;
2474556   +   H1x2_7  =      0.0903330772553 * S_AcceptedCmpTotal
2474557   +          +     0.13217959089196 * S_Age  +     0.93600629225871 * S_Frq
2474558   +          +     1.23765169211392 * S_Income  +     1.27732984858098 *
2474559   +        S_Kidhome  +     1.54889765360944 * S_Mnt  +     0.84618173514761 *
2474560   +        S_MntFishProducts  +    -0.32044356786958 * S_MntFruits
2474561   +          +    -0.26357995597029 * S_MntGoldProds  +     0.53649229087334 *
2474562   +        S_MntMeatProducts  +     1.46955866272889 * S_MntSweetProducts
2474563   +          +    -0.34260315437319 * S_MntWines  +    -1.70693604004836 *
2474564   +        S_MonthsAsCustomer  +     -0.4612555130737 * S_NumCatalogPurchases
2474565   +          +     0.68491896063662 * S_NumDealsPurchases
2474566   +          +      0.5386312048592 * S_NumDistPurchases
2474567   +          +     1.28108942503912 * S_NumStorePurchases
2474568   +          +    -0.88282270505969 * S_NumWebPurchases
2474569   +          +    -0.66670958211416 * S_NumWebVisitsMonth
2474570   +          +     0.94315921733739 * S_RFMstat  +     0.70533705858561 *
2474571   +        S_RMntFrq  +     0.23896687873405 * S_Recency
2474572   +          +     0.66289635918858 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_7 = 0.0903330772553 * S_AcceptedCmpTotal + 0.13217959089196 * S_Age
+ 0.93600629225871 * S_Frq + 1.23765169211392 * S_Income + 1.27732984858098 * S_Kidhome +
1.54889765360944 * S_Mnt + 0.84618173514761 * S_MntFishProducts + -0.32044356786958 *
S_MntFruits + -0.26357995597029 * S_MntGoldProds + 0.53649229087334 * S_MntMeatProducts +
1.46955866272889 * S_MntSweetProducts + -0.34260315437319 * S_MntWines + -1.70693604004836 *
S_MonthsAsCustomer + -0.4612555130737 * S_NumCatalogPurchases + 0.68491896063662 *
S_NumDealsPurchases + 0.5386312048592 * S_NumDistPurchases + 1.28108942503912 *
S_NumStorePurchases + -0.88282270505969 * S_NumWebPurchases + -0.66670958211416 *
S_NumWebVisitsMonth + 0.94315921733739 * S_RFMstat + 0.70533705858561 * S_RMntFrq +
0.23896687873405 * S_Recency + 0.66289635918858 * S_Teenhome ;
2474573   +   H1x2_1  = H1x2_1  +     0.22958861848016 * AcceptedCmp10
2474574   +          +    -1.11069938765475 * AcceptedCmp20  +     1.18563222829069 *
2474575   +        AcceptedCmp30  +    -0.97028253571173 * AcceptedCmp40
2474576   +          +     0.60850082670391 * AcceptedCmp50  +     0.31163990605418 *
2474577   +        Complain0  +     1.10957053966326 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 0.22958861848016 * AcceptedCmp10 + -1.11069938765475 *
AcceptedCmp20 + 1.18563222829069 * AcceptedCmp30 + -0.97028253571173 * AcceptedCmp40 +
0.60850082670391 * AcceptedCmp50 + 0.31163990605418 * Complain0 + 1.10957053966326 *
HigherEducationBinary0 ;
2474578   +   H1x2_2  = H1x2_2  +    -0.99409862826118 * AcceptedCmp10
2474579   +          +    -0.76360093699992 * AcceptedCmp20  +     0.82772534103696 *
2474580   +        AcceptedCmp30  +     1.74232000787449 * AcceptedCmp40
2474581   +          +    -1.37356239255127 * AcceptedCmp50  +      0.0919811154199 *
2474582   +        Complain0  +    -0.00220513515877 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.99409862826118 * AcceptedCmp10 + -0.76360093699992
* AcceptedCmp20 + 0.82772534103696 * AcceptedCmp30 + 1.74232000787449 * AcceptedCmp40 +
-1.37356239255127 * AcceptedCmp50 + 0.0919811154199 * Complain0 + -0.00220513515877 *
HigherEducationBinary0 ;
2474583   +   H1x2_3  = H1x2_3  +    -0.21003647134105 * AcceptedCmp10
2474584   +          +    -0.08930317176477 * AcceptedCmp20  +    -0.39109673162041 *
2474585   +        AcceptedCmp30  +     1.14094450038946 * AcceptedCmp40
2474586   +          +     1.26041997788848 * AcceptedCmp50  +    -0.10972130900569 *
2474587   +        Complain0  +    -0.99352598480407 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -0.21003647134105 * AcceptedCmp10 + -0.08930317176477
* AcceptedCmp20 + -0.39109673162041 * AcceptedCmp30 + 1.14094450038946 * AcceptedCmp40 +
1.26041997788848 * AcceptedCmp50 + -0.10972130900569 * Complain0 + -0.99352598480407 *
HigherEducationBinary0 ;
2474588   +   H1x2_4  = H1x2_4  +     2.02630284432093 * AcceptedCmp10
2474589   +          +    -2.50721904229276 * AcceptedCmp20  +    -1.31026450397446 *
2474590   +        AcceptedCmp30  +    -0.83440880266914 * AcceptedCmp40
2474591   +          +     -0.0570899805015 * AcceptedCmp50  +    -0.55525351434733 *
2474592   +        Complain0  +     0.27306601694081 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 2.02630284432093 * AcceptedCmp10 + -2.50721904229276 *
AcceptedCmp20 + -1.31026450397446 * AcceptedCmp30 + -0.83440880266914 * AcceptedCmp40 +
-0.0570899805015 * AcceptedCmp50 + -0.55525351434733 * Complain0 + 0.27306601694081 *
HigherEducationBinary0 ;
2474593   +   H1x2_5  = H1x2_5  +    -0.18595284227194 * AcceptedCmp10
2474594   +          +    -1.55973916517392 * AcceptedCmp20  +    -3.81563768970049 *
2474595   +        AcceptedCmp30  +    -0.09331430915239 * AcceptedCmp40
2474596   +          +     0.76128118177142 * AcceptedCmp50  +    -0.17283107047755 *
2474597   +        Complain0  +    -1.01028562804392 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + -0.18595284227194 * AcceptedCmp10 + -1.55973916517392
* AcceptedCmp20 + -3.81563768970049 * AcceptedCmp30 + -0.09331430915239 * AcceptedCmp40 +
0.76128118177142 * AcceptedCmp50 + -0.17283107047755 * Complain0 + -1.01028562804392 *
HigherEducationBinary0 ;
2474598   +   H1x2_6  = H1x2_6  +    -1.21475169836565 * AcceptedCmp10
2474599   +          +     0.28748729216575 * AcceptedCmp20  +     1.15908030413172 *
2474600   +        AcceptedCmp30  +    -0.05889528676549 * AcceptedCmp40
2474601   +          +    -0.41661363625562 * AcceptedCmp50  +    -0.77939130028952 *
2474602   +        Complain0  +     2.19510865765326 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + -1.21475169836565 * AcceptedCmp10 + 0.28748729216575 *
AcceptedCmp20 + 1.15908030413172 * AcceptedCmp30 + -0.05889528676549 * AcceptedCmp40 +
-0.41661363625562 * AcceptedCmp50 + -0.77939130028952 * Complain0 + 2.19510865765326 *
HigherEducationBinary0 ;
2474603   +   H1x2_7  = H1x2_7  +     0.87360423179644 * AcceptedCmp10
2474604   +          +    -0.47867594186426 * AcceptedCmp20  +    -0.30325818223392 *
2474605   +        AcceptedCmp30  +    -0.96085556588297 * AcceptedCmp40
2474606   +          +    -0.19693158209969 * AcceptedCmp50  +    -0.73731792634553 *
2474607   +        Complain0  +    -1.10021678806679 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_7 = H1x2_7 + 0.87360423179644 * AcceptedCmp10 + -0.47867594186426 *
AcceptedCmp20 + -0.30325818223392 * AcceptedCmp30 + -0.96085556588297 * AcceptedCmp40 +
-0.19693158209969 * AcceptedCmp50 + -0.73731792634553 * Complain0 + -1.10021678806679 *
HigherEducationBinary0 ;
2474608   +   H1x2_1  = H1x2_1  +    -1.17876013389516 * Education2n_Cycle
2474609   +          +    -0.35670434275624 * EducationBasic  +    -0.12456502068616 *
2474610   +        EducationGraduation  +     -1.0620373133508 * EducationMaster
2474611   +          +    -3.97961426831865 * Marital_StatusDivorced
2474612   +          +     0.00932639813867 * Marital_StatusMarried
2474613   +          +     1.29310186574718 * Marital_StatusSingle
2474614   +          +     1.60940802221114 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -1.17876013389516 * Education2n_Cycle +
-0.35670434275624 * EducationBasic + -0.12456502068616 * EducationGraduation +
-1.0620373133508 * EducationMaster + -3.97961426831865 * Marital_StatusDivorced +
0.00932639813867 * Marital_StatusMarried + 1.29310186574718 * Marital_StatusSingle +
1.60940802221114 * Marital_StatusTogether ;
2474615   +   H1x2_2  = H1x2_2  +     0.58497813059595 * Education2n_Cycle
2474616   +          +     0.98038586431321 * EducationBasic  +    -0.20442806724521 *
2474617   +        EducationGraduation  +     0.64973046142001 * EducationMaster
2474618   +          +    -0.30358516578188 * Marital_StatusDivorced
2474619   +          +    -0.96176709360703 * Marital_StatusMarried
2474620   +          +     1.26977690921649 * Marital_StatusSingle
2474621   +          +     -0.6681544336237 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.58497813059595 * Education2n_Cycle +
0.98038586431321 * EducationBasic + -0.20442806724521 * EducationGraduation + 0.64973046142001
* EducationMaster + -0.30358516578188 * Marital_StatusDivorced + -0.96176709360703 *
Marital_StatusMarried + 1.26977690921649 * Marital_StatusSingle + -0.6681544336237 *
Marital_StatusTogether ;
2474622   +   H1x2_3  = H1x2_3  +     0.42123479646947 * Education2n_Cycle
2474623   +          +     0.22705854674045 * EducationBasic  +     0.34794003687348 *
2474624   +        EducationGraduation  +     0.18356390207843 * EducationMaster
2474625   +          +     0.55272671490757 * Marital_StatusDivorced
2474626   +          +      0.1499239288334 * Marital_StatusMarried
2474627   +          +    -0.46840941760604 * Marital_StatusSingle
2474628   +          +     0.93706218273755 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.42123479646947 * Education2n_Cycle +
0.22705854674045 * EducationBasic + 0.34794003687348 * EducationGraduation + 0.18356390207843
* EducationMaster + 0.55272671490757 * Marital_StatusDivorced + 0.1499239288334 *
Marital_StatusMarried + -0.46840941760604 * Marital_StatusSingle + 0.93706218273755 *
Marital_StatusTogether ;
2474629   +   H1x2_4  = H1x2_4  +     0.85035585831723 * Education2n_Cycle
2474630   +          +    -0.70680576286167 * EducationBasic  +    -0.24487676912938 *
2474631   +        EducationGraduation  +    -0.33030970028481 * EducationMaster
2474632   +          +      -1.240735370138 * Marital_StatusDivorced
2474633   +          +    -1.20089294883599 * Marital_StatusMarried
2474634   +          +     0.57492674426149 * Marital_StatusSingle
2474635   +          +     1.44189292990255 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.85035585831723 * Education2n_Cycle +
-0.70680576286167 * EducationBasic + -0.24487676912938 * EducationGraduation +
-0.33030970028481 * EducationMaster + -1.240735370138 * Marital_StatusDivorced +
-1.20089294883599 * Marital_StatusMarried + 0.57492674426149 * Marital_StatusSingle +
1.44189292990255 * Marital_StatusTogether ;
2474636   +   H1x2_5  = H1x2_5  +    -0.62461434654579 * Education2n_Cycle
2474637   +          +    -0.34090423965869 * EducationBasic  +    -0.82493401834396 *
2474638   +        EducationGraduation  +    -1.09423426649553 * EducationMaster
2474639   +          +     1.05435442049802 * Marital_StatusDivorced
2474640   +          +      0.3571256349717 * Marital_StatusMarried
2474641   +          +    -0.44741267266578 * Marital_StatusSingle
2474642   +          +     0.02948931507994 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + -0.62461434654579 * Education2n_Cycle +
-0.34090423965869 * EducationBasic + -0.82493401834396 * EducationGraduation +
-1.09423426649553 * EducationMaster + 1.05435442049802 * Marital_StatusDivorced +
0.3571256349717 * Marital_StatusMarried + -0.44741267266578 * Marital_StatusSingle +
0.02948931507994 * Marital_StatusTogether ;
2474643   +   H1x2_6  = H1x2_6  +     0.09620501635178 * Education2n_Cycle
2474644   +          +    -0.54617424401993 * EducationBasic  +    -0.43305038404558 *
2474645   +        EducationGraduation  +     0.05453229059502 * EducationMaster
2474646   +          +     2.06026721980778 * Marital_StatusDivorced
2474647   +          +    -0.49583258645166 * Marital_StatusMarried
2474648   +          +    -1.14824900824474 * Marital_StatusSingle
2474649   +          +     0.57690093967839 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + 0.09620501635178 * Education2n_Cycle +
-0.54617424401993 * EducationBasic + -0.43305038404558 * EducationGraduation +
0.05453229059502 * EducationMaster + 2.06026721980778 * Marital_StatusDivorced +
-0.49583258645166 * Marital_StatusMarried + -1.14824900824474 * Marital_StatusSingle +
0.57690093967839 * Marital_StatusTogether ;
2474650   +   H1x2_7  = H1x2_7  +    -0.31251046777442 * Education2n_Cycle
2474651   +          +    -1.69272922870259 * EducationBasic  +    -0.08682253496961 *
2474652   +        EducationGraduation  +     0.58241644186309 * EducationMaster
2474653   +          +     -1.1890908607447 * Marital_StatusDivorced
2474654   +          +    -0.46668809907123 * Marital_StatusMarried
2474655   +          +     1.20342564763422 * Marital_StatusSingle
2474656   +          +    -1.75740662969578 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_7 = H1x2_7 + -0.31251046777442 * Education2n_Cycle +
-1.69272922870259 * EducationBasic + -0.08682253496961 * EducationGraduation +
0.58241644186309 * EducationMaster + -1.1890908607447 * Marital_StatusDivorced +
-0.46668809907123 * Marital_StatusMarried + 1.20342564763422 * Marital_StatusSingle +
-1.75740662969578 * Marital_StatusTogether ;
2474657   +   H1x2_1  =    -0.14973719401763 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.14973719401763 + H1x2_1 ;
2474658   +   H1x2_2  =    -0.56259582407931 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.56259582407931 + H1x2_2 ;
2474659   +   H1x2_3  =     0.42132483186492 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = 0.42132483186492 + H1x2_3 ;
2474660   +   H1x2_4  =      1.1996209421335 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 1.1996209421335 + H1x2_4 ;
2474661   +   H1x2_5  =     0.95827018478011 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 0.95827018478011 + H1x2_5 ;
2474662   +   H1x2_6  =     1.88844492435344 + H1x2_6 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = 1.88844492435344 + H1x2_6 ;
2474663   +   H1x2_7  =     0.77184516675485 + H1x2_7 ;
MPRINT(EM_DIAGRAM):   H1x2_7 = 0.77184516675485 + H1x2_7 ;
2474664   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2474665   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2474666   +   H1x2_1  = EXP(MIN(H1x2_1 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(MIN(H1x2_1 , _EXP_BAR));
2474667   +   H1x2_2  = EXP(MIN(H1x2_2 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(MIN(H1x2_2 , _EXP_BAR));
2474668   +   H1x2_3  = EXP(MIN(H1x2_3 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(MIN(H1x2_3 , _EXP_BAR));
2474669   +   H1x2_4  = EXP(MIN(H1x2_4 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(MIN(H1x2_4 , _EXP_BAR));
2474670   +   H1x2_5  = EXP(MIN(H1x2_5 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(MIN(H1x2_5 , _EXP_BAR));
2474671   +   H1x2_6  = EXP(MIN(H1x2_6 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(MIN(H1x2_6 , _EXP_BAR));
2474672   +   H1x2_7  = EXP(MIN(H1x2_7 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_7 = EXP(MIN(H1x2_7 , _EXP_BAR));
2474673   +END;
MPRINT(EM_DIAGRAM):   END;
2474674   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2474675   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
2474676   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
2474677   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
2474678   +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
2474679   +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
2474680   +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
2474681   +   H1x2_7  = .;
MPRINT(EM_DIAGRAM):   H1x2_7 = .;
2474682   +END;
MPRINT(EM_DIAGRAM):   END;
2474683   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2474684   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2474685   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2474686   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2474687   +   P_DepVar1  =     0.10431866610268 * H1x1_1  +    -0.48100701431081 * H1x1_2
2474688   +          +      1.1561061025832 * H1x1_3  +    -1.23928879501664 * H1x1_4
2474689   +          +     1.22057275321508 * H1x1_5  +     0.21972347471711 * H1x1_6
2474690   +          +    -0.98998788335495 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.10431866610268 * H1x1_1 + -0.48100701431081 * H1x1_2 +
1.1561061025832 * H1x1_3 + -1.23928879501664 * H1x1_4 + 1.22057275321508 * H1x1_5 +
0.21972347471711 * H1x1_6 + -0.98998788335495 * H1x1_7 ;
2474691   +   P_DepVar1  = P_DepVar1  + -4.9985478923183E-10 * H1x2_1
2474692   +          +   2.7724573038604E-6 * H1x2_2  +  -3.3263781208921E-6 * H1x2_3
2474693   +          +     1.90169432265E-8 * H1x2_4  +  -9.7460294571708E-9 * H1x2_5
2474694   +          +  -2.0885179583168E-6 * H1x2_6  +    3.038660449943E-8 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 + -4.9985478923183E-10 * H1x2_1 +
2.7724573038604E-6 * H1x2_2 + -3.3263781208921E-6 * H1x2_3 + 1.90169432265E-8 * H1x2_4 +
-9.7460294571708E-9 * H1x2_5 + -2.0885179583168E-6 * H1x2_6 + 3.038660449943E-8 * H1x2_7 ;
2474695   +   P_DepVar1  =    -2.34500119066237 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.34500119066237 + P_DepVar1 ;
2474696   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2474697   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2474698   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2474699   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2474700   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2474701   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2474702   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2474703   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2474704   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2474705   +END;
MPRINT(EM_DIAGRAM):   END;
2474706   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2474707   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2474708   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2474709   +END;
MPRINT(EM_DIAGRAM):   END;
2474710   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2474711   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2474712   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2474713   +END;
MPRINT(EM_DIAGRAM):   END;
2474714   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2474715   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2474716   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2474717   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2474718   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2474719   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2474720   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2474721   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2474722   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2474723   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2474724   +END;
MPRINT(EM_DIAGRAM):   END;
2474725   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2474726   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2474727   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2474728   +drop
2474729   +H1x1_1
2474730   +H1x1_2
2474731   +H1x1_3
2474732   +H1x1_4
2474733   +H1x1_5
2474734   +H1x1_6
2474735   +H1x1_7
2474736   +H1x2_1
2474737   +H1x2_2
2474738   +H1x2_3
2474739   +H1x2_4
2474740   +H1x2_5
2474741   +H1x2_6
2474742   +H1x2_7
2474743   +;
MPRINT(EM_DIAGRAM):   drop H1x1_1 H1x1_2 H1x1_3 H1x1_4 H1x1_5 H1x1_6 H1x1_7 H1x2_1 H1x2_2
H1x2_3 H1x2_4 H1x2_5 H1x2_6 H1x2_7 ;
2474744   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2474745    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2474746    quit;
2474747    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2474748    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2474749    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2474750    retain ID 2 Node "AutoNeural12";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural12";
2474751    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2474752    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4452 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4452 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2474753    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2474754    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2474755    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4452 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4452 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2474756    proc sort data=EMWS8.AutoNeural12_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural12_variableset out=_temp2(keep=NAME
CREATOR);
2474757    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2474758    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL12_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
The SAS System
 
 
2474759    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2474760    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2474761    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2474762    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2474763    proc contents data=EMWS8.AutoNeural12_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural12_train out=_meta(keep=NAME) noprint;
2474764    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
2474765    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2474766    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2474767    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2474768    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2474769    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2474770    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2474771    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2474772    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2474773    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2474773  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 2199 rows and 5 columns.
 
2474774    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2474775    proc append base=EMWS8.Ensmbl46_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl46_FCMP data=_tempx;
2474776    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL46_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 2199 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL46_FCMP has 2199 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2474777    filename _pref
2474777  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
2474778    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2474779    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
2474780   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2474781   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
2474782   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2474783   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
2474784   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
2474785   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2474786    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2474787    quit;
2474788    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2474789    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2474790    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2474791    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
2474792    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2474793    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2474794    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2474795    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2474796    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2474797    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
2474798    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2474799    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2474800    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2474801    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2474802    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2474803    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2474804    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
2474805    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
2474806    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2474807    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2474808    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2474809    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2474810    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2474811    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2474812    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2474813    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2474814    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2474814  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
2474815    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2474816    proc append base=EMWS8.Ensmbl46_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl46_FCMP data=_tempx;
2474817    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL46_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL46_FCMP has 2203 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2474818    filename _pref
2474818  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
2474819    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2474820    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
2474821   +
2474822   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
2474823   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
2474823  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
2474824   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
2474825   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
2474826   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
2474827   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
2474828   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2474829    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2474830    quit;
2474831    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2474832    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2474833    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2474834    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
2474835    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2474836    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2474837    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2474838    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2474839    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2474840    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
2474841    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2474842    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2474843    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2474844    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2474845    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2474846    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2474847    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
2474848    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2474849    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2474850    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2474851    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2474852    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2474853    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2474854    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2474855    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2474856    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2474857    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2474857  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
2474858    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2474859    proc append base=EMWS8.Ensmbl46_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl46_FCMP data=_tempx;
2474860    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL46_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL46_FCMP has 2242 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2474861    filename _pref
2474861  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
2474862    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2474863    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
2474864   +
2474865   +
2474866   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
2474867   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
2474868   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
2474869   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
2474870   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
2474871   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2474872   +
2474873   +
2474874   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
2474875   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
2474876   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
2474877   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
2474878   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
2474879   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2474880   +
2474881   +
2474882   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
2474883   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
2474884   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
2474885   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
2474886   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
2474887   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2474888   +
2474889   +
2474890   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
2474891   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
2474892   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
2474893   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
2474894   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
2474895   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2474896   +
2474897   +
2474898   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
2474899   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
2474900   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
2474901   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
2474902   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
2474903   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2474904   +
2474905   +
2474906   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
2474907   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
2474908   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
2474909   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
2474910   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
2474911   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2474912   +
2474913   +
2474914   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
2474915   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
2474916   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
2474917   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
2474918   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
2474919   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2474920   +
2474921   +
2474922   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
2474923   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
2474924   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
2474925   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
2474926   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
2474927   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2474928   +if
2474929   +_FILTERNORM1 not in ( '.')
2474930   + and
2474931   +_FILTERNORM2 not in ( '.')
2474932   + and
2474933   +_FILTERNORM3 not in ( '.')
2474934   + and
2474935   +_FILTERNORM4 not in ( '.')
2474936   + and
2474937   +_FILTERNORM5 not in ( '.')
2474938   + and
2474939   +_FILTERNORM6 not in ( '.')
2474940   + and
2474941   +_FILTERNORM7 not in ( ' ')
2474942   + and
2474943   +_FILTERNORM8 not in ( ' ')
2474944   +and
2474945   +( Dt_Customer ne .)
2474946   +and ( Income ne . and (Income<=107000))
2474947   +and ( Kidhome ne .)
2474948   +and ( MntFishProducts ne .)
2474949   +and ( MntFruits ne .)
2474950   +and ( MntGoldProds ne .)
2474951   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
2474952   +and ( MntSweetProducts ne .)
2474953   +and ( MntWines ne .)
2474954   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
2474955   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
2474956   +and ( NumStorePurchases ne .)
2474957   +and ( NumWebPurchases ne .)
2474958   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
2474959   +and ( Recency ne .)
2474960   +and ( Teenhome ne .)
2474961   +and ( Year_Birth ne .)
2474962   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
2474963   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
2474964   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
2474965   +end;
MPRINT(EM_DIAGRAM):   end;
2474966   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
2474967   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2474968    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2474969    quit;
2474970    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2474971    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2474972    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2474973    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
2474974    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2474975    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2474976    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2474977    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2474978    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2474979    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
2474980    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2474981    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2474982    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2474983    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2474984    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2474985    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2474986    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
2474987    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
2474988    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2474989    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2474990    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2474991    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2474992    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2474993    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2474994    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2474995    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2474996    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2474996  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
2474997    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2474998    proc append base=EMWS8.Ensmbl46_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl46_FCMP data=_tempx;
2474999    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL46_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL46_FCMP has 2308 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2475000    %macro varDept(fcmpdata=,id=);
2475001    %global nobs&id scoreFlag&id;
2475002    %let scoreFlag&id = 0;
2475003    %if &id=1 or ^&fcmpStart %then %do;
2475004    proc sort data=&fcmpdata out=_temp&id nodupkey;
2475005    by NAME;
2475006    where id=&id and LHS in( %let j=1;
2475007    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
2475008    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
2475009    "&var" %let j = %eval(&j+1);
2475010    %end;
2475011    );
2475012    run;
2475013    %let dsid = %sysfunc(open(_temp&id));
2475014    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2475015    %let dsid = %sysfunc(close(&dsid));
2475016    %if &&nobs&id %then %do;
2475017    %let scoreFlag&id = 1;
2475018    %let fcmpStart = 1;
2475019    %end;
2475020    %else %let fcmpStart = 0;
2475021    %end;
2475022    %else %do;
2475023    proc sort data=&fcmpdata out=_tempid;
2475024    where id=&id;
2475025    by LHS;
2475026    run;
2475027    %let dsid = %sysfunc(open(_tempid));
2475028    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2475029    %let dsid = %sysfunc(close(&dsid));
2475030    %if ^&&nobs&id %then %do;
2475031    proc datasets lib=work nolist;
2475032    delete _tempid;
2475033    run;
2475034    quit;
2475035    %end;
2475036    %else %do;
2475037    data _tempAll;
2475038    set %let j=%eval(&id-1);
2475039    %do x=1 %to &j;
2475040    %if &&nobs&x %then %do;
2475041    _temp&x %end;
2475042    %end;
2475043    ;
2475044    run;
2475045    proc sql;
2475046    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
2475046  ! work._tempid p2 where p.name=p2.lhs;
2475047    quit;
2475048    data _temp&id;
2475049    set _temp&id;
2475050    where LHS ne '' and NAME ne '' and Node ne '';
2475051    run;
2475052    proc datasets lib=work nolist;
2475053    delete _tempAll;
2475054    run;
2475055    %let dsid = %sysfunc(open(_temp&id));
2475056    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2475057    %let dsid = %sysfunc(close(&dsid));
2475058    %if ^&&nobs&id %then %do;
2475059    proc datasets lib=work nolist;
2475060    delete _temp&id;
2475061    run;
2475062    quit;
2475063    %end;
2475064    %else %do;
2475065    %let scoreFlag&id = 1;
2475066    data _temp&id;
2475067    set _temp&id;
2475068    where LHS ne NAME and node ne '';
2475069    run;
2475070    %let dsid = %sysfunc(open(_temp&id));
2475071    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2475072    %let dsid = %sysfunc(close(&dsid));
2475073    %if ^&&nobs&id %then %do;
2475074    proc datasets lib=work nolist;
2475075    delete _temp&id;
2475076    run;
2475077    quit;
2475078    %end;
2475079    %else %do;
2475080    proc sort data=_temp&id nodupkey;
2475081    by LHS NAME;
2475082    run;
2475083    %end;
2475084    %end;
2475085    %end;
2475086    %end;
2475087    %mend varDept;
2475088    %macro optCode(outdata=fcmpdata);
2475089    %global fcmpStart;
2475090    %let fcmpStart = 0;
2475091    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
2475092    %let NumNodes=9;
2475093    %do k=1 %to &NumNodes;
2475094    %vardept(fcmpdata=&outdata, id=&k);
2475095    %end;
2475096    %mend optCode;
2475097    %optcode(outData=EMWS8.Ensmbl46_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl46_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL46_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl46_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 134 observations read from the data set EMWS8.ENSMBL46_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 100 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 34 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl46_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL46_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl46_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL46_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl46_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL46_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 34 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl46_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL46_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 38 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl46_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL46_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 77 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl46_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL46_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl46_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL46_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.06 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
2475098    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
2475099    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
2475100    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
2475101    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2475102    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
2475103    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
2475104    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
2475105    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2475106    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2475107    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
2475107  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.
 
2475108    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2475109    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
2475110    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
2475111    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2475112    filename _pref
2475112  ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural7\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural7\EMPUBLISHSCORE.sas";
2475113    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2475114    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural7\EMPUBLISHSCORE.sas.
2475115   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2475116   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2475117   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2475118   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2475119   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2475120   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2475121   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2475122   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2475123   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2475124   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2475125   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2475126   +LENGTH _WARN_ $4
2475127   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
2475128   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2475129   +
2475130   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2475131   +
2475132   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2475133   +
2475134   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2475135   +
2475136   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2475137   +
2475138   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2475139   +
2475140   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2475141   +
2475142   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2475143   +
2475144   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2475145   +
2475146   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2475147   +
2475148   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2475149   +
2475150   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2475151   +
2475152   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2475153   +
2475154   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2475155   +
2475156   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2475157   +
2475158   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2475159   +
2475160   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2475161   +
2475162   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2475163   +
2475164   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2475165   +
2475166   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2475167   +
2475168   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2475169   +
2475170   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2475171   +
2475172   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2475173   +
2475174   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2475175   +
2475176   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2475177   +
2475178   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2475179   +
2475180   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2475181   +
2475182   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2475183   +
2475184   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2475185   +
2475186   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2475187   +
2475188   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2475189   +
2475190   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2475191   +
2475192   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2475193   +
2475194   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2475195   +
2475196   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2475197   +
2475198   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2475199   +
2475200   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2475201   +
2475202   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2475203   +
2475204   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2475205   +
2475206   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2475207   +
2475208   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
2475209   +
2475210   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
2475211   +
2475212   +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
2475213   +
2475214   +      label H1x3_2 = 'Hidden: H1x3_=2' ;
MPRINT(EM_DIAGRAM):   label H1x3_2 = 'Hidden: H1x3_=2' ;
2475215   +
2475216   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2475217   +
2475218   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2475219   +
2475220   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2475221   +
2475222   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2475223   +
2475224   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2475225   +
2475226   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2475227   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2475228   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2475229   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2475230   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2475231   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2475232   +end;
MPRINT(EM_DIAGRAM):   end;
2475233   +else do;
MPRINT(EM_DIAGRAM):   else do;
2475234   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2475235   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2475236   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2475237   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2475238   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2475239   +   end;
MPRINT(EM_DIAGRAM):   end;
2475240   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2475241   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2475242   +   end;
MPRINT(EM_DIAGRAM):   end;
2475243   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2475244   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2475245   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2475246   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2475247   +   end;
MPRINT(EM_DIAGRAM):   end;
2475248   +end;
MPRINT(EM_DIAGRAM):   end;
2475249   +
2475250   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2475251   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2475252   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2475253   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2475254   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2475255   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2475256   +end;
MPRINT(EM_DIAGRAM):   end;
2475257   +else do;
MPRINT(EM_DIAGRAM):   else do;
2475258   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2475259   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2475260   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2475261   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2475262   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2475263   +   end;
MPRINT(EM_DIAGRAM):   end;
2475264   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2475265   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2475266   +   end;
MPRINT(EM_DIAGRAM):   end;
2475267   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2475268   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2475269   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2475270   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2475271   +   end;
MPRINT(EM_DIAGRAM):   end;
2475272   +end;
MPRINT(EM_DIAGRAM):   end;
2475273   +
2475274   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2475275   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2475276   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2475277   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2475278   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2475279   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2475280   +end;
MPRINT(EM_DIAGRAM):   end;
2475281   +else do;
MPRINT(EM_DIAGRAM):   else do;
2475282   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2475283   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2475284   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2475285   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2475286   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2475287   +   end;
MPRINT(EM_DIAGRAM):   end;
2475288   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2475289   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2475290   +   end;
MPRINT(EM_DIAGRAM):   end;
2475291   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2475292   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2475293   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2475294   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2475295   +   end;
MPRINT(EM_DIAGRAM):   end;
2475296   +end;
MPRINT(EM_DIAGRAM):   end;
2475297   +
2475298   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2475299   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2475300   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2475301   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2475302   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2475303   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2475304   +end;
MPRINT(EM_DIAGRAM):   end;
2475305   +else do;
MPRINT(EM_DIAGRAM):   else do;
2475306   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2475307   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2475308   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2475309   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2475310   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2475311   +   end;
MPRINT(EM_DIAGRAM):   end;
2475312   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2475313   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2475314   +   end;
MPRINT(EM_DIAGRAM):   end;
2475315   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2475316   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2475317   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2475318   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2475319   +   end;
MPRINT(EM_DIAGRAM):   end;
2475320   +end;
MPRINT(EM_DIAGRAM):   end;
2475321   +
2475322   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2475323   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2475324   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2475325   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2475326   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2475327   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2475328   +end;
MPRINT(EM_DIAGRAM):   end;
2475329   +else do;
MPRINT(EM_DIAGRAM):   else do;
2475330   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2475331   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2475332   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2475333   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2475334   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2475335   +   end;
MPRINT(EM_DIAGRAM):   end;
2475336   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2475337   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2475338   +   end;
MPRINT(EM_DIAGRAM):   end;
2475339   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2475340   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2475341   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2475342   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2475343   +   end;
MPRINT(EM_DIAGRAM):   end;
2475344   +end;
MPRINT(EM_DIAGRAM):   end;
2475345   +
2475346   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2475347   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2475348   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2475349   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2475350   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2475351   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2475352   +end;
MPRINT(EM_DIAGRAM):   end;
2475353   +else do;
MPRINT(EM_DIAGRAM):   else do;
2475354   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2475355   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2475356   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2475357   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2475358   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2475359   +   end;
MPRINT(EM_DIAGRAM):   end;
2475360   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2475361   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2475362   +   end;
MPRINT(EM_DIAGRAM):   end;
2475363   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2475364   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2475365   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2475366   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2475367   +   end;
MPRINT(EM_DIAGRAM):   end;
2475368   +end;
MPRINT(EM_DIAGRAM):   end;
2475369   +
2475370   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2475371   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2475372   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2475373   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2475374   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2475375   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2475376   +end;
MPRINT(EM_DIAGRAM):   end;
2475377   +else do;
MPRINT(EM_DIAGRAM):   else do;
2475378   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2475379   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2475380   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2475381   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2475382   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2475383   +   end;
MPRINT(EM_DIAGRAM):   end;
2475384   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2475385   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2475386   +   end;
MPRINT(EM_DIAGRAM):   end;
2475387   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2475388   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2475389   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2475390   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2475391   +   end;
MPRINT(EM_DIAGRAM):   end;
2475392   +end;
MPRINT(EM_DIAGRAM):   end;
2475393   +
2475394   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2475395   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
2475396   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2475397   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2475398   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2475399   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2475400   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2475401   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2475402   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2475403   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2475404   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2475405   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2475406   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2475407   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2475408   +end;
MPRINT(EM_DIAGRAM):   end;
2475409   +else do;
MPRINT(EM_DIAGRAM):   else do;
2475410   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2475411   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2475412   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2475413   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2475414   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2475415   +   end;
MPRINT(EM_DIAGRAM):   end;
2475416   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2475417   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2475418   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2475419   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2475420   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2475421   +   end;
MPRINT(EM_DIAGRAM):   end;
2475422   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2475423   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2475424   +   end;
MPRINT(EM_DIAGRAM):   end;
2475425   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2475426   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2475427   +   end;
MPRINT(EM_DIAGRAM):   end;
2475428   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2475429   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2475430   +   end;
MPRINT(EM_DIAGRAM):   end;
2475431   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2475432   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2475433   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2475434   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2475435   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2475436   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2475437   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2475438   +   end;
MPRINT(EM_DIAGRAM):   end;
2475439   +end;
MPRINT(EM_DIAGRAM):   end;
2475440   +
2475441   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2475442   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2475443   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
2475444   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2475445   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2475446   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2475447   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2475448   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2475449   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2475450   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2475451   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2475452   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2475453   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2475454   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2475455   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2475456   +end;
MPRINT(EM_DIAGRAM):   end;
2475457   +else do;
MPRINT(EM_DIAGRAM):   else do;
2475458   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2475459   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2475460   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2475461   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2475462   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2475463   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2475464   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2475465   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2475466   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2475467   +         end;
MPRINT(EM_DIAGRAM):   end;
2475468   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2475469   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2475470   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2475471   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2475472   +            end;
MPRINT(EM_DIAGRAM):   end;
2475473   +         end;
MPRINT(EM_DIAGRAM):   end;
2475474   +      end;
MPRINT(EM_DIAGRAM):   end;
2475475   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2475476   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2475477   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2475478   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2475479   +         end;
MPRINT(EM_DIAGRAM):   end;
2475480   +      end;
MPRINT(EM_DIAGRAM):   end;
2475481   +   end;
MPRINT(EM_DIAGRAM):   end;
2475482   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2475483   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2475484   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2475485   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2475486   +      end;
MPRINT(EM_DIAGRAM):   end;
2475487   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2475488   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2475489   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2475490   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2475491   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2475492   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2475493   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2475494   +         end;
MPRINT(EM_DIAGRAM):   end;
2475495   +      end;
MPRINT(EM_DIAGRAM):   end;
2475496   +   end;
MPRINT(EM_DIAGRAM):   end;
2475497   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2475498   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2475499   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2475500   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2475501   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2475502   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2475503   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2475504   +   end;
MPRINT(EM_DIAGRAM):   end;
2475505   +end;
MPRINT(EM_DIAGRAM):   end;
2475506   +
2475507   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2475508   +*** Checking missing input Interval
2475509   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2475510   +
2475511   +IF NMISS(
2475512   +   AcceptedCmpTotal ,
2475513   +   Age ,
2475514   +   Frq ,
2475515   +   Income ,
2475516   +   Kidhome ,
2475517   +   Mnt ,
2475518   +   MntFishProducts ,
2475519   +   MntFruits ,
2475520   +   MntGoldProds ,
2475521   +   MntMeatProducts ,
2475522   +   MntSweetProducts ,
2475523   +   MntWines ,
2475524   +   MonthsAsCustomer ,
2475525   +   NumCatalogPurchases ,
2475526   +   NumDealsPurchases ,
2475527   +   NumDistPurchases ,
2475528   +   NumStorePurchases ,
2475529   +   NumWebPurchases ,
2475530   +   NumWebVisitsMonth ,
2475531   +   RFMstat ,
2475532   +   RMntFrq ,
2475533   +   Recency ,
2475534   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
2475535   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2475536   +
2475537   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2475538   +END;
MPRINT(EM_DIAGRAM):   END;
2475539   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2475540   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2475541   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2475542   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2475543   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2475544   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2475545   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2475546   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2475547   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2475548   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2475549   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2475550   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2475551   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2475552   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2475553   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2475554   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2475555   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2475556   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2475557   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2475558   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2475559   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2475560   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2475561   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
2475562   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2475563   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2475564   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2475565   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2475566   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2475567   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2475568   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2475569   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2475570   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2475571   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2475572   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2475573   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2475574   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2475575   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2475576   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2475577   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2475578   +END;
MPRINT(EM_DIAGRAM):   END;
2475579   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2475580   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2475581   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2475582   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2475583   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2475584   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2475585   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2475586   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2475587   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2475588   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2475589   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2475590   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2475591   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2475592   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2475593   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2475594   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2475595   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2475596   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2475597   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2475598   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2475599   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2475600   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2475601   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
2475602   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2475603   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2475604   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2475605   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2475606   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2475607   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2475608   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2475609   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2475610   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2475611   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2475612   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
2475613   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2475614   +   ELSE S_NumCatalogPurchases
2475615   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2475616   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2475617   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2475618   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2475619   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2475620   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2475621   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2475622   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2475623   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2475624   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2475625   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2475626   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2475627   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2475628   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2475629   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2475630   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2475631   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2475632   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2475633   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2475634   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2475635   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2475636   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2475637   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2475638   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2475639   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2475640   +END;
MPRINT(EM_DIAGRAM):   END;
2475641   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2475642   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2475643   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2475644   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2475645   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2475646   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2475647   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2475648   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2475649   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2475650   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2475651   +   H1x1_1  =     0.26454269681311 * S_AcceptedCmpTotal
2475652   +          +    -0.01281904987956 * S_Age  +    -0.19309516267581 * S_Frq
2475653   +          +    -0.19077579202378 * S_Income  +      0.1806651018562 *
2475654   +        S_Kidhome  +    -0.31002612826472 * S_Mnt  +    -0.05901796512011 *
2475655   +        S_MntFishProducts  +    -0.03760930101165 * S_MntFruits
2475656   +          +     0.01720900715043 * S_MntGoldProds  +     0.21472292961422 *
2475657   +        S_MntMeatProducts  +    -0.02880706568684 * S_MntSweetProducts
2475658   +          +    -0.37993583170844 * S_MntWines  +    -0.00848444156361 *
2475659   +        S_MonthsAsCustomer  +     0.15939611818942 * S_NumCatalogPurchases
2475660   +          +     0.08390531145773 * S_NumDealsPurchases
2475661   +          +    -0.29505970645775 * S_NumDistPurchases
2475662   +          +    -0.13820571170194 * S_NumStorePurchases
2475663   +          +     0.11468011313368 * S_NumWebPurchases
2475664   +          +    -0.18421241371843 * S_NumWebVisitsMonth
2475665   +          +     0.11564064971509 * S_RFMstat  +    -0.02223928001432 *
2475666   +        S_RMntFrq  +     0.18022777532589 * S_Recency
2475667   +          +     0.14654831145379 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.26454269681311 * S_AcceptedCmpTotal + -0.01281904987956 *
S_Age + -0.19309516267581 * S_Frq + -0.19077579202378 * S_Income + 0.1806651018562 * S_Kidhome
+ -0.31002612826472 * S_Mnt + -0.05901796512011 * S_MntFishProducts + -0.03760930101165 *
S_MntFruits + 0.01720900715043 * S_MntGoldProds + 0.21472292961422 * S_MntMeatProducts +
-0.02880706568684 * S_MntSweetProducts + -0.37993583170844 * S_MntWines + -0.00848444156361 *
S_MonthsAsCustomer + 0.15939611818942 * S_NumCatalogPurchases + 0.08390531145773 *
S_NumDealsPurchases + -0.29505970645775 * S_NumDistPurchases + -0.13820571170194 *
S_NumStorePurchases + 0.11468011313368 * S_NumWebPurchases + -0.18421241371843 *
S_NumWebVisitsMonth + 0.11564064971509 * S_RFMstat + -0.02223928001432 * S_RMntFrq +
0.18022777532589 * S_Recency + 0.14654831145379 * S_Teenhome ;
2475668   +   H1x1_2  =     0.27055972468014 * S_AcceptedCmpTotal
2475669   +          +      0.0025862891193 * S_Age  +    -0.07147307366817 * S_Frq
2475670   +          +      0.1883776136263 * S_Income  +    -0.12712510891181 *
2475671   +        S_Kidhome  +    -0.42099927948686 * S_Mnt  +    -0.07047631817862 *
2475672   +        S_MntFishProducts  +    -0.06658475152878 * S_MntFruits
2475673   +          +     0.01943025682869 * S_MntGoldProds  +     0.29481794109465 *
2475674   +        S_MntMeatProducts  +    -0.06573502094591 * S_MntSweetProducts
2475675   +          +    -0.46266722725002 * S_MntWines  +    -0.00472333181469 *
2475676   +        S_MonthsAsCustomer  +     0.35081452017576 * S_NumCatalogPurchases
2475677   +          +     0.18009076035363 * S_NumDealsPurchases
2475678   +          +     0.03853861006587 * S_NumDistPurchases
2475679   +          +    -0.05118063952874 * S_NumStorePurchases
2475680   +          +    -0.03282286120473 * S_NumWebPurchases
2475681   +          +     0.31160900419026 * S_NumWebVisitsMonth
2475682   +          +     0.08027884378429 * S_RFMstat  +     0.39057239541393 *
2475683   +        S_RMntFrq  +    -0.34796767111274 * S_Recency
2475684   +          +    -0.12099758522271 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.27055972468014 * S_AcceptedCmpTotal + 0.0025862891193 * S_Age
+ -0.07147307366817 * S_Frq + 0.1883776136263 * S_Income + -0.12712510891181 * S_Kidhome +
-0.42099927948686 * S_Mnt + -0.07047631817862 * S_MntFishProducts + -0.06658475152878 *
S_MntFruits + 0.01943025682869 * S_MntGoldProds + 0.29481794109465 * S_MntMeatProducts +
-0.06573502094591 * S_MntSweetProducts + -0.46266722725002 * S_MntWines + -0.00472333181469 *
S_MonthsAsCustomer + 0.35081452017576 * S_NumCatalogPurchases + 0.18009076035363 *
S_NumDealsPurchases + 0.03853861006587 * S_NumDistPurchases + -0.05118063952874 *
S_NumStorePurchases + -0.03282286120473 * S_NumWebPurchases + 0.31160900419026 *
S_NumWebVisitsMonth + 0.08027884378429 * S_RFMstat + 0.39057239541393 * S_RMntFrq +
-0.34796767111274 * S_Recency + -0.12099758522271 * S_Teenhome ;
2475685   +   H1x1_1  = H1x1_1  +     0.12539246465239 * AcceptedCmp10
2475686   +          +     0.38473652869745 * AcceptedCmp20  +     0.29820983391886 *
2475687   +        AcceptedCmp30  +     0.29085092779792 * AcceptedCmp40
2475688   +          +     0.18918195914981 * AcceptedCmp50  +    -0.26812516781697 *
2475689   +        Complain0  +    -0.08804110897148 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.12539246465239 * AcceptedCmp10 + 0.38473652869745 *
AcceptedCmp20 + 0.29820983391886 * AcceptedCmp30 + 0.29085092779792 * AcceptedCmp40 +
0.18918195914981 * AcceptedCmp50 + -0.26812516781697 * Complain0 + -0.08804110897148 *
HigherEducationBinary0 ;
2475690   +   H1x1_2  = H1x1_2  +    -0.02312897825565 * AcceptedCmp10
2475691   +          +     0.03909481703523 * AcceptedCmp20  +     0.02531081539721 *
2475692   +        AcceptedCmp30  +     0.03109641300151 * AcceptedCmp40
2475693   +          +     0.01985718189621 * AcceptedCmp50  +     0.13425456375085 *
2475694   +        Complain0  +    -0.08222486590117 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.02312897825565 * AcceptedCmp10 + 0.03909481703523 *
AcceptedCmp20 + 0.02531081539721 * AcceptedCmp30 + 0.03109641300151 * AcceptedCmp40 +
0.01985718189621 * AcceptedCmp50 + 0.13425456375085 * Complain0 + -0.08222486590117 *
HigherEducationBinary0 ;
2475695   +   H1x1_1  = H1x1_1  +    -0.01975862863669 * Education2n_Cycle
2475696   +          +     0.14654730697956 * EducationBasic  +    -0.00459515646452 *
2475697   +        EducationGraduation  +     0.01586948449127 * EducationMaster
2475698   +          +    -0.04750981393889 * Marital_StatusDivorced
2475699   +          +     0.28216925676677 * Marital_StatusMarried
2475700   +          +    -0.20757827413964 * Marital_StatusSingle
2475701   +          +     0.22622509024122 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.01975862863669 * Education2n_Cycle +
0.14654730697956 * EducationBasic + -0.00459515646452 * EducationGraduation + 0.01586948449127
* EducationMaster + -0.04750981393889 * Marital_StatusDivorced + 0.28216925676677 *
Marital_StatusMarried + -0.20757827413964 * Marital_StatusSingle + 0.22622509024122 *
Marital_StatusTogether ;
2475702   +   H1x1_2  = H1x1_2  +     0.12009608969049 * Education2n_Cycle
2475703   +          +     0.01793460710056 * EducationBasic  +    -0.04257710051346 *
2475704   +        EducationGraduation  +    -0.06975725710115 * EducationMaster
2475705   +          +     0.05981919620577 * Marital_StatusDivorced
2475706   +          +    -0.17161573846062 * Marital_StatusMarried
2475707   +          +     0.15869440681091 * Marital_StatusSingle
2475708   +          +    -0.13282372850158 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.12009608969049 * Education2n_Cycle +
0.01793460710056 * EducationBasic + -0.04257710051346 * EducationGraduation +
-0.06975725710115 * EducationMaster + 0.05981919620577 * Marital_StatusDivorced +
-0.17161573846062 * Marital_StatusMarried + 0.15869440681091 * Marital_StatusSingle +
-0.13282372850158 * Marital_StatusTogether ;
2475709   +   H1x1_1  =     0.87962277715971 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.87962277715971 + H1x1_1 ;
2475710   +   H1x1_2  =    -0.62570339696782 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.62570339696782 + H1x1_2 ;
2475711   +   H1x1_1  = SIN(H1x1_1 );
MPRINT(EM_DIAGRAM):   H1x1_1 = SIN(H1x1_1 );
2475712   +   H1x1_2  = SIN(H1x1_2 );
MPRINT(EM_DIAGRAM):   H1x1_2 = SIN(H1x1_2 );
2475713   +END;
MPRINT(EM_DIAGRAM):   END;
2475714   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2475715   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2475716   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2475717   +END;
MPRINT(EM_DIAGRAM):   END;
2475718   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2475719   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
2475720   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2475721   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2475722   +   H1x2_1  =      0.1719390672121 * S_AcceptedCmpTotal
2475723   +          +     0.23586839288361 * S_Age  +    -1.85384134180372 * S_Frq
2475724   +          +    -0.43561758063577 * S_Income  +     -2.5581498901473 *
2475725   +        S_Kidhome  +      1.7031888248428 * S_Mnt  +     0.84982621124736 *
2475726   +        S_MntFishProducts  +     0.25990173458485 * S_MntFruits
2475727   +          +    -2.80730469703961 * S_MntGoldProds  +     0.64923500711702 *
2475728   +        S_MntMeatProducts  +     0.27458645458502 * S_MntSweetProducts
2475729   +          +    -0.47723589182372 * S_MntWines  +    -0.66777488145507 *
2475730   +        S_MonthsAsCustomer  +    -0.46364414558282 * S_NumCatalogPurchases
2475731   +          +     0.00741910846933 * S_NumDealsPurchases
2475732   +          +       1.334289252268 * S_NumDistPurchases
2475733   +          +    -0.29851567180932 * S_NumStorePurchases
2475734   +          +    -0.52115313259666 * S_NumWebPurchases
2475735   +          +     0.93907168501909 * S_NumWebVisitsMonth
2475736   +          +    -0.26126881318451 * S_RFMstat  +     -1.3003763542929 *
2475737   +        S_RMntFrq  +    -0.12807368149309 * S_Recency
2475738   +          +    -0.21296116974623 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.1719390672121 * S_AcceptedCmpTotal + 0.23586839288361 * S_Age
+ -1.85384134180372 * S_Frq + -0.43561758063577 * S_Income + -2.5581498901473 * S_Kidhome +
1.7031888248428 * S_Mnt + 0.84982621124736 * S_MntFishProducts + 0.25990173458485 *
S_MntFruits + -2.80730469703961 * S_MntGoldProds + 0.64923500711702 * S_MntMeatProducts +
0.27458645458502 * S_MntSweetProducts + -0.47723589182372 * S_MntWines + -0.66777488145507 *
S_MonthsAsCustomer + -0.46364414558282 * S_NumCatalogPurchases + 0.00741910846933 *
S_NumDealsPurchases + 1.334289252268 * S_NumDistPurchases + -0.29851567180932 *
S_NumStorePurchases + -0.52115313259666 * S_NumWebPurchases + 0.93907168501909 *
S_NumWebVisitsMonth + -0.26126881318451 * S_RFMstat + -1.3003763542929 * S_RMntFrq +
-0.12807368149309 * S_Recency + -0.21296116974623 * S_Teenhome ;
2475739   +   H1x2_2  =     0.30897763700303 * S_AcceptedCmpTotal
2475740   +          +    -0.77727886396317 * S_Age  +    -0.79298582494973 * S_Frq
2475741   +          +    -1.73199353738093 * S_Income  +     1.12984956989288 *
2475742   +        S_Kidhome  +    -1.36701096993984 * S_Mnt  +    -0.21063950702424 *
2475743   +        S_MntFishProducts  +    -0.20027336686257 * S_MntFruits
2475744   +          +    -0.06955810418489 * S_MntGoldProds  +     0.16672767423533 *
2475745   +        S_MntMeatProducts  +    -1.56675269740541 * S_MntSweetProducts
2475746   +          +     1.85366479127485 * S_MntWines  +    -0.58178621903094 *
2475747   +        S_MonthsAsCustomer  +     1.31024619253935 * S_NumCatalogPurchases
2475748   +          +     1.60427001186844 * S_NumDealsPurchases
2475749   +          +    -0.18447618033353 * S_NumDistPurchases
2475750   +          +    -1.29966073003539 * S_NumStorePurchases
2475751   +          +    -1.12373457341536 * S_NumWebPurchases
2475752   +          +     1.46099221440494 * S_NumWebVisitsMonth
2475753   +          +     0.17795038564406 * S_RFMstat  +    -0.82372068140832 *
2475754   +        S_RMntFrq  +      0.4480370534729 * S_Recency
2475755   +          +     0.19272737691538 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.30897763700303 * S_AcceptedCmpTotal + -0.77727886396317 *
S_Age + -0.79298582494973 * S_Frq + -1.73199353738093 * S_Income + 1.12984956989288 *
S_Kidhome + -1.36701096993984 * S_Mnt + -0.21063950702424 * S_MntFishProducts +
-0.20027336686257 * S_MntFruits + -0.06955810418489 * S_MntGoldProds + 0.16672767423533 *
S_MntMeatProducts + -1.56675269740541 * S_MntSweetProducts + 1.85366479127485 * S_MntWines +
-0.58178621903094 * S_MonthsAsCustomer + 1.31024619253935 * S_NumCatalogPurchases +
1.60427001186844 * S_NumDealsPurchases + -0.18447618033353 * S_NumDistPurchases +
-1.29966073003539 * S_NumStorePurchases + -1.12373457341536 * S_NumWebPurchases +
1.46099221440494 * S_NumWebVisitsMonth + 0.17795038564406 * S_RFMstat + -0.82372068140832 *
S_RMntFrq + 0.4480370534729 * S_Recency + 0.19272737691538 * S_Teenhome ;
2475756   +   H1x2_1  = H1x2_1  +     -0.6569942252053 * AcceptedCmp10
2475757   +          +    -0.89152555599538 * AcceptedCmp20  +     1.00488730476017 *
2475758   +        AcceptedCmp30  +     0.34286042692068 * AcceptedCmp40
2475759   +          +    -1.19198820362508 * AcceptedCmp50  +    -0.86571531914686 *
2475760   +        Complain0  +     0.14303136037365 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.6569942252053 * AcceptedCmp10 + -0.89152555599538 *
AcceptedCmp20 + 1.00488730476017 * AcceptedCmp30 + 0.34286042692068 * AcceptedCmp40 +
-1.19198820362508 * AcceptedCmp50 + -0.86571531914686 * Complain0 + 0.14303136037365 *
HigherEducationBinary0 ;
2475761   +   H1x2_2  = H1x2_2  +     1.79481763784518 * AcceptedCmp10
2475762   +          +    -2.85912280013336 * AcceptedCmp20  +     0.16890012708431 *
2475763   +        AcceptedCmp30  +     0.94639083182751 * AcceptedCmp40
2475764   +          +    -0.62141828005946 * AcceptedCmp50  +    -0.39098882491277 *
2475765   +        Complain0  +     0.85700787946581 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 1.79481763784518 * AcceptedCmp10 + -2.85912280013336 *
AcceptedCmp20 + 0.16890012708431 * AcceptedCmp30 + 0.94639083182751 * AcceptedCmp40 +
-0.62141828005946 * AcceptedCmp50 + -0.39098882491277 * Complain0 + 0.85700787946581 *
HigherEducationBinary0 ;
2475766   +   H1x2_1  = H1x2_1  +      0.0737054452993 * Education2n_Cycle
2475767   +          +       0.362372261752 * EducationBasic  +      -1.485941295677 *
2475768   +        EducationGraduation  +    -0.81257694655594 * EducationMaster
2475769   +          +     0.59819559998538 * Marital_StatusDivorced
2475770   +          +     0.92957772553633 * Marital_StatusMarried
2475771   +          +    -1.11796266958894 * Marital_StatusSingle
2475772   +          +     -2.0576132087002 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 0.0737054452993 * Education2n_Cycle + 0.362372261752 *
EducationBasic + -1.485941295677 * EducationGraduation + -0.81257694655594 * EducationMaster +
0.59819559998538 * Marital_StatusDivorced + 0.92957772553633 * Marital_StatusMarried +
-1.11796266958894 * Marital_StatusSingle + -2.0576132087002 * Marital_StatusTogether ;
2475773   +   H1x2_2  = H1x2_2  +    -1.10016528859962 * Education2n_Cycle
2475774   +          +    -1.46816646165468 * EducationBasic  +    -0.11241499152788 *
2475775   +        EducationGraduation  +    -0.65110715251273 * EducationMaster
2475776   +          +      1.0870909562212 * Marital_StatusDivorced
2475777   +          +     1.50333961797515 * Marital_StatusMarried
2475778   +          +    -1.41407780765932 * Marital_StatusSingle
2475779   +          +    -0.52528072358697 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -1.10016528859962 * Education2n_Cycle +
-1.46816646165468 * EducationBasic + -0.11241499152788 * EducationGraduation +
-0.65110715251273 * EducationMaster + 1.0870909562212 * Marital_StatusDivorced +
1.50333961797515 * Marital_StatusMarried + -1.41407780765932 * Marital_StatusSingle +
-0.52528072358697 * Marital_StatusTogether ;
2475780   +   H1x2_1  =     1.46376024534028 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.46376024534028 + H1x2_1 ;
2475781   +   H1x2_2  =    -0.21341526379366 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.21341526379366 + H1x2_2 ;
2475782   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2475783   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2475784   +   H1x2_1  = EXP(MIN(-0.5 * H1x2_1 **2, _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(MIN(-0.5 * H1x2_1 **2, _EXP_BAR));
2475785   +   H1x2_2  = EXP(MIN(-0.5 * H1x2_2 **2, _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(MIN(-0.5 * H1x2_2 **2, _EXP_BAR));
2475786   +END;
MPRINT(EM_DIAGRAM):   END;
2475787   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2475788   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
2475789   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
2475790   +END;
MPRINT(EM_DIAGRAM):   END;
2475791   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2475792   +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
2475793   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2475794   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2475795   +   H1x3_1  =     0.29299707972123 * S_AcceptedCmpTotal
2475796   +          +     1.39797329466471 * S_Age  +    -2.02673480388837 * S_Frq
2475797   +          +    -1.09682777516542 * S_Income  +    -1.22241109888643 *
2475798   +        S_Kidhome  +    -1.35766076466324 * S_Mnt  +    -2.90812690982576 *
2475799   +        S_MntFishProducts  +    -0.48174923069843 * S_MntFruits
2475800   +          +     1.57335575145195 * S_MntGoldProds  +    -0.55248873552176 *
2475801   +        S_MntMeatProducts  +     0.54536808091745 * S_MntSweetProducts
2475802   +          +    -0.41516162035296 * S_MntWines  +     0.07715050596116 *
2475803   +        S_MonthsAsCustomer  +    -2.18785324142159 * S_NumCatalogPurchases
2475804   +          +     -1.1174504455343 * S_NumDealsPurchases
2475805   +          +    -0.18561253113498 * S_NumDistPurchases
2475806   +          +    -0.35231054612792 * S_NumStorePurchases
2475807   +          +      0.9249490354172 * S_NumWebPurchases
2475808   +          +    -0.79868535147175 * S_NumWebVisitsMonth
2475809   +          +    -0.17158151681124 * S_RFMstat  +     -0.9870286843901 *
2475810   +        S_RMntFrq  +     0.62439123699986 * S_Recency
2475811   +          +    -0.45845377794308 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.29299707972123 * S_AcceptedCmpTotal + 1.39797329466471 *
S_Age + -2.02673480388837 * S_Frq + -1.09682777516542 * S_Income + -1.22241109888643 *
S_Kidhome + -1.35766076466324 * S_Mnt + -2.90812690982576 * S_MntFishProducts +
-0.48174923069843 * S_MntFruits + 1.57335575145195 * S_MntGoldProds + -0.55248873552176 *
S_MntMeatProducts + 0.54536808091745 * S_MntSweetProducts + -0.41516162035296 * S_MntWines +
0.07715050596116 * S_MonthsAsCustomer + -2.18785324142159 * S_NumCatalogPurchases +
-1.1174504455343 * S_NumDealsPurchases + -0.18561253113498 * S_NumDistPurchases +
-0.35231054612792 * S_NumStorePurchases + 0.9249490354172 * S_NumWebPurchases +
-0.79868535147175 * S_NumWebVisitsMonth + -0.17158151681124 * S_RFMstat + -0.9870286843901 *
S_RMntFrq + 0.62439123699986 * S_Recency + -0.45845377794308 * S_Teenhome ;
2475812   +   H1x3_2  =    -1.07483179793421 * S_AcceptedCmpTotal
2475813   +          +     1.03558600048684 * S_Age  +     1.11497695424161 * S_Frq
2475814   +          +     0.27297296926116 * S_Income  +     0.77036019999023 *
2475815   +        S_Kidhome  +     0.02567848304605 * S_Mnt  +     0.38661977628442 *
2475816   +        S_MntFishProducts  +    -0.36751750771945 * S_MntFruits
2475817   +          +     0.93924107558212 * S_MntGoldProds  +     0.93046859422523 *
2475818   +        S_MntMeatProducts  +    -0.46124679979068 * S_MntSweetProducts
2475819   +          +    -0.45348234529786 * S_MntWines  +     1.60057890623864 *
2475820   +        S_MonthsAsCustomer  +    -1.74657448073162 * S_NumCatalogPurchases
2475821   +          +     1.05434863590054 * S_NumDealsPurchases
2475822   +          +    -0.73255174632068 * S_NumDistPurchases
2475823   +          +     0.53949953455044 * S_NumStorePurchases
2475824   +          +    -0.61709467816649 * S_NumWebPurchases
2475825   +          +     1.36235282484348 * S_NumWebVisitsMonth
2475826   +          +     -0.0352720913953 * S_RFMstat  +     0.14001475375682 *
2475827   +        S_RMntFrq  +    -0.24276831608869 * S_Recency
2475828   +          +     0.09762798365722 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_2 = -1.07483179793421 * S_AcceptedCmpTotal + 1.03558600048684 *
S_Age + 1.11497695424161 * S_Frq + 0.27297296926116 * S_Income + 0.77036019999023 * S_Kidhome
+ 0.02567848304605 * S_Mnt + 0.38661977628442 * S_MntFishProducts + -0.36751750771945 *
S_MntFruits + 0.93924107558212 * S_MntGoldProds + 0.93046859422523 * S_MntMeatProducts +
-0.46124679979068 * S_MntSweetProducts + -0.45348234529786 * S_MntWines + 1.60057890623864 *
S_MonthsAsCustomer + -1.74657448073162 * S_NumCatalogPurchases + 1.05434863590054 *
S_NumDealsPurchases + -0.73255174632068 * S_NumDistPurchases + 0.53949953455044 *
S_NumStorePurchases + -0.61709467816649 * S_NumWebPurchases + 1.36235282484348 *
S_NumWebVisitsMonth + -0.0352720913953 * S_RFMstat + 0.14001475375682 * S_RMntFrq +
-0.24276831608869 * S_Recency + 0.09762798365722 * S_Teenhome ;
2475829   +   H1x3_1  = H1x3_1  +    -0.94208577947628 * AcceptedCmp10
2475830   +          +     -0.5233017415423 * AcceptedCmp20  +    -0.76900164563331 *
2475831   +        AcceptedCmp30  +    -0.79512141055877 * AcceptedCmp40
2475832   +          +     0.20126599116957 * AcceptedCmp50  +    -0.43046555689873 *
2475833   +        Complain0  +     0.31565229685815 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + -0.94208577947628 * AcceptedCmp10 + -0.5233017415423 *
AcceptedCmp20 + -0.76900164563331 * AcceptedCmp30 + -0.79512141055877 * AcceptedCmp40 +
0.20126599116957 * AcceptedCmp50 + -0.43046555689873 * Complain0 + 0.31565229685815 *
HigherEducationBinary0 ;
2475834   +   H1x3_2  = H1x3_2  +    -1.24961064002454 * AcceptedCmp10
2475835   +          +    -0.89859693224833 * AcceptedCmp20  +     1.15884958881232 *
2475836   +        AcceptedCmp30  +     0.38250389164472 * AcceptedCmp40
2475837   +          +     0.47123004358879 * AcceptedCmp50  +     -2.1232679844098 *
2475838   +        Complain0  +     0.97226091069674 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + -1.24961064002454 * AcceptedCmp10 + -0.89859693224833
* AcceptedCmp20 + 1.15884958881232 * AcceptedCmp30 + 0.38250389164472 * AcceptedCmp40 +
0.47123004358879 * AcceptedCmp50 + -2.1232679844098 * Complain0 + 0.97226091069674 *
HigherEducationBinary0 ;
2475839   +   H1x3_1  = H1x3_1  +    -0.07500306665919 * Education2n_Cycle
2475840   +          +     0.04122924311058 * EducationBasic  +    -0.49410102102951 *
2475841   +        EducationGraduation  +    -0.45477734340809 * EducationMaster
2475842   +          +     0.22253248036322 * Marital_StatusDivorced
2475843   +          +    -1.72455332745001 * Marital_StatusMarried
2475844   +          +     0.57787272107232 * Marital_StatusSingle
2475845   +          +     0.16267074825086 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + -0.07500306665919 * Education2n_Cycle +
0.04122924311058 * EducationBasic + -0.49410102102951 * EducationGraduation +
-0.45477734340809 * EducationMaster + 0.22253248036322 * Marital_StatusDivorced +
-1.72455332745001 * Marital_StatusMarried + 0.57787272107232 * Marital_StatusSingle +
0.16267074825086 * Marital_StatusTogether ;
2475846   +   H1x3_2  = H1x3_2  +    -0.21560233542581 * Education2n_Cycle
2475847   +          +    -0.36476815429069 * EducationBasic  +     1.63334881201349 *
2475848   +        EducationGraduation  +    -1.12620982139344 * EducationMaster
2475849   +          +     0.14637124403046 * Marital_StatusDivorced
2475850   +          +     0.18905186437528 * Marital_StatusMarried
2475851   +          +     0.00511958458521 * Marital_StatusSingle
2475852   +          +      -0.915980703129 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + -0.21560233542581 * Education2n_Cycle +
-0.36476815429069 * EducationBasic + 1.63334881201349 * EducationGraduation +
-1.12620982139344 * EducationMaster + 0.14637124403046 * Marital_StatusDivorced +
0.18905186437528 * Marital_StatusMarried + 0.00511958458521 * Marital_StatusSingle +
-0.915980703129 * Marital_StatusTogether ;
2475853   +   H1x3_1  =     0.54853846322055 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.54853846322055 + H1x3_1 ;
2475854   +   H1x3_2  =     1.36395858099198 + H1x3_2 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = 1.36395858099198 + H1x3_2 ;
2475855   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2475856   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2475857   +   H1x3_1  = EXP(MIN(H1x3_1 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x3_1 = EXP(MIN(H1x3_1 , _EXP_BAR));
2475858   +   H1x3_2  = EXP(MIN(H1x3_2 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x3_2 = EXP(MIN(H1x3_2 , _EXP_BAR));
2475859   +END;
MPRINT(EM_DIAGRAM):   END;
2475860   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2475861   +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
2475862   +   H1x3_2  = .;
MPRINT(EM_DIAGRAM):   H1x3_2 = .;
2475863   +END;
MPRINT(EM_DIAGRAM):   END;
2475864   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2475865   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2475866   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2475867   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2475868   +   P_DepVar1  =    -10.6892993503201 * H1x1_1  +     16.2938756734008 * H1x1_2
2475869   +         ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -10.6892993503201 * H1x1_1 + 16.2938756734008 * H1x1_2 ;
2475870   +   P_DepVar1  = P_DepVar1  +      1.2332183930826 * H1x2_1
2475871   +          +    -0.85206858106106 * H1x2_2 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 + 1.2332183930826 * H1x2_1 + -0.85206858106106 *
H1x2_2 ;
2475872   +   P_DepVar1  = P_DepVar1  +    -0.00087126688031 * H1x3_1
2475873   +          +    -0.00025812675645 * H1x3_2 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 + -0.00087126688031 * H1x3_1 + -0.00025812675645 *
H1x3_2 ;
2475874   +   P_DepVar1  =     2.20710379818135 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.20710379818135 + P_DepVar1 ;
2475875   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2475876   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2475877   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2475878   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2475879   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2475880   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2475881   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2475882   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2475883   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2475884   +END;
MPRINT(EM_DIAGRAM):   END;
2475885   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2475886   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2475887   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2475888   +END;
MPRINT(EM_DIAGRAM):   END;
2475889   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2475890   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2475891   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2475892   +END;
MPRINT(EM_DIAGRAM):   END;
2475893   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2475894   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2475895   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2475896   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2475897   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2475898   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2475899   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2475900   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2475901   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2475902   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2475903   +END;
MPRINT(EM_DIAGRAM):   END;
2475904   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2475905   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2475906   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2475907   +drop
2475908   +H1x1_1
2475909   +H1x1_2
2475910   +H1x2_1
2475911   +H1x2_2
2475912   +H1x3_1
2475913   +H1x3_2
2475914   +;
MPRINT(EM_DIAGRAM):   drop H1x1_1 H1x1_2 H1x2_1 H1x2_2 H1x3_1 H1x3_2 ;
2475915   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2475916    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2475917    quit;
2475918    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2475919    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2475920    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2475921    retain ID 2 Node "AutoNeural7";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural7";
2475922    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2475923    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2931 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2931 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2475924    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2475925    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2475926    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2931 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2931 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2475927    proc sort data=EMWS8.AutoNeural7_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural7_variableset out=_temp2(keep=NAME
CREATOR);
2475928    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2475929    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL7_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2475930    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2475931    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2475932    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2475933    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2475934    proc contents data=EMWS8.AutoNeural7_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural7_train out=_meta(keep=NAME) noprint;
2475935    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
2475936    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2475937    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2475938    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2475939    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2475940    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2475941    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2475942    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2475943    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2475944    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2475944  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1623 rows and 5 columns.
 
2475945    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2475946    proc append base=EMWS8.Ensmbl46_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl46_FCMP data=_tempx;
2475947    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL46_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1623 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL46_FCMP has 1623 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2475948    filename _pref
2475948  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
2475949    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2475950    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
2475951   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2475952   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
2475953   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2475954   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
2475955   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
2475956   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2475957    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2475958    quit;
2475959    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2475960    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2475961    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2475962    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
2475963    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2475964    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2475965    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2475966    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2475967    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2475968    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
2475969    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2475970    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2475971    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2475972    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2475973    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2475974    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2475975    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
2475976    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
2475977    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2475978    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2475979    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2475980    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2475981    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2475982    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2475983    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2475984    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2475985    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2475985  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
2475986    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2475987    proc append base=EMWS8.Ensmbl46_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl46_FCMP data=_tempx;
2475988    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL46_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL46_FCMP has 1627 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2475989    filename _pref
2475989  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
2475990    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2475991    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
2475992   +
2475993   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
2475994   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
2475994  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
2475995   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
2475996   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
2475997   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
2475998   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
2475999   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2476000    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2476001    quit;
2476002    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2476003    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2476004    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2476005    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
2476006    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2476007    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2476008    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2476009    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2476010    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2476011    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
2476012    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2476013    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2476014    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2476015    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2476016    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2476017    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2476018    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
2476019    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2476020    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2476021    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2476022    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2476023    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2476024    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2476025    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2476026    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2476027    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2476028    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2476028  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
2476029    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2476030    proc append base=EMWS8.Ensmbl46_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl46_FCMP data=_tempx;
2476031    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL46_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL46_FCMP has 1666 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2476032    filename _pref
2476032  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
2476033    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2476034    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
2476035   +
2476036   +
2476037   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
2476038   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
2476039   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
2476040   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
2476041   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
2476042   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2476043   +
2476044   +
2476045   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
2476046   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
2476047   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
2476048   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
2476049   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
2476050   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2476051   +
2476052   +
2476053   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
2476054   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
2476055   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
2476056   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
2476057   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
2476058   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2476059   +
2476060   +
2476061   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
2476062   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
2476063   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
2476064   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
2476065   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
2476066   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2476067   +
2476068   +
2476069   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
2476070   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
2476071   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
2476072   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
2476073   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
2476074   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2476075   +
2476076   +
2476077   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
2476078   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
2476079   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
2476080   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
2476081   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
2476082   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2476083   +
2476084   +
2476085   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
2476086   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
2476087   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
2476088   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
2476089   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
2476090   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2476091   +
2476092   +
2476093   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
2476094   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
2476095   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
2476096   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
2476097   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
2476098   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2476099   +if
2476100   +_FILTERNORM1 not in ( '.')
2476101   + and
2476102   +_FILTERNORM2 not in ( '.')
2476103   + and
2476104   +_FILTERNORM3 not in ( '.')
2476105   + and
2476106   +_FILTERNORM4 not in ( '.')
2476107   + and
2476108   +_FILTERNORM5 not in ( '.')
2476109   + and
2476110   +_FILTERNORM6 not in ( '.')
2476111   + and
2476112   +_FILTERNORM7 not in ( ' ')
2476113   + and
2476114   +_FILTERNORM8 not in ( ' ')
2476115   +and
2476116   +( Dt_Customer ne .)
2476117   +and ( Income ne . and (Income<=107000))
2476118   +and ( Kidhome ne .)
2476119   +and ( MntFishProducts ne .)
2476120   +and ( MntFruits ne .)
2476121   +and ( MntGoldProds ne .)
2476122   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
2476123   +and ( MntSweetProducts ne .)
2476124   +and ( MntWines ne .)
2476125   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
2476126   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
2476127   +and ( NumStorePurchases ne .)
2476128   +and ( NumWebPurchases ne .)
2476129   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
2476130   +and ( Recency ne .)
2476131   +and ( Teenhome ne .)
2476132   +and ( Year_Birth ne .)
2476133   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
2476134   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
2476135   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
2476136   +end;
MPRINT(EM_DIAGRAM):   end;
2476137   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
2476138   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2476139    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2476140    quit;
2476141    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2476142    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2476143    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2476144    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
2476145    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2476146    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2476147    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2476148    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2476149    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2476150    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
2476151    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2476152    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2476153    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2476154    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2476155    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2476156    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2476157    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
2476158    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
2476159    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2476160    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2476161    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2476162    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2476163    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2476164    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2476165    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2476166    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2476167    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2476167  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
2476168    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2476169    proc append base=EMWS8.Ensmbl46_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl46_FCMP data=_tempx;
2476170    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL46_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL46_FCMP has 1732 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2476171    %macro varDept(fcmpdata=,id=);
2476172    %global nobs&id scoreFlag&id;
2476173    %let scoreFlag&id = 0;
2476174    %if &id=1 or ^&fcmpStart %then %do;
2476175    proc sort data=&fcmpdata out=_temp&id nodupkey;
2476176    by NAME;
2476177    where id=&id and LHS in( %let j=1;
2476178    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
2476179    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
2476180    "&var" %let j = %eval(&j+1);
2476181    %end;
2476182    );
2476183    run;
2476184    %let dsid = %sysfunc(open(_temp&id));
2476185    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2476186    %let dsid = %sysfunc(close(&dsid));
2476187    %if &&nobs&id %then %do;
2476188    %let scoreFlag&id = 1;
2476189    %let fcmpStart = 1;
2476190    %end;
2476191    %else %let fcmpStart = 0;
2476192    %end;
2476193    %else %do;
2476194    proc sort data=&fcmpdata out=_tempid;
2476195    where id=&id;
2476196    by LHS;
2476197    run;
2476198    %let dsid = %sysfunc(open(_tempid));
2476199    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2476200    %let dsid = %sysfunc(close(&dsid));
2476201    %if ^&&nobs&id %then %do;
2476202    proc datasets lib=work nolist;
2476203    delete _tempid;
2476204    run;
2476205    quit;
2476206    %end;
2476207    %else %do;
2476208    data _tempAll;
2476209    set %let j=%eval(&id-1);
2476210    %do x=1 %to &j;
2476211    %if &&nobs&x %then %do;
2476212    _temp&x %end;
2476213    %end;
2476214    ;
2476215    run;
2476216    proc sql;
2476217    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
2476217  ! work._tempid p2 where p.name=p2.lhs;
2476218    quit;
2476219    data _temp&id;
2476220    set _temp&id;
2476221    where LHS ne '' and NAME ne '' and Node ne '';
2476222    run;
2476223    proc datasets lib=work nolist;
2476224    delete _tempAll;
2476225    run;
2476226    %let dsid = %sysfunc(open(_temp&id));
2476227    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2476228    %let dsid = %sysfunc(close(&dsid));
2476229    %if ^&&nobs&id %then %do;
2476230    proc datasets lib=work nolist;
2476231    delete _temp&id;
2476232    run;
2476233    quit;
2476234    %end;
2476235    %else %do;
2476236    %let scoreFlag&id = 1;
2476237    data _temp&id;
2476238    set _temp&id;
2476239    where LHS ne NAME and node ne '';
2476240    run;
2476241    %let dsid = %sysfunc(open(_temp&id));
2476242    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2476243    %let dsid = %sysfunc(close(&dsid));
2476244    %if ^&&nobs&id %then %do;
2476245    proc datasets lib=work nolist;
2476246    delete _temp&id;
2476247    run;
2476248    quit;
2476249    %end;
2476250    %else %do;
2476251    proc sort data=_temp&id nodupkey;
2476252    by LHS NAME;
2476253    run;
2476254    %end;
2476255    %end;
2476256    %end;
2476257    %end;
2476258    %mend varDept;
2476259    %macro optCode(outdata=fcmpdata);
2476260    %global fcmpStart;
2476261    %let fcmpStart = 0;
2476262    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
2476263    %let NumNodes=9;
2476264    %do k=1 %to &NumNodes;
2476265    %vardept(fcmpdata=&outdata, id=&k);
2476266    %end;
2476267    %mend optCode;
2476268    %optcode(outData=EMWS8.Ensmbl46_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl46_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL46_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl46_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 134 observations read from the data set EMWS8.ENSMBL46_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 100 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 34 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl46_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL46_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl46_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL46_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl46_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL46_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 34 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl46_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL46_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 38 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl46_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL46_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 77 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl46_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL46_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl46_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL46_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.06 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
2476269    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
2476270    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
2476271    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
2476272    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2476273    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
2476274    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
2476275    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
2476276    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2476277    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2476278    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
2476278  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.
 
2476279    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
2476280    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
2476281    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
2476282    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2476283    filename _pref
2476283  ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural10\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural10\EMPUBLISHSCORE.sas";
2476284    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2476285    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural10\EMPUBLISHSCORE.sas.
2476286   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2476287   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2476288   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2476289   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2476290   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2476291   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2476292   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2476293   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2476294   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2476295   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2476296   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2476297   +LENGTH _WARN_ $4
2476298   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
2476299   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2476300   +
2476301   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2476302   +
2476303   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2476304   +
2476305   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2476306   +
2476307   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2476308   +
2476309   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2476310   +
2476311   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2476312   +
2476313   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2476314   +
2476315   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2476316   +
2476317   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2476318   +
2476319   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2476320   +
2476321   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2476322   +
2476323   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2476324   +
2476325   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2476326   +
2476327   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2476328   +
2476329   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2476330   +
2476331   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2476332   +
2476333   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2476334   +
2476335   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2476336   +
2476337   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2476338   +
2476339   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2476340   +
2476341   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2476342   +
2476343   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2476344   +
2476345   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2476346   +
2476347   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2476348   +
2476349   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2476350   +
2476351   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2476352   +
2476353   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2476354   +
2476355   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2476356   +
2476357   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2476358   +
2476359   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2476360   +
2476361   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2476362   +
2476363   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2476364   +
2476365   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2476366   +
2476367   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2476368   +
2476369   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2476370   +
2476371   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2476372   +
2476373   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2476374   +
2476375   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2476376   +
2476377   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2476378   +
2476379   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2476380   +
2476381   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2476382   +
2476383   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
2476384   +
2476385   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
2476386   +
2476387   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
2476388   +
2476389   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
2476390   +
2476391   +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
2476392   +
2476393   +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
2476394   +
2476395   +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
2476396   +
2476397   +      label H1x3_2 = 'Hidden: H1x3_=2' ;
MPRINT(EM_DIAGRAM):   label H1x3_2 = 'Hidden: H1x3_=2' ;
2476398   +
2476399   +      label H1x3_3 = 'Hidden: H1x3_=3' ;
MPRINT(EM_DIAGRAM):   label H1x3_3 = 'Hidden: H1x3_=3' ;
2476400   +
2476401   +      label H1x3_4 = 'Hidden: H1x3_=4' ;
MPRINT(EM_DIAGRAM):   label H1x3_4 = 'Hidden: H1x3_=4' ;
2476402   +
2476403   +      label H1x3_5 = 'Hidden: H1x3_=5' ;
MPRINT(EM_DIAGRAM):   label H1x3_5 = 'Hidden: H1x3_=5' ;
2476404   +
2476405   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2476406   +
2476407   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2476408   +
2476409   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2476410   +
2476411   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2476412   +
2476413   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2476414   +
2476415   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2476416   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2476417   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2476418   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2476419   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2476420   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2476421   +end;
MPRINT(EM_DIAGRAM):   end;
2476422   +else do;
MPRINT(EM_DIAGRAM):   else do;
2476423   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2476424   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2476425   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2476426   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2476427   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2476428   +   end;
MPRINT(EM_DIAGRAM):   end;
2476429   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2476430   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2476431   +   end;
MPRINT(EM_DIAGRAM):   end;
2476432   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2476433   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2476434   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2476435   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2476436   +   end;
MPRINT(EM_DIAGRAM):   end;
2476437   +end;
MPRINT(EM_DIAGRAM):   end;
2476438   +
2476439   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2476440   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2476441   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2476442   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2476443   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2476444   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2476445   +end;
MPRINT(EM_DIAGRAM):   end;
2476446   +else do;
MPRINT(EM_DIAGRAM):   else do;
2476447   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2476448   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2476449   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2476450   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2476451   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2476452   +   end;
MPRINT(EM_DIAGRAM):   end;
2476453   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2476454   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2476455   +   end;
MPRINT(EM_DIAGRAM):   end;
2476456   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2476457   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2476458   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2476459   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2476460   +   end;
MPRINT(EM_DIAGRAM):   end;
2476461   +end;
MPRINT(EM_DIAGRAM):   end;
2476462   +
2476463   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2476464   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2476465   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2476466   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2476467   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2476468   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2476469   +end;
MPRINT(EM_DIAGRAM):   end;
2476470   +else do;
MPRINT(EM_DIAGRAM):   else do;
2476471   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2476472   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2476473   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2476474   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2476475   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2476476   +   end;
MPRINT(EM_DIAGRAM):   end;
2476477   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2476478   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2476479   +   end;
MPRINT(EM_DIAGRAM):   end;
2476480   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2476481   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2476482   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2476483   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2476484   +   end;
MPRINT(EM_DIAGRAM):   end;
2476485   +end;
MPRINT(EM_DIAGRAM):   end;
2476486   +
2476487   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2476488   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2476489   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2476490   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2476491   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2476492   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2476493   +end;
MPRINT(EM_DIAGRAM):   end;
2476494   +else do;
MPRINT(EM_DIAGRAM):   else do;
2476495   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2476496   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2476497   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2476498   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2476499   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2476500   +   end;
MPRINT(EM_DIAGRAM):   end;
2476501   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2476502   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2476503   +   end;
MPRINT(EM_DIAGRAM):   end;
2476504   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2476505   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2476506   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2476507   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2476508   +   end;
MPRINT(EM_DIAGRAM):   end;
2476509   +end;
MPRINT(EM_DIAGRAM):   end;
2476510   +
2476511   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2476512   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2476513   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2476514   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2476515   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2476516   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2476517   +end;
MPRINT(EM_DIAGRAM):   end;
2476518   +else do;
MPRINT(EM_DIAGRAM):   else do;
2476519   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2476520   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2476521   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2476522   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2476523   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2476524   +   end;
MPRINT(EM_DIAGRAM):   end;
2476525   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2476526   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2476527   +   end;
MPRINT(EM_DIAGRAM):   end;
2476528   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2476529   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2476530   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2476531   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2476532   +   end;
MPRINT(EM_DIAGRAM):   end;
2476533   +end;
MPRINT(EM_DIAGRAM):   end;
2476534   +
2476535   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2476536   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2476537   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2476538   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2476539   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2476540   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2476541   +end;
MPRINT(EM_DIAGRAM):   end;
2476542   +else do;
MPRINT(EM_DIAGRAM):   else do;
2476543   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2476544   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2476545   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2476546   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2476547   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2476548   +   end;
MPRINT(EM_DIAGRAM):   end;
2476549   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2476550   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2476551   +   end;
MPRINT(EM_DIAGRAM):   end;
2476552   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2476553   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2476554   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2476555   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2476556   +   end;
MPRINT(EM_DIAGRAM):   end;
2476557   +end;
MPRINT(EM_DIAGRAM):   end;
2476558   +
2476559   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2476560   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2476561   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2476562   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2476563   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2476564   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2476565   +end;
MPRINT(EM_DIAGRAM):   end;
2476566   +else do;
MPRINT(EM_DIAGRAM):   else do;
2476567   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2476568   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2476569   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2476570   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2476571   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2476572   +   end;
MPRINT(EM_DIAGRAM):   end;
2476573   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2476574   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2476575   +   end;
MPRINT(EM_DIAGRAM):   end;
2476576   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2476577   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2476578   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2476579   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2476580   +   end;
MPRINT(EM_DIAGRAM):   end;
2476581   +end;
MPRINT(EM_DIAGRAM):   end;
2476582   +
2476583   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2476584   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
2476585   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2476586   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2476587   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2476588   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2476589   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2476590   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2476591   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2476592   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2476593   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2476594   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2476595   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2476596   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2476597   +end;
MPRINT(EM_DIAGRAM):   end;
2476598   +else do;
MPRINT(EM_DIAGRAM):   else do;
2476599   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2476600   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2476601   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2476602   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2476603   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2476604   +   end;
MPRINT(EM_DIAGRAM):   end;
2476605   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2476606   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2476607   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2476608   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2476609   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2476610   +   end;
MPRINT(EM_DIAGRAM):   end;
2476611   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2476612   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2476613   +   end;
MPRINT(EM_DIAGRAM):   end;
2476614   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2476615   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2476616   +   end;
MPRINT(EM_DIAGRAM):   end;
2476617   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2476618   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2476619   +   end;
MPRINT(EM_DIAGRAM):   end;
2476620   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2476621   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2476622   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2476623   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2476624   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2476625   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2476626   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2476627   +   end;
MPRINT(EM_DIAGRAM):   end;
2476628   +end;
MPRINT(EM_DIAGRAM):   end;
2476629   +
2476630   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2476631   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2476632   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
2476633   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2476634   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2476635   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2476636   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2476637   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2476638   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2476639   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2476640   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2476641   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2476642   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2476643   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2476644   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2476645   +end;
MPRINT(EM_DIAGRAM):   end;
2476646   +else do;
MPRINT(EM_DIAGRAM):   else do;
2476647   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2476648   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2476649   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2476650   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2476651   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2476652   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2476653   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2476654   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2476655   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2476656   +         end;
MPRINT(EM_DIAGRAM):   end;
2476657   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2476658   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2476659   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2476660   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2476661   +            end;
MPRINT(EM_DIAGRAM):   end;
2476662   +         end;
MPRINT(EM_DIAGRAM):   end;
2476663   +      end;
MPRINT(EM_DIAGRAM):   end;
2476664   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2476665   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2476666   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2476667   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2476668   +         end;
MPRINT(EM_DIAGRAM):   end;
2476669   +      end;
MPRINT(EM_DIAGRAM):   end;
2476670   +   end;
MPRINT(EM_DIAGRAM):   end;
2476671   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2476672   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2476673   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2476674   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2476675   +      end;
MPRINT(EM_DIAGRAM):   end;
2476676   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2476677   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2476678   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2476679   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2476680   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2476681   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2476682   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2476683   +         end;
MPRINT(EM_DIAGRAM):   end;
2476684   +      end;
MPRINT(EM_DIAGRAM):   end;
2476685   +   end;
MPRINT(EM_DIAGRAM):   end;
2476686   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2476687   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2476688   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2476689   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2476690   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2476691   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2476692   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2476693   +   end;
MPRINT(EM_DIAGRAM):   end;
2476694   +end;
MPRINT(EM_DIAGRAM):   end;
2476695   +
2476696   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2476697   +*** Checking missing input Interval
2476698   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2476699   +
2476700   +IF NMISS(
2476701   +   AcceptedCmpTotal ,
2476702   +   Age ,
2476703   +   Frq ,
2476704   +   Income ,
2476705   +   Kidhome ,
2476706   +   Mnt ,
2476707   +   MntFishProducts ,
2476708   +   MntFruits ,
2476709   +   MntGoldProds ,
2476710   +   MntMeatProducts ,
2476711   +   MntSweetProducts ,
2476712   +   MntWines ,
2476713   +   MonthsAsCustomer ,
2476714   +   NumCatalogPurchases ,
2476715   +   NumDealsPurchases ,
2476716   +   NumDistPurchases ,
2476717   +   NumStorePurchases ,
2476718   +   NumWebPurchases ,
2476719   +   NumWebVisitsMonth ,
2476720   +   RFMstat ,
2476721   +   RMntFrq ,
2476722   +   Recency ,
2476723   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
2476724   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2476725   +
2476726   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2476727   +END;
MPRINT(EM_DIAGRAM):   END;
2476728   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2476729   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2476730   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2476731   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2476732   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2476733   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2476734   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2476735   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2476736   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2476737   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2476738   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2476739   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2476740   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2476741   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2476742   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2476743   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2476744   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2476745   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2476746   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2476747   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2476748   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2476749   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2476750   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
2476751   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2476752   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2476753   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2476754   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2476755   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2476756   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2476757   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2476758   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2476759   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2476760   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2476761   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2476762   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2476763   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2476764   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2476765   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2476766   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2476767   +END;
MPRINT(EM_DIAGRAM):   END;
2476768   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2476769   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2476770   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2476771   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2476772   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2476773   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2476774   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2476775   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2476776   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2476777   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2476778   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2476779   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2476780   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2476781   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2476782   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2476783   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2476784   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2476785   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2476786   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2476787   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2476788   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2476789   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2476790   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
2476791   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2476792   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2476793   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2476794   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2476795   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2476796   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2476797   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2476798   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2476799   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2476800   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2476801   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
2476802   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2476803   +   ELSE S_NumCatalogPurchases
2476804   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2476805   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2476806   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2476807   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2476808   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2476809   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2476810   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2476811   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2476812   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2476813   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2476814   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2476815   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2476816   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2476817   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2476818   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2476819   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2476820   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2476821   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2476822   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2476823   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2476824   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2476825   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2476826   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2476827   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2476828   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2476829   +END;
MPRINT(EM_DIAGRAM):   END;
2476830   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2476831   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2476832   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2476833   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2476834   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2476835   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2476836   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2476837   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2476838   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2476839   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2476840   +   H1x1_1  =     -1.5235159368138 * S_AcceptedCmpTotal
2476841   +          +     0.13941271308016 * S_Age  +    -0.84765157270503 * S_Frq
2476842   +          +    -0.89386555046676 * S_Income  +     1.62709236629244 *
2476843   +        S_Kidhome  +    -1.21416429819342 * S_Mnt  +    -1.95640488965637 *
2476844   +        S_MntFishProducts  +    -0.08621024993404 * S_MntFruits
2476845   +          +    -0.38536990009586 * S_MntGoldProds  +     3.12553097304637 *
2476846   +        S_MntMeatProducts  +    -2.50680711036653 * S_MntSweetProducts
2476847   +          +    -3.77770073626477 * S_MntWines  +     0.39118206604766 *
2476848   +        S_MonthsAsCustomer  +     1.80485993754239 * S_NumCatalogPurchases
2476849   +          +     3.21215425524619 * S_NumDealsPurchases
2476850   +          +     0.08695198777156 * S_NumDistPurchases
2476851   +          +    -2.58697971128295 * S_NumStorePurchases
2476852   +          +    -0.44431924796059 * S_NumWebPurchases
2476853   +          +     -1.4492698984921 * S_NumWebVisitsMonth
2476854   +          +     2.16652214648037 * S_RFMstat  +    -0.48027961131639 *
2476855   +        S_RMntFrq  +    -0.27206877070748 * S_Recency
2476856   +          +    -0.34774852853763 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.5235159368138 * S_AcceptedCmpTotal + 0.13941271308016 *
S_Age + -0.84765157270503 * S_Frq + -0.89386555046676 * S_Income + 1.62709236629244 *
S_Kidhome + -1.21416429819342 * S_Mnt + -1.95640488965637 * S_MntFishProducts +
-0.08621024993404 * S_MntFruits + -0.38536990009586 * S_MntGoldProds + 3.12553097304637 *
S_MntMeatProducts + -2.50680711036653 * S_MntSweetProducts + -3.77770073626477 * S_MntWines +
0.39118206604766 * S_MonthsAsCustomer + 1.80485993754239 * S_NumCatalogPurchases +
3.21215425524619 * S_NumDealsPurchases + 0.08695198777156 * S_NumDistPurchases +
-2.58697971128295 * S_NumStorePurchases + -0.44431924796059 * S_NumWebPurchases +
-1.4492698984921 * S_NumWebVisitsMonth + 2.16652214648037 * S_RFMstat + -0.48027961131639 *
S_RMntFrq + -0.27206877070748 * S_Recency + -0.34774852853763 * S_Teenhome ;
2476857   +   H1x1_2  =     -0.5665707820209 * S_AcceptedCmpTotal
2476858   +          +    -1.33582859121223 * S_Age  +     0.90483024742522 * S_Frq
2476859   +          +    -2.00588558815165 * S_Income  +      3.0373198083895 *
2476860   +        S_Kidhome  +      0.4356905004225 * S_Mnt  +     0.19619626354366 *
2476861   +        S_MntFishProducts  +    -1.09111340184132 * S_MntFruits
2476862   +          +     0.36844676336289 * S_MntGoldProds  +    -2.23832561375429 *
2476863   +        S_MntMeatProducts  +    -0.18280081530069 * S_MntSweetProducts
2476864   +          +     2.11599309139107 * S_MntWines  +     0.68147940490709 *
2476865   +        S_MonthsAsCustomer  +    -0.73940648599397 * S_NumCatalogPurchases
2476866   +          +    -0.83844506398484 * S_NumDealsPurchases
2476867   +          +     0.60831936516804 * S_NumDistPurchases
2476868   +          +     1.79084087761626 * S_NumStorePurchases
2476869   +          +     1.17119196356453 * S_NumWebPurchases
2476870   +          +    -3.63586683518718 * S_NumWebVisitsMonth
2476871   +          +     0.60521990735996 * S_RFMstat  +     0.56036381019221 *
2476872   +        S_RMntFrq  +     3.84599118896159 * S_Recency
2476873   +          +     2.42091939246471 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.5665707820209 * S_AcceptedCmpTotal + -1.33582859121223 *
S_Age + 0.90483024742522 * S_Frq + -2.00588558815165 * S_Income + 3.0373198083895 * S_Kidhome
+ 0.4356905004225 * S_Mnt + 0.19619626354366 * S_MntFishProducts + -1.09111340184132 *
S_MntFruits + 0.36844676336289 * S_MntGoldProds + -2.23832561375429 * S_MntMeatProducts +
-0.18280081530069 * S_MntSweetProducts + 2.11599309139107 * S_MntWines + 0.68147940490709 *
S_MonthsAsCustomer + -0.73940648599397 * S_NumCatalogPurchases + -0.83844506398484 *
S_NumDealsPurchases + 0.60831936516804 * S_NumDistPurchases + 1.79084087761626 *
S_NumStorePurchases + 1.17119196356453 * S_NumWebPurchases + -3.63586683518718 *
S_NumWebVisitsMonth + 0.60521990735996 * S_RFMstat + 0.56036381019221 * S_RMntFrq +
3.84599118896159 * S_Recency + 2.42091939246471 * S_Teenhome ;
2476874   +   H1x1_3  =    -2.34864034635966 * S_AcceptedCmpTotal
2476875   +          +     0.38417502023066 * S_Age  +     0.18241442054661 * S_Frq
2476876   +          +    -0.36643054878492 * S_Income  +    -0.01464967964014 *
2476877   +        S_Kidhome  +     0.13084033882631 * S_Mnt  +     1.43066752801424 *
2476878   +        S_MntFishProducts  +     0.30678881611098 * S_MntFruits
2476879   +          +    -0.35038082288662 * S_MntGoldProds  +    -6.79650673935808 *
2476880   +        S_MntMeatProducts  +    -0.35154740308081 * S_MntSweetProducts
2476881   +          +     4.53406963590593 * S_MntWines  +     0.35082802515055 *
2476882   +        S_MonthsAsCustomer  +    -1.62489937965567 * S_NumCatalogPurchases
2476883   +          +    -0.31484031572628 * S_NumDealsPurchases
2476884   +          +    -0.18273941035679 * S_NumDistPurchases
2476885   +          +     0.99501789733882 * S_NumStorePurchases
2476886   +          +     1.32014078829379 * S_NumWebPurchases
2476887   +          +    -1.34393498450215 * S_NumWebVisitsMonth
2476888   +          +    -0.93549119966022 * S_RFMstat  +    -1.74825390192193 *
2476889   +        S_RMntFrq  +     0.84406941726743 * S_Recency
2476890   +          +     -0.5004540381333 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -2.34864034635966 * S_AcceptedCmpTotal + 0.38417502023066 *
S_Age + 0.18241442054661 * S_Frq + -0.36643054878492 * S_Income + -0.01464967964014 *
S_Kidhome + 0.13084033882631 * S_Mnt + 1.43066752801424 * S_MntFishProducts + 0.30678881611098
* S_MntFruits + -0.35038082288662 * S_MntGoldProds + -6.79650673935808 * S_MntMeatProducts +
-0.35154740308081 * S_MntSweetProducts + 4.53406963590593 * S_MntWines + 0.35082802515055 *
S_MonthsAsCustomer + -1.62489937965567 * S_NumCatalogPurchases + -0.31484031572628 *
S_NumDealsPurchases + -0.18273941035679 * S_NumDistPurchases + 0.99501789733882 *
S_NumStorePurchases + 1.32014078829379 * S_NumWebPurchases + -1.34393498450215 *
S_NumWebVisitsMonth + -0.93549119966022 * S_RFMstat + -1.74825390192193 * S_RMntFrq +
0.84406941726743 * S_Recency + -0.5004540381333 * S_Teenhome ;
2476891   +   H1x1_4  =     0.46772023050431 * S_AcceptedCmpTotal
2476892   +          +    -0.64609651992636 * S_Age  +     0.65433283816167 * S_Frq
2476893   +          +     0.97922442633265 * S_Income  +    -0.37705204232056 *
2476894   +        S_Kidhome  +     0.00937752600299 * S_Mnt  +     -0.6082843846013 *
2476895   +        S_MntFishProducts  +     -0.6227107898918 * S_MntFruits
2476896   +          +      0.0291421224006 * S_MntGoldProds  +     1.09748402313736 *
2476897   +        S_MntMeatProducts  +     0.00604619863622 * S_MntSweetProducts
2476898   +          +    -0.74684537570529 * S_MntWines  +    -0.00266569003481 *
2476899   +        S_MonthsAsCustomer  +     2.01081657735872 * S_NumCatalogPurchases
2476900   +          +     1.19658719134196 * S_NumDealsPurchases
2476901   +          +     0.87478204472986 * S_NumDistPurchases
2476902   +          +    -0.20635856288784 * S_NumStorePurchases
2476903   +          +    -0.89927356974242 * S_NumWebPurchases
2476904   +          +     2.92285244132576 * S_NumWebVisitsMonth
2476905   +          +    -0.10913907245142 * S_RFMstat  +     1.64233441899256 *
2476906   +        S_RMntFrq  +    -3.64945971202322 * S_Recency
2476907   +          +    -1.78841346993558 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.46772023050431 * S_AcceptedCmpTotal + -0.64609651992636 *
S_Age + 0.65433283816167 * S_Frq + 0.97922442633265 * S_Income + -0.37705204232056 * S_Kidhome
+ 0.00937752600299 * S_Mnt + -0.6082843846013 * S_MntFishProducts + -0.6227107898918 *
S_MntFruits + 0.0291421224006 * S_MntGoldProds + 1.09748402313736 * S_MntMeatProducts +
0.00604619863622 * S_MntSweetProducts + -0.74684537570529 * S_MntWines + -0.00266569003481 *
S_MonthsAsCustomer + 2.01081657735872 * S_NumCatalogPurchases + 1.19658719134196 *
S_NumDealsPurchases + 0.87478204472986 * S_NumDistPurchases + -0.20635856288784 *
S_NumStorePurchases + -0.89927356974242 * S_NumWebPurchases + 2.92285244132576 *
S_NumWebVisitsMonth + -0.10913907245142 * S_RFMstat + 1.64233441899256 * S_RMntFrq +
-3.64945971202322 * S_Recency + -1.78841346993558 * S_Teenhome ;
2476908   +   H1x1_5  =    -1.22491918863941 * S_AcceptedCmpTotal
2476909   +          +     0.16201659993217 * S_Age  +     0.17189537824457 * S_Frq
2476910   +          +    -0.87922900323563 * S_Income  +    -0.79268410231108 *
2476911   +        S_Kidhome  +     0.62793961676074 * S_Mnt  +     0.20877761882787 *
2476912   +        S_MntFishProducts  +     0.99367872286661 * S_MntFruits
2476913   +          +     -0.4347564565882 * S_MntGoldProds  +    -0.16203279329295 *
2476914   +        S_MntMeatProducts  +     0.81409215344356 * S_MntSweetProducts
2476915   +          +     1.33482971563984 * S_MntWines  +    -1.17441882196058 *
2476916   +        S_MonthsAsCustomer  +    -1.72330829533107 * S_NumCatalogPurchases
2476917   +          +       -2.32617124568 * S_NumDealsPurchases
2476918   +          +    -0.56589187730672 * S_NumDistPurchases
2476919   +          +     1.07062299863482 * S_NumStorePurchases
2476920   +          +     0.30077273739578 * S_NumWebPurchases
2476921   +          +    -1.67745421915317 * S_NumWebVisitsMonth
2476922   +          +      0.0530074713265 * S_RFMstat  +    -0.55969729655382 *
2476923   +        S_RMntFrq  +     1.32196704233234 * S_Recency
2476924   +          +     1.05470622089613 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.22491918863941 * S_AcceptedCmpTotal + 0.16201659993217 *
S_Age + 0.17189537824457 * S_Frq + -0.87922900323563 * S_Income + -0.79268410231108 *
S_Kidhome + 0.62793961676074 * S_Mnt + 0.20877761882787 * S_MntFishProducts + 0.99367872286661
* S_MntFruits + -0.4347564565882 * S_MntGoldProds + -0.16203279329295 * S_MntMeatProducts +
0.81409215344356 * S_MntSweetProducts + 1.33482971563984 * S_MntWines + -1.17441882196058 *
S_MonthsAsCustomer + -1.72330829533107 * S_NumCatalogPurchases + -2.32617124568 *
S_NumDealsPurchases + -0.56589187730672 * S_NumDistPurchases + 1.07062299863482 *
S_NumStorePurchases + 0.30077273739578 * S_NumWebPurchases + -1.67745421915317 *
S_NumWebVisitsMonth + 0.0530074713265 * S_RFMstat + -0.55969729655382 * S_RMntFrq +
1.32196704233234 * S_Recency + 1.05470622089613 * S_Teenhome ;
2476925   +   H1x1_1  = H1x1_1  +     0.19875423759582 * AcceptedCmp10
2476926   +          +    -1.84163905120352 * AcceptedCmp20  +    -1.63149345314696 *
2476927   +        AcceptedCmp30  +    -1.52652349127913 * AcceptedCmp40
2476928   +          +    -0.97663634905647 * AcceptedCmp50  +    -0.94352222509088 *
2476929   +        Complain0  +    -0.63297203617355 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.19875423759582 * AcceptedCmp10 + -1.84163905120352 *
AcceptedCmp20 + -1.63149345314696 * AcceptedCmp30 + -1.52652349127913 * AcceptedCmp40 +
-0.97663634905647 * AcceptedCmp50 + -0.94352222509088 * Complain0 + -0.63297203617355 *
HigherEducationBinary0 ;
2476930   +   H1x1_2  = H1x1_2  +      0.0505791781839 * AcceptedCmp10
2476931   +          +    -0.19407965320143 * AcceptedCmp20  +     0.35537657271506 *
2476932   +        AcceptedCmp30  +    -0.84577216347728 * AcceptedCmp40
2476933   +          +     1.73085566880686 * AcceptedCmp50  +     0.05800586053869 *
2476934   +        Complain0  +    -0.62505561129469 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.0505791781839 * AcceptedCmp10 + -0.19407965320143 *
AcceptedCmp20 + 0.35537657271506 * AcceptedCmp30 + -0.84577216347728 * AcceptedCmp40 +
1.73085566880686 * AcceptedCmp50 + 0.05800586053869 * Complain0 + -0.62505561129469 *
HigherEducationBinary0 ;
2476935   +   H1x1_3  = H1x1_3  +     0.54825581966403 * AcceptedCmp10
2476936   +          +     -0.0966204838125 * AcceptedCmp20  +    -1.31707923763053 *
2476937   +        AcceptedCmp30  +    -1.21021077486757 * AcceptedCmp40
2476938   +          +     3.29102250037389 * AcceptedCmp50  +    -0.16383687725206 *
2476939   +        Complain0  +     0.00651446514934 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.54825581966403 * AcceptedCmp10 + -0.0966204838125 *
AcceptedCmp20 + -1.31707923763053 * AcceptedCmp30 + -1.21021077486757 * AcceptedCmp40 +
3.29102250037389 * AcceptedCmp50 + -0.16383687725206 * Complain0 + 0.00651446514934 *
HigherEducationBinary0 ;
2476940   +   H1x1_4  = H1x1_4  +    -1.18573650260336 * AcceptedCmp10
2476941   +          +    -1.73968979068234 * AcceptedCmp20  +    -1.31277698137778 *
2476942   +        AcceptedCmp30  +    -1.74346538593922 * AcceptedCmp40
2476943   +          +    -0.72543919818299 * AcceptedCmp50  +    -0.06328353200384 *
2476944   +        Complain0  +     0.74828735398796 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -1.18573650260336 * AcceptedCmp10 + -1.73968979068234
* AcceptedCmp20 + -1.31277698137778 * AcceptedCmp30 + -1.74346538593922 * AcceptedCmp40 +
-0.72543919818299 * AcceptedCmp50 + -0.06328353200384 * Complain0 + 0.74828735398796 *
HigherEducationBinary0 ;
2476945   +   H1x1_5  = H1x1_5  +    -0.19622185523754 * AcceptedCmp10
2476946   +          +     -0.4643498903813 * AcceptedCmp20  +     0.69293644934542 *
2476947   +        AcceptedCmp30  +     0.23077838801355 * AcceptedCmp40
2476948   +          +     0.53061813608476 * AcceptedCmp50  +    -0.56870999936869 *
2476949   +        Complain0  +      0.5917990310858 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.19622185523754 * AcceptedCmp10 + -0.4643498903813 *
AcceptedCmp20 + 0.69293644934542 * AcceptedCmp30 + 0.23077838801355 * AcceptedCmp40 +
0.53061813608476 * AcceptedCmp50 + -0.56870999936869 * Complain0 + 0.5917990310858 *
HigherEducationBinary0 ;
2476950   +   H1x1_1  = H1x1_1  +     1.01422000032629 * Education2n_Cycle
2476951   +          +    -0.77619298826287 * EducationBasic  +     0.35633748974614 *
2476952   +        EducationGraduation  +     0.98491516107588 * EducationMaster
2476953   +          +    -0.27797737429678 * Marital_StatusDivorced
2476954   +          +    -0.08137635862327 * Marital_StatusMarried
2476955   +          +     0.06275411820495 * Marital_StatusSingle
2476956   +          +    -0.19979743343415 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 1.01422000032629 * Education2n_Cycle +
-0.77619298826287 * EducationBasic + 0.35633748974614 * EducationGraduation + 0.98491516107588
* EducationMaster + -0.27797737429678 * Marital_StatusDivorced + -0.08137635862327 *
Marital_StatusMarried + 0.06275411820495 * Marital_StatusSingle + -0.19979743343415 *
Marital_StatusTogether ;
2476957   +   H1x1_2  = H1x1_2  +    -0.66224206017124 * Education2n_Cycle
2476958   +          +     0.80729589186486 * EducationBasic  +     0.75931615755998 *
2476959   +        EducationGraduation  +    -0.05470462753112 * EducationMaster
2476960   +          +     0.05151426841441 * Marital_StatusDivorced
2476961   +          +     1.19165082030442 * Marital_StatusMarried
2476962   +          +    -1.08257080662611 * Marital_StatusSingle
2476963   +          +     0.13534863375625 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.66224206017124 * Education2n_Cycle +
0.80729589186486 * EducationBasic + 0.75931615755998 * EducationGraduation + -0.05470462753112
* EducationMaster + 0.05151426841441 * Marital_StatusDivorced + 1.19165082030442 *
Marital_StatusMarried + -1.08257080662611 * Marital_StatusSingle + 0.13534863375625 *
Marital_StatusTogether ;
2476964   +   H1x1_3  = H1x1_3  +     0.20065577451105 * Education2n_Cycle
2476965   +          +    -0.14205714608311 * EducationBasic  +    -0.07077711368393 *
2476966   +        EducationGraduation  +     0.40262329710793 * EducationMaster
2476967   +          +      0.0238206459022 * Marital_StatusDivorced
2476968   +          +     -0.4653244204261 * Marital_StatusMarried
2476969   +          +     0.13051613619882 * Marital_StatusSingle
2476970   +          +    -0.35951366919755 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.20065577451105 * Education2n_Cycle +
-0.14205714608311 * EducationBasic + -0.07077711368393 * EducationGraduation +
0.40262329710793 * EducationMaster + 0.0238206459022 * Marital_StatusDivorced +
-0.4653244204261 * Marital_StatusMarried + 0.13051613619882 * Marital_StatusSingle +
-0.35951366919755 * Marital_StatusTogether ;
2476971   +   H1x1_4  = H1x1_4  +     -0.8555672630555 * Education2n_Cycle
2476972   +          +     0.58439980233621 * EducationBasic  +     0.04784356342853 *
2476973   +        EducationGraduation  +    -0.79764992264249 * EducationMaster
2476974   +          +     -0.7449356409222 * Marital_StatusDivorced
2476975   +          +    -1.46604673521535 * Marital_StatusMarried
2476976   +          +     0.74484771688818 * Marital_StatusSingle
2476977   +          +    -1.91273009779071 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.8555672630555 * Education2n_Cycle +
0.58439980233621 * EducationBasic + 0.04784356342853 * EducationGraduation + -0.79764992264249
* EducationMaster + -0.7449356409222 * Marital_StatusDivorced + -1.46604673521535 *
Marital_StatusMarried + 0.74484771688818 * Marital_StatusSingle + -1.91273009779071 *
Marital_StatusTogether ;
2476978   +   H1x1_5  = H1x1_5  +    -0.45561096683674 * Education2n_Cycle
2476979   +          +    -0.08389156101858 * EducationBasic  +    -1.24281299616343 *
2476980   +        EducationGraduation  +    -0.00999807517226 * EducationMaster
2476981   +          +    -3.68044980584423 * Marital_StatusDivorced
2476982   +          +     3.14587407902338 * Marital_StatusMarried
2476983   +          +    -2.66118132753024 * Marital_StatusSingle
2476984   +          +     3.50991640149914 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.45561096683674 * Education2n_Cycle +
-0.08389156101858 * EducationBasic + -1.24281299616343 * EducationGraduation +
-0.00999807517226 * EducationMaster + -3.68044980584423 * Marital_StatusDivorced +
3.14587407902338 * Marital_StatusMarried + -2.66118132753024 * Marital_StatusSingle +
3.50991640149914 * Marital_StatusTogether ;
2476985   +   H1x1_1  =    -2.87464368543529 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -2.87464368543529 + H1x1_1 ;
2476986   +   H1x1_2  =     0.69745433976458 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.69745433976458 + H1x1_2 ;
2476987   +   H1x1_3  =    -0.71895677211617 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.71895677211617 + H1x1_3 ;
2476988   +   H1x1_4  =    -3.07619671976178 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -3.07619671976178 + H1x1_4 ;
2476989   +   H1x1_5  =    -1.74345318000473 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.74345318000473 + H1x1_5 ;
2476990   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2476991   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2476992   +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
2476993   +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
2476994   +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
2476995   +   H1x1_4  = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
2476996   +   H1x1_5  = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_5 = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
2476997   +END;
MPRINT(EM_DIAGRAM):   END;
2476998   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2476999   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2477000   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2477001   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2477002   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2477003   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
2477004   +END;
MPRINT(EM_DIAGRAM):   END;
2477005   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2477006   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
2477007   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2477008   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2477009   +   H1x2_1  =     0.02206354442682 * S_AcceptedCmpTotal
2477010   +          +    -1.34753268833642 * S_Age  +    -2.08377331969695 * S_Frq
2477011   +          +    -1.39854535380539 * S_Income  +     2.13620611759545 *
2477012   +        S_Kidhome  +    -1.50515365217324 * S_Mnt  +     0.85499321862984 *
2477013   +        S_MntFishProducts  +    -1.17732452790345 * S_MntFruits
2477014   +          +     1.52355640622249 * S_MntGoldProds  +     1.31854239360457 *
2477015   +        S_MntMeatProducts  +    -0.03265851293389 * S_MntSweetProducts
2477016   +          +     2.18666242847435 * S_MntWines  +     0.08246249957908 *
2477017   +        S_MonthsAsCustomer  +    -1.06901902236609 * S_NumCatalogPurchases
2477018   +          +     0.89261880438741 * S_NumDealsPurchases
2477019   +          +    -1.61647413199892 * S_NumDistPurchases
2477020   +          +    -0.56304669045195 * S_NumStorePurchases
2477021   +          +      0.7766837080945 * S_NumWebPurchases
2477022   +          +     -2.2953497398902 * S_NumWebVisitsMonth
2477023   +          +    -3.34547809243199 * S_RFMstat  +     0.07311937799261 *
2477024   +        S_RMntFrq  +     -0.5786489917247 * S_Recency
2477025   +          +    -1.06532056361117 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.02206354442682 * S_AcceptedCmpTotal + -1.34753268833642 *
S_Age + -2.08377331969695 * S_Frq + -1.39854535380539 * S_Income + 2.13620611759545 *
S_Kidhome + -1.50515365217324 * S_Mnt + 0.85499321862984 * S_MntFishProducts +
-1.17732452790345 * S_MntFruits + 1.52355640622249 * S_MntGoldProds + 1.31854239360457 *
S_MntMeatProducts + -0.03265851293389 * S_MntSweetProducts + 2.18666242847435 * S_MntWines +
0.08246249957908 * S_MonthsAsCustomer + -1.06901902236609 * S_NumCatalogPurchases +
0.89261880438741 * S_NumDealsPurchases + -1.61647413199892 * S_NumDistPurchases +
-0.56304669045195 * S_NumStorePurchases + 0.7766837080945 * S_NumWebPurchases +
-2.2953497398902 * S_NumWebVisitsMonth + -3.34547809243199 * S_RFMstat + 0.07311937799261 *
S_RMntFrq + -0.5786489917247 * S_Recency + -1.06532056361117 * S_Teenhome ;
2477026   +   H1x2_2  =      0.0341880757331 * S_AcceptedCmpTotal
2477027   +          +     0.72034771315738 * S_Age  +     0.64155966340389 * S_Frq
2477028   +          +    -1.06570008729492 * S_Income  +    -1.84532938869849 *
2477029   +        S_Kidhome  +     0.94433555965982 * S_Mnt  +     1.23831916074831 *
2477030   +        S_MntFishProducts  +     1.33415870886475 * S_MntFruits
2477031   +          +    -0.51253922893993 * S_MntGoldProds  +     0.02241594009025 *
2477032   +        S_MntMeatProducts  +     -1.2811169586741 * S_MntSweetProducts
2477033   +          +     1.96686773881953 * S_MntWines  +     1.44655944802715 *
2477034   +        S_MonthsAsCustomer  +    -1.18627316384798 * S_NumCatalogPurchases
2477035   +          +     1.02431289724643 * S_NumDealsPurchases
2477036   +          +    -0.90960173637405 * S_NumDistPurchases
2477037   +          +     1.24283490404772 * S_NumStorePurchases
2477038   +          +     1.23072413154592 * S_NumWebPurchases
2477039   +          +    -0.21533378473931 * S_NumWebVisitsMonth
2477040   +          +     1.26438704884008 * S_RFMstat  +      0.0014042871018 *
2477041   +        S_RMntFrq  +     0.32357651423135 * S_Recency
2477042   +          +    -0.49834512433407 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.0341880757331 * S_AcceptedCmpTotal + 0.72034771315738 * S_Age
+ 0.64155966340389 * S_Frq + -1.06570008729492 * S_Income + -1.84532938869849 * S_Kidhome +
0.94433555965982 * S_Mnt + 1.23831916074831 * S_MntFishProducts + 1.33415870886475 *
S_MntFruits + -0.51253922893993 * S_MntGoldProds + 0.02241594009025 * S_MntMeatProducts +
-1.2811169586741 * S_MntSweetProducts + 1.96686773881953 * S_MntWines + 1.44655944802715 *
S_MonthsAsCustomer + -1.18627316384798 * S_NumCatalogPurchases + 1.02431289724643 *
S_NumDealsPurchases + -0.90960173637405 * S_NumDistPurchases + 1.24283490404772 *
S_NumStorePurchases + 1.23072413154592 * S_NumWebPurchases + -0.21533378473931 *
S_NumWebVisitsMonth + 1.26438704884008 * S_RFMstat + 0.0014042871018 * S_RMntFrq +
0.32357651423135 * S_Recency + -0.49834512433407 * S_Teenhome ;
2477043   +   H1x2_3  =    -0.57066024275015 * S_AcceptedCmpTotal
2477044   +          +     0.16615358153136 * S_Age  +    -0.60017461612499 * S_Frq
2477045   +          +    -0.21195793925019 * S_Income  +    -0.36049126996499 *
2477046   +        S_Kidhome  +     0.97458542661118 * S_Mnt  +     0.62279162661518 *
2477047   +        S_MntFishProducts  +    -0.44715765367363 * S_MntFruits
2477048   +          +     0.91519163455361 * S_MntGoldProds  +     1.07312113398768 *
2477049   +        S_MntMeatProducts  +    -1.61967017526055 * S_MntSweetProducts
2477050   +          +    -1.88327677412185 * S_MntWines  +    -1.67067768979245 *
2477051   +        S_MonthsAsCustomer  +    -0.64725516463464 * S_NumCatalogPurchases
2477052   +          +    -0.26249596122198 * S_NumDealsPurchases
2477053   +          +    -0.63328519804758 * S_NumDistPurchases
2477054   +          +    -0.88467503575886 * S_NumStorePurchases
2477055   +          +    -0.83120537310738 * S_NumWebPurchases
2477056   +          +     1.40072282351719 * S_NumWebVisitsMonth
2477057   +          +     1.42591300760984 * S_RFMstat  +     1.93593865100837 *
2477058   +        S_RMntFrq  +     -1.2794275536508 * S_Recency
2477059   +          +    -0.78582664529339 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.57066024275015 * S_AcceptedCmpTotal + 0.16615358153136 *
S_Age + -0.60017461612499 * S_Frq + -0.21195793925019 * S_Income + -0.36049126996499 *
S_Kidhome + 0.97458542661118 * S_Mnt + 0.62279162661518 * S_MntFishProducts +
-0.44715765367363 * S_MntFruits + 0.91519163455361 * S_MntGoldProds + 1.07312113398768 *
S_MntMeatProducts + -1.61967017526055 * S_MntSweetProducts + -1.88327677412185 * S_MntWines +
-1.67067768979245 * S_MonthsAsCustomer + -0.64725516463464 * S_NumCatalogPurchases +
-0.26249596122198 * S_NumDealsPurchases + -0.63328519804758 * S_NumDistPurchases +
-0.88467503575886 * S_NumStorePurchases + -0.83120537310738 * S_NumWebPurchases +
1.40072282351719 * S_NumWebVisitsMonth + 1.42591300760984 * S_RFMstat + 1.93593865100837 *
S_RMntFrq + -1.2794275536508 * S_Recency + -0.78582664529339 * S_Teenhome ;
2477060   +   H1x2_4  =     0.70159995537759 * S_AcceptedCmpTotal
2477061   +          +    -0.70199351793792 * S_Age  +     1.63573967285806 * S_Frq
2477062   +          +     -0.1930098634567 * S_Income  +    -0.43173926207337 *
2477063   +        S_Kidhome  +    -0.45239271926178 * S_Mnt  +    -0.14139816383874 *
2477064   +        S_MntFishProducts  +    -0.70568635660703 * S_MntFruits
2477065   +          +     1.68796268038024 * S_MntGoldProds  +     0.80481626355934 *
2477066   +        S_MntMeatProducts  +     0.29831384975096 * S_MntSweetProducts
2477067   +          +    -0.50792336172825 * S_MntWines  +     0.80425149159678 *
2477068   +        S_MonthsAsCustomer  +    -2.26171302044375 * S_NumCatalogPurchases
2477069   +          +     1.30167361451945 * S_NumDealsPurchases
2477070   +          +     1.45457613716235 * S_NumDistPurchases
2477071   +          +    -0.40226463685252 * S_NumStorePurchases
2477072   +          +     0.36369161683572 * S_NumWebPurchases
2477073   +          +    -2.65684851610403 * S_NumWebVisitsMonth
2477074   +          +    -1.14810413235545 * S_RFMstat  +       1.291857215261 *
2477075   +        S_RMntFrq  +     1.36572595403825 * S_Recency
2477076   +          +    -0.54958418574963 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.70159995537759 * S_AcceptedCmpTotal + -0.70199351793792 *
S_Age + 1.63573967285806 * S_Frq + -0.1930098634567 * S_Income + -0.43173926207337 * S_Kidhome
+ -0.45239271926178 * S_Mnt + -0.14139816383874 * S_MntFishProducts + -0.70568635660703 *
S_MntFruits + 1.68796268038024 * S_MntGoldProds + 0.80481626355934 * S_MntMeatProducts +
0.29831384975096 * S_MntSweetProducts + -0.50792336172825 * S_MntWines + 0.80425149159678 *
S_MonthsAsCustomer + -2.26171302044375 * S_NumCatalogPurchases + 1.30167361451945 *
S_NumDealsPurchases + 1.45457613716235 * S_NumDistPurchases + -0.40226463685252 *
S_NumStorePurchases + 0.36369161683572 * S_NumWebPurchases + -2.65684851610403 *
S_NumWebVisitsMonth + -1.14810413235545 * S_RFMstat + 1.291857215261 * S_RMntFrq +
1.36572595403825 * S_Recency + -0.54958418574963 * S_Teenhome ;
2477077   +   H1x2_5  =    -1.00456225444665 * S_AcceptedCmpTotal
2477078   +          +     0.19033874303798 * S_Age  +    -0.62578451616415 * S_Frq
2477079   +          +    -0.96647190269426 * S_Income  +     1.77002676974464 *
2477080   +        S_Kidhome  +    -0.53816249322166 * S_Mnt  +     0.21322270253871 *
2477081   +        S_MntFishProducts  +     0.84210241961105 * S_MntFruits
2477082   +          +     0.44153678515007 * S_MntGoldProds  +    -0.23120999196747 *
2477083   +        S_MntMeatProducts  +     0.62950730283125 * S_MntSweetProducts
2477084   +          +    -0.64043011108056 * S_MntWines  +    -2.74922907599662 *
2477085   +        S_MonthsAsCustomer  +     0.67939322758717 * S_NumCatalogPurchases
2477086   +          +    -0.54572162665338 * S_NumDealsPurchases
2477087   +          +      0.9607390449318 * S_NumDistPurchases
2477088   +          +    -0.03259470545754 * S_NumStorePurchases
2477089   +          +     0.19202241423412 * S_NumWebPurchases
2477090   +          +     0.61085831658456 * S_NumWebVisitsMonth
2477091   +          +    -0.08582160429243 * S_RFMstat  +     1.73862452808565 *
2477092   +        S_RMntFrq  +    -0.01216476188714 * S_Recency
2477093   +          +     -0.3304403270473 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -1.00456225444665 * S_AcceptedCmpTotal + 0.19033874303798 *
S_Age + -0.62578451616415 * S_Frq + -0.96647190269426 * S_Income + 1.77002676974464 *
S_Kidhome + -0.53816249322166 * S_Mnt + 0.21322270253871 * S_MntFishProducts +
0.84210241961105 * S_MntFruits + 0.44153678515007 * S_MntGoldProds + -0.23120999196747 *
S_MntMeatProducts + 0.62950730283125 * S_MntSweetProducts + -0.64043011108056 * S_MntWines +
-2.74922907599662 * S_MonthsAsCustomer + 0.67939322758717 * S_NumCatalogPurchases +
-0.54572162665338 * S_NumDealsPurchases + 0.9607390449318 * S_NumDistPurchases +
-0.03259470545754 * S_NumStorePurchases + 0.19202241423412 * S_NumWebPurchases +
0.61085831658456 * S_NumWebVisitsMonth + -0.08582160429243 * S_RFMstat + 1.73862452808565 *
S_RMntFrq + -0.01216476188714 * S_Recency + -0.3304403270473 * S_Teenhome ;
2477094   +   H1x2_1  = H1x2_1  +     0.83453601566539 * AcceptedCmp10
2477095   +          +     0.59109136511077 * AcceptedCmp20  +     -0.9669340701943 *
2477096   +        AcceptedCmp30  +    -2.31468262956126 * AcceptedCmp40
2477097   +          +    -0.76277791850069 * AcceptedCmp50  +     0.30895289981412 *
2477098   +        Complain0  +       0.147233855837 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 0.83453601566539 * AcceptedCmp10 + 0.59109136511077 *
AcceptedCmp20 + -0.9669340701943 * AcceptedCmp30 + -2.31468262956126 * AcceptedCmp40 +
-0.76277791850069 * AcceptedCmp50 + 0.30895289981412 * Complain0 + 0.147233855837 *
HigherEducationBinary0 ;
2477099   +   H1x2_2  = H1x2_2  +     0.42789425545567 * AcceptedCmp10
2477100   +          +     0.08505833889085 * AcceptedCmp20  +    -1.15112188313855 *
2477101   +        AcceptedCmp30  +    -1.24362486486214 * AcceptedCmp40
2477102   +          +     0.04131419116048 * AcceptedCmp50  +    -0.45255799355317 *
2477103   +        Complain0  +    -0.32616423192953 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.42789425545567 * AcceptedCmp10 + 0.08505833889085 *
AcceptedCmp20 + -1.15112188313855 * AcceptedCmp30 + -1.24362486486214 * AcceptedCmp40 +
0.04131419116048 * AcceptedCmp50 + -0.45255799355317 * Complain0 + -0.32616423192953 *
HigherEducationBinary0 ;
2477104   +   H1x2_3  = H1x2_3  +    -0.03136360497649 * AcceptedCmp10
2477105   +          +     0.33867713207886 * AcceptedCmp20  +     0.05809342990544 *
2477106   +        AcceptedCmp30  +    -0.06416815079894 * AcceptedCmp40
2477107   +          +     1.14617960682421 * AcceptedCmp50  +    -0.82461320336041 *
2477108   +        Complain0  +     0.58944444655621 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -0.03136360497649 * AcceptedCmp10 + 0.33867713207886 *
AcceptedCmp20 + 0.05809342990544 * AcceptedCmp30 + -0.06416815079894 * AcceptedCmp40 +
1.14617960682421 * AcceptedCmp50 + -0.82461320336041 * Complain0 + 0.58944444655621 *
HigherEducationBinary0 ;
2477109   +   H1x2_4  = H1x2_4  +    -1.12705500616438 * AcceptedCmp10
2477110   +          +      0.0487863004734 * AcceptedCmp20  +     1.30229008593765 *
2477111   +        AcceptedCmp30  +      0.1726718549662 * AcceptedCmp40
2477112   +          +     0.68443569845295 * AcceptedCmp50  +     2.39733248962228 *
2477113   +        Complain0  +      -0.620937291929 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + -1.12705500616438 * AcceptedCmp10 + 0.0487863004734 *
AcceptedCmp20 + 1.30229008593765 * AcceptedCmp30 + 0.1726718549662 * AcceptedCmp40 +
0.68443569845295 * AcceptedCmp50 + 2.39733248962228 * Complain0 + -0.620937291929 *
HigherEducationBinary0 ;
2477114   +   H1x2_5  = H1x2_5  +     1.42400460803453 * AcceptedCmp10
2477115   +          +    -1.22361480936625 * AcceptedCmp20  +     1.31090186367202 *
2477116   +        AcceptedCmp30  +    -1.40343404818254 * AcceptedCmp40
2477117   +          +    -0.57377230862494 * AcceptedCmp50  +     0.58622740778295 *
2477118   +        Complain0  +    -0.83222074319962 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 1.42400460803453 * AcceptedCmp10 + -1.22361480936625 *
AcceptedCmp20 + 1.31090186367202 * AcceptedCmp30 + -1.40343404818254 * AcceptedCmp40 +
-0.57377230862494 * AcceptedCmp50 + 0.58622740778295 * Complain0 + -0.83222074319962 *
HigherEducationBinary0 ;
2477119   +   H1x2_1  = H1x2_1  +     1.56508379719546 * Education2n_Cycle
2477120   +          +     0.52302987210661 * EducationBasic  +     -0.0570045326497 *
2477121   +        EducationGraduation  +    -0.01838790774804 * EducationMaster
2477122   +          +    -2.32430245081383 * Marital_StatusDivorced
2477123   +          +    -0.09815511356796 * Marital_StatusMarried
2477124   +          +     0.13075504294551 * Marital_StatusSingle
2477125   +          +     -0.0278875765201 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 1.56508379719546 * Education2n_Cycle +
0.52302987210661 * EducationBasic + -0.0570045326497 * EducationGraduation + -0.01838790774804
* EducationMaster + -2.32430245081383 * Marital_StatusDivorced + -0.09815511356796 *
Marital_StatusMarried + 0.13075504294551 * Marital_StatusSingle + -0.0278875765201 *
Marital_StatusTogether ;
2477126   +   H1x2_2  = H1x2_2  +    -0.85592920992847 * Education2n_Cycle
2477127   +          +     0.93272618259957 * EducationBasic  +     0.48987674771079 *
2477128   +        EducationGraduation  +    -1.12454002820451 * EducationMaster
2477129   +          +    -0.65574603869224 * Marital_StatusDivorced
2477130   +          +     1.54672472575294 * Marital_StatusMarried
2477131   +          +    -1.59817602340208 * Marital_StatusSingle
2477132   +          +     1.94381954546813 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.85592920992847 * Education2n_Cycle +
0.93272618259957 * EducationBasic + 0.48987674771079 * EducationGraduation + -1.12454002820451
* EducationMaster + -0.65574603869224 * Marital_StatusDivorced + 1.54672472575294 *
Marital_StatusMarried + -1.59817602340208 * Marital_StatusSingle + 1.94381954546813 *
Marital_StatusTogether ;
2477133   +   H1x2_3  = H1x2_3  +     0.37093371596523 * Education2n_Cycle
2477134   +          +    -2.05531065359129 * EducationBasic  +     1.16090743585078 *
2477135   +        EducationGraduation  +     0.87547303889444 * EducationMaster
2477136   +          +    -0.50911604604781 * Marital_StatusDivorced
2477137   +          +     0.30403066135719 * Marital_StatusMarried
2477138   +          +      0.1026950879545 * Marital_StatusSingle
2477139   +          +     0.01000166524405 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.37093371596523 * Education2n_Cycle +
-2.05531065359129 * EducationBasic + 1.16090743585078 * EducationGraduation + 0.87547303889444
* EducationMaster + -0.50911604604781 * Marital_StatusDivorced + 0.30403066135719 *
Marital_StatusMarried + 0.1026950879545 * Marital_StatusSingle + 0.01000166524405 *
Marital_StatusTogether ;
2477140   +   H1x2_4  = H1x2_4  +     1.28509086202466 * Education2n_Cycle
2477141   +          +     0.07860157688162 * EducationBasic  +     0.24607672351689 *
2477142   +        EducationGraduation  +    -0.06009602645566 * EducationMaster
2477143   +          +     1.07371507133318 * Marital_StatusDivorced
2477144   +          +    -0.07097334129051 * Marital_StatusMarried
2477145   +          +    -0.48339718568621 * Marital_StatusSingle
2477146   +          +    -0.08900780355835 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 1.28509086202466 * Education2n_Cycle +
0.07860157688162 * EducationBasic + 0.24607672351689 * EducationGraduation + -0.06009602645566
* EducationMaster + 1.07371507133318 * Marital_StatusDivorced + -0.07097334129051 *
Marital_StatusMarried + -0.48339718568621 * Marital_StatusSingle + -0.08900780355835 *
Marital_StatusTogether ;
2477147   +   H1x2_5  = H1x2_5  +    -1.08109633810919 * Education2n_Cycle
2477148   +          +    -0.54966585100103 * EducationBasic  +      0.5388683065169 *
2477149   +        EducationGraduation  +     0.46960055830119 * EducationMaster
2477150   +          +     1.04342893515504 * Marital_StatusDivorced
2477151   +          +     1.16171312085032 * Marital_StatusMarried
2477152   +          +    -0.30201646939913 * Marital_StatusSingle
2477153   +          +     1.84122645884771 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + -1.08109633810919 * Education2n_Cycle +
-0.54966585100103 * EducationBasic + 0.5388683065169 * EducationGraduation + 0.46960055830119
* EducationMaster + 1.04342893515504 * Marital_StatusDivorced + 1.16171312085032 *
Marital_StatusMarried + -0.30201646939913 * Marital_StatusSingle + 1.84122645884771 *
Marital_StatusTogether ;
2477154   +   H1x2_1  =     1.56970796025332 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.56970796025332 + H1x2_1 ;
2477155   +   H1x2_2  =    -0.11766478836824 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.11766478836824 + H1x2_2 ;
2477156   +   H1x2_3  =    -2.78218653641036 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -2.78218653641036 + H1x2_3 ;
2477157   +   H1x2_4  =     0.51979515224467 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.51979515224467 + H1x2_4 ;
2477158   +   H1x2_5  =     -0.4635890987824 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.4635890987824 + H1x2_5 ;
2477159   +END;
MPRINT(EM_DIAGRAM):   END;
2477160   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2477161   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
2477162   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
2477163   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
2477164   +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
2477165   +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
2477166   +END;
MPRINT(EM_DIAGRAM):   END;
2477167   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2477168   +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
2477169   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2477170   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2477171   +   H1x3_1  =     0.04411772880581 * S_AcceptedCmpTotal
2477172   +          +    -1.62725197326682 * S_Age  +    -1.99668213406033 * S_Frq
2477173   +          +     -1.2265241921112 * S_Income  +     1.99702869958035 *
2477174   +        S_Kidhome  +    -1.46762539068512 * S_Mnt  +     0.97784534044189 *
2477175   +        S_MntFishProducts  +    -1.07945265688497 * S_MntFruits
2477176   +          +     2.09306294956674 * S_MntGoldProds  +     1.46219664114361 *
2477177   +        S_MntMeatProducts  +     0.10961158671991 * S_MntSweetProducts
2477178   +          +     2.03040669273977 * S_MntWines  +     0.16536646017211 *
2477179   +        S_MonthsAsCustomer  +    -0.88077951545076 * S_NumCatalogPurchases
2477180   +          +     1.32256781010645 * S_NumDealsPurchases
2477181   +          +    -1.43015438973619 * S_NumDistPurchases
2477182   +          +    -0.63489289584421 * S_NumStorePurchases
2477183   +          +     0.90508699686841 * S_NumWebPurchases
2477184   +          +    -2.24234858061014 * S_NumWebVisitsMonth
2477185   +          +     -2.9988027991146 * S_RFMstat  +     0.35987461993699 *
2477186   +        S_RMntFrq  +    -1.09317668626142 * S_Recency
2477187   +          +    -1.09925349438658 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.04411772880581 * S_AcceptedCmpTotal + -1.62725197326682 *
S_Age + -1.99668213406033 * S_Frq + -1.2265241921112 * S_Income + 1.99702869958035 * S_Kidhome
+ -1.46762539068512 * S_Mnt + 0.97784534044189 * S_MntFishProducts + -1.07945265688497 *
S_MntFruits + 2.09306294956674 * S_MntGoldProds + 1.46219664114361 * S_MntMeatProducts +
0.10961158671991 * S_MntSweetProducts + 2.03040669273977 * S_MntWines + 0.16536646017211 *
S_MonthsAsCustomer + -0.88077951545076 * S_NumCatalogPurchases + 1.32256781010645 *
S_NumDealsPurchases + -1.43015438973619 * S_NumDistPurchases + -0.63489289584421 *
S_NumStorePurchases + 0.90508699686841 * S_NumWebPurchases + -2.24234858061014 *
S_NumWebVisitsMonth + -2.9988027991146 * S_RFMstat + 0.35987461993699 * S_RMntFrq +
-1.09317668626142 * S_Recency + -1.09925349438658 * S_Teenhome ;
2477188   +   H1x3_2  =     0.10522923391314 * S_AcceptedCmpTotal
2477189   +          +     0.68417479453112 * S_Age  +     0.46966162186743 * S_Frq
2477190   +          +    -1.21537535753115 * S_Income  +    -1.87423294109672 *
2477191   +        S_Kidhome  +     0.76913864731495 * S_Mnt  +     1.08535778796502 *
2477192   +        S_MntFishProducts  +     1.27743864099826 * S_MntFruits
2477193   +          +     -0.3186089651882 * S_MntGoldProds  +    -0.00224333051647 *
2477194   +        S_MntMeatProducts  +    -1.28169616734092 * S_MntSweetProducts
2477195   +          +     1.67350500234032 * S_MntWines  +     1.09584504562467 *
2477196   +        S_MonthsAsCustomer  +    -1.45467876727494 * S_NumCatalogPurchases
2477197   +          +     0.85965187264096 * S_NumDealsPurchases
2477198   +          +    -1.15239933286756 * S_NumDistPurchases
2477199   +          +     1.20800889102387 * S_NumStorePurchases
2477200   +          +     1.08790389130242 * S_NumWebPurchases
2477201   +          +    -0.13665551161149 * S_NumWebVisitsMonth
2477202   +          +     1.02103499612659 * S_RFMstat  +    -0.12980097143044 *
2477203   +        S_RMntFrq  +     0.65854311654256 * S_Recency
2477204   +          +    -0.60999209572192 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_2 = 0.10522923391314 * S_AcceptedCmpTotal + 0.68417479453112 *
S_Age + 0.46966162186743 * S_Frq + -1.21537535753115 * S_Income + -1.87423294109672 *
S_Kidhome + 0.76913864731495 * S_Mnt + 1.08535778796502 * S_MntFishProducts + 1.27743864099826
* S_MntFruits + -0.3186089651882 * S_MntGoldProds + -0.00224333051647 * S_MntMeatProducts +
-1.28169616734092 * S_MntSweetProducts + 1.67350500234032 * S_MntWines + 1.09584504562467 *
S_MonthsAsCustomer + -1.45467876727494 * S_NumCatalogPurchases + 0.85965187264096 *
S_NumDealsPurchases + -1.15239933286756 * S_NumDistPurchases + 1.20800889102387 *
S_NumStorePurchases + 1.08790389130242 * S_NumWebPurchases + -0.13665551161149 *
S_NumWebVisitsMonth + 1.02103499612659 * S_RFMstat + -0.12980097143044 * S_RMntFrq +
0.65854311654256 * S_Recency + -0.60999209572192 * S_Teenhome ;
2477205   +   H1x3_3  =    -0.72575004293074 * S_AcceptedCmpTotal
2477206   +          +     0.34932839743259 * S_Age  +     -0.2673460618328 * S_Frq
2477207   +          +     0.25743187687481 * S_Income  +    -0.02172890929346 *
2477208   +        S_Kidhome  +     1.21785656626837 * S_Mnt  +     0.37454359336223 *
2477209   +        S_MntFishProducts  +    -0.32600053706408 * S_MntFruits
2477210   +          +     0.57807148940534 * S_MntGoldProds  +     1.14736546512366 *
2477211   +        S_MntMeatProducts  +    -1.41517082393978 * S_MntSweetProducts
2477212   +          +    -1.44899595080061 * S_MntWines  +    -1.45520867126531 *
2477213   +        S_MonthsAsCustomer  +    -0.33372174099196 * S_NumCatalogPurchases
2477214   +          +     -0.5767607129654 * S_NumDealsPurchases
2477215   +          +     -0.2643921429796 * S_NumDistPurchases
2477216   +          +    -0.67417489911206 * S_NumStorePurchases
2477217   +          +    -0.51423877684891 * S_NumWebPurchases
2477218   +          +     1.40328299605176 * S_NumWebVisitsMonth
2477219   +          +     1.35588787174957 * S_RFMstat  +     1.98416436137119 *
2477220   +        S_RMntFrq  +     -0.8447362450681 * S_Recency
2477221   +          +    -1.04372961736437 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_3 = -0.72575004293074 * S_AcceptedCmpTotal + 0.34932839743259 *
S_Age + -0.2673460618328 * S_Frq + 0.25743187687481 * S_Income + -0.02172890929346 * S_Kidhome
+ 1.21785656626837 * S_Mnt + 0.37454359336223 * S_MntFishProducts + -0.32600053706408 *
S_MntFruits + 0.57807148940534 * S_MntGoldProds + 1.14736546512366 * S_MntMeatProducts +
-1.41517082393978 * S_MntSweetProducts + -1.44899595080061 * S_MntWines + -1.45520867126531 *
S_MonthsAsCustomer + -0.33372174099196 * S_NumCatalogPurchases + -0.5767607129654 *
S_NumDealsPurchases + -0.2643921429796 * S_NumDistPurchases + -0.67417489911206 *
S_NumStorePurchases + -0.51423877684891 * S_NumWebPurchases + 1.40328299605176 *
S_NumWebVisitsMonth + 1.35588787174957 * S_RFMstat + 1.98416436137119 * S_RMntFrq +
-0.8447362450681 * S_Recency + -1.04372961736437 * S_Teenhome ;
2477222   +   H1x3_4  =     0.05745684959388 * S_AcceptedCmpTotal
2477223   +          +    -0.71077680161454 * S_Age  +      1.4854566142375 * S_Frq
2477224   +          +    -0.32870416928843 * S_Income  +    -0.24944295149087 *
2477225   +        S_Kidhome  +     -0.8312409740431 * S_Mnt  +    -0.09638646505384 *
2477226   +        S_MntFishProducts  +    -0.86550491354678 * S_MntFruits
2477227   +          +     1.46902858697296 * S_MntGoldProds  +      0.3661164136841 *
2477228   +        S_MntMeatProducts  +     0.43108270077708 * S_MntSweetProducts
2477229   +          +    -0.87140466249616 * S_MntWines  +     0.17511224898094 *
2477230   +        S_MonthsAsCustomer  +    -2.66256923117027 * S_NumCatalogPurchases
2477231   +          +      1.2821617657076 * S_NumDealsPurchases
2477232   +          +     1.26584115202735 * S_NumDistPurchases
2477233   +          +    -0.46597664211833 * S_NumStorePurchases
2477234   +          +     0.45652363472866 * S_NumWebPurchases
2477235   +          +    -2.66296112021252 * S_NumWebVisitsMonth
2477236   +          +    -0.86670667018974 * S_RFMstat  +     0.60866041131732 *
2477237   +        S_RMntFrq  +     1.31886754707923 * S_Recency
2477238   +          +    -0.09949653139413 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_4 = 0.05745684959388 * S_AcceptedCmpTotal + -0.71077680161454 *
S_Age + 1.4854566142375 * S_Frq + -0.32870416928843 * S_Income + -0.24944295149087 * S_Kidhome
+ -0.8312409740431 * S_Mnt + -0.09638646505384 * S_MntFishProducts + -0.86550491354678 *
S_MntFruits + 1.46902858697296 * S_MntGoldProds + 0.3661164136841 * S_MntMeatProducts +
0.43108270077708 * S_MntSweetProducts + -0.87140466249616 * S_MntWines + 0.17511224898094 *
S_MonthsAsCustomer + -2.66256923117027 * S_NumCatalogPurchases + 1.2821617657076 *
S_NumDealsPurchases + 1.26584115202735 * S_NumDistPurchases + -0.46597664211833 *
S_NumStorePurchases + 0.45652363472866 * S_NumWebPurchases + -2.66296112021252 *
S_NumWebVisitsMonth + -0.86670667018974 * S_RFMstat + 0.60866041131732 * S_RMntFrq +
1.31886754707923 * S_Recency + -0.09949653139413 * S_Teenhome ;
2477239   +   H1x3_5  =    -0.66850525418144 * S_AcceptedCmpTotal
2477240   +          +     0.14331320698516 * S_Age  +    -0.82708146094779 * S_Frq
2477241   +          +    -0.95718847240937 * S_Income  +     1.37375648833049 *
2477242   +        S_Kidhome  +    -0.48314397401233 * S_Mnt  +     0.07047324834759 *
2477243   +        S_MntFishProducts  +     0.86114312801139 * S_MntFruits
2477244   +          +     0.54573348379533 * S_MntGoldProds  +    -0.05966372249273 *
2477245   +        S_MntMeatProducts  +     0.47275063848217 * S_MntSweetProducts
2477246   +          +    -0.62962007155261 * S_MntWines  +    -2.38081462831488 *
2477247   +        S_MonthsAsCustomer  +     0.56594272689824 * S_NumCatalogPurchases
2477248   +          +    -0.85162564171681 * S_NumDealsPurchases
2477249   +          +     0.64631099667221 * S_NumDistPurchases
2477250   +          +    -0.03081963858636 * S_NumStorePurchases
2477251   +          +    -0.24124717624664 * S_NumWebPurchases
2477252   +          +     0.56425980772372 * S_NumWebVisitsMonth
2477253   +          +    -0.32254616624678 * S_RFMstat  +     1.84875225899832 *
2477254   +        S_RMntFrq  +     0.08133312388911 * S_Recency
2477255   +          +    -0.19004451996479 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_5 = -0.66850525418144 * S_AcceptedCmpTotal + 0.14331320698516 *
S_Age + -0.82708146094779 * S_Frq + -0.95718847240937 * S_Income + 1.37375648833049 *
S_Kidhome + -0.48314397401233 * S_Mnt + 0.07047324834759 * S_MntFishProducts +
0.86114312801139 * S_MntFruits + 0.54573348379533 * S_MntGoldProds + -0.05966372249273 *
S_MntMeatProducts + 0.47275063848217 * S_MntSweetProducts + -0.62962007155261 * S_MntWines +
-2.38081462831488 * S_MonthsAsCustomer + 0.56594272689824 * S_NumCatalogPurchases +
-0.85162564171681 * S_NumDealsPurchases + 0.64631099667221 * S_NumDistPurchases +
-0.03081963858636 * S_NumStorePurchases + -0.24124717624664 * S_NumWebPurchases +
0.56425980772372 * S_NumWebVisitsMonth + -0.32254616624678 * S_RFMstat + 1.84875225899832 *
S_RMntFrq + 0.08133312388911 * S_Recency + -0.19004451996479 * S_Teenhome ;
2477256   +   H1x3_1  = H1x3_1  +     1.03487942320068 * AcceptedCmp10
2477257   +          +     0.77723443135875 * AcceptedCmp20  +    -1.04686858569959 *
2477258   +        AcceptedCmp30  +    -1.87852311800194 * AcceptedCmp40
2477259   +          +    -0.69838759011672 * AcceptedCmp50  +     0.50242045854463 *
2477260   +        Complain0  +    -0.13339808164255 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + 1.03487942320068 * AcceptedCmp10 + 0.77723443135875 *
AcceptedCmp20 + -1.04686858569959 * AcceptedCmp30 + -1.87852311800194 * AcceptedCmp40 +
-0.69838759011672 * AcceptedCmp50 + 0.50242045854463 * Complain0 + -0.13339808164255 *
HigherEducationBinary0 ;
2477261   +   H1x3_2  = H1x3_2  +     0.39887299789564 * AcceptedCmp10
2477262   +          +     0.12293700562648 * AcceptedCmp20  +    -1.41656670681309 *
2477263   +        AcceptedCmp30  +    -1.04607557362847 * AcceptedCmp40
2477264   +          +     0.02824649030864 * AcceptedCmp50  +    -0.46581865837196 *
2477265   +        Complain0  +    -0.45913631308543 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + 0.39887299789564 * AcceptedCmp10 + 0.12293700562648 *
AcceptedCmp20 + -1.41656670681309 * AcceptedCmp30 + -1.04607557362847 * AcceptedCmp40 +
0.02824649030864 * AcceptedCmp50 + -0.46581865837196 * Complain0 + -0.45913631308543 *
HigherEducationBinary0 ;
2477266   +   H1x3_3  = H1x3_3  +     0.20672868292414 * AcceptedCmp10
2477267   +          +     0.52082182457868 * AcceptedCmp20  +     0.54911826263592 *
2477268   +        AcceptedCmp30  +    -0.02400616289922 * AcceptedCmp40
2477269   +          +     1.22209744911863 * AcceptedCmp50  +    -0.68243413694538 *
2477270   +        Complain0  +     0.15620895311704 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 + 0.20672868292414 * AcceptedCmp10 + 0.52082182457868 *
AcceptedCmp20 + 0.54911826263592 * AcceptedCmp30 + -0.02400616289922 * AcceptedCmp40 +
1.22209744911863 * AcceptedCmp50 + -0.68243413694538 * Complain0 + 0.15620895311704 *
HigherEducationBinary0 ;
2477271   +   H1x3_4  = H1x3_4  +    -0.88269820758187 * AcceptedCmp10
2477272   +          +    -0.19276892535938 * AcceptedCmp20  +     1.26789056018511 *
2477273   +        AcceptedCmp30  +     0.04396979158385 * AcceptedCmp40
2477274   +          +     0.54194186871284 * AcceptedCmp50  +     2.07766091697967 *
2477275   +        Complain0  +    -0.43514178858246 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 + -0.88269820758187 * AcceptedCmp10 + -0.19276892535938
* AcceptedCmp20 + 1.26789056018511 * AcceptedCmp30 + 0.04396979158385 * AcceptedCmp40 +
0.54194186871284 * AcceptedCmp50 + 2.07766091697967 * Complain0 + -0.43514178858246 *
HigherEducationBinary0 ;
2477276   +   H1x3_5  = H1x3_5  +     1.04303179873707 * AcceptedCmp10
2477277   +          +    -1.29742389809739 * AcceptedCmp20  +     1.21708533617895 *
2477278   +        AcceptedCmp30  +    -1.47807634614974 * AcceptedCmp40
2477279   +          +     -0.7694244559597 * AcceptedCmp50  +     0.51798162453723 *
2477280   +        Complain0  +    -0.95513113905832 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 + 1.04303179873707 * AcceptedCmp10 + -1.29742389809739 *
AcceptedCmp20 + 1.21708533617895 * AcceptedCmp30 + -1.47807634614974 * AcceptedCmp40 +
-0.7694244559597 * AcceptedCmp50 + 0.51798162453723 * Complain0 + -0.95513113905832 *
HigherEducationBinary0 ;
2477281   +   H1x3_1  = H1x3_1  +     1.27822716215014 * Education2n_Cycle
2477282   +          +     0.45900505383383 * EducationBasic  +    -0.35822992758656 *
2477283   +        EducationGraduation  +     0.05949934527868 * EducationMaster
2477284   +          +    -2.49973437075558 * Marital_StatusDivorced
2477285   +          +    -0.18076948182574 * Marital_StatusMarried
2477286   +          +     0.13498525495231 * Marital_StatusSingle
2477287   +          +    -0.02365465636052 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + 1.27822716215014 * Education2n_Cycle +
0.45900505383383 * EducationBasic + -0.35822992758656 * EducationGraduation + 0.05949934527868
* EducationMaster + -2.49973437075558 * Marital_StatusDivorced + -0.18076948182574 *
Marital_StatusMarried + 0.13498525495231 * Marital_StatusSingle + -0.02365465636052 *
Marital_StatusTogether ;
2477288   +   H1x3_2  = H1x3_2  +    -1.14981446246051 * Education2n_Cycle
2477289   +          +     0.68006996858541 * EducationBasic  +    -0.06493857044709 *
2477290   +        EducationGraduation  +    -1.22462805502453 * EducationMaster
2477291   +          +       -0.59463732835 * Marital_StatusDivorced
2477292   +          +     1.37741332427598 * Marital_StatusMarried
2477293   +          +     -1.5833455713231 * Marital_StatusSingle
2477294   +          +     1.79205360628448 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + -1.14981446246051 * Education2n_Cycle +
0.68006996858541 * EducationBasic + -0.06493857044709 * EducationGraduation +
-1.22462805502453 * EducationMaster + -0.59463732835 * Marital_StatusDivorced +
1.37741332427598 * Marital_StatusMarried + -1.5833455713231 * Marital_StatusSingle +
1.79205360628448 * Marital_StatusTogether ;
2477295   +   H1x3_3  = H1x3_3  +     0.17779609626753 * Education2n_Cycle
2477296   +          +    -2.22704675950779 * EducationBasic  +     1.30292325944162 *
2477297   +        EducationGraduation  +     0.68083131423474 * EducationMaster
2477298   +          +    -0.44569556289443 * Marital_StatusDivorced
2477299   +          +     0.29918053103557 * Marital_StatusMarried
2477300   +          +    -0.10337314064224 * Marital_StatusSingle
2477301   +          +     0.04054221993299 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 + 0.17779609626753 * Education2n_Cycle +
-2.22704675950779 * EducationBasic + 1.30292325944162 * EducationGraduation + 0.68083131423474
* EducationMaster + -0.44569556289443 * Marital_StatusDivorced + 0.29918053103557 *
Marital_StatusMarried + -0.10337314064224 * Marital_StatusSingle + 0.04054221993299 *
Marital_StatusTogether ;
2477302   +   H1x3_4  = H1x3_4  +     1.16412985277542 * Education2n_Cycle
2477303   +          +     0.18806330813344 * EducationBasic  +     0.00212145829045 *
2477304   +        EducationGraduation  +     0.00087354662697 * EducationMaster
2477305   +          +     1.13881957277462 * Marital_StatusDivorced
2477306   +          +    -0.35849807146313 * Marital_StatusMarried
2477307   +          +    -0.22168731316885 * Marital_StatusSingle
2477308   +          +    -0.22672306263461 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 + 1.16412985277542 * Education2n_Cycle +
0.18806330813344 * EducationBasic + 0.00212145829045 * EducationGraduation + 0.00087354662697
* EducationMaster + 1.13881957277462 * Marital_StatusDivorced + -0.35849807146313 *
Marital_StatusMarried + -0.22168731316885 * Marital_StatusSingle + -0.22672306263461 *
Marital_StatusTogether ;
2477309   +   H1x3_5  = H1x3_5  +    -1.25195599938207 * Education2n_Cycle
2477310   +          +    -0.60946428681789 * EducationBasic  +     0.39993500009227 *
2477311   +        EducationGraduation  +     0.43730905987249 * EducationMaster
2477312   +          +     1.10774969923269 * Marital_StatusDivorced
2477313   +          +     1.08409594073043 * Marital_StatusMarried
2477314   +          +    -0.33145048007894 * Marital_StatusSingle
2477315   +          +     1.68703837664761 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 + -1.25195599938207 * Education2n_Cycle +
-0.60946428681789 * EducationBasic + 0.39993500009227 * EducationGraduation + 0.43730905987249
* EducationMaster + 1.10774969923269 * Marital_StatusDivorced + 1.08409594073043 *
Marital_StatusMarried + -0.33145048007894 * Marital_StatusSingle + 1.68703837664761 *
Marital_StatusTogether ;
2477316   +   H1x3_1  =     1.76093149538288 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 1.76093149538288 + H1x3_1 ;
2477317   +   H1x3_2  =    -0.11243980195421 + H1x3_2 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = -0.11243980195421 + H1x3_2 ;
2477318   +   H1x3_3  =    -2.59474781862449 + H1x3_3 ;
MPRINT(EM_DIAGRAM):   H1x3_3 = -2.59474781862449 + H1x3_3 ;
2477319   +   H1x3_4  =     0.25376473610258 + H1x3_4 ;
MPRINT(EM_DIAGRAM):   H1x3_4 = 0.25376473610258 + H1x3_4 ;
2477320   +   H1x3_5  =    -0.54808648261397 + H1x3_5 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = -0.54808648261397 + H1x3_5 ;
2477321   +   _EPS = SQRT(CONSTANT('MACEPS')) ;
MPRINT(EM_DIAGRAM):   _EPS = SQRT(CONSTANT('MACEPS')) ;
2477322   +   _REC_EPS = 1/_EPS ;
MPRINT(EM_DIAGRAM):   _REC_EPS = 1/_EPS ;
2477323   +   DROP _REC_EPS _EPS ;
MPRINT(EM_DIAGRAM):   DROP _REC_EPS _EPS ;
2477324   +   IF H1x3_1  < _REC_EPS AND H1x3_1  > - _REC_EPS THEN
2477325   +   H1x3_1  = H1x3_1  * H1x3_1 ;
MPRINT(EM_DIAGRAM):   IF H1x3_1 < _REC_EPS AND H1x3_1 > - _REC_EPS THEN H1x3_1 = H1x3_1 *
H1x3_1 ;
2477326   +   ELSE H1x3_1  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x3_1 = _REC_EPS ;
2477327   +   IF H1x3_2  < _REC_EPS AND H1x3_2  > - _REC_EPS THEN
2477328   +   H1x3_2  = H1x3_2  * H1x3_2 ;
MPRINT(EM_DIAGRAM):   IF H1x3_2 < _REC_EPS AND H1x3_2 > - _REC_EPS THEN H1x3_2 = H1x3_2 *
H1x3_2 ;
2477329   +   ELSE H1x3_2  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x3_2 = _REC_EPS ;
2477330   +   IF H1x3_3  < _REC_EPS AND H1x3_3  > - _REC_EPS THEN
2477331   +   H1x3_3  = H1x3_3  * H1x3_3 ;
MPRINT(EM_DIAGRAM):   IF H1x3_3 < _REC_EPS AND H1x3_3 > - _REC_EPS THEN H1x3_3 = H1x3_3 *
H1x3_3 ;
2477332   +   ELSE H1x3_3  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x3_3 = _REC_EPS ;
2477333   +   IF H1x3_4  < _REC_EPS AND H1x3_4  > - _REC_EPS THEN
2477334   +   H1x3_4  = H1x3_4  * H1x3_4 ;
MPRINT(EM_DIAGRAM):   IF H1x3_4 < _REC_EPS AND H1x3_4 > - _REC_EPS THEN H1x3_4 = H1x3_4 *
H1x3_4 ;
2477335   +   ELSE H1x3_4  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x3_4 = _REC_EPS ;
2477336   +   IF H1x3_5  < _REC_EPS AND H1x3_5  > - _REC_EPS THEN
2477337   +   H1x3_5  = H1x3_5  * H1x3_5 ;
MPRINT(EM_DIAGRAM):   IF H1x3_5 < _REC_EPS AND H1x3_5 > - _REC_EPS THEN H1x3_5 = H1x3_5 *
H1x3_5 ;
2477338   +   ELSE H1x3_5  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x3_5 = _REC_EPS ;
2477339   +END;
MPRINT(EM_DIAGRAM):   END;
2477340   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2477341   +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
2477342   +   H1x3_2  = .;
MPRINT(EM_DIAGRAM):   H1x3_2 = .;
2477343   +   H1x3_3  = .;
MPRINT(EM_DIAGRAM):   H1x3_3 = .;
2477344   +   H1x3_4  = .;
MPRINT(EM_DIAGRAM):   H1x3_4 = .;
2477345   +   H1x3_5  = .;
MPRINT(EM_DIAGRAM):   H1x3_5 = .;
2477346   +END;
MPRINT(EM_DIAGRAM):   END;
2477347   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2477348   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2477349   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2477350   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2477351   +   P_DepVar1  =     12.3694111963696 * H1x1_1  +     -9.1014019341077 * H1x1_2
2477352   +          +    -14.9093780045901 * H1x1_3  +     25.4505756686259 * H1x1_4
2477353   +          +    -13.3798044908382 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 12.3694111963696 * H1x1_1 + -9.1014019341077 * H1x1_2 +
-14.9093780045901 * H1x1_3 + 25.4505756686259 * H1x1_4 + -13.3798044908382 * H1x1_5 ;
2477354   +   P_DepVar1  = P_DepVar1  +     -0.2373753683635 * H1x2_1
2477355   +          +    -0.03661175538589 * H1x2_2  +     0.29534813812803 * H1x2_3
2477356   +          +     0.11908166898588 * H1x2_4  +      -0.241544638637 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 + -0.2373753683635 * H1x2_1 + -0.03661175538589 *
H1x2_2 + 0.29534813812803 * H1x2_3 + 0.11908166898588 * H1x2_4 + -0.241544638637 * H1x2_5 ;
2477357   +   P_DepVar1  = P_DepVar1  +    -0.00276620815201 * H1x3_1
2477358   +          +     0.00487849269566 * H1x3_2  +     0.01323887261394 * H1x3_3
2477359   +          +     -0.0271389925801 * H1x3_4  +     0.00026595473892 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 + -0.00276620815201 * H1x3_1 + 0.00487849269566 *
H1x3_2 + 0.01323887261394 * H1x3_3 + -0.0271389925801 * H1x3_4 + 0.00026595473892 * H1x3_5 ;
2477360   +   P_DepVar1  =      4.0541137239843 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 4.0541137239843 + P_DepVar1 ;
2477361   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2477362   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2477363   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2477364   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2477365   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2477366   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2477367   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2477368   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2477369   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2477370   +END;
MPRINT(EM_DIAGRAM):   END;
2477371   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2477372   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2477373   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2477374   +END;
MPRINT(EM_DIAGRAM):   END;
2477375   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2477376   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2477377   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2477378   +END;
MPRINT(EM_DIAGRAM):   END;
2477379   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2477380   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2477381   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2477382   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2477383   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2477384   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2477385   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2477386   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2477387   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2477388   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2477389   +END;
MPRINT(EM_DIAGRAM):   END;
2477390   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2477391   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2477392   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2477393   +drop
2477394   +H1x1_1
2477395   +H1x1_2
2477396   +H1x1_3
2477397   +H1x1_4
2477398   +H1x1_5
2477399   +H1x2_1
2477400   +H1x2_2
2477401   +H1x2_3
2477402   +H1x2_4
2477403   +H1x2_5
2477404   +H1x3_1
2477405   +H1x3_2
2477406   +H1x3_3
2477407   +H1x3_4
2477408   +H1x3_5
2477409   +;
MPRINT(EM_DIAGRAM):   drop H1x1_1 H1x1_2 H1x1_3 H1x1_4 H1x1_5 H1x2_1 H1x2_2 H1x2_3 H1x2_4
H1x2_5 H1x3_1 H1x3_2 H1x3_3 H1x3_4 H1x3_5 ;
2477410   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2477411    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2477412    quit;
2477413    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2477414    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2477415    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2477416    retain ID 2 Node "AutoNeural10";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural10";
2477417    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2477418    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4614 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4614 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2477419    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2477420    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2477421    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4614 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4614 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2477422    proc sort data=EMWS8.AutoNeural10_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural10_variableset out=_temp2(keep=NAME
CREATOR);
2477423    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2477424    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL10_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2477425    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2477426    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2477427    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2477428    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2477429    proc contents data=EMWS8.AutoNeural10_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural10_train out=_meta(keep=NAME) noprint;
2477430    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
2477431    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2477432    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2477433    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2477434    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2477435    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2477436    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2477437    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2477438    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2477439    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2477439  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 2263 rows and 5 columns.
 
2477440    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2477441    proc append base=EMWS8.Ensmbl46_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl46_FCMP data=_tempx;
2477442    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL46_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 2263 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL46_FCMP has 2263 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2477443    filename _pref
2477443  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
2477444    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2477445    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
2477446   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2477447   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
2477448   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2477449   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
2477450   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
2477451   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2477452    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2477453    quit;
2477454    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2477455    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2477456    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2477457    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
2477458    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2477459    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2477460    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2477461    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2477462    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2477463    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
2477464    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2477465    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2477466    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2477467    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2477468    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2477469    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2477470    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
2477471    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
2477472    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2477473    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2477474    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2477475    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2477476    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2477477    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2477478    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2477479    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2477480    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2477480  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
2477481    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2477482    proc append base=EMWS8.Ensmbl46_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl46_FCMP data=_tempx;
2477483    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL46_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL46_FCMP has 2267 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2477484    filename _pref
2477484  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
2477485    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2477486    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
2477487   +
2477488   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
2477489   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
2477489  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
2477490   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
2477491   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
2477492   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
2477493   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
2477494   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2477495    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2477496    quit;
2477497    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2477498    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2477499    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2477500    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
2477501    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2477502    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2477503    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2477504    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2477505    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2477506    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
2477507    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2477508    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2477509    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2477510    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2477511    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2477512    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2477513    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
2477514    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2477515    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2477516    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2477517    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2477518    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2477519    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2477520    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2477521    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2477522    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2477523    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2477523  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
2477524    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2477525    proc append base=EMWS8.Ensmbl46_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl46_FCMP data=_tempx;
2477526    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL46_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL46_FCMP has 2306 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2477527    filename _pref
2477527  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
2477528    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2477529    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
2477530   +
2477531   +
2477532   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
2477533   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
2477534   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
2477535   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
2477536   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
2477537   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2477538   +
2477539   +
2477540   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
2477541   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
2477542   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
2477543   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
2477544   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
2477545   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2477546   +
2477547   +
2477548   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
2477549   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
2477550   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
2477551   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
2477552   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
2477553   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2477554   +
2477555   +
2477556   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
2477557   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
2477558   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
2477559   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
2477560   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
2477561   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2477562   +
2477563   +
2477564   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
2477565   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
2477566   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
2477567   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
2477568   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
2477569   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2477570   +
2477571   +
2477572   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
2477573   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
2477574   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
2477575   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
2477576   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
2477577   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2477578   +
2477579   +
2477580   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
2477581   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
2477582   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
2477583   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
2477584   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
2477585   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2477586   +
2477587   +
2477588   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
2477589   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
2477590   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
2477591   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
2477592   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
2477593   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2477594   +if
2477595   +_FILTERNORM1 not in ( '.')
2477596   + and
2477597   +_FILTERNORM2 not in ( '.')
2477598   + and
2477599   +_FILTERNORM3 not in ( '.')
2477600   + and
2477601   +_FILTERNORM4 not in ( '.')
2477602   + and
2477603   +_FILTERNORM5 not in ( '.')
2477604   + and
2477605   +_FILTERNORM6 not in ( '.')
2477606   + and
2477607   +_FILTERNORM7 not in ( ' ')
2477608   + and
2477609   +_FILTERNORM8 not in ( ' ')
2477610   +and
2477611   +( Dt_Customer ne .)
2477612   +and ( Income ne . and (Income<=107000))
2477613   +and ( Kidhome ne .)
2477614   +and ( MntFishProducts ne .)
2477615   +and ( MntFruits ne .)
2477616   +and ( MntGoldProds ne .)
2477617   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
2477618   +and ( MntSweetProducts ne .)
2477619   +and ( MntWines ne .)
2477620   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
2477621   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
2477622   +and ( NumStorePurchases ne .)
2477623   +and ( NumWebPurchases ne .)
2477624   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
2477625   +and ( Recency ne .)
2477626   +and ( Teenhome ne .)
2477627   +and ( Year_Birth ne .)
2477628   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
2477629   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
2477630   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
2477631   +end;
MPRINT(EM_DIAGRAM):   end;
2477632   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
2477633   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2477634    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2477635    quit;
2477636    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2477637    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2477638    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2477639    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
2477640    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2477641    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2477642    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2477643    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2477644    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2477645    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
2477646    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2477647    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2477648    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2477649    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2477650    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2477651    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2477652    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
2477653    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
2477654    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2477655    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2477656    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2477657    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2477658    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2477659    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2477660    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2477661    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2477662    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2477662  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
2477663    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2477664    proc append base=EMWS8.Ensmbl46_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl46_FCMP data=_tempx;
2477665    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL46_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL46_FCMP has 2372 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2477666    %macro varDept(fcmpdata=,id=);
2477667    %global nobs&id scoreFlag&id;
2477668    %let scoreFlag&id = 0;
2477669    %if &id=1 or ^&fcmpStart %then %do;
2477670    proc sort data=&fcmpdata out=_temp&id nodupkey;
2477671    by NAME;
2477672    where id=&id and LHS in( %let j=1;
2477673    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
2477674    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
2477675    "&var" %let j = %eval(&j+1);
2477676    %end;
2477677    );
2477678    run;
2477679    %let dsid = %sysfunc(open(_temp&id));
2477680    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2477681    %let dsid = %sysfunc(close(&dsid));
2477682    %if &&nobs&id %then %do;
2477683    %let scoreFlag&id = 1;
2477684    %let fcmpStart = 1;
2477685    %end;
2477686    %else %let fcmpStart = 0;
2477687    %end;
2477688    %else %do;
2477689    proc sort data=&fcmpdata out=_tempid;
2477690    where id=&id;
2477691    by LHS;
2477692    run;
2477693    %let dsid = %sysfunc(open(_tempid));
2477694    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2477695    %let dsid = %sysfunc(close(&dsid));
2477696    %if ^&&nobs&id %then %do;
2477697    proc datasets lib=work nolist;
2477698    delete _tempid;
2477699    run;
2477700    quit;
2477701    %end;
2477702    %else %do;
2477703    data _tempAll;
2477704    set %let j=%eval(&id-1);
2477705    %do x=1 %to &j;
2477706    %if &&nobs&x %then %do;
2477707    _temp&x %end;
2477708    %end;
2477709    ;
2477710    run;
2477711    proc sql;
2477712    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
2477712  ! work._tempid p2 where p.name=p2.lhs;
2477713    quit;
2477714    data _temp&id;
2477715    set _temp&id;
2477716    where LHS ne '' and NAME ne '' and Node ne '';
2477717    run;
2477718    proc datasets lib=work nolist;
2477719    delete _tempAll;
2477720    run;
2477721    %let dsid = %sysfunc(open(_temp&id));
2477722    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2477723    %let dsid = %sysfunc(close(&dsid));
2477724    %if ^&&nobs&id %then %do;
2477725    proc datasets lib=work nolist;
2477726    delete _temp&id;
2477727    run;
2477728    quit;
2477729    %end;
2477730    %else %do;
2477731    %let scoreFlag&id = 1;
2477732    data _temp&id;
2477733    set _temp&id;
2477734    where LHS ne NAME and node ne '';
2477735    run;
2477736    %let dsid = %sysfunc(open(_temp&id));
2477737    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2477738    %let dsid = %sysfunc(close(&dsid));
2477739    %if ^&&nobs&id %then %do;
2477740    proc datasets lib=work nolist;
2477741    delete _temp&id;
2477742    run;
2477743    quit;
2477744    %end;
2477745    %else %do;
2477746    proc sort data=_temp&id nodupkey;
2477747    by LHS NAME;
2477748    run;
2477749    %end;
2477750    %end;
2477751    %end;
2477752    %end;
2477753    %mend varDept;
2477754    %macro optCode(outdata=fcmpdata);
2477755    %global fcmpStart;
2477756    %let fcmpStart = 0;
2477757    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
2477758    %let NumNodes=9;
2477759    %do k=1 %to &NumNodes;
2477760    %vardept(fcmpdata=&outdata, id=&k);
2477761    %end;
2477762    %mend optCode;
2477763    %optcode(outData=EMWS8.Ensmbl46_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl46_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL46_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl46_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 134 observations read from the data set EMWS8.ENSMBL46_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 100 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 34 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl46_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL46_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl46_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL46_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl46_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL46_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 34 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl46_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL46_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 38 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl46_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL46_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 77 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl46_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL46_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl46_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL46_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
2477764    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
2477765    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
2477766    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
2477767    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2477768    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
2477769    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
2477770    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
2477771    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2477772    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2477773    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
2477773  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.
 
2477774    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2477775    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
2477776    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
2477777    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2477778    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
2477779    * Ensmbl46: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Ensmbl46: Computing metadata for TRAIN data;
2477780    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
NOTE: View EMWS8.ENSMBL46_TRAIN.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl46\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.Ensmbl46_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.Ensmbl46_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.Ensmbl46_TRAIN out=WORK.M3OKW2MQ noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3OKW2MQ;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M3OKW2MQ(keep=name type length label format formatl
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl,
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd,
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat =
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl,
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3OKW2MQ;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M3OKW2MQ;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M2STLRZC NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2STLRZC;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M2STLRZC;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1NQ40TV(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M2STLRZC;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2STLRZC;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M2STLRZC;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN"
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO"
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON"
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD"
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" ))
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype =
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" ))
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT"
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB"
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType =
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA',
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W',
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL',
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT',
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2STLRZC;
MPRINT(EMADVISECOLUMNS):   set WORK.M2STLRZC;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL=
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY=
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT=
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL=
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural9_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural9_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl46_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Ensmbl46";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "Ensmbl46";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "Ensmbl46";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "Ensmbl46";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "Ensmbl46";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "Ensmbl46";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "Ensmbl46";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "Ensmbl46";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "Ensmbl46";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "Ensmbl46";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl46: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   if NAME in( "I_DepVar" "F_DepVar" "U_DepVar" "_WARN_" "P_DepVar1"
"P_DepVar0" "R_DepVar1" "R_DepVar0" ) then CREATOR="Ensmbl46";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
2478100    data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
2478101    set EMWS8.Ensmbl46_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl46_EMINFO;
2478102    where DATA='Ensmbl46' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='Ensmbl46' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE',
'MODEL');
2478103    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL46_EMINFO.
      WHERE (DATA='Ensmbl46') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2478104    data EMWS8.Ensmbl46_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl46_EMINFO;
2478105    length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
2478106    input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
2478107    cards;
MPRINT(EM_DIAGRAM):   cards;
 
NOTE: The data set EMWS8.ENSMBL46_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   run;
2478111    run;
2478112    data EMWS8.Ensmbl46_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl46_EMINFO;
2478113    set EMWS8.Ensmbl46_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl46_EMINFO WORK.MODELTEMP_INFO;
2478114    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS8.ENSMBL46_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.ENSMBL46_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2478115    proc sort data = EMWS8.Ensmbl46_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Ensmbl46_EMINFO NOTHREADS;
2478116    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
2478117    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS8.ENSMBL46_EMINFO.
NOTE: The data set EMWS8.ENSMBL46_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2478118    proc sort data = EMWS8.AutoNeural9_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.AutoNeural9_EMINFO OUT=WORK.SORTEDEMINFO
NOTHREADS;
2478119    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
2478120    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.AUTONEURAL9_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2478121    proc sort data = EMWS8.Ensmbl46_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.Ensmbl46_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
2478122    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
2478123    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.ENSMBL46_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2478124    data EMWS8.Ensmbl46_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl46_EMINFO;
2478125    merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
2478126    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
2478127    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.ENSMBL46_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2478128    proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
2478129    delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
2478130    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
2478131    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
 
NOTE: View EMWS8.ENSMBL46_TRAIN.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.04 seconds
 
NOTE: View EMWS8.ENSMBL46_VALIDATE.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "20. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17.40 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Report Log
Date:                20. April 2016
Time:                17.40 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O2VA17F7
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl46\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O2VA17F7 new;
MPRINT(EM_DIAGRAM):   run;
2478155    data EMWS8.Ensmbl46_EMOUTFIT;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl46_EMOUTFIT;
2478156    set EMWS8.Ensmbl46_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl46_EMOUTFIT;
2478157    length TargetLabel $200;
MPRINT(EM_DIAGRAM):   length TargetLabel $200;
2478158    label targetLabel = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel,
2478158  ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   label targetLabel = "Target Label";
2478159    if upcase(TARGET) eq "DEPVAR" then TargetLabel = 'DepVar';
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TargetLabel = 'DepVar';
2478160    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.ENSMBL46_EMOUTFIT.
NOTE: The data set EMWS8.ENSMBL46_EMOUTFIT has 1 observations and 20 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2478161    proc sort data=EMWS8.Ensmbl46_EMREPORTFIT nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.Ensmbl46_EMREPORTFIT nothreads;
2478162    by TARGET;
MPRINT(EM_DIAGRAM):   by TARGET;
2478163    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 9 observations read from the data set EMWS8.ENSMBL46_EMREPORTFIT.
NOTE: The data set EMWS8.ENSMBL46_EMREPORTFIT has 9 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2478164    %let _EMwarndup = 0;
2478165    %let _EMtargetdup =;
2478166    %let _EMASEtargetdup =;
2478167    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
2478168    set EMWS8.Ensmbl46_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl46_EMOUTFIT;
2478169    if .<_ASE_<0.000001 then do;
MPRINT(EM_DIAGRAM):   if .<_ASE_<0.000001 then do;
2478170    call symput('_EMwarndup', '1');
MPRINT(EM_DIAGRAM):   call symput('_EMwarndup', '1');
2478171    call symput('_EMtargetdup', target);
MPRINT(EM_DIAGRAM):   call symput('_EMtargetdup', target);
2478172    call symput('_EMASEtargetdup', put(_ASE_, best.));
MPRINT(EM_DIAGRAM):   call symput('_EMASEtargetdup', put(_ASE_, best.));
2478173    end;
MPRINT(EM_DIAGRAM):   end;
2478174    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.ENSMBL46_EMOUTFIT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2478175    proc sort data=EMWS8.AutoNeural9_CMeta_TRAIN out=WORK.SUBSETINMETA;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.AutoNeural9_CMeta_TRAIN out=WORK.SUBSETINMETA;
2478176    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2478177    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set EMWS8.AUTONEURAL9_CMETA_TRAIN.
NOTE: The data set WORK.SUBSETINMETA has 44 observations and 21 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2478178    proc sort data=EMWS8.Ensmbl46_VariableSet out=WORK.SUBSETVARSET(keep=NAME REPORT);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Ensmbl46_VariableSet
out=WORK.SUBSETVARSET(keep=NAME REPORT);
2478179    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2478180    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.ENSMBL46_VARIABLESET.
NOTE: The data set WORK.SUBSETVARSET has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2478181    data WORK.ASSESS_META;
MPRINT(EM_DIAGRAM):   data WORK.ASSESS_META;
2478182    merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
MPRINT(EM_DIAGRAM):   merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
2478183    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2478184    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK.SUBSETINMETA.
NOTE: There were 34 observations read from the data set WORK.SUBSETVARSET.
NOTE: The data set WORK.ASSESS_META has 44 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2478185    data EM_temp_assessMeta;
MPRINT(EM_DIAGRAM):    data EM_temp_assessMeta;
2478186    set EMWS8.Ensmbl46_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl46_CMeta_TRAIN;
2478187    where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST')
2478187  ! ;
MPRINT(EM_DIAGRAM):   where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION',
'ASSESS', 'COST');
2478188    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS8.ENSMBL46_CMETA_TRAIN.
      WHERE role in ('ASSESS', 'CLASSIFICATION', 'COST', 'DECISION', 'PREDICT', 'RESIDUAL');
NOTE: The data set WORK.EM_TEMP_ASSESSMETA has 8 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2478189    data EM_temp_assessdata;
MPRINT(EM_DIAGRAM):    data EM_temp_assessdata;
2478190    set EMWS8.Ensmbl46_TRAIN(keep=
2478191    F_DepVar
2478192    I_DepVar
2478193    P_DepVar0
2478194    P_DepVar1
2478195    R_DepVar0
2478196    R_DepVar1
2478197    U_DepVar
2478198    _WARN_
2478199    DepVar
2478200    );
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl46_TRAIN(keep= F_DepVar I_DepVar P_DepVar0 P_DepVar1
R_DepVar0 R_DepVar1 U_DepVar _WARN_ DepVar );
2478201    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2374 observations read from the data set EMWS8.PART_TRAIN.
NOTE: There were 2374 observations read from the data set EMWS8.META_TRAIN.
NOTE: View EMWS8.ENSMBL46_TRAIN.VIEW used (Total process time):
      real time           0.21 seconds
      cpu time            0.20 seconds
 
NOTE: There were 2374 observations read from the data set EMWS8.AUTONEURAL9_TRAIN.
NOTE: There were 2374 observations read from the data set EMWS8.ENSMBL46_TRAIN.
NOTE: The data set WORK.EM_TEMP_ASSESSDATA has 2374 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.22 seconds
      cpu time            0.23 seconds
 
 
MPRINT(EM_DIAGRAM):    proc freq data=EM_temp_assessdata noprint;
MPRINT(EM_DIAGRAM):   table I_DepVar*F_DepVar / out = WORK.Ensmbl46_2WXCCOT nocol norow outpct;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.Ensmbl46_2WXCCOT;
MPRINT(EM_DIAGRAM):   length _TYPE_ $10 DATAROLE TARGET $32 TARGETLABEL $200 FROM INTO $32
CORRECTTEXT $40 ;
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Outcome Type";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role";
MPRINT(EM_DIAGRAM):   label TARGET = "Target Variable";
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
MPRINT(EM_DIAGRAM):   label CORRECTTEXT = "Correct Text";
MPRINT(EM_DIAGRAM):   label CORRECT = "Correct";
MPRINT(EM_DIAGRAM):   set WORK.Ensmbl46_2WXCCOT(rename=(F_DepVar=FROM I_DepVar=INTO));
MPRINT(EM_DIAGRAM):   retain _TYPE_ 'PREDICTION' DATAROLE "TRAIN" TARGET "DepVar";
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   if FROM eq INTO then do;
MPRINT(EM_DIAGRAM):   CORRECT = 0;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Correct";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   CORRECT = 1;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Incorrect";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl46_EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):   set WORK.Ensmbl46_2WXCCOT;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   set WORK.Ensmbl46_2WXCCOT;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT(drop=INTO FROM _TYPE_);
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   length MISC $12;
MPRINT(EM_DIAGRAM):   if FROM='1' and INTO='1' then MISC='TRUEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM='1' and INTO ne '1' then MISC='FALSENEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne '1' and INTO='1' then MISC='FALSEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne'1' and INTO ne '1' then MISC='TRUENEVENT';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.MISCREPORT nothreads;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc summary data=WORK.MISCREPORT NWAY;
MPRINT(EM_DIAGRAM):   output out=WORK.MISCCOUNT(drop=_FREQ_ _TYPE_) SUM=COUNT;
MPRINT(EM_DIAGRAM):   CLASS MISC;
MPRINT(EM_DIAGRAM):   VAR COUNT;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK.MISCCOUNT out=WORK.MISCREPORT(drop=_NAME_
_LABEL_);
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   ID MISC;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl46_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data ASSESS_REPORTMETA;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl46_VariableSet;
MPRINT(EM_DIAGRAM):   where REPORT='Y';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emassmt.em_assess.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural9_DepVar_DM;
MPRINT(EM_DIAGRAM):   where _TYPE_="TARGET";
MPRINT(EM_DIAGRAM):   call symput('ASSMT_EVENT', strip(event));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):
MPRINT(EM_ASSESS):   data _ea_tmpdata;
MPRINT(EM_ASSESS):   set EM_temp_assessdata;
MPRINT(EM_ASSESS):   _tmpfreqvar_=1;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_CHECKEMSETINIT):   DATA _NULL_;
MPRINT(EM_CHECKEMSETINIT):   EM_SETINIT = 'N';
MPRINT(EM_CHECKEMSETINIT):   IF SYSPROD('PRODNUM50') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM448') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM102') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM103') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   CALL SYMPUT('EM_SETINIT', EM_SETINIT);
MPRINT(EM_CHECKEMSETINIT):   RUN;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Reading in reporting data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET ASSESS_REPORTMETA END = EOF;
MPRINT(EM_ASSESS):   IF TYPE = "C" OR UPCASE (LEVEL) IN ("NOMINAL", "BINARY" , "ORDINAL") THEN
DO;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMCTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTC" || LEFT (PUT (NUMCTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "C");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF UPCASE(NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMNTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTN" || LEFT (PUT (NUMNTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMNTOREPORT", NUMNTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMCTOREPORT", NUMCTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMTOREPORT", SUM (NUMNTOREPORT, NUMCTOREPORT));
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   PROC DMDB DATA = _ea_tmpdata VAROUT = VAROUT DMDBCAT = _D CLASSOUT =
_ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   CLASS F_DepVar ;
 
MPRINT(EM_ASSESS):   VAR P_DepVar1 _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_;
MPRINT(EM_ASSESS):   RUN ;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   PROC SORT DATA = _ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _auxeventname (keep = __event__) ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ...FLAG0_1 = ..... TARGET IS 0, 1 & EVENT = 1;
 
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   length __event__ $ 32;
MPRINT(EM_ASSESS):   RETAIN FLAG0_1 1 NUM1 . NUM0 . __event__ "_missing_" ;
 
MPRINT(EM_ASSESS):   SET _ASSMT_CLASSOUT END = EOF;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ....... LEVEL = BINARY OR NOMINAL OR ORDINAL;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   IF UPCASE(NAME) = UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   CUMFREQ + FREQUENCY;
MPRINT(EM_ASSESS):   IF LEVEL NE "." THEN DO;
MPRINT(EM_ASSESS):   N1 + 1;
MPRINT(EM_ASSESS):   IF (NRAW NE 0 AND NRAW NE 1) OR TYPE NE "N" OR "" > " " THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ......................... IF EVENT NE BLANK;
MPRINT(EM_ASSESS):   * ....................LEVEL IS CHAR VAR ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   IF UPCASE("1") = UPCASE(LEVEL) THEN DO;
MPRINT(EM_ASSESS):   NUM1 = FREQUENCY;
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", CRAW );
MPRINT(EM_ASSESS):   __event__ = craw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   ELSE do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", NRAW );
MPRINT(EM_ASSESS):   __event__ = nraw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF LAST.NAME THEN DO;
 
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * .............. IN NOMINAL CASE, NEED TO GROUP ALL '0' ;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   NUM0 = SUM (CUMFREQ, - NUM1);
MPRINT(EM_ASSESS):   IF NUM0 < 0 THEN NUM0 = 0;
MPRINT(EM_ASSESS):   IF NUM1 = . THEN NUM1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM0", NUM0 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM1", NUM1);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM1", NUM1 / CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM0", (CUMFREQ - NUM1) / CUMFREQ);
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN DO;
MPRINT(EM_ASSESS):   FLAG0_1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "C" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF "" = " " THEN DO;
MPRINT(EM_ASSESS):   IF "1" NE "1" THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "N" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ................... IF TYPE = N;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("FLAG0_1", FLAG0_1 );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................IF LAST.NAME ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ...............IF LEVEL NE '.' ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * .............. IF NAME = TARGET;
MPRINT(EM_ASSESS):   ELSE IF "" > " " AND UPCASE(NAME) = UPCASE("") THEN DO;
MPRINT(EM_ASSESS):   NUMDECISIONS + 1;
MPRINT(EM_ASSESS):   LEVEL = TRANSLATE (LEVEL, "_", "'", "_", '"');
MPRINT(EM_ASSESS):   CALL SYMPUTX ("D_LABEL" || LEFT (PUT (NUMDECISIONS, 3.)), LEVEL );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................... ELSE IF UPCASE;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   output _auxeventname;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMOBS", CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMDECISIONS", NUMDECISIONS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET VAROUT END = EOF;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) = UPCASE ("P_DepVar1") THEN DO;
MPRINT(EM_ASSESS):   IF N = 0 THEN DO;
MPRINT(EM_ASSESS):   PUT //// "          Warning: All posterior probabilities are missing
values ";
MPRINT(EM_ASSESS):   PUT ///;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("ALLMISS", 1);
MPRINT(EM_ASSESS):   STOP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("ALLMISS", 0);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB", MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB", MAX);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("DIFF", MAX - MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NMISSPROB", NMISS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF UPCASE (NAME) = UPCASE ("_tmpfreqvar_") THEN DO;
MPRINT(EM_ASSESS):   AUXMIN = MIN - INT (MIN);
MPRINT(EM_ASSESS):   AUXMAX = MAX - INT (MAX);
MPRINT(EM_ASSESS):   IF AUXMIN > 0 OR AUXMAX > 0 THEN CALL SYMPUTX ("USEWEIGHT", "Y");
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("USEWEIGHT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _ANY0;
MPRINT(EM_ASSESS):   SET _ea_tmpdata (KEEP = F_DepVar P_DepVar1 _tmpfreqvar_ );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................... No Formats;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF LEFT ( F_DepVar ) = "1" THEN NTARGET = 1;
MPRINT(EM_ASSESS):   ELSE NTARGET = 0;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Before proc summary of binary case;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC SUMMARY DATA = _ANY0 (KEEP = P_DepVar1 NTARGET _tmpfreqvar_ WHERE =
(NTARGET > . )) NWAY MISSING;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   CLASS P_DepVar1 ;
MPRINT(EM_ASSESS):   VAR NTARGET ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   OUTPUT OUT = ANYSUM (DROP = _TYPE_) MEAN = _MEANTARGET _MEANFREQVAR ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... Main Data Set Processing, Binary case;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK (KEEP = BASECAPC BASECAP __EVENT__ BASEEVENTS
BASEGAIN BASELIFT BASERESP BASERESPC BESTCAP BESTCAPC BESTGAIN BESTLIFT BESTLIFTC
BESTNUMEVENTS BESTRESP BESTRESPC BIN CBASELIFT C_LIFT C_P_CAPT_RESP C_P_RESP GAIN LIFT MAXPROB
MINPROB MNPROB NUMNONRESP NUMOBS NUMRESP PERCENTILE P_CAPT_RESP P_RESP ) WORK._TEMPSCOREDIST
(KEEP = BIN LOWERPROB UPPERPROB EVENTVALUE SCR_NUMEVENTS MODELSCORE SCR_NUMNONEVENTS RANGE
NUMOBSINGROUP PERCOBSINGROUP C_PERCOBSINGROUP SCR_P_EVENTS SCR_CP_EVENTS SCR_P_NONEVENTS
SCR_CP_NONEVENTS SCR_MNPROB SCR_MINPROB SCR_MAXPROB ) ;
 
MPRINT(EM_ASSESS):   SET ANYSUM END = EOF;
 
MPRINT(EM_ASSESS):   IF _N_ = 1 THEN SET _AUXEVENTNAME;
 
MPRINT(EM_ASSESS):   RETAIN MINPROB1 - MINPROB20 1 MAXPROB1 - MAXPROB20 0 MNPROB1 - MNPROB20 0
NUMOBS1 - NUMOBS20 0 NUMRESP1 - NUMRESP20 0 TRUEPOS1 - TRUEPOS100 0 TRUENEG1 - TRUENEG100 0
FALSEPOS1 - FALSEPOS100 0 FALSENEG1 - FALSENEG100 0 EVENTS1 - EVENTS100 NONEVENTS1 -
NONEVENTS100 0 FIRSTIN1 - FIRSTIN100 . LASTIN1 - LASTIN100 . RESPRATE 0.151221567 _NEVENTS 359
_NNONEVENTS 2015 TARGET "NTARGET" ;
MPRINT(EM_ASSESS):   ARRAY MINPROBS (20) MINPROB1 - MINPROB20;
MPRINT(EM_ASSESS):   ARRAY MAXPROBS (20) MAXPROB1 - MAXPROB20;
MPRINT(EM_ASSESS):   ARRAY MNPROBS (20) MNPROB1 - MNPROB20;
MPRINT(EM_ASSESS):   ARRAY NUMOBSS (20) NUMOBS1 - NUMOBS20;
MPRINT(EM_ASSESS):   ARRAY NUMRESPS (20) NUMRESP1 - NUMRESP20;
MPRINT(EM_ASSESS):   ARRAY TRUEPOSX (100) TRUEPOS1 - TRUEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSEPOSX (100) FALSEPOS1 - FALSEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSENEGX (100) FALSENEG1 - FALSENEG100;
MPRINT(EM_ASSESS):   ARRAY TRUENEGX (100) TRUENEG1 - TRUENEG100;
MPRINT(EM_ASSESS):   ARRAY _EVENTS (100) EVENTS1 - EVENTS100;
MPRINT(EM_ASSESS):   ARRAY NONEVENTS (100) NONEVENTS1 - NONEVENTS100;
MPRINT(EM_ASSESS):   ARRAY FIRSTIN (100) FIRSTIN1 - FIRSTIN100;
MPRINT(EM_ASSESS):   ARRAY LASTIN (100) LASTIN1 - LASTIN100;
MPRINT(EM_ASSESS):   RETAIN SCR_MNPROB1 - SCR_MNPROB100 0 SCR_MINPROB1 - SCR_MINPROB100 1
SCR_MAXPROB1 - SCR_MAXPROB100 0;
MPRINT(EM_ASSESS):   ARRAY SCR_MNPROBS (100) SCR_MNPROB1 - SCR_MNPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MINPROBS (100) SCR_MINPROB1 - SCR_MINPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MAXPROBS (100) SCR_MAXPROB1 - SCR_MAXPROB100;
MPRINT(EM_ASSESS):   DROP SCR_MINPROB1 - SCR_MINPROB100 SCR_MAXPROB1 - SCR_MAXPROB100
SCR_MNPROB1 - SCR_MNPROB100 ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...... Area For 8 Financials ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF _MEANTARGET = . THEN _MEANTARGET = RESPRATE;
MPRINT(EM_ASSESS):   DROP N1 _K SUMWEIGHTS ;
MPRINT(EM_ASSESS):   SUMWEIGHTS = 1;
 
MPRINT(EM_ASSESS):   DO _K = 1 TO CEIL (_FREQ_);
MPRINT(EM_ASSESS):   IF _K = CEIL (_FREQ_) THEN DO;
MPRINT(EM_ASSESS):   IF _FREQ_ < CEIL (_FREQ_) THEN _WEIGHT = _FREQ_ - FLOOR (_FREQ_);
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   N1 + _WEIGHT;
MPRINT(EM_ASSESS):   NTARGET = _MEANTARGET ;
MPRINT(EM_ASSESS):   DECILE = MIN (20, CEIL (N1 * 20 / 2374));
MPRINT(EM_ASSESS):   MINPROBS ( DECILE) = MIN (MINPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MAXPROBS ( DECILE) = MAX (MAXPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MNPROBS ( DECILE) = SUM (MNPROBS ( DECILE), P_DepVar1 * _WEIGHT);
MPRINT(EM_ASSESS):   NUMOBSS ( DECILE) = NUMOBSS ( DECILE) + _WEIGHT;
MPRINT(EM_ASSESS):   NUMRESPS ( DECILE) = NUMRESPS ( DECILE) + _MEANTARGET * _WEIGHT;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ outside of do loop, Area for final ROC;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   RANKDELTA = (ROUND ( _FREQ_ ) + 1) / 2;
MPRINT(EM_ASSESS):   RANK = UNTIEDRANK + RANKDELTA;
MPRINT(EM_ASSESS):   DROP RANK ;
MPRINT(EM_ASSESS):   SUMRANK1 + RANK * ROUND (_MEANTARGET * _FREQ_, .0000001);
MPRINT(EM_ASSESS):   UNTIEDRANK + ROUND (_FREQ_, .00000001);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Area For ROC Curve;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DO _K = 1 TO 100;
MPRINT(EM_ASSESS):   IF P_DepVar1 * 100 >= _K THEN DO;
MPRINT(EM_ASSESS):   TRUEPOSX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   FALSEPOSX ( _K ) + _FREQ_ * (1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   TRUENEGX ( _K ) + _FREQ_ * ( 1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   FALSENEGX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   SLOT = MIN (MAX (CEIL (P_DepVar1 * 100), 1), 100) ;
MPRINT(EM_ASSESS):   DROP SLOT;
MPRINT(EM_ASSESS):   FIRSTIN ( SLOT ) = MIN ( FIRSTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   LASTIN ( SLOT ) = MAX ( LASTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   _EVENTS ( SLOT) = _EVENTS ( SLOT) + _FREQ_ * _MEANTARGET;
MPRINT(EM_ASSESS):   NONEVENTS ( SLOT) = NONEVENTS ( SLOT) + _FREQ_ * (1 - _MEANTARGET);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ START OF OUTDIST IN BINARY CASE MAIN DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   SCR_MNPROBS ( SLOT ) = SUM (SCR_MNPROBS (SLOT), P_DepVar1 * _FREQ_ );
MPRINT(EM_ASSESS):   SCR_MINPROBS ( SLOT ) = MIN (SCR_MINPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   SCR_MAXPROBS ( SLOT ) = MAX (SCR_MAXPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ End of Outdist in Binary case main DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   PUT //;
MPRINT(EM_ASSESS):   DO K = 1 TO 20;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LENGTH EVENTVALUE $ 32;
MPRINT(EM_ASSESS):   RETAIN EVENTVALUE "1" ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ......... Start of EOF area of BINARY processing of main data set ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SUMRANK1", SUMRANK1);
MPRINT(EM_ASSESS):   LENGTH DATAROLE $ 10;
MPRINT(EM_ASSESS):   RETAIN DATAROLE "TRAIN" ;
MPRINT(EM_ASSESS):   RETAIN OVLMIN 0.0000207791 OVLMAX 1 ;
MPRINT(EM_ASSESS):   DROP OVLMIN OVLMAX ;
MPRINT(EM_ASSESS):   C_NUMOBS = 0;
MPRINT(EM_ASSESS):   C_NUM_RESP = 0;
MPRINT(EM_ASSESS):   C_NUM_NONRESP = 0;
MPRINT(EM_ASSESS):   C_P_RESP = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   PREVIOUSPROFIT = 0;
MPRINT(EM_ASSESS):   MAXPROFIT = 0;
MPRINT(EM_ASSESS):   _KS_BIN_ = 0;
MPRINT(EM_ASSESS):   DROP _KS_BIN_;
MPRINT(EM_ASSESS):   AVGNUMRESP = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASERESP = 100 * RESPRATE;
MPRINT(EM_ASSESS):   BASERESPC = BASERESP;
MPRINT(EM_ASSESS):   BASECAP = 100 / 20;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................Start OF Gainschart = Outranks Area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = 0;
MPRINT(EM_ASSESS):   DO GROUP = 20 TO 1 BY -1;
 
MPRINT(EM_ASSESS):   BASECAPC + BASECAP;
MPRINT(EM_ASSESS):   PERCENTILE = GROUP * (100 / 20);
MPRINT(EM_ASSESS):   MINPROB = MINPROBS ( GROUP);
MPRINT(EM_ASSESS):   MAXPROB = MAXPROBS ( GROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB" || LEFT ( PUT (GROUP, 3.)), MINPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB" || LEFT ( PUT (GROUP, 3.)), MAXPROB);
MPRINT(EM_ASSESS):   NUMOBS = NUMOBSS ( GROUP);
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN MNPROB = MNPROBS ( GROUP) / NUMOBS;
MPRINT(EM_ASSESS):   ELSE MNPROB = .;
MPRINT(EM_ASSESS):   C_NUMOBS = SUM (NUMOBS, C_NUMOBS);
MPRINT(EM_ASSESS):   NUMRESP = NUMRESPS ( GROUP);
MPRINT(EM_ASSESS):   NUMNONRESP = NUMOBS - NUMRESP;
MPRINT(EM_ASSESS):   C_AVGNUM_RESP + AVGNUMRESP;
MPRINT(EM_ASSESS):   IF C_NUMOBS <= _NEVENTS THEN DO;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   BESTCAPC = C_NUMOBS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BASEEVENTS = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASENONEVENTS = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   FLAG + 1;
MPRINT(EM_ASSESS):   DROP FLAG;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = _NEVENTS - C_NUMOBS + NUMOBS;
MPRINT(EM_ASSESS):   IF FLAG > 1 THEN BESTNUMEVENTS = 0;
MPRINT(EM_ASSESS):   BESTCAPC = 100;
MPRINT(EM_ASSESS):   IF C_NUMOBS - _NEVENTS <= NUMOBS THEN DO;
MPRINT(EM_ASSESS):   BASEEVENTS = C_NUMOBS - _NEVENTS;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS - C_NUMOBS + _NEVENTS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BASEEVENTS = 0;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   BESTCAP = BESTNUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BESTLIFT = BESTNUMEVENTS / AVGNUMRESP;
MPRINT(EM_ASSESS):   C_BESTNUMEVENTS + BESTNUMEVENTS;
MPRINT(EM_ASSESS):   DROP C_BESTNUMEVENTS;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN BESTLIFTC = C_BESTNUMEVENTS / (_NEVENTS / 2374 *
C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE BESTLIFTC = .;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESP = BESTNUMEVENTS * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_RESP = NUMRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_NONRESP = NUMNONRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESP = .;
MPRINT(EM_ASSESS):   P_RESP = .;
MPRINT(EM_ASSESS):   P_NONRESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESPC = C_BESTNUMEVENTS * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   BESTGAIN = MAX (0, ((C_BESTNUMEVENTS / C_NUMOBS ) / ( AVGNUMRESP /
NUMOBS) - 1) * 100);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESPC = .;
MPRINT(EM_ASSESS):   BESTGAIN = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMNONRESP > 0 THEN ODDS = NUMRESP / NUMNONRESP;
MPRINT(EM_ASSESS):   ELSE ODDS = .;
MPRINT(EM_ASSESS):   C_NUM_RESP = SUM (C_NUM_RESP , NUMRESP );
MPRINT(EM_ASSESS):   C_NUM_NONRESP = SUM (C_NUM_NONRESP, NUMNONRESP );
MPRINT(EM_ASSESS):   IF C_NUM_NONRESP > 0 THEN C_ODDS = C_NUM_RESP / C_NUM_NONRESP;
MPRINT(EM_ASSESS):   ELSE C_ODDS = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   C_P_RESP = C_NUM_RESP * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   GAIN = ABS(100 * (((C_NUM_RESP / C_NUMOBS ) / (_NEVENTS / 2374)) - 1));
MPRINT(EM_ASSESS):   BASEGAIN = 100 * (( (C_AVGNUM_RESP / C_NUMOBS) / ( AVGNUMRESP / NUMOBS))
- 1);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   GAIN = .;
MPRINT(EM_ASSESS):   BASEGAIN = .;
MPRINT(EM_ASSESS):   C_P_RESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF BASEGAIN <= 0 THEN BASEGAIN = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = NUMRESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   P_CAPT_NONRESP = NUMNONRESP * 100 / ( 2374 - _NEVENTS);
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = C_NUM_RESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   C_P_CAPT_NONRESP = C_NUM_NONRESP * 100 / ( 2374 - _NEVENTS);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Area For Binned KS in Outranks area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _DIFFERENCE = C_P_CAPT_RESP - C_P_CAPT_NONRESP ;
MPRINT(EM_ASSESS):   IF _KS_BIN_ < _DIFFERENCE THEN DO;
MPRINT(EM_ASSESS):   _KS_BIN_ = _DIFFERENCE;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = MINPROB + (MAXPROB - MINPROB) / 2 ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LIFT = P_RESP * .01 / RESPRATE ;
MPRINT(EM_ASSESS):   C_LIFT = C_P_RESP * .01 / RESPRATE;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BASELIFT = AVGNUMRESP / ( RESPRATE * NUMOBS );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE BASELIFT = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN CBASELIFT = C_AVGNUM_RESP / (RESPRATE * C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE CBASELIFT = .;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ WITHIN DO LOOP FOR OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 + 1 - GROUP;
MPRINT(EM_ASSESS):   PERCENTILE = BIN * (100 / 20);
MPRINT(EM_ASSESS):   B_C_P_RESP = PERCENTILE;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPRANK ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................ END OF GAINSCHART = OUTRANKS AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFITGROUP" , MAXPROFITGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFIT" , MAXPROFIT );
MPRINT(EM_ASSESS):   KS_ABSDIFF = 0 ;
MPRINT(EM_ASSESS):   MINPRECTPR = 9999;
MPRINT(EM_ASSESS):   Y0 = 1 - RESPRATE;
MPRINT(EM_ASSESS):   Y1 = RESPRATE;
MPRINT(EM_ASSESS):   MAXMUTUAL = 0;
MPRINT(EM_ASSESS):   DROP MAXMUTUAL KSPROB Y0 Y1 KS_ABSDIFF MINPRECTPR;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .....................About to start Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................... Finished Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Outdist ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS96 - EVENTS100 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS96 - NONEVENTS100);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB96 -
SCR_MNPROB100) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB96 - SCR_MINPROB100) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB96 - SCR_MAXPROB100) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 20;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 19 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS91 - EVENTS95 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS91 - NONEVENTS95);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB91 -
SCR_MNPROB95) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB91 - SCR_MINPROB95) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB91 - SCR_MAXPROB95) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 19;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 18 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS86 - EVENTS90 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS86 - NONEVENTS90);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB86 -
SCR_MNPROB90) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB86 - SCR_MINPROB90) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB86 - SCR_MAXPROB90) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 18;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 17 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS81 - EVENTS85 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS81 - NONEVENTS85);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB81 -
SCR_MNPROB85) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB81 - SCR_MINPROB85) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB81 - SCR_MAXPROB85) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 17;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 16 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS76 - EVENTS80 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS76 - NONEVENTS80);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB76 -
SCR_MNPROB80) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB76 - SCR_MINPROB80) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB76 - SCR_MAXPROB80) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 16;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 15 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS71 - EVENTS75 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS71 - NONEVENTS75);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB71 -
SCR_MNPROB75) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB71 - SCR_MINPROB75) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB71 - SCR_MAXPROB75) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 15;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 14 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS66 - EVENTS70 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS66 - NONEVENTS70);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB66 -
SCR_MNPROB70) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB66 - SCR_MINPROB70) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB66 - SCR_MAXPROB70) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 14;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 13 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS61 - EVENTS65 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS61 - NONEVENTS65);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB61 -
SCR_MNPROB65) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB61 - SCR_MINPROB65) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB61 - SCR_MAXPROB65) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 13;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 12 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS56 - EVENTS60 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS56 - NONEVENTS60);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB56 -
SCR_MNPROB60) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB56 - SCR_MINPROB60) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB56 - SCR_MAXPROB60) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 12;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 11 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS51 - EVENTS55 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS51 - NONEVENTS55);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB51 -
SCR_MNPROB55) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB51 - SCR_MINPROB55) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB51 - SCR_MAXPROB55) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 11;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 10 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS46 - EVENTS50 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS46 - NONEVENTS50);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB46 -
SCR_MNPROB50) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB46 - SCR_MINPROB50) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB46 - SCR_MAXPROB50) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 10;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 9 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS41 - EVENTS45 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS41 - NONEVENTS45);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB41 -
SCR_MNPROB45) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB41 - SCR_MINPROB45) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB41 - SCR_MAXPROB45) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 9;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 8 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS36 - EVENTS40 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS36 - NONEVENTS40);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB36 -
SCR_MNPROB40) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB36 - SCR_MINPROB40) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB36 - SCR_MAXPROB40) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 8;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 7 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS31 - EVENTS35 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS31 - NONEVENTS35);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB31 -
SCR_MNPROB35) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB31 - SCR_MINPROB35) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB31 - SCR_MAXPROB35) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 7;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 6 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS26 - EVENTS30 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS26 - NONEVENTS30);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB26 -
SCR_MNPROB30) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB26 - SCR_MINPROB30) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB26 - SCR_MAXPROB30) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 6;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 5 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS21 - EVENTS25 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS21 - NONEVENTS25);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB21 -
SCR_MNPROB25) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB21 - SCR_MINPROB25) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB21 - SCR_MAXPROB25) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 5;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 4 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS16 - EVENTS20 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS16 - NONEVENTS20);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB16 -
SCR_MNPROB20) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB16 - SCR_MINPROB20) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB16 - SCR_MAXPROB20) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 4;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 3 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS11 - EVENTS15 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS11 - NONEVENTS15);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB11 -
SCR_MNPROB15) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB11 - SCR_MINPROB15) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB11 - SCR_MAXPROB15) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 3;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 2 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS6 - EVENTS10 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS6 - NONEVENTS10);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB6 -
SCR_MNPROB10) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB6 - SCR_MINPROB10) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB6 - SCR_MAXPROB10) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 2;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 1 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS1 - EVENTS5 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS1 - NONEVENTS5);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB1 - SCR_MNPROB5)
/ NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB1 - SCR_MINPROB5) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB1 - SCR_MAXPROB5) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 1;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSPROB" , PUT (KSPROB, 5.3 ) );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_PROB" , _KS_BIN_PROB );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_" , _KS_BIN_ / 100 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSDIFF" , KS_ABSDIFF );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PRECTPR" , PRECTPR );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXMUTUALPROB" , MAXMUTUALPROB);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LABEL __EVENT__ = "Event" DECILE = "Depth" BIN = "Bin" NUMOBS = "Number
of Observations" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * RUN for large data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST;
MPRINT(EM_ASSESS):   DELETE _AUXEVENTNAME;
MPRINT(EM_ASSESS):   QUIT;
 
MPRINT(EM_ASSESS):   OPTION NOCENTER LS = 95;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Report Vars Area.;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start OF Outdist Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPSCOREDIST;
MPRINT(EM_ASSESS):   RENAME MODELSCORE = SCORE UPPERPROB = UPPOSTERIOR SCR_CP_EVENTS =
CUMULATIVEPERCENTAGEOFEVENTS SCR_CP_NONEVENTS = CUMULATIVEPERCENTAGEOFNONEVENTS EVENTVALUE =
EVENT LOWERPROB = LOWPOSTERIOR NUMOBSINGROUP = N PERCOBSINGROUP = PERCENTAGE SCR_MINPROB =
_MINP_ SCR_MAXPROB = _MAXP_ SCR_MNPROB = _MEANP_ RANGE = P_LABEL C_PERCOBSINGROUP =
CUMULATIVEPERCENTAGE SCR_NUMEVENTS = NUMBEROFEVENTS SCR_NUMNONEVENTS = NUMBEROFNONEVENTS
SCR_P_EVENTS = PERCENTAGEOFEVENTS SCR_P_NONEVENTS = PERCENTAGEOFNONEVENTS ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... OUTDIST MODIFICATION LABEL AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL BIN = "Bin" N = "Number of Observations" P_LABEL = "Posterior
Probability Range" EVENT = "Event" LOWPOSTERIOR = "Lower Bound Posterior Probability"
PERCENTAGEOFEVENTS = "Percentage of Events" CUMULATIVEPERCENTAGEOFNONEVENTS = "Cumulative
Percentage of Nonevents" CUMULATIVEPERCENTAGE = "Cumulative Percentage" PERCENTAGEOFEVENTS =
"Percentage of Events" PERCENTAGEOFNONEVENTS = "Percentage of Nonevents"
CUMULATIVEPERCENTAGEOFEVENTS = "Cumulative Percentage of Events" UPPOSTERIOR = "Upper Bound
Posterior Probability" NUMBEROFEVENTS = "Number of Events" PERCENTAGE = "Percentage"
NUMBEROFNONEVENTS = "Number of Nonevents" _MEANP_ = "Mean Posterior Probability" _MINP_ = "Min
Posterior Probability" _MAXP_ = "Max Posterior Probability" SCORE = "Model Score" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   SET WORK._TEMPSCOREDIST (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........... END OF OUTDIST MODIFICATION;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start of OUTRANKS Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPRANK;
MPRINT(EM_ASSESS):   RENAME __EVENT__ = EVENT P_RESP = RESP C_P_CAPT_RESP = CAPC P_CAPT_RESP =
CAP NUMNONRESP = NUMNEVENT NUMRESP = NUMEVENT BASEEVENTS = BASENUMBEROFEVENTS BESTNUMEVENTS =
BESTNUMBEROFEVENTS MAXPROB = _MAXP_ MINPROB = _MINP_ CBASELIFT = BASELIFTC C_LIFT = LIFTC
MNPROB = _MEANP_ PERCENTILE = DECILE NUMOBS = N NUMEVENT = NUMBEROFEVENTS C_P_RESP = RESPC ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................. OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL _MAXP_ = "Max Posterior Probability" _MINP_ = "Min Posterior
Probability" _MEANP_ = "Mean Posterior Probability" BASECAP = "Baseline % Captured Response"
BASECAPC = "Baseline Cumulative % Captured Response" BASENUMBEROFEVENTS = "Baseline Number of
Events" BASEGAIN = "Baseline Gain" BASELIFT = "Baseline Lift" BASELIFTC = "Baseline Cumulative
Lift" BASERESP = "Baseline % Response" BASERESPC = "Baseline Cumulative % Response" BASELIFTC
= "Baseline Cumulative Lift" BESTCAP = "Best % Captured Response" BESTCAPC = "Best Cumulative
% Captured Response" BESTGAIN = "Best Gain" BESTRESP = "Best % Response" BESTRESPC = "Best
Cumulative % Response" BESTLIFT = "Best Lift" BESTLIFTC = "Best Cumulative Lift"
BESTNUMBEROFEVENTS = "Best Number of Events" CAP = "% Captured Response" CAPC = "Cumulative %
Captured Response" DECILE = "Depth" GAIN = "Gain" LIFT = "Lift" LIFTC = "Cumulative Lift"
NUMNEVENT = "Number of Nonevents" N = "Number of Observations" EVENT = "Event" RESPC =
"Cumulative % Response" NUMBEROFEVENTS = "Number of Events" RESP = "% Response" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK;
MPRINT(EM_ASSESS):   SET WORK._TEMPRANK (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   proc datasets lib=work nolist;
MPRINT(EM_ASSESS):   delete _ea_tmpdata;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_ASSESS):   quit;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   OPTION ERRORS = 20;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):    data WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "TRAIN";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl46_EMRANK;
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "TRAIN";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl46_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   run;
2482467    data EM_temp_assessMeta;
MPRINT(EM_DIAGRAM):    data EM_temp_assessMeta;
2482468    set EMWS8.Ensmbl46_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl46_CMeta_TRAIN;
2482469    where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST')
2482469  ! ;
MPRINT(EM_DIAGRAM):   where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION',
'ASSESS', 'COST');
2482470    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS8.ENSMBL46_CMETA_TRAIN.
      WHERE role in ('ASSESS', 'CLASSIFICATION', 'COST', 'DECISION', 'PREDICT', 'RESIDUAL');
NOTE: The data set WORK.EM_TEMP_ASSESSMETA has 8 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2482471    data EM_temp_assessdata;
MPRINT(EM_DIAGRAM):    data EM_temp_assessdata;
2482472    set EMWS8.Ensmbl46_VALIDATE(keep=
2482473    F_DepVar
2482474    I_DepVar
2482475    P_DepVar0
2482476    P_DepVar1
2482477    R_DepVar0
2482478    R_DepVar1
2482479    U_DepVar
2482480    _WARN_
2482481    DepVar
2482482    );
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl46_VALIDATE(keep= F_DepVar I_DepVar P_DepVar0 P_DepVar1
R_DepVar0 R_DepVar1 U_DepVar _WARN_ DepVar );
2482483    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: There were 1018 observations read from the data set EMWS8.META_VALIDATE.
NOTE: View EMWS8.ENSMBL46_VALIDATE.VIEW used (Total process time):
      real time           0.14 seconds
      cpu time            0.14 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.AUTONEURAL9_VALIDATE.
NOTE: There were 1018 observations read from the data set EMWS8.ENSMBL46_VALIDATE.
NOTE: The data set WORK.EM_TEMP_ASSESSDATA has 1018 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.15 seconds
      cpu time            0.15 seconds
 
 
MPRINT(EM_DIAGRAM):    proc freq data=EM_temp_assessdata noprint;
MPRINT(EM_DIAGRAM):   table I_DepVar*F_DepVar / out = WORK.Ensmbl46_1K92A0C nocol norow outpct;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.Ensmbl46_1K92A0C;
MPRINT(EM_DIAGRAM):   length _TYPE_ $10 DATAROLE TARGET $32 TARGETLABEL $200 FROM INTO $32
CORRECTTEXT $40 ;
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Outcome Type";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role";
MPRINT(EM_DIAGRAM):   label TARGET = "Target Variable";
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
MPRINT(EM_DIAGRAM):   label CORRECTTEXT = "Correct Text";
MPRINT(EM_DIAGRAM):   label CORRECT = "Correct";
MPRINT(EM_DIAGRAM):   set WORK.Ensmbl46_1K92A0C(rename=(F_DepVar=FROM I_DepVar=INTO));
MPRINT(EM_DIAGRAM):   retain _TYPE_ 'PREDICTION' DATAROLE "VALIDATE" TARGET "DepVar";
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   if FROM eq INTO then do;
MPRINT(EM_DIAGRAM):   CORRECT = 0;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Correct";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   CORRECT = 1;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Incorrect";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl46_EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl46_EMCLASSIFICATION WORK.Ensmbl46_1K92A0C;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   set WORK.Ensmbl46_1K92A0C;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT(drop=INTO FROM _TYPE_);
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   length MISC $12;
MPRINT(EM_DIAGRAM):   if FROM='1' and INTO='1' then MISC='TRUEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM='1' and INTO ne '1' then MISC='FALSENEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne '1' and INTO='1' then MISC='FALSEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne'1' and INTO ne '1' then MISC='TRUENEVENT';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.MISCREPORT nothreads;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc summary data=WORK.MISCREPORT NWAY;
MPRINT(EM_DIAGRAM):   output out=WORK.MISCCOUNT(drop=_FREQ_ _TYPE_) SUM=COUNT;
MPRINT(EM_DIAGRAM):   CLASS MISC;
MPRINT(EM_DIAGRAM):   VAR COUNT;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK.MISCCOUNT out=WORK.MISCREPORT(drop=_NAME_
_LABEL_);
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   ID MISC;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl46_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl46_EMEVENTREPORT WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data ASSESS_REPORTMETA;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl46_VariableSet;
MPRINT(EM_DIAGRAM):   where REPORT='Y';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emassmt.em_assess.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural9_DepVar_DM;
MPRINT(EM_DIAGRAM):   where _TYPE_="TARGET";
MPRINT(EM_DIAGRAM):   call symput('ASSMT_EVENT', strip(event));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):
MPRINT(EM_ASSESS):   data _ea_tmpdata;
MPRINT(EM_ASSESS):   set EM_temp_assessdata;
MPRINT(EM_ASSESS):   _tmpfreqvar_=1;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_CHECKEMSETINIT):   DATA _NULL_;
MPRINT(EM_CHECKEMSETINIT):   EM_SETINIT = 'N';
MPRINT(EM_CHECKEMSETINIT):   IF SYSPROD('PRODNUM50') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM448') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM102') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM103') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   CALL SYMPUT('EM_SETINIT', EM_SETINIT);
MPRINT(EM_CHECKEMSETINIT):   RUN;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Reading in reporting data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET ASSESS_REPORTMETA END = EOF;
MPRINT(EM_ASSESS):   IF TYPE = "C" OR UPCASE (LEVEL) IN ("NOMINAL", "BINARY" , "ORDINAL") THEN
DO;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMCTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTC" || LEFT (PUT (NUMCTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "C");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF UPCASE(NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMNTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTN" || LEFT (PUT (NUMNTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMNTOREPORT", NUMNTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMCTOREPORT", NUMCTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMTOREPORT", SUM (NUMNTOREPORT, NUMCTOREPORT));
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   PROC DMDB DATA = _ea_tmpdata VAROUT = VAROUT DMDBCAT = _D CLASSOUT =
_ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   CLASS F_DepVar ;
 
MPRINT(EM_ASSESS):   VAR P_DepVar1 _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_;
MPRINT(EM_ASSESS):   RUN ;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   PROC SORT DATA = _ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _auxeventname (keep = __event__) ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ...FLAG0_1 = ..... TARGET IS 0, 1 & EVENT = 1;
 
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   length __event__ $ 32;
MPRINT(EM_ASSESS):   RETAIN FLAG0_1 1 NUM1 . NUM0 . __event__ "_missing_" ;
 
MPRINT(EM_ASSESS):   SET _ASSMT_CLASSOUT END = EOF;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ....... LEVEL = BINARY OR NOMINAL OR ORDINAL;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   IF UPCASE(NAME) = UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   CUMFREQ + FREQUENCY;
MPRINT(EM_ASSESS):   IF LEVEL NE "." THEN DO;
MPRINT(EM_ASSESS):   N1 + 1;
MPRINT(EM_ASSESS):   IF (NRAW NE 0 AND NRAW NE 1) OR TYPE NE "N" OR "" > " " THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ......................... IF EVENT NE BLANK;
MPRINT(EM_ASSESS):   * ....................LEVEL IS CHAR VAR ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   IF UPCASE("1") = UPCASE(LEVEL) THEN DO;
MPRINT(EM_ASSESS):   NUM1 = FREQUENCY;
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", CRAW );
MPRINT(EM_ASSESS):   __event__ = craw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   ELSE do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", NRAW );
MPRINT(EM_ASSESS):   __event__ = nraw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF LAST.NAME THEN DO;
 
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * .............. IN NOMINAL CASE, NEED TO GROUP ALL '0' ;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   NUM0 = SUM (CUMFREQ, - NUM1);
MPRINT(EM_ASSESS):   IF NUM0 < 0 THEN NUM0 = 0;
MPRINT(EM_ASSESS):   IF NUM1 = . THEN NUM1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM0", NUM0 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM1", NUM1);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM1", NUM1 / CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM0", (CUMFREQ - NUM1) / CUMFREQ);
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN DO;
MPRINT(EM_ASSESS):   FLAG0_1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "C" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF "" = " " THEN DO;
MPRINT(EM_ASSESS):   IF "1" NE "1" THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "N" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ................... IF TYPE = N;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("FLAG0_1", FLAG0_1 );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................IF LAST.NAME ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ...............IF LEVEL NE '.' ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * .............. IF NAME = TARGET;
MPRINT(EM_ASSESS):   ELSE IF "" > " " AND UPCASE(NAME) = UPCASE("") THEN DO;
MPRINT(EM_ASSESS):   NUMDECISIONS + 1;
MPRINT(EM_ASSESS):   LEVEL = TRANSLATE (LEVEL, "_", "'", "_", '"');
MPRINT(EM_ASSESS):   CALL SYMPUTX ("D_LABEL" || LEFT (PUT (NUMDECISIONS, 3.)), LEVEL );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................... ELSE IF UPCASE;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   output _auxeventname;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMOBS", CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMDECISIONS", NUMDECISIONS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET VAROUT END = EOF;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) = UPCASE ("P_DepVar1") THEN DO;
MPRINT(EM_ASSESS):   IF N = 0 THEN DO;
MPRINT(EM_ASSESS):   PUT //// "          Warning: All posterior probabilities are missing
values ";
MPRINT(EM_ASSESS):   PUT ///;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("ALLMISS", 1);
MPRINT(EM_ASSESS):   STOP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("ALLMISS", 0);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB", MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB", MAX);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("DIFF", MAX - MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NMISSPROB", NMISS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF UPCASE (NAME) = UPCASE ("_tmpfreqvar_") THEN DO;
MPRINT(EM_ASSESS):   AUXMIN = MIN - INT (MIN);
MPRINT(EM_ASSESS):   AUXMAX = MAX - INT (MAX);
MPRINT(EM_ASSESS):   IF AUXMIN > 0 OR AUXMAX > 0 THEN CALL SYMPUTX ("USEWEIGHT", "Y");
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("USEWEIGHT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _ANY0;
MPRINT(EM_ASSESS):   SET _ea_tmpdata (KEEP = F_DepVar P_DepVar1 _tmpfreqvar_ );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................... No Formats;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF LEFT ( F_DepVar ) = "1" THEN NTARGET = 1;
MPRINT(EM_ASSESS):   ELSE NTARGET = 0;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Before proc summary of binary case;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC SUMMARY DATA = _ANY0 (KEEP = P_DepVar1 NTARGET _tmpfreqvar_ WHERE =
(NTARGET > . )) NWAY MISSING;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   CLASS P_DepVar1 ;
MPRINT(EM_ASSESS):   VAR NTARGET ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   OUTPUT OUT = ANYSUM (DROP = _TYPE_) MEAN = _MEANTARGET _MEANFREQVAR ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... Main Data Set Processing, Binary case;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK (KEEP = BASECAPC BASECAP __EVENT__ BASEEVENTS
BASEGAIN BASELIFT BASERESP BASERESPC BESTCAP BESTCAPC BESTGAIN BESTLIFT BESTLIFTC
BESTNUMEVENTS BESTRESP BESTRESPC BIN CBASELIFT C_LIFT C_P_CAPT_RESP C_P_RESP GAIN LIFT MAXPROB
MINPROB MNPROB NUMNONRESP NUMOBS NUMRESP PERCENTILE P_CAPT_RESP P_RESP ) WORK._TEMPSCOREDIST
(KEEP = BIN LOWERPROB UPPERPROB EVENTVALUE SCR_NUMEVENTS MODELSCORE SCR_NUMNONEVENTS RANGE
NUMOBSINGROUP PERCOBSINGROUP C_PERCOBSINGROUP SCR_P_EVENTS SCR_CP_EVENTS SCR_P_NONEVENTS
SCR_CP_NONEVENTS SCR_MNPROB SCR_MINPROB SCR_MAXPROB ) ;
 
MPRINT(EM_ASSESS):   SET ANYSUM END = EOF;
 
MPRINT(EM_ASSESS):   IF _N_ = 1 THEN SET _AUXEVENTNAME;
 
MPRINT(EM_ASSESS):   RETAIN MINPROB1 - MINPROB20 1 MAXPROB1 - MAXPROB20 0 MNPROB1 - MNPROB20 0
NUMOBS1 - NUMOBS20 0 NUMRESP1 - NUMRESP20 0 TRUEPOS1 - TRUEPOS100 0 TRUENEG1 - TRUENEG100 0
FALSEPOS1 - FALSEPOS100 0 FALSENEG1 - FALSENEG100 0 EVENTS1 - EVENTS100 NONEVENTS1 -
NONEVENTS100 0 FIRSTIN1 - FIRSTIN100 . LASTIN1 - LASTIN100 . RESPRATE 0.152259332 _NEVENTS 155
_NNONEVENTS 863 TARGET "NTARGET" ;
MPRINT(EM_ASSESS):   ARRAY MINPROBS (20) MINPROB1 - MINPROB20;
MPRINT(EM_ASSESS):   ARRAY MAXPROBS (20) MAXPROB1 - MAXPROB20;
MPRINT(EM_ASSESS):   ARRAY MNPROBS (20) MNPROB1 - MNPROB20;
MPRINT(EM_ASSESS):   ARRAY NUMOBSS (20) NUMOBS1 - NUMOBS20;
MPRINT(EM_ASSESS):   ARRAY NUMRESPS (20) NUMRESP1 - NUMRESP20;
MPRINT(EM_ASSESS):   ARRAY TRUEPOSX (100) TRUEPOS1 - TRUEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSEPOSX (100) FALSEPOS1 - FALSEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSENEGX (100) FALSENEG1 - FALSENEG100;
MPRINT(EM_ASSESS):   ARRAY TRUENEGX (100) TRUENEG1 - TRUENEG100;
MPRINT(EM_ASSESS):   ARRAY _EVENTS (100) EVENTS1 - EVENTS100;
MPRINT(EM_ASSESS):   ARRAY NONEVENTS (100) NONEVENTS1 - NONEVENTS100;
MPRINT(EM_ASSESS):   ARRAY FIRSTIN (100) FIRSTIN1 - FIRSTIN100;
MPRINT(EM_ASSESS):   ARRAY LASTIN (100) LASTIN1 - LASTIN100;
MPRINT(EM_ASSESS):   RETAIN SCR_MNPROB1 - SCR_MNPROB100 0 SCR_MINPROB1 - SCR_MINPROB100 1
SCR_MAXPROB1 - SCR_MAXPROB100 0;
MPRINT(EM_ASSESS):   ARRAY SCR_MNPROBS (100) SCR_MNPROB1 - SCR_MNPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MINPROBS (100) SCR_MINPROB1 - SCR_MINPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MAXPROBS (100) SCR_MAXPROB1 - SCR_MAXPROB100;
MPRINT(EM_ASSESS):   DROP SCR_MINPROB1 - SCR_MINPROB100 SCR_MAXPROB1 - SCR_MAXPROB100
SCR_MNPROB1 - SCR_MNPROB100 ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...... Area For 8 Financials ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF _MEANTARGET = . THEN _MEANTARGET = RESPRATE;
MPRINT(EM_ASSESS):   DROP N1 _K SUMWEIGHTS ;
MPRINT(EM_ASSESS):   SUMWEIGHTS = 1;
 
MPRINT(EM_ASSESS):   DO _K = 1 TO CEIL (_FREQ_);
MPRINT(EM_ASSESS):   IF _K = CEIL (_FREQ_) THEN DO;
MPRINT(EM_ASSESS):   IF _FREQ_ < CEIL (_FREQ_) THEN _WEIGHT = _FREQ_ - FLOOR (_FREQ_);
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   N1 + _WEIGHT;
MPRINT(EM_ASSESS):   NTARGET = _MEANTARGET ;
MPRINT(EM_ASSESS):   DECILE = MIN (20, CEIL (N1 * 20 / 1018));
MPRINT(EM_ASSESS):   MINPROBS ( DECILE) = MIN (MINPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MAXPROBS ( DECILE) = MAX (MAXPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MNPROBS ( DECILE) = SUM (MNPROBS ( DECILE), P_DepVar1 * _WEIGHT);
MPRINT(EM_ASSESS):   NUMOBSS ( DECILE) = NUMOBSS ( DECILE) + _WEIGHT;
MPRINT(EM_ASSESS):   NUMRESPS ( DECILE) = NUMRESPS ( DECILE) + _MEANTARGET * _WEIGHT;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ outside of do loop, Area for final ROC;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   RANKDELTA = (ROUND ( _FREQ_ ) + 1) / 2;
MPRINT(EM_ASSESS):   RANK = UNTIEDRANK + RANKDELTA;
MPRINT(EM_ASSESS):   DROP RANK ;
MPRINT(EM_ASSESS):   SUMRANK1 + RANK * ROUND (_MEANTARGET * _FREQ_, .0000001);
MPRINT(EM_ASSESS):   UNTIEDRANK + ROUND (_FREQ_, .00000001);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Area For ROC Curve;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DO _K = 1 TO 100;
MPRINT(EM_ASSESS):   IF P_DepVar1 * 100 >= _K THEN DO;
MPRINT(EM_ASSESS):   TRUEPOSX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   FALSEPOSX ( _K ) + _FREQ_ * (1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   TRUENEGX ( _K ) + _FREQ_ * ( 1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   FALSENEGX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   SLOT = MIN (MAX (CEIL (P_DepVar1 * 100), 1), 100) ;
MPRINT(EM_ASSESS):   DROP SLOT;
MPRINT(EM_ASSESS):   FIRSTIN ( SLOT ) = MIN ( FIRSTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   LASTIN ( SLOT ) = MAX ( LASTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   _EVENTS ( SLOT) = _EVENTS ( SLOT) + _FREQ_ * _MEANTARGET;
MPRINT(EM_ASSESS):   NONEVENTS ( SLOT) = NONEVENTS ( SLOT) + _FREQ_ * (1 - _MEANTARGET);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ START OF OUTDIST IN BINARY CASE MAIN DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   SCR_MNPROBS ( SLOT ) = SUM (SCR_MNPROBS (SLOT), P_DepVar1 * _FREQ_ );
MPRINT(EM_ASSESS):   SCR_MINPROBS ( SLOT ) = MIN (SCR_MINPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   SCR_MAXPROBS ( SLOT ) = MAX (SCR_MAXPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ End of Outdist in Binary case main DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   PUT //;
MPRINT(EM_ASSESS):   DO K = 1 TO 20;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LENGTH EVENTVALUE $ 32;
MPRINT(EM_ASSESS):   RETAIN EVENTVALUE "1" ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ......... Start of EOF area of BINARY processing of main data set ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SUMRANK1", SUMRANK1);
MPRINT(EM_ASSESS):   LENGTH DATAROLE $ 10;
MPRINT(EM_ASSESS):   RETAIN DATAROLE "VALIDATE" ;
MPRINT(EM_ASSESS):   RETAIN OVLMIN 0.0000207828 OVLMAX 1 ;
MPRINT(EM_ASSESS):   DROP OVLMIN OVLMAX ;
MPRINT(EM_ASSESS):   C_NUMOBS = 0;
MPRINT(EM_ASSESS):   C_NUM_RESP = 0;
MPRINT(EM_ASSESS):   C_NUM_NONRESP = 0;
MPRINT(EM_ASSESS):   C_P_RESP = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   PREVIOUSPROFIT = 0;
MPRINT(EM_ASSESS):   MAXPROFIT = 0;
MPRINT(EM_ASSESS):   _KS_BIN_ = 0;
MPRINT(EM_ASSESS):   DROP _KS_BIN_;
MPRINT(EM_ASSESS):   AVGNUMRESP = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASERESP = 100 * RESPRATE;
MPRINT(EM_ASSESS):   BASERESPC = BASERESP;
MPRINT(EM_ASSESS):   BASECAP = 100 / 20;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................Start OF Gainschart = Outranks Area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = 0;
MPRINT(EM_ASSESS):   DO GROUP = 20 TO 1 BY -1;
 
MPRINT(EM_ASSESS):   BASECAPC + BASECAP;
MPRINT(EM_ASSESS):   PERCENTILE = GROUP * (100 / 20);
MPRINT(EM_ASSESS):   MINPROB = MINPROBS ( GROUP);
MPRINT(EM_ASSESS):   MAXPROB = MAXPROBS ( GROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB" || LEFT ( PUT (GROUP, 3.)), MINPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB" || LEFT ( PUT (GROUP, 3.)), MAXPROB);
MPRINT(EM_ASSESS):   NUMOBS = NUMOBSS ( GROUP);
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN MNPROB = MNPROBS ( GROUP) / NUMOBS;
MPRINT(EM_ASSESS):   ELSE MNPROB = .;
MPRINT(EM_ASSESS):   C_NUMOBS = SUM (NUMOBS, C_NUMOBS);
MPRINT(EM_ASSESS):   NUMRESP = NUMRESPS ( GROUP);
MPRINT(EM_ASSESS):   NUMNONRESP = NUMOBS - NUMRESP;
MPRINT(EM_ASSESS):   C_AVGNUM_RESP + AVGNUMRESP;
MPRINT(EM_ASSESS):   IF C_NUMOBS <= _NEVENTS THEN DO;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   BESTCAPC = C_NUMOBS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BASEEVENTS = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASENONEVENTS = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   FLAG + 1;
MPRINT(EM_ASSESS):   DROP FLAG;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = _NEVENTS - C_NUMOBS + NUMOBS;
MPRINT(EM_ASSESS):   IF FLAG > 1 THEN BESTNUMEVENTS = 0;
MPRINT(EM_ASSESS):   BESTCAPC = 100;
MPRINT(EM_ASSESS):   IF C_NUMOBS - _NEVENTS <= NUMOBS THEN DO;
MPRINT(EM_ASSESS):   BASEEVENTS = C_NUMOBS - _NEVENTS;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS - C_NUMOBS + _NEVENTS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BASEEVENTS = 0;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   BESTCAP = BESTNUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BESTLIFT = BESTNUMEVENTS / AVGNUMRESP;
MPRINT(EM_ASSESS):   C_BESTNUMEVENTS + BESTNUMEVENTS;
MPRINT(EM_ASSESS):   DROP C_BESTNUMEVENTS;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN BESTLIFTC = C_BESTNUMEVENTS / (_NEVENTS / 1018 *
C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE BESTLIFTC = .;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESP = BESTNUMEVENTS * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_RESP = NUMRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_NONRESP = NUMNONRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESP = .;
MPRINT(EM_ASSESS):   P_RESP = .;
MPRINT(EM_ASSESS):   P_NONRESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESPC = C_BESTNUMEVENTS * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   BESTGAIN = MAX (0, ((C_BESTNUMEVENTS / C_NUMOBS ) / ( AVGNUMRESP /
NUMOBS) - 1) * 100);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESPC = .;
MPRINT(EM_ASSESS):   BESTGAIN = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMNONRESP > 0 THEN ODDS = NUMRESP / NUMNONRESP;
MPRINT(EM_ASSESS):   ELSE ODDS = .;
MPRINT(EM_ASSESS):   C_NUM_RESP = SUM (C_NUM_RESP , NUMRESP );
MPRINT(EM_ASSESS):   C_NUM_NONRESP = SUM (C_NUM_NONRESP, NUMNONRESP );
MPRINT(EM_ASSESS):   IF C_NUM_NONRESP > 0 THEN C_ODDS = C_NUM_RESP / C_NUM_NONRESP;
MPRINT(EM_ASSESS):   ELSE C_ODDS = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   C_P_RESP = C_NUM_RESP * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   GAIN = ABS(100 * (((C_NUM_RESP / C_NUMOBS ) / (_NEVENTS / 1018)) - 1));
MPRINT(EM_ASSESS):   BASEGAIN = 100 * (( (C_AVGNUM_RESP / C_NUMOBS) / ( AVGNUMRESP / NUMOBS))
- 1);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   GAIN = .;
MPRINT(EM_ASSESS):   BASEGAIN = .;
MPRINT(EM_ASSESS):   C_P_RESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF BASEGAIN <= 0 THEN BASEGAIN = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = NUMRESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   P_CAPT_NONRESP = NUMNONRESP * 100 / ( 1018 - _NEVENTS);
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = C_NUM_RESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   C_P_CAPT_NONRESP = C_NUM_NONRESP * 100 / ( 1018 - _NEVENTS);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Area For Binned KS in Outranks area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _DIFFERENCE = C_P_CAPT_RESP - C_P_CAPT_NONRESP ;
MPRINT(EM_ASSESS):   IF _KS_BIN_ < _DIFFERENCE THEN DO;
MPRINT(EM_ASSESS):   _KS_BIN_ = _DIFFERENCE;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = MINPROB + (MAXPROB - MINPROB) / 2 ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LIFT = P_RESP * .01 / RESPRATE ;
MPRINT(EM_ASSESS):   C_LIFT = C_P_RESP * .01 / RESPRATE;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BASELIFT = AVGNUMRESP / ( RESPRATE * NUMOBS );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE BASELIFT = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN CBASELIFT = C_AVGNUM_RESP / (RESPRATE * C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE CBASELIFT = .;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ WITHIN DO LOOP FOR OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 + 1 - GROUP;
MPRINT(EM_ASSESS):   PERCENTILE = BIN * (100 / 20);
MPRINT(EM_ASSESS):   B_C_P_RESP = PERCENTILE;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPRANK ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................ END OF GAINSCHART = OUTRANKS AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFITGROUP" , MAXPROFITGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFIT" , MAXPROFIT );
MPRINT(EM_ASSESS):   KS_ABSDIFF = 0 ;
MPRINT(EM_ASSESS):   MINPRECTPR = 9999;
MPRINT(EM_ASSESS):   Y0 = 1 - RESPRATE;
MPRINT(EM_ASSESS):   Y1 = RESPRATE;
MPRINT(EM_ASSESS):   MAXMUTUAL = 0;
MPRINT(EM_ASSESS):   DROP MAXMUTUAL KSPROB Y0 Y1 KS_ABSDIFF MINPRECTPR;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .....................About to start Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................... Finished Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Outdist ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS96 - EVENTS100 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS96 - NONEVENTS100);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB96 -
SCR_MNPROB100) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB96 - SCR_MINPROB100) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB96 - SCR_MAXPROB100) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 20;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 19 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS91 - EVENTS95 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS91 - NONEVENTS95);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB91 -
SCR_MNPROB95) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB91 - SCR_MINPROB95) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB91 - SCR_MAXPROB95) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 19;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
The SAS System
 
MPRINT(EM_ASSESS):   BIN = 18 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS86 - EVENTS90 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS86 - NONEVENTS90);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB86 -
SCR_MNPROB90) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB86 - SCR_MINPROB90) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB86 - SCR_MAXPROB90) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 18;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 17 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS81 - EVENTS85 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS81 - NONEVENTS85);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB81 -
SCR_MNPROB85) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB81 - SCR_MINPROB85) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB81 - SCR_MAXPROB85) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 17;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 16 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS76 - EVENTS80 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS76 - NONEVENTS80);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB76 -
SCR_MNPROB80) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB76 - SCR_MINPROB80) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB76 - SCR_MAXPROB80) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 16;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 15 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS71 - EVENTS75 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS71 - NONEVENTS75);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB71 -
SCR_MNPROB75) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB71 - SCR_MINPROB75) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB71 - SCR_MAXPROB75) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 15;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 14 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS66 - EVENTS70 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS66 - NONEVENTS70);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB66 -
SCR_MNPROB70) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB66 - SCR_MINPROB70) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB66 - SCR_MAXPROB70) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 14;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 13 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS61 - EVENTS65 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS61 - NONEVENTS65);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB61 -
SCR_MNPROB65) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB61 - SCR_MINPROB65) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB61 - SCR_MAXPROB65) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 13;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 12 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS56 - EVENTS60 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS56 - NONEVENTS60);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB56 -
SCR_MNPROB60) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB56 - SCR_MINPROB60) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB56 - SCR_MAXPROB60) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 12;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 11 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS51 - EVENTS55 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS51 - NONEVENTS55);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB51 -
SCR_MNPROB55) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB51 - SCR_MINPROB55) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB51 - SCR_MAXPROB55) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 11;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 10 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS46 - EVENTS50 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS46 - NONEVENTS50);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB46 -
SCR_MNPROB50) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB46 - SCR_MINPROB50) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB46 - SCR_MAXPROB50) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 10;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 9 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS41 - EVENTS45 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS41 - NONEVENTS45);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB41 -
SCR_MNPROB45) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB41 - SCR_MINPROB45) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB41 - SCR_MAXPROB45) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 9;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 8 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS36 - EVENTS40 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS36 - NONEVENTS40);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB36 -
SCR_MNPROB40) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB36 - SCR_MINPROB40) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB36 - SCR_MAXPROB40) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 8;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 7 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS31 - EVENTS35 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS31 - NONEVENTS35);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB31 -
SCR_MNPROB35) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB31 - SCR_MINPROB35) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB31 - SCR_MAXPROB35) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 7;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 6 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS26 - EVENTS30 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS26 - NONEVENTS30);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB26 -
SCR_MNPROB30) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB26 - SCR_MINPROB30) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB26 - SCR_MAXPROB30) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 6;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 5 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS21 - EVENTS25 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS21 - NONEVENTS25);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB21 -
SCR_MNPROB25) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB21 - SCR_MINPROB25) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB21 - SCR_MAXPROB25) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 5;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 4 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS16 - EVENTS20 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS16 - NONEVENTS20);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB16 -
SCR_MNPROB20) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB16 - SCR_MINPROB20) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB16 - SCR_MAXPROB20) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 4;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 3 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS11 - EVENTS15 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS11 - NONEVENTS15);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB11 -
SCR_MNPROB15) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB11 - SCR_MINPROB15) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB11 - SCR_MAXPROB15) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 3;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 2 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS6 - EVENTS10 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS6 - NONEVENTS10);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB6 -
SCR_MNPROB10) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB6 - SCR_MINPROB10) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB6 - SCR_MAXPROB10) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 2;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 1 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS1 - EVENTS5 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS1 - NONEVENTS5);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB1 - SCR_MNPROB5)
/ NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB1 - SCR_MINPROB5) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB1 - SCR_MAXPROB5) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 1;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSPROB" , PUT (KSPROB, 5.3 ) );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_PROB" , _KS_BIN_PROB );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_" , _KS_BIN_ / 100 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSDIFF" , KS_ABSDIFF );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PRECTPR" , PRECTPR );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXMUTUALPROB" , MAXMUTUALPROB);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LABEL __EVENT__ = "Event" DECILE = "Depth" BIN = "Bin" NUMOBS = "Number
of Observations" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * RUN for large data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST;
MPRINT(EM_ASSESS):   DELETE _AUXEVENTNAME;
MPRINT(EM_ASSESS):   QUIT;
 
MPRINT(EM_ASSESS):   OPTION NOCENTER LS = 95;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Report Vars Area.;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start OF Outdist Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPSCOREDIST;
MPRINT(EM_ASSESS):   RENAME MODELSCORE = SCORE UPPERPROB = UPPOSTERIOR SCR_CP_EVENTS =
CUMULATIVEPERCENTAGEOFEVENTS SCR_CP_NONEVENTS = CUMULATIVEPERCENTAGEOFNONEVENTS EVENTVALUE =
EVENT LOWERPROB = LOWPOSTERIOR NUMOBSINGROUP = N PERCOBSINGROUP = PERCENTAGE SCR_MINPROB =
_MINP_ SCR_MAXPROB = _MAXP_ SCR_MNPROB = _MEANP_ RANGE = P_LABEL C_PERCOBSINGROUP =
CUMULATIVEPERCENTAGE SCR_NUMEVENTS = NUMBEROFEVENTS SCR_NUMNONEVENTS = NUMBEROFNONEVENTS
SCR_P_EVENTS = PERCENTAGEOFEVENTS SCR_P_NONEVENTS = PERCENTAGEOFNONEVENTS ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... OUTDIST MODIFICATION LABEL AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL BIN = "Bin" N = "Number of Observations" P_LABEL = "Posterior
Probability Range" EVENT = "Event" LOWPOSTERIOR = "Lower Bound Posterior Probability"
PERCENTAGEOFEVENTS = "Percentage of Events" CUMULATIVEPERCENTAGEOFNONEVENTS = "Cumulative
Percentage of Nonevents" CUMULATIVEPERCENTAGE = "Cumulative Percentage" PERCENTAGEOFEVENTS =
"Percentage of Events" PERCENTAGEOFNONEVENTS = "Percentage of Nonevents"
CUMULATIVEPERCENTAGEOFEVENTS = "Cumulative Percentage of Events" UPPOSTERIOR = "Upper Bound
Posterior Probability" NUMBEROFEVENTS = "Number of Events" PERCENTAGE = "Percentage"
NUMBEROFNONEVENTS = "Number of Nonevents" _MEANP_ = "Mean Posterior Probability" _MINP_ = "Min
Posterior Probability" _MAXP_ = "Max Posterior Probability" SCORE = "Model Score" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   SET WORK._TEMPSCOREDIST (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........... END OF OUTDIST MODIFICATION;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start of OUTRANKS Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPRANK;
MPRINT(EM_ASSESS):   RENAME __EVENT__ = EVENT P_RESP = RESP C_P_CAPT_RESP = CAPC P_CAPT_RESP =
CAP NUMNONRESP = NUMNEVENT NUMRESP = NUMEVENT BASEEVENTS = BASENUMBEROFEVENTS BESTNUMEVENTS =
BESTNUMBEROFEVENTS MAXPROB = _MAXP_ MINPROB = _MINP_ CBASELIFT = BASELIFTC C_LIFT = LIFTC
MNPROB = _MEANP_ PERCENTILE = DECILE NUMOBS = N NUMEVENT = NUMBEROFEVENTS C_P_RESP = RESPC ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................. OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL _MAXP_ = "Max Posterior Probability" _MINP_ = "Min Posterior
Probability" _MEANP_ = "Mean Posterior Probability" BASECAP = "Baseline % Captured Response"
BASECAPC = "Baseline Cumulative % Captured Response" BASENUMBEROFEVENTS = "Baseline Number of
Events" BASEGAIN = "Baseline Gain" BASELIFT = "Baseline Lift" BASELIFTC = "Baseline Cumulative
Lift" BASERESP = "Baseline % Response" BASERESPC = "Baseline Cumulative % Response" BASELIFTC
= "Baseline Cumulative Lift" BESTCAP = "Best % Captured Response" BESTCAPC = "Best Cumulative
% Captured Response" BESTGAIN = "Best Gain" BESTRESP = "Best % Response" BESTRESPC = "Best
Cumulative % Response" BESTLIFT = "Best Lift" BESTLIFTC = "Best Cumulative Lift"
BESTNUMBEROFEVENTS = "Best Number of Events" CAP = "% Captured Response" CAPC = "Cumulative %
Captured Response" DECILE = "Depth" GAIN = "Gain" LIFT = "Lift" LIFTC = "Cumulative Lift"
NUMNEVENT = "Number of Nonevents" N = "Number of Observations" EVENT = "Event" RESPC =
"Cumulative % Response" NUMBEROFEVENTS = "Number of Events" RESP = "% Response" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK;
MPRINT(EM_ASSESS):   SET WORK._TEMPRANK (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   proc datasets lib=work nolist;
MPRINT(EM_ASSESS):   delete _ea_tmpdata;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_ASSESS):   quit;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   OPTION ERRORS = 20;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):    data WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "VALIDATE";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl46_EMRANK;
MPRINT(EM_DIAGRAM):   length target $32;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   length dataRole $20;
MPRINT(EM_DIAGRAM):   length EVENT $32;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl46_EMRANK WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "VALIDATE";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl46_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   length dataRole $20;
MPRINT(EM_DIAGRAM):   length EVENT $32;
MPRINT(EM_DIAGRAM):   length P_LABEL $9;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl46_EMSCOREDIST WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   run;
2486758    %let _cn = %sysfunc(getoption(CENTER));
2486759    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
2486760    proc print data=EMWS8.Ensmbl46_EMREPORTFIT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Ensmbl46_EMREPORTFIT noobs label;
2486761    var STAT LABEL TRAIN
2486762    VALIDATE
2486763    ;
MPRINT(EM_DIAGRAM):   var STAT LABEL TRAIN VALIDATE ;
2486764    by TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by TARGET TARGETLABEL;
2486765    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
2486766    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_fitstat_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Fit Statistics";
MPRINT(EM_DIAGRAM):   run;
2486767    run;
 
NOTE: There were 9 observations read from the data set EMWS8.ENSMBL46_EMREPORTFIT.
NOTE: The PROCEDURE PRINT printed page 2054.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2486768    title10;
MPRINT(EM_DIAGRAM):   title10;
2486769    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
2486770    proc sort data=EMWS8.Ensmbl46_EMCLASSIFICATION nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.Ensmbl46_EMCLASSIFICATION nothreads;
2486771    by DATAROLE TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET TARGETLABEL;
2486772    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS8.ENSMBL46_EMCLASSIFICATION.
NOTE: The data set EMWS8.ENSMBL46_EMCLASSIFICATION has 8 observations and 12 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2486773    %let _cn = %sysfunc(getoption(CENTER));
2486774    options nocenter;
MPRINT(EM_DIAGRAM):   options nocenter;
2486775    proc print data=EMWS8.Ensmbl46_EMCLASSIFICATION noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Ensmbl46_EMCLASSIFICATION noobs label;
2486776    var from into pct_row pct_col count percent
2486777    ;
MPRINT(EM_DIAGRAM):   var from into pct_row pct_col count percent ;
2486778    by DATAROLE TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET TARGETLABEL;
2486779    label FROM = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,     NOQUOTE))";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
2486780    label INTO = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcome_vlabel ,    NOQUOTE))";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
2486781    label PCT_ROW = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetpct_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
2486782    label PCT_COL = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcomepct_vlabel , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
2486783    label COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel ,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
2486784    label PERCENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_totalpct_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
2486785    where _TYPE_='PREDICTION';
MPRINT(EM_DIAGRAM):   where _TYPE_='PREDICTION';
2486786    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
2486787    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_classification_title    , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Classification Table";
MPRINT(EM_DIAGRAM):   run;
2486788    run;
 
NOTE: There were 8 observations read from the data set EMWS8.ENSMBL46_EMCLASSIFICATION.
      WHERE _TYPE_='PREDICTION';
NOTE: The PROCEDURE PRINT printed page 2055.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2486789    title9;
MPRINT(EM_DIAGRAM):   title9;
2486790    title10;
MPRINT(EM_DIAGRAM):   title10;
2486791    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
2486792    %let _cn = %sysfunc(getoption(CENTER));
2486793    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
2486794    data EMWS8.Ensmbl46_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl46_EMEVENTREPORT;
2486795    length DATAROLE TARGET $32 TARGETLABEL $200 FALSENEVENT TRUENEVENT FALSEEVENT
2486795  ! TRUEEVENT 8;
MPRINT(EM_DIAGRAM):   length DATAROLE TARGET $32 TARGETLABEL $200 FALSENEVENT TRUENEVENT
FALSEEVENT TRUEEVENT 8;
2486796    label DATAROLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
2486796  !  TARGET = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,      NOQUOTE))"
2486796  ! TARGETLABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel, NOQUOTE))"
2486796  ! FALSEEVENT
2486797    = "%sysfunc(sasmsg(sashelp.dmine, rpt_falseevent_vlabel ,  NOQUOTE))" FALSENEVENT =
2486797  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_falsenevent_vlabel , NOQUOTE))" TRUEEVENT =
2486797  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_trueevent_vlabel ,   NOQUOTE))" TRUENEVENT =
2486798       "%sysfunc(sasmsg(sashelp.dmine, rpt_truenevent_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role" TARGET = "Target" TARGETLABEL = "Target
Label" FALSEEVENT = "False Positive" FALSENEVENT = "False Negative" TRUEEVENT = "True
Positive" TRUENEVENT = "True Negative";
2486799    FALSEEVENT=0;
MPRINT(EM_DIAGRAM):   FALSEEVENT=0;
2486800    FALSENEVENT=0;
MPRINT(EM_DIAGRAM):   FALSENEVENT=0;
2486801    TRUEEVENT=0;
MPRINT(EM_DIAGRAM):   TRUEEVENT=0;
2486802    TRUENEVENT=0;
MPRINT(EM_DIAGRAM):   TRUENEVENT=0;
2486803    set EMWS8.Ensmbl46_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl46_EMEVENTREPORT;
2486804    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set EMWS8.ENSMBL46_EMEVENTREPORT.
NOTE: The data set EMWS8.ENSMBL46_EMEVENTREPORT has 2 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2486805    proc print data=EMWS8.Ensmbl46_EMEVENTREPORT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Ensmbl46_EMEVENTREPORT noobs label;
2486806    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
2486807    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_eventtable_title    , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Event Classification Table";
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL;
MPRINT(EM_DIAGRAM):   run;
2486808    by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL;
2486809    run;
 
NOTE: There were 2 observations read from the data set EMWS8.ENSMBL46_EMEVENTREPORT.
NOTE: The PROCEDURE PRINT printed page 2056.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2486810    title10;
MPRINT(EM_DIAGRAM):   title10;
2486811    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
2486812    proc datasets library=EMWS8 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS8 nolist;
2486813    modify Ensmbl46_EMRANK;
MPRINT(EM_DIAGRAM):   modify Ensmbl46_EMRANK;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
2486814    label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
2486815    label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
2486815  ! ;
MPRINT(EM_DIAGRAM):   run;
2486816    run;
 
NOTE: MODIFY was successful for EMWS8.ENSMBL46_EMRANK.DATA.
2486817    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.09 seconds
      cpu time            0.09 seconds
 
 
2486818    %let _cn = %sysfunc(getoption(CENTER));
2486819    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
2486820    proc print data=EMWS8.Ensmbl46_EMRANK label noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Ensmbl46_EMRANK label noobs;
2486821    var
2486822    decile gain lift liftc resp respc N _meanP_;
MPRINT(EM_DIAGRAM):   var decile gain lift liftc resp respc N _meanP_;
2486823    by
2486824    notsorted DATAROLE
2486825    notsorted TARGET
2486826    notsorted TARGETLABEL
2486827    ;
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL ;
2486828    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
2486829    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_scoreranking_title , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Assessment Score Rankings";
MPRINT(EM_DIAGRAM):   run;
2486830    run;
 
NOTE: There were 40 observations read from the data set EMWS8.ENSMBL46_EMRANK.
NOTE: The PROCEDURE PRINT printed page 2057.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2486831    title10;
MPRINT(EM_DIAGRAM):   title10;
2486832    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
2486833    proc datasets library=EMWS8 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS8 nolist;
2486834    modify Ensmbl46_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   modify Ensmbl46_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
2486835    label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,
2486835  ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
2486836    label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
2486836  ! ;
MPRINT(EM_DIAGRAM):   run;
2486837    run;
 
NOTE: MODIFY was successful for EMWS8.ENSMBL46_EMSCOREDIST.DATA.
2486838    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.09 seconds
      cpu time            0.10 seconds
 
 
MPRINT(EM_DIAGRAM):    options nocenter;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Ensmbl46_EMSCOREDIST label noobs;
MPRINT(EM_DIAGRAM):   var p_label numberOfEvents numberOfNonEvents _meanp_ percentage;
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL ;
MPRINT(EM_DIAGRAM):   where TARGET in( "DepVar" );
MPRINT(EM_DIAGRAM):   title9 ' ';
MPRINT(EM_DIAGRAM):   title10 "Assessment Score Distribution";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   title10;
MPRINT(EM_DIAGRAM):   options NOCENTER;
MPRINT(EM_DIAGRAM):   proc printto;
MPRINT(EM_DIAGRAM):   run;
