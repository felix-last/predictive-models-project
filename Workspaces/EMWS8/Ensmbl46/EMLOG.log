*------------------------------------------------------------*
User:                Lukas Fahr
Date:                28. April 2016
Time:                12.23 Uhr
Site:                70107571
Platform:            X64_7PRO
Maintenance Release: 9.03.01M2P081512
EM Version:          12.1
* 
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "12.23 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Training Log
Date:                28. April 2016
Time:                12.23 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O2F6Q6IY
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl46\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O2F6Q6IY new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOG
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl46\EMLOG.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "12.23 Uhr" );
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                Lukas Fahr";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Site:                70107571";
MPRINT(EM_DIAGRAM):   put "Platform:            X64_7PRO";
MPRINT(EM_DIAGRAM):   put "Maintenance Release: 9.03.01M2P081512";
MPRINT(EM_DIAGRAM):   put "EM Version:          12.1";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl46\EMTRAIN.log" encoding="UTF-8" NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _LOGIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl46\EMSCORE.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl46\EMREPORT.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl46\EMOUTPUT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "12.23 Uhr" );
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                Lukas Fahr";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl46\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl46\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl46\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_
'C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl46\EMRUNSTATUS.xml' encoding="UTF-8"
NOBOM;
(FREQ=(WHERE='ROLE = "FREQ"' DEFAULT='Y' RULE=(RULE1=(DESCRIPTION='USEATMOST1FREQ'
VALUES=(VALUE1='Y' )[103371] MAX=1 EXCEEDMAXVALUE='' )[103375] )[103369]
VALIDCHOICES=(CHOICE1='Y' )[103373] )[103657] INPUTREJECT=(WHERE='ROLE in("INPUT",
"REJECTED")' DEFAULT='D' VALIDCHOICES=(CHOICE1='D' )[103379]
RULE=(RULE1=(DESCRIPTION='USEATLEAST1INPUTREJECT' WHERE='(ROLE = "INPUT" and USE in("Y" "D"))
or (ROLE = "REJECTED" and USE = "Y")' MIN=. )[103383] )[103381] )[103377] TARGET=(WHERE='ROLE
= "TARGET"' DEFAULT='Y' VALIDCHOICES=(CHOICE1='Y' CHOICE2='N' )[103387]
RULE=(RULE1=(DESCRIPTION='METADATA.USE1TARGET' VALUES=(VALUE1='Y' )[103393] MIN=1 MAX=1
EXCEEDMAXVALUE='N' )[103391] )[103389] )[103385] )[103367]
1241767    proc freq data=EMWS8.Ensmbl46_VariableSet noprint;
MPRINT(EM_DIAGRAM):    proc freq data=EMWS8.Ensmbl46_VariableSet noprint;
1241768    table ROLE*LEVEL/out=WORK.Ensmbl46META;
MPRINT(EM_DIAGRAM):   table ROLE*LEVEL/out=WORK.Ensmbl46META;
1241769    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 38 observations read from the data set EMWS8.ENSMBL46_VARIABLESET.
NOTE: The data set WORK.ENSMBL46META has 5 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1241770    proc print data=WORK.Ensmbl46META label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.Ensmbl46META label noobs;
1241771    var ROLE LEVEL COUNT;
MPRINT(EM_DIAGRAM):   var ROLE LEVEL COUNT;
1241772    label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL =
1241772  ! "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT =
1241772  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label ROLE = "Role" LEVEL = "Measurement Level" COUNT = "Frequency
Count";
1241773    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1241774    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Variable Summary";
MPRINT(EM_DIAGRAM):   run;
1241775    run;
 
NOTE: There were 5 observations read from the data set WORK.ENSMBL46META.
NOTE: The PROCEDURE PRINT printed page 108.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1241776    title10;
MPRINT(EM_DIAGRAM):   title10;
1241777    %let EMNORLEN = %DMNORLEN;
MPRINT(EM_DIAGRAM):
EMWS8.AutoNeural9_TRAIN EMWS8.AutoNeural9_TRAIN
EMWS8.AutoNeural9_TRAIN EMWS8.AutoNeural9_TRAIN EMWS8 AutoNeural9_TRAIN
EMWS8.AutoNeural9_TRAIN EMWS8.AutoNeural9_TRAIN
EMWS8.AutoNeural9_TRAIN EMWS8.AutoNeural9_TRAIN EMWS8 AutoNeural9_TRAIN
MPRINT(EM_DIAGRAM):    proc dmdb data=EMWS8.AutoNeural9_TRAIN
classout=WORK._DMDBCLASSTARGET(keep=NAME NRAW CRAW LEVEL FREQUENCY NMISSPERCENT);
MPRINT(EM_DIAGRAM):   class DepVar(DESC) ;
MPRINT(EM_DIAGRAM):   run;
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _INIT >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _term >>
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set WORK._DMDBCLASSTARGET;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   if _N_=1 then call symput('_newevent', strip(LEVEL));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK._DMDBCLASSTARGET out=_TEMPCLASS(keep=LEVEL FREQUENCY
NMISSPERCENT rename=(LEVEL=DepVar));
MPRINT(EM_DIAGRAM):   by LEVEL;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _TEMPCLASS;
MPRINT(EM_DIAGRAM):   set _TEMPCLASS;
MPRINT(EM_DIAGRAM):   NMISSPERCENT= NMISSPERCENT/100;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.AutoNeural9_DepVar_DD out=_sortedDecdata;
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   merge _TEMPCLASS(in=_a) _sortedDecdata(in=_b);
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   if (_a and ^_b) or (^_a and _b) then call symput('_emresetDec', '1');
MPRINT(EM_DIAGRAM):   run;
1241806    data WORK.Ensmbl46_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS ORDER);
MPRINT(EM_DIAGRAM):    data WORK.Ensmbl46_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS
ORDER);
1241807    length ORDER $20;
MPRINT(EM_DIAGRAM):   length ORDER $20;
1241808    label VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel,  NOQUOTE))"
1241808  ! EVENT = "%sysfunc(sasmsg(sashelp.dmine, assmt_event_vlabel, NOQUOTE))" NUMLEVELS =
1241808  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_numcat_vlabel, NOQUOTE))" LEVEL =
1241809       "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" ORDER =
1241809  ! "%sysfunc(sasmsg(sashelp.dmine, meta_order_vlabel, NOQUOTE))" LABEL =
1241809  ! "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label VARIABLE = "Target" EVENT = "Event" NUMLEVELS = "Number of Levels"
LEVEL = "Measurement Level" ORDER = "Order" LABEL = "Label";
1241810    set EMWS8.AUTONEURAL9_DEPVAR_DM( where=(_TYPE_="TARGET"));
MPRINT(EM_DIAGRAM):   set EMWS8.AUTONEURAL9_DEPVAR_DM( where=(_TYPE_="TARGET"));
1241811    NumLevels=2;
MPRINT(EM_DIAGRAM):   NumLevels=2;
1241812    select(upcase(ORDER));
MPRINT(EM_DIAGRAM):   select(upcase(ORDER));
1241813    when('DESC') ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   when('DESC') ORDER = 'Descending';
1241814    when('ASC') ORDER = 'Ascending';
MPRINT(EM_DIAGRAM):   when('ASC') ORDER = 'Ascending';
1241815    when('FMTDESC') ORDER = 'Formatted Descending';
MPRINT(EM_DIAGRAM):   when('FMTDESC') ORDER = 'Formatted Descending';
1241816    when('FMTASC') ORDER = 'Formatted Ascending';
MPRINT(EM_DIAGRAM):   when('FMTASC') ORDER = 'Formatted Ascending';
1241817    otherwise ORDER = 'Descending';
The SAS System
 
MPRINT(EM_DIAGRAM):   otherwise ORDER = 'Descending';
1241818    end;
MPRINT(EM_DIAGRAM):   end;
1241819    output;
MPRINT(EM_DIAGRAM):   output;
1241820    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL9_DEPVAR_DM.
      WHERE _TYPE_='TARGET';
NOTE: The data set WORK.ENSMBL46_EVENT has 1 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1241821    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1241822    proc print data=WORK.Ensmbl46_EVENT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=WORK.Ensmbl46_EVENT noobs label;
1241823    var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
MPRINT(EM_DIAGRAM):   var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
1241824    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1241825    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_modelEvent_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Model Events";
MPRINT(EM_DIAGRAM):   run;
1241826    run;
 
NOTE: There were 1 observations read from the data set WORK.ENSMBL46_EVENT.
NOTE: The PROCEDURE PRINT printed page 109.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1241827    title10;
MPRINT(EM_DIAGRAM):   title10;
"No decisions defined for target "DepVar"."
1241828    proc print data = EMWS8.AutoNeural9_DepVar_DM noobs label;
MPRINT(EM_DIAGRAM):    proc print data = EMWS8.AutoNeural9_DepVar_DM noobs label;
1241829    var _type_ variable label;
MPRINT(EM_DIAGRAM):   var _type_ variable label;
1241830    where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR', 'DECPRIOR');
MPRINT(EM_DIAGRAM):   where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR',
'DECPRIOR');
1241831    label _TYPE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_type_vlabel,     NOQUOTE))"
1241831  ! VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))" LABEL =
1241831  ! "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Type" VARIABLE = "Variable" LABEL = "Label";
1241832    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1241833    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_predDecVars_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Predicted and decision variables";
MPRINT(EM_DIAGRAM):   run;
1241834    run;
 
NOTE: There were 7 observations read from the data set EMWS8.AUTONEURAL9_DEPVAR_DM.
      WHERE _type_ not in ('DATAPRIOR', 'DECISION', 'DECPRIOR', 'MATRIX', 'TRAINPRIOR');
NOTE: The PROCEDURE PRINT printed page 110.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1241835    title10;
MPRINT(EM_DIAGRAM):   title10;
1241836    %let groupid =;
1241837    %let endGroupid =;
1241838    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
1241839    set EMWS8.AutoNeural10_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_EMINFO;
1241840    where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
1241840  ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
1241841    if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
1241842    else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
1241843    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.AUTONEURAL10_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1241844    %let groupid =;
1241845    %let endGroupid =;
1241846    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
1241847    set EMWS8.AutoNeural7_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural7_EMINFO;
1241848    where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
1241848  ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
1241849    if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
1241850    else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
1241851    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.AUTONEURAL7_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1241852    %let groupid =;
1241853    %let endGroupid =;
1241854    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
1241855    set EMWS8.AutoNeural12_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural12_EMINFO;
1241856    where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
1241856  ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
1241857    if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
1241858    else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
1241859    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.AUTONEURAL12_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1241860    %let groupid =;
1241861    %let endGroupid =;
1241862    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
1241863    set EMWS8.AutoNeural11_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_EMINFO;
1241864    where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
1241864  ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
1241865    if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
1241866    else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
1241867    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.AUTONEURAL11_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1241868    %let groupid =;
1241869    %let endGroupid =;
1241870    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
1241871    set EMWS8.AutoNeural9_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural9_EMINFO;
1241872    where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
1241872  ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
1241873    if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
1241874    else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
1241875    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.AUTONEURAL9_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1241876    data WORK.Ensmbl46;
MPRINT(EM_DIAGRAM):    data WORK.Ensmbl46;
1241877    length NodeId $32 Model $64;
MPRINT(EM_DIAGRAM):   length NodeId $32 Model $64;
1241878    label Nodeid = "%sysfunc(sasmsg(sashelp.dmine, rpt_nodeId_vlabel,  NOQUOTE))" Model
1241878  ! = "%sysfunc(sasmsg(sashelp.dmine, rpt_modeltype,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label Nodeid = "Node Id" Model = "rpt_modeltype";
1241879    nodeid="AUTONEURAL10";
MPRINT(EM_DIAGRAM):   nodeid="AUTONEURAL10";
1241880    model="AutoNeural";
MPRINT(EM_DIAGRAM):   model="AutoNeural";
1241881    output;
MPRINT(EM_DIAGRAM):   output;
1241882    nodeid="AUTONEURAL7";
MPRINT(EM_DIAGRAM):   nodeid="AUTONEURAL7";
1241883    model="AutoNeural";
MPRINT(EM_DIAGRAM):   model="AutoNeural";
1241884    output;
MPRINT(EM_DIAGRAM):   output;
1241885    nodeid="AUTONEURAL12";
MPRINT(EM_DIAGRAM):   nodeid="AUTONEURAL12";
1241886    model="AutoNeural";
MPRINT(EM_DIAGRAM):   model="AutoNeural";
1241887    output;
MPRINT(EM_DIAGRAM):   output;
1241888    nodeid="AUTONEURAL11";
MPRINT(EM_DIAGRAM):   nodeid="AUTONEURAL11";
1241889    model="AutoNeural";
MPRINT(EM_DIAGRAM):   model="AutoNeural";
1241890    output;
MPRINT(EM_DIAGRAM):   output;
1241891    nodeid="AUTONEURAL9";
MPRINT(EM_DIAGRAM):   nodeid="AUTONEURAL9";
1241892    model="AutoNeural";
MPRINT(EM_DIAGRAM):   model="AutoNeural";
1241893    output;
MPRINT(EM_DIAGRAM):   output;
1241894    ;
MPRINT(EM_DIAGRAM):   ;
1241895    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK.ENSMBL46 has 5 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1241896    title;
MPRINT(EM_DIAGRAM):   title;
1241897    proc print data=WORK.Ensmbl46 label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.Ensmbl46 label noobs;
1241898    title9 "%sysfunc(sasmsg(sashelp.dmine, rpt_combinemodels_title,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   title9 "Imported Models to be Combined";
1241899    title10 "Probability Function: Maximum";
MPRINT(EM_DIAGRAM):   title10 "Probability Function: Maximum";
MPRINT(EM_DIAGRAM):   run;
1241900    run;
 
NOTE: There were 5 observations read from the data set WORK.ENSMBL46.
NOTE: The PROCEDURE PRINT printed page 111.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1241901    title9;
MPRINT(EM_DIAGRAM):   title9;
1241902    title10;
MPRINT(EM_DIAGRAM):   title10;
1241903    data WORK.M1D_4QFM;
MPRINT(EM_DIAGRAM):    data WORK.M1D_4QFM;
1241904    set WORK.M1D_4QFM;
MPRINT(EM_DIAGRAM):   set WORK.M1D_4QFM;
1241905    where NAME = "DepVar";
MPRINT(EM_DIAGRAM):   where NAME = "DepVar";
1241906    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.M1D_4QFM.
      WHERE NAME='DepVar';
NOTE: The data set WORK.M1D_4QFM has 1 observations and 22 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1241907    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------* ;
1241908    * EM: DMDBClass Macro ;
MPRINT(EM_DIAGRAM):   * EM: DMDBClass Macro ;
1241909    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
1241910    %macro DMDBClass;
1241911        DepVar(DESC)
1241912    %mend DMDBClass;
1241913    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
1241914    * EM: DMDBVar Macro ;
MPRINT(EM_DIAGRAM):   * EM: DMDBVar Macro ;
1241915    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
1241916    %macro DMDBVar;
1241917
1241918    %mend DMDBVar;
1241919    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1241920    * EM: Create DMDB;
MPRINT(EM_DIAGRAM):   * EM: Create DMDB;
1241921    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1241922    proc dmdb batch data=EMWS8.AutoNeural10_TRAIN
1241923    dmdbcat=WORK.EM_DMDB
1241924    maxlevel = 513
1241925    ;
MPRINT(EM_DIAGRAM):   proc dmdb batch data=EMWS8.AutoNeural10_TRAIN dmdbcat=WORK.EM_DMDB
maxlevel = 513 ;
MPRINT(EM_DIAGRAM):   class
1241926    class %DMDBClass;
MPRINT(DMDBCLASS):   DepVar(DESC)
MPRINT(EM_DIAGRAM):  ;
1241927    target
1241928    DepVar
1241929    ;
MPRINT(EM_DIAGRAM):   target DepVar ;
1241930    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Records processed = 2374   Memory used = 511K.
NOTE: There were 2374 observations read from the data set EMWS8.PART_TRAIN.
NOTE: View EMWS8.AUTONEURAL10_TRAIN.VIEW used (Total process time):
      real time           0.08 seconds
      cpu time            0.07 seconds
 
NOTE: There were 2374 observations read from the data set EMWS8.META_TRAIN.
NOTE: There were 2374 observations read from the data set EMWS8.AUTONEURAL10_TRAIN.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.08 seconds
      cpu time            0.07 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *--- end code ---*;
1241931    quit;
1241932    *--- end code ---*;
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "12.23 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                28. April 2016
Time:                12.23 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O175MJT5
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl46\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O175MJT5 new;
MPRINT(EM_DIAGRAM):   run;
1242034    filename emflow
1242034  ! "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl46\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl46\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl46: Scoring AUTONEURAL10_TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1242035    *------------------------------------------------------------*;
1242036    * Ensmbl46: Scoring AUTONEURAL10_TRAIN data;
1242037    *------------------------------------------------------------*;
1242038    data EMWS8.Ensmbl46_TRAIN
1242039    / view=EMWS8.Ensmbl46_TRAIN
1242040    ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl46_TRAIN / view=EMWS8.Ensmbl46_TRAIN ;
1242041    set EMWS8.AutoNeural10_TRAIN
1242042    ;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_TRAIN ;
1242043    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file
      C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl46\EMFLOWSCORE.sas.
1242044   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1242045   +* Ensmbl46: Combine model for DepVar;
MPRINT(EM_DIAGRAM):   * Ensmbl46: Combine model for DepVar;
1242046   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1242047   +* Ensmbl46: Scoring Code of model 1 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl46: Scoring Code of model 1 of 5;
1242048   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1242049   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1242050   +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
1242051   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
1242052   +* NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
1242053   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1242054   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1242055   +* TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
1242056   +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
1242057   +* NODE: Stat;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
1242058   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1242059   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1242060   +* TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
1242061   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
1242062   +* NODE: Filter;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
1242063   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1242064   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1242065   +* TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
1242066   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
1242067   +* NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
1242068   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1242069   +
1242070   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1242071   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1242071  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1242072   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1242073   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1242074   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1242075   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1242076   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
1242077   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1242078   +* TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
1242079   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
1242080   +* NODE: Trans;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
1242081   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1242082   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1242083   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1242084   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1242085   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1242086   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1242087   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
1242088   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1242089   +* TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
1242090   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
1242091   +* NODE: Part;
MPRINT(EM_DIAGRAM):   * NODE: Part;
1242092   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1242093   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1242094   +* TOOL: Metadata Node;
MPRINT(EM_DIAGRAM):   * TOOL: Metadata Node;
1242095   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
1242096   +* NODE: Meta;
MPRINT(EM_DIAGRAM):   * NODE: Meta;
1242097   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1242098   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1242099   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
1242100   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1242101   +* NODE: AutoNeural10;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural10;
1242102   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1242103   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1242104   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1242105   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1242106   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1242107   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1242108   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1242109   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1242110   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1242111   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1242112   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1242113   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1242114   +LENGTH _WARN_ $4
1242115   +      F_DepVar  $ 12
1242116   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1242117   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1242118   +
1242119   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1242120   +
1242121   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1242122   +
1242123   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1242124   +
1242125   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1242126   +
1242127   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1242128   +
1242129   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1242130   +
1242131   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1242132   +
1242133   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1242134   +
1242135   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1242136   +
1242137   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1242138   +
1242139   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1242140   +
1242141   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1242142   +
1242143   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1242144   +
1242145   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1242146   +
1242147   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1242148   +
1242149   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1242150   +
1242151   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1242152   +
1242153   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1242154   +
1242155   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1242156   +
1242157   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1242158   +
1242159   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1242160   +
1242161   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1242162   +
1242163   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1242164   +
1242165   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1242166   +
1242167   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1242168   +
1242169   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1242170   +
1242171   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1242172   +
1242173   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1242174   +
1242175   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1242176   +
1242177   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1242178   +
1242179   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1242180   +
1242181   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1242182   +
1242183   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1242184   +
1242185   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1242186   +
1242187   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1242188   +
1242189   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1242190   +
1242191   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1242192   +
1242193   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
1242194   +
1242195   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
1242196   +
1242197   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
1242198   +
1242199   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
1242200   +
1242201   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
1242202   +
1242203   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
1242204   +
1242205   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
1242206   +
1242207   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
1242208   +
1242209   +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
1242210   +
1242211   +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
1242212   +
1242213   +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
1242214   +
1242215   +      label H1x3_2 = 'Hidden: H1x3_=2' ;
MPRINT(EM_DIAGRAM):   label H1x3_2 = 'Hidden: H1x3_=2' ;
1242216   +
1242217   +      label H1x3_3 = 'Hidden: H1x3_=3' ;
MPRINT(EM_DIAGRAM):   label H1x3_3 = 'Hidden: H1x3_=3' ;
1242218   +
1242219   +      label H1x3_4 = 'Hidden: H1x3_=4' ;
MPRINT(EM_DIAGRAM):   label H1x3_4 = 'Hidden: H1x3_=4' ;
1242220   +
1242221   +      label H1x3_5 = 'Hidden: H1x3_=5' ;
MPRINT(EM_DIAGRAM):   label H1x3_5 = 'Hidden: H1x3_=5' ;
1242222   +
1242223   +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
1242224   +
1242225   +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
1242226   +
1242227   +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
1242228   +
1242229   +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
1242230   +
1242231   +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
1242232   +
1242233   +      label H2x2_1 = 'Hidden: H2x2_=1' ;
MPRINT(EM_DIAGRAM):   label H2x2_1 = 'Hidden: H2x2_=1' ;
1242234   +
1242235   +      label H2x2_2 = 'Hidden: H2x2_=2' ;
MPRINT(EM_DIAGRAM):   label H2x2_2 = 'Hidden: H2x2_=2' ;
1242236   +
1242237   +      label H2x2_3 = 'Hidden: H2x2_=3' ;
MPRINT(EM_DIAGRAM):   label H2x2_3 = 'Hidden: H2x2_=3' ;
1242238   +
1242239   +      label H2x2_4 = 'Hidden: H2x2_=4' ;
MPRINT(EM_DIAGRAM):   label H2x2_4 = 'Hidden: H2x2_=4' ;
1242240   +
1242241   +      label H2x2_5 = 'Hidden: H2x2_=5' ;
MPRINT(EM_DIAGRAM):   label H2x2_5 = 'Hidden: H2x2_=5' ;
1242242   +
1242243   +      label H3x1_1 = 'Hidden: H3x1_=1' ;
MPRINT(EM_DIAGRAM):   label H3x1_1 = 'Hidden: H3x1_=1' ;
1242244   +
1242245   +      label H3x1_2 = 'Hidden: H3x1_=2' ;
MPRINT(EM_DIAGRAM):   label H3x1_2 = 'Hidden: H3x1_=2' ;
1242246   +
1242247   +      label H3x1_3 = 'Hidden: H3x1_=3' ;
MPRINT(EM_DIAGRAM):   label H3x1_3 = 'Hidden: H3x1_=3' ;
1242248   +
1242249   +      label H3x1_4 = 'Hidden: H3x1_=4' ;
MPRINT(EM_DIAGRAM):   label H3x1_4 = 'Hidden: H3x1_=4' ;
1242250   +
1242251   +      label H3x1_5 = 'Hidden: H3x1_=5' ;
MPRINT(EM_DIAGRAM):   label H3x1_5 = 'Hidden: H3x1_=5' ;
1242252   +
1242253   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1242254   +
1242255   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1242256   +
1242257   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1242258   +
1242259   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1242260   +
1242261   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1242262   +
1242263   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1242264   +
1242265   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1242266   +
1242267   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1242268   +
1242269   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1242270   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1242271   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1242272   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1242273   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1242274   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1242275   +end;
MPRINT(EM_DIAGRAM):   end;
1242276   +else do;
MPRINT(EM_DIAGRAM):   else do;
1242277   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1242278   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1242279   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1242280   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1242281   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1242282   +   end;
MPRINT(EM_DIAGRAM):   end;
1242283   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1242284   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1242285   +   end;
MPRINT(EM_DIAGRAM):   end;
1242286   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1242287   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1242288   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1242289   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1242290   +   end;
MPRINT(EM_DIAGRAM):   end;
1242291   +end;
MPRINT(EM_DIAGRAM):   end;
1242292   +
1242293   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1242294   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1242295   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1242296   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1242297   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1242298   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1242299   +end;
MPRINT(EM_DIAGRAM):   end;
1242300   +else do;
MPRINT(EM_DIAGRAM):   else do;
1242301   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1242302   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1242303   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1242304   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1242305   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1242306   +   end;
MPRINT(EM_DIAGRAM):   end;
1242307   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1242308   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1242309   +   end;
MPRINT(EM_DIAGRAM):   end;
1242310   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1242311   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1242312   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1242313   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1242314   +   end;
MPRINT(EM_DIAGRAM):   end;
1242315   +end;
MPRINT(EM_DIAGRAM):   end;
1242316   +
1242317   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1242318   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1242319   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1242320   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1242321   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1242322   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1242323   +end;
MPRINT(EM_DIAGRAM):   end;
1242324   +else do;
MPRINT(EM_DIAGRAM):   else do;
1242325   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1242326   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1242327   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1242328   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1242329   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1242330   +   end;
MPRINT(EM_DIAGRAM):   end;
1242331   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1242332   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1242333   +   end;
MPRINT(EM_DIAGRAM):   end;
1242334   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1242335   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1242336   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1242337   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1242338   +   end;
MPRINT(EM_DIAGRAM):   end;
1242339   +end;
MPRINT(EM_DIAGRAM):   end;
1242340   +
1242341   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1242342   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1242343   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1242344   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1242345   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1242346   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1242347   +end;
MPRINT(EM_DIAGRAM):   end;
1242348   +else do;
MPRINT(EM_DIAGRAM):   else do;
1242349   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1242350   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1242351   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1242352   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1242353   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1242354   +   end;
MPRINT(EM_DIAGRAM):   end;
1242355   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1242356   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1242357   +   end;
MPRINT(EM_DIAGRAM):   end;
1242358   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1242359   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1242360   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1242361   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1242362   +   end;
MPRINT(EM_DIAGRAM):   end;
1242363   +end;
MPRINT(EM_DIAGRAM):   end;
1242364   +
1242365   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1242366   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1242367   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1242368   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1242369   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1242370   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1242371   +end;
MPRINT(EM_DIAGRAM):   end;
1242372   +else do;
MPRINT(EM_DIAGRAM):   else do;
1242373   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1242374   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1242375   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1242376   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1242377   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1242378   +   end;
MPRINT(EM_DIAGRAM):   end;
1242379   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1242380   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1242381   +   end;
MPRINT(EM_DIAGRAM):   end;
1242382   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1242383   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1242384   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1242385   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1242386   +   end;
MPRINT(EM_DIAGRAM):   end;
1242387   +end;
MPRINT(EM_DIAGRAM):   end;
1242388   +
1242389   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1242390   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1242391   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1242392   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1242393   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1242394   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1242395   +end;
MPRINT(EM_DIAGRAM):   end;
1242396   +else do;
MPRINT(EM_DIAGRAM):   else do;
1242397   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1242398   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1242399   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1242400   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1242401   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1242402   +   end;
MPRINT(EM_DIAGRAM):   end;
1242403   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1242404   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1242405   +   end;
MPRINT(EM_DIAGRAM):   end;
1242406   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1242407   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1242408   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1242409   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1242410   +   end;
MPRINT(EM_DIAGRAM):   end;
1242411   +end;
MPRINT(EM_DIAGRAM):   end;
1242412   +
1242413   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1242414   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1242415   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1242416   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1242417   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1242418   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1242419   +end;
MPRINT(EM_DIAGRAM):   end;
1242420   +else do;
MPRINT(EM_DIAGRAM):   else do;
1242421   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1242422   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1242423   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1242424   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1242425   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1242426   +   end;
MPRINT(EM_DIAGRAM):   end;
1242427   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1242428   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1242429   +   end;
MPRINT(EM_DIAGRAM):   end;
1242430   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1242431   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1242432   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1242433   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1242434   +   end;
MPRINT(EM_DIAGRAM):   end;
1242435   +end;
MPRINT(EM_DIAGRAM):   end;
1242436   +
1242437   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1242438   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
1242439   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1242440   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1242441   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1242442   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1242443   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1242444   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1242445   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1242446   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1242447   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1242448   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1242449   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1242450   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1242451   +end;
MPRINT(EM_DIAGRAM):   end;
1242452   +else do;
MPRINT(EM_DIAGRAM):   else do;
1242453   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1242454   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1242455   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1242456   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1242457   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1242458   +   end;
MPRINT(EM_DIAGRAM):   end;
1242459   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1242460   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1242461   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1242462   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1242463   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1242464   +   end;
MPRINT(EM_DIAGRAM):   end;
1242465   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1242466   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1242467   +   end;
MPRINT(EM_DIAGRAM):   end;
1242468   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1242469   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1242470   +   end;
MPRINT(EM_DIAGRAM):   end;
1242471   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1242472   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1242473   +   end;
MPRINT(EM_DIAGRAM):   end;
1242474   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1242475   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1242476   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1242477   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1242478   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1242479   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1242480   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1242481   +   end;
MPRINT(EM_DIAGRAM):   end;
1242482   +end;
MPRINT(EM_DIAGRAM):   end;
1242483   +
1242484   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1242485   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1242486   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
1242487   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1242488   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1242489   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1242490   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1242491   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1242492   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1242493   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1242494   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1242495   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1242496   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1242497   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1242498   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1242499   +end;
MPRINT(EM_DIAGRAM):   end;
1242500   +else do;
MPRINT(EM_DIAGRAM):   else do;
1242501   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1242502   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1242503   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1242504   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1242505   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1242506   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1242507   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1242508   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1242509   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1242510   +         end;
MPRINT(EM_DIAGRAM):   end;
1242511   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1242512   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1242513   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1242514   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1242515   +            end;
MPRINT(EM_DIAGRAM):   end;
1242516   +         end;
MPRINT(EM_DIAGRAM):   end;
1242517   +      end;
MPRINT(EM_DIAGRAM):   end;
1242518   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1242519   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1242520   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1242521   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1242522   +         end;
MPRINT(EM_DIAGRAM):   end;
1242523   +      end;
MPRINT(EM_DIAGRAM):   end;
1242524   +   end;
MPRINT(EM_DIAGRAM):   end;
1242525   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1242526   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1242527   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1242528   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1242529   +      end;
MPRINT(EM_DIAGRAM):   end;
1242530   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1242531   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1242532   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1242533   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1242534   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1242535   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1242536   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1242537   +         end;
MPRINT(EM_DIAGRAM):   end;
1242538   +      end;
MPRINT(EM_DIAGRAM):   end;
1242539   +   end;
MPRINT(EM_DIAGRAM):   end;
1242540   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1242541   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1242542   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1242543   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1242544   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1242545   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1242546   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1242547   +   end;
MPRINT(EM_DIAGRAM):   end;
1242548   +end;
MPRINT(EM_DIAGRAM):   end;
1242549   +
1242550   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1242551   +*** Checking missing input Interval
1242552   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1242553   +
1242554   +IF NMISS(
1242555   +   AcceptedCmpTotal ,
1242556   +   Age ,
1242557   +   Frq ,
1242558   +   Income ,
1242559   +   Kidhome ,
1242560   +   Mnt ,
1242561   +   MntFishProducts ,
1242562   +   MntFruits ,
1242563   +   MntGoldProds ,
1242564   +   MntMeatProducts ,
1242565   +   MntSweetProducts ,
1242566   +   MntWines ,
1242567   +   MonthsAsCustomer ,
1242568   +   NumCatalogPurchases ,
1242569   +   NumDealsPurchases ,
1242570   +   NumDistPurchases ,
1242571   +   NumStorePurchases ,
1242572   +   NumWebPurchases ,
1242573   +   NumWebVisitsMonth ,
1242574   +   RFMstat ,
1242575   +   RMntFrq ,
1242576   +   Recency ,
1242577   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
1242578   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1242579   +
1242580   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1242581   +END;
MPRINT(EM_DIAGRAM):   END;
1242582   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1242583   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
1242584   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1242585   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1242586   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1242587   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1242588   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1242589   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1242590   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1242591   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1242592   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1242593   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1242594   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1242595   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1242596   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1242597   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1242598   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1242599   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1242600   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1242601   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1242602   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1242603   +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
1242604   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 *
MonthsAsCustomer ;
1242605   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1242606   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1242607   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1242608   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1242609   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1242610   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1242611   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1242612   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1242613   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1242614   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1242615   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1242616   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1242617   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1242618   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1242619   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1242620   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1242621   +END;
MPRINT(EM_DIAGRAM):   END;
1242622   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1242623   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1242624   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1242625   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1242626   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1242627   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1242628   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1242629   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1242630   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1242631   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1242632   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1242633   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1242634   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1242635   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1242636   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1242637   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1242638   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1242639   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1242640   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1242641   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1242642   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1242643   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1242644   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1242645   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1242646   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1242647   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1242648   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1242649   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1242650   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1242651   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1242652   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1242653   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1242654   +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
1242655   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 *
MonthsAsCustomer ;
1242656   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1242657   +   ELSE S_NumCatalogPurchases
1242658   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1242659   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1242660   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1242661   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1242662   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1242663   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1242664   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1242665   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1242666   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1242667   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1242668   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1242669   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1242670   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1242671   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1242672   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1242673   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1242674   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1242675   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1242676   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1242677   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1242678   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1242679   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1242680   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1242681   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1242682   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1242683   +END;
MPRINT(EM_DIAGRAM):   END;
1242684   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1242685   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
1242686   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1242687   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1242688   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
1242689   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1242690   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1242691   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
1242692   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1242693   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1242694   +   H1x1_1  =     -1.6780441789215 * S_AcceptedCmpTotal
1242695   +          +     0.45385980917029 * S_Age  +    -0.71899650455913 * S_Frq
1242696   +          +    -1.93679506571805 * S_Income  +     1.56925991391051 *
1242697   +        S_Kidhome  +    -1.47175189232318 * S_Mnt  +    -2.23220260217222 *
1242698   +        S_MntFishProducts  +    -0.27017202076253 * S_MntFruits
1242699   +          +    -0.33562096740259 * S_MntGoldProds  +     3.61472960640287 *
1242700   +        S_MntMeatProducts  +    -2.85576251647297 * S_MntSweetProducts
1242701   +          +     -4.4467685903527 * S_MntWines  +     0.38963757858628 *
1242702   +        S_MonthsAsCustomer  +     1.66666181194027 * S_NumCatalogPurchases
1242703   +          +     3.45371614080196 * S_NumDealsPurchases
1242704   +          +     0.19118374544537 * S_NumDistPurchases
1242705   +          +    -2.45138001446793 * S_NumStorePurchases
1242706   +          +    -0.11424280244155 * S_NumWebPurchases
1242707   +          +    -2.31770357716565 * S_NumWebVisitsMonth
1242708   +          +     2.81643889601936 * S_RFMstat  +    -1.04896006701534 *
1242709   +        S_RMntFrq  +     0.26870809438679 * S_Recency
1242710   +          +    -0.26422448158811 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.6780441789215 * S_AcceptedCmpTotal + 0.45385980917029 *
S_Age + -0.71899650455913 * S_Frq + -1.93679506571805 * S_Income + 1.56925991391051 *
S_Kidhome + -1.47175189232318 * S_Mnt + -2.23220260217222 * S_MntFishProducts +
-0.27017202076253 * S_MntFruits + -0.33562096740259 * S_MntGoldProds + 3.61472960640287 *
S_MntMeatProducts + -2.85576251647297 * S_MntSweetProducts + -4.4467685903527 * S_MntWines +
0.38963757858628 * S_MonthsAsCustomer + 1.66666181194027 * S_NumCatalogPurchases +
3.45371614080196 * S_NumDealsPurchases + 0.19118374544537 * S_NumDistPurchases +
-2.45138001446793 * S_NumStorePurchases + -0.11424280244155 * S_NumWebPurchases +
-2.31770357716565 * S_NumWebVisitsMonth + 2.81643889601936 * S_RFMstat + -1.04896006701534 *
S_RMntFrq + 0.26870809438679 * S_Recency + -0.26422448158811 * S_Teenhome ;
1242711   +   H1x1_2  =    -0.85648293000641 * S_AcceptedCmpTotal
1242712   +          +    -1.65647402725291 * S_Age  +     1.01151947076788 * S_Frq
1242713   +          +    -2.30217634682957 * S_Income  +     3.64198249916211 *
1242714   +        S_Kidhome  +     0.20767518788666 * S_Mnt  +     0.16841756532554 *
1242715   +        S_MntFishProducts  +      -1.068506425921 * S_MntFruits
1242716   +          +     0.58318801939162 * S_MntGoldProds  +    -2.31777049056548 *
1242717   +        S_MntMeatProducts  +     0.23759430399811 * S_MntSweetProducts
1242718   +          +      1.6840332285232 * S_MntWines  +     1.02971381781013 *
1242719   +        S_MonthsAsCustomer  +    -0.67962580165124 * S_NumCatalogPurchases
1242720   +          +    -1.28390925647659 * S_NumDealsPurchases
1242721   +          +     0.82669177239926 * S_NumDistPurchases
1242722   +          +     1.71678585204511 * S_NumStorePurchases
1242723   +          +     1.49226295608046 * S_NumWebPurchases
1242724   +          +     -4.0105103018388 * S_NumWebVisitsMonth
1242725   +          +     0.59909792991084 * S_RFMstat  +     1.07820515361554 *
1242726   +        S_RMntFrq  +     4.74241121363086 * S_Recency
1242727   +          +     3.02084642655958 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.85648293000641 * S_AcceptedCmpTotal + -1.65647402725291 *
S_Age + 1.01151947076788 * S_Frq + -2.30217634682957 * S_Income + 3.64198249916211 * S_Kidhome
+ 0.20767518788666 * S_Mnt + 0.16841756532554 * S_MntFishProducts + -1.068506425921 *
S_MntFruits + 0.58318801939162 * S_MntGoldProds + -2.31777049056548 * S_MntMeatProducts +
0.23759430399811 * S_MntSweetProducts + 1.6840332285232 * S_MntWines + 1.02971381781013 *
S_MonthsAsCustomer + -0.67962580165124 * S_NumCatalogPurchases + -1.28390925647659 *
S_NumDealsPurchases + 0.82669177239926 * S_NumDistPurchases + 1.71678585204511 *
S_NumStorePurchases + 1.49226295608046 * S_NumWebPurchases + -4.0105103018388 *
S_NumWebVisitsMonth + 0.59909792991084 * S_RFMstat + 1.07820515361554 * S_RMntFrq +
4.74241121363086 * S_Recency + 3.02084642655958 * S_Teenhome ;
1242728   +   H1x1_3  =    -2.68802949086986 * S_AcceptedCmpTotal
1242729   +          +     0.32408799976195 * S_Age  +     0.22616656573012 * S_Frq
1242730   +          +     -0.4811040196236 * S_Income  +     0.01554228937278 *
1242731   +        S_Kidhome  +    -0.00131538598753 * S_Mnt  +     1.89942488016409 *
1242732   +        S_MntFishProducts  +     0.56303548397494 * S_MntFruits
1242733   +          +    -0.15594598286956 * S_MntGoldProds  +    -7.89542322794989 *
1242734   +        S_MntMeatProducts  +    -0.27122492647076 * S_MntSweetProducts
1242735   +          +     4.85572438492582 * S_MntWines  +     0.12362243863555 *
1242736   +        S_MonthsAsCustomer  +    -1.47960473675934 * S_NumCatalogPurchases
1242737   +          +     0.22958626391725 * S_NumDealsPurchases
1242738   +          +    -0.02046515813996 * S_NumDistPurchases
1242739   +          +      0.8618502050837 * S_NumStorePurchases
1242740   +          +     1.45175370326009 * S_NumWebPurchases
1242741   +          +    -0.86122442436156 * S_NumWebVisitsMonth
1242742   +          +    -0.99643351802143 * S_RFMstat  +    -1.65762265567389 *
1242743   +        S_RMntFrq  +    -0.08202178452839 * S_Recency
1242744   +          +    -0.62066116666102 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -2.68802949086986 * S_AcceptedCmpTotal + 0.32408799976195 *
S_Age + 0.22616656573012 * S_Frq + -0.4811040196236 * S_Income + 0.01554228937278 * S_Kidhome
+ -0.00131538598753 * S_Mnt + 1.89942488016409 * S_MntFishProducts + 0.56303548397494 *
S_MntFruits + -0.15594598286956 * S_MntGoldProds + -7.89542322794989 * S_MntMeatProducts +
-0.27122492647076 * S_MntSweetProducts + 4.85572438492582 * S_MntWines + 0.12362243863555 *
S_MonthsAsCustomer + -1.47960473675934 * S_NumCatalogPurchases + 0.22958626391725 *
S_NumDealsPurchases + -0.02046515813996 * S_NumDistPurchases + 0.8618502050837 *
S_NumStorePurchases + 1.45175370326009 * S_NumWebPurchases + -0.86122442436156 *
S_NumWebVisitsMonth + -0.99643351802143 * S_RFMstat + -1.65762265567389 * S_RMntFrq +
-0.08202178452839 * S_Recency + -0.62066116666102 * S_Teenhome ;
1242745   +   H1x1_4  =     0.45192233004895 * S_AcceptedCmpTotal
1242746   +          +    -0.94676544762121 * S_Age  +     0.73809341266988 * S_Frq
1242747   +          +     0.72277799278136 * S_Income  +    -0.12970804152173 *
1242748   +        S_Kidhome  +     0.01052564540044 * S_Mnt  +    -0.48321452967118 *
1242749   +        S_MntFishProducts  +    -0.41471448831942 * S_MntFruits
1242750   +          +     0.04381334765674 * S_MntGoldProds  +     0.92594151100538 *
1242751   +        S_MntMeatProducts  +     0.29845970530397 * S_MntSweetProducts
1242752   +          +    -0.71535779454556 * S_MntWines  +     0.00059837351168 *
1242753   +        S_MonthsAsCustomer  +     2.23353511013288 * S_NumCatalogPurchases
1242754   +          +     1.25310034610344 * S_NumDealsPurchases
1242755   +          +     0.92141098602176 * S_NumDistPurchases
1242756   +          +    -0.08806509391473 * S_NumStorePurchases
1242757   +          +     -1.0533787624668 * S_NumWebPurchases
1242758   +          +     3.07050739830585 * S_NumWebVisitsMonth
1242759   +          +    -0.05671059637078 * S_RFMstat  +     1.73621676609839 *
1242760   +        S_RMntFrq  +     -3.8741602707981 * S_Recency
1242761   +          +    -2.06796290973426 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.45192233004895 * S_AcceptedCmpTotal + -0.94676544762121 *
S_Age + 0.73809341266988 * S_Frq + 0.72277799278136 * S_Income + -0.12970804152173 * S_Kidhome
+ 0.01052564540044 * S_Mnt + -0.48321452967118 * S_MntFishProducts + -0.41471448831942 *
S_MntFruits + 0.04381334765674 * S_MntGoldProds + 0.92594151100538 * S_MntMeatProducts +
0.29845970530397 * S_MntSweetProducts + -0.71535779454556 * S_MntWines + 0.00059837351168 *
S_MonthsAsCustomer + 2.23353511013288 * S_NumCatalogPurchases + 1.25310034610344 *
S_NumDealsPurchases + 0.92141098602176 * S_NumDistPurchases + -0.08806509391473 *
S_NumStorePurchases + -1.0533787624668 * S_NumWebPurchases + 3.07050739830585 *
S_NumWebVisitsMonth + -0.05671059637078 * S_RFMstat + 1.73621676609839 * S_RMntFrq +
-3.8741602707981 * S_Recency + -2.06796290973426 * S_Teenhome ;
1242762   +   H1x1_5  =    -1.36121985595495 * S_AcceptedCmpTotal
1242763   +          +     0.05422070059006 * S_Age  +     0.27495083329116 * S_Frq
1242764   +          +     -0.9677209394449 * S_Income  +    -1.13619168708067 *
1242765   +        S_Kidhome  +     0.62918569209141 * S_Mnt  +     0.37160756976122 *
1242766   +        S_MntFishProducts  +     0.88680401337821 * S_MntFruits
1242767   +          +    -0.36100921959604 * S_MntGoldProds  +    -0.35574990334834 *
1242768   +        S_MntMeatProducts  +     0.82389188555236 * S_MntSweetProducts
1242769   +          +     1.43496434553922 * S_MntWines  +    -1.46335376005851 *
1242770   +        S_MonthsAsCustomer  +    -1.84942841156411 * S_NumCatalogPurchases
1242771   +          +    -1.68259553608287 * S_NumDealsPurchases
1242772   +          +    -0.53835572290445 * S_NumDistPurchases
1242773   +          +     1.25833922835446 * S_NumStorePurchases
1242774   +          +     0.48300830623998 * S_NumWebPurchases
1242775   +          +    -2.20119275236582 * S_NumWebVisitsMonth
1242776   +          +     -0.2397284702987 * S_RFMstat  +    -0.71924218175088 *
1242777   +        S_RMntFrq  +     0.35692712879409 * S_Recency
1242778   +          +     0.77122286526706 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.36121985595495 * S_AcceptedCmpTotal + 0.05422070059006 *
S_Age + 0.27495083329116 * S_Frq + -0.9677209394449 * S_Income + -1.13619168708067 * S_Kidhome
+ 0.62918569209141 * S_Mnt + 0.37160756976122 * S_MntFishProducts + 0.88680401337821 *
S_MntFruits + -0.36100921959604 * S_MntGoldProds + -0.35574990334834 * S_MntMeatProducts +
0.82389188555236 * S_MntSweetProducts + 1.43496434553922 * S_MntWines + -1.46335376005851 *
S_MonthsAsCustomer + -1.84942841156411 * S_NumCatalogPurchases + -1.68259553608287 *
S_NumDealsPurchases + -0.53835572290445 * S_NumDistPurchases + 1.25833922835446 *
S_NumStorePurchases + 0.48300830623998 * S_NumWebPurchases + -2.20119275236582 *
S_NumWebVisitsMonth + -0.2397284702987 * S_RFMstat + -0.71924218175088 * S_RMntFrq +
0.35692712879409 * S_Recency + 0.77122286526706 * S_Teenhome ;
1242779   +   H1x1_1  = H1x1_1  +     0.07301304241545 * AcceptedCmp10
1242780   +          +    -1.95730125129608 * AcceptedCmp20  +    -1.38342161079442 *
1242781   +        AcceptedCmp30  +    -1.49080889719345 * AcceptedCmp40
1242782   +          +    -1.07381857035964 * AcceptedCmp50  +    -1.39161532835475 *
1242783   +        Complain0  +    -0.48833832833721 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.07301304241545 * AcceptedCmp10 + -1.95730125129608 *
AcceptedCmp20 + -1.38342161079442 * AcceptedCmp30 + -1.49080889719345 * AcceptedCmp40 +
-1.07381857035964 * AcceptedCmp50 + -1.39161532835475 * Complain0 + -0.48833832833721 *
HigherEducationBinary0 ;
1242784   +   H1x1_2  = H1x1_2  +     0.38934062747222 * AcceptedCmp10
1242785   +          +    -0.32259780417284 * AcceptedCmp20  +     0.51602852076334 *
1242786   +        AcceptedCmp30  +    -0.70838948180655 * AcceptedCmp40
1242787   +          +     1.29066052659113 * AcceptedCmp50  +      0.1004848714971 *
1242788   +        Complain0  +    -0.73386392383925 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.38934062747222 * AcceptedCmp10 + -0.32259780417284 *
AcceptedCmp20 + 0.51602852076334 * AcceptedCmp30 + -0.70838948180655 * AcceptedCmp40 +
1.29066052659113 * AcceptedCmp50 + 0.1004848714971 * Complain0 + -0.73386392383925 *
HigherEducationBinary0 ;
1242789   +   H1x1_3  = H1x1_3  +     0.34219997086576 * AcceptedCmp10
1242790   +          +    -0.12311182470953 * AcceptedCmp20  +     -2.0600710888874 *
1242791   +        AcceptedCmp30  +      -1.904294485826 * AcceptedCmp40
1242792   +          +     3.36424449872952 * AcceptedCmp50  +    -0.25078238709812 *
1242793   +        Complain0  +    -0.08077684854733 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.34219997086576 * AcceptedCmp10 + -0.12311182470953 *
AcceptedCmp20 + -2.0600710888874 * AcceptedCmp30 + -1.904294485826 * AcceptedCmp40 +
3.36424449872952 * AcceptedCmp50 + -0.25078238709812 * Complain0 + -0.08077684854733 *
HigherEducationBinary0 ;
1242794   +   H1x1_4  = H1x1_4  +    -1.12501407155309 * AcceptedCmp10
1242795   +          +    -1.58866249671355 * AcceptedCmp20  +    -1.72881548820716 *
1242796   +        AcceptedCmp30  +      -2.214698125839 * AcceptedCmp40
1242797   +          +    -0.62635613939269 * AcceptedCmp50  +      0.0150779868394 *
1242798   +        Complain0  +     1.03338023365724 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -1.12501407155309 * AcceptedCmp10 + -1.58866249671355
* AcceptedCmp20 + -1.72881548820716 * AcceptedCmp30 + -2.214698125839 * AcceptedCmp40 +
-0.62635613939269 * AcceptedCmp50 + 0.0150779868394 * Complain0 + 1.03338023365724 *
HigherEducationBinary0 ;
1242799   +   H1x1_5  = H1x1_5  +    -0.26508589111781 * AcceptedCmp10
1242800   +          +    -0.40912292690255 * AcceptedCmp20  +     0.75389762391096 *
1242801   +        AcceptedCmp30  +     0.41336953757691 * AcceptedCmp40
1242802   +          +     0.15346623431804 * AcceptedCmp50  +    -0.57037201584293 *
1242803   +        Complain0  +     0.77009921064044 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.26508589111781 * AcceptedCmp10 + -0.40912292690255
* AcceptedCmp20 + 0.75389762391096 * AcceptedCmp30 + 0.41336953757691 * AcceptedCmp40 +
0.15346623431804 * AcceptedCmp50 + -0.57037201584293 * Complain0 + 0.77009921064044 *
HigherEducationBinary0 ;
1242804   +   H1x1_1  = H1x1_1  +      1.0009305049246 * Education2n_Cycle
1242805   +          +     -0.4613305087931 * EducationBasic  +      0.3758596828746 *
1242806   +        EducationGraduation  +     1.25189584055994 * EducationMaster
1242807   +          +     0.26230568150721 * Marital_StatusDivorced
1242808   +          +     0.27563523967756 * Marital_StatusMarried
1242809   +          +     0.54464481618478 * Marital_StatusSingle
1242810   +          +    -0.59728882722473 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 1.0009305049246 * Education2n_Cycle + -0.4613305087931
* EducationBasic + 0.3758596828746 * EducationGraduation + 1.25189584055994 * EducationMaster
+ 0.26230568150721 * Marital_StatusDivorced + 0.27563523967756 * Marital_StatusMarried +
0.54464481618478 * Marital_StatusSingle + -0.59728882722473 * Marital_StatusTogether ;
1242811   +   H1x1_2  = H1x1_2  +    -0.67268966683928 * Education2n_Cycle
1242812   +          +     1.13837889947773 * EducationBasic  +     1.04211010190617 *
1242813   +        EducationGraduation  +     0.29772013614284 * EducationMaster
1242814   +          +    -0.06750661313108 * Marital_StatusDivorced
1242815   +          +     1.48628445854207 * Marital_StatusMarried
1242816   +          +    -0.52197797291165 * Marital_StatusSingle
1242817   +          +     0.26825188905773 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.67268966683928 * Education2n_Cycle +
1.13837889947773 * EducationBasic + 1.04211010190617 * EducationGraduation + 0.29772013614284
* EducationMaster + -0.06750661313108 * Marital_StatusDivorced + 1.48628445854207 *
Marital_StatusMarried + -0.52197797291165 * Marital_StatusSingle + 0.26825188905773 *
Marital_StatusTogether ;
1242818   +   H1x1_3  = H1x1_3  +     0.15872794306716 * Education2n_Cycle
1242819   +          +     -0.2621450786439 * EducationBasic  +      -0.141563901063 *
1242820   +        EducationGraduation  +     0.45665087056809 * EducationMaster
1242821   +          +     0.03219453957597 * Marital_StatusDivorced
1242822   +          +    -0.73835008216677 * Marital_StatusMarried
1242823   +          +     0.11212575818086 * Marital_StatusSingle
1242824   +          +    -0.43478073380625 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.15872794306716 * Education2n_Cycle +
-0.2621450786439 * EducationBasic + -0.141563901063 * EducationGraduation + 0.45665087056809 *
EducationMaster + 0.03219453957597 * Marital_StatusDivorced + -0.73835008216677 *
Marital_StatusMarried + 0.11212575818086 * Marital_StatusSingle + -0.43478073380625 *
Marital_StatusTogether ;
1242825   +   H1x1_4  = H1x1_4  +    -0.76014837933596 * Education2n_Cycle
1242826   +          +     0.81014096036717 * EducationBasic  +     0.41200440507889 *
1242827   +        EducationGraduation  +    -1.00228990059701 * EducationMaster
1242828   +          +    -0.95055539413405 * Marital_StatusDivorced
1242829   +          +    -1.65922419336067 * Marital_StatusMarried
1242830   +          +     0.78727538125107 * Marital_StatusSingle
1242831   +          +    -2.04820355088009 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.76014837933596 * Education2n_Cycle +
0.81014096036717 * EducationBasic + 0.41200440507889 * EducationGraduation + -1.00228990059701
* EducationMaster + -0.95055539413405 * Marital_StatusDivorced + -1.65922419336067 *
Marital_StatusMarried + 0.78727538125107 * Marital_StatusSingle + -2.04820355088009 *
Marital_StatusTogether ;
1242832   +   H1x1_5  = H1x1_5  +    -0.28767104655135 * Education2n_Cycle
1242833   +          +     0.23294407135706 * EducationBasic  +    -1.19680108607997 *
1242834   +        EducationGraduation  +     0.46710355433642 * EducationMaster
1242835   +          +     -4.1747415035634 * Marital_StatusDivorced
1242836   +          +     3.61194282451968 * Marital_StatusMarried
1242837   +          +     -3.2800495365546 * Marital_StatusSingle
1242838   +          +     4.03496183640024 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.28767104655135 * Education2n_Cycle +
0.23294407135706 * EducationBasic + -1.19680108607997 * EducationGraduation + 0.46710355433642
* EducationMaster + -4.1747415035634 * Marital_StatusDivorced + 3.61194282451968 *
Marital_StatusMarried + -3.2800495365546 * Marital_StatusSingle + 4.03496183640024 *
Marital_StatusTogether ;
1242839   +   H1x1_1  =    -2.93438581065873 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -2.93438581065873 + H1x1_1 ;
1242840   +   H1x1_2  =     0.62443347607569 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.62443347607569 + H1x1_2 ;
1242841   +   H1x1_3  =    -1.18755793198513 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -1.18755793198513 + H1x1_3 ;
1242842   +   H1x1_4  =    -3.21278432238831 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -3.21278432238831 + H1x1_4 ;
1242843   +   H1x1_5  =    -1.81875492018044 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.81875492018044 + H1x1_5 ;
1242844   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
1242845   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
1242846   +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
1242847   +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
1242848   +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
1242849   +   H1x1_4  = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
1242850   +   H1x1_5  = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_5 = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
1242851   +END;
MPRINT(EM_DIAGRAM):   END;
1242852   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1242853   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
1242854   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
1242855   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
1242856   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
1242857   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
1242858   +END;
MPRINT(EM_DIAGRAM):   END;
1242859   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1242860   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
1242861   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1242862   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1242863   +   H1x2_1  =    -0.54874145972704 * S_AcceptedCmpTotal
1242864   +          +    -1.96729802286214 * S_Age  +     0.48476252791598 * S_Frq
1242865   +          +    -0.22341551246937 * S_Income  +      0.5578096957255 *
1242866   +        S_Kidhome  +     0.02626802496223 * S_Mnt  +     0.45412544568839 *
1242867   +        S_MntFishProducts  +     1.01144979259918 * S_MntFruits
1242868   +          +     0.10684155186482 * S_MntGoldProds  +    -0.28941930881694 *
1242869   +        S_MntMeatProducts  +    -1.28044699620063 * S_MntSweetProducts
1242870   +          +     0.01381215802108 * S_MntWines  +    -0.10048261914477 *
1242871   +        S_MonthsAsCustomer  +     2.77259931235269 * S_NumCatalogPurchases
1242872   +          +     1.29727972396867 * S_NumDealsPurchases
1242873   +          +     -0.4796144286007 * S_NumDistPurchases
1242874   +          +     0.88365985808591 * S_NumStorePurchases
1242875   +          +     0.68522096892804 * S_NumWebPurchases
1242876   +          +     0.54931043107798 * S_NumWebVisitsMonth
1242877   +          +     0.54113568533807 * S_RFMstat  +    -1.25421061779043 *
1242878   +        S_RMntFrq  +     2.35704770144328 * S_Recency
1242879   +          +     0.71039073076168 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.54874145972704 * S_AcceptedCmpTotal + -1.96729802286214 *
S_Age + 0.48476252791598 * S_Frq + -0.22341551246937 * S_Income + 0.5578096957255 * S_Kidhome
+ 0.02626802496223 * S_Mnt + 0.45412544568839 * S_MntFishProducts + 1.01144979259918 *
S_MntFruits + 0.10684155186482 * S_MntGoldProds + -0.28941930881694 * S_MntMeatProducts +
-1.28044699620063 * S_MntSweetProducts + 0.01381215802108 * S_MntWines + -0.10048261914477 *
S_MonthsAsCustomer + 2.77259931235269 * S_NumCatalogPurchases + 1.29727972396867 *
S_NumDealsPurchases + -0.4796144286007 * S_NumDistPurchases + 0.88365985808591 *
S_NumStorePurchases + 0.68522096892804 * S_NumWebPurchases + 0.54931043107798 *
S_NumWebVisitsMonth + 0.54113568533807 * S_RFMstat + -1.25421061779043 * S_RMntFrq +
2.35704770144328 * S_Recency + 0.71039073076168 * S_Teenhome ;
1242880   +   H1x2_2  =    -0.87761654715429 * S_AcceptedCmpTotal
1242881   +          +     0.35157201280883 * S_Age  +    -0.52499399345006 * S_Frq
1242882   +          +    -0.18535763866989 * S_Income  +    -2.37902660986953 *
1242883   +        S_Kidhome  +     0.91895423997679 * S_Mnt  +     0.25609945459048 *
1242884   +        S_MntFishProducts  +    -0.81235755934506 * S_MntFruits
1242885   +          +     0.52120923975997 * S_MntGoldProds  +    -0.44372337811583 *
1242886   +        S_MntMeatProducts  +     0.44948834045992 * S_MntSweetProducts
1242887   +          +     -1.0932771504262 * S_MntWines  +     0.50602262267579 *
1242888   +        S_MonthsAsCustomer  +     1.56553203254999 * S_NumCatalogPurchases
1242889   +          +     0.26997834581422 * S_NumDealsPurchases
1242890   +          +      1.4974894627406 * S_NumDistPurchases
1242891   +          +     0.20577850505638 * S_NumStorePurchases
1242892   +          +     0.67578530037026 * S_NumWebPurchases
1242893   +          +     1.48893165613941 * S_NumWebVisitsMonth
1242894   +          +     0.13287732996796 * S_RFMstat  +     0.56918286957798 *
1242895   +        S_RMntFrq  +    -1.40718347701522 * S_Recency
1242896   +          +    -1.45355422903931 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.87761654715429 * S_AcceptedCmpTotal + 0.35157201280883 *
S_Age + -0.52499399345006 * S_Frq + -0.18535763866989 * S_Income + -2.37902660986953 *
S_Kidhome + 0.91895423997679 * S_Mnt + 0.25609945459048 * S_MntFishProducts +
-0.81235755934506 * S_MntFruits + 0.52120923975997 * S_MntGoldProds + -0.44372337811583 *
S_MntMeatProducts + 0.44948834045992 * S_MntSweetProducts + -1.0932771504262 * S_MntWines +
0.50602262267579 * S_MonthsAsCustomer + 1.56553203254999 * S_NumCatalogPurchases +
0.26997834581422 * S_NumDealsPurchases + 1.4974894627406 * S_NumDistPurchases +
0.20577850505638 * S_NumStorePurchases + 0.67578530037026 * S_NumWebPurchases +
1.48893165613941 * S_NumWebVisitsMonth + 0.13287732996796 * S_RFMstat + 0.56918286957798 *
S_RMntFrq + -1.40718347701522 * S_Recency + -1.45355422903931 * S_Teenhome ;
1242897   +   H1x2_3  =    -0.04229252175967 * S_AcceptedCmpTotal
1242898   +          +    -0.15725101559927 * S_Age  +      2.0258984610186 * S_Frq
1242899   +          +     0.68410444381038 * S_Income  +     0.69019962444573 *
1242900   +        S_Kidhome  +    -0.34233922017925 * S_Mnt  +     1.55352897772997 *
1242901   +        S_MntFishProducts  +    -0.76176236164027 * S_MntFruits
1242902   +          +    -1.16754517357962 * S_MntGoldProds  +     1.24350326644835 *
1242903   +        S_MntMeatProducts  +    -0.81282451423383 * S_MntSweetProducts
1242904   +          +      0.7172672745995 * S_MntWines  +     1.13255065624057 *
1242905   +        S_MonthsAsCustomer  +    -0.07781573365472 * S_NumCatalogPurchases
1242906   +          +    -0.75474919633886 * S_NumDealsPurchases
1242907   +          +     2.21872386475638 * S_NumDistPurchases
1242908   +          +    -0.36191460108989 * S_NumStorePurchases
1242909   +          +     0.03160010932412 * S_NumWebPurchases
1242910   +          +     0.00984650739909 * S_NumWebVisitsMonth
1242911   +          +     0.89037882953417 * S_RFMstat  +    -1.05136047825247 *
1242912   +        S_RMntFrq  +     0.97890474913417 * S_Recency
1242913   +          +     1.27657797009328 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.04229252175967 * S_AcceptedCmpTotal + -0.15725101559927 *
S_Age + 2.0258984610186 * S_Frq + 0.68410444381038 * S_Income + 0.69019962444573 * S_Kidhome +
-0.34233922017925 * S_Mnt + 1.55352897772997 * S_MntFishProducts + -0.76176236164027 *
S_MntFruits + -1.16754517357962 * S_MntGoldProds + 1.24350326644835 * S_MntMeatProducts +
-0.81282451423383 * S_MntSweetProducts + 0.7172672745995 * S_MntWines + 1.13255065624057 *
S_MonthsAsCustomer + -0.07781573365472 * S_NumCatalogPurchases + -0.75474919633886 *
S_NumDealsPurchases + 2.21872386475638 * S_NumDistPurchases + -0.36191460108989 *
S_NumStorePurchases + 0.03160010932412 * S_NumWebPurchases + 0.00984650739909 *
S_NumWebVisitsMonth + 0.89037882953417 * S_RFMstat + -1.05136047825247 * S_RMntFrq +
0.97890474913417 * S_Recency + 1.27657797009328 * S_Teenhome ;
1242914   +   H1x2_4  =    -1.09473986244398 * S_AcceptedCmpTotal
1242915   +          +     0.02292759635423 * S_Age  +     -1.7109267909752 * S_Frq
1242916   +          +    -1.43383040360225 * S_Income  +    -1.57934610129188 *
1242917   +        S_Kidhome  +      0.1051214240099 * S_Mnt  +     0.97936539268931 *
1242918   +        S_MntFishProducts  +    -0.59583313648658 * S_MntFruits
1242919   +          +     1.51886505753921 * S_MntGoldProds  +    -0.32475169924002 *
1242920   +        S_MntMeatProducts  +     2.41110603237098 * S_MntSweetProducts
1242921   +          +    -0.31356867592074 * S_MntWines  +    -0.46746195334785 *
1242922   +        S_MonthsAsCustomer  +      1.2175994058873 * S_NumCatalogPurchases
1242923   +          +    -1.12057357865269 * S_NumDealsPurchases
1242924   +          +    -0.70841760614521 * S_NumDistPurchases
1242925   +          +    -1.39174816270404 * S_NumStorePurchases
1242926   +          +    -1.62343249380806 * S_NumWebPurchases
1242927   +          +    -0.73097954508465 * S_NumWebVisitsMonth
1242928   +          +    -3.00146168388145 * S_RFMstat  +     0.52793752800199 *
1242929   +        S_RMntFrq  +    -1.13585643618227 * S_Recency
1242930   +          +    -0.84809590269062 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -1.09473986244398 * S_AcceptedCmpTotal + 0.02292759635423 *
S_Age + -1.7109267909752 * S_Frq + -1.43383040360225 * S_Income + -1.57934610129188 *
S_Kidhome + 0.1051214240099 * S_Mnt + 0.97936539268931 * S_MntFishProducts + -0.59583313648658
* S_MntFruits + 1.51886505753921 * S_MntGoldProds + -0.32475169924002 * S_MntMeatProducts +
2.41110603237098 * S_MntSweetProducts + -0.31356867592074 * S_MntWines + -0.46746195334785 *
S_MonthsAsCustomer + 1.2175994058873 * S_NumCatalogPurchases + -1.12057357865269 *
S_NumDealsPurchases + -0.70841760614521 * S_NumDistPurchases + -1.39174816270404 *
S_NumStorePurchases + -1.62343249380806 * S_NumWebPurchases + -0.73097954508465 *
S_NumWebVisitsMonth + -3.00146168388145 * S_RFMstat + 0.52793752800199 * S_RMntFrq +
-1.13585643618227 * S_Recency + -0.84809590269062 * S_Teenhome ;
1242931   +   H1x2_5  =    -0.76941479017685 * S_AcceptedCmpTotal
1242932   +          +    -0.80197055800099 * S_Age  +    -0.33523741625948 * S_Frq
1242933   +          +     0.67386262421365 * S_Income  +     1.52003240833706 *
1242934   +        S_Kidhome  +     0.14459028288037 * S_Mnt  +     0.39874528164598 *
1242935   +        S_MntFishProducts  +    -1.59397070226712 * S_MntFruits
1242936   +          +     0.78518859165099 * S_MntGoldProds  +     0.48003679676647 *
1242937   +        S_MntMeatProducts  +    -0.17657709565986 * S_MntSweetProducts
1242938   +          +    -0.79155200251992 * S_MntWines  +     0.27335896970236 *
1242939   +        S_MonthsAsCustomer  +     1.70502645622852 * S_NumCatalogPurchases
1242940   +          +     0.66880481485557 * S_NumDealsPurchases
1242941   +          +     0.69540174544859 * S_NumDistPurchases
1242942   +          +     1.68246546921736 * S_NumStorePurchases
1242943   +          +     1.85958176898295 * S_NumWebPurchases
1242944   +          +    -0.23815810306565 * S_NumWebVisitsMonth
1242945   +          +    -1.93291997626659 * S_RFMstat  +     0.44532152898673 *
1242946   +        S_RMntFrq  +    -2.12360922264332 * S_Recency
1242947   +          +     0.99915338747458 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.76941479017685 * S_AcceptedCmpTotal + -0.80197055800099 *
S_Age + -0.33523741625948 * S_Frq + 0.67386262421365 * S_Income + 1.52003240833706 * S_Kidhome
+ 0.14459028288037 * S_Mnt + 0.39874528164598 * S_MntFishProducts + -1.59397070226712 *
S_MntFruits + 0.78518859165099 * S_MntGoldProds + 0.48003679676647 * S_MntMeatProducts +
-0.17657709565986 * S_MntSweetProducts + -0.79155200251992 * S_MntWines + 0.27335896970236 *
S_MonthsAsCustomer + 1.70502645622852 * S_NumCatalogPurchases + 0.66880481485557 *
S_NumDealsPurchases + 0.69540174544859 * S_NumDistPurchases + 1.68246546921736 *
S_NumStorePurchases + 1.85958176898295 * S_NumWebPurchases + -0.23815810306565 *
S_NumWebVisitsMonth + -1.93291997626659 * S_RFMstat + 0.44532152898673 * S_RMntFrq +
-2.12360922264332 * S_Recency + 0.99915338747458 * S_Teenhome ;
1242948   +   H1x2_1  = H1x2_1  +    -0.34162163066653 * AcceptedCmp10
1242949   +          +    -1.63962075993761 * AcceptedCmp20  +    -0.15621537766672 *
1242950   +        AcceptedCmp30  +      -0.732967936338 * AcceptedCmp40
1242951   +          +    -0.89574320220152 * AcceptedCmp50  +    -1.65404732277767 *
1242952   +        Complain0  +     0.39810242344925 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.34162163066653 * AcceptedCmp10 + -1.63962075993761
* AcceptedCmp20 + -0.15621537766672 * AcceptedCmp30 + -0.732967936338 * AcceptedCmp40 +
-0.89574320220152 * AcceptedCmp50 + -1.65404732277767 * Complain0 + 0.39810242344925 *
HigherEducationBinary0 ;
1242953   +   H1x2_2  = H1x2_2  +     1.20749893379181 * AcceptedCmp10
1242954   +          +     0.74035850461127 * AcceptedCmp20  +    -0.57598323268755 *
1242955   +        AcceptedCmp30  +      0.2507562576407 * AcceptedCmp40
1242956   +          +    -1.65954337863227 * AcceptedCmp50  +    -0.36715622527216 *
1242957   +        Complain0  +    -0.80760857638242 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 1.20749893379181 * AcceptedCmp10 + 0.74035850461127 *
AcceptedCmp20 + -0.57598323268755 * AcceptedCmp30 + 0.2507562576407 * AcceptedCmp40 +
-1.65954337863227 * AcceptedCmp50 + -0.36715622527216 * Complain0 + -0.80760857638242 *
HigherEducationBinary0 ;
1242958   +   H1x2_3  = H1x2_3  +      0.1125551214626 * AcceptedCmp10
1242959   +          +      0.9256532360503 * AcceptedCmp20  +    -0.66171851987996 *
1242960   +        AcceptedCmp30  +     1.38941609616943 * AcceptedCmp40
1242961   +          +    -0.12600029950267 * AcceptedCmp50  +     1.77872255302987 *
1242962   +        Complain0  +     0.92261637863861 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.1125551214626 * AcceptedCmp10 + 0.9256532360503 *
AcceptedCmp20 + -0.66171851987996 * AcceptedCmp30 + 1.38941609616943 * AcceptedCmp40 +
-0.12600029950267 * AcceptedCmp50 + 1.77872255302987 * Complain0 + 0.92261637863861 *
HigherEducationBinary0 ;
1242963   +   H1x2_4  = H1x2_4  +     1.15541901435911 * AcceptedCmp10
1242964   +          +     0.29649422640031 * AcceptedCmp20  +     0.39809722545141 *
1242965   +        AcceptedCmp30  +    -0.33350815656019 * AcceptedCmp40
1242966   +          +    -0.67932033799188 * AcceptedCmp50  +     0.37378775543802 *
1242967   +        Complain0  +    -0.42273281355142 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 1.15541901435911 * AcceptedCmp10 + 0.29649422640031 *
AcceptedCmp20 + 0.39809722545141 * AcceptedCmp30 + -0.33350815656019 * AcceptedCmp40 +
-0.67932033799188 * AcceptedCmp50 + 0.37378775543802 * Complain0 + -0.42273281355142 *
HigherEducationBinary0 ;
1242968   +   H1x2_5  = H1x2_5  +     0.42070748083274 * AcceptedCmp10
1242969   +          +     0.35338291913326 * AcceptedCmp20  +    -0.47257467834599 *
1242970   +        AcceptedCmp30  +     1.53611423156071 * AcceptedCmp40
1242971   +          +    -1.33360798584085 * AcceptedCmp50  +    -1.44352278404761 *
1242972   +        Complain0  +    -0.33674466205114 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.42070748083274 * AcceptedCmp10 + 0.35338291913326 *
AcceptedCmp20 + -0.47257467834599 * AcceptedCmp30 + 1.53611423156071 * AcceptedCmp40 +
-1.33360798584085 * AcceptedCmp50 + -1.44352278404761 * Complain0 + -0.33674466205114 *
HigherEducationBinary0 ;
1242973   +   H1x2_1  = H1x2_1  +     0.60843711339598 * Education2n_Cycle
1242974   +          +     -0.2612316425128 * EducationBasic  +     0.53215140077355 *
1242975   +        EducationGraduation  +     0.32623787352656 * EducationMaster
1242976   +          +      0.2766977476799 * Marital_StatusDivorced
1242977   +          +     0.99585126449473 * Marital_StatusMarried
1242978   +          +    -0.71244490682808 * Marital_StatusSingle
1242979   +          +     0.05234471555621 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 0.60843711339598 * Education2n_Cycle +
-0.2612316425128 * EducationBasic + 0.53215140077355 * EducationGraduation + 0.32623787352656
* EducationMaster + 0.2766977476799 * Marital_StatusDivorced + 0.99585126449473 *
Marital_StatusMarried + -0.71244490682808 * Marital_StatusSingle + 0.05234471555621 *
Marital_StatusTogether ;
1242980   +   H1x2_2  = H1x2_2  +    -1.37916273373311 * Education2n_Cycle
1242981   +          +     0.16982792088728 * EducationBasic  +     0.00814910507718 *
1242982   +        EducationGraduation  +     0.47239961039918 * EducationMaster
1242983   +          +     0.04724779113048 * Marital_StatusDivorced
1242984   +          +    -0.80186231440666 * Marital_StatusMarried
1242985   +          +    -0.02226793584171 * Marital_StatusSingle
1242986   +          +     1.15827064756189 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -1.37916273373311 * Education2n_Cycle +
0.16982792088728 * EducationBasic + 0.00814910507718 * EducationGraduation + 0.47239961039918
* EducationMaster + 0.04724779113048 * Marital_StatusDivorced + -0.80186231440666 *
Marital_StatusMarried + -0.02226793584171 * Marital_StatusSingle + 1.15827064756189 *
Marital_StatusTogether ;
1242987   +   H1x2_3  = H1x2_3  +    -0.24428291102209 * Education2n_Cycle
1242988   +          +    -0.11697967041189 * EducationBasic  +    -1.11774839931933 *
1242989   +        EducationGraduation  +     0.41284540548646 * EducationMaster
1242990   +          +     0.28206835683721 * Marital_StatusDivorced
1242991   +          +     0.46500886756532 * Marital_StatusMarried
1242992   +          +     0.35327545255503 * Marital_StatusSingle
1242993   +          +     0.58394650567036 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -0.24428291102209 * Education2n_Cycle +
-0.11697967041189 * EducationBasic + -1.11774839931933 * EducationGraduation +
0.41284540548646 * EducationMaster + 0.28206835683721 * Marital_StatusDivorced +
0.46500886756532 * Marital_StatusMarried + 0.35327545255503 * Marital_StatusSingle +
0.58394650567036 * Marital_StatusTogether ;
1242994   +   H1x2_4  = H1x2_4  +    -0.41547462236128 * Education2n_Cycle
1242995   +          +     1.13629818238321 * EducationBasic  +     0.25034344652006 *
1242996   +        EducationGraduation  +    -0.29812527209479 * EducationMaster
1242997   +          +     1.22291788006392 * Marital_StatusDivorced
1242998   +          +    -2.27040720272432 * Marital_StatusMarried
1242999   +          +     1.13606780043773 * Marital_StatusSingle
1243000   +          +    -1.07606142589696 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + -0.41547462236128 * Education2n_Cycle +
1.13629818238321 * EducationBasic + 0.25034344652006 * EducationGraduation + -0.29812527209479
* EducationMaster + 1.22291788006392 * Marital_StatusDivorced + -2.27040720272432 *
Marital_StatusMarried + 1.13606780043773 * Marital_StatusSingle + -1.07606142589696 *
Marital_StatusTogether ;
1243001   +   H1x2_5  = H1x2_5  +     1.12913918872999 * Education2n_Cycle
1243002   +          +     1.23833680718071 * EducationBasic  +     1.02294394812757 *
1243003   +        EducationGraduation  +      0.4909097120378 * EducationMaster
1243004   +          +     -0.3999800759199 * Marital_StatusDivorced
1243005   +          +    -0.40978271635345 * Marital_StatusMarried
1243006   +          +    -0.55524279444227 * Marital_StatusSingle
1243007   +          +    -0.84395633194091 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 1.12913918872999 * Education2n_Cycle +
1.23833680718071 * EducationBasic + 1.02294394812757 * EducationGraduation + 0.4909097120378 *
EducationMaster + -0.3999800759199 * Marital_StatusDivorced + -0.40978271635345 *
Marital_StatusMarried + -0.55524279444227 * Marital_StatusSingle + -0.84395633194091 *
Marital_StatusTogether ;
1243008   +   H1x2_1  =    -0.65400470626386 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.65400470626386 + H1x2_1 ;
1243009   +   H1x2_2  =    -0.07530883721979 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.07530883721979 + H1x2_2 ;
1243010   +   H1x2_3  =      -0.290996947172 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.290996947172 + H1x2_3 ;
1243011   +   H1x2_4  =    -0.89461283774487 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.89461283774487 + H1x2_4 ;
1243012   +   H1x2_5  =    -0.37171981998051 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.37171981998051 + H1x2_5 ;
1243013   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
1243014   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
1243015   +   H1x2_1  = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
1243016   +   H1x2_2  = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_2 = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
1243017   +   H1x2_3  = 1.0 / (1.0 + EXP(MIN( - H1x2_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_3 = 1.0 / (1.0 + EXP(MIN( - H1x2_3 , _EXP_BAR)));
1243018   +   H1x2_4  = 1.0 / (1.0 + EXP(MIN( - H1x2_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_4 = 1.0 / (1.0 + EXP(MIN( - H1x2_4 , _EXP_BAR)));
1243019   +   H1x2_5  = 1.0 / (1.0 + EXP(MIN( - H1x2_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.0 / (1.0 + EXP(MIN( - H1x2_5 , _EXP_BAR)));
1243020   +END;
MPRINT(EM_DIAGRAM):   END;
1243021   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1243022   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
1243023   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
1243024   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
1243025   +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
1243026   +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
1243027   +END;
MPRINT(EM_DIAGRAM):   END;
1243028   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1243029   +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
1243030   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1243031   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1243032   +   H1x3_1  =     0.02034446400728 * S_AcceptedCmpTotal
1243033   +          +    -0.93561297099295 * S_Age  +     0.49066734733476 * S_Frq
1243034   +          +    -1.34856771280634 * S_Income  +     1.35662384709137 *
1243035   +        S_Kidhome  +    -0.02206222240953 * S_Mnt  +     0.42162640035912 *
1243036   +        S_MntFishProducts  +      1.4724867503467 * S_MntFruits
1243037   +          +    -0.51460401528507 * S_MntGoldProds  +       0.958125893994 *
1243038   +        S_MntMeatProducts  +     0.57113865733502 * S_MntSweetProducts
1243039   +          +    -1.00744287646761 * S_MntWines  +     0.17043433169038 *
1243040   +        S_MonthsAsCustomer  +     1.69277828985001 * S_NumCatalogPurchases
1243041   +          +     0.15783958682465 * S_NumDealsPurchases
1243042   +          +     1.52124708558457 * S_NumDistPurchases
1243043   +          +     -1.3804418313581 * S_NumStorePurchases
1243044   +          +    -1.29570111649272 * S_NumWebPurchases
1243045   +          +    -0.64280706056547 * S_NumWebVisitsMonth
1243046   +          +    -1.20774016698707 * S_RFMstat  +    -0.44623204790714 *
1243047   +        S_RMntFrq  +    -0.06726660535826 * S_Recency
1243048   +          +    -0.73266660753354 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.02034446400728 * S_AcceptedCmpTotal + -0.93561297099295 *
S_Age + 0.49066734733476 * S_Frq + -1.34856771280634 * S_Income + 1.35662384709137 * S_Kidhome
+ -0.02206222240953 * S_Mnt + 0.42162640035912 * S_MntFishProducts + 1.4724867503467 *
S_MntFruits + -0.51460401528507 * S_MntGoldProds + 0.958125893994 * S_MntMeatProducts +
0.57113865733502 * S_MntSweetProducts + -1.00744287646761 * S_MntWines + 0.17043433169038 *
S_MonthsAsCustomer + 1.69277828985001 * S_NumCatalogPurchases + 0.15783958682465 *
S_NumDealsPurchases + 1.52124708558457 * S_NumDistPurchases + -1.3804418313581 *
S_NumStorePurchases + -1.29570111649272 * S_NumWebPurchases + -0.64280706056547 *
S_NumWebVisitsMonth + -1.20774016698707 * S_RFMstat + -0.44623204790714 * S_RMntFrq +
-0.06726660535826 * S_Recency + -0.73266660753354 * S_Teenhome ;
1243049   +   H1x3_2  =     0.05576327437156 * S_AcceptedCmpTotal
1243050   +          +    -0.09670418926268 * S_Age  +     0.70499031549942 * S_Frq
1243051   +          +     0.26184897891893 * S_Income  +    -1.14390972062773 *
1243052   +        S_Kidhome  +     -0.0692794596346 * S_Mnt  +     0.38520399298269 *
1243053   +        S_MntFishProducts  +     0.23416686193508 * S_MntFruits
1243054   +          +     0.54961704765881 * S_MntGoldProds  +     1.00350256670809 *
1243055   +        S_MntMeatProducts  +    -0.03432942277526 * S_MntSweetProducts
1243056   +          +    -0.79877133727616 * S_MntWines  +    -2.29194848128805 *
1243057   +        S_MonthsAsCustomer  +    -0.38950356087292 * S_NumCatalogPurchases
1243058   +          +     0.12337111358286 * S_NumDealsPurchases
1243059   +          +     -2.3848926094027 * S_NumDistPurchases
1243060   +          +    -1.20666646996433 * S_NumStorePurchases
1243061   +          +     0.89549302881365 * S_NumWebPurchases
1243062   +          +     0.95359042569947 * S_NumWebVisitsMonth
1243063   +          +    -0.41458051201542 * S_RFMstat  +    -2.05830783255089 *
1243064   +        S_RMntFrq  +     0.17682790616815 * S_Recency
1243065   +          +     0.20329199183726 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_2 = 0.05576327437156 * S_AcceptedCmpTotal + -0.09670418926268 *
S_Age + 0.70499031549942 * S_Frq + 0.26184897891893 * S_Income + -1.14390972062773 * S_Kidhome
+ -0.0692794596346 * S_Mnt + 0.38520399298269 * S_MntFishProducts + 0.23416686193508 *
S_MntFruits + 0.54961704765881 * S_MntGoldProds + 1.00350256670809 * S_MntMeatProducts +
-0.03432942277526 * S_MntSweetProducts + -0.79877133727616 * S_MntWines + -2.29194848128805 *
S_MonthsAsCustomer + -0.38950356087292 * S_NumCatalogPurchases + 0.12337111358286 *
S_NumDealsPurchases + -2.3848926094027 * S_NumDistPurchases + -1.20666646996433 *
S_NumStorePurchases + 0.89549302881365 * S_NumWebPurchases + 0.95359042569947 *
S_NumWebVisitsMonth + -0.41458051201542 * S_RFMstat + -2.05830783255089 * S_RMntFrq +
0.17682790616815 * S_Recency + 0.20329199183726 * S_Teenhome ;
1243066   +   H1x3_3  =     0.56145399373835 * S_AcceptedCmpTotal
1243067   +          +     -0.0607922137813 * S_Age  +    -0.72333515266618 * S_Frq
1243068   +          +     1.00319702869592 * S_Income  +    -0.98265416539823 *
1243069   +        S_Kidhome  +      0.0683081611036 * S_Mnt  +     0.53609800817402 *
1243070   +        S_MntFishProducts  +     2.04360526983241 * S_MntFruits
1243071   +          +    -0.71698041504305 * S_MntGoldProds  +     -0.0344399486348 *
1243072   +        S_MntMeatProducts  +     0.33812230317499 * S_MntSweetProducts
1243073   +          +     1.06616289880664 * S_MntWines  +     0.61567483782422 *
1243074   +        S_MonthsAsCustomer  +      0.1468959674594 * S_NumCatalogPurchases
1243075   +          +    -1.05383642674948 * S_NumDealsPurchases
1243076   +          +     1.71861984509369 * S_NumDistPurchases
1243077   +          +     1.47595181536047 * S_NumStorePurchases
1243078   +          +    -1.64165005491178 * S_NumWebPurchases
1243079   +          +    -2.35130004742828 * S_NumWebVisitsMonth
1243080   +          +      1.0733561716985 * S_RFMstat  +     1.11931629246452 *
1243081   +        S_RMntFrq  +    -1.27356615687944 * S_Recency
1243082   +          +     0.38980214209917 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_3 = 0.56145399373835 * S_AcceptedCmpTotal + -0.0607922137813 *
S_Age + -0.72333515266618 * S_Frq + 1.00319702869592 * S_Income + -0.98265416539823 *
S_Kidhome + 0.0683081611036 * S_Mnt + 0.53609800817402 * S_MntFishProducts + 2.04360526983241
* S_MntFruits + -0.71698041504305 * S_MntGoldProds + -0.0344399486348 * S_MntMeatProducts +
0.33812230317499 * S_MntSweetProducts + 1.06616289880664 * S_MntWines + 0.61567483782422 *
S_MonthsAsCustomer + 0.1468959674594 * S_NumCatalogPurchases + -1.05383642674948 *
S_NumDealsPurchases + 1.71861984509369 * S_NumDistPurchases + 1.47595181536047 *
S_NumStorePurchases + -1.64165005491178 * S_NumWebPurchases + -2.35130004742828 *
S_NumWebVisitsMonth + 1.0733561716985 * S_RFMstat + 1.11931629246452 * S_RMntFrq +
-1.27356615687944 * S_Recency + 0.38980214209917 * S_Teenhome ;
1243083   +   H1x3_4  =    -1.87202109167616 * S_AcceptedCmpTotal
1243084   +          +     0.55536174675106 * S_Age  +     1.30133566520787 * S_Frq
1243085   +          +     1.18618986686496 * S_Income  +      0.7889264950743 *
1243086   +        S_Kidhome  +     0.52573653297629 * S_Mnt  +    -0.46151505202831 *
1243087   +        S_MntFishProducts  +     0.87196199131075 * S_MntFruits
1243088   +          +    -1.42881514301194 * S_MntGoldProds  +     0.75395204572369 *
1243089   +        S_MntMeatProducts  +    -1.86940235435459 * S_MntSweetProducts
1243090   +          +    -0.16531589560603 * S_MntWines  +     0.80429494629006 *
1243091   +        S_MonthsAsCustomer  +     2.07324775707635 * S_NumCatalogPurchases
1243092   +          +     0.13347794794222 * S_NumDealsPurchases
1243093   +          +     0.30533639886561 * S_NumDistPurchases
1243094   +          +     1.63892955540526 * S_NumStorePurchases
1243095   +          +     0.43734586516446 * S_NumWebPurchases
1243096   +          +     1.79260779802864 * S_NumWebVisitsMonth
1243097   +          +     2.03019700767877 * S_RFMstat  +    -0.36302320348133 *
1243098   +        S_RMntFrq  +    -0.32271271703746 * S_Recency
1243099   +          +     1.03191552613762 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_4 = -1.87202109167616 * S_AcceptedCmpTotal + 0.55536174675106 *
S_Age + 1.30133566520787 * S_Frq + 1.18618986686496 * S_Income + 0.7889264950743 * S_Kidhome +
0.52573653297629 * S_Mnt + -0.46151505202831 * S_MntFishProducts + 0.87196199131075 *
S_MntFruits + -1.42881514301194 * S_MntGoldProds + 0.75395204572369 * S_MntMeatProducts +
-1.86940235435459 * S_MntSweetProducts + -0.16531589560603 * S_MntWines + 0.80429494629006 *
S_MonthsAsCustomer + 2.07324775707635 * S_NumCatalogPurchases + 0.13347794794222 *
S_NumDealsPurchases + 0.30533639886561 * S_NumDistPurchases + 1.63892955540526 *
S_NumStorePurchases + 0.43734586516446 * S_NumWebPurchases + 1.79260779802864 *
S_NumWebVisitsMonth + 2.03019700767877 * S_RFMstat + -0.36302320348133 * S_RMntFrq +
-0.32271271703746 * S_Recency + 1.03191552613762 * S_Teenhome ;
1243100   +   H1x3_5  =     0.20857223520727 * S_AcceptedCmpTotal
1243101   +          +    -0.20096771162452 * S_Age  +     0.34962532991985 * S_Frq
1243102   +          +     1.37548654455856 * S_Income  +     1.56421861140197 *
1243103   +        S_Kidhome  +    -1.14534324749928 * S_Mnt  +     1.19456381083083 *
1243104   +        S_MntFishProducts  +     0.66027175430916 * S_MntFruits
1243105   +          +    -0.93198171949009 * S_MntGoldProds  +    -0.72464830253528 *
1243106   +        S_MntMeatProducts  +     1.02487566206095 * S_MntSweetProducts
1243107   +          +     1.05601020947303 * S_MntWines  +     2.31580499448269 *
1243108   +        S_MonthsAsCustomer  +    -0.72019418879499 * S_NumCatalogPurchases
1243109   +          +     1.64209094349557 * S_NumDealsPurchases
1243110   +          +    -0.38876870460627 * S_NumDistPurchases
1243111   +          +    -0.48559309584971 * S_NumStorePurchases
1243112   +          +     0.21254626353218 * S_NumWebPurchases
1243113   +          +    -0.71484448532542 * S_NumWebVisitsMonth
1243114   +          +     0.02349535084994 * S_RFMstat  +    -0.16176132186427 *
1243115   +        S_RMntFrq  +     0.44893411588775 * S_Recency
1243116   +          +      0.2652212690846 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_5 = 0.20857223520727 * S_AcceptedCmpTotal + -0.20096771162452 *
S_Age + 0.34962532991985 * S_Frq + 1.37548654455856 * S_Income + 1.56421861140197 * S_Kidhome
+ -1.14534324749928 * S_Mnt + 1.19456381083083 * S_MntFishProducts + 0.66027175430916 *
S_MntFruits + -0.93198171949009 * S_MntGoldProds + -0.72464830253528 * S_MntMeatProducts +
1.02487566206095 * S_MntSweetProducts + 1.05601020947303 * S_MntWines + 2.31580499448269 *
S_MonthsAsCustomer + -0.72019418879499 * S_NumCatalogPurchases + 1.64209094349557 *
S_NumDealsPurchases + -0.38876870460627 * S_NumDistPurchases + -0.48559309584971 *
S_NumStorePurchases + 0.21254626353218 * S_NumWebPurchases + -0.71484448532542 *
S_NumWebVisitsMonth + 0.02349535084994 * S_RFMstat + -0.16176132186427 * S_RMntFrq +
0.44893411588775 * S_Recency + 0.2652212690846 * S_Teenhome ;
1243117   +   H1x3_1  = H1x3_1  +    -1.35842958516566 * AcceptedCmp10
1243118   +          +     0.34594436457216 * AcceptedCmp20  +      0.3640777110552 *
1243119   +        AcceptedCmp30  +    -2.65231594293215 * AcceptedCmp40
1243120   +          +    -0.32594395344101 * AcceptedCmp50  +    -0.20731631969028 *
1243121   +        Complain0  +    -0.37562812451995 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + -1.35842958516566 * AcceptedCmp10 + 0.34594436457216 *
AcceptedCmp20 + 0.3640777110552 * AcceptedCmp30 + -2.65231594293215 * AcceptedCmp40 +
-0.32594395344101 * AcceptedCmp50 + -0.20731631969028 * Complain0 + -0.37562812451995 *
HigherEducationBinary0 ;
1243122   +   H1x3_2  = H1x3_2  +    -0.29516697471591 * AcceptedCmp10
1243123   +          +     0.12160626453607 * AcceptedCmp20  +    -0.19673071668839 *
1243124   +        AcceptedCmp30  +      0.9679629348873 * AcceptedCmp40
1243125   +          +     0.27607865991675 * AcceptedCmp50  +     0.34210605810889 *
1243126   +        Complain0  +    -0.91955372970801 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + -0.29516697471591 * AcceptedCmp10 + 0.12160626453607 *
AcceptedCmp20 + -0.19673071668839 * AcceptedCmp30 + 0.9679629348873 * AcceptedCmp40 +
0.27607865991675 * AcceptedCmp50 + 0.34210605810889 * Complain0 + -0.91955372970801 *
HigherEducationBinary0 ;
1243127   +   H1x3_3  = H1x3_3  +    -0.64048354977116 * AcceptedCmp10
1243128   +          +     0.71632378156708 * AcceptedCmp20  +     1.49620826236085 *
1243129   +        AcceptedCmp30  +    -0.41927727863342 * AcceptedCmp40
1243130   +          +    -0.74518887123144 * AcceptedCmp50  +     -0.5653895859863 *
1243131   +        Complain0  +     0.49026807979832 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 + -0.64048354977116 * AcceptedCmp10 + 0.71632378156708 *
AcceptedCmp20 + 1.49620826236085 * AcceptedCmp30 + -0.41927727863342 * AcceptedCmp40 +
-0.74518887123144 * AcceptedCmp50 + -0.5653895859863 * Complain0 + 0.49026807979832 *
HigherEducationBinary0 ;
1243132   +   H1x3_4  = H1x3_4  +    -0.39456977652419 * AcceptedCmp10
1243133   +          +    -0.35607374401334 * AcceptedCmp20  +     0.25403314478809 *
1243134   +        AcceptedCmp30  +    -1.26365534513909 * AcceptedCmp40
1243135   +          +    -0.93574993035227 * AcceptedCmp50  +    -0.01475423275475 *
1243136   +        Complain0  +     0.99152563511102 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 + -0.39456977652419 * AcceptedCmp10 + -0.35607374401334
* AcceptedCmp20 + 0.25403314478809 * AcceptedCmp30 + -1.26365534513909 * AcceptedCmp40 +
-0.93574993035227 * AcceptedCmp50 + -0.01475423275475 * Complain0 + 0.99152563511102 *
HigherEducationBinary0 ;
1243137   +   H1x3_5  = H1x3_5  +    -1.26373480748972 * AcceptedCmp10
1243138   +          +     0.14485593883591 * AcceptedCmp20  +     -0.0764980824216 *
1243139   +        AcceptedCmp30  +    -1.03297576023738 * AcceptedCmp40
1243140   +          +    -1.10199278454673 * AcceptedCmp50  +     0.92040879426753 *
1243141   +        Complain0  +     0.19845951543481 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 + -1.26373480748972 * AcceptedCmp10 + 0.14485593883591 *
AcceptedCmp20 + -0.0764980824216 * AcceptedCmp30 + -1.03297576023738 * AcceptedCmp40 +
-1.10199278454673 * AcceptedCmp50 + 0.92040879426753 * Complain0 + 0.19845951543481 *
HigherEducationBinary0 ;
1243142   +   H1x3_1  = H1x3_1  +     0.21888802927361 * Education2n_Cycle
1243143   +          +    -1.88729117459232 * EducationBasic  +    -0.23163049582765 *
1243144   +        EducationGraduation  +     0.46887304015863 * EducationMaster
1243145   +          +     1.33953173091973 * Marital_StatusDivorced
1243146   +          +    -0.26253208073262 * Marital_StatusMarried
1243147   +          +    -0.00960552682431 * Marital_StatusSingle
1243148   +          +     1.02851334153667 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + 0.21888802927361 * Education2n_Cycle +
-1.88729117459232 * EducationBasic + -0.23163049582765 * EducationGraduation +
0.46887304015863 * EducationMaster + 1.33953173091973 * Marital_StatusDivorced +
-0.26253208073262 * Marital_StatusMarried + -0.00960552682431 * Marital_StatusSingle +
1.02851334153667 * Marital_StatusTogether ;
1243149   +   H1x3_2  = H1x3_2  +     2.36701652448958 * Education2n_Cycle
1243150   +          +     0.64894060487321 * EducationBasic  +     -1.2851019467738 *
1243151   +        EducationGraduation  +     1.05325310300372 * EducationMaster
1243152   +          +     1.43150850334311 * Marital_StatusDivorced
1243153   +          +    -0.69239127844934 * Marital_StatusMarried
1243154   +          +     2.08477562471559 * Marital_StatusSingle
1243155   +          +    -1.55945531486837 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + 2.36701652448958 * Education2n_Cycle +
0.64894060487321 * EducationBasic + -1.2851019467738 * EducationGraduation + 1.05325310300372
* EducationMaster + 1.43150850334311 * Marital_StatusDivorced + -0.69239127844934 *
Marital_StatusMarried + 2.08477562471559 * Marital_StatusSingle + -1.55945531486837 *
Marital_StatusTogether ;
1243156   +   H1x3_3  = H1x3_3  +    -0.07588279976612 * Education2n_Cycle
1243157   +          +    -1.60804492005984 * EducationBasic  +     0.15348594453976 *
1243158   +        EducationGraduation  +     1.80436924796338 * EducationMaster
1243159   +          +     1.08387556786168 * Marital_StatusDivorced
1243160   +          +      1.0283506000217 * Marital_StatusMarried
1243161   +          +    -0.87069431107983 * Marital_StatusSingle
1243162   +          +    -0.04455113729262 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 + -0.07588279976612 * Education2n_Cycle +
-1.60804492005984 * EducationBasic + 0.15348594453976 * EducationGraduation + 1.80436924796338
* EducationMaster + 1.08387556786168 * Marital_StatusDivorced + 1.0283506000217 *
Marital_StatusMarried + -0.87069431107983 * Marital_StatusSingle + -0.04455113729262 *
Marital_StatusTogether ;
1243163   +   H1x3_4  = H1x3_4  +    -0.24072826180906 * Education2n_Cycle
1243164   +          +     0.56372511932643 * EducationBasic  +    -1.72914870390939 *
1243165   +        EducationGraduation  +    -1.53859265107051 * EducationMaster
1243166   +          +      -1.347780188307 * Marital_StatusDivorced
1243167   +          +    -0.53911983240372 * Marital_StatusMarried
1243168   +          +     0.22083074159185 * Marital_StatusSingle
1243169   +          +     0.46023807391468 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 + -0.24072826180906 * Education2n_Cycle +
0.56372511932643 * EducationBasic + -1.72914870390939 * EducationGraduation +
-1.53859265107051 * EducationMaster + -1.347780188307 * Marital_StatusDivorced +
-0.53911983240372 * Marital_StatusMarried + 0.22083074159185 * Marital_StatusSingle +
0.46023807391468 * Marital_StatusTogether ;
1243170   +   H1x3_5  = H1x3_5  +    -0.72917301249658 * Education2n_Cycle
1243171   +          +     0.78780526232794 * EducationBasic  +     0.22244378874589 *
1243172   +        EducationGraduation  +      1.6087631135774 * EducationMaster
1243173   +          +     1.46582538311384 * Marital_StatusDivorced
1243174   +          +     0.05256161016002 * Marital_StatusMarried
1243175   +          +    -1.21402967626877 * Marital_StatusSingle
1243176   +          +     0.88645860928281 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 + -0.72917301249658 * Education2n_Cycle +
0.78780526232794 * EducationBasic + 0.22244378874589 * EducationGraduation + 1.6087631135774 *
EducationMaster + 1.46582538311384 * Marital_StatusDivorced + 0.05256161016002 *
Marital_StatusMarried + -1.21402967626877 * Marital_StatusSingle + 0.88645860928281 *
Marital_StatusTogether ;
1243177   +   H1x3_1  =     0.88456831875399 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.88456831875399 + H1x3_1 ;
1243178   +   H1x3_2  =    -0.97118571845853 + H1x3_2 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = -0.97118571845853 + H1x3_2 ;
1243179   +   H1x3_3  =    -0.79264210370105 + H1x3_3 ;
MPRINT(EM_DIAGRAM):   H1x3_3 = -0.79264210370105 + H1x3_3 ;
1243180   +   H1x3_4  =     0.02838267530757 + H1x3_4 ;
MPRINT(EM_DIAGRAM):   H1x3_4 = 0.02838267530757 + H1x3_4 ;
1243181   +   H1x3_5  =      0.6575544901332 + H1x3_5 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = 0.6575544901332 + H1x3_5 ;
1243182   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
1243183   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
1243184   +   H1x3_1  = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_1 = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
1243185   +   H1x3_2  = 1.0 / (1.0 + EXP(MIN( - H1x3_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_2 = 1.0 / (1.0 + EXP(MIN( - H1x3_2 , _EXP_BAR)));
1243186   +   H1x3_3  = 1.0 / (1.0 + EXP(MIN( - H1x3_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_3 = 1.0 / (1.0 + EXP(MIN( - H1x3_3 , _EXP_BAR)));
1243187   +   H1x3_4  = 1.0 / (1.0 + EXP(MIN( - H1x3_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_4 = 1.0 / (1.0 + EXP(MIN( - H1x3_4 , _EXP_BAR)));
1243188   +   H1x3_5  = 1.0 / (1.0 + EXP(MIN( - H1x3_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_5 = 1.0 / (1.0 + EXP(MIN( - H1x3_5 , _EXP_BAR)));
1243189   +END;
MPRINT(EM_DIAGRAM):   END;
1243190   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1243191   +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
1243192   +   H1x3_2  = .;
MPRINT(EM_DIAGRAM):   H1x3_2 = .;
1243193   +   H1x3_3  = .;
MPRINT(EM_DIAGRAM):   H1x3_3 = .;
1243194   +   H1x3_4  = .;
MPRINT(EM_DIAGRAM):   H1x3_4 = .;
1243195   +   H1x3_5  = .;
MPRINT(EM_DIAGRAM):   H1x3_5 = .;
1243196   +END;
MPRINT(EM_DIAGRAM):   END;
1243197   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1243198   +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
1243199   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1243200   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1243201   +   H2x1_1  =    -0.87888588976745 * H1x1_1  +     2.90335871970001 * H1x1_2
1243202   +          +     3.56892082037266 * H1x1_3  +    -2.73992780705083 * H1x1_4
1243203   +          +     1.85087845133324 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -0.87888588976745 * H1x1_1 + 2.90335871970001 * H1x1_2 +
3.56892082037266 * H1x1_3 + -2.73992780705083 * H1x1_4 + 1.85087845133324 * H1x1_5 ;
1243204   +   H2x1_2  =    -0.58574259841126 * H1x1_1  +    -0.21734849016798 * H1x1_2
1243205   +          +    -0.25911074181081 * H1x1_3  +    -0.42608313525243 * H1x1_4
1243206   +          +      0.0572264965726 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -0.58574259841126 * H1x1_1 + -0.21734849016798 * H1x1_2 +
-0.25911074181081 * H1x1_3 + -0.42608313525243 * H1x1_4 + 0.0572264965726 * H1x1_5 ;
1243207   +   H2x1_3  =     -3.4245103090892 * H1x1_1  +     2.39148442791109 * H1x1_2
1243208   +          +     2.40633993926864 * H1x1_3  +    -0.39116314741561 * H1x1_4
1243209   +          +     1.55940137045446 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -3.4245103090892 * H1x1_1 + 2.39148442791109 * H1x1_2 +
2.40633993926864 * H1x1_3 + -0.39116314741561 * H1x1_4 + 1.55940137045446 * H1x1_5 ;
1243210   +   H2x1_4  =     4.40552826823228 * H1x1_1  +    -2.22667369285426 * H1x1_2
1243211   +          +    -4.36956996992936 * H1x1_3  +     5.07833758885145 * H1x1_4
1243212   +          +    -3.71745000855391 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 4.40552826823228 * H1x1_1 + -2.22667369285426 * H1x1_2 +
-4.36956996992936 * H1x1_3 + 5.07833758885145 * H1x1_4 + -3.71745000855391 * H1x1_5 ;
1243213   +   H2x1_1  = H2x1_1  +     2.57417055243767 * H1x2_1
1243214   +          +     0.83648749576123 * H1x2_2  +     0.89390090173338 * H1x2_3
1243215   +          +     0.64981014833304 * H1x2_4  +    -0.52148329192172 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 2.57417055243767 * H1x2_1 + 0.83648749576123 * H1x2_2
+ 0.89390090173338 * H1x2_3 + 0.64981014833304 * H1x2_4 + -0.52148329192172 * H1x2_5 ;
1243216   +   H2x1_2  = H2x1_2  +      0.0180888989385 * H1x2_1
1243217   +          +    -0.80823823488019 * H1x2_2  +    -0.28763491232907 * H1x2_3
1243218   +          +     0.25846928082637 * H1x2_4  +    -0.90191452174928 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 0.0180888989385 * H1x2_1 + -0.80823823488019 * H1x2_2
+ -0.28763491232907 * H1x2_3 + 0.25846928082637 * H1x2_4 + -0.90191452174928 * H1x2_5 ;
1243219   +   H2x1_3  = H2x1_3  +     1.14009879940491 * H1x2_1
1243220   +          +    -0.40787680915084 * H1x2_2  +     0.07284828777988 * H1x2_3
1243221   +          +     0.36049016529857 * H1x2_4  +    -1.18138631855392 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + 1.14009879940491 * H1x2_1 + -0.40787680915084 * H1x2_2
+ 0.07284828777988 * H1x2_3 + 0.36049016529857 * H1x2_4 + -1.18138631855392 * H1x2_5 ;
1243222   +   H2x1_4  = H2x1_4  +     -0.1178430666715 * H1x2_1
1243223   +          +     2.09065650924536 * H1x2_2  +     1.04148055725421 * H1x2_3
1243224   +          +     0.02606984862898 * H1x2_4  +     0.31973150706209 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + -0.1178430666715 * H1x2_1 + 2.09065650924536 * H1x2_2
+ 1.04148055725421 * H1x2_3 + 0.02606984862898 * H1x2_4 + 0.31973150706209 * H1x2_5 ;
1243225   +   H2x1_1  = H2x1_1  +     0.37589541636702 * H1x3_1
1243226   +          +    -1.02452495514201 * H1x3_2  +     0.44765211805329 * H1x3_3
1243227   +          +    -1.35647342372032 * H1x3_4  +     -0.6490399229487 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 0.37589541636702 * H1x3_1 + -1.02452495514201 * H1x3_2
+ 0.44765211805329 * H1x3_3 + -1.35647342372032 * H1x3_4 + -0.6490399229487 * H1x3_5 ;
1243228   +   H2x1_2  = H2x1_2  +      -1.910747593267 * H1x3_1
1243229   +          +     1.91313714874593 * H1x3_2  +     0.89010950185557 * H1x3_3
1243230   +          +     1.16258612173237 * H1x3_4  +     0.67062728470341 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -1.910747593267 * H1x3_1 + 1.91313714874593 * H1x3_2 +
0.89010950185557 * H1x3_3 + 1.16258612173237 * H1x3_4 + 0.67062728470341 * H1x3_5 ;
1243231   +   H2x1_3  = H2x1_3  +    -0.61933600446437 * H1x3_1
1243232   +          +     1.71790550668732 * H1x3_2  +     0.54214423164791 * H1x3_3
1243233   +          +     1.23934237110052 * H1x3_4  +     -0.5426823885329 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -0.61933600446437 * H1x3_1 + 1.71790550668732 * H1x3_2
+ 0.54214423164791 * H1x3_3 + 1.23934237110052 * H1x3_4 + -0.5426823885329 * H1x3_5 ;
1243234   +   H2x1_4  = H2x1_4  +     0.63501991890118 * H1x3_1
1243235   +          +     0.52608732282548 * H1x3_2  +     1.05849455171994 * H1x3_3
1243236   +          +    -0.10988994454917 * H1x3_4  +     -0.4296682351699 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 0.63501991890118 * H1x3_1 + 0.52608732282548 * H1x3_2
+ 1.05849455171994 * H1x3_3 + -0.10988994454917 * H1x3_4 + -0.4296682351699 * H1x3_5 ;
1243237   +   H2x1_1  =     1.65760855975376 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.65760855975376 + H2x1_1 ;
1243238   +   H2x1_2  =    -1.48092067999918 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -1.48092067999918 + H2x1_2 ;
1243239   +   H2x1_3  =     0.34293203475136 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 0.34293203475136 + H2x1_3 ;
1243240   +   H2x1_4  =     2.26730807690838 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 2.26730807690838 + H2x1_4 ;
1243241   +   H2x1_5  = 0;
MPRINT(EM_DIAGRAM):   H2x1_5 = 0;
1243242   +   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 );
1243243   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1243244   +   H2x1_1  = EXP(H2x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_1 = EXP(H2x1_1 - _MAX_);
1243245   +   _SUM_ = _SUM_ + H2x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_1 ;
1243246   +   H2x1_2  = EXP(H2x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_2 = EXP(H2x1_2 - _MAX_);
1243247   +   _SUM_ = _SUM_ + H2x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_2 ;
1243248   +   H2x1_3  = EXP(H2x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_3 = EXP(H2x1_3 - _MAX_);
1243249   +   _SUM_ = _SUM_ + H2x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_3 ;
1243250   +   H2x1_4  = EXP(H2x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_4 = EXP(H2x1_4 - _MAX_);
1243251   +   _SUM_ = _SUM_ + H2x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_4 ;
1243252   +   H2x1_5  = EXP(H2x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_5 = EXP(H2x1_5 - _MAX_);
1243253   +   _SUM_ = _SUM_ + H2x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_5 ;
1243254   +   H2x1_1  = H2x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 / _SUM_;
1243255   +   H2x1_2  = H2x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 / _SUM_;
1243256   +   H2x1_3  = H2x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 / _SUM_;
1243257   +   H2x1_4  = H2x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 / _SUM_;
1243258   +   H2x1_5  = H2x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 / _SUM_;
1243259   +END;
MPRINT(EM_DIAGRAM):   END;
1243260   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1243261   +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
1243262   +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
1243263   +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
1243264   +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
1243265   +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
1243266   +END;
MPRINT(EM_DIAGRAM):   END;
1243267   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1243268   +*** Writing the Node H2x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x2_ ;
1243269   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1243270   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1243271   +   H2x2_1  =     0.35487648363729 * H1x1_1  +    -1.23352844324567 * H1x1_2
1243272   +          +      0.4867158313468 * H1x1_3  +    -1.47292809903753 * H1x1_4
1243273   +          +    -1.00833023262854 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = 0.35487648363729 * H1x1_1 + -1.23352844324567 * H1x1_2 +
0.4867158313468 * H1x1_3 + -1.47292809903753 * H1x1_4 + -1.00833023262854 * H1x1_5 ;
1243274   +   H2x2_2  =     1.32087363094324 * H1x1_1  +     0.82502983555141 * H1x1_2
1243275   +          +    -0.68621854188154 * H1x1_3  +     1.98219533394448 * H1x1_4
1243276   +          +     0.24099626891211 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = 1.32087363094324 * H1x1_1 + 0.82502983555141 * H1x1_2 +
-0.68621854188154 * H1x1_3 + 1.98219533394448 * H1x1_4 + 0.24099626891211 * H1x1_5 ;
1243277   +   H2x2_3  =     1.19516705715854 * H1x1_1  +    -0.20476587977538 * H1x1_2
1243278   +          +    -2.69435199012833 * H1x1_3  +      1.1085509496662 * H1x1_4
1243279   +          +    -0.95845782501191 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = 1.19516705715854 * H1x1_1 + -0.20476587977538 * H1x1_2 +
-2.69435199012833 * H1x1_3 + 1.1085509496662 * H1x1_4 + -0.95845782501191 * H1x1_5 ;
1243280   +   H2x2_4  =     0.80435775915951 * H1x1_1  +     1.81751702761299 * H1x1_2
1243281   +          +     0.07722876002556 * H1x1_3  +    -0.41957373993392 * H1x1_4
1243282   +          +    -1.39341356039439 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = 0.80435775915951 * H1x1_1 + 1.81751702761299 * H1x1_2 +
0.07722876002556 * H1x1_3 + -0.41957373993392 * H1x1_4 + -1.39341356039439 * H1x1_5 ;
1243283   +   H2x2_1  = H2x2_1  +     0.84230993439042 * H1x2_1
1243284   +          +      1.4931541058726 * H1x2_2  +     0.29113033361443 * H1x2_3
1243285   +          +     0.58117372781043 * H1x2_4  +     0.21183820652904 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + 0.84230993439042 * H1x2_1 + 1.4931541058726 * H1x2_2 +
0.29113033361443 * H1x2_3 + 0.58117372781043 * H1x2_4 + 0.21183820652904 * H1x2_5 ;
1243286   +   H2x2_2  = H2x2_2  +     0.27560928585641 * H1x2_1
1243287   +          +     1.00352880610395 * H1x2_2  +     1.86342723621296 * H1x2_3
1243288   +          +     0.68698974361713 * H1x2_4  +     1.62443344475228 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + 0.27560928585641 * H1x2_1 + 1.00352880610395 * H1x2_2
+ 1.86342723621296 * H1x2_3 + 0.68698974361713 * H1x2_4 + 1.62443344475228 * H1x2_5 ;
1243289   +   H2x2_3  = H2x2_3  +     0.59362453125998 * H1x2_1
1243290   +          +     2.21434215943762 * H1x2_2  +     0.00697391860503 * H1x2_3
1243291   +          +     0.52298455671378 * H1x2_4  +    -1.36319907473823 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 + 0.59362453125998 * H1x2_1 + 2.21434215943762 * H1x2_2
+ 0.00697391860503 * H1x2_3 + 0.52298455671378 * H1x2_4 + -1.36319907473823 * H1x2_5 ;
1243292   +   H2x2_4  = H2x2_4  +     0.87949581153547 * H1x2_1
1243293   +          +     0.52867495476492 * H1x2_2  +    -0.30823702050003 * H1x2_3
1243294   +          +     1.30732992472712 * H1x2_4  +    -0.93335113891701 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 + 0.87949581153547 * H1x2_1 + 0.52867495476492 * H1x2_2
+ -0.30823702050003 * H1x2_3 + 1.30732992472712 * H1x2_4 + -0.93335113891701 * H1x2_5 ;
1243295   +   H2x2_1  = H2x2_1  +    -0.18546949662618 * H1x3_1
1243296   +          +     0.12449215628678 * H1x3_2  +    -0.06904718348363 * H1x3_3
1243297   +          +     1.64236464165721 * H1x3_4  +      0.6073731959408 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + -0.18546949662618 * H1x3_1 + 0.12449215628678 * H1x3_2
+ -0.06904718348363 * H1x3_3 + 1.64236464165721 * H1x3_4 + 0.6073731959408 * H1x3_5 ;
1243298   +   H2x2_2  = H2x2_2  +    -0.65604349417832 * H1x3_1
1243299   +          +    -0.36719791640957 * H1x3_2  +     0.13320126120657 * H1x3_3
1243300   +          +     0.18159276955134 * H1x3_4  +     2.58327741985853 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + -0.65604349417832 * H1x3_1 + -0.36719791640957 *
H1x3_2 + 0.13320126120657 * H1x3_3 + 0.18159276955134 * H1x3_4 + 2.58327741985853 * H1x3_5 ;
1243301   +   H2x2_3  = H2x2_3  +     0.91638163706166 * H1x3_1
1243302   +          +    -0.47067218080648 * H1x3_2  +    -1.48968450897101 * H1x3_3
1243303   +          +     1.31187282169231 * H1x3_4  +     -0.2874693423684 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 + 0.91638163706166 * H1x3_1 + -0.47067218080648 * H1x3_2
+ -1.48968450897101 * H1x3_3 + 1.31187282169231 * H1x3_4 + -0.2874693423684 * H1x3_5 ;
1243304   +   H2x2_4  = H2x2_4  +     0.53560065193109 * H1x3_1
1243305   +          +    -1.15405943087628 * H1x3_2  +     0.12331054856276 * H1x3_3
1243306   +          +     -1.4665768024733 * H1x3_4  +    -0.08015819920106 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 + 0.53560065193109 * H1x3_1 + -1.15405943087628 * H1x3_2
+ 0.12331054856276 * H1x3_3 + -1.4665768024733 * H1x3_4 + -0.08015819920106 * H1x3_5 ;
1243307   +   H2x2_1  =     1.14294113680807 + H2x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = 1.14294113680807 + H2x2_1 ;
1243308   +   H2x2_2  =     0.23029998902452 + H2x2_2 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = 0.23029998902452 + H2x2_2 ;
1243309   +   H2x2_3  =     0.09214575938404 + H2x2_3 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = 0.09214575938404 + H2x2_3 ;
1243310   +   H2x2_4  =    -1.18247593420886 + H2x2_4 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = -1.18247593420886 + H2x2_4 ;
1243311   +   H2x2_5  = 0;
MPRINT(EM_DIAGRAM):   H2x2_5 = 0;
1243312   +   _MAX_ = MAX (H2x2_1 , H2x2_2 , H2x2_3 , H2x2_4 , H2x2_5 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x2_1 , H2x2_2 , H2x2_3 , H2x2_4 , H2x2_5 );
1243313   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1243314   +   H2x2_1  = EXP(H2x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_1 = EXP(H2x2_1 - _MAX_);
1243315   +   _SUM_ = _SUM_ + H2x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_1 ;
1243316   +   H2x2_2  = EXP(H2x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_2 = EXP(H2x2_2 - _MAX_);
1243317   +   _SUM_ = _SUM_ + H2x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_2 ;
1243318   +   H2x2_3  = EXP(H2x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_3 = EXP(H2x2_3 - _MAX_);
1243319   +   _SUM_ = _SUM_ + H2x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_3 ;
1243320   +   H2x2_4  = EXP(H2x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_4 = EXP(H2x2_4 - _MAX_);
1243321   +   _SUM_ = _SUM_ + H2x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_4 ;
1243322   +   H2x2_5  = EXP(H2x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_5 = EXP(H2x2_5 - _MAX_);
1243323   +   _SUM_ = _SUM_ + H2x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_5 ;
1243324   +   H2x2_1  = H2x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 / _SUM_;
1243325   +   H2x2_2  = H2x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 / _SUM_;
1243326   +   H2x2_3  = H2x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 / _SUM_;
1243327   +   H2x2_4  = H2x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 / _SUM_;
1243328   +   H2x2_5  = H2x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 / _SUM_;
1243329   +END;
MPRINT(EM_DIAGRAM):   END;
1243330   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1243331   +   H2x2_1  = .;
MPRINT(EM_DIAGRAM):   H2x2_1 = .;
1243332   +   H2x2_2  = .;
MPRINT(EM_DIAGRAM):   H2x2_2 = .;
1243333   +   H2x2_3  = .;
MPRINT(EM_DIAGRAM):   H2x2_3 = .;
1243334   +   H2x2_4  = .;
MPRINT(EM_DIAGRAM):   H2x2_4 = .;
1243335   +   H2x2_5  = .;
MPRINT(EM_DIAGRAM):   H2x2_5 = .;
1243336   +END;
MPRINT(EM_DIAGRAM):   END;
1243337   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1243338   +*** Writing the Node H3x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H3x1_ ;
1243339   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1243340   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1243341   +   H3x1_1  =     0.38781845364667 * H2x1_1  +    -1.29333236344932 * H2x1_2
1243342   +          +    -0.39452648844304 * H2x1_3  +    -1.74269898056816 * H2x1_4
1243343   +          +     0.80663208970159 * H2x1_5 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = 0.38781845364667 * H2x1_1 + -1.29333236344932 * H2x1_2 +
-0.39452648844304 * H2x1_3 + -1.74269898056816 * H2x1_4 + 0.80663208970159 * H2x1_5 ;
1243344   +   H3x1_2  =     3.42138045838852 * H2x1_1  +    -2.53755815247586 * H2x1_2
1243345   +          +     1.21718290783021 * H2x1_3  +    -5.59742312960418 * H2x1_4
1243346   +          +     0.93331767575635 * H2x1_5 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = 3.42138045838852 * H2x1_1 + -2.53755815247586 * H2x1_2 +
1.21718290783021 * H2x1_3 + -5.59742312960418 * H2x1_4 + 0.93331767575635 * H2x1_5 ;
1243347   +   H3x1_3  =      0.3066875685513 * H2x1_1  +     0.06212172151661 * H2x1_2
1243348   +          +     0.54975837436313 * H2x1_3  +    -2.01758242649336 * H2x1_4
1243349   +          +     -1.5405169528484 * H2x1_5 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = 0.3066875685513 * H2x1_1 + 0.06212172151661 * H2x1_2 +
0.54975837436313 * H2x1_3 + -2.01758242649336 * H2x1_4 + -1.5405169528484 * H2x1_5 ;
1243350   +   H3x1_4  =     0.75238654454663 * H2x1_1  +      0.8605688517794 * H2x1_2
1243351   +          +    -1.18675726977521 * H2x1_3  +    -0.23106123144614 * H2x1_4
1243352   +          +    -0.26022301590207 * H2x1_5 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = 0.75238654454663 * H2x1_1 + 0.8605688517794 * H2x1_2 +
-1.18675726977521 * H2x1_3 + -0.23106123144614 * H2x1_4 + -0.26022301590207 * H2x1_5 ;
1243353   +   H3x1_1  = H3x1_1  +     -1.9857802180333 * H2x2_1
1243354   +          +    -1.83746541265988 * H2x2_2  +    -0.19991218509663 * H2x2_3
1243355   +          +    -1.16358880876987 * H2x2_4  +     0.72072728861384 * H2x2_5 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 + -1.9857802180333 * H2x2_1 + -1.83746541265988 * H2x2_2
+ -0.19991218509663 * H2x2_3 + -1.16358880876987 * H2x2_4 + 0.72072728861384 * H2x2_5 ;
1243356   +   H3x1_2  = H3x1_2  +     0.96937540396367 * H2x2_1
1243357   +          +    -0.36649624165623 * H2x2_2  +     0.89618563330616 * H2x2_3
1243358   +          +    -0.84224721075989 * H2x2_4  +     0.43309698013395 * H2x2_5 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = H3x1_2 + 0.96937540396367 * H2x2_1 + -0.36649624165623 * H2x2_2
+ 0.89618563330616 * H2x2_3 + -0.84224721075989 * H2x2_4 + 0.43309698013395 * H2x2_5 ;
1243359   +   H3x1_3  = H3x1_3  +    -0.90225214765586 * H2x2_1
1243360   +          +     0.02136319386846 * H2x2_2  +    -0.46868394918483 * H2x2_3
1243361   +          +     0.56005845701528 * H2x2_4  +     -1.2510120440755 * H2x2_5 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = H3x1_3 + -0.90225214765586 * H2x2_1 + 0.02136319386846 * H2x2_2
+ -0.46868394918483 * H2x2_3 + 0.56005845701528 * H2x2_4 + -1.2510120440755 * H2x2_5 ;
1243362   +   H3x1_4  = H3x1_4  +    -0.50993520854009 * H2x2_1
1243363   +          +    -2.07093806498525 * H2x2_2  +      0.4129198676448 * H2x2_3
1243364   +          +     0.26049404756746 * H2x2_4  +     2.51376895456424 * H2x2_5 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = H3x1_4 + -0.50993520854009 * H2x2_1 + -2.07093806498525 *
H2x2_2 + 0.4129198676448 * H2x2_3 + 0.26049404756746 * H2x2_4 + 2.51376895456424 * H2x2_5 ;
1243365   +   H3x1_1  =    -0.83299285935592 + H3x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = -0.83299285935592 + H3x1_1 ;
1243366   +   H3x1_2  =     1.30330978853872 + H3x1_2 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = 1.30330978853872 + H3x1_2 ;
1243367   +   H3x1_3  =    -2.12788819064089 + H3x1_3 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = -2.12788819064089 + H3x1_3 ;
1243368   +   H3x1_4  =    -2.20240058017016 + H3x1_4 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = -2.20240058017016 + H3x1_4 ;
1243369   +   H3x1_5  = 0;
MPRINT(EM_DIAGRAM):   H3x1_5 = 0;
1243370   +   _MAX_ = MAX (H3x1_1 , H3x1_2 , H3x1_3 , H3x1_4 , H3x1_5 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H3x1_1 , H3x1_2 , H3x1_3 , H3x1_4 , H3x1_5 );
1243371   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1243372   +   H3x1_1  = EXP(H3x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_1 = EXP(H3x1_1 - _MAX_);
1243373   +   _SUM_ = _SUM_ + H3x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_1 ;
1243374   +   H3x1_2  = EXP(H3x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_2 = EXP(H3x1_2 - _MAX_);
1243375   +   _SUM_ = _SUM_ + H3x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_2 ;
1243376   +   H3x1_3  = EXP(H3x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_3 = EXP(H3x1_3 - _MAX_);
1243377   +   _SUM_ = _SUM_ + H3x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_3 ;
1243378   +   H3x1_4  = EXP(H3x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_4 = EXP(H3x1_4 - _MAX_);
1243379   +   _SUM_ = _SUM_ + H3x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_4 ;
1243380   +   H3x1_5  = EXP(H3x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_5 = EXP(H3x1_5 - _MAX_);
1243381   +   _SUM_ = _SUM_ + H3x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_5 ;
1243382   +   H3x1_1  = H3x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 / _SUM_;
1243383   +   H3x1_2  = H3x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_2 = H3x1_2 / _SUM_;
1243384   +   H3x1_3  = H3x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_3 = H3x1_3 / _SUM_;
1243385   +   H3x1_4  = H3x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_4 = H3x1_4 / _SUM_;
1243386   +   H3x1_5  = H3x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_5 = H3x1_5 / _SUM_;
1243387   +END;
MPRINT(EM_DIAGRAM):   END;
1243388   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1243389   +   H3x1_1  = .;
MPRINT(EM_DIAGRAM):   H3x1_1 = .;
1243390   +   H3x1_2  = .;
MPRINT(EM_DIAGRAM):   H3x1_2 = .;
1243391   +   H3x1_3  = .;
MPRINT(EM_DIAGRAM):   H3x1_3 = .;
1243392   +   H3x1_4  = .;
MPRINT(EM_DIAGRAM):   H3x1_4 = .;
1243393   +   H3x1_5  = .;
MPRINT(EM_DIAGRAM):   H3x1_5 = .;
1243394   +END;
MPRINT(EM_DIAGRAM):   END;
1243395   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1243396   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1243397   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1243398   +
1243399   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1243400   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1243401   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1243402   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1243403   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1243404   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1243405   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1243406   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1243407   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1243408   +end;
MPRINT(EM_DIAGRAM):   end;
1243409   +else do;
MPRINT(EM_DIAGRAM):   else do;
1243410   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1243411   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1243412   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1243413   +   end;
MPRINT(EM_DIAGRAM):   end;
1243414   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1243415   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1243416   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1243417   +   end;
MPRINT(EM_DIAGRAM):   end;
1243418   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1243419   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1243420   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1243421   +   end;
MPRINT(EM_DIAGRAM):   end;
1243422   +end;
MPRINT(EM_DIAGRAM):   end;
1243423   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1243424   +   P_DepVar1  =     0.02793808059597 * H3x1_1  +    -8.41365271594755 * H3x1_2
1243425   +          +    -0.18933524733979 * H3x1_3  +     1.61020422729446 * H3x1_4
1243426   +          +     7.51494112828021 * H3x1_5 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.02793808059597 * H3x1_1 + -8.41365271594755 * H3x1_2 +
-0.18933524733979 * H3x1_3 + 1.61020422729446 * H3x1_4 + 7.51494112828021 * H3x1_5 ;
1243427   +   P_DepVar1  =     0.83962115399384 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.83962115399384 + P_DepVar1 ;
1243428   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1243429   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1243430   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1243431   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1243432   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1243433   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1243434   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1243435   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1243436   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1243437   +END;
MPRINT(EM_DIAGRAM):   END;
1243438   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1243439   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1243440   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1243441   +END;
MPRINT(EM_DIAGRAM):   END;
1243442   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1243443   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1243444   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1243445   +END;
MPRINT(EM_DIAGRAM):   END;
1243446   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1243447   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1243448   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1243449   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1243450   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1243451   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1243452   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1243453   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1243454   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1243455   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1243456   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1243457   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1243458   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1243459   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1243460   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1243461   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1243462   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1243463   +END;
MPRINT(EM_DIAGRAM):   END;
1243464   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1243465   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1243466   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1243467   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1243468   +* Renaming variables for AutoNeural10;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural10;
1243469   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1243470   +* Renaming Posterior variables for AutoNeural10;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural10;
1243471   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1243472   +drop AutoNeural10_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural10_P_DepVar1;
1243473   +AutoNeural10_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural10_P_DepVar1 = P_DepVar1;
1243474   +drop AutoNeural10_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural10_P_DepVar0;
1243475   +AutoNeural10_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural10_P_DepVar0 = P_DepVar0;
1243476   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1243477   +* Renaming _WARN_ variable for AutoNeural10;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural10;
1243478   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1243479   +length AutoNeural10_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural10_WARN_ $4;
1243480   +drop AutoNeural10_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural10_WARN_;
1243481   +AutoNeural10_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural10_WARN_ = _WARN_;
1243482   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1243483   +* Ensmbl46: Scoring Code of model 2 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl46: Scoring Code of model 2 of 5;
1243484   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1243485   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1243486   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
1243487   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1243488   +* NODE: AutoNeural7;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural7;
1243489   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1243490   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1243491   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1243492   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1243493   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1243494   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1243495   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1243496   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1243497   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1243498   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1243499   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1243500   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1243501   +LENGTH _WARN_ $4
1243502   +      F_DepVar  $ 12
1243503   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1243504   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1243505   +
1243506   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1243507   +
1243508   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1243509   +
1243510   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1243511   +
1243512   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1243513   +
1243514   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1243515   +
1243516   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1243517   +
1243518   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1243519   +
1243520   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1243521   +
1243522   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1243523   +
1243524   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1243525   +
1243526   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1243527   +
1243528   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1243529   +
1243530   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1243531   +
1243532   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1243533   +
1243534   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1243535   +
1243536   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1243537   +
1243538   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1243539   +
1243540   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1243541   +
1243542   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1243543   +
1243544   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1243545   +
1243546   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1243547   +
1243548   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1243549   +
1243550   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1243551   +
1243552   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1243553   +
1243554   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1243555   +
1243556   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1243557   +
1243558   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1243559   +
1243560   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1243561   +
1243562   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1243563   +
1243564   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1243565   +
1243566   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1243567   +
1243568   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1243569   +
1243570   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1243571   +
1243572   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1243573   +
1243574   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1243575   +
1243576   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1243577   +
1243578   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1243579   +
1243580   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
1243581   +
1243582   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
1243583   +
1243584   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1243585   +
1243586   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1243587   +
1243588   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1243589   +
1243590   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1243591   +
1243592   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1243593   +
1243594   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1243595   +
1243596   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1243597   +
1243598   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1243599   +
1243600   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1243601   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1243602   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1243603   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1243604   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1243605   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1243606   +end;
MPRINT(EM_DIAGRAM):   end;
1243607   +else do;
MPRINT(EM_DIAGRAM):   else do;
1243608   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1243609   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1243610   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1243611   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1243612   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1243613   +   end;
MPRINT(EM_DIAGRAM):   end;
1243614   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1243615   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1243616   +   end;
MPRINT(EM_DIAGRAM):   end;
1243617   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1243618   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1243619   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1243620   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1243621   +   end;
MPRINT(EM_DIAGRAM):   end;
1243622   +end;
MPRINT(EM_DIAGRAM):   end;
1243623   +
1243624   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1243625   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1243626   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1243627   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1243628   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1243629   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1243630   +end;
MPRINT(EM_DIAGRAM):   end;
1243631   +else do;
MPRINT(EM_DIAGRAM):   else do;
1243632   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1243633   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1243634   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1243635   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1243636   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1243637   +   end;
MPRINT(EM_DIAGRAM):   end;
1243638   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1243639   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1243640   +   end;
MPRINT(EM_DIAGRAM):   end;
1243641   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1243642   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1243643   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1243644   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1243645   +   end;
MPRINT(EM_DIAGRAM):   end;
1243646   +end;
MPRINT(EM_DIAGRAM):   end;
1243647   +
1243648   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1243649   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1243650   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1243651   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1243652   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1243653   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1243654   +end;
MPRINT(EM_DIAGRAM):   end;
1243655   +else do;
MPRINT(EM_DIAGRAM):   else do;
1243656   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1243657   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1243658   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1243659   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1243660   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1243661   +   end;
MPRINT(EM_DIAGRAM):   end;
1243662   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1243663   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1243664   +   end;
MPRINT(EM_DIAGRAM):   end;
1243665   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1243666   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1243667   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1243668   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1243669   +   end;
MPRINT(EM_DIAGRAM):   end;
1243670   +end;
MPRINT(EM_DIAGRAM):   end;
1243671   +
1243672   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1243673   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1243674   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1243675   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1243676   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1243677   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1243678   +end;
MPRINT(EM_DIAGRAM):   end;
1243679   +else do;
MPRINT(EM_DIAGRAM):   else do;
1243680   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1243681   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1243682   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1243683   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1243684   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1243685   +   end;
MPRINT(EM_DIAGRAM):   end;
1243686   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1243687   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1243688   +   end;
MPRINT(EM_DIAGRAM):   end;
1243689   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1243690   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1243691   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1243692   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1243693   +   end;
MPRINT(EM_DIAGRAM):   end;
1243694   +end;
MPRINT(EM_DIAGRAM):   end;
1243695   +
1243696   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1243697   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1243698   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1243699   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1243700   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1243701   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1243702   +end;
MPRINT(EM_DIAGRAM):   end;
1243703   +else do;
MPRINT(EM_DIAGRAM):   else do;
1243704   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1243705   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1243706   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1243707   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1243708   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1243709   +   end;
MPRINT(EM_DIAGRAM):   end;
1243710   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1243711   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1243712   +   end;
MPRINT(EM_DIAGRAM):   end;
1243713   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1243714   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1243715   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1243716   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1243717   +   end;
MPRINT(EM_DIAGRAM):   end;
1243718   +end;
MPRINT(EM_DIAGRAM):   end;
1243719   +
1243720   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1243721   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1243722   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1243723   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1243724   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1243725   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1243726   +end;
MPRINT(EM_DIAGRAM):   end;
1243727   +else do;
MPRINT(EM_DIAGRAM):   else do;
1243728   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1243729   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1243730   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1243731   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1243732   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1243733   +   end;
MPRINT(EM_DIAGRAM):   end;
1243734   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1243735   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1243736   +   end;
MPRINT(EM_DIAGRAM):   end;
1243737   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1243738   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1243739   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1243740   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1243741   +   end;
MPRINT(EM_DIAGRAM):   end;
1243742   +end;
MPRINT(EM_DIAGRAM):   end;
1243743   +
1243744   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1243745   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1243746   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1243747   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1243748   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1243749   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1243750   +end;
MPRINT(EM_DIAGRAM):   end;
1243751   +else do;
MPRINT(EM_DIAGRAM):   else do;
1243752   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1243753   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1243754   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1243755   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1243756   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1243757   +   end;
MPRINT(EM_DIAGRAM):   end;
1243758   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1243759   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1243760   +   end;
MPRINT(EM_DIAGRAM):   end;
1243761   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1243762   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1243763   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1243764   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1243765   +   end;
MPRINT(EM_DIAGRAM):   end;
1243766   +end;
MPRINT(EM_DIAGRAM):   end;
1243767   +
1243768   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1243769   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
1243770   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1243771   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1243772   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1243773   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1243774   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1243775   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1243776   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1243777   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1243778   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1243779   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1243780   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1243781   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1243782   +end;
MPRINT(EM_DIAGRAM):   end;
1243783   +else do;
MPRINT(EM_DIAGRAM):   else do;
1243784   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1243785   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1243786   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1243787   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1243788   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1243789   +   end;
MPRINT(EM_DIAGRAM):   end;
1243790   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1243791   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1243792   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1243793   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1243794   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1243795   +   end;
MPRINT(EM_DIAGRAM):   end;
1243796   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1243797   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1243798   +   end;
MPRINT(EM_DIAGRAM):   end;
1243799   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1243800   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1243801   +   end;
MPRINT(EM_DIAGRAM):   end;
1243802   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1243803   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1243804   +   end;
MPRINT(EM_DIAGRAM):   end;
1243805   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1243806   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1243807   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1243808   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1243809   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1243810   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1243811   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1243812   +   end;
MPRINT(EM_DIAGRAM):   end;
1243813   +end;
MPRINT(EM_DIAGRAM):   end;
1243814   +
1243815   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1243816   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1243817   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
1243818   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1243819   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1243820   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1243821   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1243822   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1243823   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1243824   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1243825   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1243826   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1243827   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1243828   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1243829   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1243830   +end;
MPRINT(EM_DIAGRAM):   end;
1243831   +else do;
MPRINT(EM_DIAGRAM):   else do;
1243832   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1243833   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1243834   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1243835   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1243836   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1243837   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1243838   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1243839   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1243840   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1243841   +         end;
MPRINT(EM_DIAGRAM):   end;
1243842   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1243843   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1243844   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1243845   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1243846   +            end;
MPRINT(EM_DIAGRAM):   end;
1243847   +         end;
MPRINT(EM_DIAGRAM):   end;
1243848   +      end;
MPRINT(EM_DIAGRAM):   end;
1243849   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1243850   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1243851   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1243852   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1243853   +         end;
MPRINT(EM_DIAGRAM):   end;
1243854   +      end;
MPRINT(EM_DIAGRAM):   end;
1243855   +   end;
MPRINT(EM_DIAGRAM):   end;
1243856   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1243857   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1243858   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1243859   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1243860   +      end;
MPRINT(EM_DIAGRAM):   end;
1243861   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1243862   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1243863   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1243864   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1243865   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1243866   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1243867   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1243868   +         end;
MPRINT(EM_DIAGRAM):   end;
1243869   +      end;
MPRINT(EM_DIAGRAM):   end;
1243870   +   end;
MPRINT(EM_DIAGRAM):   end;
1243871   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1243872   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1243873   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1243874   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1243875   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1243876   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1243877   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1243878   +   end;
MPRINT(EM_DIAGRAM):   end;
1243879   +end;
MPRINT(EM_DIAGRAM):   end;
1243880   +
1243881   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1243882   +*** Checking missing input Interval
1243883   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1243884   +
1243885   +IF NMISS(
1243886   +   AcceptedCmpTotal ,
1243887   +   Age ,
1243888   +   Frq ,
1243889   +   Income ,
1243890   +   Kidhome ,
1243891   +   Mnt ,
1243892   +   MntFishProducts ,
1243893   +   MntFruits ,
1243894   +   MntGoldProds ,
1243895   +   MntMeatProducts ,
1243896   +   MntSweetProducts ,
1243897   +   MntWines ,
1243898   +   MonthsAsCustomer ,
1243899   +   NumCatalogPurchases ,
1243900   +   NumDealsPurchases ,
1243901   +   NumDistPurchases ,
1243902   +   NumStorePurchases ,
1243903   +   NumWebPurchases ,
1243904   +   NumWebVisitsMonth ,
1243905   +   RFMstat ,
1243906   +   RMntFrq ,
1243907   +   Recency ,
1243908   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
1243909   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1243910   +
1243911   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1243912   +END;
MPRINT(EM_DIAGRAM):   END;
1243913   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1243914   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
1243915   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1243916   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1243917   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1243918   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1243919   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1243920   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1243921   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1243922   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1243923   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1243924   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1243925   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1243926   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1243927   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1243928   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1243929   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1243930   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1243931   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1243932   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1243933   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1243934   +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
1243935   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 *
MonthsAsCustomer ;
1243936   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1243937   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1243938   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1243939   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1243940   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1243941   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1243942   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1243943   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1243944   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1243945   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1243946   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1243947   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1243948   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1243949   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1243950   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1243951   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1243952   +END;
MPRINT(EM_DIAGRAM):   END;
1243953   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1243954   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1243955   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1243956   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1243957   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1243958   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1243959   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1243960   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1243961   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1243962   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1243963   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1243964   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1243965   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1243966   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1243967   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1243968   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1243969   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1243970   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1243971   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1243972   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1243973   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1243974   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1243975   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1243976   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1243977   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1243978   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1243979   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1243980   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1243981   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1243982   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1243983   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1243984   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1243985   +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
1243986   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 *
MonthsAsCustomer ;
1243987   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1243988   +   ELSE S_NumCatalogPurchases
1243989   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1243990   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1243991   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1243992   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1243993   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1243994   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1243995   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1243996   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1243997   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1243998   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1243999   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1244000   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1244001   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1244002   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1244003   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1244004   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1244005   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1244006   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1244007   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1244008   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1244009   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1244010   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1244011   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1244012   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1244013   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1244014   +END;
MPRINT(EM_DIAGRAM):   END;
1244015   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1244016   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
1244017   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1244018   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1244019   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
1244020   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1244021   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1244022   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
1244023   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1244024   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1244025   +   H1x1_1  =     0.26227897937716 * S_AcceptedCmpTotal
1244026   +          +     -0.0155758157867 * S_Age  +    -0.20268934440257 * S_Frq
1244027   +          +    -0.18529976542103 * S_Income  +     0.18038928903961 *
1244028   +        S_Kidhome  +    -0.28961354349068 * S_Mnt  +    -0.05151010840858 *
1244029   +        S_MntFishProducts  +    -0.03759341636928 * S_MntFruits
1244030   +          +     0.01305575717465 * S_MntGoldProds  +     0.24307680778257 *
1244031   +        S_MntMeatProducts  +    -0.02893363709307 * S_MntSweetProducts
1244032   +          +    -0.35324697751403 * S_MntWines  +    -0.00781254837323 *
1244033   +        S_MonthsAsCustomer  +     0.15222992290422 * S_NumCatalogPurchases
1244034   +          +     0.09708841024031 * S_NumDealsPurchases
1244035   +          +    -0.29075561032014 * S_NumDistPurchases
1244036   +          +    -0.14495394259873 * S_NumStorePurchases
1244037   +          +     0.11890705145732 * S_NumWebPurchases
1244038   +          +    -0.16954189911344 * S_NumWebVisitsMonth
1244039   +          +     0.12377939462638 * S_RFMstat  +    -0.05870604523801 *
1244040   +        S_RMntFrq  +     0.17150719398884 * S_Recency
1244041   +          +     0.13642607109645 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.26227897937716 * S_AcceptedCmpTotal + -0.0155758157867 *
S_Age + -0.20268934440257 * S_Frq + -0.18529976542103 * S_Income + 0.18038928903961 *
S_Kidhome + -0.28961354349068 * S_Mnt + -0.05151010840858 * S_MntFishProducts +
-0.03759341636928 * S_MntFruits + 0.01305575717465 * S_MntGoldProds + 0.24307680778257 *
S_MntMeatProducts + -0.02893363709307 * S_MntSweetProducts + -0.35324697751403 * S_MntWines +
-0.00781254837323 * S_MonthsAsCustomer + 0.15222992290422 * S_NumCatalogPurchases +
0.09708841024031 * S_NumDealsPurchases + -0.29075561032014 * S_NumDistPurchases +
-0.14495394259873 * S_NumStorePurchases + 0.11890705145732 * S_NumWebPurchases +
-0.16954189911344 * S_NumWebVisitsMonth + 0.12377939462638 * S_RFMstat + -0.05870604523801 *
S_RMntFrq + 0.17150719398884 * S_Recency + 0.13642607109645 * S_Teenhome ;
1244042   +   H1x1_2  =     0.26173967942961 * S_AcceptedCmpTotal
1244043   +          +    -0.00424968908882 * S_Age  +    -0.07102902276221 * S_Frq
1244044   +          +     0.17373040625452 * S_Income  +    -0.12612693849717 *
1244045   +        S_Kidhome  +    -0.40114393645566 * S_Mnt  +    -0.06800009910731 *
1244046   +        S_MntFishProducts  +    -0.06681994193124 * S_MntFruits
1244047   +          +     0.00602505287702 * S_MntGoldProds  +     0.29533767747106 *
1244048   +        S_MntMeatProducts  +    -0.06832235425976 * S_MntSweetProducts
1244049   +          +    -0.44970327281811 * S_MntWines  +    -0.01061648191158 *
1244050   +        S_MonthsAsCustomer  +      0.3402332775449 * S_NumCatalogPurchases
1244051   +          +     0.16274478997892 * S_NumDealsPurchases
1244052   +          +     0.03966958784582 * S_NumDistPurchases
1244053   +          +    -0.04714110726598 * S_NumStorePurchases
1244054   +          +    -0.02124229528082 * S_NumWebPurchases
1244055   +          +     0.29753299776832 * S_NumWebVisitsMonth
1244056   +          +     0.08114418100212 * S_RFMstat  +     0.39051989081881 *
1244057   +        S_RMntFrq  +     -0.3340129986623 * S_Recency
1244058   +          +    -0.11108871458308 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.26173967942961 * S_AcceptedCmpTotal + -0.00424968908882 *
S_Age + -0.07102902276221 * S_Frq + 0.17373040625452 * S_Income + -0.12612693849717 *
S_Kidhome + -0.40114393645566 * S_Mnt + -0.06800009910731 * S_MntFishProducts +
-0.06681994193124 * S_MntFruits + 0.00602505287702 * S_MntGoldProds + 0.29533767747106 *
S_MntMeatProducts + -0.06832235425976 * S_MntSweetProducts + -0.44970327281811 * S_MntWines +
-0.01061648191158 * S_MonthsAsCustomer + 0.3402332775449 * S_NumCatalogPurchases +
0.16274478997892 * S_NumDealsPurchases + 0.03966958784582 * S_NumDistPurchases +
-0.04714110726598 * S_NumStorePurchases + -0.02124229528082 * S_NumWebPurchases +
0.29753299776832 * S_NumWebVisitsMonth + 0.08114418100212 * S_RFMstat + 0.39051989081881 *
S_RMntFrq + -0.3340129986623 * S_Recency + -0.11108871458308 * S_Teenhome ;
1244059   +   H1x1_1  = H1x1_1  +      0.1756873442571 * AcceptedCmp10
1244060   +          +     0.31180024044306 * AcceptedCmp20  +     0.29619883713337 *
1244061   +        AcceptedCmp30  +     0.30154500722412 * AcceptedCmp40
1244062   +          +     0.19297823461379 * AcceptedCmp50  +     -0.2612666063344 *
1244063   +        Complain0  +    -0.07979877068908 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.1756873442571 * AcceptedCmp10 + 0.31180024044306 *
AcceptedCmp20 + 0.29619883713337 * AcceptedCmp30 + 0.30154500722412 * AcceptedCmp40 +
0.19297823461379 * AcceptedCmp50 + -0.2612666063344 * Complain0 + -0.07979877068908 *
HigherEducationBinary0 ;
1244064   +   H1x1_2  = H1x1_2  +      0.0093987850789 * AcceptedCmp10
1244065   +          +     0.01121417299451 * AcceptedCmp20  +     0.02978720081114 *
1244066   +        AcceptedCmp30  +     0.03675035164823 * AcceptedCmp40
1244067   +          +      0.0326403700043 * AcceptedCmp50  +     0.12620299225555 *
1244068   +        Complain0  +    -0.08132205666396 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.0093987850789 * AcceptedCmp10 + 0.01121417299451 *
AcceptedCmp20 + 0.02978720081114 * AcceptedCmp30 + 0.03675035164823 * AcceptedCmp40 +
0.0326403700043 * AcceptedCmp50 + 0.12620299225555 * Complain0 + -0.08132205666396 *
HigherEducationBinary0 ;
1244069   +   H1x1_1  = H1x1_1  +    -0.03360721558666 * Education2n_Cycle
1244070   +          +     0.15032252273168 * EducationBasic  +    -0.00292639237041 *
1244071   +        EducationGraduation  +     0.00619669837452 * EducationMaster
1244072   +          +    -0.05037639679806 * Marital_StatusDivorced
1244073   +          +     0.28781968727878 * Marital_StatusMarried
1244074   +          +    -0.20382417074384 * Marital_StatusSingle
1244075   +          +     0.20088888064707 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.03360721558666 * Education2n_Cycle +
0.15032252273168 * EducationBasic + -0.00292639237041 * EducationGraduation + 0.00619669837452
* EducationMaster + -0.05037639679806 * Marital_StatusDivorced + 0.28781968727878 *
Marital_StatusMarried + -0.20382417074384 * Marital_StatusSingle + 0.20088888064707 *
Marital_StatusTogether ;
1244076   +   H1x1_2  = H1x1_2  +     0.12543856607452 * Education2n_Cycle
1244077   +          +      0.0095562801112 * EducationBasic  +    -0.04438983662274 *
1244078   +        EducationGraduation  +    -0.06952670554019 * EducationMaster
1244079   +          +     0.06970969219123 * Marital_StatusDivorced
1244080   +          +    -0.15787475744986 * Marital_StatusMarried
1244081   +          +     0.14345344072192 * Marital_StatusSingle
1244082   +          +    -0.12758942067533 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.12543856607452 * Education2n_Cycle + 0.0095562801112
* EducationBasic + -0.04438983662274 * EducationGraduation + -0.06952670554019 *
EducationMaster + 0.06970969219123 * Marital_StatusDivorced + -0.15787475744986 *
Marital_StatusMarried + 0.14345344072192 * Marital_StatusSingle + -0.12758942067533 *
Marital_StatusTogether ;
1244083   +   H1x1_1  =     0.90517220350758 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.90517220350758 + H1x1_1 ;
1244084   +   H1x1_2  =    -0.60383186342134 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.60383186342134 + H1x1_2 ;
1244085   +   H1x1_1  = SIN(H1x1_1 );
MPRINT(EM_DIAGRAM):   H1x1_1 = SIN(H1x1_1 );
1244086   +   H1x1_2  = SIN(H1x1_2 );
MPRINT(EM_DIAGRAM):   H1x1_2 = SIN(H1x1_2 );
1244087   +END;
MPRINT(EM_DIAGRAM):   END;
1244088   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1244089   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
1244090   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
1244091   +END;
MPRINT(EM_DIAGRAM):   END;
1244092   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1244093   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1244094   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1244095   +
1244096   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1244097   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1244098   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1244099   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1244100   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1244101   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1244102   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1244103   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1244104   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1244105   +end;
MPRINT(EM_DIAGRAM):   end;
1244106   +else do;
MPRINT(EM_DIAGRAM):   else do;
1244107   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1244108   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1244109   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1244110   +   end;
MPRINT(EM_DIAGRAM):   end;
1244111   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1244112   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1244113   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1244114   +   end;
MPRINT(EM_DIAGRAM):   end;
1244115   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1244116   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1244117   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1244118   +   end;
MPRINT(EM_DIAGRAM):   end;
1244119   +end;
MPRINT(EM_DIAGRAM):   end;
1244120   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1244121   +   P_DepVar1  =     -11.151440981908 * H1x1_1  +     16.6040498320868 * H1x1_2
1244122   +         ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -11.151440981908 * H1x1_1 + 16.6040498320868 * H1x1_2 ;
1244123   +   P_DepVar1  =     2.38025141404985 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.38025141404985 + P_DepVar1 ;
1244124   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1244125   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1244126   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1244127   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1244128   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1244129   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1244130   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1244131   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1244132   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1244133   +END;
MPRINT(EM_DIAGRAM):   END;
1244134   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1244135   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1244136   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1244137   +END;
MPRINT(EM_DIAGRAM):   END;
1244138   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1244139   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1244140   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1244141   +END;
MPRINT(EM_DIAGRAM):   END;
1244142   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1244143   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1244144   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1244145   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1244146   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1244147   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1244148   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1244149   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1244150   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1244151   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1244152   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1244153   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1244154   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1244155   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1244156   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1244157   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1244158   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1244159   +END;
MPRINT(EM_DIAGRAM):   END;
1244160   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1244161   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1244162   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1244163   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1244164   +* Renaming variables for AutoNeural7;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural7;
1244165   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1244166   +* Renaming Posterior variables for AutoNeural7;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural7;
1244167   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1244168   +drop AutoNeural7_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural7_P_DepVar1;
1244169   +AutoNeural7_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural7_P_DepVar1 = P_DepVar1;
1244170   +drop AutoNeural7_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural7_P_DepVar0;
1244171   +AutoNeural7_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural7_P_DepVar0 = P_DepVar0;
1244172   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1244173   +* Renaming _WARN_ variable for AutoNeural7;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural7;
1244174   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1244175   +length AutoNeural7_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural7_WARN_ $4;
1244176   +drop AutoNeural7_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural7_WARN_;
1244177   +AutoNeural7_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural7_WARN_ = _WARN_;
1244178   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1244179   +* Ensmbl46: Scoring Code of model 3 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl46: Scoring Code of model 3 of 5;
1244180   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1244181   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1244182   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
1244183   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1244184   +* NODE: AutoNeural12;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural12;
1244185   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1244186   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1244187   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1244188   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1244189   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1244190   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1244191   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1244192   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1244193   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1244194   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1244195   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1244196   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1244197   +LENGTH _WARN_ $4
1244198   +      F_DepVar  $ 12
1244199   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1244200   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1244201   +
1244202   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1244203   +
1244204   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1244205   +
1244206   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1244207   +
1244208   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1244209   +
1244210   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1244211   +
1244212   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1244213   +
1244214   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1244215   +
1244216   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1244217   +
1244218   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1244219   +
1244220   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1244221   +
1244222   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1244223   +
1244224   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1244225   +
1244226   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1244227   +
1244228   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1244229   +
1244230   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1244231   +
1244232   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1244233   +
1244234   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1244235   +
1244236   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1244237   +
1244238   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1244239   +
1244240   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1244241   +
1244242   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1244243   +
1244244   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1244245   +
1244246   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1244247   +
1244248   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1244249   +
1244250   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1244251   +
1244252   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1244253   +
1244254   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1244255   +
1244256   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1244257   +
1244258   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1244259   +
1244260   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1244261   +
1244262   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1244263   +
1244264   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1244265   +
1244266   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1244267   +
1244268   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1244269   +
1244270   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1244271   +
1244272   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1244273   +
1244274   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1244275   +
1244276   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
1244277   +
1244278   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
1244279   +
1244280   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
1244281   +
1244282   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
1244283   +
1244284   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
1244285   +
1244286   +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
1244287   +
1244288   +      label H1x1_7 = 'Hidden: H1x1_=7' ;
MPRINT(EM_DIAGRAM):   label H1x1_7 = 'Hidden: H1x1_=7' ;
1244289   +
1244290   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
1244291   +
1244292   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
1244293   +
1244294   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
1244295   +
1244296   +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
1244297   +
1244298   +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
1244299   +
1244300   +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
1244301   +
1244302   +      label H1x2_7 = 'Hidden: H1x2_=7' ;
MPRINT(EM_DIAGRAM):   label H1x2_7 = 'Hidden: H1x2_=7' ;
1244303   +
1244304   +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
1244305   +
1244306   +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
1244307   +
1244308   +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
1244309   +
1244310   +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
1244311   +
1244312   +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
1244313   +
1244314   +      label H2x1_6 = 'Hidden: H2x1_=6' ;
MPRINT(EM_DIAGRAM):   label H2x1_6 = 'Hidden: H2x1_=6' ;
1244315   +
1244316   +      label H2x1_7 = 'Hidden: H2x1_=7' ;
MPRINT(EM_DIAGRAM):   label H2x1_7 = 'Hidden: H2x1_=7' ;
1244317   +
1244318   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1244319   +
1244320   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1244321   +
1244322   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1244323   +
1244324   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1244325   +
1244326   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1244327   +
1244328   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1244329   +
1244330   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1244331   +
1244332   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1244333   +
1244334   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1244335   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1244336   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1244337   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1244338   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1244339   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1244340   +end;
MPRINT(EM_DIAGRAM):   end;
1244341   +else do;
MPRINT(EM_DIAGRAM):   else do;
1244342   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1244343   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1244344   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1244345   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1244346   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1244347   +   end;
MPRINT(EM_DIAGRAM):   end;
1244348   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1244349   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1244350   +   end;
MPRINT(EM_DIAGRAM):   end;
1244351   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1244352   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1244353   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1244354   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1244355   +   end;
MPRINT(EM_DIAGRAM):   end;
1244356   +end;
MPRINT(EM_DIAGRAM):   end;
1244357   +
1244358   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1244359   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1244360   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1244361   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1244362   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1244363   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1244364   +end;
MPRINT(EM_DIAGRAM):   end;
1244365   +else do;
MPRINT(EM_DIAGRAM):   else do;
1244366   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1244367   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1244368   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1244369   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1244370   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1244371   +   end;
MPRINT(EM_DIAGRAM):   end;
1244372   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1244373   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1244374   +   end;
MPRINT(EM_DIAGRAM):   end;
1244375   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1244376   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1244377   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1244378   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1244379   +   end;
MPRINT(EM_DIAGRAM):   end;
1244380   +end;
MPRINT(EM_DIAGRAM):   end;
1244381   +
1244382   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1244383   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1244384   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1244385   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1244386   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1244387   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1244388   +end;
MPRINT(EM_DIAGRAM):   end;
1244389   +else do;
MPRINT(EM_DIAGRAM):   else do;
1244390   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1244391   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1244392   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1244393   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1244394   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1244395   +   end;
MPRINT(EM_DIAGRAM):   end;
1244396   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1244397   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1244398   +   end;
MPRINT(EM_DIAGRAM):   end;
1244399   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1244400   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1244401   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1244402   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1244403   +   end;
MPRINT(EM_DIAGRAM):   end;
1244404   +end;
MPRINT(EM_DIAGRAM):   end;
1244405   +
1244406   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1244407   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1244408   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1244409   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1244410   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1244411   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1244412   +end;
MPRINT(EM_DIAGRAM):   end;
1244413   +else do;
MPRINT(EM_DIAGRAM):   else do;
1244414   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1244415   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1244416   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1244417   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1244418   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1244419   +   end;
MPRINT(EM_DIAGRAM):   end;
1244420   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1244421   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1244422   +   end;
MPRINT(EM_DIAGRAM):   end;
1244423   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1244424   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1244425   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1244426   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1244427   +   end;
MPRINT(EM_DIAGRAM):   end;
1244428   +end;
MPRINT(EM_DIAGRAM):   end;
1244429   +
1244430   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1244431   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1244432   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1244433   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1244434   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1244435   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1244436   +end;
MPRINT(EM_DIAGRAM):   end;
1244437   +else do;
MPRINT(EM_DIAGRAM):   else do;
1244438   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1244439   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1244440   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1244441   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1244442   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1244443   +   end;
MPRINT(EM_DIAGRAM):   end;
1244444   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1244445   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1244446   +   end;
MPRINT(EM_DIAGRAM):   end;
1244447   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1244448   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1244449   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1244450   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1244451   +   end;
MPRINT(EM_DIAGRAM):   end;
1244452   +end;
MPRINT(EM_DIAGRAM):   end;
1244453   +
1244454   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1244455   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1244456   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1244457   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1244458   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1244459   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1244460   +end;
MPRINT(EM_DIAGRAM):   end;
1244461   +else do;
MPRINT(EM_DIAGRAM):   else do;
1244462   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1244463   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1244464   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1244465   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1244466   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1244467   +   end;
MPRINT(EM_DIAGRAM):   end;
1244468   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1244469   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1244470   +   end;
MPRINT(EM_DIAGRAM):   end;
1244471   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1244472   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1244473   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1244474   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1244475   +   end;
MPRINT(EM_DIAGRAM):   end;
1244476   +end;
MPRINT(EM_DIAGRAM):   end;
1244477   +
1244478   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1244479   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1244480   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1244481   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1244482   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1244483   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1244484   +end;
MPRINT(EM_DIAGRAM):   end;
1244485   +else do;
MPRINT(EM_DIAGRAM):   else do;
1244486   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1244487   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1244488   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1244489   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1244490   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1244491   +   end;
MPRINT(EM_DIAGRAM):   end;
1244492   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1244493   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1244494   +   end;
MPRINT(EM_DIAGRAM):   end;
1244495   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1244496   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1244497   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1244498   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1244499   +   end;
MPRINT(EM_DIAGRAM):   end;
1244500   +end;
MPRINT(EM_DIAGRAM):   end;
1244501   +
1244502   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1244503   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
1244504   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1244505   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1244506   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1244507   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1244508   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1244509   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1244510   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1244511   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1244512   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1244513   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1244514   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1244515   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1244516   +end;
MPRINT(EM_DIAGRAM):   end;
1244517   +else do;
MPRINT(EM_DIAGRAM):   else do;
1244518   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1244519   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1244520   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1244521   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1244522   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1244523   +   end;
MPRINT(EM_DIAGRAM):   end;
1244524   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1244525   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1244526   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1244527   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1244528   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1244529   +   end;
MPRINT(EM_DIAGRAM):   end;
1244530   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1244531   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1244532   +   end;
MPRINT(EM_DIAGRAM):   end;
1244533   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1244534   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1244535   +   end;
MPRINT(EM_DIAGRAM):   end;
1244536   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1244537   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1244538   +   end;
MPRINT(EM_DIAGRAM):   end;
1244539   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1244540   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1244541   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1244542   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1244543   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1244544   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1244545   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1244546   +   end;
MPRINT(EM_DIAGRAM):   end;
1244547   +end;
MPRINT(EM_DIAGRAM):   end;
1244548   +
1244549   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1244550   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1244551   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
1244552   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1244553   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1244554   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1244555   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1244556   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1244557   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1244558   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1244559   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1244560   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1244561   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1244562   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1244563   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1244564   +end;
MPRINT(EM_DIAGRAM):   end;
1244565   +else do;
MPRINT(EM_DIAGRAM):   else do;
1244566   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1244567   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1244568   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1244569   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1244570   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1244571   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1244572   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1244573   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1244574   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1244575   +         end;
MPRINT(EM_DIAGRAM):   end;
1244576   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1244577   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1244578   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1244579   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1244580   +            end;
MPRINT(EM_DIAGRAM):   end;
1244581   +         end;
MPRINT(EM_DIAGRAM):   end;
1244582   +      end;
MPRINT(EM_DIAGRAM):   end;
1244583   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1244584   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1244585   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1244586   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1244587   +         end;
MPRINT(EM_DIAGRAM):   end;
1244588   +      end;
MPRINT(EM_DIAGRAM):   end;
1244589   +   end;
MPRINT(EM_DIAGRAM):   end;
1244590   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1244591   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1244592   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1244593   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1244594   +      end;
MPRINT(EM_DIAGRAM):   end;
1244595   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1244596   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1244597   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1244598   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1244599   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1244600   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1244601   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1244602   +         end;
MPRINT(EM_DIAGRAM):   end;
1244603   +      end;
MPRINT(EM_DIAGRAM):   end;
1244604   +   end;
MPRINT(EM_DIAGRAM):   end;
1244605   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1244606   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1244607   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1244608   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1244609   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1244610   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1244611   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1244612   +   end;
MPRINT(EM_DIAGRAM):   end;
1244613   +end;
MPRINT(EM_DIAGRAM):   end;
1244614   +
1244615   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1244616   +*** Checking missing input Interval
1244617   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1244618   +
1244619   +IF NMISS(
1244620   +   AcceptedCmpTotal ,
1244621   +   Age ,
1244622   +   Frq ,
1244623   +   Income ,
1244624   +   Kidhome ,
1244625   +   Mnt ,
1244626   +   MntFishProducts ,
1244627   +   MntFruits ,
1244628   +   MntGoldProds ,
1244629   +   MntMeatProducts ,
1244630   +   MntSweetProducts ,
1244631   +   MntWines ,
1244632   +   MonthsAsCustomer ,
1244633   +   NumCatalogPurchases ,
1244634   +   NumDealsPurchases ,
1244635   +   NumDistPurchases ,
1244636   +   NumStorePurchases ,
1244637   +   NumWebPurchases ,
1244638   +   NumWebVisitsMonth ,
1244639   +   RFMstat ,
1244640   +   RMntFrq ,
1244641   +   Recency ,
1244642   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
1244643   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1244644   +
1244645   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1244646   +END;
MPRINT(EM_DIAGRAM):   END;
1244647   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1244648   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
1244649   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1244650   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1244651   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1244652   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1244653   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1244654   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1244655   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1244656   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1244657   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1244658   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1244659   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1244660   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1244661   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1244662   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1244663   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1244664   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1244665   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1244666   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1244667   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1244668   +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
1244669   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 *
MonthsAsCustomer ;
1244670   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1244671   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1244672   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1244673   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1244674   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1244675   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1244676   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1244677   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1244678   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1244679   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1244680   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1244681   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1244682   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1244683   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1244684   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1244685   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1244686   +END;
MPRINT(EM_DIAGRAM):   END;
1244687   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1244688   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1244689   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1244690   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1244691   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1244692   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1244693   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1244694   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1244695   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1244696   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1244697   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1244698   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1244699   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1244700   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1244701   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1244702   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1244703   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1244704   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1244705   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1244706   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1244707   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1244708   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1244709   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1244710   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1244711   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1244712   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1244713   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1244714   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1244715   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1244716   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1244717   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1244718   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1244719   +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
1244720   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 *
MonthsAsCustomer ;
1244721   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1244722   +   ELSE S_NumCatalogPurchases
1244723   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1244724   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1244725   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1244726   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1244727   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1244728   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1244729   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1244730   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1244731   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1244732   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1244733   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1244734   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1244735   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1244736   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1244737   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1244738   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1244739   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1244740   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1244741   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1244742   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1244743   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1244744   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1244745   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1244746   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1244747   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1244748   +END;
MPRINT(EM_DIAGRAM):   END;
1244749   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1244750   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
1244751   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1244752   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1244753   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
1244754   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1244755   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1244756   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
1244757   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1244758   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1244759   +   H1x1_1  =     0.63316204656896 * S_AcceptedCmpTotal
1244760   +          +    -0.24884200883415 * S_Age  +      -0.236584005151 * S_Frq
1244761   +          +     0.25406117591995 * S_Income  +    -0.56304122955704 *
1244762   +        S_Kidhome  +    -0.23687782938793 * S_Mnt  +    -0.09770906650074 *
1244763   +        S_MntFishProducts  +    -0.73487360819716 * S_MntFruits
1244764   +          +     0.14293909908147 * S_MntGoldProds  +     2.25015000307426 *
1244765   +        S_MntMeatProducts  +    -0.42178958150661 * S_MntSweetProducts
1244766   +          +    -2.35340366839307 * S_MntWines  +    -0.02380265380154 *
1244767   +        S_MonthsAsCustomer  +     1.16509321438746 * S_NumCatalogPurchases
1244768   +          +     1.17276395296242 * S_NumDealsPurchases
1244769   +          +     0.26632768295477 * S_NumDistPurchases
1244770   +          +    -1.26575615903579 * S_NumStorePurchases
1244771   +          +    -0.95316107557927 * S_NumWebPurchases
1244772   +          +     1.01828574356487 * S_NumWebVisitsMonth
1244773   +          +       0.795866263515 * S_RFMstat  +    -0.20490378142832 *
1244774   +        S_RMntFrq  +    -0.82943281422857 * S_Recency
1244775   +          +     0.16132418388418 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.63316204656896 * S_AcceptedCmpTotal + -0.24884200883415 *
S_Age + -0.236584005151 * S_Frq + 0.25406117591995 * S_Income + -0.56304122955704 * S_Kidhome
+ -0.23687782938793 * S_Mnt + -0.09770906650074 * S_MntFishProducts + -0.73487360819716 *
S_MntFruits + 0.14293909908147 * S_MntGoldProds + 2.25015000307426 * S_MntMeatProducts +
-0.42178958150661 * S_MntSweetProducts + -2.35340366839307 * S_MntWines + -0.02380265380154 *
S_MonthsAsCustomer + 1.16509321438746 * S_NumCatalogPurchases + 1.17276395296242 *
S_NumDealsPurchases + 0.26632768295477 * S_NumDistPurchases + -1.26575615903579 *
S_NumStorePurchases + -0.95316107557927 * S_NumWebPurchases + 1.01828574356487 *
S_NumWebVisitsMonth + 0.795866263515 * S_RFMstat + -0.20490378142832 * S_RMntFrq +
-0.82943281422857 * S_Recency + 0.16132418388418 * S_Teenhome ;
1244776   +   H1x1_2  =    -0.43482920479481 * S_AcceptedCmpTotal
1244777   +          +     0.53350211221915 * S_Age  +    -0.06797700766223 * S_Frq
1244778   +          +     0.13771322007949 * S_Income  +     0.87012019559698 *
1244779   +        S_Kidhome  +     0.06026853274247 * S_Mnt  +    -0.43150595882972 *
1244780   +        S_MntFishProducts  +    -0.13728591661063 * S_MntFruits
1244781   +          +     0.35443873962923 * S_MntGoldProds  +     0.28102965401547 *
1244782   +        S_MntMeatProducts  +     0.52367949052365 * S_MntSweetProducts
1244783   +          +     0.35553595364078 * S_MntWines  +     0.37892120128383 *
1244784   +        S_MonthsAsCustomer  +     0.59057645965187 * S_NumCatalogPurchases
1244785   +          +     1.14485571201233 * S_NumDealsPurchases
1244786   +          +     0.21414266588987 * S_NumDistPurchases
1244787   +          +    -0.10530090074297 * S_NumStorePurchases
1244788   +          +    -0.41712321238458 * S_NumWebPurchases
1244789   +          +    -0.99760766791108 * S_NumWebVisitsMonth
1244790   +          +    -0.90203265666387 * S_RFMstat  +    -0.60947922673601 *
1244791   +        S_RMntFrq  +     1.10040128548883 * S_Recency
1244792   +          +     0.16728431679949 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.43482920479481 * S_AcceptedCmpTotal + 0.53350211221915 *
S_Age + -0.06797700766223 * S_Frq + 0.13771322007949 * S_Income + 0.87012019559698 * S_Kidhome
+ 0.06026853274247 * S_Mnt + -0.43150595882972 * S_MntFishProducts + -0.13728591661063 *
S_MntFruits + 0.35443873962923 * S_MntGoldProds + 0.28102965401547 * S_MntMeatProducts +
0.52367949052365 * S_MntSweetProducts + 0.35553595364078 * S_MntWines + 0.37892120128383 *
S_MonthsAsCustomer + 0.59057645965187 * S_NumCatalogPurchases + 1.14485571201233 *
S_NumDealsPurchases + 0.21414266588987 * S_NumDistPurchases + -0.10530090074297 *
S_NumStorePurchases + -0.41712321238458 * S_NumWebPurchases + -0.99760766791108 *
S_NumWebVisitsMonth + -0.90203265666387 * S_RFMstat + -0.60947922673601 * S_RMntFrq +
1.10040128548883 * S_Recency + 0.16728431679949 * S_Teenhome ;
1244793   +   H1x1_3  =     0.26373486938499 * S_AcceptedCmpTotal
1244794   +          +    -0.22246756314756 * S_Age  +     0.49537720979115 * S_Frq
1244795   +          +     1.38815981786544 * S_Income  +    -0.93015968695331 *
1244796   +        S_Kidhome  +     0.11586216615481 * S_Mnt  +    -0.02105973515345 *
1244797   +        S_MntFishProducts  +    -0.28078442249811 * S_MntFruits
1244798   +          +    -0.01763878655129 * S_MntGoldProds  +     0.83934619541231 *
1244799   +        S_MntMeatProducts  +    -0.23417310915433 * S_MntSweetProducts
1244800   +          +    -0.29135819585991 * S_MntWines  +    -0.20792872642036 *
1244801   +        S_MonthsAsCustomer  +     1.05218745810839 * S_NumCatalogPurchases
1244802   +          +      0.7196418967437 * S_NumDealsPurchases
1244803   +          +     0.69035286374177 * S_NumDistPurchases
1244804   +          +     0.38027656631135 * S_NumStorePurchases
1244805   +          +    -0.18878358997924 * S_NumWebPurchases
1244806   +          +     1.61962062004798 * S_NumWebVisitsMonth
1244807   +          +    -0.04575386719745 * S_RFMstat  +     1.16358450490635 *
1244808   +        S_RMntFrq  +    -2.13821542142822 * S_Recency
1244809   +          +    -1.28960355207697 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.26373486938499 * S_AcceptedCmpTotal + -0.22246756314756 *
S_Age + 0.49537720979115 * S_Frq + 1.38815981786544 * S_Income + -0.93015968695331 * S_Kidhome
+ 0.11586216615481 * S_Mnt + -0.02105973515345 * S_MntFishProducts + -0.28078442249811 *
S_MntFruits + -0.01763878655129 * S_MntGoldProds + 0.83934619541231 * S_MntMeatProducts +
-0.23417310915433 * S_MntSweetProducts + -0.29135819585991 * S_MntWines + -0.20792872642036 *
S_MonthsAsCustomer + 1.05218745810839 * S_NumCatalogPurchases + 0.7196418967437 *
S_NumDealsPurchases + 0.69035286374177 * S_NumDistPurchases + 0.38027656631135 *
S_NumStorePurchases + -0.18878358997924 * S_NumWebPurchases + 1.61962062004798 *
S_NumWebVisitsMonth + -0.04575386719745 * S_RFMstat + 1.16358450490635 * S_RMntFrq +
-2.13821542142822 * S_Recency + -1.28960355207697 * S_Teenhome ;
1244810   +   H1x1_4  =    -0.34331113295243 * S_AcceptedCmpTotal
1244811   +          +    -0.39878146063012 * S_Age  +     0.10068367322473 * S_Frq
1244812   +          +    -0.20171643525685 * S_Income  +    -0.76934260520569 *
1244813   +        S_Kidhome  +    -0.66782690219397 * S_Mnt  +     0.80905970181803 *
1244814   +        S_MntFishProducts  +    -0.03688782193215 * S_MntFruits
1244815   +          +     0.06641568264972 * S_MntGoldProds  +    -3.32390323965822 *
1244816   +        S_MntMeatProducts  +    -0.05413014598032 * S_MntSweetProducts
1244817   +          +     1.07708707113306 * S_MntWines  +     0.13185264889978 *
1244818   +        S_MonthsAsCustomer  +    -0.39476201074171 * S_NumCatalogPurchases
1244819   +          +    -0.00642902007204 * S_NumDealsPurchases
1244820   +          +     0.29785069480367 * S_NumDistPurchases
1244821   +          +    -0.42243322063147 * S_NumStorePurchases
1244822   +          +     0.54880896338383 * S_NumWebPurchases
1244823   +          +    -0.12525846016886 * S_NumWebVisitsMonth
1244824   +          +    -0.31397100953189 * S_RFMstat  +     -0.5192863720509 *
1244825   +        S_RMntFrq  +     0.10252211581449 * S_Recency
1244826   +          +     0.44223031313104 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.34331113295243 * S_AcceptedCmpTotal + -0.39878146063012 *
S_Age + 0.10068367322473 * S_Frq + -0.20171643525685 * S_Income + -0.76934260520569 *
S_Kidhome + -0.66782690219397 * S_Mnt + 0.80905970181803 * S_MntFishProducts +
-0.03688782193215 * S_MntFruits + 0.06641568264972 * S_MntGoldProds + -3.32390323965822 *
S_MntMeatProducts + -0.05413014598032 * S_MntSweetProducts + 1.07708707113306 * S_MntWines +
0.13185264889978 * S_MonthsAsCustomer + -0.39476201074171 * S_NumCatalogPurchases +
-0.00642902007204 * S_NumDealsPurchases + 0.29785069480367 * S_NumDistPurchases +
-0.42243322063147 * S_NumStorePurchases + 0.54880896338383 * S_NumWebPurchases +
-0.12525846016886 * S_NumWebVisitsMonth + -0.31397100953189 * S_RFMstat + -0.5192863720509 *
S_RMntFrq + 0.10252211581449 * S_Recency + 0.44223031313104 * S_Teenhome ;
1244827   +   H1x1_5  =    -0.89949577087728 * S_AcceptedCmpTotal
1244828   +          +     -0.5133669560115 * S_Age  +     0.55814120515869 * S_Frq
1244829   +          +    -0.72790553700689 * S_Income  +     1.13470491167406 *
1244830   +        S_Kidhome  +     0.42465795563071 * S_Mnt  +     0.22642900369653 *
1244831   +        S_MntFishProducts  +    -0.10149694753146 * S_MntFruits
1244832   +          +    -0.05203167914723 * S_MntGoldProds  +    -0.42300460593042 *
1244833   +        S_MntMeatProducts  +    -0.11178206624825 * S_MntSweetProducts
1244834   +          +     1.57257994445012 * S_MntWines  +     0.02297554927807 *
1244835   +        S_MonthsAsCustomer  +    -0.60721423552141 * S_NumCatalogPurchases
1244836   +          +    -0.48404738328225 * S_NumDealsPurchases
1244837   +          +    -0.02464180457879 * S_NumDistPurchases
1244838   +          +     1.17201831082067 * S_NumStorePurchases
1244839   +          +     0.57453655167516 * S_NumWebPurchases
1244840   +          +    -1.94417019790248 * S_NumWebVisitsMonth
1244841   +          +     0.00073301476364 * S_RFMstat  +     0.12295343326875 *
1244842   +        S_RMntFrq  +      1.6169916658132 * S_Recency
1244843   +          +     0.09488579305439 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.89949577087728 * S_AcceptedCmpTotal + -0.5133669560115 *
S_Age + 0.55814120515869 * S_Frq + -0.72790553700689 * S_Income + 1.13470491167406 * S_Kidhome
+ 0.42465795563071 * S_Mnt + 0.22642900369653 * S_MntFishProducts + -0.10149694753146 *
S_MntFruits + -0.05203167914723 * S_MntGoldProds + -0.42300460593042 * S_MntMeatProducts +
-0.11178206624825 * S_MntSweetProducts + 1.57257994445012 * S_MntWines + 0.02297554927807 *
S_MonthsAsCustomer + -0.60721423552141 * S_NumCatalogPurchases + -0.48404738328225 *
S_NumDealsPurchases + -0.02464180457879 * S_NumDistPurchases + 1.17201831082067 *
S_NumStorePurchases + 0.57453655167516 * S_NumWebPurchases + -1.94417019790248 *
S_NumWebVisitsMonth + 0.00073301476364 * S_RFMstat + 0.12295343326875 * S_RMntFrq +
1.6169916658132 * S_Recency + 0.09488579305439 * S_Teenhome ;
1244844   +   H1x1_6  =     0.01224996381937 * S_AcceptedCmpTotal
1244845   +          +     0.56818460209578 * S_Age  +    -0.50544994791872 * S_Frq
1244846   +          +    -0.39086889823619 * S_Income  +      0.2278709145292 *
1244847   +        S_Kidhome  +       0.221310975162 * S_Mnt  +     -0.2208719427117 *
1244848   +        S_MntFishProducts  +     0.33199116637803 * S_MntFruits
1244849   +          +    -0.20919304257884 * S_MntGoldProds  +     0.85155045239396 *
1244850   +        S_MntMeatProducts  +     0.32150401526792 * S_MntSweetProducts
1244851   +          +     0.24789026157513 * S_MntWines  +    -0.16427340869887 *
1244852   +        S_MonthsAsCustomer  +    -1.31657293247686 * S_NumCatalogPurchases
1244853   +          +    -1.49850531967483 * S_NumDealsPurchases
1244854   +          +    -0.82105466264223 * S_NumDistPurchases
1244855   +          +     0.29984603642824 * S_NumStorePurchases
1244856   +          +     0.06557123721611 * S_NumWebPurchases
1244857   +          +     1.04754749365002 * S_NumWebVisitsMonth
1244858   +          +     0.18881248406892 * S_RFMstat  +     0.26455728766984 *
1244859   +        S_RMntFrq  +     0.12396789666359 * S_Recency
1244860   +          +     0.04001049603668 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0.01224996381937 * S_AcceptedCmpTotal + 0.56818460209578 *
S_Age + -0.50544994791872 * S_Frq + -0.39086889823619 * S_Income + 0.2278709145292 * S_Kidhome
+ 0.221310975162 * S_Mnt + -0.2208719427117 * S_MntFishProducts + 0.33199116637803 *
S_MntFruits + -0.20919304257884 * S_MntGoldProds + 0.85155045239396 * S_MntMeatProducts +
0.32150401526792 * S_MntSweetProducts + 0.24789026157513 * S_MntWines + -0.16427340869887 *
S_MonthsAsCustomer + -1.31657293247686 * S_NumCatalogPurchases + -1.49850531967483 *
S_NumDealsPurchases + -0.82105466264223 * S_NumDistPurchases + 0.29984603642824 *
S_NumStorePurchases + 0.06557123721611 * S_NumWebPurchases + 1.04754749365002 *
S_NumWebVisitsMonth + 0.18881248406892 * S_RFMstat + 0.26455728766984 * S_RMntFrq +
0.12396789666359 * S_Recency + 0.04001049603668 * S_Teenhome ;
1244861   +   H1x1_1  = H1x1_1  +     -0.4293641198863 * AcceptedCmp10
1244862   +          +    -0.02562823362815 * AcceptedCmp20  +     0.16277388616218 *
1244863   +        AcceptedCmp30  +    -0.38952498475664 * AcceptedCmp40
1244864   +          +    -0.13756852377245 * AcceptedCmp50  +    -0.11393239206883 *
1244865   +        Complain0  +    -0.18422159910382 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.4293641198863 * AcceptedCmp10 + -0.02562823362815 *
AcceptedCmp20 + 0.16277388616218 * AcceptedCmp30 + -0.38952498475664 * AcceptedCmp40 +
-0.13756852377245 * AcceptedCmp50 + -0.11393239206883 * Complain0 + -0.18422159910382 *
HigherEducationBinary0 ;
1244866   +   H1x1_2  = H1x1_2  +     -0.6690011671322 * AcceptedCmp10
1244867   +          +     0.30944418540454 * AcceptedCmp20  +     0.58989055832198 *
1244868   +        AcceptedCmp30  +    -0.11349554378017 * AcceptedCmp40
1244869   +          +     0.17747537507545 * AcceptedCmp50  +     0.31141201787728 *
1244870   +        Complain0  +    -0.14665102087088 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.6690011671322 * AcceptedCmp10 + 0.30944418540454 *
AcceptedCmp20 + 0.58989055832198 * AcceptedCmp30 + -0.11349554378017 * AcceptedCmp40 +
0.17747537507545 * AcceptedCmp50 + 0.31141201787728 * Complain0 + -0.14665102087088 *
HigherEducationBinary0 ;
1244871   +   H1x1_3  = H1x1_3  +    -0.37718551551154 * AcceptedCmp10
1244872   +          +    -0.95419836616858 * AcceptedCmp20  +    -1.07782642598822 *
1244873   +        AcceptedCmp30  +    -0.36181507758379 * AcceptedCmp40
1244874   +          +    -0.20579221441057 * AcceptedCmp50  +     -0.2862570173476 *
1244875   +        Complain0  +     0.42095042003574 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.37718551551154 * AcceptedCmp10 + -0.95419836616858
* AcceptedCmp20 + -1.07782642598822 * AcceptedCmp30 + -0.36181507758379 * AcceptedCmp40 +
-0.20579221441057 * AcceptedCmp50 + -0.2862570173476 * Complain0 + 0.42095042003574 *
HigherEducationBinary0 ;
1244876   +   H1x1_4  = H1x1_4  +     0.76282838117383 * AcceptedCmp10
1244877   +          +     0.17657215690894 * AcceptedCmp20  +     0.06936093547655 *
1244878   +        AcceptedCmp30  +    -0.31222684620157 * AcceptedCmp40
1244879   +          +     0.35916828202502 * AcceptedCmp50  +     0.15464859425769 *
1244880   +        Complain0  +    -0.12780871374988 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.76282838117383 * AcceptedCmp10 + 0.17657215690894 *
AcceptedCmp20 + 0.06936093547655 * AcceptedCmp30 + -0.31222684620157 * AcceptedCmp40 +
0.35916828202502 * AcceptedCmp50 + 0.15464859425769 * Complain0 + -0.12780871374988 *
HigherEducationBinary0 ;
1244881   +   H1x1_5  = H1x1_5  +      0.0863832283968 * AcceptedCmp10
1244882   +          +    -0.01478152334234 * AcceptedCmp20  +    -0.25793605794945 *
1244883   +        AcceptedCmp30  +     0.75328991260718 * AcceptedCmp40
1244884   +          +     0.43869592545355 * AcceptedCmp50  +    -0.18444801256895 *
1244885   +        Complain0  +    -0.18540568245616 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 0.0863832283968 * AcceptedCmp10 + -0.01478152334234 *
AcceptedCmp20 + -0.25793605794945 * AcceptedCmp30 + 0.75328991260718 * AcceptedCmp40 +
0.43869592545355 * AcceptedCmp50 + -0.18444801256895 * Complain0 + -0.18540568245616 *
HigherEducationBinary0 ;
1244886   +   H1x1_6  = H1x1_6  +    -0.05476883960444 * AcceptedCmp10
1244887   +          +    -0.30796660956747 * AcceptedCmp20  +    -0.15332998700386 *
1244888   +        AcceptedCmp30  +     0.07190305484507 * AcceptedCmp40
1244889   +          +    -0.19344551087023 * AcceptedCmp50  +    -0.01671794402922 *
1244890   +        Complain0  +      0.4224003744836 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + -0.05476883960444 * AcceptedCmp10 + -0.30796660956747
* AcceptedCmp20 + -0.15332998700386 * AcceptedCmp30 + 0.07190305484507 * AcceptedCmp40 +
-0.19344551087023 * AcceptedCmp50 + -0.01671794402922 * Complain0 + 0.4224003744836 *
HigherEducationBinary0 ;
1244891   +   H1x1_1  = H1x1_1  +     0.06740641383122 * Education2n_Cycle
1244892   +          +      0.0427985447056 * EducationBasic  +     0.38043688251433 *
1244893   +        EducationGraduation  +     0.07595631354847 * EducationMaster
1244894   +          +     0.24583509957712 * Marital_StatusDivorced
1244895   +          +    -0.22681931588361 * Marital_StatusMarried
1244896   +          +    -0.12924106229536 * Marital_StatusSingle
1244897   +          +     -0.2262058185403 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.06740641383122 * Education2n_Cycle + 0.0427985447056
* EducationBasic + 0.38043688251433 * EducationGraduation + 0.07595631354847 * EducationMaster
+ 0.24583509957712 * Marital_StatusDivorced + -0.22681931588361 * Marital_StatusMarried +
-0.12924106229536 * Marital_StatusSingle + -0.2262058185403 * Marital_StatusTogether ;
1244898   +   H1x1_2  = H1x1_2  +    -0.13120690973481 * Education2n_Cycle
1244899   +          +     0.37925506295244 * EducationBasic  +     0.31784700588218 *
1244900   +        EducationGraduation  +     0.23015089246655 * EducationMaster
1244901   +          +    -0.12585334311068 * Marital_StatusDivorced
1244902   +          +    -0.20835502467207 * Marital_StatusMarried
1244903   +          +    -0.13839534449368 * Marital_StatusSingle
1244904   +          +     0.64317572477668 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.13120690973481 * Education2n_Cycle +
0.37925506295244 * EducationBasic + 0.31784700588218 * EducationGraduation + 0.23015089246655
* EducationMaster + -0.12585334311068 * Marital_StatusDivorced + -0.20835502467207 *
Marital_StatusMarried + -0.13839534449368 * Marital_StatusSingle + 0.64317572477668 *
Marital_StatusTogether ;
1244905   +   H1x1_3  = H1x1_3  +     0.32305785926236 * Education2n_Cycle
1244906   +          +     0.23464353160373 * EducationBasic  +    -0.73832644067678 *
1244907   +        EducationGraduation  +    -0.03608560158257 * EducationMaster
1244908   +          +     0.35106363238113 * Marital_StatusDivorced
1244909   +          +     -1.3414808583918 * Marital_StatusMarried
1244910   +          +     1.40835320798486 * Marital_StatusSingle
1244911   +          +    -1.26805917396788 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.32305785926236 * Education2n_Cycle +
0.23464353160373 * EducationBasic + -0.73832644067678 * EducationGraduation +
-0.03608560158257 * EducationMaster + 0.35106363238113 * Marital_StatusDivorced +
-1.3414808583918 * Marital_StatusMarried + 1.40835320798486 * Marital_StatusSingle +
-1.26805917396788 * Marital_StatusTogether ;
1244912   +   H1x1_4  = H1x1_4  +    -0.14516593990466 * Education2n_Cycle
1244913   +          +     0.21457892528906 * EducationBasic  +      0.3693312496431 *
1244914   +        EducationGraduation  +      0.1746658332011 * EducationMaster
1244915   +          +     0.48174546958393 * Marital_StatusDivorced
1244916   +          +    -0.41416978858191 * Marital_StatusMarried
1244917   +          +    -0.23376801546265 * Marital_StatusSingle
1244918   +          +    -0.40569257078897 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.14516593990466 * Education2n_Cycle +
0.21457892528906 * EducationBasic + 0.3693312496431 * EducationGraduation + 0.1746658332011 *
EducationMaster + 0.48174546958393 * Marital_StatusDivorced + -0.41416978858191 *
Marital_StatusMarried + -0.23376801546265 * Marital_StatusSingle + -0.40569257078897 *
Marital_StatusTogether ;
1244919   +   H1x1_5  = H1x1_5  +    -0.00489214718621 * Education2n_Cycle
1244920   +          +     0.04788059649714 * EducationBasic  +      -0.479003778409 *
1244921   +        EducationGraduation  +     0.68875064631577 * EducationMaster
1244922   +          +    -0.67557643774246 * Marital_StatusDivorced
1244923   +          +     1.63844045917367 * Marital_StatusMarried
1244924   +          +    -0.70320960247699 * Marital_StatusSingle
1244925   +          +     1.26350112628909 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.00489214718621 * Education2n_Cycle +
0.04788059649714 * EducationBasic + -0.479003778409 * EducationGraduation + 0.68875064631577 *
EducationMaster + -0.67557643774246 * Marital_StatusDivorced + 1.63844045917367 *
Marital_StatusMarried + -0.70320960247699 * Marital_StatusSingle + 1.26350112628909 *
Marital_StatusTogether ;
1244926   +   H1x1_6  = H1x1_6  +     0.38566123849432 * Education2n_Cycle
1244927   +          +    -0.48006357411447 * EducationBasic  +     0.06594567975069 *
1244928   +        EducationGraduation  +    -0.68011360002443 * EducationMaster
1244929   +          +    -0.11371453086883 * Marital_StatusDivorced
1244930   +          +    -0.34226997176291 * Marital_StatusMarried
1244931   +          +    -1.01568676685754 * Marital_StatusSingle
1244932   +          +    -0.07673228755579 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + 0.38566123849432 * Education2n_Cycle +
-0.48006357411447 * EducationBasic + 0.06594567975069 * EducationGraduation +
-0.68011360002443 * EducationMaster + -0.11371453086883 * Marital_StatusDivorced +
-0.34226997176291 * Marital_StatusMarried + -1.01568676685754 * Marital_StatusSingle +
-0.07673228755579 * Marital_StatusTogether ;
1244933   +   H1x1_1  =    -0.13665586104906 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.13665586104906 + H1x1_1 ;
1244934   +   H1x1_2  =    -1.74128345271319 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -1.74128345271319 + H1x1_2 ;
1244935   +   H1x1_3  =    -0.38226400326342 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.38226400326342 + H1x1_3 ;
1244936   +   H1x1_4  =    -0.64652756521333 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.64652756521333 + H1x1_4 ;
1244937   +   H1x1_5  =     0.89555568414722 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0.89555568414722 + H1x1_5 ;
1244938   +   H1x1_6  =    -0.28536788363505 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -0.28536788363505 + H1x1_6 ;
1244939   +   H1x1_7  = 0;
MPRINT(EM_DIAGRAM):   H1x1_7 = 0;
1244940   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 , H1x1_7
1244941   +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 ,
H1x1_7 );
1244942   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1244943   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
1244944   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
1244945   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
1244946   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
1244947   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
1244948   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
1244949   +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
1244950   +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
1244951   +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
1244952   +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
1244953   +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
1244954   +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
1244955   +   H1x1_7  = EXP(H1x1_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_7 = EXP(H1x1_7 - _MAX_);
1244956   +   _SUM_ = _SUM_ + H1x1_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_7 ;
1244957   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
1244958   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
1244959   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
1244960   +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
1244961   +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
1244962   +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
1244963   +   H1x1_7  = H1x1_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_7 = H1x1_7 / _SUM_;
1244964   +END;
MPRINT(EM_DIAGRAM):   END;
1244965   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1244966   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
1244967   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
1244968   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
1244969   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
1244970   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
1244971   +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
1244972   +   H1x1_7  = .;
MPRINT(EM_DIAGRAM):   H1x1_7 = .;
1244973   +END;
MPRINT(EM_DIAGRAM):   END;
1244974   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1244975   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
1244976   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1244977   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1244978   +   H1x2_1  =    -0.46863593010465 * S_AcceptedCmpTotal
1244979   +          +     0.76938995153422 * S_Age  +    -0.10870665325086 * S_Frq
1244980   +          +    -0.01767709917897 * S_Income  +    -0.06564852978687 *
1244981   +        S_Kidhome  +     1.53975855599943 * S_Mnt  +     0.14885556549813 *
1244982   +        S_MntFishProducts  +     -0.3427211596875 * S_MntFruits
1244983   +          +     1.82311511422571 * S_MntGoldProds  +     1.16814585484266 *
1244984   +        S_MntMeatProducts  +    -0.03210183211362 * S_MntSweetProducts
1244985   +          +     0.21048598967441 * S_MntWines  +    -1.43075224286158 *
1244986   +        S_MonthsAsCustomer  +     0.17264791017938 * S_NumCatalogPurchases
1244987   +          +    -0.87259051567474 * S_NumDealsPurchases
1244988   +          +    -0.36454149529139 * S_NumDistPurchases
1244989   +          +     0.12447759925061 * S_NumStorePurchases
1244990   +          +    -1.08133487947367 * S_NumWebPurchases
1244991   +          +    -0.49882157745454 * S_NumWebVisitsMonth
1244992   +          +    -1.37163643041927 * S_RFMstat  +    -2.02270778627266 *
1244993   +        S_RMntFrq  +    -0.01174101172444 * S_Recency
1244994   +          +     1.37307999964517 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.46863593010465 * S_AcceptedCmpTotal + 0.76938995153422 *
S_Age + -0.10870665325086 * S_Frq + -0.01767709917897 * S_Income + -0.06564852978687 *
S_Kidhome + 1.53975855599943 * S_Mnt + 0.14885556549813 * S_MntFishProducts + -0.3427211596875
* S_MntFruits + 1.82311511422571 * S_MntGoldProds + 1.16814585484266 * S_MntMeatProducts +
-0.03210183211362 * S_MntSweetProducts + 0.21048598967441 * S_MntWines + -1.43075224286158 *
S_MonthsAsCustomer + 0.17264791017938 * S_NumCatalogPurchases + -0.87259051567474 *
S_NumDealsPurchases + -0.36454149529139 * S_NumDistPurchases + 0.12447759925061 *
S_NumStorePurchases + -1.08133487947367 * S_NumWebPurchases + -0.49882157745454 *
S_NumWebVisitsMonth + -1.37163643041927 * S_RFMstat + -2.02270778627266 * S_RMntFrq +
-0.01174101172444 * S_Recency + 1.37307999964517 * S_Teenhome ;
1244995   +   H1x2_2  =     0.31979674377303 * S_AcceptedCmpTotal
1244996   +          +    -1.13516841608912 * S_Age  +     1.57640145941914 * S_Frq
1244997   +          +    -0.58468039509557 * S_Income  +    -1.78015996883174 *
1244998   +        S_Kidhome  +     0.51311311640127 * S_Mnt  +     0.07011815519915 *
1244999   +        S_MntFishProducts  +     0.73204832291164 * S_MntFruits
1245000   +          +     1.50837189353633 * S_MntGoldProds  +     1.39487443576743 *
1245001   +        S_MntMeatProducts  +      0.6943398196475 * S_MntSweetProducts
1245002   +          +    -0.36693028595681 * S_MntWines  +     0.86802033237442 *
1245003   +        S_MonthsAsCustomer  +     0.02384797538091 * S_NumCatalogPurchases
1245004   +          +     2.23121497416403 * S_NumDealsPurchases
1245005   +          +    -0.48674842191071 * S_NumDistPurchases
1245006   +          +     1.77510728607544 * S_NumStorePurchases
1245007   +          +     0.14647433155436 * S_NumWebPurchases
1245008   +          +    -0.95892686924419 * S_NumWebVisitsMonth
1245009   +          +    -0.26496935918704 * S_RFMstat  +     2.48765485222223 *
1245010   +        S_RMntFrq  +     2.46497777428475 * S_Recency
1245011   +          +    -0.62872033383484 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.31979674377303 * S_AcceptedCmpTotal + -1.13516841608912 *
S_Age + 1.57640145941914 * S_Frq + -0.58468039509557 * S_Income + -1.78015996883174 *
S_Kidhome + 0.51311311640127 * S_Mnt + 0.07011815519915 * S_MntFishProducts + 0.73204832291164
* S_MntFruits + 1.50837189353633 * S_MntGoldProds + 1.39487443576743 * S_MntMeatProducts +
0.6943398196475 * S_MntSweetProducts + -0.36693028595681 * S_MntWines + 0.86802033237442 *
S_MonthsAsCustomer + 0.02384797538091 * S_NumCatalogPurchases + 2.23121497416403 *
S_NumDealsPurchases + -0.48674842191071 * S_NumDistPurchases + 1.77510728607544 *
S_NumStorePurchases + 0.14647433155436 * S_NumWebPurchases + -0.95892686924419 *
S_NumWebVisitsMonth + -0.26496935918704 * S_RFMstat + 2.48765485222223 * S_RMntFrq +
2.46497777428475 * S_Recency + -0.62872033383484 * S_Teenhome ;
1245012   +   H1x2_3  =    -0.31142826583944 * S_AcceptedCmpTotal
1245013   +          +    -1.14828049895929 * S_Age  +    -0.54227584627485 * S_Frq
1245014   +          +     0.26826674711688 * S_Income  +     0.17643820666347 *
1245015   +        S_Kidhome  +    -0.12427430981043 * S_Mnt  +     0.18056887427376 *
1245016   +        S_MntFishProducts  +    -0.63010248821544 * S_MntFruits
1245017   +          +    -0.81391687529252 * S_MntGoldProds  +    -1.12306166734361 *
1245018   +        S_MntMeatProducts  +     0.92339010601965 * S_MntSweetProducts
1245019   +          +    -2.05510990050543 * S_MntWines  +    -2.02060586903244 *
1245020   +        S_MonthsAsCustomer  +     0.98841836752178 * S_NumCatalogPurchases
1245021   +          +     0.14338855349611 * S_NumDealsPurchases
1245022   +          +    -2.21071010829235 * S_NumDistPurchases
1245023   +          +    -0.21795889348002 * S_NumStorePurchases
1245024   +          +     1.98825087883535 * S_NumWebPurchases
1245025   +          +     1.02482442531149 * S_NumWebVisitsMonth
1245026   +          +    -0.47662143614905 * S_RFMstat  +    -0.17167385440535 *
1245027   +        S_RMntFrq  +     -1.0288777281766 * S_Recency
1245028   +          +    -0.10646747275734 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.31142826583944 * S_AcceptedCmpTotal + -1.14828049895929 *
S_Age + -0.54227584627485 * S_Frq + 0.26826674711688 * S_Income + 0.17643820666347 * S_Kidhome
+ -0.12427430981043 * S_Mnt + 0.18056887427376 * S_MntFishProducts + -0.63010248821544 *
S_MntFruits + -0.81391687529252 * S_MntGoldProds + -1.12306166734361 * S_MntMeatProducts +
0.92339010601965 * S_MntSweetProducts + -2.05510990050543 * S_MntWines + -2.02060586903244 *
S_MonthsAsCustomer + 0.98841836752178 * S_NumCatalogPurchases + 0.14338855349611 *
S_NumDealsPurchases + -2.21071010829235 * S_NumDistPurchases + -0.21795889348002 *
S_NumStorePurchases + 1.98825087883535 * S_NumWebPurchases + 1.02482442531149 *
S_NumWebVisitsMonth + -0.47662143614905 * S_RFMstat + -0.17167385440535 * S_RMntFrq +
-1.0288777281766 * S_Recency + -0.10646747275734 * S_Teenhome ;
1245029   +   H1x2_4  =    -0.40813758620671 * S_AcceptedCmpTotal
1245030   +          +     0.16751361466296 * S_Age  +     0.61297021391662 * S_Frq
1245031   +          +     0.17708553296763 * S_Income  +    -0.23498000755537 *
1245032   +        S_Kidhome  +      0.6863853027948 * S_Mnt  +    -0.43649468589643 *
1245033   +        S_MntFishProducts  +    -1.03807059787368 * S_MntFruits
1245034   +          +     0.68988160282803 * S_MntGoldProds  +     1.76714128625705 *
1245035   +        S_MntMeatProducts  +     1.15458185366826 * S_MntSweetProducts
1245036   +          +     0.31267521045306 * S_MntWines  +    -3.18562841805634 *
1245037   +        S_MonthsAsCustomer  +     0.15316473812138 * S_NumCatalogPurchases
1245038   +          +     0.30041205661012 * S_NumDealsPurchases
1245039   +          +    -0.63499849986918 * S_NumDistPurchases
1245040   +          +    -0.34155713433714 * S_NumStorePurchases
1245041   +          +    -1.14183354933936 * S_NumWebPurchases
1245042   +          +    -0.42681980262973 * S_NumWebVisitsMonth
1245043   +          +    -0.18777676484111 * S_RFMstat  +      0.2522570278894 *
1245044   +        S_RMntFrq  +     1.25852246467612 * S_Recency
1245045   +          +     0.63333476238969 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.40813758620671 * S_AcceptedCmpTotal + 0.16751361466296 *
S_Age + 0.61297021391662 * S_Frq + 0.17708553296763 * S_Income + -0.23498000755537 * S_Kidhome
+ 0.6863853027948 * S_Mnt + -0.43649468589643 * S_MntFishProducts + -1.03807059787368 *
S_MntFruits + 0.68988160282803 * S_MntGoldProds + 1.76714128625705 * S_MntMeatProducts +
1.15458185366826 * S_MntSweetProducts + 0.31267521045306 * S_MntWines + -3.18562841805634 *
S_MonthsAsCustomer + 0.15316473812138 * S_NumCatalogPurchases + 0.30041205661012 *
S_NumDealsPurchases + -0.63499849986918 * S_NumDistPurchases + -0.34155713433714 *
S_NumStorePurchases + -1.14183354933936 * S_NumWebPurchases + -0.42681980262973 *
S_NumWebVisitsMonth + -0.18777676484111 * S_RFMstat + 0.2522570278894 * S_RMntFrq +
1.25852246467612 * S_Recency + 0.63333476238969 * S_Teenhome ;
1245046   +   H1x2_5  =     1.73048436159558 * S_AcceptedCmpTotal
1245047   +          +     1.91388487556197 * S_Age  +     0.14880026885923 * S_Frq
1245048   +          +      0.5905347897806 * S_Income  +     1.67048168226736 *
1245049   +        S_Kidhome  +     0.03869174467752 * S_Mnt  +    -0.71187911364266 *
1245050   +        S_MntFishProducts  +     0.93023590693473 * S_MntFruits
1245051   +          +     0.22907372790948 * S_MntGoldProds  +    -1.05941282177437 *
1245052   +        S_MntMeatProducts  +    -0.73905281508342 * S_MntSweetProducts
1245053   +          +     0.04429898588386 * S_MntWines  +    -0.47487263648723 *
1245054   +        S_MonthsAsCustomer  +     0.00382111008361 * S_NumCatalogPurchases
1245055   +          +    -0.21237915559831 * S_NumDealsPurchases
1245056   +          +     0.48256923764182 * S_NumDistPurchases
1245057   +          +    -0.45553093140641 * S_NumStorePurchases
1245058   +          +      0.5593655963659 * S_NumWebPurchases
1245059   +          +     0.27943768691188 * S_NumWebVisitsMonth
1245060   +          +     1.94452735574997 * S_RFMstat  +    -0.89811355261154 *
1245061   +        S_RMntFrq  +    -1.62796011550484 * S_Recency
1245062   +          +     0.60487421956906 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.73048436159558 * S_AcceptedCmpTotal + 1.91388487556197 *
S_Age + 0.14880026885923 * S_Frq + 0.5905347897806 * S_Income + 1.67048168226736 * S_Kidhome +
0.03869174467752 * S_Mnt + -0.71187911364266 * S_MntFishProducts + 0.93023590693473 *
S_MntFruits + 0.22907372790948 * S_MntGoldProds + -1.05941282177437 * S_MntMeatProducts +
-0.73905281508342 * S_MntSweetProducts + 0.04429898588386 * S_MntWines + -0.47487263648723 *
S_MonthsAsCustomer + 0.00382111008361 * S_NumCatalogPurchases + -0.21237915559831 *
S_NumDealsPurchases + 0.48256923764182 * S_NumDistPurchases + -0.45553093140641 *
S_NumStorePurchases + 0.5593655963659 * S_NumWebPurchases + 0.27943768691188 *
S_NumWebVisitsMonth + 1.94452735574997 * S_RFMstat + -0.89811355261154 * S_RMntFrq +
-1.62796011550484 * S_Recency + 0.60487421956906 * S_Teenhome ;
1245063   +   H1x2_6  =    -0.32010880515459 * S_AcceptedCmpTotal
1245064   +          +     0.95304983421791 * S_Age  +      -0.316044010281 * S_Frq
1245065   +          +     1.10925678578158 * S_Income  +     1.28019020117471 *
1245066   +        S_Kidhome  +     1.02498438668688 * S_Mnt  +     -1.8898236827792 *
1245067   +        S_MntFishProducts  +     0.96543971612672 * S_MntFruits
1245068   +          +    -0.21422669977227 * S_MntGoldProds  +     -0.0840639948559 *
1245069   +        S_MntMeatProducts  +     1.27902687109389 * S_MntSweetProducts
1245070   +          +    -1.38957846154598 * S_MntWines  +     0.80004372871482 *
1245071   +        S_MonthsAsCustomer  +    -0.19381123279552 * S_NumCatalogPurchases
1245072   +          +     2.38967021388062 * S_NumDealsPurchases
1245073   +          +    -0.97722398866481 * S_NumDistPurchases
1245074   +          +     1.57612333191312 * S_NumStorePurchases
1245075   +          +    -0.75968679115983 * S_NumWebPurchases
1245076   +          +    -0.64207187757251 * S_NumWebVisitsMonth
1245077   +          +     1.06529999122381 * S_RFMstat  +     0.67095385521555 *
1245078   +        S_RMntFrq  +     1.71313869798331 * S_Recency
1245079   +          +     1.39045686636707 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_6 = -0.32010880515459 * S_AcceptedCmpTotal + 0.95304983421791 *
S_Age + -0.316044010281 * S_Frq + 1.10925678578158 * S_Income + 1.28019020117471 * S_Kidhome +
1.02498438668688 * S_Mnt + -1.8898236827792 * S_MntFishProducts + 0.96543971612672 *
S_MntFruits + -0.21422669977227 * S_MntGoldProds + -0.0840639948559 * S_MntMeatProducts +
1.27902687109389 * S_MntSweetProducts + -1.38957846154598 * S_MntWines + 0.80004372871482 *
S_MonthsAsCustomer + -0.19381123279552 * S_NumCatalogPurchases + 2.38967021388062 *
S_NumDealsPurchases + -0.97722398866481 * S_NumDistPurchases + 1.57612333191312 *
S_NumStorePurchases + -0.75968679115983 * S_NumWebPurchases + -0.64207187757251 *
S_NumWebVisitsMonth + 1.06529999122381 * S_RFMstat + 0.67095385521555 * S_RMntFrq +
1.71313869798331 * S_Recency + 1.39045686636707 * S_Teenhome ;
1245080   +   H1x2_1  = H1x2_1  +    -1.32125124093028 * AcceptedCmp10
1245081   +          +    -0.61219063588492 * AcceptedCmp20  +     1.20821214973577 *
1245082   +        AcceptedCmp30  +    -1.13548727550981 * AcceptedCmp40
1245083   +          +     0.04405769197194 * AcceptedCmp50  +      0.7940658605271 *
1245084   +        Complain0  +     1.05933486404834 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -1.32125124093028 * AcceptedCmp10 + -0.61219063588492
* AcceptedCmp20 + 1.20821214973577 * AcceptedCmp30 + -1.13548727550981 * AcceptedCmp40 +
0.04405769197194 * AcceptedCmp50 + 0.7940658605271 * Complain0 + 1.05933486404834 *
HigherEducationBinary0 ;
1245085   +   H1x2_2  = H1x2_2  +     1.56313777120806 * AcceptedCmp10
1245086   +          +    -1.12997680537456 * AcceptedCmp20  +     1.19262470365504 *
1245087   +        AcceptedCmp30  +    -0.98995493161689 * AcceptedCmp40
1245088   +          +      -1.827141957557 * AcceptedCmp50  +    -0.43809188233899 *
1245089   +        Complain0  +      -0.627000653672 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 1.56313777120806 * AcceptedCmp10 + -1.12997680537456 *
AcceptedCmp20 + 1.19262470365504 * AcceptedCmp30 + -0.98995493161689 * AcceptedCmp40 +
-1.827141957557 * AcceptedCmp50 + -0.43809188233899 * Complain0 + -0.627000653672 *
HigherEducationBinary0 ;
1245090   +   H1x2_3  = H1x2_3  +     1.32174755827017 * AcceptedCmp10
1245091   +          +     1.00086479754098 * AcceptedCmp20  +      0.4636133487385 *
1245092   +        AcceptedCmp30  +     1.34878553883758 * AcceptedCmp40
1245093   +          +    -2.36241584924476 * AcceptedCmp50  +       1.082421071431 *
1245094   +        Complain0  +    -0.32514144517436 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 1.32174755827017 * AcceptedCmp10 + 1.00086479754098 *
AcceptedCmp20 + 0.4636133487385 * AcceptedCmp30 + 1.34878553883758 * AcceptedCmp40 +
-2.36241584924476 * AcceptedCmp50 + 1.082421071431 * Complain0 + -0.32514144517436 *
HigherEducationBinary0 ;
1245095   +   H1x2_4  = H1x2_4  +     0.39556775796131 * AcceptedCmp10
1245096   +          +     0.06457727211285 * AcceptedCmp20  +    -1.44632749800655 *
1245097   +        AcceptedCmp30  +     1.20294678514383 * AcceptedCmp40
1245098   +          +    -0.01594330886358 * AcceptedCmp50  +    -2.06895895180485 *
1245099   +        Complain0  +    -0.01374012569775 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.39556775796131 * AcceptedCmp10 + 0.06457727211285 *
AcceptedCmp20 + -1.44632749800655 * AcceptedCmp30 + 1.20294678514383 * AcceptedCmp40 +
-0.01594330886358 * AcceptedCmp50 + -2.06895895180485 * Complain0 + -0.01374012569775 *
HigherEducationBinary0 ;
1245100   +   H1x2_5  = H1x2_5  +     1.11945933535638 * AcceptedCmp10
1245101   +          +     0.26383973979566 * AcceptedCmp20  +    -0.40426240061746 *
1245102   +        AcceptedCmp30  +     1.46916781894719 * AcceptedCmp40
1245103   +          +     0.26827715088644 * AcceptedCmp50  +     1.50074465469998 *
1245104   +        Complain0  +     -1.0626185000486 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 1.11945933535638 * AcceptedCmp10 + 0.26383973979566 *
AcceptedCmp20 + -0.40426240061746 * AcceptedCmp30 + 1.46916781894719 * AcceptedCmp40 +
0.26827715088644 * AcceptedCmp50 + 1.50074465469998 * Complain0 + -1.0626185000486 *
HigherEducationBinary0 ;
1245105   +   H1x2_6  = H1x2_6  +    -0.87625232174239 * AcceptedCmp10
1245106   +          +     0.72228047975642 * AcceptedCmp20  +     1.34904015028355 *
1245107   +        AcceptedCmp30  +     1.55639496207852 * AcceptedCmp40
1245108   +          +    -0.98741935337746 * AcceptedCmp50  +     0.99421811137074 *
1245109   +        Complain0  +    -1.69180618270074 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + -0.87625232174239 * AcceptedCmp10 + 0.72228047975642 *
AcceptedCmp20 + 1.34904015028355 * AcceptedCmp30 + 1.55639496207852 * AcceptedCmp40 +
-0.98741935337746 * AcceptedCmp50 + 0.99421811137074 * Complain0 + -1.69180618270074 *
HigherEducationBinary0 ;
1245110   +   H1x2_1  = H1x2_1  +    -0.17034446979478 * Education2n_Cycle
1245111   +          +    -0.75872196172063 * EducationBasic  +     0.44107677662894 *
1245112   +        EducationGraduation  +      0.1073450284316 * EducationMaster
1245113   +          +     0.96470902298142 * Marital_StatusDivorced
1245114   +          +     0.94805959268314 * Marital_StatusMarried
1245115   +          +     -0.6523948769616 * Marital_StatusSingle
1245116   +          +     0.07557344719737 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.17034446979478 * Education2n_Cycle +
-0.75872196172063 * EducationBasic + 0.44107677662894 * EducationGraduation + 0.1073450284316
* EducationMaster + 0.96470902298142 * Marital_StatusDivorced + 0.94805959268314 *
Marital_StatusMarried + -0.6523948769616 * Marital_StatusSingle + 0.07557344719737 *
Marital_StatusTogether ;
1245117   +   H1x2_2  = H1x2_2  +    -0.42515060901662 * Education2n_Cycle
1245118   +          +    -1.05213629639837 * EducationBasic  +     0.72603871617959 *
1245119   +        EducationGraduation  +    -1.34927753306064 * EducationMaster
1245120   +          +      0.3918249505531 * Marital_StatusDivorced
1245121   +          +    -0.00968091979586 * Marital_StatusMarried
1245122   +          +     0.84615379885071 * Marital_StatusSingle
1245123   +          +     0.34817324570682 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.42515060901662 * Education2n_Cycle +
-1.05213629639837 * EducationBasic + 0.72603871617959 * EducationGraduation +
-1.34927753306064 * EducationMaster + 0.3918249505531 * Marital_StatusDivorced +
-0.00968091979586 * Marital_StatusMarried + 0.84615379885071 * Marital_StatusSingle +
0.34817324570682 * Marital_StatusTogether ;
1245124   +   H1x2_3  = H1x2_3  +    -0.31002362860852 * Education2n_Cycle
1245125   +          +     1.40744525716089 * EducationBasic  +     2.06403096539358 *
1245126   +        EducationGraduation  +     -0.8672743321499 * EducationMaster
1245127   +          +     1.14335160313191 * Marital_StatusDivorced
1245128   +          +     0.50580517192175 * Marital_StatusMarried
1245129   +          +     0.17264295020921 * Marital_StatusSingle
1245130   +          +    -0.58193119255736 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -0.31002362860852 * Education2n_Cycle +
1.40744525716089 * EducationBasic + 2.06403096539358 * EducationGraduation + -0.8672743321499
* EducationMaster + 1.14335160313191 * Marital_StatusDivorced + 0.50580517192175 *
Marital_StatusMarried + 0.17264295020921 * Marital_StatusSingle + -0.58193119255736 *
Marital_StatusTogether ;
1245131   +   H1x2_4  = H1x2_4  +     0.55057637605468 * Education2n_Cycle
1245132   +          +    -0.73070803276142 * EducationBasic  +     0.40424625808481 *
1245133   +        EducationGraduation  +     1.95818378342783 * EducationMaster
1245134   +          +    -0.11238504444225 * Marital_StatusDivorced
1245135   +          +    -0.81348274043749 * Marital_StatusMarried
1245136   +          +     0.46075415610001 * Marital_StatusSingle
1245137   +          +    -0.17552649817722 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.55057637605468 * Education2n_Cycle +
-0.73070803276142 * EducationBasic + 0.40424625808481 * EducationGraduation + 1.95818378342783
* EducationMaster + -0.11238504444225 * Marital_StatusDivorced + -0.81348274043749 *
Marital_StatusMarried + 0.46075415610001 * Marital_StatusSingle + -0.17552649817722 *
Marital_StatusTogether ;
1245138   +   H1x2_5  = H1x2_5  +     0.43341125564688 * Education2n_Cycle
1245139   +          +     2.81958018976644 * EducationBasic  +     0.28773362443315 *
1245140   +        EducationGraduation  +     0.08396135672504 * EducationMaster
1245141   +          +    -0.46342068701431 * Marital_StatusDivorced
1245142   +          +    -0.41667845270204 * Marital_StatusMarried
1245143   +          +    -0.47166707496281 * Marital_StatusSingle
1245144   +          +     0.54110155717306 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.43341125564688 * Education2n_Cycle +
2.81958018976644 * EducationBasic + 0.28773362443315 * EducationGraduation + 0.08396135672504
* EducationMaster + -0.46342068701431 * Marital_StatusDivorced + -0.41667845270204 *
Marital_StatusMarried + -0.47166707496281 * Marital_StatusSingle + 0.54110155717306 *
Marital_StatusTogether ;
1245145   +   H1x2_6  = H1x2_6  +    -0.27163102711307 * Education2n_Cycle
1245146   +          +    -0.04052143781957 * EducationBasic  +     0.97902549344774 *
1245147   +        EducationGraduation  +     0.36656103863186 * EducationMaster
1245148   +          +    -0.45376613787812 * Marital_StatusDivorced
1245149   +          +     0.01337046049801 * Marital_StatusMarried
1245150   +          +    -0.92811489484121 * Marital_StatusSingle
1245151   +          +     1.52402650450634 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + -0.27163102711307 * Education2n_Cycle +
-0.04052143781957 * EducationBasic + 0.97902549344774 * EducationGraduation + 0.36656103863186
* EducationMaster + -0.45376613787812 * Marital_StatusDivorced + 0.01337046049801 *
Marital_StatusMarried + -0.92811489484121 * Marital_StatusSingle + 1.52402650450634 *
Marital_StatusTogether ;
1245152   +   H1x2_1  =     0.27200642200874 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.27200642200874 + H1x2_1 ;
1245153   +   H1x2_2  =     0.52117161047058 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.52117161047058 + H1x2_2 ;
1245154   +   H1x2_3  =    -1.04763461279984 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -1.04763461279984 + H1x2_3 ;
1245155   +   H1x2_4  =     0.10516307959318 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.10516307959318 + H1x2_4 ;
1245156   +   H1x2_5  =     1.24237093160919 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.24237093160919 + H1x2_5 ;
1245157   +   H1x2_6  =    -0.57977518763852 + H1x2_6 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = -0.57977518763852 + H1x2_6 ;
1245158   +   H1x2_7  = 0;
MPRINT(EM_DIAGRAM):   H1x2_7 = 0;
1245159   +   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 , H1x2_7
1245160   +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 ,
H1x2_7 );
1245161   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1245162   +   H1x2_1  = EXP(H1x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(H1x2_1 - _MAX_);
1245163   +   _SUM_ = _SUM_ + H1x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_1 ;
1245164   +   H1x2_2  = EXP(H1x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(H1x2_2 - _MAX_);
1245165   +   _SUM_ = _SUM_ + H1x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_2 ;
1245166   +   H1x2_3  = EXP(H1x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(H1x2_3 - _MAX_);
1245167   +   _SUM_ = _SUM_ + H1x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_3 ;
1245168   +   H1x2_4  = EXP(H1x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(H1x2_4 - _MAX_);
1245169   +   _SUM_ = _SUM_ + H1x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_4 ;
1245170   +   H1x2_5  = EXP(H1x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(H1x2_5 - _MAX_);
1245171   +   _SUM_ = _SUM_ + H1x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_5 ;
1245172   +   H1x2_6  = EXP(H1x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(H1x2_6 - _MAX_);
1245173   +   _SUM_ = _SUM_ + H1x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_6 ;
1245174   +   H1x2_7  = EXP(H1x2_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_7 = EXP(H1x2_7 - _MAX_);
1245175   +   _SUM_ = _SUM_ + H1x2_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_7 ;
1245176   +   H1x2_1  = H1x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 / _SUM_;
1245177   +   H1x2_2  = H1x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 / _SUM_;
1245178   +   H1x2_3  = H1x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 / _SUM_;
1245179   +   H1x2_4  = H1x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 / _SUM_;
1245180   +   H1x2_5  = H1x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 / _SUM_;
1245181   +   H1x2_6  = H1x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 / _SUM_;
1245182   +   H1x2_7  = H1x2_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_7 = H1x2_7 / _SUM_;
1245183   +END;
MPRINT(EM_DIAGRAM):   END;
1245184   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1245185   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
1245186   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
1245187   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
1245188   +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
1245189   +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
1245190   +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
1245191   +   H1x2_7  = .;
MPRINT(EM_DIAGRAM):   H1x2_7 = .;
1245192   +END;
MPRINT(EM_DIAGRAM):   END;
1245193   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1245194   +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
1245195   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1245196   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1245197   +   H2x1_1  =     3.19986933046591 * H1x1_1  +    -0.53665634063887 * H1x1_2
1245198   +          +     1.71172628690017 * H1x1_3  +    -1.33944402954134 * H1x1_4
1245199   +          +    -1.93533827156845 * H1x1_5  +    -0.85772802964317 * H1x1_6
1245200   +          +     0.60984669129006 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 3.19986933046591 * H1x1_1 + -0.53665634063887 * H1x1_2 +
1.71172628690017 * H1x1_3 + -1.33944402954134 * H1x1_4 + -1.93533827156845 * H1x1_5 +
-0.85772802964317 * H1x1_6 + 0.60984669129006 * H1x1_7 ;
1245201   +   H2x1_2  =     -2.1883484075031 * H1x1_1  +     0.17578635446135 * H1x1_2
1245202   +          +    -1.79384950890077 * H1x1_3  +     0.88942614754722 * H1x1_4
1245203   +          +     0.41077752133457 * H1x1_5  +       0.509832853125 * H1x1_6
1245204   +          +    -0.28121910805072 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -2.1883484075031 * H1x1_1 + 0.17578635446135 * H1x1_2 +
-1.79384950890077 * H1x1_3 + 0.88942614754722 * H1x1_4 + 0.41077752133457 * H1x1_5 +
0.509832853125 * H1x1_6 + -0.28121910805072 * H1x1_7 ;
1245205   +   H2x1_3  =     0.86281981700921 * H1x1_1  +    -1.15482345233328 * H1x1_2
1245206   +          +     0.64743938802141 * H1x1_3  +     1.08117298211616 * H1x1_4
1245207   +          +      -0.363297480437 * H1x1_5  +    -1.58703254226713 * H1x1_6
1245208   +          +     0.54468402771449 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 0.86281981700921 * H1x1_1 + -1.15482345233328 * H1x1_2 +
0.64743938802141 * H1x1_3 + 1.08117298211616 * H1x1_4 + -0.363297480437 * H1x1_5 +
-1.58703254226713 * H1x1_6 + 0.54468402771449 * H1x1_7 ;
1245209   +   H2x1_4  =    -0.43420906601647 * H1x1_1  +     0.36485369627974 * H1x1_2
1245210   +          +    -2.42315183886716 * H1x1_3  +     0.22337896770247 * H1x1_4
1245211   +          +    -0.65684369622605 * H1x1_5  +     0.25211011207532 * H1x1_6
1245212   +          +     0.16704425645668 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -0.43420906601647 * H1x1_1 + 0.36485369627974 * H1x1_2 +
-2.42315183886716 * H1x1_3 + 0.22337896770247 * H1x1_4 + -0.65684369622605 * H1x1_5 +
0.25211011207532 * H1x1_6 + 0.16704425645668 * H1x1_7 ;
1245213   +   H2x1_5  =     0.61083333511105 * H1x1_1  +     1.11038871398931 * H1x1_2
1245214   +          +      0.4617674661653 * H1x1_3  +    -0.42039958365963 * H1x1_4
1245215   +          +    -1.37408000010678 * H1x1_5  +     0.03897439094411 * H1x1_6
1245216   +          +    -0.82592861674077 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = 0.61083333511105 * H1x1_1 + 1.11038871398931 * H1x1_2 +
0.4617674661653 * H1x1_3 + -0.42039958365963 * H1x1_4 + -1.37408000010678 * H1x1_5 +
0.03897439094411 * H1x1_6 + -0.82592861674077 * H1x1_7 ;
1245217   +   H2x1_6  =     1.30877201101082 * H1x1_1  +     1.55143256487324 * H1x1_2
1245218   +          +    -1.20237741381937 * H1x1_3  +       2.394122059946 * H1x1_4
1245219   +          +     1.83804290225468 * H1x1_5  +     0.83132818010396 * H1x1_6
1245220   +          +     1.18399340483001 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.30877201101082 * H1x1_1 + 1.55143256487324 * H1x1_2 +
-1.20237741381937 * H1x1_3 + 2.394122059946 * H1x1_4 + 1.83804290225468 * H1x1_5 +
0.83132818010396 * H1x1_6 + 1.18399340483001 * H1x1_7 ;
1245221   +   H2x1_1  = H2x1_1  +    -2.41276052972753 * H1x2_1
1245222   +          +     0.38601054263899 * H1x2_2  +     0.54498789581044 * H1x2_3
1245223   +          +    -0.55304188445569 * H1x2_4  +     0.29484780749868 * H1x2_5
1245224   +          +     0.44012580105051 * H1x2_6  +     0.43086375065556 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -2.41276052972753 * H1x2_1 + 0.38601054263899 * H1x2_2
+ 0.54498789581044 * H1x2_3 + -0.55304188445569 * H1x2_4 + 0.29484780749868 * H1x2_5 +
0.44012580105051 * H1x2_6 + 0.43086375065556 * H1x2_7 ;
1245225   +   H2x1_2  = H2x1_2  +    -1.03173201511154 * H1x2_1
1245226   +          +     0.62119574580435 * H1x2_2  +     1.71782745718335 * H1x2_3
1245227   +          +     0.05391903933014 * H1x2_4  +     1.52443015967438 * H1x2_5
1245228   +          +     0.22301831343286 * H1x2_6  +     0.66204940430171 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -1.03173201511154 * H1x2_1 + 0.62119574580435 * H1x2_2
+ 1.71782745718335 * H1x2_3 + 0.05391903933014 * H1x2_4 + 1.52443015967438 * H1x2_5 +
0.22301831343286 * H1x2_6 + 0.66204940430171 * H1x2_7 ;
1245229   +   H2x1_3  = H2x1_3  +     1.37871502475142 * H1x2_1
1245230   +          +     0.02099445181492 * H1x2_2  +     0.44720218317742 * H1x2_3
1245231   +          +    -1.29625929820096 * H1x2_4  +    -1.29169956389384 * H1x2_5
1245232   +          +    -0.21403739905139 * H1x2_6  +    -0.03075946378871 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + 1.37871502475142 * H1x2_1 + 0.02099445181492 * H1x2_2
+ 0.44720218317742 * H1x2_3 + -1.29625929820096 * H1x2_4 + -1.29169956389384 * H1x2_5 +
-0.21403739905139 * H1x2_6 + -0.03075946378871 * H1x2_7 ;
1245233   +   H2x1_4  = H2x1_4  +     1.94121727472617 * H1x2_1
1245234   +          +     0.23207290279299 * H1x2_2  +      0.3162872281134 * H1x2_3
1245235   +          +    -0.40199017937523 * H1x2_4  +     0.69294460110289 * H1x2_5
1245236   +          +    -1.00758272664059 * H1x2_6  +    -1.41698057960021 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 1.94121727472617 * H1x2_1 + 0.23207290279299 * H1x2_2
+ 0.3162872281134 * H1x2_3 + -0.40199017937523 * H1x2_4 + 0.69294460110289 * H1x2_5 +
-1.00758272664059 * H1x2_6 + -1.41698057960021 * H1x2_7 ;
1245237   +   H2x1_5  = H2x1_5  +     1.19546023857185 * H1x2_1
1245238   +          +    -1.00266987736442 * H1x2_2  +     0.71838447032796 * H1x2_3
1245239   +          +     1.70968347732204 * H1x2_4  +    -0.26894423802892 * H1x2_5
1245240   +          +    -0.61655519090213 * H1x2_6  +     2.21931491555405 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + 1.19546023857185 * H1x2_1 + -1.00266987736442 * H1x2_2
+ 0.71838447032796 * H1x2_3 + 1.70968347732204 * H1x2_4 + -0.26894423802892 * H1x2_5 +
-0.61655519090213 * H1x2_6 + 2.21931491555405 * H1x2_7 ;
1245241   +   H2x1_6  = H2x1_6  +    -0.48559886762231 * H1x2_1
1245242   +          +     0.93218274010134 * H1x2_2  +     0.23140948782865 * H1x2_3
1245243   +          +     0.72139310562219 * H1x2_4  +    -0.11143939877368 * H1x2_5
1245244   +          +     0.74022211257293 * H1x2_6  +      1.0449314568566 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + -0.48559886762231 * H1x2_1 + 0.93218274010134 * H1x2_2
+ 0.23140948782865 * H1x2_3 + 0.72139310562219 * H1x2_4 + -0.11143939877368 * H1x2_5 +
0.74022211257293 * H1x2_6 + 1.0449314568566 * H1x2_7 ;
1245245   +   H2x1_1  =     0.42952855003777 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 0.42952855003777 + H2x1_1 ;
1245246   +   H2x1_2  =     1.61752083096638 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.61752083096638 + H2x1_2 ;
1245247   +   H2x1_3  =    -0.71617788867723 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -0.71617788867723 + H2x1_3 ;
1245248   +   H2x1_4  =     0.39147546708847 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 0.39147546708847 + H2x1_4 ;
1245249   +   H2x1_5  =    -0.56259054185247 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -0.56259054185247 + H2x1_5 ;
1245250   +   H2x1_6  =     0.31857109159246 + H2x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 0.31857109159246 + H2x1_6 ;
1245251   +   H2x1_7  = 0;
MPRINT(EM_DIAGRAM):   H2x1_7 = 0;
1245252   +   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 , H2x1_6 , H2x1_7
1245253   +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 , H2x1_6 ,
H2x1_7 );
1245254   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1245255   +   H2x1_1  = EXP(H2x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_1 = EXP(H2x1_1 - _MAX_);
1245256   +   _SUM_ = _SUM_ + H2x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_1 ;
1245257   +   H2x1_2  = EXP(H2x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_2 = EXP(H2x1_2 - _MAX_);
1245258   +   _SUM_ = _SUM_ + H2x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_2 ;
1245259   +   H2x1_3  = EXP(H2x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_3 = EXP(H2x1_3 - _MAX_);
1245260   +   _SUM_ = _SUM_ + H2x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_3 ;
1245261   +   H2x1_4  = EXP(H2x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_4 = EXP(H2x1_4 - _MAX_);
1245262   +   _SUM_ = _SUM_ + H2x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_4 ;
1245263   +   H2x1_5  = EXP(H2x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_5 = EXP(H2x1_5 - _MAX_);
1245264   +   _SUM_ = _SUM_ + H2x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_5 ;
1245265   +   H2x1_6  = EXP(H2x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_6 = EXP(H2x1_6 - _MAX_);
1245266   +   _SUM_ = _SUM_ + H2x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_6 ;
1245267   +   H2x1_7  = EXP(H2x1_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_7 = EXP(H2x1_7 - _MAX_);
1245268   +   _SUM_ = _SUM_ + H2x1_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_7 ;
1245269   +   H2x1_1  = H2x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 / _SUM_;
1245270   +   H2x1_2  = H2x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 / _SUM_;
1245271   +   H2x1_3  = H2x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 / _SUM_;
1245272   +   H2x1_4  = H2x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 / _SUM_;
1245273   +   H2x1_5  = H2x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 / _SUM_;
1245274   +   H2x1_6  = H2x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 / _SUM_;
1245275   +   H2x1_7  = H2x1_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_7 = H2x1_7 / _SUM_;
1245276   +END;
MPRINT(EM_DIAGRAM):   END;
1245277   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1245278   +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
1245279   +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
1245280   +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
1245281   +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
1245282   +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
1245283   +   H2x1_6  = .;
MPRINT(EM_DIAGRAM):   H2x1_6 = .;
1245284   +   H2x1_7  = .;
MPRINT(EM_DIAGRAM):   H2x1_7 = .;
1245285   +END;
MPRINT(EM_DIAGRAM):   END;
1245286   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1245287   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1245288   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1245289   +
1245290   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1245291   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1245292   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1245293   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1245294   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1245295   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1245296   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1245297   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1245298   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1245299   +end;
MPRINT(EM_DIAGRAM):   end;
1245300   +else do;
MPRINT(EM_DIAGRAM):   else do;
1245301   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1245302   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1245303   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1245304   +   end;
MPRINT(EM_DIAGRAM):   end;
1245305   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1245306   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1245307   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1245308   +   end;
MPRINT(EM_DIAGRAM):   end;
1245309   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1245310   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1245311   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1245312   +   end;
MPRINT(EM_DIAGRAM):   end;
1245313   +end;
MPRINT(EM_DIAGRAM):   end;
1245314   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1245315   +   P_DepVar1  =     25.2027326018714 * H2x1_1  +    -8.05331379419082 * H2x1_2
1245316   +          +     2.64798805383536 * H2x1_3  +    -4.52736775271107 * H2x1_4
1245317   +          +     6.71812741736202 * H2x1_5  +    -12.2785047473885 * H2x1_6
1245318   +          +    -4.41291972336422 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 25.2027326018714 * H2x1_1 + -8.05331379419082 * H2x1_2 +
2.64798805383536 * H2x1_3 + -4.52736775271107 * H2x1_4 + 6.71812741736202 * H2x1_5 +
-12.2785047473885 * H2x1_6 + -4.41291972336422 * H2x1_7 ;
1245319   +   P_DepVar1  =     1.22134962002326 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.22134962002326 + P_DepVar1 ;
1245320   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1245321   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1245322   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1245323   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1245324   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1245325   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1245326   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1245327   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1245328   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1245329   +END;
MPRINT(EM_DIAGRAM):   END;
1245330   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1245331   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1245332   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1245333   +END;
MPRINT(EM_DIAGRAM):   END;
1245334   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1245335   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1245336   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1245337   +END;
MPRINT(EM_DIAGRAM):   END;
1245338   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1245339   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1245340   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1245341   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1245342   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1245343   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1245344   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1245345   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1245346   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1245347   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1245348   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1245349   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1245350   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1245351   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1245352   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1245353   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1245354   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1245355   +END;
MPRINT(EM_DIAGRAM):   END;
1245356   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1245357   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1245358   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1245359   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1245360   +* Renaming variables for AutoNeural12;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural12;
1245361   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1245362   +* Renaming Posterior variables for AutoNeural12;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural12;
1245363   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1245364   +drop AutoNeural12_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_P_DepVar1;
1245365   +AutoNeural12_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural12_P_DepVar1 = P_DepVar1;
1245366   +drop AutoNeural12_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_P_DepVar0;
1245367   +AutoNeural12_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural12_P_DepVar0 = P_DepVar0;
1245368   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1245369   +* Renaming _WARN_ variable for AutoNeural12;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural12;
1245370   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1245371   +length AutoNeural12_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural12_WARN_ $4;
1245372   +drop AutoNeural12_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_WARN_;
1245373   +AutoNeural12_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural12_WARN_ = _WARN_;
1245374   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1245375   +* Ensmbl46: Scoring Code of model 4 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl46: Scoring Code of model 4 of 5;
1245376   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1245377   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1245378   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
1245379   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1245380   +* NODE: AutoNeural11;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural11;
1245381   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1245382   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1245383   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1245384   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1245385   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1245386   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1245387   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1245388   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1245389   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1245390   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1245391   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1245392   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1245393   +LENGTH _WARN_ $4
1245394   +      F_DepVar  $ 12
1245395   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1245396   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1245397   +
1245398   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1245399   +
1245400   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1245401   +
1245402   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1245403   +
1245404   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1245405   +
1245406   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1245407   +
1245408   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1245409   +
1245410   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1245411   +
1245412   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1245413   +
1245414   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1245415   +
1245416   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1245417   +
1245418   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1245419   +
1245420   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1245421   +
1245422   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1245423   +
1245424   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1245425   +
1245426   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1245427   +
1245428   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1245429   +
1245430   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1245431   +
1245432   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1245433   +
1245434   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1245435   +
1245436   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1245437   +
1245438   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1245439   +
1245440   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1245441   +
1245442   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1245443   +
1245444   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1245445   +
1245446   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1245447   +
1245448   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1245449   +
1245450   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1245451   +
1245452   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1245453   +
1245454   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1245455   +
1245456   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1245457   +
1245458   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1245459   +
1245460   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1245461   +
1245462   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1245463   +
1245464   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1245465   +
1245466   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1245467   +
1245468   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1245469   +
1245470   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1245471   +
1245472   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
1245473   +
1245474   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
1245475   +
1245476   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
1245477   +
1245478   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
1245479   +
1245480   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
1245481   +
1245482   +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
1245483   +
1245484   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
1245485   +
1245486   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
1245487   +
1245488   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
1245489   +
1245490   +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
1245491   +
1245492   +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
1245493   +
1245494   +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
1245495   +
1245496   +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
1245497   +
1245498   +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
1245499   +
1245500   +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
1245501   +
1245502   +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
1245503   +
1245504   +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
1245505   +
1245506   +      label H2x1_6 = 'Hidden: H2x1_=6' ;
MPRINT(EM_DIAGRAM):   label H2x1_6 = 'Hidden: H2x1_=6' ;
1245507   +
1245508   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1245509   +
1245510   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1245511   +
1245512   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1245513   +
1245514   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1245515   +
1245516   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1245517   +
1245518   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1245519   +
1245520   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1245521   +
1245522   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1245523   +
1245524   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1245525   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1245526   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1245527   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1245528   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1245529   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1245530   +end;
MPRINT(EM_DIAGRAM):   end;
1245531   +else do;
MPRINT(EM_DIAGRAM):   else do;
1245532   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1245533   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1245534   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1245535   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1245536   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1245537   +   end;
MPRINT(EM_DIAGRAM):   end;
1245538   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1245539   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1245540   +   end;
MPRINT(EM_DIAGRAM):   end;
1245541   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1245542   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1245543   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1245544   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1245545   +   end;
MPRINT(EM_DIAGRAM):   end;
1245546   +end;
MPRINT(EM_DIAGRAM):   end;
1245547   +
1245548   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1245549   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1245550   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1245551   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1245552   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1245553   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1245554   +end;
MPRINT(EM_DIAGRAM):   end;
1245555   +else do;
MPRINT(EM_DIAGRAM):   else do;
1245556   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1245557   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1245558   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1245559   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1245560   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1245561   +   end;
MPRINT(EM_DIAGRAM):   end;
1245562   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1245563   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1245564   +   end;
MPRINT(EM_DIAGRAM):   end;
1245565   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1245566   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1245567   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1245568   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1245569   +   end;
MPRINT(EM_DIAGRAM):   end;
1245570   +end;
MPRINT(EM_DIAGRAM):   end;
1245571   +
1245572   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1245573   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1245574   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1245575   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1245576   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1245577   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1245578   +end;
MPRINT(EM_DIAGRAM):   end;
1245579   +else do;
MPRINT(EM_DIAGRAM):   else do;
1245580   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1245581   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1245582   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1245583   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1245584   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1245585   +   end;
MPRINT(EM_DIAGRAM):   end;
1245586   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1245587   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1245588   +   end;
MPRINT(EM_DIAGRAM):   end;
1245589   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1245590   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1245591   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1245592   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1245593   +   end;
MPRINT(EM_DIAGRAM):   end;
1245594   +end;
MPRINT(EM_DIAGRAM):   end;
1245595   +
1245596   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1245597   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1245598   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1245599   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1245600   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1245601   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1245602   +end;
MPRINT(EM_DIAGRAM):   end;
1245603   +else do;
MPRINT(EM_DIAGRAM):   else do;
1245604   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1245605   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1245606   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1245607   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1245608   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1245609   +   end;
MPRINT(EM_DIAGRAM):   end;
1245610   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1245611   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1245612   +   end;
MPRINT(EM_DIAGRAM):   end;
1245613   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1245614   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1245615   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1245616   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1245617   +   end;
MPRINT(EM_DIAGRAM):   end;
1245618   +end;
MPRINT(EM_DIAGRAM):   end;
1245619   +
1245620   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1245621   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1245622   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1245623   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1245624   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1245625   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1245626   +end;
MPRINT(EM_DIAGRAM):   end;
1245627   +else do;
MPRINT(EM_DIAGRAM):   else do;
1245628   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1245629   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1245630   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1245631   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1245632   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1245633   +   end;
MPRINT(EM_DIAGRAM):   end;
1245634   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1245635   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1245636   +   end;
MPRINT(EM_DIAGRAM):   end;
1245637   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1245638   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1245639   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1245640   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1245641   +   end;
MPRINT(EM_DIAGRAM):   end;
1245642   +end;
MPRINT(EM_DIAGRAM):   end;
1245643   +
1245644   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1245645   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1245646   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1245647   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1245648   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1245649   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1245650   +end;
MPRINT(EM_DIAGRAM):   end;
1245651   +else do;
MPRINT(EM_DIAGRAM):   else do;
1245652   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1245653   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1245654   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1245655   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1245656   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1245657   +   end;
MPRINT(EM_DIAGRAM):   end;
1245658   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1245659   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1245660   +   end;
MPRINT(EM_DIAGRAM):   end;
1245661   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1245662   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1245663   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1245664   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1245665   +   end;
MPRINT(EM_DIAGRAM):   end;
1245666   +end;
MPRINT(EM_DIAGRAM):   end;
1245667   +
1245668   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1245669   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1245670   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1245671   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1245672   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1245673   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1245674   +end;
MPRINT(EM_DIAGRAM):   end;
1245675   +else do;
MPRINT(EM_DIAGRAM):   else do;
1245676   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1245677   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1245678   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1245679   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1245680   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1245681   +   end;
MPRINT(EM_DIAGRAM):   end;
1245682   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1245683   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1245684   +   end;
MPRINT(EM_DIAGRAM):   end;
1245685   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1245686   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1245687   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1245688   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1245689   +   end;
MPRINT(EM_DIAGRAM):   end;
1245690   +end;
MPRINT(EM_DIAGRAM):   end;
1245691   +
1245692   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1245693   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
1245694   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1245695   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1245696   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1245697   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1245698   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1245699   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1245700   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1245701   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1245702   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1245703   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1245704   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1245705   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1245706   +end;
MPRINT(EM_DIAGRAM):   end;
1245707   +else do;
MPRINT(EM_DIAGRAM):   else do;
1245708   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1245709   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1245710   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1245711   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1245712   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1245713   +   end;
MPRINT(EM_DIAGRAM):   end;
1245714   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1245715   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1245716   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1245717   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1245718   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1245719   +   end;
MPRINT(EM_DIAGRAM):   end;
1245720   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1245721   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1245722   +   end;
MPRINT(EM_DIAGRAM):   end;
1245723   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1245724   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1245725   +   end;
MPRINT(EM_DIAGRAM):   end;
1245726   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1245727   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1245728   +   end;
MPRINT(EM_DIAGRAM):   end;
1245729   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1245730   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1245731   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1245732   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1245733   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1245734   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1245735   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1245736   +   end;
MPRINT(EM_DIAGRAM):   end;
1245737   +end;
MPRINT(EM_DIAGRAM):   end;
1245738   +
1245739   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1245740   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1245741   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
1245742   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1245743   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1245744   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1245745   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1245746   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1245747   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1245748   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1245749   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1245750   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1245751   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1245752   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1245753   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1245754   +end;
MPRINT(EM_DIAGRAM):   end;
1245755   +else do;
MPRINT(EM_DIAGRAM):   else do;
1245756   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1245757   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1245758   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1245759   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1245760   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1245761   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1245762   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1245763   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1245764   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1245765   +         end;
MPRINT(EM_DIAGRAM):   end;
1245766   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1245767   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1245768   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1245769   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1245770   +            end;
MPRINT(EM_DIAGRAM):   end;
1245771   +         end;
MPRINT(EM_DIAGRAM):   end;
1245772   +      end;
MPRINT(EM_DIAGRAM):   end;
1245773   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1245774   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1245775   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1245776   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1245777   +         end;
MPRINT(EM_DIAGRAM):   end;
1245778   +      end;
MPRINT(EM_DIAGRAM):   end;
1245779   +   end;
MPRINT(EM_DIAGRAM):   end;
1245780   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1245781   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1245782   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1245783   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1245784   +      end;
MPRINT(EM_DIAGRAM):   end;
1245785   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1245786   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1245787   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1245788   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1245789   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1245790   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1245791   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1245792   +         end;
MPRINT(EM_DIAGRAM):   end;
1245793   +      end;
MPRINT(EM_DIAGRAM):   end;
1245794   +   end;
MPRINT(EM_DIAGRAM):   end;
1245795   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1245796   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1245797   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1245798   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1245799   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1245800   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1245801   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1245802   +   end;
MPRINT(EM_DIAGRAM):   end;
1245803   +end;
MPRINT(EM_DIAGRAM):   end;
1245804   +
1245805   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1245806   +*** Checking missing input Interval
1245807   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1245808   +
1245809   +IF NMISS(
1245810   +   AcceptedCmpTotal ,
1245811   +   Age ,
1245812   +   Frq ,
1245813   +   Income ,
1245814   +   Kidhome ,
1245815   +   Mnt ,
1245816   +   MntFishProducts ,
1245817   +   MntFruits ,
1245818   +   MntGoldProds ,
1245819   +   MntMeatProducts ,
1245820   +   MntSweetProducts ,
1245821   +   MntWines ,
1245822   +   MonthsAsCustomer ,
1245823   +   NumCatalogPurchases ,
1245824   +   NumDealsPurchases ,
1245825   +   NumDistPurchases ,
1245826   +   NumStorePurchases ,
1245827   +   NumWebPurchases ,
1245828   +   NumWebVisitsMonth ,
1245829   +   RFMstat ,
1245830   +   RMntFrq ,
1245831   +   Recency ,
1245832   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
1245833   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1245834   +
1245835   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1245836   +END;
MPRINT(EM_DIAGRAM):   END;
1245837   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1245838   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
1245839   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1245840   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1245841   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1245842   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1245843   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1245844   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1245845   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1245846   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1245847   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1245848   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1245849   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1245850   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1245851   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1245852   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1245853   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1245854   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1245855   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1245856   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1245857   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1245858   +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
1245859   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 *
MonthsAsCustomer ;
1245860   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1245861   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1245862   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1245863   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1245864   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1245865   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1245866   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1245867   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1245868   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1245869   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1245870   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1245871   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1245872   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1245873   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1245874   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1245875   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1245876   +END;
MPRINT(EM_DIAGRAM):   END;
1245877   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1245878   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1245879   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1245880   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1245881   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1245882   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1245883   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1245884   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1245885   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1245886   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1245887   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1245888   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1245889   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1245890   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1245891   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1245892   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1245893   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1245894   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1245895   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1245896   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1245897   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1245898   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1245899   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1245900   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1245901   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1245902   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1245903   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1245904   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1245905   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1245906   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1245907   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1245908   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1245909   +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
1245910   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 *
MonthsAsCustomer ;
1245911   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1245912   +   ELSE S_NumCatalogPurchases
1245913   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1245914   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1245915   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1245916   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1245917   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1245918   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1245919   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1245920   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1245921   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1245922   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1245923   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1245924   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1245925   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1245926   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1245927   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1245928   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1245929   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1245930   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1245931   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1245932   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1245933   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1245934   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1245935   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1245936   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1245937   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1245938   +END;
MPRINT(EM_DIAGRAM):   END;
1245939   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1245940   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
1245941   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1245942   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1245943   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
1245944   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1245945   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1245946   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
1245947   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1245948   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1245949   +   H1x1_1  =    -0.26269469382558 * S_AcceptedCmpTotal
1245950   +          +    -0.06270768091854 * S_Age  +    -0.71225988503068 * S_Frq
1245951   +          +    -0.19030550341755 * S_Income  +    -0.74001834753219 *
1245952   +        S_Kidhome  +    -0.80050230513362 * S_Mnt  +    -0.70546855957287 *
1245953   +        S_MntFishProducts  +    -0.57876563074872 * S_MntFruits
1245954   +          +    -0.00210300489306 * S_MntGoldProds  +     2.60078237485589 *
1245955   +        S_MntMeatProducts  +     -0.9886407516441 * S_MntSweetProducts
1245956   +          +    -2.97488547819955 * S_MntWines  +    -0.61277940059348 *
1245957   +        S_MonthsAsCustomer  +    -0.00096247683063 * S_NumCatalogPurchases
1245958   +          +     0.89422627895323 * S_NumDealsPurchases
1245959   +          +    -0.13304125929765 * S_NumDistPurchases
1245960   +          +    -1.04568442570811 * S_NumStorePurchases
1245961   +          +    -0.28677765126751 * S_NumWebPurchases
1245962   +          +      1.2327638737509 * S_NumWebVisitsMonth
1245963   +          +     0.67421347247009 * S_RFMstat  +     -0.6166808079836 *
1245964   +        S_RMntFrq  +    -0.86930969765816 * S_Recency
1245965   +          +     0.33815651609216 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.26269469382558 * S_AcceptedCmpTotal + -0.06270768091854 *
S_Age + -0.71225988503068 * S_Frq + -0.19030550341755 * S_Income + -0.74001834753219 *
S_Kidhome + -0.80050230513362 * S_Mnt + -0.70546855957287 * S_MntFishProducts +
-0.57876563074872 * S_MntFruits + -0.00210300489306 * S_MntGoldProds + 2.60078237485589 *
S_MntMeatProducts + -0.9886407516441 * S_MntSweetProducts + -2.97488547819955 * S_MntWines +
-0.61277940059348 * S_MonthsAsCustomer + -0.00096247683063 * S_NumCatalogPurchases +
0.89422627895323 * S_NumDealsPurchases + -0.13304125929765 * S_NumDistPurchases +
-1.04568442570811 * S_NumStorePurchases + -0.28677765126751 * S_NumWebPurchases +
1.2327638737509 * S_NumWebVisitsMonth + 0.67421347247009 * S_RFMstat + -0.6166808079836 *
S_RMntFrq + -0.86930969765816 * S_Recency + 0.33815651609216 * S_Teenhome ;
1245966   +   H1x1_2  =     0.55568777293496 * S_AcceptedCmpTotal
1245967   +          +     0.80213442721076 * S_Age  +     0.34635060456486 * S_Frq
1245968   +          +    -0.74174636901916 * S_Income  +    -0.01217809906509 *
1245969   +        S_Kidhome  +     0.26876993353057 * S_Mnt  +     0.04779395124841 *
1245970   +        S_MntFishProducts  +    -0.48668668697685 * S_MntFruits
1245971   +          +    -0.53984501210781 * S_MntGoldProds  +     2.66892669248667 *
1245972   +        S_MntMeatProducts  +     0.48696031818599 * S_MntSweetProducts
1245973   +          +    -1.59625933837852 * S_MntWines  +     0.06275925418664 *
1245974   +        S_MonthsAsCustomer  +     0.97240339275782 * S_NumCatalogPurchases
1245975   +          +     0.04224590196535 * S_NumDealsPurchases
1245976   +          +     0.76554742700113 * S_NumDistPurchases
1245977   +          +    -0.49155496870812 * S_NumStorePurchases
1245978   +          +     0.59606812744403 * S_NumWebPurchases
1245979   +          +     1.86809286276405 * S_NumWebVisitsMonth
1245980   +          +    -0.40257502974261 * S_RFMstat  +    -1.46120938073597 *
1245981   +        S_RMntFrq  +    -2.09222283465666 * S_Recency
1245982   +          +    -0.29369632363913 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.55568777293496 * S_AcceptedCmpTotal + 0.80213442721076 *
S_Age + 0.34635060456486 * S_Frq + -0.74174636901916 * S_Income + -0.01217809906509 *
S_Kidhome + 0.26876993353057 * S_Mnt + 0.04779395124841 * S_MntFishProducts +
-0.48668668697685 * S_MntFruits + -0.53984501210781 * S_MntGoldProds + 2.66892669248667 *
S_MntMeatProducts + 0.48696031818599 * S_MntSweetProducts + -1.59625933837852 * S_MntWines +
0.06275925418664 * S_MonthsAsCustomer + 0.97240339275782 * S_NumCatalogPurchases +
0.04224590196535 * S_NumDealsPurchases + 0.76554742700113 * S_NumDistPurchases +
-0.49155496870812 * S_NumStorePurchases + 0.59606812744403 * S_NumWebPurchases +
1.86809286276405 * S_NumWebVisitsMonth + -0.40257502974261 * S_RFMstat + -1.46120938073597 *
S_RMntFrq + -2.09222283465666 * S_Recency + -0.29369632363913 * S_Teenhome ;
1245983   +   H1x1_3  =    -1.40689454675752 * S_AcceptedCmpTotal
1245984   +          +     0.22713382517751 * S_Age  +     0.51688429566863 * S_Frq
1245985   +          +    -0.07045670111356 * S_Income  +     1.10344455539307 *
1245986   +        S_Kidhome  +     0.24846532877416 * S_Mnt  +       0.663861249099 *
1245987   +        S_MntFishProducts  +     0.91527393572467 * S_MntFruits
1245988   +          +    -0.30189545909263 * S_MntGoldProds  +    -0.72774030731928 *
1245989   +        S_MntMeatProducts  +     0.66425565932635 * S_MntSweetProducts
1245990   +          +     0.55381627079618 * S_MntWines  +      0.6475533846661 *
1245991   +        S_MonthsAsCustomer  +    -1.28926334887526 * S_NumCatalogPurchases
1245992   +          +    -0.04866536993486 * S_NumDealsPurchases
1245993   +          +    -0.53535979020214 * S_NumDistPurchases
1245994   +          +     2.20634071253676 * S_NumStorePurchases
1245995   +          +      0.6164564989007 * S_NumWebPurchases
1245996   +          +    -0.43396314395263 * S_NumWebVisitsMonth
1245997   +          +     0.05322242552204 * S_RFMstat  +     0.56410623855957 *
1245998   +        S_RMntFrq  +     2.37293441098349 * S_Recency
1245999   +          +     1.20608077690677 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -1.40689454675752 * S_AcceptedCmpTotal + 0.22713382517751 *
S_Age + 0.51688429566863 * S_Frq + -0.07045670111356 * S_Income + 1.10344455539307 * S_Kidhome
+ 0.24846532877416 * S_Mnt + 0.663861249099 * S_MntFishProducts + 0.91527393572467 *
S_MntFruits + -0.30189545909263 * S_MntGoldProds + -0.72774030731928 * S_MntMeatProducts +
0.66425565932635 * S_MntSweetProducts + 0.55381627079618 * S_MntWines + 0.6475533846661 *
S_MonthsAsCustomer + -1.28926334887526 * S_NumCatalogPurchases + -0.04866536993486 *
S_NumDealsPurchases + -0.53535979020214 * S_NumDistPurchases + 2.20634071253676 *
S_NumStorePurchases + 0.6164564989007 * S_NumWebPurchases + -0.43396314395263 *
S_NumWebVisitsMonth + 0.05322242552204 * S_RFMstat + 0.56410623855957 * S_RMntFrq +
2.37293441098349 * S_Recency + 1.20608077690677 * S_Teenhome ;
1246000   +   H1x1_4  =      0.8853369558336 * S_AcceptedCmpTotal
1246001   +          +    -0.02447538128281 * S_Age  +    -0.42850426895609 * S_Frq
1246002   +          +     2.31972189756282 * S_Income  +    -1.82782672643583 *
1246003   +        S_Kidhome  +     -0.0790436830894 * S_Mnt  +     0.24407556387791 *
1246004   +        S_MntFishProducts  +     0.21000125209328 * S_MntFruits
1246005   +          +     -0.0538417400508 * S_MntGoldProds  +     0.76422967678518 *
1246006   +        S_MntMeatProducts  +     0.14352092131967 * S_MntSweetProducts
1246007   +          +    -0.47732426074136 * S_MntWines  +      0.2881736828404 *
1246008   +        S_MonthsAsCustomer  +     1.08614742409725 * S_NumCatalogPurchases
1246009   +          +     1.37461255707863 * S_NumDealsPurchases
1246010   +          +    -0.17684775000818 * S_NumDistPurchases
1246011   +          +    -0.62755623855535 * S_NumStorePurchases
1246012   +          +    -1.46551649022657 * S_NumWebPurchases
1246013   +          +     3.35784247878638 * S_NumWebVisitsMonth
1246014   +          +      0.0205421093374 * S_RFMstat  +     0.02151146396087 *
1246015   +        S_RMntFrq  +    -2.61971612923471 * S_Recency
1246016   +          +    -1.74888814570254 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.8853369558336 * S_AcceptedCmpTotal + -0.02447538128281 *
S_Age + -0.42850426895609 * S_Frq + 2.31972189756282 * S_Income + -1.82782672643583 *
S_Kidhome + -0.0790436830894 * S_Mnt + 0.24407556387791 * S_MntFishProducts + 0.21000125209328
* S_MntFruits + -0.0538417400508 * S_MntGoldProds + 0.76422967678518 * S_MntMeatProducts +
0.14352092131967 * S_MntSweetProducts + -0.47732426074136 * S_MntWines + 0.2881736828404 *
S_MonthsAsCustomer + 1.08614742409725 * S_NumCatalogPurchases + 1.37461255707863 *
S_NumDealsPurchases + -0.17684775000818 * S_NumDistPurchases + -0.62755623855535 *
S_NumStorePurchases + -1.46551649022657 * S_NumWebPurchases + 3.35784247878638 *
S_NumWebVisitsMonth + 0.0205421093374 * S_RFMstat + 0.02151146396087 * S_RMntFrq +
-2.61971612923471 * S_Recency + -1.74888814570254 * S_Teenhome ;
1246017   +   H1x1_5  =    -1.18321492018094 * S_AcceptedCmpTotal
1246018   +          +    -0.08221927436186 * S_Age  +    -0.42965792034093 * S_Frq
1246019   +          +    -0.82515640369651 * S_Income  +     -0.7955159282868 *
1246020   +        S_Kidhome  +    -0.24623211609742 * S_Mnt  +     1.14929640730402 *
1246021   +        S_MntFishProducts  +     0.37195406994279 * S_MntFruits
1246022   +          +    -0.11860313293867 * S_MntGoldProds  +     -5.1642360901608 *
1246023   +        S_MntMeatProducts  +     0.30315380386519 * S_MntSweetProducts
1246024   +          +     2.66130913318508 * S_MntWines  +    -0.35226665860471 *
1246025   +        S_MonthsAsCustomer  +    -1.90883979010829 * S_NumCatalogPurchases
1246026   +          +    -0.76256677907121 * S_NumDealsPurchases
1246027   +          +    -0.31591571751692 * S_NumDistPurchases
1246028   +          +      0.0506832614089 * S_NumStorePurchases
1246029   +          +      1.4636796923764 * S_NumWebPurchases
1246030   +          +     0.37743519705036 * S_NumWebVisitsMonth
1246031   +          +    -0.69857477383618 * S_RFMstat  +    -0.87851464788137 *
1246032   +        S_RMntFrq  +     0.16854775832723 * S_Recency
1246033   +          +     0.71697705359003 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.18321492018094 * S_AcceptedCmpTotal + -0.08221927436186 *
S_Age + -0.42965792034093 * S_Frq + -0.82515640369651 * S_Income + -0.7955159282868 *
S_Kidhome + -0.24623211609742 * S_Mnt + 1.14929640730402 * S_MntFishProducts +
0.37195406994279 * S_MntFruits + -0.11860313293867 * S_MntGoldProds + -5.1642360901608 *
S_MntMeatProducts + 0.30315380386519 * S_MntSweetProducts + 2.66130913318508 * S_MntWines +
-0.35226665860471 * S_MonthsAsCustomer + -1.90883979010829 * S_NumCatalogPurchases +
-0.76256677907121 * S_NumDealsPurchases + -0.31591571751692 * S_NumDistPurchases +
0.0506832614089 * S_NumStorePurchases + 1.4636796923764 * S_NumWebPurchases + 0.37743519705036
* S_NumWebVisitsMonth + -0.69857477383618 * S_RFMstat + -0.87851464788137 * S_RMntFrq +
0.16854775832723 * S_Recency + 0.71697705359003 * S_Teenhome ;
1246034   +   H1x1_1  = H1x1_1  +    -0.36100598335798 * AcceptedCmp10
1246035   +          +    -0.80162089620833 * AcceptedCmp20  +    -0.32871385645151 *
1246036   +        AcceptedCmp30  +     0.06493645215559 * AcceptedCmp40
1246037   +          +    -0.79430619699627 * AcceptedCmp50  +    -0.55522128705257 *
1246038   +        Complain0  +    -0.30966226382805 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.36100598335798 * AcceptedCmp10 + -0.80162089620833
* AcceptedCmp20 + -0.32871385645151 * AcceptedCmp30 + 0.06493645215559 * AcceptedCmp40 +
-0.79430619699627 * AcceptedCmp50 + -0.55522128705257 * Complain0 + -0.30966226382805 *
HigherEducationBinary0 ;
1246039   +   H1x1_2  = H1x1_2  +    -0.55315398954303 * AcceptedCmp10
1246040   +          +    -0.74882192477453 * AcceptedCmp20  +    -1.00393247543385 *
1246041   +        AcceptedCmp30  +    -0.99157595784247 * AcceptedCmp40
1246042   +          +     -1.3196947648703 * AcceptedCmp50  +    -0.00342039619706 *
1246043   +        Complain0  +     2.02148667926607 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.55315398954303 * AcceptedCmp10 + -0.74882192477453
* AcceptedCmp20 + -1.00393247543385 * AcceptedCmp30 + -0.99157595784247 * AcceptedCmp40 +
-1.3196947648703 * AcceptedCmp50 + -0.00342039619706 * Complain0 + 2.02148667926607 *
HigherEducationBinary0 ;
1246044   +   H1x1_3  = H1x1_3  +    -1.34147425697576 * AcceptedCmp10
1246045   +          +     0.73907016980814 * AcceptedCmp20  +     0.73398008116032 *
1246046   +        AcceptedCmp30  +     0.96308137699431 * AcceptedCmp40
1246047   +          +     0.35561099349684 * AcceptedCmp50  +    -0.31219143781741 *
1246048   +        Complain0  +     0.90693629583865 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -1.34147425697576 * AcceptedCmp10 + 0.73907016980814 *
AcceptedCmp20 + 0.73398008116032 * AcceptedCmp30 + 0.96308137699431 * AcceptedCmp40 +
0.35561099349684 * AcceptedCmp50 + -0.31219143781741 * Complain0 + 0.90693629583865 *
HigherEducationBinary0 ;
1246049   +   H1x1_4  = H1x1_4  +    -0.50580436048114 * AcceptedCmp10
1246050   +          +    -1.02093523515462 * AcceptedCmp20  +    -0.61029325985231 *
1246051   +        AcceptedCmp30  +    -0.73402161144066 * AcceptedCmp40
1246052   +          +      0.1698155397807 * AcceptedCmp50  +    -0.01243044321253 *
1246053   +        Complain0  +    -0.47467816438005 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.50580436048114 * AcceptedCmp10 + -1.02093523515462
* AcceptedCmp20 + -0.61029325985231 * AcceptedCmp30 + -0.73402161144066 * AcceptedCmp40 +
0.1698155397807 * AcceptedCmp50 + -0.01243044321253 * Complain0 + -0.47467816438005 *
HigherEducationBinary0 ;
1246054   +   H1x1_5  = H1x1_5  +     1.58877963639512 * AcceptedCmp10
1246055   +          +     0.71974146614964 * AcceptedCmp20  +    -0.38703518473707 *
1246056   +        AcceptedCmp30  +     0.18491867078918 * AcceptedCmp40
1246057   +          +     0.72124299050214 * AcceptedCmp50  +    -0.27317285634323 *
1246058   +        Complain0  +      0.1433377302902 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 1.58877963639512 * AcceptedCmp10 + 0.71974146614964 *
AcceptedCmp20 + -0.38703518473707 * AcceptedCmp30 + 0.18491867078918 * AcceptedCmp40 +
0.72124299050214 * AcceptedCmp50 + -0.27317285634323 * Complain0 + 0.1433377302902 *
HigherEducationBinary0 ;
1246059   +   H1x1_1  = H1x1_1  +     0.29126191890253 * Education2n_Cycle
1246060   +          +    -0.73322213407659 * EducationBasic  +     0.33134572731882 *
1246061   +        EducationGraduation  +    -0.37141290775302 * EducationMaster
1246062   +          +     0.68641668264565 * Marital_StatusDivorced
1246063   +          +    -0.81586871439732 * Marital_StatusMarried
1246064   +          +     0.63758920518451 * Marital_StatusSingle
1246065   +          +    -1.07300023346175 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.29126191890253 * Education2n_Cycle +
-0.73322213407659 * EducationBasic + 0.33134572731882 * EducationGraduation +
-0.37141290775302 * EducationMaster + 0.68641668264565 * Marital_StatusDivorced +
-0.81586871439732 * Marital_StatusMarried + 0.63758920518451 * Marital_StatusSingle +
-1.07300023346175 * Marital_StatusTogether ;
1246066   +   H1x1_2  = H1x1_2  +     0.43078991783629 * Education2n_Cycle
1246067   +          +      0.6169213563952 * EducationBasic  +    -0.30246389091319 *
1246068   +        EducationGraduation  +     -0.4412391934844 * EducationMaster
1246069   +          +     0.05137560133238 * Marital_StatusDivorced
1246070   +          +    -2.24401993266209 * Marital_StatusMarried
1246071   +          +     1.57359386216115 * Marital_StatusSingle
1246072   +          +    -1.81897019215773 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.43078991783629 * Education2n_Cycle + 0.6169213563952
* EducationBasic + -0.30246389091319 * EducationGraduation + -0.4412391934844 *
EducationMaster + 0.05137560133238 * Marital_StatusDivorced + -2.24401993266209 *
Marital_StatusMarried + 1.57359386216115 * Marital_StatusSingle + -1.81897019215773 *
Marital_StatusTogether ;
1246073   +   H1x1_3  = H1x1_3  +     0.59284950139581 * Education2n_Cycle
1246074   +          +     0.47333255206751 * EducationBasic  +     0.43514421192824 *
1246075   +        EducationGraduation  +     0.61492669859334 * EducationMaster
1246076   +          +     -1.0649987815942 * Marital_StatusDivorced
1246077   +          +     0.76065111692388 * Marital_StatusMarried
1246078   +          +    -0.21694149754801 * Marital_StatusSingle
1246079   +          +     1.64182073896148 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.59284950139581 * Education2n_Cycle +
0.47333255206751 * EducationBasic + 0.43514421192824 * EducationGraduation + 0.61492669859334
* EducationMaster + -1.0649987815942 * Marital_StatusDivorced + 0.76065111692388 *
Marital_StatusMarried + -0.21694149754801 * Marital_StatusSingle + 1.64182073896148 *
Marital_StatusTogether ;
1246080   +   H1x1_4  = H1x1_4  +    -0.77613125849075 * Education2n_Cycle
1246081   +          +     0.26238013539868 * EducationBasic  +    -0.05526420132276 *
1246082   +        EducationGraduation  +     0.04208620358211 * EducationMaster
1246083   +          +     2.02155453548328 * Marital_StatusDivorced
1246084   +          +    -2.60190649735306 * Marital_StatusMarried
1246085   +          +     1.09149388354927 * Marital_StatusSingle
1246086   +          +    -1.15248770613963 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.77613125849075 * Education2n_Cycle +
0.26238013539868 * EducationBasic + -0.05526420132276 * EducationGraduation + 0.04208620358211
* EducationMaster + 2.02155453548328 * Marital_StatusDivorced + -2.60190649735306 *
Marital_StatusMarried + 1.09149388354927 * Marital_StatusSingle + -1.15248770613963 *
Marital_StatusTogether ;
1246087   +   H1x1_5  = H1x1_5  +    -0.03512618332303 * Education2n_Cycle
1246088   +          +    -0.14907811224838 * EducationBasic  +     0.24885029294709 *
1246089   +        EducationGraduation  +    -0.60853091001689 * EducationMaster
1246090   +          +     0.66315970650309 * Marital_StatusDivorced
1246091   +          +    -1.20476729758152 * Marital_StatusMarried
1246092   +          +     0.56175027826397 * Marital_StatusSingle
1246093   +          +    -1.12798745445913 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.03512618332303 * Education2n_Cycle +
-0.14907811224838 * EducationBasic + 0.24885029294709 * EducationGraduation +
-0.60853091001689 * EducationMaster + 0.66315970650309 * Marital_StatusDivorced +
-1.20476729758152 * Marital_StatusMarried + 0.56175027826397 * Marital_StatusSingle +
-1.12798745445913 * Marital_StatusTogether ;
1246094   +   H1x1_1  =      0.8264813299799 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.8264813299799 + H1x1_1 ;
1246095   +   H1x1_2  =     1.35924705880418 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.35924705880418 + H1x1_2 ;
1246096   +   H1x1_3  =    -0.31074016443189 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.31074016443189 + H1x1_3 ;
1246097   +   H1x1_4  =    -1.37395810355475 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -1.37395810355475 + H1x1_4 ;
1246098   +   H1x1_5  =    -0.62889533479826 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.62889533479826 + H1x1_5 ;
1246099   +   H1x1_6  = 0;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0;
1246100   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
1246101   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1246102   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
1246103   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
1246104   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
1246105   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
1246106   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
1246107   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
1246108   +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
1246109   +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
1246110   +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
1246111   +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
1246112   +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
1246113   +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
1246114   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
1246115   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
1246116   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
1246117   +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
1246118   +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
1246119   +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
1246120   +END;
MPRINT(EM_DIAGRAM):   END;
1246121   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1246122   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
1246123   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
1246124   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
1246125   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
1246126   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
1246127   +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
1246128   +END;
MPRINT(EM_DIAGRAM):   END;
1246129   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1246130   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
1246131   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1246132   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1246133   +   H1x2_1  =     0.56269814727649 * S_AcceptedCmpTotal
1246134   +          +    -0.56663088753275 * S_Age  +    -0.08799157593784 * S_Frq
1246135   +          +      0.8158986182256 * S_Income  +     0.25081960997161 *
1246136   +        S_Kidhome  +    -0.53258140179906 * S_Mnt  +     0.15843644803762 *
1246137   +        S_MntFishProducts  +    -0.87373368590299 * S_MntFruits
1246138   +          +     0.02807252984992 * S_MntGoldProds  +     1.41661611364623 *
1246139   +        S_MntMeatProducts  +     1.22431140889383 * S_MntSweetProducts
1246140   +          +    -0.25451913627032 * S_MntWines  +     0.13515407201266 *
1246141   +        S_MonthsAsCustomer  +     1.28583120667445 * S_NumCatalogPurchases
1246142   +          +     1.50005927423985 * S_NumDealsPurchases
1246143   +          +      0.5590536933569 * S_NumDistPurchases
1246144   +          +    -0.61757824339318 * S_NumStorePurchases
1246145   +          +     0.37259686538158 * S_NumWebPurchases
1246146   +          +     2.59725437895564 * S_NumWebVisitsMonth
1246147   +          +     1.61096386499852 * S_RFMstat  +      0.6096177019772 *
1246148   +        S_RMntFrq  +    -2.38795796980324 * S_Recency
1246149   +          +    -0.31987414022375 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.56269814727649 * S_AcceptedCmpTotal + -0.56663088753275 *
S_Age + -0.08799157593784 * S_Frq + 0.8158986182256 * S_Income + 0.25081960997161 * S_Kidhome
+ -0.53258140179906 * S_Mnt + 0.15843644803762 * S_MntFishProducts + -0.87373368590299 *
S_MntFruits + 0.02807252984992 * S_MntGoldProds + 1.41661611364623 * S_MntMeatProducts +
1.22431140889383 * S_MntSweetProducts + -0.25451913627032 * S_MntWines + 0.13515407201266 *
S_MonthsAsCustomer + 1.28583120667445 * S_NumCatalogPurchases + 1.50005927423985 *
S_NumDealsPurchases + 0.5590536933569 * S_NumDistPurchases + -0.61757824339318 *
S_NumStorePurchases + 0.37259686538158 * S_NumWebPurchases + 2.59725437895564 *
S_NumWebVisitsMonth + 1.61096386499852 * S_RFMstat + 0.6096177019772 * S_RMntFrq +
-2.38795796980324 * S_Recency + -0.31987414022375 * S_Teenhome ;
1246150   +   H1x2_2  =    -1.93801069736585 * S_AcceptedCmpTotal
1246151   +          +     1.10394781020217 * S_Age  +    -0.47335296021798 * S_Frq
1246152   +          +    -1.34212492602253 * S_Income  +    -1.34380793722996 *
1246153   +        S_Kidhome  +      0.9110881410704 * S_Mnt  +    -2.21001317666388 *
1246154   +        S_MntFishProducts  +     0.73821267564247 * S_MntFruits
1246155   +          +     0.16536006752146 * S_MntGoldProds  +     0.03402222784641 *
1246156   +        S_MntMeatProducts  +     0.96043668102736 * S_MntSweetProducts
1246157   +          +    -1.40670343451334 * S_MntWines  +     0.81378739821838 *
1246158   +        S_MonthsAsCustomer  +    -0.45596935664336 * S_NumCatalogPurchases
1246159   +          +    -0.09282222088797 * S_NumDealsPurchases
1246160   +          +     0.10726247938321 * S_NumDistPurchases
1246161   +          +     -1.1235971458527 * S_NumStorePurchases
1246162   +          +    -0.78304387839877 * S_NumWebPurchases
1246163   +          +    -0.44139243179956 * S_NumWebVisitsMonth
1246164   +          +    -0.00027499457791 * S_RFMstat  +    -0.71480759211982 *
1246165   +        S_RMntFrq  +     2.19072220135069 * S_Recency
1246166   +          +    -0.32246312005896 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -1.93801069736585 * S_AcceptedCmpTotal + 1.10394781020217 *
S_Age + -0.47335296021798 * S_Frq + -1.34212492602253 * S_Income + -1.34380793722996 *
S_Kidhome + 0.9110881410704 * S_Mnt + -2.21001317666388 * S_MntFishProducts + 0.73821267564247
* S_MntFruits + 0.16536006752146 * S_MntGoldProds + 0.03402222784641 * S_MntMeatProducts +
0.96043668102736 * S_MntSweetProducts + -1.40670343451334 * S_MntWines + 0.81378739821838 *
S_MonthsAsCustomer + -0.45596935664336 * S_NumCatalogPurchases + -0.09282222088797 *
S_NumDealsPurchases + 0.10726247938321 * S_NumDistPurchases + -1.1235971458527 *
S_NumStorePurchases + -0.78304387839877 * S_NumWebPurchases + -0.44139243179956 *
S_NumWebVisitsMonth + -0.00027499457791 * S_RFMstat + -0.71480759211982 * S_RMntFrq +
2.19072220135069 * S_Recency + -0.32246312005896 * S_Teenhome ;
1246167   +   H1x2_3  =    -0.33286965179681 * S_AcceptedCmpTotal
1246168   +          +     0.25643420238739 * S_Age  +     1.78251276306291 * S_Frq
1246169   +          +     0.42668628662657 * S_Income  +    -0.44555069154972 *
1246170   +        S_Kidhome  +     0.99430376599176 * S_Mnt  +     0.37152911215285 *
1246171   +        S_MntFishProducts  +    -1.00181313725345 * S_MntFruits
1246172   +          +    -1.88393479121141 * S_MntGoldProds  +    -1.71643056154209 *
1246173   +        S_MntMeatProducts  +    -0.69325136508245 * S_MntSweetProducts
1246174   +          +     0.36062578298416 * S_MntWines  +    -1.43361051175418 *
1246175   +        S_MonthsAsCustomer  +     0.92624996511804 * S_NumCatalogPurchases
1246176   +          +     0.35349185459988 * S_NumDealsPurchases
1246177   +          +     0.06853677714859 * S_NumDistPurchases
1246178   +          +    -1.47546012999338 * S_NumStorePurchases
1246179   +          +     0.20926435398916 * S_NumWebPurchases
1246180   +          +    -1.00535683639093 * S_NumWebVisitsMonth
1246181   +          +     0.39738023685345 * S_RFMstat  +     0.54359550262445 *
1246182   +        S_RMntFrq  +    -1.59138379954757 * S_Recency
1246183   +          +    -0.72224029606658 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.33286965179681 * S_AcceptedCmpTotal + 0.25643420238739 *
S_Age + 1.78251276306291 * S_Frq + 0.42668628662657 * S_Income + -0.44555069154972 * S_Kidhome
+ 0.99430376599176 * S_Mnt + 0.37152911215285 * S_MntFishProducts + -1.00181313725345 *
S_MntFruits + -1.88393479121141 * S_MntGoldProds + -1.71643056154209 * S_MntMeatProducts +
-0.69325136508245 * S_MntSweetProducts + 0.36062578298416 * S_MntWines + -1.43361051175418 *
S_MonthsAsCustomer + 0.92624996511804 * S_NumCatalogPurchases + 0.35349185459988 *
S_NumDealsPurchases + 0.06853677714859 * S_NumDistPurchases + -1.47546012999338 *
S_NumStorePurchases + 0.20926435398916 * S_NumWebPurchases + -1.00535683639093 *
S_NumWebVisitsMonth + 0.39738023685345 * S_RFMstat + 0.54359550262445 * S_RMntFrq +
-1.59138379954757 * S_Recency + -0.72224029606658 * S_Teenhome ;
1246184   +   H1x2_4  =     -0.0656876758781 * S_AcceptedCmpTotal
1246185   +          +    -0.38220805193452 * S_Age  +    -0.62740801625755 * S_Frq
1246186   +          +     0.62992117571672 * S_Income  +      1.6289723191423 *
1246187   +        S_Kidhome  +     0.37209535830613 * S_Mnt  +     0.55983487785376 *
1246188   +        S_MntFishProducts  +    -2.12992009015736 * S_MntFruits
1246189   +          +    -0.38291517806426 * S_MntGoldProds  +    -1.36584955015054 *
1246190   +        S_MntMeatProducts  +     0.60790195398286 * S_MntSweetProducts
1246191   +          +     2.43674403604903 * S_MntWines  +     -0.0680555682506 *
1246192   +        S_MonthsAsCustomer  +    -0.38141588539042 * S_NumCatalogPurchases
1246193   +          +      0.3873586120272 * S_NumDealsPurchases
1246194   +          +     0.25911651157596 * S_NumDistPurchases
1246195   +          +     1.58922489084287 * S_NumStorePurchases
1246196   +          +     0.49041797743368 * S_NumWebPurchases
1246197   +          +     -1.5425586871929 * S_NumWebVisitsMonth
1246198   +          +    -0.68794085469802 * S_RFMstat  +     1.43555366196783 *
1246199   +        S_RMntFrq  +     1.03099569333498 * S_Recency
1246200   +          +    -0.33160793159803 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.0656876758781 * S_AcceptedCmpTotal + -0.38220805193452 *
S_Age + -0.62740801625755 * S_Frq + 0.62992117571672 * S_Income + 1.6289723191423 * S_Kidhome
+ 0.37209535830613 * S_Mnt + 0.55983487785376 * S_MntFishProducts + -2.12992009015736 *
S_MntFruits + -0.38291517806426 * S_MntGoldProds + -1.36584955015054 * S_MntMeatProducts +
0.60790195398286 * S_MntSweetProducts + 2.43674403604903 * S_MntWines + -0.0680555682506 *
S_MonthsAsCustomer + -0.38141588539042 * S_NumCatalogPurchases + 0.3873586120272 *
S_NumDealsPurchases + 0.25911651157596 * S_NumDistPurchases + 1.58922489084287 *
S_NumStorePurchases + 0.49041797743368 * S_NumWebPurchases + -1.5425586871929 *
S_NumWebVisitsMonth + -0.68794085469802 * S_RFMstat + 1.43555366196783 * S_RMntFrq +
1.03099569333498 * S_Recency + -0.33160793159803 * S_Teenhome ;
1246201   +   H1x2_5  =      1.1619646008295 * S_AcceptedCmpTotal
1246202   +          +     -1.1099918698895 * S_Age  +     1.07090049938562 * S_Frq
1246203   +          +     0.68405730495336 * S_Income  +     0.10310173850527 *
1246204   +        S_Kidhome  +    -0.20536085581003 * S_Mnt  +    -0.13505440333321 *
1246205   +        S_MntFishProducts  +      0.7330354505267 * S_MntFruits
1246206   +          +    -0.09266368133722 * S_MntGoldProds  +     0.11251229112529 *
1246207   +        S_MntMeatProducts  +     0.93293215365852 * S_MntSweetProducts
1246208   +          +    -0.30739945619686 * S_MntWines  +     1.60111236559554 *
1246209   +        S_MonthsAsCustomer  +    -0.55541485540949 * S_NumCatalogPurchases
1246210   +          +    -0.60830880287865 * S_NumDealsPurchases
1246211   +          +      0.0745331267194 * S_NumDistPurchases
1246212   +          +    -1.39472448256952 * S_NumStorePurchases
1246213   +          +     1.95372179969087 * S_NumWebPurchases
1246214   +          +    -0.63307356390404 * S_NumWebVisitsMonth
1246215   +          +    -1.45142676869601 * S_RFMstat  +    -0.89091053567015 *
1246216   +        S_RMntFrq  +    -0.29197897313114 * S_Recency
1246217   +          +     0.02610681671236 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.1619646008295 * S_AcceptedCmpTotal + -1.1099918698895 * S_Age
+ 1.07090049938562 * S_Frq + 0.68405730495336 * S_Income + 0.10310173850527 * S_Kidhome +
-0.20536085581003 * S_Mnt + -0.13505440333321 * S_MntFishProducts + 0.7330354505267 *
S_MntFruits + -0.09266368133722 * S_MntGoldProds + 0.11251229112529 * S_MntMeatProducts +
0.93293215365852 * S_MntSweetProducts + -0.30739945619686 * S_MntWines + 1.60111236559554 *
S_MonthsAsCustomer + -0.55541485540949 * S_NumCatalogPurchases + -0.60830880287865 *
S_NumDealsPurchases + 0.0745331267194 * S_NumDistPurchases + -1.39472448256952 *
S_NumStorePurchases + 1.95372179969087 * S_NumWebPurchases + -0.63307356390404 *
S_NumWebVisitsMonth + -1.45142676869601 * S_RFMstat + -0.89091053567015 * S_RMntFrq +
-0.29197897313114 * S_Recency + 0.02610681671236 * S_Teenhome ;
1246218   +   H1x2_1  = H1x2_1  +    -0.60663534965526 * AcceptedCmp10
1246219   +          +     0.86940361180064 * AcceptedCmp20  +     1.96097801395475 *
1246220   +        AcceptedCmp30  +    -0.07604718607607 * AcceptedCmp40
1246221   +          +    -2.82012437662904 * AcceptedCmp50  +     2.92223307409835 *
1246222   +        Complain0  +      0.7388639458943 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.60663534965526 * AcceptedCmp10 + 0.86940361180064 *
AcceptedCmp20 + 1.96097801395475 * AcceptedCmp30 + -0.07604718607607 * AcceptedCmp40 +
-2.82012437662904 * AcceptedCmp50 + 2.92223307409835 * Complain0 + 0.7388639458943 *
HigherEducationBinary0 ;
1246223   +   H1x2_2  = H1x2_2  +    -0.44975979140124 * AcceptedCmp10
1246224   +          +    -0.14894854897951 * AcceptedCmp20  +     1.05214102326393 *
1246225   +        AcceptedCmp30  +    -0.24568060312448 * AcceptedCmp40
1246226   +          +    -0.32148548771167 * AcceptedCmp50  +    -0.06212131202705 *
1246227   +        Complain0  +    -1.15456299494407 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.44975979140124 * AcceptedCmp10 + -0.14894854897951
* AcceptedCmp20 + 1.05214102326393 * AcceptedCmp30 + -0.24568060312448 * AcceptedCmp40 +
-0.32148548771167 * AcceptedCmp50 + -0.06212131202705 * Complain0 + -1.15456299494407 *
HigherEducationBinary0 ;
1246228   +   H1x2_3  = H1x2_3  +     0.05559829595526 * AcceptedCmp10
1246229   +          +    -0.79357273390501 * AcceptedCmp20  +     1.19638475921939 *
1246230   +        AcceptedCmp30  +     -0.4185483500346 * AcceptedCmp40
1246231   +          +     1.62070541716774 * AcceptedCmp50  +     0.42618871432227 *
1246232   +        Complain0  +    -1.31545071935076 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.05559829595526 * AcceptedCmp10 + -0.79357273390501 *
AcceptedCmp20 + 1.19638475921939 * AcceptedCmp30 + -0.4185483500346 * AcceptedCmp40 +
1.62070541716774 * AcceptedCmp50 + 0.42618871432227 * Complain0 + -1.31545071935076 *
HigherEducationBinary0 ;
1246233   +   H1x2_4  = H1x2_4  +     0.79295384489774 * AcceptedCmp10
1246234   +          +    -1.12840237512106 * AcceptedCmp20  +     1.32129555401653 *
1246235   +        AcceptedCmp30  +    -0.25952521594596 * AcceptedCmp40
1246236   +          +     0.80872302488736 * AcceptedCmp50  +     1.00677398871609 *
1246237   +        Complain0  +    -0.40309387727555 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.79295384489774 * AcceptedCmp10 + -1.12840237512106 *
AcceptedCmp20 + 1.32129555401653 * AcceptedCmp30 + -0.25952521594596 * AcceptedCmp40 +
0.80872302488736 * AcceptedCmp50 + 1.00677398871609 * Complain0 + -0.40309387727555 *
HigherEducationBinary0 ;
1246238   +   H1x2_5  = H1x2_5  +     0.27407087260629 * AcceptedCmp10
1246239   +          +    -1.62993283587806 * AcceptedCmp20  +     -0.7976151702219 *
1246240   +        AcceptedCmp30  +    -1.43236001965205 * AcceptedCmp40
1246241   +          +     0.31785497417833 * AcceptedCmp50  +     -0.4935881696628 *
1246242   +        Complain0  +    -0.90101154412077 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.27407087260629 * AcceptedCmp10 + -1.62993283587806 *
AcceptedCmp20 + -0.7976151702219 * AcceptedCmp30 + -1.43236001965205 * AcceptedCmp40 +
0.31785497417833 * AcceptedCmp50 + -0.4935881696628 * Complain0 + -0.90101154412077 *
HigherEducationBinary0 ;
1246243   +   H1x2_1  = H1x2_1  +    -0.42532202605687 * Education2n_Cycle
1246244   +          +     0.05209663685716 * EducationBasic  +     1.32477268007154 *
1246245   +        EducationGraduation  +    -1.16900224373137 * EducationMaster
1246246   +          +    -1.33377871643323 * Marital_StatusDivorced
1246247   +          +    -0.87184228840898 * Marital_StatusMarried
1246248   +          +     1.41223186340257 * Marital_StatusSingle
1246249   +          +     0.26542930660962 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.42532202605687 * Education2n_Cycle +
0.05209663685716 * EducationBasic + 1.32477268007154 * EducationGraduation + -1.16900224373137
* EducationMaster + -1.33377871643323 * Marital_StatusDivorced + -0.87184228840898 *
Marital_StatusMarried + 1.41223186340257 * Marital_StatusSingle + 0.26542930660962 *
Marital_StatusTogether ;
1246250   +   H1x2_2  = H1x2_2  +     0.31980851177227 * Education2n_Cycle
1246251   +          +     1.82629979795037 * EducationBasic  +     0.59482979766527 *
1246252   +        EducationGraduation  +     0.38341272155343 * EducationMaster
1246253   +          +    -0.21479890935233 * Marital_StatusDivorced
1246254   +          +     -0.0025459519579 * Marital_StatusMarried
1246255   +          +     1.33900491702264 * Marital_StatusSingle
1246256   +          +     0.31338385402434 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.31980851177227 * Education2n_Cycle +
1.82629979795037 * EducationBasic + 0.59482979766527 * EducationGraduation + 0.38341272155343
* EducationMaster + -0.21479890935233 * Marital_StatusDivorced + -0.0025459519579 *
Marital_StatusMarried + 1.33900491702264 * Marital_StatusSingle + 0.31338385402434 *
Marital_StatusTogether ;
1246257   +   H1x2_3  = H1x2_3  +     -1.1277686958847 * Education2n_Cycle
1246258   +          +    -0.32701971979058 * EducationBasic  +      0.4361680205519 *
1246259   +        EducationGraduation  +     0.60739269725685 * EducationMaster
1246260   +          +    -0.38307267471999 * Marital_StatusDivorced
1246261   +          +     0.97088969451415 * Marital_StatusMarried
1246262   +          +    -0.28578224473381 * Marital_StatusSingle
1246263   +          +     0.16178086683874 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -1.1277686958847 * Education2n_Cycle +
-0.32701971979058 * EducationBasic + 0.4361680205519 * EducationGraduation + 0.60739269725685
* EducationMaster + -0.38307267471999 * Marital_StatusDivorced + 0.97088969451415 *
Marital_StatusMarried + -0.28578224473381 * Marital_StatusSingle + 0.16178086683874 *
Marital_StatusTogether ;
1246264   +   H1x2_4  = H1x2_4  +    -1.21481485652985 * Education2n_Cycle
1246265   +          +    -0.30231261977781 * EducationBasic  +     0.33993210461674 *
1246266   +        EducationGraduation  +     0.14160673378252 * EducationMaster
1246267   +          +    -1.42229401093569 * Marital_StatusDivorced
1246268   +          +      0.7234508382397 * Marital_StatusMarried
1246269   +          +    -0.29062202974628 * Marital_StatusSingle
1246270   +          +     1.00102560376832 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + -1.21481485652985 * Education2n_Cycle +
-0.30231261977781 * EducationBasic + 0.33993210461674 * EducationGraduation + 0.14160673378252
* EducationMaster + -1.42229401093569 * Marital_StatusDivorced + 0.7234508382397 *
Marital_StatusMarried + -0.29062202974628 * Marital_StatusSingle + 1.00102560376832 *
Marital_StatusTogether ;
1246271   +   H1x2_5  = H1x2_5  +     0.47313927233084 * Education2n_Cycle
1246272   +          +     0.53675687099431 * EducationBasic  +    -0.75029054398953 *
1246273   +        EducationGraduation  +     -0.7118631990538 * EducationMaster
1246274   +          +    -0.99067637207205 * Marital_StatusDivorced
1246275   +          +    -0.50245902142079 * Marital_StatusMarried
1246276   +          +     0.54214494533793 * Marital_StatusSingle
1246277   +          +    -1.90023876403873 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.47313927233084 * Education2n_Cycle +
0.53675687099431 * EducationBasic + -0.75029054398953 * EducationGraduation + -0.7118631990538
* EducationMaster + -0.99067637207205 * Marital_StatusDivorced + -0.50245902142079 *
Marital_StatusMarried + 0.54214494533793 * Marital_StatusSingle + -1.90023876403873 *
Marital_StatusTogether ;
1246278   +   H1x2_1  =    -0.76220110175787 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.76220110175787 + H1x2_1 ;
1246279   +   H1x2_2  =     0.33238308796509 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.33238308796509 + H1x2_2 ;
1246280   +   H1x2_3  =    -1.79229186263718 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -1.79229186263718 + H1x2_3 ;
1246281   +   H1x2_4  =     2.90076107393596 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 2.90076107393596 + H1x2_4 ;
1246282   +   H1x2_5  =    -1.75965576502183 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -1.75965576502183 + H1x2_5 ;
1246283   +   H1x2_6  = 0;
MPRINT(EM_DIAGRAM):   H1x2_6 = 0;
1246284   +   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 );
1246285   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1246286   +   H1x2_1  = EXP(H1x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(H1x2_1 - _MAX_);
1246287   +   _SUM_ = _SUM_ + H1x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_1 ;
1246288   +   H1x2_2  = EXP(H1x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(H1x2_2 - _MAX_);
1246289   +   _SUM_ = _SUM_ + H1x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_2 ;
1246290   +   H1x2_3  = EXP(H1x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(H1x2_3 - _MAX_);
1246291   +   _SUM_ = _SUM_ + H1x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_3 ;
1246292   +   H1x2_4  = EXP(H1x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(H1x2_4 - _MAX_);
1246293   +   _SUM_ = _SUM_ + H1x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_4 ;
1246294   +   H1x2_5  = EXP(H1x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(H1x2_5 - _MAX_);
1246295   +   _SUM_ = _SUM_ + H1x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_5 ;
1246296   +   H1x2_6  = EXP(H1x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(H1x2_6 - _MAX_);
1246297   +   _SUM_ = _SUM_ + H1x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_6 ;
1246298   +   H1x2_1  = H1x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 / _SUM_;
1246299   +   H1x2_2  = H1x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 / _SUM_;
1246300   +   H1x2_3  = H1x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 / _SUM_;
1246301   +   H1x2_4  = H1x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 / _SUM_;
1246302   +   H1x2_5  = H1x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 / _SUM_;
1246303   +   H1x2_6  = H1x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 / _SUM_;
1246304   +END;
MPRINT(EM_DIAGRAM):   END;
1246305   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1246306   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
1246307   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
1246308   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
1246309   +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
1246310   +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
1246311   +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
1246312   +END;
MPRINT(EM_DIAGRAM):   END;
1246313   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1246314   +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
1246315   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1246316   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1246317   +   H2x1_1  =       1.974359971482 * H1x1_1  +     2.56630185065386 * H1x1_2
1246318   +          +    -2.09978917716486 * H1x1_3  +      2.5733942680354 * H1x1_4
1246319   +          +    -3.36902992698085 * H1x1_5  +    -2.45757278280195 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.974359971482 * H1x1_1 + 2.56630185065386 * H1x1_2 +
-2.09978917716486 * H1x1_3 + 2.5733942680354 * H1x1_4 + -3.36902992698085 * H1x1_5 +
-2.45757278280195 * H1x1_6 ;
1246320   +   H2x1_2  =    -0.31797232371002 * H1x1_1  +     1.40395330167402 * H1x1_2
1246321   +          +     1.81616324109762 * H1x1_3  +     1.53849589982775 * H1x1_4
1246322   +          +    -0.63132385856109 * H1x1_5  +    -2.28426391810485 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -0.31797232371002 * H1x1_1 + 1.40395330167402 * H1x1_2 +
1.81616324109762 * H1x1_3 + 1.53849589982775 * H1x1_4 + -0.63132385856109 * H1x1_5 +
-2.28426391810485 * H1x1_6 ;
1246323   +   H2x1_3  =    -1.34821716876354 * H1x1_1  +    -1.59136815069547 * H1x1_2
1246324   +          +     1.51830421093731 * H1x1_3  +     0.25947292816575 * H1x1_4
1246325   +          +     0.68626537551183 * H1x1_5  +     0.08021226539433 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -1.34821716876354 * H1x1_1 + -1.59136815069547 * H1x1_2 +
1.51830421093731 * H1x1_3 + 0.25947292816575 * H1x1_4 + 0.68626537551183 * H1x1_5 +
0.08021226539433 * H1x1_6 ;
1246326   +   H2x1_4  =     1.81371453071507 * H1x1_1  +     2.86509325576366 * H1x1_2
1246327   +          +    -2.51923468751378 * H1x1_3  +     3.48823967488449 * H1x1_4
1246328   +          +    -1.98439811139438 * H1x1_5  +    -1.35359233519863 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.81371453071507 * H1x1_1 + 2.86509325576366 * H1x1_2 +
-2.51923468751378 * H1x1_3 + 3.48823967488449 * H1x1_4 + -1.98439811139438 * H1x1_5 +
-1.35359233519863 * H1x1_6 ;
1246329   +   H2x1_5  =     2.41779243188377 * H1x1_1  +     2.38684872287302 * H1x1_2
1246330   +          +    -2.38697428830295 * H1x1_3  +     3.64463866412774 * H1x1_4
1246331   +          +    -6.25925640356471 * H1x1_5  +    -2.41187367604766 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = 2.41779243188377 * H1x1_1 + 2.38684872287302 * H1x1_2 +
-2.38697428830295 * H1x1_3 + 3.64463866412774 * H1x1_4 + -6.25925640356471 * H1x1_5 +
-2.41187367604766 * H1x1_6 ;
1246332   +   H2x1_6  =    -0.72042650045348 * H1x1_1  +      0.1896194130913 * H1x1_2
1246333   +          +     0.90899894568677 * H1x1_3  +    -1.82868335056689 * H1x1_4
1246334   +          +     0.25430380699211 * H1x1_5  +     0.21617396847163 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = -0.72042650045348 * H1x1_1 + 0.1896194130913 * H1x1_2 +
0.90899894568677 * H1x1_3 + -1.82868335056689 * H1x1_4 + 0.25430380699211 * H1x1_5 +
0.21617396847163 * H1x1_6 ;
1246335   +   H2x1_1  = H2x1_1  +     1.25654059966646 * H1x2_1
1246336   +          +     1.54802434303135 * H1x2_2  +     -0.8831980397117 * H1x2_3
1246337   +          +    -0.06778839937099 * H1x2_4  +      0.5440972304381 * H1x2_5
1246338   +          +      0.2606136576082 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 1.25654059966646 * H1x2_1 + 1.54802434303135 * H1x2_2
+ -0.8831980397117 * H1x2_3 + -0.06778839937099 * H1x2_4 + 0.5440972304381 * H1x2_5 +
0.2606136576082 * H1x2_6 ;
1246339   +   H2x1_2  = H2x1_2  +      1.1804478706954 * H1x2_1
1246340   +          +    -1.54526687654235 * H1x2_2  +    -1.84586479319799 * H1x2_3
1246341   +          +     1.53060510120437 * H1x2_4  +     1.17038673632413 * H1x2_5
1246342   +          +    -0.33816948355449 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 1.1804478706954 * H1x2_1 + -1.54526687654235 * H1x2_2
+ -1.84586479319799 * H1x2_3 + 1.53060510120437 * H1x2_4 + 1.17038673632413 * H1x2_5 +
-0.33816948355449 * H1x2_6 ;
1246343   +   H2x1_3  = H2x1_3  +    -0.17829043463382 * H1x2_1
1246344   +          +    -0.25137506897353 * H1x2_2  +     0.16242586068799 * H1x2_3
1246345   +          +    -0.09404795949359 * H1x2_4  +    -0.46228597203598 * H1x2_5
1246346   +          +    -2.05648585275111 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -0.17829043463382 * H1x2_1 + -0.25137506897353 *
H1x2_2 + 0.16242586068799 * H1x2_3 + -0.09404795949359 * H1x2_4 + -0.46228597203598 * H1x2_5 +
-2.05648585275111 * H1x2_6 ;
1246347   +   H2x1_4  = H2x1_4  +     0.42433995729877 * H1x2_1
1246348   +          +    -0.48506090180667 * H1x2_2  +    -2.00023889633201 * H1x2_3
1246349   +          +    -2.18353148884875 * H1x2_4  +      1.8888560029491 * H1x2_5
1246350   +          +     0.10756694741742 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 0.42433995729877 * H1x2_1 + -0.48506090180667 * H1x2_2
+ -2.00023889633201 * H1x2_3 + -2.18353148884875 * H1x2_4 + 1.8888560029491 * H1x2_5 +
0.10756694741742 * H1x2_6 ;
1246351   +   H2x1_5  = H2x1_5  +     1.56363187716685 * H1x2_1
1246352   +          +    -1.60380055270086 * H1x2_2  +    -0.10253336309679 * H1x2_3
1246353   +          +    -0.70868484989608 * H1x2_4  +    -1.01428312449496 * H1x2_5
1246354   +          +    -0.52564497366659 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + 1.56363187716685 * H1x2_1 + -1.60380055270086 * H1x2_2
+ -0.10253336309679 * H1x2_3 + -0.70868484989608 * H1x2_4 + -1.01428312449496 * H1x2_5 +
-0.52564497366659 * H1x2_6 ;
1246355   +   H2x1_6  = H2x1_6  +    -2.54663319607132 * H1x2_1
1246356   +          +    -0.26971572820094 * H1x2_2  +      0.0632302804701 * H1x2_3
1246357   +          +     0.24322354570335 * H1x2_4  +     0.66904111988013 * H1x2_5
1246358   +          +     0.74493468449949 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + -2.54663319607132 * H1x2_1 + -0.26971572820094 *
H1x2_2 + 0.0632302804701 * H1x2_3 + 0.24322354570335 * H1x2_4 + 0.66904111988013 * H1x2_5 +
0.74493468449949 * H1x2_6 ;
1246359   +   H2x1_1  =    -0.48109096483079 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -0.48109096483079 + H2x1_1 ;
1246360   +   H2x1_2  =     1.80708027085243 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.80708027085243 + H2x1_2 ;
1246361   +   H2x1_3  =    -0.46023689639613 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -0.46023689639613 + H2x1_3 ;
1246362   +   H2x1_4  =     0.33871753804401 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 0.33871753804401 + H2x1_4 ;
1246363   +   H2x1_5  =    -0.31584249921712 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -0.31584249921712 + H2x1_5 ;
1246364   +   H2x1_6  =     0.30285416134468 + H2x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 0.30285416134468 + H2x1_6 ;
1246365   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
1246366   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
1246367   +   H2x1_1  = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
1246368   +   H2x1_2  = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
1246369   +   H2x1_3  = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
1246370   +   H2x1_4  = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
1246371   +   H2x1_5  = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_5 = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
1246372   +   H2x1_6  = 1.0 / (1.0 + EXP(MIN( - H2x1_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.0 / (1.0 + EXP(MIN( - H2x1_6 , _EXP_BAR)));
1246373   +END;
MPRINT(EM_DIAGRAM):   END;
1246374   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1246375   +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
1246376   +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
1246377   +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
1246378   +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
1246379   +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
1246380   +   H2x1_6  = .;
MPRINT(EM_DIAGRAM):   H2x1_6 = .;
1246381   +END;
MPRINT(EM_DIAGRAM):   END;
1246382   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1246383   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1246384   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1246385   +
1246386   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1246387   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1246388   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1246389   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1246390   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1246391   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1246392   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1246393   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1246394   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1246395   +end;
MPRINT(EM_DIAGRAM):   end;
1246396   +else do;
MPRINT(EM_DIAGRAM):   else do;
1246397   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1246398   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1246399   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1246400   +   end;
MPRINT(EM_DIAGRAM):   end;
1246401   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1246402   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1246403   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1246404   +   end;
MPRINT(EM_DIAGRAM):   end;
1246405   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1246406   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1246407   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1246408   +   end;
MPRINT(EM_DIAGRAM):   end;
1246409   +end;
MPRINT(EM_DIAGRAM):   end;
1246410   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1246411   +   P_DepVar1  =     7.89179702798476 * H2x1_1  +    -2.13955806072986 * H2x1_2
1246412   +          +    -3.88305304025889 * H2x1_3  +     4.07340753853874 * H2x1_4
1246413   +          +     7.74293596833296 * H2x1_5  +     -3.8939011811129 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 7.89179702798476 * H2x1_1 + -2.13955806072986 * H2x1_2 +
-3.88305304025889 * H2x1_3 + 4.07340753853874 * H2x1_4 + 7.74293596833296 * H2x1_5 +
-3.8939011811129 * H2x1_6 ;
1246414   +   P_DepVar1  =    -5.20107973804597 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -5.20107973804597 + P_DepVar1 ;
1246415   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1246416   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1246417   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1246418   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1246419   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1246420   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1246421   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1246422   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1246423   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1246424   +END;
MPRINT(EM_DIAGRAM):   END;
1246425   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1246426   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1246427   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1246428   +END;
MPRINT(EM_DIAGRAM):   END;
1246429   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1246430   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1246431   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1246432   +END;
MPRINT(EM_DIAGRAM):   END;
1246433   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1246434   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1246435   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1246436   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1246437   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1246438   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1246439   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1246440   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1246441   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1246442   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1246443   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1246444   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1246445   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1246446   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1246447   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1246448   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1246449   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1246450   +END;
MPRINT(EM_DIAGRAM):   END;
1246451   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1246452   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1246453   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1246454   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1246455   +* Renaming variables for AutoNeural11;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural11;
1246456   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1246457   +* Renaming Posterior variables for AutoNeural11;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural11;
1246458   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1246459   +drop AutoNeural11_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural11_P_DepVar1;
1246460   +AutoNeural11_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural11_P_DepVar1 = P_DepVar1;
1246461   +drop AutoNeural11_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural11_P_DepVar0;
1246462   +AutoNeural11_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural11_P_DepVar0 = P_DepVar0;
1246463   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1246464   +* Renaming _WARN_ variable for AutoNeural11;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural11;
1246465   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1246466   +length AutoNeural11_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural11_WARN_ $4;
1246467   +drop AutoNeural11_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural11_WARN_;
1246468   +AutoNeural11_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural11_WARN_ = _WARN_;
1246469   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1246470   +* Ensmbl46: Scoring Code of model 5 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl46: Scoring Code of model 5 of 5;
1246471   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1246472   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1246473   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
1246474   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1246475   +* NODE: AutoNeural9;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural9;
1246476   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1246477   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1246478   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1246479   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1246480   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1246481   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1246482   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1246483   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1246484   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1246485   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1246486   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1246487   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1246488   +LENGTH _WARN_ $4
1246489   +      F_DepVar  $ 12
1246490   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1246491   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1246492   +
1246493   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1246494   +
1246495   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1246496   +
1246497   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1246498   +
1246499   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1246500   +
1246501   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1246502   +
1246503   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1246504   +
1246505   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1246506   +
1246507   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1246508   +
1246509   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1246510   +
1246511   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1246512   +
1246513   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1246514   +
1246515   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1246516   +
1246517   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1246518   +
1246519   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1246520   +
1246521   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1246522   +
1246523   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1246524   +
1246525   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1246526   +
1246527   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1246528   +
1246529   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1246530   +
1246531   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1246532   +
1246533   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1246534   +
1246535   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1246536   +
1246537   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1246538   +
1246539   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1246540   +
1246541   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1246542   +
1246543   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1246544   +
1246545   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1246546   +
1246547   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1246548   +
1246549   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1246550   +
1246551   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1246552   +
1246553   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1246554   +
1246555   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1246556   +
1246557   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1246558   +
1246559   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1246560   +
1246561   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1246562   +
1246563   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1246564   +
1246565   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1246566   +
1246567   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
1246568   +
1246569   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
1246570   +
1246571   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
1246572   +
1246573   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
1246574   +
1246575   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1246576   +
1246577   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1246578   +
1246579   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1246580   +
1246581   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1246582   +
1246583   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1246584   +
1246585   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1246586   +
1246587   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1246588   +
1246589   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1246590   +
1246591   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1246592   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1246593   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1246594   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1246595   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1246596   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1246597   +end;
MPRINT(EM_DIAGRAM):   end;
1246598   +else do;
MPRINT(EM_DIAGRAM):   else do;
1246599   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1246600   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1246601   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1246602   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1246603   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1246604   +   end;
MPRINT(EM_DIAGRAM):   end;
1246605   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1246606   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1246607   +   end;
MPRINT(EM_DIAGRAM):   end;
1246608   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1246609   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1246610   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1246611   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1246612   +   end;
MPRINT(EM_DIAGRAM):   end;
1246613   +end;
MPRINT(EM_DIAGRAM):   end;
1246614   +
1246615   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1246616   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1246617   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1246618   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1246619   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1246620   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1246621   +end;
MPRINT(EM_DIAGRAM):   end;
1246622   +else do;
MPRINT(EM_DIAGRAM):   else do;
1246623   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1246624   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1246625   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1246626   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1246627   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1246628   +   end;
MPRINT(EM_DIAGRAM):   end;
1246629   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1246630   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1246631   +   end;
MPRINT(EM_DIAGRAM):   end;
1246632   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1246633   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1246634   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1246635   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1246636   +   end;
MPRINT(EM_DIAGRAM):   end;
1246637   +end;
MPRINT(EM_DIAGRAM):   end;
1246638   +
1246639   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1246640   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1246641   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1246642   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1246643   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1246644   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1246645   +end;
MPRINT(EM_DIAGRAM):   end;
1246646   +else do;
MPRINT(EM_DIAGRAM):   else do;
1246647   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1246648   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1246649   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1246650   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1246651   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1246652   +   end;
MPRINT(EM_DIAGRAM):   end;
1246653   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1246654   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1246655   +   end;
MPRINT(EM_DIAGRAM):   end;
1246656   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1246657   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1246658   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1246659   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1246660   +   end;
MPRINT(EM_DIAGRAM):   end;
1246661   +end;
MPRINT(EM_DIAGRAM):   end;
1246662   +
1246663   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1246664   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1246665   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1246666   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1246667   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1246668   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1246669   +end;
MPRINT(EM_DIAGRAM):   end;
1246670   +else do;
MPRINT(EM_DIAGRAM):   else do;
1246671   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1246672   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1246673   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1246674   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1246675   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1246676   +   end;
MPRINT(EM_DIAGRAM):   end;
1246677   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1246678   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1246679   +   end;
MPRINT(EM_DIAGRAM):   end;
1246680   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1246681   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1246682   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1246683   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1246684   +   end;
MPRINT(EM_DIAGRAM):   end;
1246685   +end;
MPRINT(EM_DIAGRAM):   end;
1246686   +
1246687   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1246688   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1246689   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1246690   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1246691   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1246692   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1246693   +end;
MPRINT(EM_DIAGRAM):   end;
1246694   +else do;
MPRINT(EM_DIAGRAM):   else do;
1246695   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1246696   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1246697   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1246698   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1246699   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1246700   +   end;
MPRINT(EM_DIAGRAM):   end;
1246701   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1246702   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1246703   +   end;
MPRINT(EM_DIAGRAM):   end;
1246704   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1246705   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1246706   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1246707   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1246708   +   end;
MPRINT(EM_DIAGRAM):   end;
1246709   +end;
MPRINT(EM_DIAGRAM):   end;
1246710   +
1246711   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1246712   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1246713   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1246714   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1246715   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1246716   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1246717   +end;
MPRINT(EM_DIAGRAM):   end;
1246718   +else do;
MPRINT(EM_DIAGRAM):   else do;
1246719   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1246720   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1246721   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1246722   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1246723   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1246724   +   end;
MPRINT(EM_DIAGRAM):   end;
1246725   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1246726   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1246727   +   end;
MPRINT(EM_DIAGRAM):   end;
1246728   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1246729   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1246730   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1246731   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1246732   +   end;
MPRINT(EM_DIAGRAM):   end;
1246733   +end;
MPRINT(EM_DIAGRAM):   end;
1246734   +
1246735   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1246736   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1246737   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1246738   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1246739   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1246740   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1246741   +end;
MPRINT(EM_DIAGRAM):   end;
1246742   +else do;
MPRINT(EM_DIAGRAM):   else do;
1246743   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1246744   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1246745   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1246746   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1246747   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1246748   +   end;
MPRINT(EM_DIAGRAM):   end;
1246749   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1246750   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1246751   +   end;
MPRINT(EM_DIAGRAM):   end;
1246752   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1246753   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1246754   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1246755   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1246756   +   end;
MPRINT(EM_DIAGRAM):   end;
1246757   +end;
MPRINT(EM_DIAGRAM):   end;
1246758   +
1246759   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1246760   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
1246761   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1246762   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1246763   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1246764   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1246765   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1246766   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1246767   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1246768   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1246769   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1246770   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1246771   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1246772   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1246773   +end;
MPRINT(EM_DIAGRAM):   end;
1246774   +else do;
MPRINT(EM_DIAGRAM):   else do;
1246775   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1246776   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1246777   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1246778   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1246779   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1246780   +   end;
MPRINT(EM_DIAGRAM):   end;
1246781   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1246782   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1246783   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1246784   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1246785   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1246786   +   end;
MPRINT(EM_DIAGRAM):   end;
1246787   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1246788   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1246789   +   end;
MPRINT(EM_DIAGRAM):   end;
1246790   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1246791   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1246792   +   end;
MPRINT(EM_DIAGRAM):   end;
1246793   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1246794   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1246795   +   end;
MPRINT(EM_DIAGRAM):   end;
1246796   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1246797   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1246798   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1246799   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1246800   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1246801   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1246802   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1246803   +   end;
MPRINT(EM_DIAGRAM):   end;
1246804   +end;
MPRINT(EM_DIAGRAM):   end;
1246805   +
1246806   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1246807   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1246808   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
1246809   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1246810   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1246811   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1246812   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1246813   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1246814   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1246815   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1246816   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1246817   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1246818   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1246819   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1246820   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1246821   +end;
MPRINT(EM_DIAGRAM):   end;
1246822   +else do;
MPRINT(EM_DIAGRAM):   else do;
1246823   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1246824   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1246825   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1246826   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1246827   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1246828   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1246829   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1246830   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1246831   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1246832   +         end;
MPRINT(EM_DIAGRAM):   end;
1246833   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1246834   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1246835   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1246836   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1246837   +            end;
MPRINT(EM_DIAGRAM):   end;
1246838   +         end;
MPRINT(EM_DIAGRAM):   end;
1246839   +      end;
MPRINT(EM_DIAGRAM):   end;
1246840   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1246841   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1246842   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1246843   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1246844   +         end;
MPRINT(EM_DIAGRAM):   end;
1246845   +      end;
MPRINT(EM_DIAGRAM):   end;
1246846   +   end;
MPRINT(EM_DIAGRAM):   end;
1246847   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1246848   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1246849   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1246850   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1246851   +      end;
MPRINT(EM_DIAGRAM):   end;
1246852   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1246853   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1246854   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1246855   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1246856   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1246857   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1246858   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1246859   +         end;
MPRINT(EM_DIAGRAM):   end;
1246860   +      end;
MPRINT(EM_DIAGRAM):   end;
1246861   +   end;
MPRINT(EM_DIAGRAM):   end;
1246862   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1246863   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1246864   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1246865   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1246866   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1246867   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1246868   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1246869   +   end;
MPRINT(EM_DIAGRAM):   end;
1246870   +end;
MPRINT(EM_DIAGRAM):   end;
1246871   +
1246872   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1246873   +*** Checking missing input Interval
1246874   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1246875   +
1246876   +IF NMISS(
1246877   +   AcceptedCmpTotal ,
1246878   +   Age ,
1246879   +   Frq ,
1246880   +   Income ,
1246881   +   Kidhome ,
1246882   +   Mnt ,
1246883   +   MntFishProducts ,
1246884   +   MntFruits ,
1246885   +   MntGoldProds ,
1246886   +   MntMeatProducts ,
1246887   +   MntSweetProducts ,
1246888   +   MntWines ,
1246889   +   MonthsAsCustomer ,
1246890   +   NumCatalogPurchases ,
1246891   +   NumDealsPurchases ,
1246892   +   NumDistPurchases ,
1246893   +   NumStorePurchases ,
1246894   +   NumWebPurchases ,
1246895   +   NumWebVisitsMonth ,
1246896   +   RFMstat ,
1246897   +   RMntFrq ,
1246898   +   Recency ,
1246899   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
1246900   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1246901   +
1246902   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1246903   +END;
MPRINT(EM_DIAGRAM):   END;
1246904   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1246905   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
1246906   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1246907   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1246908   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1246909   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1246910   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1246911   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1246912   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1246913   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1246914   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1246915   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1246916   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1246917   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1246918   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1246919   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1246920   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1246921   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1246922   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1246923   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1246924   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1246925   +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
1246926   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 *
MonthsAsCustomer ;
1246927   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1246928   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1246929   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1246930   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1246931   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1246932   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1246933   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1246934   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1246935   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1246936   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1246937   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1246938   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1246939   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1246940   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1246941   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1246942   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1246943   +END;
MPRINT(EM_DIAGRAM):   END;
1246944   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1246945   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1246946   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1246947   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1246948   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1246949   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1246950   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1246951   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1246952   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1246953   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1246954   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1246955   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1246956   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1246957   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1246958   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1246959   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1246960   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1246961   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1246962   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1246963   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1246964   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1246965   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1246966   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1246967   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1246968   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1246969   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1246970   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1246971   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1246972   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1246973   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1246974   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1246975   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1246976   +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
1246977   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 *
MonthsAsCustomer ;
1246978   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1246979   +   ELSE S_NumCatalogPurchases
1246980   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1246981   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1246982   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1246983   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1246984   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1246985   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1246986   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1246987   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1246988   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1246989   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1246990   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1246991   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1246992   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1246993   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1246994   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1246995   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1246996   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1246997   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1246998   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1246999   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1247000   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1247001   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1247002   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1247003   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1247004   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1247005   +END;
MPRINT(EM_DIAGRAM):   END;
1247006   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1247007   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
1247008   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1247009   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1247010   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
1247011   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1247012   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1247013   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
1247014   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1247015   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1247016   +   H1x1_1  =    -1.01373445510498 * S_AcceptedCmpTotal
1247017   +          +     0.33447979473871 * S_Age  +    -0.49864038088294 * S_Frq
1247018   +          +     0.31694253224638 * S_Income  +    -0.88502516255759 *
1247019   +        S_Kidhome  +    -0.95839165156922 * S_Mnt  +     1.08690890979971 *
1247020   +        S_MntFishProducts  +     0.21350737967446 * S_MntFruits
1247021   +          +     0.07347211887091 * S_MntGoldProds  +    -4.25839540508751 *
1247022   +        S_MntMeatProducts  +    -0.18409636621761 * S_MntSweetProducts
1247023   +          +     0.92254071667819 * S_MntWines  +     0.17286447654032 *
1247024   +        S_MonthsAsCustomer  +    -1.64446119745791 * S_NumCatalogPurchases
1247025   +          +    -1.14704878034134 * S_NumDealsPurchases
1247026   +          +    -0.17763404274659 * S_NumDistPurchases
1247027   +          +     0.08894400267969 * S_NumStorePurchases
1247028   +          +     0.59283747891957 * S_NumWebPurchases
1247029   +          +     0.85268274682505 * S_NumWebVisitsMonth
1247030   +          +    -0.43035426151546 * S_RFMstat  +     0.52915289749814 *
1247031   +        S_RMntFrq  +    -1.22871580072103 * S_Recency
1247032   +          +    -0.42049179704691 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.01373445510498 * S_AcceptedCmpTotal + 0.33447979473871 *
S_Age + -0.49864038088294 * S_Frq + 0.31694253224638 * S_Income + -0.88502516255759 *
S_Kidhome + -0.95839165156922 * S_Mnt + 1.08690890979971 * S_MntFishProducts +
0.21350737967446 * S_MntFruits + 0.07347211887091 * S_MntGoldProds + -4.25839540508751 *
S_MntMeatProducts + -0.18409636621761 * S_MntSweetProducts + 0.92254071667819 * S_MntWines +
0.17286447654032 * S_MonthsAsCustomer + -1.64446119745791 * S_NumCatalogPurchases +
-1.14704878034134 * S_NumDealsPurchases + -0.17763404274659 * S_NumDistPurchases +
0.08894400267969 * S_NumStorePurchases + 0.59283747891957 * S_NumWebPurchases +
0.85268274682505 * S_NumWebVisitsMonth + -0.43035426151546 * S_RFMstat + 0.52915289749814 *
S_RMntFrq + -1.22871580072103 * S_Recency + -0.42049179704691 * S_Teenhome ;
1247033   +   H1x1_2  =    -0.17196520392875 * S_AcceptedCmpTotal
1247034   +          +     0.09368836975829 * S_Age  +     -0.2079821803313 * S_Frq
1247035   +          +    -0.59508480939905 * S_Income  +     0.34485068405931 *
1247036   +        S_Kidhome  +     0.68503953220301 * S_Mnt  +    -0.41832366462675 *
1247037   +        S_MntFishProducts  +      0.3374808822635 * S_MntFruits
1247038   +          +     0.41521872138137 * S_MntGoldProds  +     1.55234986522641 *
1247039   +        S_MntMeatProducts  +     0.17336981388128 * S_MntSweetProducts
1247040   +          +    -0.03736062165339 * S_MntWines  +     0.20414742233604 *
1247041   +        S_MonthsAsCustomer  +    -1.29756795361717 * S_NumCatalogPurchases
1247042   +          +    -0.80841566068716 * S_NumDealsPurchases
1247043   +          +    -0.17995640033768 * S_NumDistPurchases
1247044   +          +     0.00713417460936 * S_NumStorePurchases
1247045   +          +     0.57881024323076 * S_NumWebPurchases
1247046   +          +    -1.35134224257365 * S_NumWebVisitsMonth
1247047   +          +     0.63440441349443 * S_RFMstat  +      0.7029589919795 *
1247048   +        S_RMntFrq  +     1.16978656262499 * S_Recency
1247049   +          +     0.22916564304766 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.17196520392875 * S_AcceptedCmpTotal + 0.09368836975829 *
S_Age + -0.2079821803313 * S_Frq + -0.59508480939905 * S_Income + 0.34485068405931 * S_Kidhome
+ 0.68503953220301 * S_Mnt + -0.41832366462675 * S_MntFishProducts + 0.3374808822635 *
S_MntFruits + 0.41521872138137 * S_MntGoldProds + 1.55234986522641 * S_MntMeatProducts +
0.17336981388128 * S_MntSweetProducts + -0.03736062165339 * S_MntWines + 0.20414742233604 *
S_MonthsAsCustomer + -1.29756795361717 * S_NumCatalogPurchases + -0.80841566068716 *
S_NumDealsPurchases + -0.17995640033768 * S_NumDistPurchases + 0.00713417460936 *
S_NumStorePurchases + 0.57881024323076 * S_NumWebPurchases + -1.35134224257365 *
S_NumWebVisitsMonth + 0.63440441349443 * S_RFMstat + 0.7029589919795 * S_RMntFrq +
1.16978656262499 * S_Recency + 0.22916564304766 * S_Teenhome ;
1247050   +   H1x1_3  =     1.25968793568007 * S_AcceptedCmpTotal
1247051   +          +     0.16058002256905 * S_Age  +    -1.00283978743671 * S_Frq
1247052   +          +     0.80202770811665 * S_Income  +     -0.7384690128283 *
1247053   +        S_Kidhome  +      0.6320116033322 * S_Mnt  +    -0.48862240567237 *
1247054   +        S_MntFishProducts  +     0.26477442063044 * S_MntFruits
1247055   +          +       0.434753861356 * S_MntGoldProds  +     3.54637875222405 *
1247056   +        S_MntMeatProducts  +    -0.09532877173293 * S_MntSweetProducts
1247057   +          +    -0.60614222423624 * S_MntWines  +     0.06807192728487 *
1247058   +        S_MonthsAsCustomer  +     0.45280110551612 * S_NumCatalogPurchases
1247059   +          +     0.57891364118717 * S_NumDealsPurchases
1247060   +          +    -0.31024556838688 * S_NumDistPurchases
1247061   +          +    -1.48708542986704 * S_NumStorePurchases
1247062   +          +    -0.93009875249206 * S_NumWebPurchases
1247063   +          +     2.01900039122935 * S_NumWebVisitsMonth
1247064   +          +     0.50006472616383 * S_RFMstat  +    -1.16854599018819 *
1247065   +        S_RMntFrq  +    -2.30414631760388 * S_Recency
1247066   +          +    -0.64226055895142 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.25968793568007 * S_AcceptedCmpTotal + 0.16058002256905 *
S_Age + -1.00283978743671 * S_Frq + 0.80202770811665 * S_Income + -0.7384690128283 * S_Kidhome
+ 0.6320116033322 * S_Mnt + -0.48862240567237 * S_MntFishProducts + 0.26477442063044 *
S_MntFruits + 0.434753861356 * S_MntGoldProds + 3.54637875222405 * S_MntMeatProducts +
-0.09532877173293 * S_MntSweetProducts + -0.60614222423624 * S_MntWines + 0.06807192728487 *
S_MonthsAsCustomer + 0.45280110551612 * S_NumCatalogPurchases + 0.57891364118717 *
S_NumDealsPurchases + -0.31024556838688 * S_NumDistPurchases + -1.48708542986704 *
S_NumStorePurchases + -0.93009875249206 * S_NumWebPurchases + 2.01900039122935 *
S_NumWebVisitsMonth + 0.50006472616383 * S_RFMstat + -1.16854599018819 * S_RMntFrq +
-2.30414631760388 * S_Recency + -0.64226055895142 * S_Teenhome ;
1247067   +   H1x1_1  = H1x1_1  +     0.90039925512906 * AcceptedCmp10
1247068   +          +    -0.47386683647261 * AcceptedCmp20  +    -0.71163968851557 *
1247069   +        AcceptedCmp30  +    -1.10005761198573 * AcceptedCmp40
1247070   +          +     0.81604940024858 * AcceptedCmp50  +    -0.03266697009221 *
1247071   +        Complain0  +     0.45877513475435 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.90039925512906 * AcceptedCmp10 + -0.47386683647261 *
AcceptedCmp20 + -0.71163968851557 * AcceptedCmp30 + -1.10005761198573 * AcceptedCmp40 +
0.81604940024858 * AcceptedCmp50 + -0.03266697009221 * Complain0 + 0.45877513475435 *
HigherEducationBinary0 ;
1247072   +   H1x1_2  = H1x1_2  +    -0.09498245462104 * AcceptedCmp10
1247073   +          +     -0.5878058848086 * AcceptedCmp20  +     1.08802173663414 *
1247074   +        AcceptedCmp30  +      0.4681907014168 * AcceptedCmp40
1247075   +          +    -1.71290692396514 * AcceptedCmp50  +    -0.47229847844337 *
1247076   +        Complain0  +     0.41790693564846 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.09498245462104 * AcceptedCmp10 + -0.5878058848086 *
AcceptedCmp20 + 1.08802173663414 * AcceptedCmp30 + 0.4681907014168 * AcceptedCmp40 +
-1.71290692396514 * AcceptedCmp50 + -0.47229847844337 * Complain0 + 0.41790693564846 *
HigherEducationBinary0 ;
1247077   +   H1x1_3  = H1x1_3  +    -0.14466250407205 * AcceptedCmp10
1247078   +          +    -0.05281153450358 * AcceptedCmp20  +     0.30771572513376 *
1247079   +        AcceptedCmp30  +    -0.25237634767535 * AcceptedCmp40
1247080   +          +    -2.36680490171638 * AcceptedCmp50  +    -0.12273085838026 *
1247081   +        Complain0  +     0.40951032893236 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.14466250407205 * AcceptedCmp10 + -0.05281153450358
* AcceptedCmp20 + 0.30771572513376 * AcceptedCmp30 + -0.25237634767535 * AcceptedCmp40 +
-2.36680490171638 * AcceptedCmp50 + -0.12273085838026 * Complain0 + 0.40951032893236 *
HigherEducationBinary0 ;
1247082   +   H1x1_1  = H1x1_1  +    -0.00834762223325 * Education2n_Cycle
1247083   +          +    -0.42766880626216 * EducationBasic  +    -0.47517247816239 *
1247084   +        EducationGraduation  +    -0.68730596079478 * EducationMaster
1247085   +          +     0.55883606830033 * Marital_StatusDivorced
1247086   +          +    -0.54530037567066 * Marital_StatusMarried
1247087   +          +    -0.52994736075753 * Marital_StatusSingle
1247088   +          +    -0.53882341831078 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.00834762223325 * Education2n_Cycle +
-0.42766880626216 * EducationBasic + -0.47517247816239 * EducationGraduation +
-0.68730596079478 * EducationMaster + 0.55883606830033 * Marital_StatusDivorced +
-0.54530037567066 * Marital_StatusMarried + -0.52994736075753 * Marital_StatusSingle +
-0.53882341831078 * Marital_StatusTogether ;
1247089   +   H1x1_2  = H1x1_2  +    -0.22709215793074 * Education2n_Cycle
1247090   +          +     0.07643166113928 * EducationBasic  +    -0.97269335071824 *
1247091   +        EducationGraduation  +     0.31201349236277 * EducationMaster
1247092   +          +    -1.07368484057033 * Marital_StatusDivorced
1247093   +          +     2.73313504711262 * Marital_StatusMarried
1247094   +          +    -2.18530462876058 * Marital_StatusSingle
1247095   +          +     2.38158278480467 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.22709215793074 * Education2n_Cycle +
0.07643166113928 * EducationBasic + -0.97269335071824 * EducationGraduation + 0.31201349236277
* EducationMaster + -1.07368484057033 * Marital_StatusDivorced + 2.73313504711262 *
Marital_StatusMarried + -2.18530462876058 * Marital_StatusSingle + 2.38158278480467 *
Marital_StatusTogether ;
1247096   +   H1x1_3  = H1x1_3  +     0.04453578767387 * Education2n_Cycle
1247097   +          +    -0.65383041132508 * EducationBasic  +    -0.17789960866108 *
1247098   +        EducationGraduation  +    -0.35544166792219 * EducationMaster
1247099   +          +     0.49993144243043 * Marital_StatusDivorced
1247100   +          +    -0.38953339116829 * Marital_StatusMarried
1247101   +          +    -0.10836287319942 * Marital_StatusSingle
1247102   +          +    -0.42049990939036 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.04453578767387 * Education2n_Cycle +
-0.65383041132508 * EducationBasic + -0.17789960866108 * EducationGraduation +
-0.35544166792219 * EducationMaster + 0.49993144243043 * Marital_StatusDivorced +
-0.38953339116829 * Marital_StatusMarried + -0.10836287319942 * Marital_StatusSingle +
-0.42049990939036 * Marital_StatusTogether ;
1247103   +   H1x1_1  =    -0.67322256806566 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.67322256806566 + H1x1_1 ;
1247104   +   H1x1_2  =     1.02621981675321 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.02621981675321 + H1x1_2 ;
1247105   +   H1x1_3  =     1.79721701815172 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.79721701815172 + H1x1_3 ;
1247106   +   H1x1_4  = 0;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0;
1247107   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
1247108   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1247109   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
1247110   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
1247111   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
1247112   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
1247113   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
1247114   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
1247115   +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
1247116   +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
1247117   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
1247118   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
1247119   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
1247120   +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
1247121   +END;
MPRINT(EM_DIAGRAM):   END;
1247122   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1247123   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
1247124   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
1247125   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
1247126   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
1247127   +END;
MPRINT(EM_DIAGRAM):   END;
1247128   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1247129   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1247130   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1247131   +
1247132   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1247133   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1247134   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1247135   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1247136   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1247137   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1247138   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1247139   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1247140   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1247141   +end;
MPRINT(EM_DIAGRAM):   end;
1247142   +else do;
MPRINT(EM_DIAGRAM):   else do;
1247143   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1247144   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1247145   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1247146   +   end;
MPRINT(EM_DIAGRAM):   end;
1247147   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1247148   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1247149   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1247150   +   end;
MPRINT(EM_DIAGRAM):   end;
1247151   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1247152   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1247153   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1247154   +   end;
MPRINT(EM_DIAGRAM):   end;
1247155   +end;
MPRINT(EM_DIAGRAM):   end;
1247156   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1247157   +   P_DepVar1  =    -3.84261611144245 * H1x1_1  +    -7.15065431642895 * H1x1_2
1247158   +          +       11.29639646928 * H1x1_3  +    -2.12563351481128 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.84261611144245 * H1x1_1 + -7.15065431642895 * H1x1_2 +
11.29639646928 * H1x1_3 + -2.12563351481128 * H1x1_4 ;
1247159   +   P_DepVar1  =    -3.54755955929493 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.54755955929493 + P_DepVar1 ;
1247160   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1247161   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1247162   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1247163   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1247164   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1247165   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1247166   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1247167   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1247168   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1247169   +END;
MPRINT(EM_DIAGRAM):   END;
1247170   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1247171   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1247172   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1247173   +END;
MPRINT(EM_DIAGRAM):   END;
1247174   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1247175   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1247176   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1247177   +END;
MPRINT(EM_DIAGRAM):   END;
1247178   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1247179   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1247180   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1247181   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1247182   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1247183   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1247184   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1247185   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1247186   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1247187   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1247188   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1247189   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1247190   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1247191   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1247192   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1247193   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1247194   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
The SAS System
 
1247195   +END;
MPRINT(EM_DIAGRAM):   END;
1247196   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1247197   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1247198   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1247199   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1247200   +* Renaming variables for AutoNeural9;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural9;
1247201   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1247202   +* Renaming Posterior variables for AutoNeural9;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural9;
1247203   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1247204   +drop AutoNeural9_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_P_DepVar1;
1247205   +AutoNeural9_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural9_P_DepVar1 = P_DepVar1;
1247206   +drop AutoNeural9_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_P_DepVar0;
1247207   +AutoNeural9_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural9_P_DepVar0 = P_DepVar0;
1247208   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1247209   +* Renaming _WARN_ variable for AutoNeural9;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural9;
1247210   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1247211   +length AutoNeural9_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural9_WARN_ $4;
1247212   +drop AutoNeural9_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_WARN_;
1247213   +AutoNeural9_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural9_WARN_ = _WARN_;
1247214   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1247215   +* Ensmbl46: Maximum Posteriors of 5 models;
MPRINT(EM_DIAGRAM):   * Ensmbl46: Maximum Posteriors of 5 models;
1247216   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1247217   +_psum = 0;
MPRINT(EM_DIAGRAM):   _psum = 0;
1247218   +drop _psum _premainder;
MPRINT(EM_DIAGRAM):   drop _psum _premainder;
1247219   +P_DepVar1 = max(
1247220   +AutoNeural10_P_DepVar1 ,
1247221   +AutoNeural7_P_DepVar1 ,
1247222   +AutoNeural12_P_DepVar1 ,
1247223   +AutoNeural11_P_DepVar1 ,
1247224   +AutoNeural9_P_DepVar1
1247225   +);
MPRINT(EM_DIAGRAM):   P_DepVar1 = max( AutoNeural10_P_DepVar1 , AutoNeural7_P_DepVar1 ,
AutoNeural12_P_DepVar1 , AutoNeural11_P_DepVar1 , AutoNeural9_P_DepVar1 );
1247226   +_premainder =1 - _psum;
MPRINT(EM_DIAGRAM):   _premainder =1 - _psum;
1247227   +if P_DepVar1 > _premainder then do;
MPRINT(EM_DIAGRAM):   if P_DepVar1 > _premainder then do;
1247228   +P_DepVar1 = _premainder;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _premainder;
1247229   +end;
MPRINT(EM_DIAGRAM):   end;
1247230   +_psum + P_DepVar1;
MPRINT(EM_DIAGRAM):   _psum + P_DepVar1;
1247231   +P_DepVar0 = max(
1247232   +AutoNeural10_P_DepVar0 ,
1247233   +AutoNeural7_P_DepVar0 ,
1247234   +AutoNeural12_P_DepVar0 ,
1247235   +AutoNeural11_P_DepVar0 ,
1247236   +AutoNeural9_P_DepVar0
1247237   +);
MPRINT(EM_DIAGRAM):   P_DepVar0 = max( AutoNeural10_P_DepVar0 , AutoNeural7_P_DepVar0 ,
AutoNeural12_P_DepVar0 , AutoNeural11_P_DepVar0 , AutoNeural9_P_DepVar0 );
1247238   +_premainder =1 - _psum;
MPRINT(EM_DIAGRAM):   _premainder =1 - _psum;
1247239   +if P_DepVar0 > _premainder then do;
MPRINT(EM_DIAGRAM):   if P_DepVar0 > _premainder then do;
1247240   +P_DepVar0 = _premainder;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _premainder;
1247241   +end;
MPRINT(EM_DIAGRAM):   end;
1247242   +_psum + P_DepVar0;
MPRINT(EM_DIAGRAM):   _psum + P_DepVar0;
1247243   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1247244   +* Ensmbl46: Computing Classification Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl46: Computing Classification Vars;
1247245   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1247246   +length I_DepVar $32;
MPRINT(EM_DIAGRAM):   length I_DepVar $32;
WARNING: Length of character variable I_DepVar has already been set.
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the
         length of a character variable.
1247247   +label I_DepVar = 'Into: DepVar';
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar';
1247248   +length _format $200;
MPRINT(EM_DIAGRAM):   length _format $200;
1247249   +drop _format;
MPRINT(EM_DIAGRAM):   drop _format;
1247250   +_format= ' ';
MPRINT(EM_DIAGRAM):   _format= ' ';
1247251   +_p_= 0;
MPRINT(EM_DIAGRAM):   _p_= 0;
1247252   +drop _p_;
MPRINT(EM_DIAGRAM):   drop _p_;
1247253   +if P_DepVar1 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar1 > _p_ then do;
1247254   +_p_= P_DepVar1;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar1;
1247255   +_format= '1';
MPRINT(EM_DIAGRAM):   _format= '1';
1247256   +end;
MPRINT(EM_DIAGRAM):   end;
1247257   +if P_DepVar0 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar0 > _p_ then do;
1247258   +_p_= P_DepVar0;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar0;
1247259   +_format= '0';
MPRINT(EM_DIAGRAM):   _format= '0';
1247260   +end;
MPRINT(EM_DIAGRAM):   end;
1247261   +%DMNORMCP(_format,I_DepVar);
MPRINT(DMNORMCP):   I_DepVar=dmnorm(_format,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1247262   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1247263   +* Ensmbl46: Producing Unformatted variable;
MPRINT(EM_DIAGRAM):   * Ensmbl46: Producing Unformatted variable;
1247264   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1247265   +label U_DepVar = "Unnormalized Into: DepVar";
MPRINT(EM_DIAGRAM):   label U_DepVar = "Unnormalized Into: DepVar";
1247266   +if I_DepVar = '1' then U_DepVar = 1;
MPRINT(EM_DIAGRAM):   if I_DepVar = '1' then U_DepVar = 1;
1247267   +else
1247268   +if I_DepVar = '0' then U_DepVar = 0;
MPRINT(EM_DIAGRAM):   else if I_DepVar = '0' then U_DepVar = 0;
1247269   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1247270   +* Ensmbl46: Computing _WARN_ Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl46: Computing _WARN_ Variable;
1247271   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1247272   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
1247273   +label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
1247274   +_WARN_ = '';
MPRINT(EM_DIAGRAM):   _WARN_ = '';
1247275   +if index(AUTONEURAL10_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
1247275  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL10_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
1247276   +if index(AUTONEURAL10_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
1247276  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL10_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
1247277   +if index(AUTONEURAL10_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
1247277  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL10_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
1247278   +if index(AUTONEURAL10_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
1247278  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL10_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
1247279   +if index(AUTONEURAL7_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
1247279  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL7_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
1247280   +if index(AUTONEURAL7_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
1247280  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL7_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
1247281   +if index(AUTONEURAL7_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
1247281  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL7_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
1247282   +if index(AUTONEURAL7_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
1247282  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL7_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
1247283   +if index(AUTONEURAL12_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
1247283  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
1247284   +if index(AUTONEURAL12_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
1247284  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
1247285   +if index(AUTONEURAL12_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
1247285  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
1247286   +if index(AUTONEURAL12_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
1247286  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
1247287   +if index(AUTONEURAL11_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
1247287  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
1247288   +if index(AUTONEURAL11_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
1247288  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
1247289   +if index(AUTONEURAL11_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
1247289  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
1247290   +if index(AUTONEURAL11_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
1247290  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
1247291   +if index(AUTONEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
1247291  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
1247292   +if index(AUTONEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
1247292  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
1247293   +if index(AUTONEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
1247293  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
1247294   +if index(AUTONEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
1247294  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
1247295   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1247296   +* Ensmbl46: Computing Residual Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl46: Computing Residual Vars;
1247297   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1247298   +if
1247299   +F_DepVar NE '1'
1247300   +AND F_DepVar NE '0'
1247301   +then do;
MPRINT(EM_DIAGRAM):   if F_DepVar NE '1' AND F_DepVar NE '0' then do;
1247302   +R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
1247303   +R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
1247304   +end;
MPRINT(EM_DIAGRAM):   end;
1247305   +else do;
MPRINT(EM_DIAGRAM):   else do;
1247306   +R_DepVar1 = -P_DepVar1;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1;
1247307   +R_DepVar0 = -P_DepVar0;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0;
1247308   +SELECT(F_DepVar);
MPRINT(EM_DIAGRAM):   SELECT(F_DepVar);
1247309   +WHEN('1') R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   WHEN('1') R_DepVar1 = R_DepVar1 +1;
1247310   +WHEN('0') R_DepVar0 = R_DepVar0 +1;
MPRINT(EM_DIAGRAM):   WHEN('0') R_DepVar0 = R_DepVar0 +1;
1247311   +OTHERWISE;
MPRINT(EM_DIAGRAM):   OTHERWISE;
1247312   +END;
MPRINT(EM_DIAGRAM):   END;
1247313   +END;
MPRINT(EM_DIAGRAM):   END;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1247314    run;
 
NOTE: DATA STEP view saved on file EMWS8.ENSMBL46_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.AUTONEURAL10_TRAIN.VIEW used (Total process time):
      real time           0.17 seconds
      cpu time            0.17 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.18 seconds
      cpu time            0.18 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1247315    quit;
1247316    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
1247317    filename emflow
1247317  ! "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl46\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl46\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl46: Scoring AUTONEURAL10_VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1247318    *------------------------------------------------------------*;
1247319    * Ensmbl46: Scoring AUTONEURAL10_VALIDATE data;
1247320    *------------------------------------------------------------*;
1247321    data EMWS8.Ensmbl46_VALIDATE
1247322    / view=EMWS8.Ensmbl46_VALIDATE
1247323    ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl46_VALIDATE / view=EMWS8.Ensmbl46_VALIDATE ;
1247324    set EMWS8.AutoNeural10_VALIDATE
1247325    ;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_VALIDATE ;
1247326    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file
      C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl46\EMFLOWSCORE.sas.
1247327   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1247328   +* Ensmbl46: Combine model for DepVar;
MPRINT(EM_DIAGRAM):   * Ensmbl46: Combine model for DepVar;
1247329   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1247330   +* Ensmbl46: Scoring Code of model 1 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl46: Scoring Code of model 1 of 5;
1247331   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1247332   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1247333   +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
1247334   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
1247335   +* NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
1247336   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1247337   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1247338   +* TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
1247339   +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
1247340   +* NODE: Stat;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
1247341   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1247342   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1247343   +* TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
1247344   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
1247345   +* NODE: Filter;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
1247346   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1247347   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1247348   +* TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
1247349   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
1247350   +* NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
1247351   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1247352   +
1247353   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1247354   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1247354  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1247355   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1247356   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1247357   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1247358   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1247359   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
1247360   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1247361   +* TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
1247362   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
1247363   +* NODE: Trans;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
1247364   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1247365   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1247366   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1247367   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1247368   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1247369   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1247370   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
1247371   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1247372   +* TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
1247373   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
1247374   +* NODE: Part;
MPRINT(EM_DIAGRAM):   * NODE: Part;
1247375   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1247376   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1247377   +* TOOL: Metadata Node;
MPRINT(EM_DIAGRAM):   * TOOL: Metadata Node;
1247378   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
1247379   +* NODE: Meta;
MPRINT(EM_DIAGRAM):   * NODE: Meta;
1247380   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1247381   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1247382   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
1247383   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1247384   +* NODE: AutoNeural10;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural10;
1247385   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1247386   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1247387   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1247388   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1247389   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1247390   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1247391   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1247392   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1247393   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1247394   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1247395   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1247396   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1247397   +LENGTH _WARN_ $4
1247398   +      F_DepVar  $ 12
1247399   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1247400   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1247401   +
1247402   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1247403   +
1247404   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1247405   +
1247406   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1247407   +
1247408   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1247409   +
1247410   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1247411   +
1247412   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1247413   +
1247414   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1247415   +
1247416   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1247417   +
1247418   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1247419   +
1247420   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1247421   +
1247422   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1247423   +
1247424   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1247425   +
1247426   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1247427   +
1247428   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1247429   +
1247430   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1247431   +
1247432   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1247433   +
1247434   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1247435   +
1247436   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1247437   +
1247438   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1247439   +
1247440   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1247441   +
1247442   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1247443   +
1247444   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1247445   +
1247446   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1247447   +
1247448   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1247449   +
1247450   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1247451   +
1247452   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1247453   +
1247454   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1247455   +
1247456   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1247457   +
1247458   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1247459   +
1247460   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1247461   +
1247462   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1247463   +
1247464   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1247465   +
1247466   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1247467   +
1247468   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1247469   +
1247470   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1247471   +
1247472   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1247473   +
1247474   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1247475   +
1247476   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
1247477   +
1247478   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
1247479   +
1247480   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
1247481   +
1247482   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
1247483   +
1247484   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
1247485   +
1247486   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
1247487   +
1247488   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
1247489   +
1247490   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
1247491   +
1247492   +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
1247493   +
1247494   +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
1247495   +
1247496   +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
1247497   +
1247498   +      label H1x3_2 = 'Hidden: H1x3_=2' ;
MPRINT(EM_DIAGRAM):   label H1x3_2 = 'Hidden: H1x3_=2' ;
1247499   +
1247500   +      label H1x3_3 = 'Hidden: H1x3_=3' ;
MPRINT(EM_DIAGRAM):   label H1x3_3 = 'Hidden: H1x3_=3' ;
1247501   +
1247502   +      label H1x3_4 = 'Hidden: H1x3_=4' ;
MPRINT(EM_DIAGRAM):   label H1x3_4 = 'Hidden: H1x3_=4' ;
1247503   +
1247504   +      label H1x3_5 = 'Hidden: H1x3_=5' ;
MPRINT(EM_DIAGRAM):   label H1x3_5 = 'Hidden: H1x3_=5' ;
1247505   +
1247506   +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
1247507   +
1247508   +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
1247509   +
1247510   +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
1247511   +
1247512   +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
1247513   +
1247514   +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
1247515   +
1247516   +      label H2x2_1 = 'Hidden: H2x2_=1' ;
MPRINT(EM_DIAGRAM):   label H2x2_1 = 'Hidden: H2x2_=1' ;
1247517   +
1247518   +      label H2x2_2 = 'Hidden: H2x2_=2' ;
MPRINT(EM_DIAGRAM):   label H2x2_2 = 'Hidden: H2x2_=2' ;
1247519   +
1247520   +      label H2x2_3 = 'Hidden: H2x2_=3' ;
MPRINT(EM_DIAGRAM):   label H2x2_3 = 'Hidden: H2x2_=3' ;
1247521   +
1247522   +      label H2x2_4 = 'Hidden: H2x2_=4' ;
MPRINT(EM_DIAGRAM):   label H2x2_4 = 'Hidden: H2x2_=4' ;
1247523   +
1247524   +      label H2x2_5 = 'Hidden: H2x2_=5' ;
MPRINT(EM_DIAGRAM):   label H2x2_5 = 'Hidden: H2x2_=5' ;
1247525   +
1247526   +      label H3x1_1 = 'Hidden: H3x1_=1' ;
MPRINT(EM_DIAGRAM):   label H3x1_1 = 'Hidden: H3x1_=1' ;
1247527   +
1247528   +      label H3x1_2 = 'Hidden: H3x1_=2' ;
MPRINT(EM_DIAGRAM):   label H3x1_2 = 'Hidden: H3x1_=2' ;
1247529   +
1247530   +      label H3x1_3 = 'Hidden: H3x1_=3' ;
MPRINT(EM_DIAGRAM):   label H3x1_3 = 'Hidden: H3x1_=3' ;
1247531   +
1247532   +      label H3x1_4 = 'Hidden: H3x1_=4' ;
MPRINT(EM_DIAGRAM):   label H3x1_4 = 'Hidden: H3x1_=4' ;
1247533   +
1247534   +      label H3x1_5 = 'Hidden: H3x1_=5' ;
MPRINT(EM_DIAGRAM):   label H3x1_5 = 'Hidden: H3x1_=5' ;
1247535   +
1247536   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1247537   +
1247538   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1247539   +
1247540   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1247541   +
1247542   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1247543   +
1247544   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1247545   +
1247546   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1247547   +
1247548   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1247549   +
1247550   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1247551   +
1247552   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1247553   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1247554   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1247555   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1247556   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1247557   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1247558   +end;
MPRINT(EM_DIAGRAM):   end;
1247559   +else do;
MPRINT(EM_DIAGRAM):   else do;
1247560   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1247561   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1247562   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1247563   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1247564   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1247565   +   end;
MPRINT(EM_DIAGRAM):   end;
1247566   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1247567   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1247568   +   end;
MPRINT(EM_DIAGRAM):   end;
1247569   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1247570   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1247571   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1247572   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1247573   +   end;
MPRINT(EM_DIAGRAM):   end;
1247574   +end;
MPRINT(EM_DIAGRAM):   end;
1247575   +
1247576   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1247577   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1247578   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1247579   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1247580   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1247581   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1247582   +end;
MPRINT(EM_DIAGRAM):   end;
1247583   +else do;
MPRINT(EM_DIAGRAM):   else do;
1247584   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1247585   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1247586   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1247587   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1247588   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1247589   +   end;
MPRINT(EM_DIAGRAM):   end;
1247590   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1247591   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1247592   +   end;
MPRINT(EM_DIAGRAM):   end;
1247593   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1247594   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1247595   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1247596   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1247597   +   end;
MPRINT(EM_DIAGRAM):   end;
1247598   +end;
MPRINT(EM_DIAGRAM):   end;
1247599   +
1247600   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1247601   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1247602   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1247603   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1247604   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1247605   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1247606   +end;
MPRINT(EM_DIAGRAM):   end;
1247607   +else do;
MPRINT(EM_DIAGRAM):   else do;
1247608   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1247609   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1247610   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1247611   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1247612   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1247613   +   end;
MPRINT(EM_DIAGRAM):   end;
1247614   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1247615   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1247616   +   end;
MPRINT(EM_DIAGRAM):   end;
1247617   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1247618   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1247619   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1247620   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1247621   +   end;
MPRINT(EM_DIAGRAM):   end;
1247622   +end;
MPRINT(EM_DIAGRAM):   end;
1247623   +
1247624   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1247625   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1247626   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1247627   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1247628   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1247629   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1247630   +end;
MPRINT(EM_DIAGRAM):   end;
1247631   +else do;
MPRINT(EM_DIAGRAM):   else do;
1247632   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1247633   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1247634   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1247635   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1247636   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1247637   +   end;
MPRINT(EM_DIAGRAM):   end;
1247638   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1247639   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1247640   +   end;
MPRINT(EM_DIAGRAM):   end;
1247641   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1247642   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1247643   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1247644   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1247645   +   end;
MPRINT(EM_DIAGRAM):   end;
1247646   +end;
MPRINT(EM_DIAGRAM):   end;
1247647   +
1247648   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1247649   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1247650   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1247651   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1247652   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1247653   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1247654   +end;
MPRINT(EM_DIAGRAM):   end;
1247655   +else do;
MPRINT(EM_DIAGRAM):   else do;
1247656   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1247657   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1247658   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1247659   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1247660   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1247661   +   end;
MPRINT(EM_DIAGRAM):   end;
1247662   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1247663   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1247664   +   end;
MPRINT(EM_DIAGRAM):   end;
1247665   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1247666   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1247667   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1247668   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1247669   +   end;
MPRINT(EM_DIAGRAM):   end;
1247670   +end;
MPRINT(EM_DIAGRAM):   end;
1247671   +
1247672   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1247673   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1247674   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1247675   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1247676   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1247677   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1247678   +end;
MPRINT(EM_DIAGRAM):   end;
1247679   +else do;
MPRINT(EM_DIAGRAM):   else do;
1247680   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1247681   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1247682   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1247683   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1247684   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1247685   +   end;
MPRINT(EM_DIAGRAM):   end;
1247686   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1247687   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1247688   +   end;
MPRINT(EM_DIAGRAM):   end;
1247689   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1247690   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1247691   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1247692   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1247693   +   end;
MPRINT(EM_DIAGRAM):   end;
1247694   +end;
MPRINT(EM_DIAGRAM):   end;
1247695   +
1247696   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1247697   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1247698   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1247699   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1247700   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1247701   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1247702   +end;
MPRINT(EM_DIAGRAM):   end;
1247703   +else do;
MPRINT(EM_DIAGRAM):   else do;
1247704   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1247705   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1247706   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1247707   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1247708   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1247709   +   end;
MPRINT(EM_DIAGRAM):   end;
1247710   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1247711   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1247712   +   end;
MPRINT(EM_DIAGRAM):   end;
1247713   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1247714   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1247715   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1247716   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1247717   +   end;
MPRINT(EM_DIAGRAM):   end;
1247718   +end;
MPRINT(EM_DIAGRAM):   end;
1247719   +
1247720   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1247721   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
1247722   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1247723   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1247724   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1247725   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1247726   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1247727   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1247728   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1247729   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1247730   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1247731   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1247732   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1247733   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1247734   +end;
MPRINT(EM_DIAGRAM):   end;
1247735   +else do;
MPRINT(EM_DIAGRAM):   else do;
1247736   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1247737   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1247738   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1247739   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1247740   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1247741   +   end;
MPRINT(EM_DIAGRAM):   end;
1247742   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1247743   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1247744   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1247745   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1247746   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1247747   +   end;
MPRINT(EM_DIAGRAM):   end;
1247748   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1247749   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1247750   +   end;
MPRINT(EM_DIAGRAM):   end;
1247751   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1247752   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1247753   +   end;
MPRINT(EM_DIAGRAM):   end;
1247754   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1247755   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1247756   +   end;
MPRINT(EM_DIAGRAM):   end;
1247757   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1247758   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1247759   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1247760   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1247761   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1247762   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1247763   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1247764   +   end;
MPRINT(EM_DIAGRAM):   end;
1247765   +end;
MPRINT(EM_DIAGRAM):   end;
1247766   +
1247767   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1247768   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1247769   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
1247770   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1247771   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1247772   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1247773   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1247774   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1247775   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1247776   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1247777   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1247778   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1247779   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1247780   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1247781   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1247782   +end;
MPRINT(EM_DIAGRAM):   end;
1247783   +else do;
MPRINT(EM_DIAGRAM):   else do;
1247784   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1247785   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1247786   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1247787   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1247788   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1247789   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1247790   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1247791   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1247792   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1247793   +         end;
MPRINT(EM_DIAGRAM):   end;
1247794   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1247795   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1247796   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1247797   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1247798   +            end;
MPRINT(EM_DIAGRAM):   end;
1247799   +         end;
MPRINT(EM_DIAGRAM):   end;
1247800   +      end;
MPRINT(EM_DIAGRAM):   end;
1247801   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1247802   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1247803   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1247804   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1247805   +         end;
MPRINT(EM_DIAGRAM):   end;
1247806   +      end;
MPRINT(EM_DIAGRAM):   end;
1247807   +   end;
MPRINT(EM_DIAGRAM):   end;
1247808   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1247809   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1247810   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1247811   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1247812   +      end;
MPRINT(EM_DIAGRAM):   end;
1247813   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1247814   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1247815   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1247816   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1247817   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1247818   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1247819   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1247820   +         end;
MPRINT(EM_DIAGRAM):   end;
1247821   +      end;
MPRINT(EM_DIAGRAM):   end;
1247822   +   end;
MPRINT(EM_DIAGRAM):   end;
1247823   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1247824   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1247825   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1247826   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1247827   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1247828   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1247829   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1247830   +   end;
MPRINT(EM_DIAGRAM):   end;
1247831   +end;
MPRINT(EM_DIAGRAM):   end;
1247832   +
1247833   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1247834   +*** Checking missing input Interval
1247835   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1247836   +
1247837   +IF NMISS(
1247838   +   AcceptedCmpTotal ,
1247839   +   Age ,
1247840   +   Frq ,
1247841   +   Income ,
1247842   +   Kidhome ,
1247843   +   Mnt ,
1247844   +   MntFishProducts ,
1247845   +   MntFruits ,
1247846   +   MntGoldProds ,
1247847   +   MntMeatProducts ,
1247848   +   MntSweetProducts ,
1247849   +   MntWines ,
1247850   +   MonthsAsCustomer ,
1247851   +   NumCatalogPurchases ,
1247852   +   NumDealsPurchases ,
1247853   +   NumDistPurchases ,
1247854   +   NumStorePurchases ,
1247855   +   NumWebPurchases ,
1247856   +   NumWebVisitsMonth ,
1247857   +   RFMstat ,
1247858   +   RMntFrq ,
1247859   +   Recency ,
1247860   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
1247861   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1247862   +
1247863   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1247864   +END;
MPRINT(EM_DIAGRAM):   END;
1247865   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1247866   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
1247867   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1247868   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1247869   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1247870   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1247871   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1247872   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1247873   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1247874   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1247875   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1247876   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1247877   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1247878   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1247879   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1247880   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1247881   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1247882   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1247883   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1247884   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1247885   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1247886   +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
1247887   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 *
MonthsAsCustomer ;
1247888   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1247889   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1247890   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1247891   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1247892   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1247893   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1247894   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1247895   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1247896   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1247897   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1247898   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1247899   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1247900   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1247901   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1247902   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1247903   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1247904   +END;
MPRINT(EM_DIAGRAM):   END;
1247905   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1247906   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1247907   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1247908   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1247909   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1247910   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1247911   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1247912   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1247913   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1247914   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1247915   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1247916   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1247917   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1247918   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1247919   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1247920   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1247921   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1247922   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1247923   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1247924   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1247925   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1247926   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1247927   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1247928   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1247929   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1247930   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1247931   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1247932   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1247933   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1247934   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1247935   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1247936   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1247937   +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
1247938   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 *
MonthsAsCustomer ;
1247939   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1247940   +   ELSE S_NumCatalogPurchases
1247941   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1247942   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1247943   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1247944   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1247945   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1247946   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1247947   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1247948   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1247949   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1247950   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1247951   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1247952   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1247953   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1247954   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1247955   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1247956   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1247957   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1247958   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1247959   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1247960   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1247961   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1247962   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1247963   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1247964   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1247965   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1247966   +END;
MPRINT(EM_DIAGRAM):   END;
1247967   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1247968   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
1247969   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1247970   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1247971   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
1247972   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1247973   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1247974   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
1247975   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1247976   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1247977   +   H1x1_1  =     -1.6780441789215 * S_AcceptedCmpTotal
1247978   +          +     0.45385980917029 * S_Age  +    -0.71899650455913 * S_Frq
1247979   +          +    -1.93679506571805 * S_Income  +     1.56925991391051 *
1247980   +        S_Kidhome  +    -1.47175189232318 * S_Mnt  +    -2.23220260217222 *
1247981   +        S_MntFishProducts  +    -0.27017202076253 * S_MntFruits
1247982   +          +    -0.33562096740259 * S_MntGoldProds  +     3.61472960640287 *
1247983   +        S_MntMeatProducts  +    -2.85576251647297 * S_MntSweetProducts
1247984   +          +     -4.4467685903527 * S_MntWines  +     0.38963757858628 *
1247985   +        S_MonthsAsCustomer  +     1.66666181194027 * S_NumCatalogPurchases
1247986   +          +     3.45371614080196 * S_NumDealsPurchases
1247987   +          +     0.19118374544537 * S_NumDistPurchases
1247988   +          +    -2.45138001446793 * S_NumStorePurchases
1247989   +          +    -0.11424280244155 * S_NumWebPurchases
1247990   +          +    -2.31770357716565 * S_NumWebVisitsMonth
1247991   +          +     2.81643889601936 * S_RFMstat  +    -1.04896006701534 *
1247992   +        S_RMntFrq  +     0.26870809438679 * S_Recency
1247993   +          +    -0.26422448158811 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.6780441789215 * S_AcceptedCmpTotal + 0.45385980917029 *
S_Age + -0.71899650455913 * S_Frq + -1.93679506571805 * S_Income + 1.56925991391051 *
S_Kidhome + -1.47175189232318 * S_Mnt + -2.23220260217222 * S_MntFishProducts +
-0.27017202076253 * S_MntFruits + -0.33562096740259 * S_MntGoldProds + 3.61472960640287 *
S_MntMeatProducts + -2.85576251647297 * S_MntSweetProducts + -4.4467685903527 * S_MntWines +
0.38963757858628 * S_MonthsAsCustomer + 1.66666181194027 * S_NumCatalogPurchases +
3.45371614080196 * S_NumDealsPurchases + 0.19118374544537 * S_NumDistPurchases +
-2.45138001446793 * S_NumStorePurchases + -0.11424280244155 * S_NumWebPurchases +
-2.31770357716565 * S_NumWebVisitsMonth + 2.81643889601936 * S_RFMstat + -1.04896006701534 *
S_RMntFrq + 0.26870809438679 * S_Recency + -0.26422448158811 * S_Teenhome ;
1247994   +   H1x1_2  =    -0.85648293000641 * S_AcceptedCmpTotal
1247995   +          +    -1.65647402725291 * S_Age  +     1.01151947076788 * S_Frq
1247996   +          +    -2.30217634682957 * S_Income  +     3.64198249916211 *
1247997   +        S_Kidhome  +     0.20767518788666 * S_Mnt  +     0.16841756532554 *
1247998   +        S_MntFishProducts  +      -1.068506425921 * S_MntFruits
1247999   +          +     0.58318801939162 * S_MntGoldProds  +    -2.31777049056548 *
1248000   +        S_MntMeatProducts  +     0.23759430399811 * S_MntSweetProducts
1248001   +          +      1.6840332285232 * S_MntWines  +     1.02971381781013 *
1248002   +        S_MonthsAsCustomer  +    -0.67962580165124 * S_NumCatalogPurchases
1248003   +          +    -1.28390925647659 * S_NumDealsPurchases
1248004   +          +     0.82669177239926 * S_NumDistPurchases
1248005   +          +     1.71678585204511 * S_NumStorePurchases
1248006   +          +     1.49226295608046 * S_NumWebPurchases
1248007   +          +     -4.0105103018388 * S_NumWebVisitsMonth
1248008   +          +     0.59909792991084 * S_RFMstat  +     1.07820515361554 *
1248009   +        S_RMntFrq  +     4.74241121363086 * S_Recency
1248010   +          +     3.02084642655958 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.85648293000641 * S_AcceptedCmpTotal + -1.65647402725291 *
S_Age + 1.01151947076788 * S_Frq + -2.30217634682957 * S_Income + 3.64198249916211 * S_Kidhome
+ 0.20767518788666 * S_Mnt + 0.16841756532554 * S_MntFishProducts + -1.068506425921 *
S_MntFruits + 0.58318801939162 * S_MntGoldProds + -2.31777049056548 * S_MntMeatProducts +
0.23759430399811 * S_MntSweetProducts + 1.6840332285232 * S_MntWines + 1.02971381781013 *
S_MonthsAsCustomer + -0.67962580165124 * S_NumCatalogPurchases + -1.28390925647659 *
S_NumDealsPurchases + 0.82669177239926 * S_NumDistPurchases + 1.71678585204511 *
S_NumStorePurchases + 1.49226295608046 * S_NumWebPurchases + -4.0105103018388 *
S_NumWebVisitsMonth + 0.59909792991084 * S_RFMstat + 1.07820515361554 * S_RMntFrq +
4.74241121363086 * S_Recency + 3.02084642655958 * S_Teenhome ;
1248011   +   H1x1_3  =    -2.68802949086986 * S_AcceptedCmpTotal
1248012   +          +     0.32408799976195 * S_Age  +     0.22616656573012 * S_Frq
1248013   +          +     -0.4811040196236 * S_Income  +     0.01554228937278 *
1248014   +        S_Kidhome  +    -0.00131538598753 * S_Mnt  +     1.89942488016409 *
1248015   +        S_MntFishProducts  +     0.56303548397494 * S_MntFruits
1248016   +          +    -0.15594598286956 * S_MntGoldProds  +    -7.89542322794989 *
1248017   +        S_MntMeatProducts  +    -0.27122492647076 * S_MntSweetProducts
1248018   +          +     4.85572438492582 * S_MntWines  +     0.12362243863555 *
1248019   +        S_MonthsAsCustomer  +    -1.47960473675934 * S_NumCatalogPurchases
1248020   +          +     0.22958626391725 * S_NumDealsPurchases
1248021   +          +    -0.02046515813996 * S_NumDistPurchases
1248022   +          +      0.8618502050837 * S_NumStorePurchases
1248023   +          +     1.45175370326009 * S_NumWebPurchases
1248024   +          +    -0.86122442436156 * S_NumWebVisitsMonth
1248025   +          +    -0.99643351802143 * S_RFMstat  +    -1.65762265567389 *
1248026   +        S_RMntFrq  +    -0.08202178452839 * S_Recency
1248027   +          +    -0.62066116666102 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -2.68802949086986 * S_AcceptedCmpTotal + 0.32408799976195 *
S_Age + 0.22616656573012 * S_Frq + -0.4811040196236 * S_Income + 0.01554228937278 * S_Kidhome
+ -0.00131538598753 * S_Mnt + 1.89942488016409 * S_MntFishProducts + 0.56303548397494 *
S_MntFruits + -0.15594598286956 * S_MntGoldProds + -7.89542322794989 * S_MntMeatProducts +
-0.27122492647076 * S_MntSweetProducts + 4.85572438492582 * S_MntWines + 0.12362243863555 *
S_MonthsAsCustomer + -1.47960473675934 * S_NumCatalogPurchases + 0.22958626391725 *
S_NumDealsPurchases + -0.02046515813996 * S_NumDistPurchases + 0.8618502050837 *
S_NumStorePurchases + 1.45175370326009 * S_NumWebPurchases + -0.86122442436156 *
S_NumWebVisitsMonth + -0.99643351802143 * S_RFMstat + -1.65762265567389 * S_RMntFrq +
-0.08202178452839 * S_Recency + -0.62066116666102 * S_Teenhome ;
1248028   +   H1x1_4  =     0.45192233004895 * S_AcceptedCmpTotal
1248029   +          +    -0.94676544762121 * S_Age  +     0.73809341266988 * S_Frq
1248030   +          +     0.72277799278136 * S_Income  +    -0.12970804152173 *
1248031   +        S_Kidhome  +     0.01052564540044 * S_Mnt  +    -0.48321452967118 *
1248032   +        S_MntFishProducts  +    -0.41471448831942 * S_MntFruits
1248033   +          +     0.04381334765674 * S_MntGoldProds  +     0.92594151100538 *
1248034   +        S_MntMeatProducts  +     0.29845970530397 * S_MntSweetProducts
1248035   +          +    -0.71535779454556 * S_MntWines  +     0.00059837351168 *
1248036   +        S_MonthsAsCustomer  +     2.23353511013288 * S_NumCatalogPurchases
1248037   +          +     1.25310034610344 * S_NumDealsPurchases
1248038   +          +     0.92141098602176 * S_NumDistPurchases
1248039   +          +    -0.08806509391473 * S_NumStorePurchases
1248040   +          +     -1.0533787624668 * S_NumWebPurchases
1248041   +          +     3.07050739830585 * S_NumWebVisitsMonth
1248042   +          +    -0.05671059637078 * S_RFMstat  +     1.73621676609839 *
1248043   +        S_RMntFrq  +     -3.8741602707981 * S_Recency
1248044   +          +    -2.06796290973426 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.45192233004895 * S_AcceptedCmpTotal + -0.94676544762121 *
S_Age + 0.73809341266988 * S_Frq + 0.72277799278136 * S_Income + -0.12970804152173 * S_Kidhome
+ 0.01052564540044 * S_Mnt + -0.48321452967118 * S_MntFishProducts + -0.41471448831942 *
S_MntFruits + 0.04381334765674 * S_MntGoldProds + 0.92594151100538 * S_MntMeatProducts +
0.29845970530397 * S_MntSweetProducts + -0.71535779454556 * S_MntWines + 0.00059837351168 *
S_MonthsAsCustomer + 2.23353511013288 * S_NumCatalogPurchases + 1.25310034610344 *
S_NumDealsPurchases + 0.92141098602176 * S_NumDistPurchases + -0.08806509391473 *
S_NumStorePurchases + -1.0533787624668 * S_NumWebPurchases + 3.07050739830585 *
S_NumWebVisitsMonth + -0.05671059637078 * S_RFMstat + 1.73621676609839 * S_RMntFrq +
-3.8741602707981 * S_Recency + -2.06796290973426 * S_Teenhome ;
1248045   +   H1x1_5  =    -1.36121985595495 * S_AcceptedCmpTotal
1248046   +          +     0.05422070059006 * S_Age  +     0.27495083329116 * S_Frq
1248047   +          +     -0.9677209394449 * S_Income  +    -1.13619168708067 *
1248048   +        S_Kidhome  +     0.62918569209141 * S_Mnt  +     0.37160756976122 *
1248049   +        S_MntFishProducts  +     0.88680401337821 * S_MntFruits
1248050   +          +    -0.36100921959604 * S_MntGoldProds  +    -0.35574990334834 *
1248051   +        S_MntMeatProducts  +     0.82389188555236 * S_MntSweetProducts
1248052   +          +     1.43496434553922 * S_MntWines  +    -1.46335376005851 *
1248053   +        S_MonthsAsCustomer  +    -1.84942841156411 * S_NumCatalogPurchases
1248054   +          +    -1.68259553608287 * S_NumDealsPurchases
1248055   +          +    -0.53835572290445 * S_NumDistPurchases
1248056   +          +     1.25833922835446 * S_NumStorePurchases
1248057   +          +     0.48300830623998 * S_NumWebPurchases
1248058   +          +    -2.20119275236582 * S_NumWebVisitsMonth
1248059   +          +     -0.2397284702987 * S_RFMstat  +    -0.71924218175088 *
1248060   +        S_RMntFrq  +     0.35692712879409 * S_Recency
1248061   +          +     0.77122286526706 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.36121985595495 * S_AcceptedCmpTotal + 0.05422070059006 *
S_Age + 0.27495083329116 * S_Frq + -0.9677209394449 * S_Income + -1.13619168708067 * S_Kidhome
+ 0.62918569209141 * S_Mnt + 0.37160756976122 * S_MntFishProducts + 0.88680401337821 *
S_MntFruits + -0.36100921959604 * S_MntGoldProds + -0.35574990334834 * S_MntMeatProducts +
0.82389188555236 * S_MntSweetProducts + 1.43496434553922 * S_MntWines + -1.46335376005851 *
S_MonthsAsCustomer + -1.84942841156411 * S_NumCatalogPurchases + -1.68259553608287 *
S_NumDealsPurchases + -0.53835572290445 * S_NumDistPurchases + 1.25833922835446 *
S_NumStorePurchases + 0.48300830623998 * S_NumWebPurchases + -2.20119275236582 *
S_NumWebVisitsMonth + -0.2397284702987 * S_RFMstat + -0.71924218175088 * S_RMntFrq +
0.35692712879409 * S_Recency + 0.77122286526706 * S_Teenhome ;
1248062   +   H1x1_1  = H1x1_1  +     0.07301304241545 * AcceptedCmp10
1248063   +          +    -1.95730125129608 * AcceptedCmp20  +    -1.38342161079442 *
1248064   +        AcceptedCmp30  +    -1.49080889719345 * AcceptedCmp40
1248065   +          +    -1.07381857035964 * AcceptedCmp50  +    -1.39161532835475 *
1248066   +        Complain0  +    -0.48833832833721 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.07301304241545 * AcceptedCmp10 + -1.95730125129608 *
AcceptedCmp20 + -1.38342161079442 * AcceptedCmp30 + -1.49080889719345 * AcceptedCmp40 +
-1.07381857035964 * AcceptedCmp50 + -1.39161532835475 * Complain0 + -0.48833832833721 *
HigherEducationBinary0 ;
1248067   +   H1x1_2  = H1x1_2  +     0.38934062747222 * AcceptedCmp10
1248068   +          +    -0.32259780417284 * AcceptedCmp20  +     0.51602852076334 *
1248069   +        AcceptedCmp30  +    -0.70838948180655 * AcceptedCmp40
1248070   +          +     1.29066052659113 * AcceptedCmp50  +      0.1004848714971 *
1248071   +        Complain0  +    -0.73386392383925 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.38934062747222 * AcceptedCmp10 + -0.32259780417284 *
AcceptedCmp20 + 0.51602852076334 * AcceptedCmp30 + -0.70838948180655 * AcceptedCmp40 +
1.29066052659113 * AcceptedCmp50 + 0.1004848714971 * Complain0 + -0.73386392383925 *
HigherEducationBinary0 ;
1248072   +   H1x1_3  = H1x1_3  +     0.34219997086576 * AcceptedCmp10
1248073   +          +    -0.12311182470953 * AcceptedCmp20  +     -2.0600710888874 *
1248074   +        AcceptedCmp30  +      -1.904294485826 * AcceptedCmp40
1248075   +          +     3.36424449872952 * AcceptedCmp50  +    -0.25078238709812 *
1248076   +        Complain0  +    -0.08077684854733 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.34219997086576 * AcceptedCmp10 + -0.12311182470953 *
AcceptedCmp20 + -2.0600710888874 * AcceptedCmp30 + -1.904294485826 * AcceptedCmp40 +
3.36424449872952 * AcceptedCmp50 + -0.25078238709812 * Complain0 + -0.08077684854733 *
HigherEducationBinary0 ;
1248077   +   H1x1_4  = H1x1_4  +    -1.12501407155309 * AcceptedCmp10
1248078   +          +    -1.58866249671355 * AcceptedCmp20  +    -1.72881548820716 *
1248079   +        AcceptedCmp30  +      -2.214698125839 * AcceptedCmp40
1248080   +          +    -0.62635613939269 * AcceptedCmp50  +      0.0150779868394 *
1248081   +        Complain0  +     1.03338023365724 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -1.12501407155309 * AcceptedCmp10 + -1.58866249671355
* AcceptedCmp20 + -1.72881548820716 * AcceptedCmp30 + -2.214698125839 * AcceptedCmp40 +
-0.62635613939269 * AcceptedCmp50 + 0.0150779868394 * Complain0 + 1.03338023365724 *
HigherEducationBinary0 ;
1248082   +   H1x1_5  = H1x1_5  +    -0.26508589111781 * AcceptedCmp10
1248083   +          +    -0.40912292690255 * AcceptedCmp20  +     0.75389762391096 *
1248084   +        AcceptedCmp30  +     0.41336953757691 * AcceptedCmp40
1248085   +          +     0.15346623431804 * AcceptedCmp50  +    -0.57037201584293 *
1248086   +        Complain0  +     0.77009921064044 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.26508589111781 * AcceptedCmp10 + -0.40912292690255
* AcceptedCmp20 + 0.75389762391096 * AcceptedCmp30 + 0.41336953757691 * AcceptedCmp40 +
0.15346623431804 * AcceptedCmp50 + -0.57037201584293 * Complain0 + 0.77009921064044 *
HigherEducationBinary0 ;
1248087   +   H1x1_1  = H1x1_1  +      1.0009305049246 * Education2n_Cycle
1248088   +          +     -0.4613305087931 * EducationBasic  +      0.3758596828746 *
1248089   +        EducationGraduation  +     1.25189584055994 * EducationMaster
1248090   +          +     0.26230568150721 * Marital_StatusDivorced
1248091   +          +     0.27563523967756 * Marital_StatusMarried
1248092   +          +     0.54464481618478 * Marital_StatusSingle
1248093   +          +    -0.59728882722473 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 1.0009305049246 * Education2n_Cycle + -0.4613305087931
* EducationBasic + 0.3758596828746 * EducationGraduation + 1.25189584055994 * EducationMaster
+ 0.26230568150721 * Marital_StatusDivorced + 0.27563523967756 * Marital_StatusMarried +
0.54464481618478 * Marital_StatusSingle + -0.59728882722473 * Marital_StatusTogether ;
1248094   +   H1x1_2  = H1x1_2  +    -0.67268966683928 * Education2n_Cycle
1248095   +          +     1.13837889947773 * EducationBasic  +     1.04211010190617 *
1248096   +        EducationGraduation  +     0.29772013614284 * EducationMaster
1248097   +          +    -0.06750661313108 * Marital_StatusDivorced
1248098   +          +     1.48628445854207 * Marital_StatusMarried
1248099   +          +    -0.52197797291165 * Marital_StatusSingle
1248100   +          +     0.26825188905773 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.67268966683928 * Education2n_Cycle +
1.13837889947773 * EducationBasic + 1.04211010190617 * EducationGraduation + 0.29772013614284
* EducationMaster + -0.06750661313108 * Marital_StatusDivorced + 1.48628445854207 *
Marital_StatusMarried + -0.52197797291165 * Marital_StatusSingle + 0.26825188905773 *
Marital_StatusTogether ;
1248101   +   H1x1_3  = H1x1_3  +     0.15872794306716 * Education2n_Cycle
1248102   +          +     -0.2621450786439 * EducationBasic  +      -0.141563901063 *
1248103   +        EducationGraduation  +     0.45665087056809 * EducationMaster
1248104   +          +     0.03219453957597 * Marital_StatusDivorced
1248105   +          +    -0.73835008216677 * Marital_StatusMarried
1248106   +          +     0.11212575818086 * Marital_StatusSingle
1248107   +          +    -0.43478073380625 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.15872794306716 * Education2n_Cycle +
-0.2621450786439 * EducationBasic + -0.141563901063 * EducationGraduation + 0.45665087056809 *
EducationMaster + 0.03219453957597 * Marital_StatusDivorced + -0.73835008216677 *
Marital_StatusMarried + 0.11212575818086 * Marital_StatusSingle + -0.43478073380625 *
Marital_StatusTogether ;
1248108   +   H1x1_4  = H1x1_4  +    -0.76014837933596 * Education2n_Cycle
1248109   +          +     0.81014096036717 * EducationBasic  +     0.41200440507889 *
1248110   +        EducationGraduation  +    -1.00228990059701 * EducationMaster
1248111   +          +    -0.95055539413405 * Marital_StatusDivorced
1248112   +          +    -1.65922419336067 * Marital_StatusMarried
1248113   +          +     0.78727538125107 * Marital_StatusSingle
1248114   +          +    -2.04820355088009 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.76014837933596 * Education2n_Cycle +
0.81014096036717 * EducationBasic + 0.41200440507889 * EducationGraduation + -1.00228990059701
* EducationMaster + -0.95055539413405 * Marital_StatusDivorced + -1.65922419336067 *
Marital_StatusMarried + 0.78727538125107 * Marital_StatusSingle + -2.04820355088009 *
Marital_StatusTogether ;
1248115   +   H1x1_5  = H1x1_5  +    -0.28767104655135 * Education2n_Cycle
1248116   +          +     0.23294407135706 * EducationBasic  +    -1.19680108607997 *
1248117   +        EducationGraduation  +     0.46710355433642 * EducationMaster
1248118   +          +     -4.1747415035634 * Marital_StatusDivorced
1248119   +          +     3.61194282451968 * Marital_StatusMarried
1248120   +          +     -3.2800495365546 * Marital_StatusSingle
1248121   +          +     4.03496183640024 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.28767104655135 * Education2n_Cycle +
0.23294407135706 * EducationBasic + -1.19680108607997 * EducationGraduation + 0.46710355433642
* EducationMaster + -4.1747415035634 * Marital_StatusDivorced + 3.61194282451968 *
Marital_StatusMarried + -3.2800495365546 * Marital_StatusSingle + 4.03496183640024 *
Marital_StatusTogether ;
1248122   +   H1x1_1  =    -2.93438581065873 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -2.93438581065873 + H1x1_1 ;
1248123   +   H1x1_2  =     0.62443347607569 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.62443347607569 + H1x1_2 ;
1248124   +   H1x1_3  =    -1.18755793198513 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -1.18755793198513 + H1x1_3 ;
1248125   +   H1x1_4  =    -3.21278432238831 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -3.21278432238831 + H1x1_4 ;
1248126   +   H1x1_5  =    -1.81875492018044 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.81875492018044 + H1x1_5 ;
1248127   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
1248128   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
1248129   +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
1248130   +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
1248131   +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
1248132   +   H1x1_4  = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
1248133   +   H1x1_5  = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_5 = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
1248134   +END;
MPRINT(EM_DIAGRAM):   END;
1248135   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1248136   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
1248137   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
1248138   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
1248139   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
1248140   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
1248141   +END;
MPRINT(EM_DIAGRAM):   END;
1248142   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1248143   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
1248144   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1248145   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1248146   +   H1x2_1  =    -0.54874145972704 * S_AcceptedCmpTotal
1248147   +          +    -1.96729802286214 * S_Age  +     0.48476252791598 * S_Frq
1248148   +          +    -0.22341551246937 * S_Income  +      0.5578096957255 *
1248149   +        S_Kidhome  +     0.02626802496223 * S_Mnt  +     0.45412544568839 *
1248150   +        S_MntFishProducts  +     1.01144979259918 * S_MntFruits
1248151   +          +     0.10684155186482 * S_MntGoldProds  +    -0.28941930881694 *
1248152   +        S_MntMeatProducts  +    -1.28044699620063 * S_MntSweetProducts
1248153   +          +     0.01381215802108 * S_MntWines  +    -0.10048261914477 *
1248154   +        S_MonthsAsCustomer  +     2.77259931235269 * S_NumCatalogPurchases
1248155   +          +     1.29727972396867 * S_NumDealsPurchases
1248156   +          +     -0.4796144286007 * S_NumDistPurchases
1248157   +          +     0.88365985808591 * S_NumStorePurchases
1248158   +          +     0.68522096892804 * S_NumWebPurchases
1248159   +          +     0.54931043107798 * S_NumWebVisitsMonth
1248160   +          +     0.54113568533807 * S_RFMstat  +    -1.25421061779043 *
1248161   +        S_RMntFrq  +     2.35704770144328 * S_Recency
1248162   +          +     0.71039073076168 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.54874145972704 * S_AcceptedCmpTotal + -1.96729802286214 *
S_Age + 0.48476252791598 * S_Frq + -0.22341551246937 * S_Income + 0.5578096957255 * S_Kidhome
+ 0.02626802496223 * S_Mnt + 0.45412544568839 * S_MntFishProducts + 1.01144979259918 *
S_MntFruits + 0.10684155186482 * S_MntGoldProds + -0.28941930881694 * S_MntMeatProducts +
-1.28044699620063 * S_MntSweetProducts + 0.01381215802108 * S_MntWines + -0.10048261914477 *
S_MonthsAsCustomer + 2.77259931235269 * S_NumCatalogPurchases + 1.29727972396867 *
S_NumDealsPurchases + -0.4796144286007 * S_NumDistPurchases + 0.88365985808591 *
S_NumStorePurchases + 0.68522096892804 * S_NumWebPurchases + 0.54931043107798 *
S_NumWebVisitsMonth + 0.54113568533807 * S_RFMstat + -1.25421061779043 * S_RMntFrq +
2.35704770144328 * S_Recency + 0.71039073076168 * S_Teenhome ;
1248163   +   H1x2_2  =    -0.87761654715429 * S_AcceptedCmpTotal
1248164   +          +     0.35157201280883 * S_Age  +    -0.52499399345006 * S_Frq
1248165   +          +    -0.18535763866989 * S_Income  +    -2.37902660986953 *
1248166   +        S_Kidhome  +     0.91895423997679 * S_Mnt  +     0.25609945459048 *
1248167   +        S_MntFishProducts  +    -0.81235755934506 * S_MntFruits
1248168   +          +     0.52120923975997 * S_MntGoldProds  +    -0.44372337811583 *
1248169   +        S_MntMeatProducts  +     0.44948834045992 * S_MntSweetProducts
1248170   +          +     -1.0932771504262 * S_MntWines  +     0.50602262267579 *
1248171   +        S_MonthsAsCustomer  +     1.56553203254999 * S_NumCatalogPurchases
1248172   +          +     0.26997834581422 * S_NumDealsPurchases
1248173   +          +      1.4974894627406 * S_NumDistPurchases
1248174   +          +     0.20577850505638 * S_NumStorePurchases
1248175   +          +     0.67578530037026 * S_NumWebPurchases
1248176   +          +     1.48893165613941 * S_NumWebVisitsMonth
1248177   +          +     0.13287732996796 * S_RFMstat  +     0.56918286957798 *
1248178   +        S_RMntFrq  +    -1.40718347701522 * S_Recency
1248179   +          +    -1.45355422903931 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.87761654715429 * S_AcceptedCmpTotal + 0.35157201280883 *
S_Age + -0.52499399345006 * S_Frq + -0.18535763866989 * S_Income + -2.37902660986953 *
S_Kidhome + 0.91895423997679 * S_Mnt + 0.25609945459048 * S_MntFishProducts +
-0.81235755934506 * S_MntFruits + 0.52120923975997 * S_MntGoldProds + -0.44372337811583 *
S_MntMeatProducts + 0.44948834045992 * S_MntSweetProducts + -1.0932771504262 * S_MntWines +
0.50602262267579 * S_MonthsAsCustomer + 1.56553203254999 * S_NumCatalogPurchases +
0.26997834581422 * S_NumDealsPurchases + 1.4974894627406 * S_NumDistPurchases +
0.20577850505638 * S_NumStorePurchases + 0.67578530037026 * S_NumWebPurchases +
1.48893165613941 * S_NumWebVisitsMonth + 0.13287732996796 * S_RFMstat + 0.56918286957798 *
S_RMntFrq + -1.40718347701522 * S_Recency + -1.45355422903931 * S_Teenhome ;
1248180   +   H1x2_3  =    -0.04229252175967 * S_AcceptedCmpTotal
1248181   +          +    -0.15725101559927 * S_Age  +      2.0258984610186 * S_Frq
1248182   +          +     0.68410444381038 * S_Income  +     0.69019962444573 *
1248183   +        S_Kidhome  +    -0.34233922017925 * S_Mnt  +     1.55352897772997 *
1248184   +        S_MntFishProducts  +    -0.76176236164027 * S_MntFruits
1248185   +          +    -1.16754517357962 * S_MntGoldProds  +     1.24350326644835 *
1248186   +        S_MntMeatProducts  +    -0.81282451423383 * S_MntSweetProducts
1248187   +          +      0.7172672745995 * S_MntWines  +     1.13255065624057 *
1248188   +        S_MonthsAsCustomer  +    -0.07781573365472 * S_NumCatalogPurchases
1248189   +          +    -0.75474919633886 * S_NumDealsPurchases
1248190   +          +     2.21872386475638 * S_NumDistPurchases
1248191   +          +    -0.36191460108989 * S_NumStorePurchases
1248192   +          +     0.03160010932412 * S_NumWebPurchases
1248193   +          +     0.00984650739909 * S_NumWebVisitsMonth
1248194   +          +     0.89037882953417 * S_RFMstat  +    -1.05136047825247 *
1248195   +        S_RMntFrq  +     0.97890474913417 * S_Recency
1248196   +          +     1.27657797009328 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.04229252175967 * S_AcceptedCmpTotal + -0.15725101559927 *
S_Age + 2.0258984610186 * S_Frq + 0.68410444381038 * S_Income + 0.69019962444573 * S_Kidhome +
-0.34233922017925 * S_Mnt + 1.55352897772997 * S_MntFishProducts + -0.76176236164027 *
S_MntFruits + -1.16754517357962 * S_MntGoldProds + 1.24350326644835 * S_MntMeatProducts +
-0.81282451423383 * S_MntSweetProducts + 0.7172672745995 * S_MntWines + 1.13255065624057 *
S_MonthsAsCustomer + -0.07781573365472 * S_NumCatalogPurchases + -0.75474919633886 *
S_NumDealsPurchases + 2.21872386475638 * S_NumDistPurchases + -0.36191460108989 *
S_NumStorePurchases + 0.03160010932412 * S_NumWebPurchases + 0.00984650739909 *
S_NumWebVisitsMonth + 0.89037882953417 * S_RFMstat + -1.05136047825247 * S_RMntFrq +
0.97890474913417 * S_Recency + 1.27657797009328 * S_Teenhome ;
1248197   +   H1x2_4  =    -1.09473986244398 * S_AcceptedCmpTotal
1248198   +          +     0.02292759635423 * S_Age  +     -1.7109267909752 * S_Frq
1248199   +          +    -1.43383040360225 * S_Income  +    -1.57934610129188 *
1248200   +        S_Kidhome  +      0.1051214240099 * S_Mnt  +     0.97936539268931 *
1248201   +        S_MntFishProducts  +    -0.59583313648658 * S_MntFruits
1248202   +          +     1.51886505753921 * S_MntGoldProds  +    -0.32475169924002 *
1248203   +        S_MntMeatProducts  +     2.41110603237098 * S_MntSweetProducts
1248204   +          +    -0.31356867592074 * S_MntWines  +    -0.46746195334785 *
1248205   +        S_MonthsAsCustomer  +      1.2175994058873 * S_NumCatalogPurchases
1248206   +          +    -1.12057357865269 * S_NumDealsPurchases
1248207   +          +    -0.70841760614521 * S_NumDistPurchases
1248208   +          +    -1.39174816270404 * S_NumStorePurchases
1248209   +          +    -1.62343249380806 * S_NumWebPurchases
1248210   +          +    -0.73097954508465 * S_NumWebVisitsMonth
1248211   +          +    -3.00146168388145 * S_RFMstat  +     0.52793752800199 *
1248212   +        S_RMntFrq  +    -1.13585643618227 * S_Recency
1248213   +          +    -0.84809590269062 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -1.09473986244398 * S_AcceptedCmpTotal + 0.02292759635423 *
S_Age + -1.7109267909752 * S_Frq + -1.43383040360225 * S_Income + -1.57934610129188 *
S_Kidhome + 0.1051214240099 * S_Mnt + 0.97936539268931 * S_MntFishProducts + -0.59583313648658
* S_MntFruits + 1.51886505753921 * S_MntGoldProds + -0.32475169924002 * S_MntMeatProducts +
2.41110603237098 * S_MntSweetProducts + -0.31356867592074 * S_MntWines + -0.46746195334785 *
S_MonthsAsCustomer + 1.2175994058873 * S_NumCatalogPurchases + -1.12057357865269 *
S_NumDealsPurchases + -0.70841760614521 * S_NumDistPurchases + -1.39174816270404 *
S_NumStorePurchases + -1.62343249380806 * S_NumWebPurchases + -0.73097954508465 *
S_NumWebVisitsMonth + -3.00146168388145 * S_RFMstat + 0.52793752800199 * S_RMntFrq +
-1.13585643618227 * S_Recency + -0.84809590269062 * S_Teenhome ;
1248214   +   H1x2_5  =    -0.76941479017685 * S_AcceptedCmpTotal
1248215   +          +    -0.80197055800099 * S_Age  +    -0.33523741625948 * S_Frq
1248216   +          +     0.67386262421365 * S_Income  +     1.52003240833706 *
1248217   +        S_Kidhome  +     0.14459028288037 * S_Mnt  +     0.39874528164598 *
1248218   +        S_MntFishProducts  +    -1.59397070226712 * S_MntFruits
1248219   +          +     0.78518859165099 * S_MntGoldProds  +     0.48003679676647 *
1248220   +        S_MntMeatProducts  +    -0.17657709565986 * S_MntSweetProducts
1248221   +          +    -0.79155200251992 * S_MntWines  +     0.27335896970236 *
1248222   +        S_MonthsAsCustomer  +     1.70502645622852 * S_NumCatalogPurchases
1248223   +          +     0.66880481485557 * S_NumDealsPurchases
1248224   +          +     0.69540174544859 * S_NumDistPurchases
1248225   +          +     1.68246546921736 * S_NumStorePurchases
1248226   +          +     1.85958176898295 * S_NumWebPurchases
1248227   +          +    -0.23815810306565 * S_NumWebVisitsMonth
1248228   +          +    -1.93291997626659 * S_RFMstat  +     0.44532152898673 *
1248229   +        S_RMntFrq  +    -2.12360922264332 * S_Recency
1248230   +          +     0.99915338747458 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.76941479017685 * S_AcceptedCmpTotal + -0.80197055800099 *
S_Age + -0.33523741625948 * S_Frq + 0.67386262421365 * S_Income + 1.52003240833706 * S_Kidhome
+ 0.14459028288037 * S_Mnt + 0.39874528164598 * S_MntFishProducts + -1.59397070226712 *
S_MntFruits + 0.78518859165099 * S_MntGoldProds + 0.48003679676647 * S_MntMeatProducts +
-0.17657709565986 * S_MntSweetProducts + -0.79155200251992 * S_MntWines + 0.27335896970236 *
S_MonthsAsCustomer + 1.70502645622852 * S_NumCatalogPurchases + 0.66880481485557 *
S_NumDealsPurchases + 0.69540174544859 * S_NumDistPurchases + 1.68246546921736 *
S_NumStorePurchases + 1.85958176898295 * S_NumWebPurchases + -0.23815810306565 *
S_NumWebVisitsMonth + -1.93291997626659 * S_RFMstat + 0.44532152898673 * S_RMntFrq +
-2.12360922264332 * S_Recency + 0.99915338747458 * S_Teenhome ;
1248231   +   H1x2_1  = H1x2_1  +    -0.34162163066653 * AcceptedCmp10
1248232   +          +    -1.63962075993761 * AcceptedCmp20  +    -0.15621537766672 *
1248233   +        AcceptedCmp30  +      -0.732967936338 * AcceptedCmp40
1248234   +          +    -0.89574320220152 * AcceptedCmp50  +    -1.65404732277767 *
1248235   +        Complain0  +     0.39810242344925 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.34162163066653 * AcceptedCmp10 + -1.63962075993761
* AcceptedCmp20 + -0.15621537766672 * AcceptedCmp30 + -0.732967936338 * AcceptedCmp40 +
-0.89574320220152 * AcceptedCmp50 + -1.65404732277767 * Complain0 + 0.39810242344925 *
HigherEducationBinary0 ;
1248236   +   H1x2_2  = H1x2_2  +     1.20749893379181 * AcceptedCmp10
1248237   +          +     0.74035850461127 * AcceptedCmp20  +    -0.57598323268755 *
1248238   +        AcceptedCmp30  +      0.2507562576407 * AcceptedCmp40
1248239   +          +    -1.65954337863227 * AcceptedCmp50  +    -0.36715622527216 *
1248240   +        Complain0  +    -0.80760857638242 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 1.20749893379181 * AcceptedCmp10 + 0.74035850461127 *
AcceptedCmp20 + -0.57598323268755 * AcceptedCmp30 + 0.2507562576407 * AcceptedCmp40 +
-1.65954337863227 * AcceptedCmp50 + -0.36715622527216 * Complain0 + -0.80760857638242 *
HigherEducationBinary0 ;
1248241   +   H1x2_3  = H1x2_3  +      0.1125551214626 * AcceptedCmp10
1248242   +          +      0.9256532360503 * AcceptedCmp20  +    -0.66171851987996 *
1248243   +        AcceptedCmp30  +     1.38941609616943 * AcceptedCmp40
1248244   +          +    -0.12600029950267 * AcceptedCmp50  +     1.77872255302987 *
1248245   +        Complain0  +     0.92261637863861 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.1125551214626 * AcceptedCmp10 + 0.9256532360503 *
AcceptedCmp20 + -0.66171851987996 * AcceptedCmp30 + 1.38941609616943 * AcceptedCmp40 +
-0.12600029950267 * AcceptedCmp50 + 1.77872255302987 * Complain0 + 0.92261637863861 *
HigherEducationBinary0 ;
1248246   +   H1x2_4  = H1x2_4  +     1.15541901435911 * AcceptedCmp10
1248247   +          +     0.29649422640031 * AcceptedCmp20  +     0.39809722545141 *
1248248   +        AcceptedCmp30  +    -0.33350815656019 * AcceptedCmp40
1248249   +          +    -0.67932033799188 * AcceptedCmp50  +     0.37378775543802 *
1248250   +        Complain0  +    -0.42273281355142 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 1.15541901435911 * AcceptedCmp10 + 0.29649422640031 *
AcceptedCmp20 + 0.39809722545141 * AcceptedCmp30 + -0.33350815656019 * AcceptedCmp40 +
-0.67932033799188 * AcceptedCmp50 + 0.37378775543802 * Complain0 + -0.42273281355142 *
HigherEducationBinary0 ;
1248251   +   H1x2_5  = H1x2_5  +     0.42070748083274 * AcceptedCmp10
1248252   +          +     0.35338291913326 * AcceptedCmp20  +    -0.47257467834599 *
1248253   +        AcceptedCmp30  +     1.53611423156071 * AcceptedCmp40
1248254   +          +    -1.33360798584085 * AcceptedCmp50  +    -1.44352278404761 *
1248255   +        Complain0  +    -0.33674466205114 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.42070748083274 * AcceptedCmp10 + 0.35338291913326 *
AcceptedCmp20 + -0.47257467834599 * AcceptedCmp30 + 1.53611423156071 * AcceptedCmp40 +
-1.33360798584085 * AcceptedCmp50 + -1.44352278404761 * Complain0 + -0.33674466205114 *
HigherEducationBinary0 ;
1248256   +   H1x2_1  = H1x2_1  +     0.60843711339598 * Education2n_Cycle
1248257   +          +     -0.2612316425128 * EducationBasic  +     0.53215140077355 *
1248258   +        EducationGraduation  +     0.32623787352656 * EducationMaster
1248259   +          +      0.2766977476799 * Marital_StatusDivorced
1248260   +          +     0.99585126449473 * Marital_StatusMarried
1248261   +          +    -0.71244490682808 * Marital_StatusSingle
1248262   +          +     0.05234471555621 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 0.60843711339598 * Education2n_Cycle +
-0.2612316425128 * EducationBasic + 0.53215140077355 * EducationGraduation + 0.32623787352656
* EducationMaster + 0.2766977476799 * Marital_StatusDivorced + 0.99585126449473 *
Marital_StatusMarried + -0.71244490682808 * Marital_StatusSingle + 0.05234471555621 *
Marital_StatusTogether ;
1248263   +   H1x2_2  = H1x2_2  +    -1.37916273373311 * Education2n_Cycle
1248264   +          +     0.16982792088728 * EducationBasic  +     0.00814910507718 *
1248265   +        EducationGraduation  +     0.47239961039918 * EducationMaster
1248266   +          +     0.04724779113048 * Marital_StatusDivorced
1248267   +          +    -0.80186231440666 * Marital_StatusMarried
1248268   +          +    -0.02226793584171 * Marital_StatusSingle
1248269   +          +     1.15827064756189 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -1.37916273373311 * Education2n_Cycle +
0.16982792088728 * EducationBasic + 0.00814910507718 * EducationGraduation + 0.47239961039918
* EducationMaster + 0.04724779113048 * Marital_StatusDivorced + -0.80186231440666 *
Marital_StatusMarried + -0.02226793584171 * Marital_StatusSingle + 1.15827064756189 *
Marital_StatusTogether ;
1248270   +   H1x2_3  = H1x2_3  +    -0.24428291102209 * Education2n_Cycle
1248271   +          +    -0.11697967041189 * EducationBasic  +    -1.11774839931933 *
1248272   +        EducationGraduation  +     0.41284540548646 * EducationMaster
1248273   +          +     0.28206835683721 * Marital_StatusDivorced
1248274   +          +     0.46500886756532 * Marital_StatusMarried
1248275   +          +     0.35327545255503 * Marital_StatusSingle
1248276   +          +     0.58394650567036 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -0.24428291102209 * Education2n_Cycle +
-0.11697967041189 * EducationBasic + -1.11774839931933 * EducationGraduation +
0.41284540548646 * EducationMaster + 0.28206835683721 * Marital_StatusDivorced +
0.46500886756532 * Marital_StatusMarried + 0.35327545255503 * Marital_StatusSingle +
0.58394650567036 * Marital_StatusTogether ;
1248277   +   H1x2_4  = H1x2_4  +    -0.41547462236128 * Education2n_Cycle
1248278   +          +     1.13629818238321 * EducationBasic  +     0.25034344652006 *
1248279   +        EducationGraduation  +    -0.29812527209479 * EducationMaster
1248280   +          +     1.22291788006392 * Marital_StatusDivorced
1248281   +          +    -2.27040720272432 * Marital_StatusMarried
1248282   +          +     1.13606780043773 * Marital_StatusSingle
1248283   +          +    -1.07606142589696 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + -0.41547462236128 * Education2n_Cycle +
1.13629818238321 * EducationBasic + 0.25034344652006 * EducationGraduation + -0.29812527209479
* EducationMaster + 1.22291788006392 * Marital_StatusDivorced + -2.27040720272432 *
Marital_StatusMarried + 1.13606780043773 * Marital_StatusSingle + -1.07606142589696 *
Marital_StatusTogether ;
1248284   +   H1x2_5  = H1x2_5  +     1.12913918872999 * Education2n_Cycle
1248285   +          +     1.23833680718071 * EducationBasic  +     1.02294394812757 *
1248286   +        EducationGraduation  +      0.4909097120378 * EducationMaster
1248287   +          +     -0.3999800759199 * Marital_StatusDivorced
1248288   +          +    -0.40978271635345 * Marital_StatusMarried
1248289   +          +    -0.55524279444227 * Marital_StatusSingle
1248290   +          +    -0.84395633194091 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 1.12913918872999 * Education2n_Cycle +
1.23833680718071 * EducationBasic + 1.02294394812757 * EducationGraduation + 0.4909097120378 *
EducationMaster + -0.3999800759199 * Marital_StatusDivorced + -0.40978271635345 *
Marital_StatusMarried + -0.55524279444227 * Marital_StatusSingle + -0.84395633194091 *
Marital_StatusTogether ;
1248291   +   H1x2_1  =    -0.65400470626386 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.65400470626386 + H1x2_1 ;
1248292   +   H1x2_2  =    -0.07530883721979 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.07530883721979 + H1x2_2 ;
1248293   +   H1x2_3  =      -0.290996947172 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.290996947172 + H1x2_3 ;
1248294   +   H1x2_4  =    -0.89461283774487 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.89461283774487 + H1x2_4 ;
1248295   +   H1x2_5  =    -0.37171981998051 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.37171981998051 + H1x2_5 ;
1248296   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
1248297   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
1248298   +   H1x2_1  = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
1248299   +   H1x2_2  = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_2 = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
1248300   +   H1x2_3  = 1.0 / (1.0 + EXP(MIN( - H1x2_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_3 = 1.0 / (1.0 + EXP(MIN( - H1x2_3 , _EXP_BAR)));
1248301   +   H1x2_4  = 1.0 / (1.0 + EXP(MIN( - H1x2_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_4 = 1.0 / (1.0 + EXP(MIN( - H1x2_4 , _EXP_BAR)));
1248302   +   H1x2_5  = 1.0 / (1.0 + EXP(MIN( - H1x2_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.0 / (1.0 + EXP(MIN( - H1x2_5 , _EXP_BAR)));
1248303   +END;
MPRINT(EM_DIAGRAM):   END;
1248304   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1248305   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
1248306   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
1248307   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
1248308   +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
1248309   +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
1248310   +END;
MPRINT(EM_DIAGRAM):   END;
1248311   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1248312   +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
1248313   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1248314   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1248315   +   H1x3_1  =     0.02034446400728 * S_AcceptedCmpTotal
1248316   +          +    -0.93561297099295 * S_Age  +     0.49066734733476 * S_Frq
1248317   +          +    -1.34856771280634 * S_Income  +     1.35662384709137 *
1248318   +        S_Kidhome  +    -0.02206222240953 * S_Mnt  +     0.42162640035912 *
1248319   +        S_MntFishProducts  +      1.4724867503467 * S_MntFruits
1248320   +          +    -0.51460401528507 * S_MntGoldProds  +       0.958125893994 *
1248321   +        S_MntMeatProducts  +     0.57113865733502 * S_MntSweetProducts
1248322   +          +    -1.00744287646761 * S_MntWines  +     0.17043433169038 *
1248323   +        S_MonthsAsCustomer  +     1.69277828985001 * S_NumCatalogPurchases
1248324   +          +     0.15783958682465 * S_NumDealsPurchases
1248325   +          +     1.52124708558457 * S_NumDistPurchases
1248326   +          +     -1.3804418313581 * S_NumStorePurchases
1248327   +          +    -1.29570111649272 * S_NumWebPurchases
1248328   +          +    -0.64280706056547 * S_NumWebVisitsMonth
1248329   +          +    -1.20774016698707 * S_RFMstat  +    -0.44623204790714 *
1248330   +        S_RMntFrq  +    -0.06726660535826 * S_Recency
1248331   +          +    -0.73266660753354 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.02034446400728 * S_AcceptedCmpTotal + -0.93561297099295 *
S_Age + 0.49066734733476 * S_Frq + -1.34856771280634 * S_Income + 1.35662384709137 * S_Kidhome
+ -0.02206222240953 * S_Mnt + 0.42162640035912 * S_MntFishProducts + 1.4724867503467 *
S_MntFruits + -0.51460401528507 * S_MntGoldProds + 0.958125893994 * S_MntMeatProducts +
0.57113865733502 * S_MntSweetProducts + -1.00744287646761 * S_MntWines + 0.17043433169038 *
S_MonthsAsCustomer + 1.69277828985001 * S_NumCatalogPurchases + 0.15783958682465 *
S_NumDealsPurchases + 1.52124708558457 * S_NumDistPurchases + -1.3804418313581 *
S_NumStorePurchases + -1.29570111649272 * S_NumWebPurchases + -0.64280706056547 *
S_NumWebVisitsMonth + -1.20774016698707 * S_RFMstat + -0.44623204790714 * S_RMntFrq +
-0.06726660535826 * S_Recency + -0.73266660753354 * S_Teenhome ;
1248332   +   H1x3_2  =     0.05576327437156 * S_AcceptedCmpTotal
1248333   +          +    -0.09670418926268 * S_Age  +     0.70499031549942 * S_Frq
1248334   +          +     0.26184897891893 * S_Income  +    -1.14390972062773 *
1248335   +        S_Kidhome  +     -0.0692794596346 * S_Mnt  +     0.38520399298269 *
1248336   +        S_MntFishProducts  +     0.23416686193508 * S_MntFruits
1248337   +          +     0.54961704765881 * S_MntGoldProds  +     1.00350256670809 *
1248338   +        S_MntMeatProducts  +    -0.03432942277526 * S_MntSweetProducts
1248339   +          +    -0.79877133727616 * S_MntWines  +    -2.29194848128805 *
1248340   +        S_MonthsAsCustomer  +    -0.38950356087292 * S_NumCatalogPurchases
1248341   +          +     0.12337111358286 * S_NumDealsPurchases
1248342   +          +     -2.3848926094027 * S_NumDistPurchases
1248343   +          +    -1.20666646996433 * S_NumStorePurchases
1248344   +          +     0.89549302881365 * S_NumWebPurchases
1248345   +          +     0.95359042569947 * S_NumWebVisitsMonth
1248346   +          +    -0.41458051201542 * S_RFMstat  +    -2.05830783255089 *
1248347   +        S_RMntFrq  +     0.17682790616815 * S_Recency
1248348   +          +     0.20329199183726 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_2 = 0.05576327437156 * S_AcceptedCmpTotal + -0.09670418926268 *
S_Age + 0.70499031549942 * S_Frq + 0.26184897891893 * S_Income + -1.14390972062773 * S_Kidhome
+ -0.0692794596346 * S_Mnt + 0.38520399298269 * S_MntFishProducts + 0.23416686193508 *
S_MntFruits + 0.54961704765881 * S_MntGoldProds + 1.00350256670809 * S_MntMeatProducts +
-0.03432942277526 * S_MntSweetProducts + -0.79877133727616 * S_MntWines + -2.29194848128805 *
S_MonthsAsCustomer + -0.38950356087292 * S_NumCatalogPurchases + 0.12337111358286 *
S_NumDealsPurchases + -2.3848926094027 * S_NumDistPurchases + -1.20666646996433 *
S_NumStorePurchases + 0.89549302881365 * S_NumWebPurchases + 0.95359042569947 *
S_NumWebVisitsMonth + -0.41458051201542 * S_RFMstat + -2.05830783255089 * S_RMntFrq +
0.17682790616815 * S_Recency + 0.20329199183726 * S_Teenhome ;
1248349   +   H1x3_3  =     0.56145399373835 * S_AcceptedCmpTotal
1248350   +          +     -0.0607922137813 * S_Age  +    -0.72333515266618 * S_Frq
1248351   +          +     1.00319702869592 * S_Income  +    -0.98265416539823 *
1248352   +        S_Kidhome  +      0.0683081611036 * S_Mnt  +     0.53609800817402 *
1248353   +        S_MntFishProducts  +     2.04360526983241 * S_MntFruits
1248354   +          +    -0.71698041504305 * S_MntGoldProds  +     -0.0344399486348 *
1248355   +        S_MntMeatProducts  +     0.33812230317499 * S_MntSweetProducts
1248356   +          +     1.06616289880664 * S_MntWines  +     0.61567483782422 *
1248357   +        S_MonthsAsCustomer  +      0.1468959674594 * S_NumCatalogPurchases
1248358   +          +    -1.05383642674948 * S_NumDealsPurchases
1248359   +          +     1.71861984509369 * S_NumDistPurchases
1248360   +          +     1.47595181536047 * S_NumStorePurchases
1248361   +          +    -1.64165005491178 * S_NumWebPurchases
1248362   +          +    -2.35130004742828 * S_NumWebVisitsMonth
1248363   +          +      1.0733561716985 * S_RFMstat  +     1.11931629246452 *
1248364   +        S_RMntFrq  +    -1.27356615687944 * S_Recency
1248365   +          +     0.38980214209917 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_3 = 0.56145399373835 * S_AcceptedCmpTotal + -0.0607922137813 *
S_Age + -0.72333515266618 * S_Frq + 1.00319702869592 * S_Income + -0.98265416539823 *
S_Kidhome + 0.0683081611036 * S_Mnt + 0.53609800817402 * S_MntFishProducts + 2.04360526983241
* S_MntFruits + -0.71698041504305 * S_MntGoldProds + -0.0344399486348 * S_MntMeatProducts +
0.33812230317499 * S_MntSweetProducts + 1.06616289880664 * S_MntWines + 0.61567483782422 *
S_MonthsAsCustomer + 0.1468959674594 * S_NumCatalogPurchases + -1.05383642674948 *
S_NumDealsPurchases + 1.71861984509369 * S_NumDistPurchases + 1.47595181536047 *
S_NumStorePurchases + -1.64165005491178 * S_NumWebPurchases + -2.35130004742828 *
S_NumWebVisitsMonth + 1.0733561716985 * S_RFMstat + 1.11931629246452 * S_RMntFrq +
-1.27356615687944 * S_Recency + 0.38980214209917 * S_Teenhome ;
1248366   +   H1x3_4  =    -1.87202109167616 * S_AcceptedCmpTotal
1248367   +          +     0.55536174675106 * S_Age  +     1.30133566520787 * S_Frq
1248368   +          +     1.18618986686496 * S_Income  +      0.7889264950743 *
1248369   +        S_Kidhome  +     0.52573653297629 * S_Mnt  +    -0.46151505202831 *
1248370   +        S_MntFishProducts  +     0.87196199131075 * S_MntFruits
1248371   +          +    -1.42881514301194 * S_MntGoldProds  +     0.75395204572369 *
1248372   +        S_MntMeatProducts  +    -1.86940235435459 * S_MntSweetProducts
1248373   +          +    -0.16531589560603 * S_MntWines  +     0.80429494629006 *
1248374   +        S_MonthsAsCustomer  +     2.07324775707635 * S_NumCatalogPurchases
1248375   +          +     0.13347794794222 * S_NumDealsPurchases
1248376   +          +     0.30533639886561 * S_NumDistPurchases
1248377   +          +     1.63892955540526 * S_NumStorePurchases
1248378   +          +     0.43734586516446 * S_NumWebPurchases
1248379   +          +     1.79260779802864 * S_NumWebVisitsMonth
1248380   +          +     2.03019700767877 * S_RFMstat  +    -0.36302320348133 *
1248381   +        S_RMntFrq  +    -0.32271271703746 * S_Recency
1248382   +          +     1.03191552613762 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_4 = -1.87202109167616 * S_AcceptedCmpTotal + 0.55536174675106 *
S_Age + 1.30133566520787 * S_Frq + 1.18618986686496 * S_Income + 0.7889264950743 * S_Kidhome +
0.52573653297629 * S_Mnt + -0.46151505202831 * S_MntFishProducts + 0.87196199131075 *
S_MntFruits + -1.42881514301194 * S_MntGoldProds + 0.75395204572369 * S_MntMeatProducts +
-1.86940235435459 * S_MntSweetProducts + -0.16531589560603 * S_MntWines + 0.80429494629006 *
S_MonthsAsCustomer + 2.07324775707635 * S_NumCatalogPurchases + 0.13347794794222 *
S_NumDealsPurchases + 0.30533639886561 * S_NumDistPurchases + 1.63892955540526 *
S_NumStorePurchases + 0.43734586516446 * S_NumWebPurchases + 1.79260779802864 *
S_NumWebVisitsMonth + 2.03019700767877 * S_RFMstat + -0.36302320348133 * S_RMntFrq +
-0.32271271703746 * S_Recency + 1.03191552613762 * S_Teenhome ;
1248383   +   H1x3_5  =     0.20857223520727 * S_AcceptedCmpTotal
1248384   +          +    -0.20096771162452 * S_Age  +     0.34962532991985 * S_Frq
1248385   +          +     1.37548654455856 * S_Income  +     1.56421861140197 *
1248386   +        S_Kidhome  +    -1.14534324749928 * S_Mnt  +     1.19456381083083 *
1248387   +        S_MntFishProducts  +     0.66027175430916 * S_MntFruits
1248388   +          +    -0.93198171949009 * S_MntGoldProds  +    -0.72464830253528 *
1248389   +        S_MntMeatProducts  +     1.02487566206095 * S_MntSweetProducts
1248390   +          +     1.05601020947303 * S_MntWines  +     2.31580499448269 *
1248391   +        S_MonthsAsCustomer  +    -0.72019418879499 * S_NumCatalogPurchases
1248392   +          +     1.64209094349557 * S_NumDealsPurchases
1248393   +          +    -0.38876870460627 * S_NumDistPurchases
1248394   +          +    -0.48559309584971 * S_NumStorePurchases
1248395   +          +     0.21254626353218 * S_NumWebPurchases
1248396   +          +    -0.71484448532542 * S_NumWebVisitsMonth
1248397   +          +     0.02349535084994 * S_RFMstat  +    -0.16176132186427 *
1248398   +        S_RMntFrq  +     0.44893411588775 * S_Recency
1248399   +          +      0.2652212690846 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_5 = 0.20857223520727 * S_AcceptedCmpTotal + -0.20096771162452 *
S_Age + 0.34962532991985 * S_Frq + 1.37548654455856 * S_Income + 1.56421861140197 * S_Kidhome
+ -1.14534324749928 * S_Mnt + 1.19456381083083 * S_MntFishProducts + 0.66027175430916 *
S_MntFruits + -0.93198171949009 * S_MntGoldProds + -0.72464830253528 * S_MntMeatProducts +
1.02487566206095 * S_MntSweetProducts + 1.05601020947303 * S_MntWines + 2.31580499448269 *
S_MonthsAsCustomer + -0.72019418879499 * S_NumCatalogPurchases + 1.64209094349557 *
S_NumDealsPurchases + -0.38876870460627 * S_NumDistPurchases + -0.48559309584971 *
S_NumStorePurchases + 0.21254626353218 * S_NumWebPurchases + -0.71484448532542 *
S_NumWebVisitsMonth + 0.02349535084994 * S_RFMstat + -0.16176132186427 * S_RMntFrq +
0.44893411588775 * S_Recency + 0.2652212690846 * S_Teenhome ;
1248400   +   H1x3_1  = H1x3_1  +    -1.35842958516566 * AcceptedCmp10
1248401   +          +     0.34594436457216 * AcceptedCmp20  +      0.3640777110552 *
1248402   +        AcceptedCmp30  +    -2.65231594293215 * AcceptedCmp40
1248403   +          +    -0.32594395344101 * AcceptedCmp50  +    -0.20731631969028 *
1248404   +        Complain0  +    -0.37562812451995 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + -1.35842958516566 * AcceptedCmp10 + 0.34594436457216 *
AcceptedCmp20 + 0.3640777110552 * AcceptedCmp30 + -2.65231594293215 * AcceptedCmp40 +
-0.32594395344101 * AcceptedCmp50 + -0.20731631969028 * Complain0 + -0.37562812451995 *
HigherEducationBinary0 ;
1248405   +   H1x3_2  = H1x3_2  +    -0.29516697471591 * AcceptedCmp10
1248406   +          +     0.12160626453607 * AcceptedCmp20  +    -0.19673071668839 *
1248407   +        AcceptedCmp30  +      0.9679629348873 * AcceptedCmp40
1248408   +          +     0.27607865991675 * AcceptedCmp50  +     0.34210605810889 *
1248409   +        Complain0  +    -0.91955372970801 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + -0.29516697471591 * AcceptedCmp10 + 0.12160626453607 *
AcceptedCmp20 + -0.19673071668839 * AcceptedCmp30 + 0.9679629348873 * AcceptedCmp40 +
0.27607865991675 * AcceptedCmp50 + 0.34210605810889 * Complain0 + -0.91955372970801 *
HigherEducationBinary0 ;
1248410   +   H1x3_3  = H1x3_3  +    -0.64048354977116 * AcceptedCmp10
1248411   +          +     0.71632378156708 * AcceptedCmp20  +     1.49620826236085 *
1248412   +        AcceptedCmp30  +    -0.41927727863342 * AcceptedCmp40
1248413   +          +    -0.74518887123144 * AcceptedCmp50  +     -0.5653895859863 *
1248414   +        Complain0  +     0.49026807979832 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 + -0.64048354977116 * AcceptedCmp10 + 0.71632378156708 *
AcceptedCmp20 + 1.49620826236085 * AcceptedCmp30 + -0.41927727863342 * AcceptedCmp40 +
-0.74518887123144 * AcceptedCmp50 + -0.5653895859863 * Complain0 + 0.49026807979832 *
HigherEducationBinary0 ;
1248415   +   H1x3_4  = H1x3_4  +    -0.39456977652419 * AcceptedCmp10
1248416   +          +    -0.35607374401334 * AcceptedCmp20  +     0.25403314478809 *
1248417   +        AcceptedCmp30  +    -1.26365534513909 * AcceptedCmp40
1248418   +          +    -0.93574993035227 * AcceptedCmp50  +    -0.01475423275475 *
1248419   +        Complain0  +     0.99152563511102 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 + -0.39456977652419 * AcceptedCmp10 + -0.35607374401334
* AcceptedCmp20 + 0.25403314478809 * AcceptedCmp30 + -1.26365534513909 * AcceptedCmp40 +
-0.93574993035227 * AcceptedCmp50 + -0.01475423275475 * Complain0 + 0.99152563511102 *
HigherEducationBinary0 ;
1248420   +   H1x3_5  = H1x3_5  +    -1.26373480748972 * AcceptedCmp10
1248421   +          +     0.14485593883591 * AcceptedCmp20  +     -0.0764980824216 *
1248422   +        AcceptedCmp30  +    -1.03297576023738 * AcceptedCmp40
1248423   +          +    -1.10199278454673 * AcceptedCmp50  +     0.92040879426753 *
1248424   +        Complain0  +     0.19845951543481 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 + -1.26373480748972 * AcceptedCmp10 + 0.14485593883591 *
AcceptedCmp20 + -0.0764980824216 * AcceptedCmp30 + -1.03297576023738 * AcceptedCmp40 +
-1.10199278454673 * AcceptedCmp50 + 0.92040879426753 * Complain0 + 0.19845951543481 *
HigherEducationBinary0 ;
1248425   +   H1x3_1  = H1x3_1  +     0.21888802927361 * Education2n_Cycle
1248426   +          +    -1.88729117459232 * EducationBasic  +    -0.23163049582765 *
1248427   +        EducationGraduation  +     0.46887304015863 * EducationMaster
1248428   +          +     1.33953173091973 * Marital_StatusDivorced
1248429   +          +    -0.26253208073262 * Marital_StatusMarried
1248430   +          +    -0.00960552682431 * Marital_StatusSingle
1248431   +          +     1.02851334153667 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + 0.21888802927361 * Education2n_Cycle +
-1.88729117459232 * EducationBasic + -0.23163049582765 * EducationGraduation +
0.46887304015863 * EducationMaster + 1.33953173091973 * Marital_StatusDivorced +
-0.26253208073262 * Marital_StatusMarried + -0.00960552682431 * Marital_StatusSingle +
1.02851334153667 * Marital_StatusTogether ;
1248432   +   H1x3_2  = H1x3_2  +     2.36701652448958 * Education2n_Cycle
1248433   +          +     0.64894060487321 * EducationBasic  +     -1.2851019467738 *
1248434   +        EducationGraduation  +     1.05325310300372 * EducationMaster
1248435   +          +     1.43150850334311 * Marital_StatusDivorced
1248436   +          +    -0.69239127844934 * Marital_StatusMarried
1248437   +          +     2.08477562471559 * Marital_StatusSingle
1248438   +          +    -1.55945531486837 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + 2.36701652448958 * Education2n_Cycle +
0.64894060487321 * EducationBasic + -1.2851019467738 * EducationGraduation + 1.05325310300372
* EducationMaster + 1.43150850334311 * Marital_StatusDivorced + -0.69239127844934 *
Marital_StatusMarried + 2.08477562471559 * Marital_StatusSingle + -1.55945531486837 *
Marital_StatusTogether ;
1248439   +   H1x3_3  = H1x3_3  +    -0.07588279976612 * Education2n_Cycle
1248440   +          +    -1.60804492005984 * EducationBasic  +     0.15348594453976 *
1248441   +        EducationGraduation  +     1.80436924796338 * EducationMaster
1248442   +          +     1.08387556786168 * Marital_StatusDivorced
1248443   +          +      1.0283506000217 * Marital_StatusMarried
1248444   +          +    -0.87069431107983 * Marital_StatusSingle
1248445   +          +    -0.04455113729262 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 + -0.07588279976612 * Education2n_Cycle +
-1.60804492005984 * EducationBasic + 0.15348594453976 * EducationGraduation + 1.80436924796338
* EducationMaster + 1.08387556786168 * Marital_StatusDivorced + 1.0283506000217 *
Marital_StatusMarried + -0.87069431107983 * Marital_StatusSingle + -0.04455113729262 *
Marital_StatusTogether ;
1248446   +   H1x3_4  = H1x3_4  +    -0.24072826180906 * Education2n_Cycle
1248447   +          +     0.56372511932643 * EducationBasic  +    -1.72914870390939 *
1248448   +        EducationGraduation  +    -1.53859265107051 * EducationMaster
1248449   +          +      -1.347780188307 * Marital_StatusDivorced
1248450   +          +    -0.53911983240372 * Marital_StatusMarried
1248451   +          +     0.22083074159185 * Marital_StatusSingle
1248452   +          +     0.46023807391468 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 + -0.24072826180906 * Education2n_Cycle +
0.56372511932643 * EducationBasic + -1.72914870390939 * EducationGraduation +
-1.53859265107051 * EducationMaster + -1.347780188307 * Marital_StatusDivorced +
-0.53911983240372 * Marital_StatusMarried + 0.22083074159185 * Marital_StatusSingle +
0.46023807391468 * Marital_StatusTogether ;
1248453   +   H1x3_5  = H1x3_5  +    -0.72917301249658 * Education2n_Cycle
1248454   +          +     0.78780526232794 * EducationBasic  +     0.22244378874589 *
1248455   +        EducationGraduation  +      1.6087631135774 * EducationMaster
1248456   +          +     1.46582538311384 * Marital_StatusDivorced
1248457   +          +     0.05256161016002 * Marital_StatusMarried
1248458   +          +    -1.21402967626877 * Marital_StatusSingle
1248459   +          +     0.88645860928281 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 + -0.72917301249658 * Education2n_Cycle +
0.78780526232794 * EducationBasic + 0.22244378874589 * EducationGraduation + 1.6087631135774 *
EducationMaster + 1.46582538311384 * Marital_StatusDivorced + 0.05256161016002 *
Marital_StatusMarried + -1.21402967626877 * Marital_StatusSingle + 0.88645860928281 *
Marital_StatusTogether ;
1248460   +   H1x3_1  =     0.88456831875399 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.88456831875399 + H1x3_1 ;
1248461   +   H1x3_2  =    -0.97118571845853 + H1x3_2 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = -0.97118571845853 + H1x3_2 ;
1248462   +   H1x3_3  =    -0.79264210370105 + H1x3_3 ;
MPRINT(EM_DIAGRAM):   H1x3_3 = -0.79264210370105 + H1x3_3 ;
1248463   +   H1x3_4  =     0.02838267530757 + H1x3_4 ;
MPRINT(EM_DIAGRAM):   H1x3_4 = 0.02838267530757 + H1x3_4 ;
1248464   +   H1x3_5  =      0.6575544901332 + H1x3_5 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = 0.6575544901332 + H1x3_5 ;
1248465   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
1248466   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
1248467   +   H1x3_1  = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_1 = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
1248468   +   H1x3_2  = 1.0 / (1.0 + EXP(MIN( - H1x3_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_2 = 1.0 / (1.0 + EXP(MIN( - H1x3_2 , _EXP_BAR)));
1248469   +   H1x3_3  = 1.0 / (1.0 + EXP(MIN( - H1x3_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_3 = 1.0 / (1.0 + EXP(MIN( - H1x3_3 , _EXP_BAR)));
1248470   +   H1x3_4  = 1.0 / (1.0 + EXP(MIN( - H1x3_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_4 = 1.0 / (1.0 + EXP(MIN( - H1x3_4 , _EXP_BAR)));
1248471   +   H1x3_5  = 1.0 / (1.0 + EXP(MIN( - H1x3_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_5 = 1.0 / (1.0 + EXP(MIN( - H1x3_5 , _EXP_BAR)));
1248472   +END;
MPRINT(EM_DIAGRAM):   END;
1248473   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1248474   +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
1248475   +   H1x3_2  = .;
MPRINT(EM_DIAGRAM):   H1x3_2 = .;
1248476   +   H1x3_3  = .;
MPRINT(EM_DIAGRAM):   H1x3_3 = .;
1248477   +   H1x3_4  = .;
MPRINT(EM_DIAGRAM):   H1x3_4 = .;
1248478   +   H1x3_5  = .;
MPRINT(EM_DIAGRAM):   H1x3_5 = .;
1248479   +END;
MPRINT(EM_DIAGRAM):   END;
1248480   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1248481   +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
1248482   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1248483   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1248484   +   H2x1_1  =    -0.87888588976745 * H1x1_1  +     2.90335871970001 * H1x1_2
1248485   +          +     3.56892082037266 * H1x1_3  +    -2.73992780705083 * H1x1_4
1248486   +          +     1.85087845133324 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -0.87888588976745 * H1x1_1 + 2.90335871970001 * H1x1_2 +
3.56892082037266 * H1x1_3 + -2.73992780705083 * H1x1_4 + 1.85087845133324 * H1x1_5 ;
1248487   +   H2x1_2  =    -0.58574259841126 * H1x1_1  +    -0.21734849016798 * H1x1_2
1248488   +          +    -0.25911074181081 * H1x1_3  +    -0.42608313525243 * H1x1_4
1248489   +          +      0.0572264965726 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -0.58574259841126 * H1x1_1 + -0.21734849016798 * H1x1_2 +
-0.25911074181081 * H1x1_3 + -0.42608313525243 * H1x1_4 + 0.0572264965726 * H1x1_5 ;
1248490   +   H2x1_3  =     -3.4245103090892 * H1x1_1  +     2.39148442791109 * H1x1_2
1248491   +          +     2.40633993926864 * H1x1_3  +    -0.39116314741561 * H1x1_4
1248492   +          +     1.55940137045446 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -3.4245103090892 * H1x1_1 + 2.39148442791109 * H1x1_2 +
2.40633993926864 * H1x1_3 + -0.39116314741561 * H1x1_4 + 1.55940137045446 * H1x1_5 ;
1248493   +   H2x1_4  =     4.40552826823228 * H1x1_1  +    -2.22667369285426 * H1x1_2
1248494   +          +    -4.36956996992936 * H1x1_3  +     5.07833758885145 * H1x1_4
1248495   +          +    -3.71745000855391 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 4.40552826823228 * H1x1_1 + -2.22667369285426 * H1x1_2 +
-4.36956996992936 * H1x1_3 + 5.07833758885145 * H1x1_4 + -3.71745000855391 * H1x1_5 ;
1248496   +   H2x1_1  = H2x1_1  +     2.57417055243767 * H1x2_1
1248497   +          +     0.83648749576123 * H1x2_2  +     0.89390090173338 * H1x2_3
1248498   +          +     0.64981014833304 * H1x2_4  +    -0.52148329192172 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 2.57417055243767 * H1x2_1 + 0.83648749576123 * H1x2_2
+ 0.89390090173338 * H1x2_3 + 0.64981014833304 * H1x2_4 + -0.52148329192172 * H1x2_5 ;
1248499   +   H2x1_2  = H2x1_2  +      0.0180888989385 * H1x2_1
1248500   +          +    -0.80823823488019 * H1x2_2  +    -0.28763491232907 * H1x2_3
1248501   +          +     0.25846928082637 * H1x2_4  +    -0.90191452174928 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 0.0180888989385 * H1x2_1 + -0.80823823488019 * H1x2_2
+ -0.28763491232907 * H1x2_3 + 0.25846928082637 * H1x2_4 + -0.90191452174928 * H1x2_5 ;
1248502   +   H2x1_3  = H2x1_3  +     1.14009879940491 * H1x2_1
1248503   +          +    -0.40787680915084 * H1x2_2  +     0.07284828777988 * H1x2_3
1248504   +          +     0.36049016529857 * H1x2_4  +    -1.18138631855392 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + 1.14009879940491 * H1x2_1 + -0.40787680915084 * H1x2_2
+ 0.07284828777988 * H1x2_3 + 0.36049016529857 * H1x2_4 + -1.18138631855392 * H1x2_5 ;
1248505   +   H2x1_4  = H2x1_4  +     -0.1178430666715 * H1x2_1
1248506   +          +     2.09065650924536 * H1x2_2  +     1.04148055725421 * H1x2_3
1248507   +          +     0.02606984862898 * H1x2_4  +     0.31973150706209 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + -0.1178430666715 * H1x2_1 + 2.09065650924536 * H1x2_2
+ 1.04148055725421 * H1x2_3 + 0.02606984862898 * H1x2_4 + 0.31973150706209 * H1x2_5 ;
1248508   +   H2x1_1  = H2x1_1  +     0.37589541636702 * H1x3_1
1248509   +          +    -1.02452495514201 * H1x3_2  +     0.44765211805329 * H1x3_3
1248510   +          +    -1.35647342372032 * H1x3_4  +     -0.6490399229487 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 0.37589541636702 * H1x3_1 + -1.02452495514201 * H1x3_2
+ 0.44765211805329 * H1x3_3 + -1.35647342372032 * H1x3_4 + -0.6490399229487 * H1x3_5 ;
1248511   +   H2x1_2  = H2x1_2  +      -1.910747593267 * H1x3_1
1248512   +          +     1.91313714874593 * H1x3_2  +     0.89010950185557 * H1x3_3
1248513   +          +     1.16258612173237 * H1x3_4  +     0.67062728470341 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -1.910747593267 * H1x3_1 + 1.91313714874593 * H1x3_2 +
0.89010950185557 * H1x3_3 + 1.16258612173237 * H1x3_4 + 0.67062728470341 * H1x3_5 ;
1248514   +   H2x1_3  = H2x1_3  +    -0.61933600446437 * H1x3_1
1248515   +          +     1.71790550668732 * H1x3_2  +     0.54214423164791 * H1x3_3
1248516   +          +     1.23934237110052 * H1x3_4  +     -0.5426823885329 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -0.61933600446437 * H1x3_1 + 1.71790550668732 * H1x3_2
+ 0.54214423164791 * H1x3_3 + 1.23934237110052 * H1x3_4 + -0.5426823885329 * H1x3_5 ;
1248517   +   H2x1_4  = H2x1_4  +     0.63501991890118 * H1x3_1
1248518   +          +     0.52608732282548 * H1x3_2  +     1.05849455171994 * H1x3_3
1248519   +          +    -0.10988994454917 * H1x3_4  +     -0.4296682351699 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 0.63501991890118 * H1x3_1 + 0.52608732282548 * H1x3_2
+ 1.05849455171994 * H1x3_3 + -0.10988994454917 * H1x3_4 + -0.4296682351699 * H1x3_5 ;
1248520   +   H2x1_1  =     1.65760855975376 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.65760855975376 + H2x1_1 ;
1248521   +   H2x1_2  =    -1.48092067999918 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -1.48092067999918 + H2x1_2 ;
1248522   +   H2x1_3  =     0.34293203475136 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 0.34293203475136 + H2x1_3 ;
1248523   +   H2x1_4  =     2.26730807690838 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 2.26730807690838 + H2x1_4 ;
1248524   +   H2x1_5  = 0;
MPRINT(EM_DIAGRAM):   H2x1_5 = 0;
1248525   +   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 );
1248526   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1248527   +   H2x1_1  = EXP(H2x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_1 = EXP(H2x1_1 - _MAX_);
1248528   +   _SUM_ = _SUM_ + H2x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_1 ;
1248529   +   H2x1_2  = EXP(H2x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_2 = EXP(H2x1_2 - _MAX_);
1248530   +   _SUM_ = _SUM_ + H2x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_2 ;
1248531   +   H2x1_3  = EXP(H2x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_3 = EXP(H2x1_3 - _MAX_);
1248532   +   _SUM_ = _SUM_ + H2x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_3 ;
1248533   +   H2x1_4  = EXP(H2x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_4 = EXP(H2x1_4 - _MAX_);
1248534   +   _SUM_ = _SUM_ + H2x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_4 ;
1248535   +   H2x1_5  = EXP(H2x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_5 = EXP(H2x1_5 - _MAX_);
1248536   +   _SUM_ = _SUM_ + H2x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_5 ;
1248537   +   H2x1_1  = H2x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 / _SUM_;
1248538   +   H2x1_2  = H2x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 / _SUM_;
1248539   +   H2x1_3  = H2x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 / _SUM_;
1248540   +   H2x1_4  = H2x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 / _SUM_;
1248541   +   H2x1_5  = H2x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 / _SUM_;
1248542   +END;
MPRINT(EM_DIAGRAM):   END;
1248543   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1248544   +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
1248545   +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
1248546   +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
1248547   +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
1248548   +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
1248549   +END;
MPRINT(EM_DIAGRAM):   END;
1248550   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1248551   +*** Writing the Node H2x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x2_ ;
1248552   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1248553   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1248554   +   H2x2_1  =     0.35487648363729 * H1x1_1  +    -1.23352844324567 * H1x1_2
1248555   +          +      0.4867158313468 * H1x1_3  +    -1.47292809903753 * H1x1_4
1248556   +          +    -1.00833023262854 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = 0.35487648363729 * H1x1_1 + -1.23352844324567 * H1x1_2 +
0.4867158313468 * H1x1_3 + -1.47292809903753 * H1x1_4 + -1.00833023262854 * H1x1_5 ;
1248557   +   H2x2_2  =     1.32087363094324 * H1x1_1  +     0.82502983555141 * H1x1_2
1248558   +          +    -0.68621854188154 * H1x1_3  +     1.98219533394448 * H1x1_4
1248559   +          +     0.24099626891211 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = 1.32087363094324 * H1x1_1 + 0.82502983555141 * H1x1_2 +
-0.68621854188154 * H1x1_3 + 1.98219533394448 * H1x1_4 + 0.24099626891211 * H1x1_5 ;
1248560   +   H2x2_3  =     1.19516705715854 * H1x1_1  +    -0.20476587977538 * H1x1_2
1248561   +          +    -2.69435199012833 * H1x1_3  +      1.1085509496662 * H1x1_4
1248562   +          +    -0.95845782501191 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = 1.19516705715854 * H1x1_1 + -0.20476587977538 * H1x1_2 +
-2.69435199012833 * H1x1_3 + 1.1085509496662 * H1x1_4 + -0.95845782501191 * H1x1_5 ;
1248563   +   H2x2_4  =     0.80435775915951 * H1x1_1  +     1.81751702761299 * H1x1_2
1248564   +          +     0.07722876002556 * H1x1_3  +    -0.41957373993392 * H1x1_4
1248565   +          +    -1.39341356039439 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = 0.80435775915951 * H1x1_1 + 1.81751702761299 * H1x1_2 +
0.07722876002556 * H1x1_3 + -0.41957373993392 * H1x1_4 + -1.39341356039439 * H1x1_5 ;
1248566   +   H2x2_1  = H2x2_1  +     0.84230993439042 * H1x2_1
1248567   +          +      1.4931541058726 * H1x2_2  +     0.29113033361443 * H1x2_3
1248568   +          +     0.58117372781043 * H1x2_4  +     0.21183820652904 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + 0.84230993439042 * H1x2_1 + 1.4931541058726 * H1x2_2 +
0.29113033361443 * H1x2_3 + 0.58117372781043 * H1x2_4 + 0.21183820652904 * H1x2_5 ;
1248569   +   H2x2_2  = H2x2_2  +     0.27560928585641 * H1x2_1
1248570   +          +     1.00352880610395 * H1x2_2  +     1.86342723621296 * H1x2_3
1248571   +          +     0.68698974361713 * H1x2_4  +     1.62443344475228 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + 0.27560928585641 * H1x2_1 + 1.00352880610395 * H1x2_2
+ 1.86342723621296 * H1x2_3 + 0.68698974361713 * H1x2_4 + 1.62443344475228 * H1x2_5 ;
1248572   +   H2x2_3  = H2x2_3  +     0.59362453125998 * H1x2_1
1248573   +          +     2.21434215943762 * H1x2_2  +     0.00697391860503 * H1x2_3
1248574   +          +     0.52298455671378 * H1x2_4  +    -1.36319907473823 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 + 0.59362453125998 * H1x2_1 + 2.21434215943762 * H1x2_2
+ 0.00697391860503 * H1x2_3 + 0.52298455671378 * H1x2_4 + -1.36319907473823 * H1x2_5 ;
1248575   +   H2x2_4  = H2x2_4  +     0.87949581153547 * H1x2_1
1248576   +          +     0.52867495476492 * H1x2_2  +    -0.30823702050003 * H1x2_3
1248577   +          +     1.30732992472712 * H1x2_4  +    -0.93335113891701 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 + 0.87949581153547 * H1x2_1 + 0.52867495476492 * H1x2_2
+ -0.30823702050003 * H1x2_3 + 1.30732992472712 * H1x2_4 + -0.93335113891701 * H1x2_5 ;
1248578   +   H2x2_1  = H2x2_1  +    -0.18546949662618 * H1x3_1
1248579   +          +     0.12449215628678 * H1x3_2  +    -0.06904718348363 * H1x3_3
1248580   +          +     1.64236464165721 * H1x3_4  +      0.6073731959408 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + -0.18546949662618 * H1x3_1 + 0.12449215628678 * H1x3_2
+ -0.06904718348363 * H1x3_3 + 1.64236464165721 * H1x3_4 + 0.6073731959408 * H1x3_5 ;
1248581   +   H2x2_2  = H2x2_2  +    -0.65604349417832 * H1x3_1
1248582   +          +    -0.36719791640957 * H1x3_2  +     0.13320126120657 * H1x3_3
1248583   +          +     0.18159276955134 * H1x3_4  +     2.58327741985853 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + -0.65604349417832 * H1x3_1 + -0.36719791640957 *
H1x3_2 + 0.13320126120657 * H1x3_3 + 0.18159276955134 * H1x3_4 + 2.58327741985853 * H1x3_5 ;
1248584   +   H2x2_3  = H2x2_3  +     0.91638163706166 * H1x3_1
1248585   +          +    -0.47067218080648 * H1x3_2  +    -1.48968450897101 * H1x3_3
1248586   +          +     1.31187282169231 * H1x3_4  +     -0.2874693423684 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 + 0.91638163706166 * H1x3_1 + -0.47067218080648 * H1x3_2
+ -1.48968450897101 * H1x3_3 + 1.31187282169231 * H1x3_4 + -0.2874693423684 * H1x3_5 ;
1248587   +   H2x2_4  = H2x2_4  +     0.53560065193109 * H1x3_1
1248588   +          +    -1.15405943087628 * H1x3_2  +     0.12331054856276 * H1x3_3
1248589   +          +     -1.4665768024733 * H1x3_4  +    -0.08015819920106 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 + 0.53560065193109 * H1x3_1 + -1.15405943087628 * H1x3_2
+ 0.12331054856276 * H1x3_3 + -1.4665768024733 * H1x3_4 + -0.08015819920106 * H1x3_5 ;
1248590   +   H2x2_1  =     1.14294113680807 + H2x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = 1.14294113680807 + H2x2_1 ;
1248591   +   H2x2_2  =     0.23029998902452 + H2x2_2 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = 0.23029998902452 + H2x2_2 ;
1248592   +   H2x2_3  =     0.09214575938404 + H2x2_3 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = 0.09214575938404 + H2x2_3 ;
1248593   +   H2x2_4  =    -1.18247593420886 + H2x2_4 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = -1.18247593420886 + H2x2_4 ;
1248594   +   H2x2_5  = 0;
MPRINT(EM_DIAGRAM):   H2x2_5 = 0;
1248595   +   _MAX_ = MAX (H2x2_1 , H2x2_2 , H2x2_3 , H2x2_4 , H2x2_5 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x2_1 , H2x2_2 , H2x2_3 , H2x2_4 , H2x2_5 );
1248596   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1248597   +   H2x2_1  = EXP(H2x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_1 = EXP(H2x2_1 - _MAX_);
1248598   +   _SUM_ = _SUM_ + H2x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_1 ;
1248599   +   H2x2_2  = EXP(H2x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_2 = EXP(H2x2_2 - _MAX_);
1248600   +   _SUM_ = _SUM_ + H2x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_2 ;
1248601   +   H2x2_3  = EXP(H2x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_3 = EXP(H2x2_3 - _MAX_);
1248602   +   _SUM_ = _SUM_ + H2x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_3 ;
1248603   +   H2x2_4  = EXP(H2x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_4 = EXP(H2x2_4 - _MAX_);
1248604   +   _SUM_ = _SUM_ + H2x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_4 ;
1248605   +   H2x2_5  = EXP(H2x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_5 = EXP(H2x2_5 - _MAX_);
1248606   +   _SUM_ = _SUM_ + H2x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_5 ;
1248607   +   H2x2_1  = H2x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 / _SUM_;
1248608   +   H2x2_2  = H2x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 / _SUM_;
1248609   +   H2x2_3  = H2x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 / _SUM_;
1248610   +   H2x2_4  = H2x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 / _SUM_;
1248611   +   H2x2_5  = H2x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 / _SUM_;
1248612   +END;
MPRINT(EM_DIAGRAM):   END;
1248613   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1248614   +   H2x2_1  = .;
MPRINT(EM_DIAGRAM):   H2x2_1 = .;
1248615   +   H2x2_2  = .;
MPRINT(EM_DIAGRAM):   H2x2_2 = .;
1248616   +   H2x2_3  = .;
MPRINT(EM_DIAGRAM):   H2x2_3 = .;
1248617   +   H2x2_4  = .;
MPRINT(EM_DIAGRAM):   H2x2_4 = .;
1248618   +   H2x2_5  = .;
MPRINT(EM_DIAGRAM):   H2x2_5 = .;
1248619   +END;
MPRINT(EM_DIAGRAM):   END;
1248620   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1248621   +*** Writing the Node H3x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H3x1_ ;
1248622   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1248623   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1248624   +   H3x1_1  =     0.38781845364667 * H2x1_1  +    -1.29333236344932 * H2x1_2
1248625   +          +    -0.39452648844304 * H2x1_3  +    -1.74269898056816 * H2x1_4
1248626   +          +     0.80663208970159 * H2x1_5 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = 0.38781845364667 * H2x1_1 + -1.29333236344932 * H2x1_2 +
-0.39452648844304 * H2x1_3 + -1.74269898056816 * H2x1_4 + 0.80663208970159 * H2x1_5 ;
1248627   +   H3x1_2  =     3.42138045838852 * H2x1_1  +    -2.53755815247586 * H2x1_2
1248628   +          +     1.21718290783021 * H2x1_3  +    -5.59742312960418 * H2x1_4
1248629   +          +     0.93331767575635 * H2x1_5 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = 3.42138045838852 * H2x1_1 + -2.53755815247586 * H2x1_2 +
1.21718290783021 * H2x1_3 + -5.59742312960418 * H2x1_4 + 0.93331767575635 * H2x1_5 ;
1248630   +   H3x1_3  =      0.3066875685513 * H2x1_1  +     0.06212172151661 * H2x1_2
1248631   +          +     0.54975837436313 * H2x1_3  +    -2.01758242649336 * H2x1_4
1248632   +          +     -1.5405169528484 * H2x1_5 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = 0.3066875685513 * H2x1_1 + 0.06212172151661 * H2x1_2 +
0.54975837436313 * H2x1_3 + -2.01758242649336 * H2x1_4 + -1.5405169528484 * H2x1_5 ;
1248633   +   H3x1_4  =     0.75238654454663 * H2x1_1  +      0.8605688517794 * H2x1_2
1248634   +          +    -1.18675726977521 * H2x1_3  +    -0.23106123144614 * H2x1_4
1248635   +          +    -0.26022301590207 * H2x1_5 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = 0.75238654454663 * H2x1_1 + 0.8605688517794 * H2x1_2 +
-1.18675726977521 * H2x1_3 + -0.23106123144614 * H2x1_4 + -0.26022301590207 * H2x1_5 ;
1248636   +   H3x1_1  = H3x1_1  +     -1.9857802180333 * H2x2_1
1248637   +          +    -1.83746541265988 * H2x2_2  +    -0.19991218509663 * H2x2_3
1248638   +          +    -1.16358880876987 * H2x2_4  +     0.72072728861384 * H2x2_5 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 + -1.9857802180333 * H2x2_1 + -1.83746541265988 * H2x2_2
+ -0.19991218509663 * H2x2_3 + -1.16358880876987 * H2x2_4 + 0.72072728861384 * H2x2_5 ;
1248639   +   H3x1_2  = H3x1_2  +     0.96937540396367 * H2x2_1
1248640   +          +    -0.36649624165623 * H2x2_2  +     0.89618563330616 * H2x2_3
1248641   +          +    -0.84224721075989 * H2x2_4  +     0.43309698013395 * H2x2_5 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = H3x1_2 + 0.96937540396367 * H2x2_1 + -0.36649624165623 * H2x2_2
+ 0.89618563330616 * H2x2_3 + -0.84224721075989 * H2x2_4 + 0.43309698013395 * H2x2_5 ;
1248642   +   H3x1_3  = H3x1_3  +    -0.90225214765586 * H2x2_1
1248643   +          +     0.02136319386846 * H2x2_2  +    -0.46868394918483 * H2x2_3
1248644   +          +     0.56005845701528 * H2x2_4  +     -1.2510120440755 * H2x2_5 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = H3x1_3 + -0.90225214765586 * H2x2_1 + 0.02136319386846 * H2x2_2
+ -0.46868394918483 * H2x2_3 + 0.56005845701528 * H2x2_4 + -1.2510120440755 * H2x2_5 ;
1248645   +   H3x1_4  = H3x1_4  +    -0.50993520854009 * H2x2_1
1248646   +          +    -2.07093806498525 * H2x2_2  +      0.4129198676448 * H2x2_3
1248647   +          +     0.26049404756746 * H2x2_4  +     2.51376895456424 * H2x2_5 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = H3x1_4 + -0.50993520854009 * H2x2_1 + -2.07093806498525 *
H2x2_2 + 0.4129198676448 * H2x2_3 + 0.26049404756746 * H2x2_4 + 2.51376895456424 * H2x2_5 ;
1248648   +   H3x1_1  =    -0.83299285935592 + H3x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = -0.83299285935592 + H3x1_1 ;
1248649   +   H3x1_2  =     1.30330978853872 + H3x1_2 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = 1.30330978853872 + H3x1_2 ;
1248650   +   H3x1_3  =    -2.12788819064089 + H3x1_3 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = -2.12788819064089 + H3x1_3 ;
1248651   +   H3x1_4  =    -2.20240058017016 + H3x1_4 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = -2.20240058017016 + H3x1_4 ;
1248652   +   H3x1_5  = 0;
MPRINT(EM_DIAGRAM):   H3x1_5 = 0;
1248653   +   _MAX_ = MAX (H3x1_1 , H3x1_2 , H3x1_3 , H3x1_4 , H3x1_5 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H3x1_1 , H3x1_2 , H3x1_3 , H3x1_4 , H3x1_5 );
1248654   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1248655   +   H3x1_1  = EXP(H3x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_1 = EXP(H3x1_1 - _MAX_);
1248656   +   _SUM_ = _SUM_ + H3x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_1 ;
1248657   +   H3x1_2  = EXP(H3x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_2 = EXP(H3x1_2 - _MAX_);
1248658   +   _SUM_ = _SUM_ + H3x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_2 ;
1248659   +   H3x1_3  = EXP(H3x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_3 = EXP(H3x1_3 - _MAX_);
1248660   +   _SUM_ = _SUM_ + H3x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_3 ;
1248661   +   H3x1_4  = EXP(H3x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_4 = EXP(H3x1_4 - _MAX_);
1248662   +   _SUM_ = _SUM_ + H3x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_4 ;
1248663   +   H3x1_5  = EXP(H3x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_5 = EXP(H3x1_5 - _MAX_);
1248664   +   _SUM_ = _SUM_ + H3x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_5 ;
1248665   +   H3x1_1  = H3x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 / _SUM_;
1248666   +   H3x1_2  = H3x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_2 = H3x1_2 / _SUM_;
1248667   +   H3x1_3  = H3x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_3 = H3x1_3 / _SUM_;
1248668   +   H3x1_4  = H3x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_4 = H3x1_4 / _SUM_;
1248669   +   H3x1_5  = H3x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_5 = H3x1_5 / _SUM_;
1248670   +END;
MPRINT(EM_DIAGRAM):   END;
1248671   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1248672   +   H3x1_1  = .;
MPRINT(EM_DIAGRAM):   H3x1_1 = .;
1248673   +   H3x1_2  = .;
MPRINT(EM_DIAGRAM):   H3x1_2 = .;
1248674   +   H3x1_3  = .;
MPRINT(EM_DIAGRAM):   H3x1_3 = .;
1248675   +   H3x1_4  = .;
MPRINT(EM_DIAGRAM):   H3x1_4 = .;
1248676   +   H3x1_5  = .;
MPRINT(EM_DIAGRAM):   H3x1_5 = .;
1248677   +END;
MPRINT(EM_DIAGRAM):   END;
1248678   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1248679   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1248680   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1248681   +
1248682   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1248683   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1248684   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1248685   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1248686   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1248687   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1248688   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1248689   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1248690   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1248691   +end;
MPRINT(EM_DIAGRAM):   end;
1248692   +else do;
MPRINT(EM_DIAGRAM):   else do;
1248693   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1248694   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1248695   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1248696   +   end;
MPRINT(EM_DIAGRAM):   end;
1248697   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1248698   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1248699   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1248700   +   end;
MPRINT(EM_DIAGRAM):   end;
1248701   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1248702   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1248703   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1248704   +   end;
MPRINT(EM_DIAGRAM):   end;
1248705   +end;
MPRINT(EM_DIAGRAM):   end;
1248706   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1248707   +   P_DepVar1  =     0.02793808059597 * H3x1_1  +    -8.41365271594755 * H3x1_2
1248708   +          +    -0.18933524733979 * H3x1_3  +     1.61020422729446 * H3x1_4
1248709   +          +     7.51494112828021 * H3x1_5 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.02793808059597 * H3x1_1 + -8.41365271594755 * H3x1_2 +
-0.18933524733979 * H3x1_3 + 1.61020422729446 * H3x1_4 + 7.51494112828021 * H3x1_5 ;
1248710   +   P_DepVar1  =     0.83962115399384 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.83962115399384 + P_DepVar1 ;
1248711   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1248712   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1248713   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1248714   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1248715   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1248716   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1248717   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1248718   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1248719   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1248720   +END;
MPRINT(EM_DIAGRAM):   END;
1248721   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1248722   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1248723   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1248724   +END;
MPRINT(EM_DIAGRAM):   END;
1248725   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1248726   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1248727   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1248728   +END;
MPRINT(EM_DIAGRAM):   END;
1248729   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1248730   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1248731   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1248732   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1248733   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1248734   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1248735   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1248736   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1248737   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1248738   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1248739   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1248740   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1248741   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1248742   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1248743   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1248744   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1248745   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1248746   +END;
MPRINT(EM_DIAGRAM):   END;
1248747   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1248748   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1248749   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1248750   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1248751   +* Renaming variables for AutoNeural10;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural10;
1248752   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1248753   +* Renaming Posterior variables for AutoNeural10;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural10;
1248754   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1248755   +drop AutoNeural10_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural10_P_DepVar1;
1248756   +AutoNeural10_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural10_P_DepVar1 = P_DepVar1;
1248757   +drop AutoNeural10_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural10_P_DepVar0;
1248758   +AutoNeural10_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural10_P_DepVar0 = P_DepVar0;
1248759   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1248760   +* Renaming _WARN_ variable for AutoNeural10;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural10;
1248761   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1248762   +length AutoNeural10_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural10_WARN_ $4;
1248763   +drop AutoNeural10_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural10_WARN_;
1248764   +AutoNeural10_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural10_WARN_ = _WARN_;
1248765   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1248766   +* Ensmbl46: Scoring Code of model 2 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl46: Scoring Code of model 2 of 5;
1248767   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1248768   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1248769   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
1248770   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1248771   +* NODE: AutoNeural7;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural7;
1248772   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1248773   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1248774   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1248775   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1248776   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1248777   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1248778   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1248779   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1248780   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1248781   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1248782   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1248783   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1248784   +LENGTH _WARN_ $4
1248785   +      F_DepVar  $ 12
1248786   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1248787   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1248788   +
1248789   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1248790   +
1248791   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1248792   +
1248793   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1248794   +
1248795   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1248796   +
1248797   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1248798   +
1248799   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1248800   +
1248801   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1248802   +
1248803   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1248804   +
1248805   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1248806   +
1248807   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1248808   +
1248809   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1248810   +
1248811   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1248812   +
1248813   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1248814   +
1248815   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1248816   +
1248817   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1248818   +
1248819   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1248820   +
1248821   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1248822   +
1248823   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1248824   +
1248825   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1248826   +
1248827   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1248828   +
1248829   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1248830   +
1248831   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1248832   +
1248833   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1248834   +
1248835   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1248836   +
1248837   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1248838   +
1248839   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1248840   +
1248841   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1248842   +
1248843   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1248844   +
1248845   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1248846   +
1248847   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1248848   +
1248849   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1248850   +
1248851   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1248852   +
1248853   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1248854   +
1248855   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1248856   +
1248857   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1248858   +
1248859   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1248860   +
1248861   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1248862   +
1248863   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
1248864   +
1248865   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
1248866   +
1248867   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1248868   +
1248869   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1248870   +
1248871   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1248872   +
1248873   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1248874   +
1248875   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1248876   +
1248877   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1248878   +
1248879   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1248880   +
1248881   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1248882   +
1248883   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1248884   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1248885   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1248886   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1248887   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1248888   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1248889   +end;
MPRINT(EM_DIAGRAM):   end;
1248890   +else do;
MPRINT(EM_DIAGRAM):   else do;
1248891   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1248892   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1248893   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1248894   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1248895   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1248896   +   end;
MPRINT(EM_DIAGRAM):   end;
1248897   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1248898   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1248899   +   end;
MPRINT(EM_DIAGRAM):   end;
1248900   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1248901   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1248902   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1248903   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1248904   +   end;
MPRINT(EM_DIAGRAM):   end;
1248905   +end;
MPRINT(EM_DIAGRAM):   end;
1248906   +
1248907   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1248908   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1248909   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1248910   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1248911   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1248912   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1248913   +end;
MPRINT(EM_DIAGRAM):   end;
1248914   +else do;
MPRINT(EM_DIAGRAM):   else do;
1248915   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1248916   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1248917   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1248918   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1248919   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1248920   +   end;
MPRINT(EM_DIAGRAM):   end;
1248921   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1248922   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1248923   +   end;
MPRINT(EM_DIAGRAM):   end;
1248924   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1248925   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1248926   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1248927   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1248928   +   end;
MPRINT(EM_DIAGRAM):   end;
1248929   +end;
MPRINT(EM_DIAGRAM):   end;
1248930   +
1248931   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1248932   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1248933   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1248934   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1248935   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1248936   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1248937   +end;
MPRINT(EM_DIAGRAM):   end;
1248938   +else do;
MPRINT(EM_DIAGRAM):   else do;
1248939   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1248940   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1248941   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1248942   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1248943   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1248944   +   end;
MPRINT(EM_DIAGRAM):   end;
1248945   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1248946   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1248947   +   end;
MPRINT(EM_DIAGRAM):   end;
1248948   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1248949   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1248950   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1248951   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1248952   +   end;
MPRINT(EM_DIAGRAM):   end;
1248953   +end;
MPRINT(EM_DIAGRAM):   end;
1248954   +
1248955   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1248956   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1248957   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1248958   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1248959   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1248960   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1248961   +end;
MPRINT(EM_DIAGRAM):   end;
1248962   +else do;
MPRINT(EM_DIAGRAM):   else do;
1248963   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1248964   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1248965   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1248966   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1248967   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1248968   +   end;
MPRINT(EM_DIAGRAM):   end;
1248969   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1248970   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1248971   +   end;
MPRINT(EM_DIAGRAM):   end;
1248972   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1248973   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1248974   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1248975   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1248976   +   end;
MPRINT(EM_DIAGRAM):   end;
1248977   +end;
MPRINT(EM_DIAGRAM):   end;
1248978   +
1248979   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1248980   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1248981   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1248982   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1248983   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1248984   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1248985   +end;
MPRINT(EM_DIAGRAM):   end;
1248986   +else do;
MPRINT(EM_DIAGRAM):   else do;
1248987   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1248988   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1248989   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1248990   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1248991   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1248992   +   end;
MPRINT(EM_DIAGRAM):   end;
1248993   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1248994   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1248995   +   end;
MPRINT(EM_DIAGRAM):   end;
1248996   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1248997   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1248998   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1248999   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1249000   +   end;
MPRINT(EM_DIAGRAM):   end;
1249001   +end;
MPRINT(EM_DIAGRAM):   end;
1249002   +
1249003   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1249004   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1249005   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1249006   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1249007   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1249008   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1249009   +end;
MPRINT(EM_DIAGRAM):   end;
1249010   +else do;
MPRINT(EM_DIAGRAM):   else do;
1249011   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1249012   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1249013   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1249014   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1249015   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1249016   +   end;
MPRINT(EM_DIAGRAM):   end;
1249017   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1249018   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1249019   +   end;
MPRINT(EM_DIAGRAM):   end;
1249020   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1249021   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1249022   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1249023   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1249024   +   end;
MPRINT(EM_DIAGRAM):   end;
1249025   +end;
MPRINT(EM_DIAGRAM):   end;
1249026   +
1249027   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1249028   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1249029   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1249030   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1249031   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1249032   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1249033   +end;
MPRINT(EM_DIAGRAM):   end;
1249034   +else do;
MPRINT(EM_DIAGRAM):   else do;
1249035   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1249036   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1249037   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1249038   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1249039   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1249040   +   end;
MPRINT(EM_DIAGRAM):   end;
1249041   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1249042   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1249043   +   end;
MPRINT(EM_DIAGRAM):   end;
1249044   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1249045   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1249046   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1249047   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1249048   +   end;
MPRINT(EM_DIAGRAM):   end;
1249049   +end;
MPRINT(EM_DIAGRAM):   end;
1249050   +
1249051   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1249052   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
1249053   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1249054   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1249055   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1249056   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1249057   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1249058   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1249059   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1249060   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1249061   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1249062   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1249063   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1249064   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1249065   +end;
MPRINT(EM_DIAGRAM):   end;
1249066   +else do;
MPRINT(EM_DIAGRAM):   else do;
1249067   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1249068   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1249069   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1249070   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1249071   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1249072   +   end;
MPRINT(EM_DIAGRAM):   end;
1249073   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1249074   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1249075   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1249076   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1249077   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1249078   +   end;
MPRINT(EM_DIAGRAM):   end;
1249079   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1249080   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1249081   +   end;
MPRINT(EM_DIAGRAM):   end;
1249082   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1249083   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1249084   +   end;
MPRINT(EM_DIAGRAM):   end;
1249085   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1249086   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1249087   +   end;
MPRINT(EM_DIAGRAM):   end;
1249088   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1249089   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1249090   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1249091   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1249092   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1249093   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1249094   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1249095   +   end;
MPRINT(EM_DIAGRAM):   end;
1249096   +end;
MPRINT(EM_DIAGRAM):   end;
1249097   +
1249098   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1249099   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1249100   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
1249101   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1249102   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1249103   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1249104   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1249105   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1249106   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1249107   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1249108   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1249109   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1249110   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1249111   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1249112   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1249113   +end;
MPRINT(EM_DIAGRAM):   end;
1249114   +else do;
MPRINT(EM_DIAGRAM):   else do;
1249115   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1249116   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1249117   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1249118   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1249119   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1249120   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1249121   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1249122   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1249123   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1249124   +         end;
MPRINT(EM_DIAGRAM):   end;
1249125   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1249126   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1249127   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1249128   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1249129   +            end;
MPRINT(EM_DIAGRAM):   end;
1249130   +         end;
MPRINT(EM_DIAGRAM):   end;
1249131   +      end;
MPRINT(EM_DIAGRAM):   end;
1249132   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1249133   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1249134   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1249135   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1249136   +         end;
MPRINT(EM_DIAGRAM):   end;
1249137   +      end;
MPRINT(EM_DIAGRAM):   end;
1249138   +   end;
MPRINT(EM_DIAGRAM):   end;
1249139   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1249140   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1249141   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1249142   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1249143   +      end;
MPRINT(EM_DIAGRAM):   end;
1249144   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1249145   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1249146   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1249147   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1249148   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1249149   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1249150   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1249151   +         end;
MPRINT(EM_DIAGRAM):   end;
1249152   +      end;
MPRINT(EM_DIAGRAM):   end;
1249153   +   end;
MPRINT(EM_DIAGRAM):   end;
1249154   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1249155   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1249156   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1249157   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1249158   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1249159   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1249160   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1249161   +   end;
MPRINT(EM_DIAGRAM):   end;
1249162   +end;
MPRINT(EM_DIAGRAM):   end;
1249163   +
1249164   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1249165   +*** Checking missing input Interval
1249166   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1249167   +
1249168   +IF NMISS(
1249169   +   AcceptedCmpTotal ,
1249170   +   Age ,
1249171   +   Frq ,
1249172   +   Income ,
1249173   +   Kidhome ,
1249174   +   Mnt ,
1249175   +   MntFishProducts ,
1249176   +   MntFruits ,
1249177   +   MntGoldProds ,
1249178   +   MntMeatProducts ,
1249179   +   MntSweetProducts ,
1249180   +   MntWines ,
1249181   +   MonthsAsCustomer ,
1249182   +   NumCatalogPurchases ,
1249183   +   NumDealsPurchases ,
1249184   +   NumDistPurchases ,
1249185   +   NumStorePurchases ,
1249186   +   NumWebPurchases ,
1249187   +   NumWebVisitsMonth ,
1249188   +   RFMstat ,
1249189   +   RMntFrq ,
1249190   +   Recency ,
1249191   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
1249192   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1249193   +
1249194   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1249195   +END;
MPRINT(EM_DIAGRAM):   END;
1249196   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1249197   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
1249198   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1249199   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1249200   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1249201   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1249202   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1249203   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1249204   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1249205   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1249206   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1249207   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1249208   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1249209   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1249210   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1249211   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1249212   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1249213   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1249214   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1249215   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1249216   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1249217   +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
1249218   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 *
MonthsAsCustomer ;
1249219   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1249220   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1249221   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1249222   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1249223   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1249224   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1249225   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1249226   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1249227   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1249228   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1249229   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1249230   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1249231   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1249232   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1249233   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1249234   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1249235   +END;
MPRINT(EM_DIAGRAM):   END;
1249236   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1249237   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1249238   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1249239   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1249240   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1249241   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1249242   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1249243   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1249244   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1249245   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1249246   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1249247   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1249248   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1249249   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1249250   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1249251   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1249252   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1249253   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1249254   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1249255   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1249256   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1249257   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1249258   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1249259   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1249260   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1249261   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1249262   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1249263   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1249264   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1249265   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1249266   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1249267   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1249268   +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
1249269   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 *
MonthsAsCustomer ;
1249270   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1249271   +   ELSE S_NumCatalogPurchases
1249272   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1249273   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1249274   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1249275   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1249276   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1249277   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1249278   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1249279   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1249280   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1249281   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1249282   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1249283   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1249284   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1249285   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1249286   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1249287   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1249288   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1249289   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1249290   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1249291   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1249292   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1249293   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1249294   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1249295   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1249296   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1249297   +END;
MPRINT(EM_DIAGRAM):   END;
1249298   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1249299   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
1249300   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1249301   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1249302   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
1249303   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1249304   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1249305   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
1249306   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1249307   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1249308   +   H1x1_1  =     0.26227897937716 * S_AcceptedCmpTotal
1249309   +          +     -0.0155758157867 * S_Age  +    -0.20268934440257 * S_Frq
1249310   +          +    -0.18529976542103 * S_Income  +     0.18038928903961 *
1249311   +        S_Kidhome  +    -0.28961354349068 * S_Mnt  +    -0.05151010840858 *
1249312   +        S_MntFishProducts  +    -0.03759341636928 * S_MntFruits
1249313   +          +     0.01305575717465 * S_MntGoldProds  +     0.24307680778257 *
1249314   +        S_MntMeatProducts  +    -0.02893363709307 * S_MntSweetProducts
1249315   +          +    -0.35324697751403 * S_MntWines  +    -0.00781254837323 *
1249316   +        S_MonthsAsCustomer  +     0.15222992290422 * S_NumCatalogPurchases
1249317   +          +     0.09708841024031 * S_NumDealsPurchases
1249318   +          +    -0.29075561032014 * S_NumDistPurchases
1249319   +          +    -0.14495394259873 * S_NumStorePurchases
1249320   +          +     0.11890705145732 * S_NumWebPurchases
1249321   +          +    -0.16954189911344 * S_NumWebVisitsMonth
1249322   +          +     0.12377939462638 * S_RFMstat  +    -0.05870604523801 *
1249323   +        S_RMntFrq  +     0.17150719398884 * S_Recency
1249324   +          +     0.13642607109645 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.26227897937716 * S_AcceptedCmpTotal + -0.0155758157867 *
S_Age + -0.20268934440257 * S_Frq + -0.18529976542103 * S_Income + 0.18038928903961 *
S_Kidhome + -0.28961354349068 * S_Mnt + -0.05151010840858 * S_MntFishProducts +
-0.03759341636928 * S_MntFruits + 0.01305575717465 * S_MntGoldProds + 0.24307680778257 *
S_MntMeatProducts + -0.02893363709307 * S_MntSweetProducts + -0.35324697751403 * S_MntWines +
-0.00781254837323 * S_MonthsAsCustomer + 0.15222992290422 * S_NumCatalogPurchases +
0.09708841024031 * S_NumDealsPurchases + -0.29075561032014 * S_NumDistPurchases +
-0.14495394259873 * S_NumStorePurchases + 0.11890705145732 * S_NumWebPurchases +
-0.16954189911344 * S_NumWebVisitsMonth + 0.12377939462638 * S_RFMstat + -0.05870604523801 *
S_RMntFrq + 0.17150719398884 * S_Recency + 0.13642607109645 * S_Teenhome ;
1249325   +   H1x1_2  =     0.26173967942961 * S_AcceptedCmpTotal
1249326   +          +    -0.00424968908882 * S_Age  +    -0.07102902276221 * S_Frq
1249327   +          +     0.17373040625452 * S_Income  +    -0.12612693849717 *
1249328   +        S_Kidhome  +    -0.40114393645566 * S_Mnt  +    -0.06800009910731 *
1249329   +        S_MntFishProducts  +    -0.06681994193124 * S_MntFruits
1249330   +          +     0.00602505287702 * S_MntGoldProds  +     0.29533767747106 *
1249331   +        S_MntMeatProducts  +    -0.06832235425976 * S_MntSweetProducts
1249332   +          +    -0.44970327281811 * S_MntWines  +    -0.01061648191158 *
1249333   +        S_MonthsAsCustomer  +      0.3402332775449 * S_NumCatalogPurchases
1249334   +          +     0.16274478997892 * S_NumDealsPurchases
1249335   +          +     0.03966958784582 * S_NumDistPurchases
1249336   +          +    -0.04714110726598 * S_NumStorePurchases
1249337   +          +    -0.02124229528082 * S_NumWebPurchases
1249338   +          +     0.29753299776832 * S_NumWebVisitsMonth
1249339   +          +     0.08114418100212 * S_RFMstat  +     0.39051989081881 *
1249340   +        S_RMntFrq  +     -0.3340129986623 * S_Recency
1249341   +          +    -0.11108871458308 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.26173967942961 * S_AcceptedCmpTotal + -0.00424968908882 *
S_Age + -0.07102902276221 * S_Frq + 0.17373040625452 * S_Income + -0.12612693849717 *
S_Kidhome + -0.40114393645566 * S_Mnt + -0.06800009910731 * S_MntFishProducts +
-0.06681994193124 * S_MntFruits + 0.00602505287702 * S_MntGoldProds + 0.29533767747106 *
S_MntMeatProducts + -0.06832235425976 * S_MntSweetProducts + -0.44970327281811 * S_MntWines +
-0.01061648191158 * S_MonthsAsCustomer + 0.3402332775449 * S_NumCatalogPurchases +
0.16274478997892 * S_NumDealsPurchases + 0.03966958784582 * S_NumDistPurchases +
-0.04714110726598 * S_NumStorePurchases + -0.02124229528082 * S_NumWebPurchases +
0.29753299776832 * S_NumWebVisitsMonth + 0.08114418100212 * S_RFMstat + 0.39051989081881 *
S_RMntFrq + -0.3340129986623 * S_Recency + -0.11108871458308 * S_Teenhome ;
1249342   +   H1x1_1  = H1x1_1  +      0.1756873442571 * AcceptedCmp10
1249343   +          +     0.31180024044306 * AcceptedCmp20  +     0.29619883713337 *
1249344   +        AcceptedCmp30  +     0.30154500722412 * AcceptedCmp40
1249345   +          +     0.19297823461379 * AcceptedCmp50  +     -0.2612666063344 *
1249346   +        Complain0  +    -0.07979877068908 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.1756873442571 * AcceptedCmp10 + 0.31180024044306 *
AcceptedCmp20 + 0.29619883713337 * AcceptedCmp30 + 0.30154500722412 * AcceptedCmp40 +
0.19297823461379 * AcceptedCmp50 + -0.2612666063344 * Complain0 + -0.07979877068908 *
HigherEducationBinary0 ;
1249347   +   H1x1_2  = H1x1_2  +      0.0093987850789 * AcceptedCmp10
1249348   +          +     0.01121417299451 * AcceptedCmp20  +     0.02978720081114 *
1249349   +        AcceptedCmp30  +     0.03675035164823 * AcceptedCmp40
1249350   +          +      0.0326403700043 * AcceptedCmp50  +     0.12620299225555 *
1249351   +        Complain0  +    -0.08132205666396 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.0093987850789 * AcceptedCmp10 + 0.01121417299451 *
AcceptedCmp20 + 0.02978720081114 * AcceptedCmp30 + 0.03675035164823 * AcceptedCmp40 +
0.0326403700043 * AcceptedCmp50 + 0.12620299225555 * Complain0 + -0.08132205666396 *
HigherEducationBinary0 ;
1249352   +   H1x1_1  = H1x1_1  +    -0.03360721558666 * Education2n_Cycle
1249353   +          +     0.15032252273168 * EducationBasic  +    -0.00292639237041 *
1249354   +        EducationGraduation  +     0.00619669837452 * EducationMaster
1249355   +          +    -0.05037639679806 * Marital_StatusDivorced
1249356   +          +     0.28781968727878 * Marital_StatusMarried
1249357   +          +    -0.20382417074384 * Marital_StatusSingle
1249358   +          +     0.20088888064707 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.03360721558666 * Education2n_Cycle +
0.15032252273168 * EducationBasic + -0.00292639237041 * EducationGraduation + 0.00619669837452
* EducationMaster + -0.05037639679806 * Marital_StatusDivorced + 0.28781968727878 *
Marital_StatusMarried + -0.20382417074384 * Marital_StatusSingle + 0.20088888064707 *
Marital_StatusTogether ;
1249359   +   H1x1_2  = H1x1_2  +     0.12543856607452 * Education2n_Cycle
1249360   +          +      0.0095562801112 * EducationBasic  +    -0.04438983662274 *
1249361   +        EducationGraduation  +    -0.06952670554019 * EducationMaster
1249362   +          +     0.06970969219123 * Marital_StatusDivorced
1249363   +          +    -0.15787475744986 * Marital_StatusMarried
1249364   +          +     0.14345344072192 * Marital_StatusSingle
1249365   +          +    -0.12758942067533 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.12543856607452 * Education2n_Cycle + 0.0095562801112
* EducationBasic + -0.04438983662274 * EducationGraduation + -0.06952670554019 *
EducationMaster + 0.06970969219123 * Marital_StatusDivorced + -0.15787475744986 *
Marital_StatusMarried + 0.14345344072192 * Marital_StatusSingle + -0.12758942067533 *
Marital_StatusTogether ;
1249366   +   H1x1_1  =     0.90517220350758 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.90517220350758 + H1x1_1 ;
1249367   +   H1x1_2  =    -0.60383186342134 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.60383186342134 + H1x1_2 ;
1249368   +   H1x1_1  = SIN(H1x1_1 );
MPRINT(EM_DIAGRAM):   H1x1_1 = SIN(H1x1_1 );
1249369   +   H1x1_2  = SIN(H1x1_2 );
MPRINT(EM_DIAGRAM):   H1x1_2 = SIN(H1x1_2 );
1249370   +END;
MPRINT(EM_DIAGRAM):   END;
1249371   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1249372   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
1249373   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
1249374   +END;
MPRINT(EM_DIAGRAM):   END;
1249375   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1249376   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1249377   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1249378   +
1249379   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1249380   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1249381   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1249382   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1249383   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1249384   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1249385   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1249386   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1249387   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1249388   +end;
MPRINT(EM_DIAGRAM):   end;
1249389   +else do;
MPRINT(EM_DIAGRAM):   else do;
1249390   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1249391   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1249392   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1249393   +   end;
MPRINT(EM_DIAGRAM):   end;
1249394   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1249395   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1249396   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1249397   +   end;
MPRINT(EM_DIAGRAM):   end;
1249398   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1249399   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1249400   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1249401   +   end;
MPRINT(EM_DIAGRAM):   end;
1249402   +end;
MPRINT(EM_DIAGRAM):   end;
1249403   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1249404   +   P_DepVar1  =     -11.151440981908 * H1x1_1  +     16.6040498320868 * H1x1_2
1249405   +         ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -11.151440981908 * H1x1_1 + 16.6040498320868 * H1x1_2 ;
1249406   +   P_DepVar1  =     2.38025141404985 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.38025141404985 + P_DepVar1 ;
1249407   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1249408   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1249409   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1249410   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1249411   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1249412   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1249413   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1249414   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1249415   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1249416   +END;
MPRINT(EM_DIAGRAM):   END;
1249417   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1249418   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1249419   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1249420   +END;
MPRINT(EM_DIAGRAM):   END;
1249421   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1249422   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1249423   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1249424   +END;
MPRINT(EM_DIAGRAM):   END;
1249425   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1249426   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1249427   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1249428   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1249429   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1249430   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1249431   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1249432   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1249433   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1249434   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1249435   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1249436   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1249437   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1249438   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1249439   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1249440   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1249441   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1249442   +END;
MPRINT(EM_DIAGRAM):   END;
1249443   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1249444   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1249445   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1249446   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1249447   +* Renaming variables for AutoNeural7;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural7;
1249448   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1249449   +* Renaming Posterior variables for AutoNeural7;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural7;
1249450   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1249451   +drop AutoNeural7_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural7_P_DepVar1;
1249452   +AutoNeural7_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural7_P_DepVar1 = P_DepVar1;
1249453   +drop AutoNeural7_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural7_P_DepVar0;
1249454   +AutoNeural7_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural7_P_DepVar0 = P_DepVar0;
1249455   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1249456   +* Renaming _WARN_ variable for AutoNeural7;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural7;
1249457   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1249458   +length AutoNeural7_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural7_WARN_ $4;
1249459   +drop AutoNeural7_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural7_WARN_;
1249460   +AutoNeural7_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural7_WARN_ = _WARN_;
1249461   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1249462   +* Ensmbl46: Scoring Code of model 3 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl46: Scoring Code of model 3 of 5;
1249463   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1249464   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1249465   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
1249466   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1249467   +* NODE: AutoNeural12;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural12;
1249468   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1249469   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1249470   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1249471   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1249472   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1249473   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1249474   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1249475   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1249476   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1249477   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1249478   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1249479   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1249480   +LENGTH _WARN_ $4
1249481   +      F_DepVar  $ 12
1249482   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1249483   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1249484   +
1249485   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1249486   +
1249487   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1249488   +
1249489   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1249490   +
1249491   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1249492   +
1249493   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1249494   +
1249495   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1249496   +
1249497   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1249498   +
1249499   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1249500   +
1249501   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1249502   +
1249503   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1249504   +
1249505   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1249506   +
1249507   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1249508   +
1249509   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1249510   +
1249511   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1249512   +
1249513   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1249514   +
1249515   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1249516   +
1249517   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1249518   +
1249519   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1249520   +
1249521   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1249522   +
1249523   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1249524   +
1249525   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1249526   +
1249527   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1249528   +
1249529   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1249530   +
1249531   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1249532   +
1249533   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1249534   +
1249535   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1249536   +
1249537   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1249538   +
1249539   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1249540   +
1249541   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1249542   +
1249543   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1249544   +
1249545   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1249546   +
1249547   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1249548   +
1249549   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1249550   +
1249551   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1249552   +
1249553   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1249554   +
1249555   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1249556   +
1249557   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1249558   +
1249559   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
1249560   +
1249561   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
1249562   +
1249563   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
1249564   +
1249565   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
1249566   +
1249567   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
1249568   +
1249569   +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
1249570   +
1249571   +      label H1x1_7 = 'Hidden: H1x1_=7' ;
MPRINT(EM_DIAGRAM):   label H1x1_7 = 'Hidden: H1x1_=7' ;
1249572   +
1249573   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
1249574   +
1249575   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
1249576   +
1249577   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
1249578   +
1249579   +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
1249580   +
1249581   +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
1249582   +
1249583   +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
1249584   +
1249585   +      label H1x2_7 = 'Hidden: H1x2_=7' ;
MPRINT(EM_DIAGRAM):   label H1x2_7 = 'Hidden: H1x2_=7' ;
1249586   +
1249587   +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
1249588   +
1249589   +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
1249590   +
1249591   +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
1249592   +
1249593   +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
1249594   +
1249595   +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
1249596   +
1249597   +      label H2x1_6 = 'Hidden: H2x1_=6' ;
MPRINT(EM_DIAGRAM):   label H2x1_6 = 'Hidden: H2x1_=6' ;
1249598   +
1249599   +      label H2x1_7 = 'Hidden: H2x1_=7' ;
MPRINT(EM_DIAGRAM):   label H2x1_7 = 'Hidden: H2x1_=7' ;
1249600   +
1249601   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1249602   +
1249603   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1249604   +
1249605   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1249606   +
1249607   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1249608   +
1249609   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1249610   +
1249611   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1249612   +
1249613   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1249614   +
1249615   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1249616   +
1249617   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1249618   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1249619   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1249620   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1249621   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1249622   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1249623   +end;
MPRINT(EM_DIAGRAM):   end;
1249624   +else do;
MPRINT(EM_DIAGRAM):   else do;
1249625   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1249626   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1249627   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1249628   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1249629   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1249630   +   end;
MPRINT(EM_DIAGRAM):   end;
1249631   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1249632   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1249633   +   end;
MPRINT(EM_DIAGRAM):   end;
1249634   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1249635   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1249636   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1249637   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1249638   +   end;
MPRINT(EM_DIAGRAM):   end;
1249639   +end;
MPRINT(EM_DIAGRAM):   end;
1249640   +
1249641   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1249642   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1249643   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1249644   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1249645   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1249646   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1249647   +end;
MPRINT(EM_DIAGRAM):   end;
1249648   +else do;
MPRINT(EM_DIAGRAM):   else do;
1249649   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1249650   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1249651   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1249652   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1249653   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1249654   +   end;
MPRINT(EM_DIAGRAM):   end;
1249655   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1249656   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1249657   +   end;
MPRINT(EM_DIAGRAM):   end;
1249658   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1249659   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1249660   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1249661   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1249662   +   end;
MPRINT(EM_DIAGRAM):   end;
1249663   +end;
MPRINT(EM_DIAGRAM):   end;
1249664   +
1249665   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1249666   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1249667   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1249668   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1249669   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1249670   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1249671   +end;
MPRINT(EM_DIAGRAM):   end;
1249672   +else do;
MPRINT(EM_DIAGRAM):   else do;
1249673   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1249674   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1249675   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1249676   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1249677   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1249678   +   end;
MPRINT(EM_DIAGRAM):   end;
1249679   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1249680   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1249681   +   end;
MPRINT(EM_DIAGRAM):   end;
1249682   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1249683   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1249684   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1249685   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1249686   +   end;
MPRINT(EM_DIAGRAM):   end;
1249687   +end;
MPRINT(EM_DIAGRAM):   end;
1249688   +
1249689   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1249690   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1249691   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1249692   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1249693   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1249694   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1249695   +end;
MPRINT(EM_DIAGRAM):   end;
1249696   +else do;
MPRINT(EM_DIAGRAM):   else do;
1249697   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1249698   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1249699   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1249700   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1249701   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1249702   +   end;
MPRINT(EM_DIAGRAM):   end;
1249703   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1249704   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1249705   +   end;
MPRINT(EM_DIAGRAM):   end;
1249706   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1249707   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1249708   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1249709   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1249710   +   end;
MPRINT(EM_DIAGRAM):   end;
1249711   +end;
MPRINT(EM_DIAGRAM):   end;
1249712   +
1249713   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1249714   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1249715   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1249716   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1249717   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1249718   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1249719   +end;
MPRINT(EM_DIAGRAM):   end;
1249720   +else do;
MPRINT(EM_DIAGRAM):   else do;
1249721   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1249722   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1249723   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1249724   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1249725   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1249726   +   end;
MPRINT(EM_DIAGRAM):   end;
1249727   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1249728   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1249729   +   end;
MPRINT(EM_DIAGRAM):   end;
1249730   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1249731   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1249732   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1249733   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1249734   +   end;
MPRINT(EM_DIAGRAM):   end;
1249735   +end;
MPRINT(EM_DIAGRAM):   end;
1249736   +
1249737   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1249738   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1249739   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1249740   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1249741   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1249742   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1249743   +end;
MPRINT(EM_DIAGRAM):   end;
1249744   +else do;
MPRINT(EM_DIAGRAM):   else do;
1249745   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1249746   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1249747   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1249748   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1249749   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1249750   +   end;
MPRINT(EM_DIAGRAM):   end;
1249751   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1249752   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1249753   +   end;
MPRINT(EM_DIAGRAM):   end;
1249754   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1249755   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1249756   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1249757   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1249758   +   end;
MPRINT(EM_DIAGRAM):   end;
1249759   +end;
MPRINT(EM_DIAGRAM):   end;
1249760   +
1249761   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1249762   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1249763   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1249764   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1249765   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1249766   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1249767   +end;
MPRINT(EM_DIAGRAM):   end;
1249768   +else do;
MPRINT(EM_DIAGRAM):   else do;
1249769   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1249770   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1249771   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1249772   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1249773   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1249774   +   end;
MPRINT(EM_DIAGRAM):   end;
1249775   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1249776   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1249777   +   end;
MPRINT(EM_DIAGRAM):   end;
1249778   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1249779   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1249780   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1249781   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1249782   +   end;
MPRINT(EM_DIAGRAM):   end;
1249783   +end;
MPRINT(EM_DIAGRAM):   end;
1249784   +
1249785   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1249786   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
1249787   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1249788   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1249789   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1249790   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1249791   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1249792   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1249793   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1249794   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1249795   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1249796   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1249797   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1249798   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1249799   +end;
MPRINT(EM_DIAGRAM):   end;
1249800   +else do;
MPRINT(EM_DIAGRAM):   else do;
1249801   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1249802   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1249803   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1249804   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1249805   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1249806   +   end;
MPRINT(EM_DIAGRAM):   end;
1249807   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1249808   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1249809   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1249810   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1249811   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1249812   +   end;
MPRINT(EM_DIAGRAM):   end;
1249813   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1249814   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1249815   +   end;
MPRINT(EM_DIAGRAM):   end;
1249816   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1249817   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1249818   +   end;
MPRINT(EM_DIAGRAM):   end;
1249819   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1249820   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1249821   +   end;
MPRINT(EM_DIAGRAM):   end;
1249822   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1249823   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1249824   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1249825   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1249826   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1249827   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1249828   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1249829   +   end;
MPRINT(EM_DIAGRAM):   end;
1249830   +end;
MPRINT(EM_DIAGRAM):   end;
1249831   +
1249832   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1249833   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1249834   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
1249835   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1249836   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1249837   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1249838   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1249839   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1249840   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1249841   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1249842   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1249843   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1249844   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1249845   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1249846   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1249847   +end;
MPRINT(EM_DIAGRAM):   end;
1249848   +else do;
MPRINT(EM_DIAGRAM):   else do;
1249849   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1249850   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1249851   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1249852   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1249853   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1249854   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1249855   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1249856   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1249857   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1249858   +         end;
MPRINT(EM_DIAGRAM):   end;
1249859   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1249860   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1249861   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1249862   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1249863   +            end;
MPRINT(EM_DIAGRAM):   end;
1249864   +         end;
MPRINT(EM_DIAGRAM):   end;
1249865   +      end;
MPRINT(EM_DIAGRAM):   end;
1249866   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1249867   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1249868   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1249869   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1249870   +         end;
MPRINT(EM_DIAGRAM):   end;
1249871   +      end;
MPRINT(EM_DIAGRAM):   end;
1249872   +   end;
MPRINT(EM_DIAGRAM):   end;
1249873   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1249874   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1249875   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1249876   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1249877   +      end;
MPRINT(EM_DIAGRAM):   end;
1249878   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1249879   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1249880   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1249881   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1249882   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1249883   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1249884   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1249885   +         end;
MPRINT(EM_DIAGRAM):   end;
1249886   +      end;
MPRINT(EM_DIAGRAM):   end;
1249887   +   end;
MPRINT(EM_DIAGRAM):   end;
1249888   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1249889   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1249890   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1249891   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1249892   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1249893   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1249894   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1249895   +   end;
MPRINT(EM_DIAGRAM):   end;
1249896   +end;
MPRINT(EM_DIAGRAM):   end;
1249897   +
1249898   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1249899   +*** Checking missing input Interval
1249900   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1249901   +
1249902   +IF NMISS(
1249903   +   AcceptedCmpTotal ,
1249904   +   Age ,
1249905   +   Frq ,
1249906   +   Income ,
1249907   +   Kidhome ,
1249908   +   Mnt ,
1249909   +   MntFishProducts ,
1249910   +   MntFruits ,
1249911   +   MntGoldProds ,
1249912   +   MntMeatProducts ,
1249913   +   MntSweetProducts ,
1249914   +   MntWines ,
1249915   +   MonthsAsCustomer ,
1249916   +   NumCatalogPurchases ,
1249917   +   NumDealsPurchases ,
1249918   +   NumDistPurchases ,
1249919   +   NumStorePurchases ,
1249920   +   NumWebPurchases ,
1249921   +   NumWebVisitsMonth ,
1249922   +   RFMstat ,
1249923   +   RMntFrq ,
1249924   +   Recency ,
1249925   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
1249926   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1249927   +
1249928   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1249929   +END;
MPRINT(EM_DIAGRAM):   END;
1249930   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1249931   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
1249932   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1249933   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1249934   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1249935   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1249936   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1249937   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1249938   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1249939   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1249940   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1249941   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1249942   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1249943   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1249944   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1249945   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1249946   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1249947   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1249948   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1249949   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1249950   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1249951   +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
1249952   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 *
MonthsAsCustomer ;
1249953   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1249954   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1249955   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1249956   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1249957   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1249958   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1249959   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1249960   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1249961   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1249962   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1249963   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1249964   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1249965   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1249966   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1249967   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1249968   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1249969   +END;
MPRINT(EM_DIAGRAM):   END;
1249970   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1249971   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1249972   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1249973   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1249974   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1249975   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1249976   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1249977   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1249978   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1249979   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1249980   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1249981   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1249982   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1249983   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1249984   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1249985   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1249986   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1249987   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1249988   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1249989   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1249990   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1249991   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1249992   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1249993   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1249994   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1249995   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1249996   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1249997   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1249998   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1249999   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1250000   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1250001   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1250002   +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
1250003   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 *
MonthsAsCustomer ;
1250004   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1250005   +   ELSE S_NumCatalogPurchases
1250006   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1250007   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1250008   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1250009   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1250010   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1250011   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1250012   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1250013   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1250014   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1250015   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1250016   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1250017   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1250018   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1250019   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1250020   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1250021   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1250022   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1250023   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1250024   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1250025   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1250026   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1250027   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1250028   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1250029   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1250030   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1250031   +END;
MPRINT(EM_DIAGRAM):   END;
1250032   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1250033   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
1250034   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1250035   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1250036   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
1250037   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1250038   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1250039   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
1250040   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1250041   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1250042   +   H1x1_1  =     0.63316204656896 * S_AcceptedCmpTotal
1250043   +          +    -0.24884200883415 * S_Age  +      -0.236584005151 * S_Frq
1250044   +          +     0.25406117591995 * S_Income  +    -0.56304122955704 *
1250045   +        S_Kidhome  +    -0.23687782938793 * S_Mnt  +    -0.09770906650074 *
1250046   +        S_MntFishProducts  +    -0.73487360819716 * S_MntFruits
1250047   +          +     0.14293909908147 * S_MntGoldProds  +     2.25015000307426 *
1250048   +        S_MntMeatProducts  +    -0.42178958150661 * S_MntSweetProducts
1250049   +          +    -2.35340366839307 * S_MntWines  +    -0.02380265380154 *
1250050   +        S_MonthsAsCustomer  +     1.16509321438746 * S_NumCatalogPurchases
1250051   +          +     1.17276395296242 * S_NumDealsPurchases
1250052   +          +     0.26632768295477 * S_NumDistPurchases
1250053   +          +    -1.26575615903579 * S_NumStorePurchases
1250054   +          +    -0.95316107557927 * S_NumWebPurchases
1250055   +          +     1.01828574356487 * S_NumWebVisitsMonth
1250056   +          +       0.795866263515 * S_RFMstat  +    -0.20490378142832 *
1250057   +        S_RMntFrq  +    -0.82943281422857 * S_Recency
1250058   +          +     0.16132418388418 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.63316204656896 * S_AcceptedCmpTotal + -0.24884200883415 *
S_Age + -0.236584005151 * S_Frq + 0.25406117591995 * S_Income + -0.56304122955704 * S_Kidhome
+ -0.23687782938793 * S_Mnt + -0.09770906650074 * S_MntFishProducts + -0.73487360819716 *
S_MntFruits + 0.14293909908147 * S_MntGoldProds + 2.25015000307426 * S_MntMeatProducts +
-0.42178958150661 * S_MntSweetProducts + -2.35340366839307 * S_MntWines + -0.02380265380154 *
S_MonthsAsCustomer + 1.16509321438746 * S_NumCatalogPurchases + 1.17276395296242 *
S_NumDealsPurchases + 0.26632768295477 * S_NumDistPurchases + -1.26575615903579 *
S_NumStorePurchases + -0.95316107557927 * S_NumWebPurchases + 1.01828574356487 *
S_NumWebVisitsMonth + 0.795866263515 * S_RFMstat + -0.20490378142832 * S_RMntFrq +
-0.82943281422857 * S_Recency + 0.16132418388418 * S_Teenhome ;
1250059   +   H1x1_2  =    -0.43482920479481 * S_AcceptedCmpTotal
1250060   +          +     0.53350211221915 * S_Age  +    -0.06797700766223 * S_Frq
1250061   +          +     0.13771322007949 * S_Income  +     0.87012019559698 *
1250062   +        S_Kidhome  +     0.06026853274247 * S_Mnt  +    -0.43150595882972 *
1250063   +        S_MntFishProducts  +    -0.13728591661063 * S_MntFruits
1250064   +          +     0.35443873962923 * S_MntGoldProds  +     0.28102965401547 *
1250065   +        S_MntMeatProducts  +     0.52367949052365 * S_MntSweetProducts
1250066   +          +     0.35553595364078 * S_MntWines  +     0.37892120128383 *
1250067   +        S_MonthsAsCustomer  +     0.59057645965187 * S_NumCatalogPurchases
1250068   +          +     1.14485571201233 * S_NumDealsPurchases
1250069   +          +     0.21414266588987 * S_NumDistPurchases
1250070   +          +    -0.10530090074297 * S_NumStorePurchases
1250071   +          +    -0.41712321238458 * S_NumWebPurchases
1250072   +          +    -0.99760766791108 * S_NumWebVisitsMonth
1250073   +          +    -0.90203265666387 * S_RFMstat  +    -0.60947922673601 *
1250074   +        S_RMntFrq  +     1.10040128548883 * S_Recency
1250075   +          +     0.16728431679949 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.43482920479481 * S_AcceptedCmpTotal + 0.53350211221915 *
S_Age + -0.06797700766223 * S_Frq + 0.13771322007949 * S_Income + 0.87012019559698 * S_Kidhome
+ 0.06026853274247 * S_Mnt + -0.43150595882972 * S_MntFishProducts + -0.13728591661063 *
S_MntFruits + 0.35443873962923 * S_MntGoldProds + 0.28102965401547 * S_MntMeatProducts +
0.52367949052365 * S_MntSweetProducts + 0.35553595364078 * S_MntWines + 0.37892120128383 *
S_MonthsAsCustomer + 0.59057645965187 * S_NumCatalogPurchases + 1.14485571201233 *
S_NumDealsPurchases + 0.21414266588987 * S_NumDistPurchases + -0.10530090074297 *
S_NumStorePurchases + -0.41712321238458 * S_NumWebPurchases + -0.99760766791108 *
S_NumWebVisitsMonth + -0.90203265666387 * S_RFMstat + -0.60947922673601 * S_RMntFrq +
1.10040128548883 * S_Recency + 0.16728431679949 * S_Teenhome ;
1250076   +   H1x1_3  =     0.26373486938499 * S_AcceptedCmpTotal
1250077   +          +    -0.22246756314756 * S_Age  +     0.49537720979115 * S_Frq
1250078   +          +     1.38815981786544 * S_Income  +    -0.93015968695331 *
1250079   +        S_Kidhome  +     0.11586216615481 * S_Mnt  +    -0.02105973515345 *
1250080   +        S_MntFishProducts  +    -0.28078442249811 * S_MntFruits
1250081   +          +    -0.01763878655129 * S_MntGoldProds  +     0.83934619541231 *
1250082   +        S_MntMeatProducts  +    -0.23417310915433 * S_MntSweetProducts
1250083   +          +    -0.29135819585991 * S_MntWines  +    -0.20792872642036 *
1250084   +        S_MonthsAsCustomer  +     1.05218745810839 * S_NumCatalogPurchases
1250085   +          +      0.7196418967437 * S_NumDealsPurchases
1250086   +          +     0.69035286374177 * S_NumDistPurchases
1250087   +          +     0.38027656631135 * S_NumStorePurchases
1250088   +          +    -0.18878358997924 * S_NumWebPurchases
1250089   +          +     1.61962062004798 * S_NumWebVisitsMonth
1250090   +          +    -0.04575386719745 * S_RFMstat  +     1.16358450490635 *
1250091   +        S_RMntFrq  +    -2.13821542142822 * S_Recency
1250092   +          +    -1.28960355207697 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.26373486938499 * S_AcceptedCmpTotal + -0.22246756314756 *
S_Age + 0.49537720979115 * S_Frq + 1.38815981786544 * S_Income + -0.93015968695331 * S_Kidhome
+ 0.11586216615481 * S_Mnt + -0.02105973515345 * S_MntFishProducts + -0.28078442249811 *
S_MntFruits + -0.01763878655129 * S_MntGoldProds + 0.83934619541231 * S_MntMeatProducts +
-0.23417310915433 * S_MntSweetProducts + -0.29135819585991 * S_MntWines + -0.20792872642036 *
S_MonthsAsCustomer + 1.05218745810839 * S_NumCatalogPurchases + 0.7196418967437 *
S_NumDealsPurchases + 0.69035286374177 * S_NumDistPurchases + 0.38027656631135 *
S_NumStorePurchases + -0.18878358997924 * S_NumWebPurchases + 1.61962062004798 *
S_NumWebVisitsMonth + -0.04575386719745 * S_RFMstat + 1.16358450490635 * S_RMntFrq +
-2.13821542142822 * S_Recency + -1.28960355207697 * S_Teenhome ;
1250093   +   H1x1_4  =    -0.34331113295243 * S_AcceptedCmpTotal
1250094   +          +    -0.39878146063012 * S_Age  +     0.10068367322473 * S_Frq
1250095   +          +    -0.20171643525685 * S_Income  +    -0.76934260520569 *
1250096   +        S_Kidhome  +    -0.66782690219397 * S_Mnt  +     0.80905970181803 *
1250097   +        S_MntFishProducts  +    -0.03688782193215 * S_MntFruits
1250098   +          +     0.06641568264972 * S_MntGoldProds  +    -3.32390323965822 *
1250099   +        S_MntMeatProducts  +    -0.05413014598032 * S_MntSweetProducts
1250100   +          +     1.07708707113306 * S_MntWines  +     0.13185264889978 *
1250101   +        S_MonthsAsCustomer  +    -0.39476201074171 * S_NumCatalogPurchases
1250102   +          +    -0.00642902007204 * S_NumDealsPurchases
1250103   +          +     0.29785069480367 * S_NumDistPurchases
1250104   +          +    -0.42243322063147 * S_NumStorePurchases
1250105   +          +     0.54880896338383 * S_NumWebPurchases
1250106   +          +    -0.12525846016886 * S_NumWebVisitsMonth
1250107   +          +    -0.31397100953189 * S_RFMstat  +     -0.5192863720509 *
1250108   +        S_RMntFrq  +     0.10252211581449 * S_Recency
1250109   +          +     0.44223031313104 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.34331113295243 * S_AcceptedCmpTotal + -0.39878146063012 *
S_Age + 0.10068367322473 * S_Frq + -0.20171643525685 * S_Income + -0.76934260520569 *
S_Kidhome + -0.66782690219397 * S_Mnt + 0.80905970181803 * S_MntFishProducts +
-0.03688782193215 * S_MntFruits + 0.06641568264972 * S_MntGoldProds + -3.32390323965822 *
S_MntMeatProducts + -0.05413014598032 * S_MntSweetProducts + 1.07708707113306 * S_MntWines +
0.13185264889978 * S_MonthsAsCustomer + -0.39476201074171 * S_NumCatalogPurchases +
-0.00642902007204 * S_NumDealsPurchases + 0.29785069480367 * S_NumDistPurchases +
-0.42243322063147 * S_NumStorePurchases + 0.54880896338383 * S_NumWebPurchases +
-0.12525846016886 * S_NumWebVisitsMonth + -0.31397100953189 * S_RFMstat + -0.5192863720509 *
S_RMntFrq + 0.10252211581449 * S_Recency + 0.44223031313104 * S_Teenhome ;
1250110   +   H1x1_5  =    -0.89949577087728 * S_AcceptedCmpTotal
1250111   +          +     -0.5133669560115 * S_Age  +     0.55814120515869 * S_Frq
1250112   +          +    -0.72790553700689 * S_Income  +     1.13470491167406 *
1250113   +        S_Kidhome  +     0.42465795563071 * S_Mnt  +     0.22642900369653 *
1250114   +        S_MntFishProducts  +    -0.10149694753146 * S_MntFruits
1250115   +          +    -0.05203167914723 * S_MntGoldProds  +    -0.42300460593042 *
1250116   +        S_MntMeatProducts  +    -0.11178206624825 * S_MntSweetProducts
1250117   +          +     1.57257994445012 * S_MntWines  +     0.02297554927807 *
1250118   +        S_MonthsAsCustomer  +    -0.60721423552141 * S_NumCatalogPurchases
1250119   +          +    -0.48404738328225 * S_NumDealsPurchases
1250120   +          +    -0.02464180457879 * S_NumDistPurchases
1250121   +          +     1.17201831082067 * S_NumStorePurchases
1250122   +          +     0.57453655167516 * S_NumWebPurchases
1250123   +          +    -1.94417019790248 * S_NumWebVisitsMonth
1250124   +          +     0.00073301476364 * S_RFMstat  +     0.12295343326875 *
1250125   +        S_RMntFrq  +      1.6169916658132 * S_Recency
1250126   +          +     0.09488579305439 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.89949577087728 * S_AcceptedCmpTotal + -0.5133669560115 *
S_Age + 0.55814120515869 * S_Frq + -0.72790553700689 * S_Income + 1.13470491167406 * S_Kidhome
+ 0.42465795563071 * S_Mnt + 0.22642900369653 * S_MntFishProducts + -0.10149694753146 *
S_MntFruits + -0.05203167914723 * S_MntGoldProds + -0.42300460593042 * S_MntMeatProducts +
-0.11178206624825 * S_MntSweetProducts + 1.57257994445012 * S_MntWines + 0.02297554927807 *
S_MonthsAsCustomer + -0.60721423552141 * S_NumCatalogPurchases + -0.48404738328225 *
S_NumDealsPurchases + -0.02464180457879 * S_NumDistPurchases + 1.17201831082067 *
S_NumStorePurchases + 0.57453655167516 * S_NumWebPurchases + -1.94417019790248 *
S_NumWebVisitsMonth + 0.00073301476364 * S_RFMstat + 0.12295343326875 * S_RMntFrq +
1.6169916658132 * S_Recency + 0.09488579305439 * S_Teenhome ;
1250127   +   H1x1_6  =     0.01224996381937 * S_AcceptedCmpTotal
1250128   +          +     0.56818460209578 * S_Age  +    -0.50544994791872 * S_Frq
1250129   +          +    -0.39086889823619 * S_Income  +      0.2278709145292 *
1250130   +        S_Kidhome  +       0.221310975162 * S_Mnt  +     -0.2208719427117 *
1250131   +        S_MntFishProducts  +     0.33199116637803 * S_MntFruits
1250132   +          +    -0.20919304257884 * S_MntGoldProds  +     0.85155045239396 *
1250133   +        S_MntMeatProducts  +     0.32150401526792 * S_MntSweetProducts
1250134   +          +     0.24789026157513 * S_MntWines  +    -0.16427340869887 *
1250135   +        S_MonthsAsCustomer  +    -1.31657293247686 * S_NumCatalogPurchases
1250136   +          +    -1.49850531967483 * S_NumDealsPurchases
1250137   +          +    -0.82105466264223 * S_NumDistPurchases
1250138   +          +     0.29984603642824 * S_NumStorePurchases
1250139   +          +     0.06557123721611 * S_NumWebPurchases
1250140   +          +     1.04754749365002 * S_NumWebVisitsMonth
1250141   +          +     0.18881248406892 * S_RFMstat  +     0.26455728766984 *
1250142   +        S_RMntFrq  +     0.12396789666359 * S_Recency
1250143   +          +     0.04001049603668 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0.01224996381937 * S_AcceptedCmpTotal + 0.56818460209578 *
S_Age + -0.50544994791872 * S_Frq + -0.39086889823619 * S_Income + 0.2278709145292 * S_Kidhome
+ 0.221310975162 * S_Mnt + -0.2208719427117 * S_MntFishProducts + 0.33199116637803 *
S_MntFruits + -0.20919304257884 * S_MntGoldProds + 0.85155045239396 * S_MntMeatProducts +
0.32150401526792 * S_MntSweetProducts + 0.24789026157513 * S_MntWines + -0.16427340869887 *
S_MonthsAsCustomer + -1.31657293247686 * S_NumCatalogPurchases + -1.49850531967483 *
S_NumDealsPurchases + -0.82105466264223 * S_NumDistPurchases + 0.29984603642824 *
S_NumStorePurchases + 0.06557123721611 * S_NumWebPurchases + 1.04754749365002 *
S_NumWebVisitsMonth + 0.18881248406892 * S_RFMstat + 0.26455728766984 * S_RMntFrq +
0.12396789666359 * S_Recency + 0.04001049603668 * S_Teenhome ;
1250144   +   H1x1_1  = H1x1_1  +     -0.4293641198863 * AcceptedCmp10
1250145   +          +    -0.02562823362815 * AcceptedCmp20  +     0.16277388616218 *
1250146   +        AcceptedCmp30  +    -0.38952498475664 * AcceptedCmp40
1250147   +          +    -0.13756852377245 * AcceptedCmp50  +    -0.11393239206883 *
1250148   +        Complain0  +    -0.18422159910382 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.4293641198863 * AcceptedCmp10 + -0.02562823362815 *
AcceptedCmp20 + 0.16277388616218 * AcceptedCmp30 + -0.38952498475664 * AcceptedCmp40 +
-0.13756852377245 * AcceptedCmp50 + -0.11393239206883 * Complain0 + -0.18422159910382 *
HigherEducationBinary0 ;
1250149   +   H1x1_2  = H1x1_2  +     -0.6690011671322 * AcceptedCmp10
1250150   +          +     0.30944418540454 * AcceptedCmp20  +     0.58989055832198 *
1250151   +        AcceptedCmp30  +    -0.11349554378017 * AcceptedCmp40
1250152   +          +     0.17747537507545 * AcceptedCmp50  +     0.31141201787728 *
1250153   +        Complain0  +    -0.14665102087088 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.6690011671322 * AcceptedCmp10 + 0.30944418540454 *
AcceptedCmp20 + 0.58989055832198 * AcceptedCmp30 + -0.11349554378017 * AcceptedCmp40 +
0.17747537507545 * AcceptedCmp50 + 0.31141201787728 * Complain0 + -0.14665102087088 *
HigherEducationBinary0 ;
1250154   +   H1x1_3  = H1x1_3  +    -0.37718551551154 * AcceptedCmp10
1250155   +          +    -0.95419836616858 * AcceptedCmp20  +    -1.07782642598822 *
1250156   +        AcceptedCmp30  +    -0.36181507758379 * AcceptedCmp40
1250157   +          +    -0.20579221441057 * AcceptedCmp50  +     -0.2862570173476 *
1250158   +        Complain0  +     0.42095042003574 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.37718551551154 * AcceptedCmp10 + -0.95419836616858
* AcceptedCmp20 + -1.07782642598822 * AcceptedCmp30 + -0.36181507758379 * AcceptedCmp40 +
-0.20579221441057 * AcceptedCmp50 + -0.2862570173476 * Complain0 + 0.42095042003574 *
HigherEducationBinary0 ;
1250159   +   H1x1_4  = H1x1_4  +     0.76282838117383 * AcceptedCmp10
1250160   +          +     0.17657215690894 * AcceptedCmp20  +     0.06936093547655 *
1250161   +        AcceptedCmp30  +    -0.31222684620157 * AcceptedCmp40
1250162   +          +     0.35916828202502 * AcceptedCmp50  +     0.15464859425769 *
1250163   +        Complain0  +    -0.12780871374988 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.76282838117383 * AcceptedCmp10 + 0.17657215690894 *
AcceptedCmp20 + 0.06936093547655 * AcceptedCmp30 + -0.31222684620157 * AcceptedCmp40 +
0.35916828202502 * AcceptedCmp50 + 0.15464859425769 * Complain0 + -0.12780871374988 *
HigherEducationBinary0 ;
1250164   +   H1x1_5  = H1x1_5  +      0.0863832283968 * AcceptedCmp10
1250165   +          +    -0.01478152334234 * AcceptedCmp20  +    -0.25793605794945 *
1250166   +        AcceptedCmp30  +     0.75328991260718 * AcceptedCmp40
1250167   +          +     0.43869592545355 * AcceptedCmp50  +    -0.18444801256895 *
1250168   +        Complain0  +    -0.18540568245616 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 0.0863832283968 * AcceptedCmp10 + -0.01478152334234 *
AcceptedCmp20 + -0.25793605794945 * AcceptedCmp30 + 0.75328991260718 * AcceptedCmp40 +
0.43869592545355 * AcceptedCmp50 + -0.18444801256895 * Complain0 + -0.18540568245616 *
HigherEducationBinary0 ;
1250169   +   H1x1_6  = H1x1_6  +    -0.05476883960444 * AcceptedCmp10
1250170   +          +    -0.30796660956747 * AcceptedCmp20  +    -0.15332998700386 *
1250171   +        AcceptedCmp30  +     0.07190305484507 * AcceptedCmp40
1250172   +          +    -0.19344551087023 * AcceptedCmp50  +    -0.01671794402922 *
1250173   +        Complain0  +      0.4224003744836 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + -0.05476883960444 * AcceptedCmp10 + -0.30796660956747
* AcceptedCmp20 + -0.15332998700386 * AcceptedCmp30 + 0.07190305484507 * AcceptedCmp40 +
-0.19344551087023 * AcceptedCmp50 + -0.01671794402922 * Complain0 + 0.4224003744836 *
HigherEducationBinary0 ;
1250174   +   H1x1_1  = H1x1_1  +     0.06740641383122 * Education2n_Cycle
1250175   +          +      0.0427985447056 * EducationBasic  +     0.38043688251433 *
1250176   +        EducationGraduation  +     0.07595631354847 * EducationMaster
1250177   +          +     0.24583509957712 * Marital_StatusDivorced
1250178   +          +    -0.22681931588361 * Marital_StatusMarried
1250179   +          +    -0.12924106229536 * Marital_StatusSingle
1250180   +          +     -0.2262058185403 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.06740641383122 * Education2n_Cycle + 0.0427985447056
* EducationBasic + 0.38043688251433 * EducationGraduation + 0.07595631354847 * EducationMaster
+ 0.24583509957712 * Marital_StatusDivorced + -0.22681931588361 * Marital_StatusMarried +
-0.12924106229536 * Marital_StatusSingle + -0.2262058185403 * Marital_StatusTogether ;
1250181   +   H1x1_2  = H1x1_2  +    -0.13120690973481 * Education2n_Cycle
1250182   +          +     0.37925506295244 * EducationBasic  +     0.31784700588218 *
1250183   +        EducationGraduation  +     0.23015089246655 * EducationMaster
1250184   +          +    -0.12585334311068 * Marital_StatusDivorced
1250185   +          +    -0.20835502467207 * Marital_StatusMarried
1250186   +          +    -0.13839534449368 * Marital_StatusSingle
1250187   +          +     0.64317572477668 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.13120690973481 * Education2n_Cycle +
0.37925506295244 * EducationBasic + 0.31784700588218 * EducationGraduation + 0.23015089246655
* EducationMaster + -0.12585334311068 * Marital_StatusDivorced + -0.20835502467207 *
Marital_StatusMarried + -0.13839534449368 * Marital_StatusSingle + 0.64317572477668 *
Marital_StatusTogether ;
1250188   +   H1x1_3  = H1x1_3  +     0.32305785926236 * Education2n_Cycle
1250189   +          +     0.23464353160373 * EducationBasic  +    -0.73832644067678 *
1250190   +        EducationGraduation  +    -0.03608560158257 * EducationMaster
1250191   +          +     0.35106363238113 * Marital_StatusDivorced
1250192   +          +     -1.3414808583918 * Marital_StatusMarried
1250193   +          +     1.40835320798486 * Marital_StatusSingle
1250194   +          +    -1.26805917396788 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.32305785926236 * Education2n_Cycle +
0.23464353160373 * EducationBasic + -0.73832644067678 * EducationGraduation +
-0.03608560158257 * EducationMaster + 0.35106363238113 * Marital_StatusDivorced +
-1.3414808583918 * Marital_StatusMarried + 1.40835320798486 * Marital_StatusSingle +
-1.26805917396788 * Marital_StatusTogether ;
1250195   +   H1x1_4  = H1x1_4  +    -0.14516593990466 * Education2n_Cycle
1250196   +          +     0.21457892528906 * EducationBasic  +      0.3693312496431 *
1250197   +        EducationGraduation  +      0.1746658332011 * EducationMaster
1250198   +          +     0.48174546958393 * Marital_StatusDivorced
1250199   +          +    -0.41416978858191 * Marital_StatusMarried
1250200   +          +    -0.23376801546265 * Marital_StatusSingle
1250201   +          +    -0.40569257078897 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.14516593990466 * Education2n_Cycle +
0.21457892528906 * EducationBasic + 0.3693312496431 * EducationGraduation + 0.1746658332011 *
EducationMaster + 0.48174546958393 * Marital_StatusDivorced + -0.41416978858191 *
Marital_StatusMarried + -0.23376801546265 * Marital_StatusSingle + -0.40569257078897 *
Marital_StatusTogether ;
1250202   +   H1x1_5  = H1x1_5  +    -0.00489214718621 * Education2n_Cycle
1250203   +          +     0.04788059649714 * EducationBasic  +      -0.479003778409 *
1250204   +        EducationGraduation  +     0.68875064631577 * EducationMaster
1250205   +          +    -0.67557643774246 * Marital_StatusDivorced
1250206   +          +     1.63844045917367 * Marital_StatusMarried
1250207   +          +    -0.70320960247699 * Marital_StatusSingle
1250208   +          +     1.26350112628909 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.00489214718621 * Education2n_Cycle +
0.04788059649714 * EducationBasic + -0.479003778409 * EducationGraduation + 0.68875064631577 *
EducationMaster + -0.67557643774246 * Marital_StatusDivorced + 1.63844045917367 *
Marital_StatusMarried + -0.70320960247699 * Marital_StatusSingle + 1.26350112628909 *
Marital_StatusTogether ;
1250209   +   H1x1_6  = H1x1_6  +     0.38566123849432 * Education2n_Cycle
1250210   +          +    -0.48006357411447 * EducationBasic  +     0.06594567975069 *
1250211   +        EducationGraduation  +    -0.68011360002443 * EducationMaster
1250212   +          +    -0.11371453086883 * Marital_StatusDivorced
1250213   +          +    -0.34226997176291 * Marital_StatusMarried
1250214   +          +    -1.01568676685754 * Marital_StatusSingle
1250215   +          +    -0.07673228755579 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + 0.38566123849432 * Education2n_Cycle +
-0.48006357411447 * EducationBasic + 0.06594567975069 * EducationGraduation +
-0.68011360002443 * EducationMaster + -0.11371453086883 * Marital_StatusDivorced +
-0.34226997176291 * Marital_StatusMarried + -1.01568676685754 * Marital_StatusSingle +
-0.07673228755579 * Marital_StatusTogether ;
1250216   +   H1x1_1  =    -0.13665586104906 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.13665586104906 + H1x1_1 ;
1250217   +   H1x1_2  =    -1.74128345271319 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -1.74128345271319 + H1x1_2 ;
1250218   +   H1x1_3  =    -0.38226400326342 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.38226400326342 + H1x1_3 ;
1250219   +   H1x1_4  =    -0.64652756521333 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.64652756521333 + H1x1_4 ;
1250220   +   H1x1_5  =     0.89555568414722 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0.89555568414722 + H1x1_5 ;
1250221   +   H1x1_6  =    -0.28536788363505 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -0.28536788363505 + H1x1_6 ;
1250222   +   H1x1_7  = 0;
MPRINT(EM_DIAGRAM):   H1x1_7 = 0;
1250223   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 , H1x1_7
1250224   +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 ,
H1x1_7 );
1250225   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1250226   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
1250227   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
1250228   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
1250229   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
1250230   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
1250231   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
1250232   +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
1250233   +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
1250234   +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
1250235   +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
1250236   +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
1250237   +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
1250238   +   H1x1_7  = EXP(H1x1_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_7 = EXP(H1x1_7 - _MAX_);
1250239   +   _SUM_ = _SUM_ + H1x1_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_7 ;
1250240   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
1250241   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
1250242   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
1250243   +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
1250244   +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
1250245   +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
1250246   +   H1x1_7  = H1x1_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_7 = H1x1_7 / _SUM_;
1250247   +END;
MPRINT(EM_DIAGRAM):   END;
1250248   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1250249   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
1250250   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
1250251   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
1250252   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
1250253   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
1250254   +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
1250255   +   H1x1_7  = .;
MPRINT(EM_DIAGRAM):   H1x1_7 = .;
1250256   +END;
MPRINT(EM_DIAGRAM):   END;
1250257   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1250258   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
1250259   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1250260   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1250261   +   H1x2_1  =    -0.46863593010465 * S_AcceptedCmpTotal
1250262   +          +     0.76938995153422 * S_Age  +    -0.10870665325086 * S_Frq
1250263   +          +    -0.01767709917897 * S_Income  +    -0.06564852978687 *
1250264   +        S_Kidhome  +     1.53975855599943 * S_Mnt  +     0.14885556549813 *
1250265   +        S_MntFishProducts  +     -0.3427211596875 * S_MntFruits
1250266   +          +     1.82311511422571 * S_MntGoldProds  +     1.16814585484266 *
1250267   +        S_MntMeatProducts  +    -0.03210183211362 * S_MntSweetProducts
1250268   +          +     0.21048598967441 * S_MntWines  +    -1.43075224286158 *
1250269   +        S_MonthsAsCustomer  +     0.17264791017938 * S_NumCatalogPurchases
1250270   +          +    -0.87259051567474 * S_NumDealsPurchases
1250271   +          +    -0.36454149529139 * S_NumDistPurchases
1250272   +          +     0.12447759925061 * S_NumStorePurchases
1250273   +          +    -1.08133487947367 * S_NumWebPurchases
1250274   +          +    -0.49882157745454 * S_NumWebVisitsMonth
1250275   +          +    -1.37163643041927 * S_RFMstat  +    -2.02270778627266 *
1250276   +        S_RMntFrq  +    -0.01174101172444 * S_Recency
1250277   +          +     1.37307999964517 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.46863593010465 * S_AcceptedCmpTotal + 0.76938995153422 *
S_Age + -0.10870665325086 * S_Frq + -0.01767709917897 * S_Income + -0.06564852978687 *
S_Kidhome + 1.53975855599943 * S_Mnt + 0.14885556549813 * S_MntFishProducts + -0.3427211596875
* S_MntFruits + 1.82311511422571 * S_MntGoldProds + 1.16814585484266 * S_MntMeatProducts +
-0.03210183211362 * S_MntSweetProducts + 0.21048598967441 * S_MntWines + -1.43075224286158 *
S_MonthsAsCustomer + 0.17264791017938 * S_NumCatalogPurchases + -0.87259051567474 *
S_NumDealsPurchases + -0.36454149529139 * S_NumDistPurchases + 0.12447759925061 *
S_NumStorePurchases + -1.08133487947367 * S_NumWebPurchases + -0.49882157745454 *
S_NumWebVisitsMonth + -1.37163643041927 * S_RFMstat + -2.02270778627266 * S_RMntFrq +
-0.01174101172444 * S_Recency + 1.37307999964517 * S_Teenhome ;
1250278   +   H1x2_2  =     0.31979674377303 * S_AcceptedCmpTotal
1250279   +          +    -1.13516841608912 * S_Age  +     1.57640145941914 * S_Frq
1250280   +          +    -0.58468039509557 * S_Income  +    -1.78015996883174 *
1250281   +        S_Kidhome  +     0.51311311640127 * S_Mnt  +     0.07011815519915 *
1250282   +        S_MntFishProducts  +     0.73204832291164 * S_MntFruits
1250283   +          +     1.50837189353633 * S_MntGoldProds  +     1.39487443576743 *
1250284   +        S_MntMeatProducts  +      0.6943398196475 * S_MntSweetProducts
1250285   +          +    -0.36693028595681 * S_MntWines  +     0.86802033237442 *
1250286   +        S_MonthsAsCustomer  +     0.02384797538091 * S_NumCatalogPurchases
1250287   +          +     2.23121497416403 * S_NumDealsPurchases
1250288   +          +    -0.48674842191071 * S_NumDistPurchases
1250289   +          +     1.77510728607544 * S_NumStorePurchases
1250290   +          +     0.14647433155436 * S_NumWebPurchases
1250291   +          +    -0.95892686924419 * S_NumWebVisitsMonth
1250292   +          +    -0.26496935918704 * S_RFMstat  +     2.48765485222223 *
1250293   +        S_RMntFrq  +     2.46497777428475 * S_Recency
1250294   +          +    -0.62872033383484 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.31979674377303 * S_AcceptedCmpTotal + -1.13516841608912 *
S_Age + 1.57640145941914 * S_Frq + -0.58468039509557 * S_Income + -1.78015996883174 *
S_Kidhome + 0.51311311640127 * S_Mnt + 0.07011815519915 * S_MntFishProducts + 0.73204832291164
* S_MntFruits + 1.50837189353633 * S_MntGoldProds + 1.39487443576743 * S_MntMeatProducts +
0.6943398196475 * S_MntSweetProducts + -0.36693028595681 * S_MntWines + 0.86802033237442 *
S_MonthsAsCustomer + 0.02384797538091 * S_NumCatalogPurchases + 2.23121497416403 *
S_NumDealsPurchases + -0.48674842191071 * S_NumDistPurchases + 1.77510728607544 *
S_NumStorePurchases + 0.14647433155436 * S_NumWebPurchases + -0.95892686924419 *
S_NumWebVisitsMonth + -0.26496935918704 * S_RFMstat + 2.48765485222223 * S_RMntFrq +
2.46497777428475 * S_Recency + -0.62872033383484 * S_Teenhome ;
1250295   +   H1x2_3  =    -0.31142826583944 * S_AcceptedCmpTotal
1250296   +          +    -1.14828049895929 * S_Age  +    -0.54227584627485 * S_Frq
1250297   +          +     0.26826674711688 * S_Income  +     0.17643820666347 *
1250298   +        S_Kidhome  +    -0.12427430981043 * S_Mnt  +     0.18056887427376 *
1250299   +        S_MntFishProducts  +    -0.63010248821544 * S_MntFruits
1250300   +          +    -0.81391687529252 * S_MntGoldProds  +    -1.12306166734361 *
1250301   +        S_MntMeatProducts  +     0.92339010601965 * S_MntSweetProducts
1250302   +          +    -2.05510990050543 * S_MntWines  +    -2.02060586903244 *
1250303   +        S_MonthsAsCustomer  +     0.98841836752178 * S_NumCatalogPurchases
1250304   +          +     0.14338855349611 * S_NumDealsPurchases
1250305   +          +    -2.21071010829235 * S_NumDistPurchases
1250306   +          +    -0.21795889348002 * S_NumStorePurchases
1250307   +          +     1.98825087883535 * S_NumWebPurchases
1250308   +          +     1.02482442531149 * S_NumWebVisitsMonth
1250309   +          +    -0.47662143614905 * S_RFMstat  +    -0.17167385440535 *
1250310   +        S_RMntFrq  +     -1.0288777281766 * S_Recency
1250311   +          +    -0.10646747275734 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.31142826583944 * S_AcceptedCmpTotal + -1.14828049895929 *
S_Age + -0.54227584627485 * S_Frq + 0.26826674711688 * S_Income + 0.17643820666347 * S_Kidhome
+ -0.12427430981043 * S_Mnt + 0.18056887427376 * S_MntFishProducts + -0.63010248821544 *
S_MntFruits + -0.81391687529252 * S_MntGoldProds + -1.12306166734361 * S_MntMeatProducts +
0.92339010601965 * S_MntSweetProducts + -2.05510990050543 * S_MntWines + -2.02060586903244 *
S_MonthsAsCustomer + 0.98841836752178 * S_NumCatalogPurchases + 0.14338855349611 *
S_NumDealsPurchases + -2.21071010829235 * S_NumDistPurchases + -0.21795889348002 *
S_NumStorePurchases + 1.98825087883535 * S_NumWebPurchases + 1.02482442531149 *
S_NumWebVisitsMonth + -0.47662143614905 * S_RFMstat + -0.17167385440535 * S_RMntFrq +
-1.0288777281766 * S_Recency + -0.10646747275734 * S_Teenhome ;
1250312   +   H1x2_4  =    -0.40813758620671 * S_AcceptedCmpTotal
1250313   +          +     0.16751361466296 * S_Age  +     0.61297021391662 * S_Frq
1250314   +          +     0.17708553296763 * S_Income  +    -0.23498000755537 *
1250315   +        S_Kidhome  +      0.6863853027948 * S_Mnt  +    -0.43649468589643 *
1250316   +        S_MntFishProducts  +    -1.03807059787368 * S_MntFruits
1250317   +          +     0.68988160282803 * S_MntGoldProds  +     1.76714128625705 *
1250318   +        S_MntMeatProducts  +     1.15458185366826 * S_MntSweetProducts
1250319   +          +     0.31267521045306 * S_MntWines  +    -3.18562841805634 *
1250320   +        S_MonthsAsCustomer  +     0.15316473812138 * S_NumCatalogPurchases
1250321   +          +     0.30041205661012 * S_NumDealsPurchases
1250322   +          +    -0.63499849986918 * S_NumDistPurchases
1250323   +          +    -0.34155713433714 * S_NumStorePurchases
1250324   +          +    -1.14183354933936 * S_NumWebPurchases
1250325   +          +    -0.42681980262973 * S_NumWebVisitsMonth
1250326   +          +    -0.18777676484111 * S_RFMstat  +      0.2522570278894 *
1250327   +        S_RMntFrq  +     1.25852246467612 * S_Recency
1250328   +          +     0.63333476238969 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.40813758620671 * S_AcceptedCmpTotal + 0.16751361466296 *
S_Age + 0.61297021391662 * S_Frq + 0.17708553296763 * S_Income + -0.23498000755537 * S_Kidhome
+ 0.6863853027948 * S_Mnt + -0.43649468589643 * S_MntFishProducts + -1.03807059787368 *
S_MntFruits + 0.68988160282803 * S_MntGoldProds + 1.76714128625705 * S_MntMeatProducts +
1.15458185366826 * S_MntSweetProducts + 0.31267521045306 * S_MntWines + -3.18562841805634 *
S_MonthsAsCustomer + 0.15316473812138 * S_NumCatalogPurchases + 0.30041205661012 *
S_NumDealsPurchases + -0.63499849986918 * S_NumDistPurchases + -0.34155713433714 *
S_NumStorePurchases + -1.14183354933936 * S_NumWebPurchases + -0.42681980262973 *
S_NumWebVisitsMonth + -0.18777676484111 * S_RFMstat + 0.2522570278894 * S_RMntFrq +
1.25852246467612 * S_Recency + 0.63333476238969 * S_Teenhome ;
1250329   +   H1x2_5  =     1.73048436159558 * S_AcceptedCmpTotal
1250330   +          +     1.91388487556197 * S_Age  +     0.14880026885923 * S_Frq
1250331   +          +      0.5905347897806 * S_Income  +     1.67048168226736 *
1250332   +        S_Kidhome  +     0.03869174467752 * S_Mnt  +    -0.71187911364266 *
1250333   +        S_MntFishProducts  +     0.93023590693473 * S_MntFruits
1250334   +          +     0.22907372790948 * S_MntGoldProds  +    -1.05941282177437 *
1250335   +        S_MntMeatProducts  +    -0.73905281508342 * S_MntSweetProducts
1250336   +          +     0.04429898588386 * S_MntWines  +    -0.47487263648723 *
1250337   +        S_MonthsAsCustomer  +     0.00382111008361 * S_NumCatalogPurchases
1250338   +          +    -0.21237915559831 * S_NumDealsPurchases
1250339   +          +     0.48256923764182 * S_NumDistPurchases
1250340   +          +    -0.45553093140641 * S_NumStorePurchases
1250341   +          +      0.5593655963659 * S_NumWebPurchases
1250342   +          +     0.27943768691188 * S_NumWebVisitsMonth
1250343   +          +     1.94452735574997 * S_RFMstat  +    -0.89811355261154 *
1250344   +        S_RMntFrq  +    -1.62796011550484 * S_Recency
1250345   +          +     0.60487421956906 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.73048436159558 * S_AcceptedCmpTotal + 1.91388487556197 *
S_Age + 0.14880026885923 * S_Frq + 0.5905347897806 * S_Income + 1.67048168226736 * S_Kidhome +
0.03869174467752 * S_Mnt + -0.71187911364266 * S_MntFishProducts + 0.93023590693473 *
S_MntFruits + 0.22907372790948 * S_MntGoldProds + -1.05941282177437 * S_MntMeatProducts +
-0.73905281508342 * S_MntSweetProducts + 0.04429898588386 * S_MntWines + -0.47487263648723 *
S_MonthsAsCustomer + 0.00382111008361 * S_NumCatalogPurchases + -0.21237915559831 *
S_NumDealsPurchases + 0.48256923764182 * S_NumDistPurchases + -0.45553093140641 *
S_NumStorePurchases + 0.5593655963659 * S_NumWebPurchases + 0.27943768691188 *
S_NumWebVisitsMonth + 1.94452735574997 * S_RFMstat + -0.89811355261154 * S_RMntFrq +
-1.62796011550484 * S_Recency + 0.60487421956906 * S_Teenhome ;
1250346   +   H1x2_6  =    -0.32010880515459 * S_AcceptedCmpTotal
1250347   +          +     0.95304983421791 * S_Age  +      -0.316044010281 * S_Frq
1250348   +          +     1.10925678578158 * S_Income  +     1.28019020117471 *
1250349   +        S_Kidhome  +     1.02498438668688 * S_Mnt  +     -1.8898236827792 *
1250350   +        S_MntFishProducts  +     0.96543971612672 * S_MntFruits
1250351   +          +    -0.21422669977227 * S_MntGoldProds  +     -0.0840639948559 *
1250352   +        S_MntMeatProducts  +     1.27902687109389 * S_MntSweetProducts
1250353   +          +    -1.38957846154598 * S_MntWines  +     0.80004372871482 *
1250354   +        S_MonthsAsCustomer  +    -0.19381123279552 * S_NumCatalogPurchases
1250355   +          +     2.38967021388062 * S_NumDealsPurchases
1250356   +          +    -0.97722398866481 * S_NumDistPurchases
1250357   +          +     1.57612333191312 * S_NumStorePurchases
1250358   +          +    -0.75968679115983 * S_NumWebPurchases
1250359   +          +    -0.64207187757251 * S_NumWebVisitsMonth
1250360   +          +     1.06529999122381 * S_RFMstat  +     0.67095385521555 *
1250361   +        S_RMntFrq  +     1.71313869798331 * S_Recency
1250362   +          +     1.39045686636707 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_6 = -0.32010880515459 * S_AcceptedCmpTotal + 0.95304983421791 *
S_Age + -0.316044010281 * S_Frq + 1.10925678578158 * S_Income + 1.28019020117471 * S_Kidhome +
1.02498438668688 * S_Mnt + -1.8898236827792 * S_MntFishProducts + 0.96543971612672 *
S_MntFruits + -0.21422669977227 * S_MntGoldProds + -0.0840639948559 * S_MntMeatProducts +
1.27902687109389 * S_MntSweetProducts + -1.38957846154598 * S_MntWines + 0.80004372871482 *
S_MonthsAsCustomer + -0.19381123279552 * S_NumCatalogPurchases + 2.38967021388062 *
S_NumDealsPurchases + -0.97722398866481 * S_NumDistPurchases + 1.57612333191312 *
S_NumStorePurchases + -0.75968679115983 * S_NumWebPurchases + -0.64207187757251 *
S_NumWebVisitsMonth + 1.06529999122381 * S_RFMstat + 0.67095385521555 * S_RMntFrq +
1.71313869798331 * S_Recency + 1.39045686636707 * S_Teenhome ;
1250363   +   H1x2_1  = H1x2_1  +    -1.32125124093028 * AcceptedCmp10
1250364   +          +    -0.61219063588492 * AcceptedCmp20  +     1.20821214973577 *
1250365   +        AcceptedCmp30  +    -1.13548727550981 * AcceptedCmp40
1250366   +          +     0.04405769197194 * AcceptedCmp50  +      0.7940658605271 *
1250367   +        Complain0  +     1.05933486404834 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -1.32125124093028 * AcceptedCmp10 + -0.61219063588492
* AcceptedCmp20 + 1.20821214973577 * AcceptedCmp30 + -1.13548727550981 * AcceptedCmp40 +
0.04405769197194 * AcceptedCmp50 + 0.7940658605271 * Complain0 + 1.05933486404834 *
HigherEducationBinary0 ;
1250368   +   H1x2_2  = H1x2_2  +     1.56313777120806 * AcceptedCmp10
1250369   +          +    -1.12997680537456 * AcceptedCmp20  +     1.19262470365504 *
1250370   +        AcceptedCmp30  +    -0.98995493161689 * AcceptedCmp40
1250371   +          +      -1.827141957557 * AcceptedCmp50  +    -0.43809188233899 *
1250372   +        Complain0  +      -0.627000653672 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 1.56313777120806 * AcceptedCmp10 + -1.12997680537456 *
AcceptedCmp20 + 1.19262470365504 * AcceptedCmp30 + -0.98995493161689 * AcceptedCmp40 +
-1.827141957557 * AcceptedCmp50 + -0.43809188233899 * Complain0 + -0.627000653672 *
HigherEducationBinary0 ;
1250373   +   H1x2_3  = H1x2_3  +     1.32174755827017 * AcceptedCmp10
1250374   +          +     1.00086479754098 * AcceptedCmp20  +      0.4636133487385 *
1250375   +        AcceptedCmp30  +     1.34878553883758 * AcceptedCmp40
1250376   +          +    -2.36241584924476 * AcceptedCmp50  +       1.082421071431 *
1250377   +        Complain0  +    -0.32514144517436 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 1.32174755827017 * AcceptedCmp10 + 1.00086479754098 *
AcceptedCmp20 + 0.4636133487385 * AcceptedCmp30 + 1.34878553883758 * AcceptedCmp40 +
-2.36241584924476 * AcceptedCmp50 + 1.082421071431 * Complain0 + -0.32514144517436 *
HigherEducationBinary0 ;
1250378   +   H1x2_4  = H1x2_4  +     0.39556775796131 * AcceptedCmp10
1250379   +          +     0.06457727211285 * AcceptedCmp20  +    -1.44632749800655 *
1250380   +        AcceptedCmp30  +     1.20294678514383 * AcceptedCmp40
1250381   +          +    -0.01594330886358 * AcceptedCmp50  +    -2.06895895180485 *
1250382   +        Complain0  +    -0.01374012569775 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.39556775796131 * AcceptedCmp10 + 0.06457727211285 *
AcceptedCmp20 + -1.44632749800655 * AcceptedCmp30 + 1.20294678514383 * AcceptedCmp40 +
-0.01594330886358 * AcceptedCmp50 + -2.06895895180485 * Complain0 + -0.01374012569775 *
HigherEducationBinary0 ;
1250383   +   H1x2_5  = H1x2_5  +     1.11945933535638 * AcceptedCmp10
1250384   +          +     0.26383973979566 * AcceptedCmp20  +    -0.40426240061746 *
1250385   +        AcceptedCmp30  +     1.46916781894719 * AcceptedCmp40
1250386   +          +     0.26827715088644 * AcceptedCmp50  +     1.50074465469998 *
1250387   +        Complain0  +     -1.0626185000486 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 1.11945933535638 * AcceptedCmp10 + 0.26383973979566 *
AcceptedCmp20 + -0.40426240061746 * AcceptedCmp30 + 1.46916781894719 * AcceptedCmp40 +
0.26827715088644 * AcceptedCmp50 + 1.50074465469998 * Complain0 + -1.0626185000486 *
HigherEducationBinary0 ;
1250388   +   H1x2_6  = H1x2_6  +    -0.87625232174239 * AcceptedCmp10
1250389   +          +     0.72228047975642 * AcceptedCmp20  +     1.34904015028355 *
1250390   +        AcceptedCmp30  +     1.55639496207852 * AcceptedCmp40
1250391   +          +    -0.98741935337746 * AcceptedCmp50  +     0.99421811137074 *
1250392   +        Complain0  +    -1.69180618270074 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + -0.87625232174239 * AcceptedCmp10 + 0.72228047975642 *
AcceptedCmp20 + 1.34904015028355 * AcceptedCmp30 + 1.55639496207852 * AcceptedCmp40 +
-0.98741935337746 * AcceptedCmp50 + 0.99421811137074 * Complain0 + -1.69180618270074 *
HigherEducationBinary0 ;
1250393   +   H1x2_1  = H1x2_1  +    -0.17034446979478 * Education2n_Cycle
1250394   +          +    -0.75872196172063 * EducationBasic  +     0.44107677662894 *
1250395   +        EducationGraduation  +      0.1073450284316 * EducationMaster
1250396   +          +     0.96470902298142 * Marital_StatusDivorced
1250397   +          +     0.94805959268314 * Marital_StatusMarried
1250398   +          +     -0.6523948769616 * Marital_StatusSingle
1250399   +          +     0.07557344719737 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.17034446979478 * Education2n_Cycle +
-0.75872196172063 * EducationBasic + 0.44107677662894 * EducationGraduation + 0.1073450284316
* EducationMaster + 0.96470902298142 * Marital_StatusDivorced + 0.94805959268314 *
Marital_StatusMarried + -0.6523948769616 * Marital_StatusSingle + 0.07557344719737 *
Marital_StatusTogether ;
1250400   +   H1x2_2  = H1x2_2  +    -0.42515060901662 * Education2n_Cycle
1250401   +          +    -1.05213629639837 * EducationBasic  +     0.72603871617959 *
1250402   +        EducationGraduation  +    -1.34927753306064 * EducationMaster
1250403   +          +      0.3918249505531 * Marital_StatusDivorced
1250404   +          +    -0.00968091979586 * Marital_StatusMarried
1250405   +          +     0.84615379885071 * Marital_StatusSingle
1250406   +          +     0.34817324570682 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.42515060901662 * Education2n_Cycle +
-1.05213629639837 * EducationBasic + 0.72603871617959 * EducationGraduation +
-1.34927753306064 * EducationMaster + 0.3918249505531 * Marital_StatusDivorced +
-0.00968091979586 * Marital_StatusMarried + 0.84615379885071 * Marital_StatusSingle +
0.34817324570682 * Marital_StatusTogether ;
1250407   +   H1x2_3  = H1x2_3  +    -0.31002362860852 * Education2n_Cycle
1250408   +          +     1.40744525716089 * EducationBasic  +     2.06403096539358 *
1250409   +        EducationGraduation  +     -0.8672743321499 * EducationMaster
1250410   +          +     1.14335160313191 * Marital_StatusDivorced
1250411   +          +     0.50580517192175 * Marital_StatusMarried
1250412   +          +     0.17264295020921 * Marital_StatusSingle
1250413   +          +    -0.58193119255736 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -0.31002362860852 * Education2n_Cycle +
1.40744525716089 * EducationBasic + 2.06403096539358 * EducationGraduation + -0.8672743321499
* EducationMaster + 1.14335160313191 * Marital_StatusDivorced + 0.50580517192175 *
Marital_StatusMarried + 0.17264295020921 * Marital_StatusSingle + -0.58193119255736 *
Marital_StatusTogether ;
1250414   +   H1x2_4  = H1x2_4  +     0.55057637605468 * Education2n_Cycle
1250415   +          +    -0.73070803276142 * EducationBasic  +     0.40424625808481 *
1250416   +        EducationGraduation  +     1.95818378342783 * EducationMaster
1250417   +          +    -0.11238504444225 * Marital_StatusDivorced
1250418   +          +    -0.81348274043749 * Marital_StatusMarried
1250419   +          +     0.46075415610001 * Marital_StatusSingle
1250420   +          +    -0.17552649817722 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.55057637605468 * Education2n_Cycle +
-0.73070803276142 * EducationBasic + 0.40424625808481 * EducationGraduation + 1.95818378342783
* EducationMaster + -0.11238504444225 * Marital_StatusDivorced + -0.81348274043749 *
Marital_StatusMarried + 0.46075415610001 * Marital_StatusSingle + -0.17552649817722 *
Marital_StatusTogether ;
1250421   +   H1x2_5  = H1x2_5  +     0.43341125564688 * Education2n_Cycle
1250422   +          +     2.81958018976644 * EducationBasic  +     0.28773362443315 *
1250423   +        EducationGraduation  +     0.08396135672504 * EducationMaster
1250424   +          +    -0.46342068701431 * Marital_StatusDivorced
1250425   +          +    -0.41667845270204 * Marital_StatusMarried
1250426   +          +    -0.47166707496281 * Marital_StatusSingle
1250427   +          +     0.54110155717306 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.43341125564688 * Education2n_Cycle +
2.81958018976644 * EducationBasic + 0.28773362443315 * EducationGraduation + 0.08396135672504
* EducationMaster + -0.46342068701431 * Marital_StatusDivorced + -0.41667845270204 *
Marital_StatusMarried + -0.47166707496281 * Marital_StatusSingle + 0.54110155717306 *
Marital_StatusTogether ;
1250428   +   H1x2_6  = H1x2_6  +    -0.27163102711307 * Education2n_Cycle
1250429   +          +    -0.04052143781957 * EducationBasic  +     0.97902549344774 *
1250430   +        EducationGraduation  +     0.36656103863186 * EducationMaster
1250431   +          +    -0.45376613787812 * Marital_StatusDivorced
1250432   +          +     0.01337046049801 * Marital_StatusMarried
1250433   +          +    -0.92811489484121 * Marital_StatusSingle
1250434   +          +     1.52402650450634 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + -0.27163102711307 * Education2n_Cycle +
-0.04052143781957 * EducationBasic + 0.97902549344774 * EducationGraduation + 0.36656103863186
* EducationMaster + -0.45376613787812 * Marital_StatusDivorced + 0.01337046049801 *
Marital_StatusMarried + -0.92811489484121 * Marital_StatusSingle + 1.52402650450634 *
Marital_StatusTogether ;
1250435   +   H1x2_1  =     0.27200642200874 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.27200642200874 + H1x2_1 ;
1250436   +   H1x2_2  =     0.52117161047058 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.52117161047058 + H1x2_2 ;
1250437   +   H1x2_3  =    -1.04763461279984 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -1.04763461279984 + H1x2_3 ;
1250438   +   H1x2_4  =     0.10516307959318 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.10516307959318 + H1x2_4 ;
1250439   +   H1x2_5  =     1.24237093160919 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.24237093160919 + H1x2_5 ;
1250440   +   H1x2_6  =    -0.57977518763852 + H1x2_6 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = -0.57977518763852 + H1x2_6 ;
1250441   +   H1x2_7  = 0;
MPRINT(EM_DIAGRAM):   H1x2_7 = 0;
1250442   +   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 , H1x2_7
1250443   +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 ,
H1x2_7 );
1250444   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1250445   +   H1x2_1  = EXP(H1x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(H1x2_1 - _MAX_);
1250446   +   _SUM_ = _SUM_ + H1x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_1 ;
1250447   +   H1x2_2  = EXP(H1x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(H1x2_2 - _MAX_);
1250448   +   _SUM_ = _SUM_ + H1x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_2 ;
1250449   +   H1x2_3  = EXP(H1x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(H1x2_3 - _MAX_);
1250450   +   _SUM_ = _SUM_ + H1x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_3 ;
1250451   +   H1x2_4  = EXP(H1x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(H1x2_4 - _MAX_);
1250452   +   _SUM_ = _SUM_ + H1x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_4 ;
1250453   +   H1x2_5  = EXP(H1x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(H1x2_5 - _MAX_);
1250454   +   _SUM_ = _SUM_ + H1x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_5 ;
1250455   +   H1x2_6  = EXP(H1x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(H1x2_6 - _MAX_);
1250456   +   _SUM_ = _SUM_ + H1x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_6 ;
1250457   +   H1x2_7  = EXP(H1x2_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_7 = EXP(H1x2_7 - _MAX_);
1250458   +   _SUM_ = _SUM_ + H1x2_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_7 ;
1250459   +   H1x2_1  = H1x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 / _SUM_;
1250460   +   H1x2_2  = H1x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 / _SUM_;
1250461   +   H1x2_3  = H1x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 / _SUM_;
1250462   +   H1x2_4  = H1x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 / _SUM_;
1250463   +   H1x2_5  = H1x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 / _SUM_;
1250464   +   H1x2_6  = H1x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 / _SUM_;
1250465   +   H1x2_7  = H1x2_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_7 = H1x2_7 / _SUM_;
1250466   +END;
MPRINT(EM_DIAGRAM):   END;
1250467   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1250468   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
1250469   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
1250470   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
1250471   +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
1250472   +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
1250473   +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
1250474   +   H1x2_7  = .;
MPRINT(EM_DIAGRAM):   H1x2_7 = .;
1250475   +END;
MPRINT(EM_DIAGRAM):   END;
1250476   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1250477   +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
1250478   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1250479   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1250480   +   H2x1_1  =     3.19986933046591 * H1x1_1  +    -0.53665634063887 * H1x1_2
1250481   +          +     1.71172628690017 * H1x1_3  +    -1.33944402954134 * H1x1_4
1250482   +          +    -1.93533827156845 * H1x1_5  +    -0.85772802964317 * H1x1_6
1250483   +          +     0.60984669129006 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 3.19986933046591 * H1x1_1 + -0.53665634063887 * H1x1_2 +
1.71172628690017 * H1x1_3 + -1.33944402954134 * H1x1_4 + -1.93533827156845 * H1x1_5 +
-0.85772802964317 * H1x1_6 + 0.60984669129006 * H1x1_7 ;
1250484   +   H2x1_2  =     -2.1883484075031 * H1x1_1  +     0.17578635446135 * H1x1_2
1250485   +          +    -1.79384950890077 * H1x1_3  +     0.88942614754722 * H1x1_4
1250486   +          +     0.41077752133457 * H1x1_5  +       0.509832853125 * H1x1_6
1250487   +          +    -0.28121910805072 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -2.1883484075031 * H1x1_1 + 0.17578635446135 * H1x1_2 +
-1.79384950890077 * H1x1_3 + 0.88942614754722 * H1x1_4 + 0.41077752133457 * H1x1_5 +
0.509832853125 * H1x1_6 + -0.28121910805072 * H1x1_7 ;
1250488   +   H2x1_3  =     0.86281981700921 * H1x1_1  +    -1.15482345233328 * H1x1_2
1250489   +          +     0.64743938802141 * H1x1_3  +     1.08117298211616 * H1x1_4
1250490   +          +      -0.363297480437 * H1x1_5  +    -1.58703254226713 * H1x1_6
1250491   +          +     0.54468402771449 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 0.86281981700921 * H1x1_1 + -1.15482345233328 * H1x1_2 +
0.64743938802141 * H1x1_3 + 1.08117298211616 * H1x1_4 + -0.363297480437 * H1x1_5 +
-1.58703254226713 * H1x1_6 + 0.54468402771449 * H1x1_7 ;
1250492   +   H2x1_4  =    -0.43420906601647 * H1x1_1  +     0.36485369627974 * H1x1_2
1250493   +          +    -2.42315183886716 * H1x1_3  +     0.22337896770247 * H1x1_4
1250494   +          +    -0.65684369622605 * H1x1_5  +     0.25211011207532 * H1x1_6
1250495   +          +     0.16704425645668 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -0.43420906601647 * H1x1_1 + 0.36485369627974 * H1x1_2 +
-2.42315183886716 * H1x1_3 + 0.22337896770247 * H1x1_4 + -0.65684369622605 * H1x1_5 +
0.25211011207532 * H1x1_6 + 0.16704425645668 * H1x1_7 ;
1250496   +   H2x1_5  =     0.61083333511105 * H1x1_1  +     1.11038871398931 * H1x1_2
1250497   +          +      0.4617674661653 * H1x1_3  +    -0.42039958365963 * H1x1_4
1250498   +          +    -1.37408000010678 * H1x1_5  +     0.03897439094411 * H1x1_6
1250499   +          +    -0.82592861674077 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = 0.61083333511105 * H1x1_1 + 1.11038871398931 * H1x1_2 +
0.4617674661653 * H1x1_3 + -0.42039958365963 * H1x1_4 + -1.37408000010678 * H1x1_5 +
0.03897439094411 * H1x1_6 + -0.82592861674077 * H1x1_7 ;
1250500   +   H2x1_6  =     1.30877201101082 * H1x1_1  +     1.55143256487324 * H1x1_2
1250501   +          +    -1.20237741381937 * H1x1_3  +       2.394122059946 * H1x1_4
1250502   +          +     1.83804290225468 * H1x1_5  +     0.83132818010396 * H1x1_6
1250503   +          +     1.18399340483001 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.30877201101082 * H1x1_1 + 1.55143256487324 * H1x1_2 +
-1.20237741381937 * H1x1_3 + 2.394122059946 * H1x1_4 + 1.83804290225468 * H1x1_5 +
0.83132818010396 * H1x1_6 + 1.18399340483001 * H1x1_7 ;
1250504   +   H2x1_1  = H2x1_1  +    -2.41276052972753 * H1x2_1
1250505   +          +     0.38601054263899 * H1x2_2  +     0.54498789581044 * H1x2_3
1250506   +          +    -0.55304188445569 * H1x2_4  +     0.29484780749868 * H1x2_5
1250507   +          +     0.44012580105051 * H1x2_6  +     0.43086375065556 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -2.41276052972753 * H1x2_1 + 0.38601054263899 * H1x2_2
+ 0.54498789581044 * H1x2_3 + -0.55304188445569 * H1x2_4 + 0.29484780749868 * H1x2_5 +
0.44012580105051 * H1x2_6 + 0.43086375065556 * H1x2_7 ;
1250508   +   H2x1_2  = H2x1_2  +    -1.03173201511154 * H1x2_1
1250509   +          +     0.62119574580435 * H1x2_2  +     1.71782745718335 * H1x2_3
1250510   +          +     0.05391903933014 * H1x2_4  +     1.52443015967438 * H1x2_5
1250511   +          +     0.22301831343286 * H1x2_6  +     0.66204940430171 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -1.03173201511154 * H1x2_1 + 0.62119574580435 * H1x2_2
+ 1.71782745718335 * H1x2_3 + 0.05391903933014 * H1x2_4 + 1.52443015967438 * H1x2_5 +
0.22301831343286 * H1x2_6 + 0.66204940430171 * H1x2_7 ;
1250512   +   H2x1_3  = H2x1_3  +     1.37871502475142 * H1x2_1
1250513   +          +     0.02099445181492 * H1x2_2  +     0.44720218317742 * H1x2_3
1250514   +          +    -1.29625929820096 * H1x2_4  +    -1.29169956389384 * H1x2_5
1250515   +          +    -0.21403739905139 * H1x2_6  +    -0.03075946378871 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + 1.37871502475142 * H1x2_1 + 0.02099445181492 * H1x2_2
+ 0.44720218317742 * H1x2_3 + -1.29625929820096 * H1x2_4 + -1.29169956389384 * H1x2_5 +
-0.21403739905139 * H1x2_6 + -0.03075946378871 * H1x2_7 ;
1250516   +   H2x1_4  = H2x1_4  +     1.94121727472617 * H1x2_1
1250517   +          +     0.23207290279299 * H1x2_2  +      0.3162872281134 * H1x2_3
1250518   +          +    -0.40199017937523 * H1x2_4  +     0.69294460110289 * H1x2_5
1250519   +          +    -1.00758272664059 * H1x2_6  +    -1.41698057960021 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 1.94121727472617 * H1x2_1 + 0.23207290279299 * H1x2_2
+ 0.3162872281134 * H1x2_3 + -0.40199017937523 * H1x2_4 + 0.69294460110289 * H1x2_5 +
-1.00758272664059 * H1x2_6 + -1.41698057960021 * H1x2_7 ;
1250520   +   H2x1_5  = H2x1_5  +     1.19546023857185 * H1x2_1
1250521   +          +    -1.00266987736442 * H1x2_2  +     0.71838447032796 * H1x2_3
1250522   +          +     1.70968347732204 * H1x2_4  +    -0.26894423802892 * H1x2_5
1250523   +          +    -0.61655519090213 * H1x2_6  +     2.21931491555405 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + 1.19546023857185 * H1x2_1 + -1.00266987736442 * H1x2_2
+ 0.71838447032796 * H1x2_3 + 1.70968347732204 * H1x2_4 + -0.26894423802892 * H1x2_5 +
-0.61655519090213 * H1x2_6 + 2.21931491555405 * H1x2_7 ;
1250524   +   H2x1_6  = H2x1_6  +    -0.48559886762231 * H1x2_1
1250525   +          +     0.93218274010134 * H1x2_2  +     0.23140948782865 * H1x2_3
1250526   +          +     0.72139310562219 * H1x2_4  +    -0.11143939877368 * H1x2_5
1250527   +          +     0.74022211257293 * H1x2_6  +      1.0449314568566 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + -0.48559886762231 * H1x2_1 + 0.93218274010134 * H1x2_2
+ 0.23140948782865 * H1x2_3 + 0.72139310562219 * H1x2_4 + -0.11143939877368 * H1x2_5 +
0.74022211257293 * H1x2_6 + 1.0449314568566 * H1x2_7 ;
1250528   +   H2x1_1  =     0.42952855003777 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 0.42952855003777 + H2x1_1 ;
1250529   +   H2x1_2  =     1.61752083096638 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.61752083096638 + H2x1_2 ;
1250530   +   H2x1_3  =    -0.71617788867723 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -0.71617788867723 + H2x1_3 ;
1250531   +   H2x1_4  =     0.39147546708847 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 0.39147546708847 + H2x1_4 ;
1250532   +   H2x1_5  =    -0.56259054185247 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -0.56259054185247 + H2x1_5 ;
1250533   +   H2x1_6  =     0.31857109159246 + H2x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 0.31857109159246 + H2x1_6 ;
1250534   +   H2x1_7  = 0;
MPRINT(EM_DIAGRAM):   H2x1_7 = 0;
1250535   +   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 , H2x1_6 , H2x1_7
1250536   +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 , H2x1_6 ,
H2x1_7 );
1250537   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1250538   +   H2x1_1  = EXP(H2x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_1 = EXP(H2x1_1 - _MAX_);
1250539   +   _SUM_ = _SUM_ + H2x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_1 ;
1250540   +   H2x1_2  = EXP(H2x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_2 = EXP(H2x1_2 - _MAX_);
1250541   +   _SUM_ = _SUM_ + H2x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_2 ;
1250542   +   H2x1_3  = EXP(H2x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_3 = EXP(H2x1_3 - _MAX_);
1250543   +   _SUM_ = _SUM_ + H2x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_3 ;
1250544   +   H2x1_4  = EXP(H2x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_4 = EXP(H2x1_4 - _MAX_);
1250545   +   _SUM_ = _SUM_ + H2x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_4 ;
1250546   +   H2x1_5  = EXP(H2x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_5 = EXP(H2x1_5 - _MAX_);
1250547   +   _SUM_ = _SUM_ + H2x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_5 ;
1250548   +   H2x1_6  = EXP(H2x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_6 = EXP(H2x1_6 - _MAX_);
1250549   +   _SUM_ = _SUM_ + H2x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_6 ;
1250550   +   H2x1_7  = EXP(H2x1_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_7 = EXP(H2x1_7 - _MAX_);
1250551   +   _SUM_ = _SUM_ + H2x1_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_7 ;
1250552   +   H2x1_1  = H2x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 / _SUM_;
1250553   +   H2x1_2  = H2x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 / _SUM_;
1250554   +   H2x1_3  = H2x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 / _SUM_;
1250555   +   H2x1_4  = H2x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 / _SUM_;
1250556   +   H2x1_5  = H2x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 / _SUM_;
1250557   +   H2x1_6  = H2x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 / _SUM_;
1250558   +   H2x1_7  = H2x1_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_7 = H2x1_7 / _SUM_;
1250559   +END;
MPRINT(EM_DIAGRAM):   END;
1250560   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1250561   +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
1250562   +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
1250563   +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
1250564   +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
1250565   +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
1250566   +   H2x1_6  = .;
MPRINT(EM_DIAGRAM):   H2x1_6 = .;
1250567   +   H2x1_7  = .;
MPRINT(EM_DIAGRAM):   H2x1_7 = .;
1250568   +END;
MPRINT(EM_DIAGRAM):   END;
1250569   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1250570   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1250571   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1250572   +
1250573   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1250574   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1250575   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1250576   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1250577   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1250578   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1250579   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1250580   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1250581   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1250582   +end;
MPRINT(EM_DIAGRAM):   end;
1250583   +else do;
MPRINT(EM_DIAGRAM):   else do;
1250584   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1250585   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1250586   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1250587   +   end;
MPRINT(EM_DIAGRAM):   end;
1250588   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1250589   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1250590   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1250591   +   end;
MPRINT(EM_DIAGRAM):   end;
1250592   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1250593   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1250594   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1250595   +   end;
MPRINT(EM_DIAGRAM):   end;
1250596   +end;
MPRINT(EM_DIAGRAM):   end;
1250597   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1250598   +   P_DepVar1  =     25.2027326018714 * H2x1_1  +    -8.05331379419082 * H2x1_2
1250599   +          +     2.64798805383536 * H2x1_3  +    -4.52736775271107 * H2x1_4
1250600   +          +     6.71812741736202 * H2x1_5  +    -12.2785047473885 * H2x1_6
1250601   +          +    -4.41291972336422 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 25.2027326018714 * H2x1_1 + -8.05331379419082 * H2x1_2 +
2.64798805383536 * H2x1_3 + -4.52736775271107 * H2x1_4 + 6.71812741736202 * H2x1_5 +
-12.2785047473885 * H2x1_6 + -4.41291972336422 * H2x1_7 ;
1250602   +   P_DepVar1  =     1.22134962002326 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.22134962002326 + P_DepVar1 ;
1250603   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1250604   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1250605   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1250606   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1250607   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1250608   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1250609   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1250610   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1250611   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1250612   +END;
MPRINT(EM_DIAGRAM):   END;
1250613   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1250614   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1250615   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1250616   +END;
MPRINT(EM_DIAGRAM):   END;
1250617   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1250618   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1250619   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1250620   +END;
MPRINT(EM_DIAGRAM):   END;
1250621   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1250622   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1250623   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1250624   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1250625   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1250626   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1250627   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1250628   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1250629   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1250630   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1250631   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1250632   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1250633   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1250634   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1250635   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1250636   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1250637   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1250638   +END;
MPRINT(EM_DIAGRAM):   END;
1250639   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1250640   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1250641   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1250642   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1250643   +* Renaming variables for AutoNeural12;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural12;
1250644   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1250645   +* Renaming Posterior variables for AutoNeural12;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural12;
1250646   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1250647   +drop AutoNeural12_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_P_DepVar1;
1250648   +AutoNeural12_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural12_P_DepVar1 = P_DepVar1;
1250649   +drop AutoNeural12_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_P_DepVar0;
1250650   +AutoNeural12_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural12_P_DepVar0 = P_DepVar0;
1250651   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1250652   +* Renaming _WARN_ variable for AutoNeural12;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural12;
1250653   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1250654   +length AutoNeural12_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural12_WARN_ $4;
1250655   +drop AutoNeural12_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_WARN_;
1250656   +AutoNeural12_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural12_WARN_ = _WARN_;
1250657   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1250658   +* Ensmbl46: Scoring Code of model 4 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl46: Scoring Code of model 4 of 5;
1250659   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1250660   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1250661   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
1250662   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1250663   +* NODE: AutoNeural11;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural11;
1250664   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1250665   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1250666   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1250667   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1250668   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1250669   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1250670   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1250671   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1250672   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1250673   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1250674   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1250675   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1250676   +LENGTH _WARN_ $4
1250677   +      F_DepVar  $ 12
1250678   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1250679   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1250680   +
1250681   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1250682   +
1250683   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1250684   +
1250685   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1250686   +
1250687   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1250688   +
1250689   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1250690   +
1250691   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1250692   +
1250693   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1250694   +
1250695   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1250696   +
1250697   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1250698   +
1250699   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1250700   +
1250701   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1250702   +
1250703   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1250704   +
1250705   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1250706   +
1250707   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1250708   +
1250709   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1250710   +
1250711   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1250712   +
1250713   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1250714   +
1250715   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1250716   +
1250717   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1250718   +
1250719   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1250720   +
1250721   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1250722   +
1250723   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1250724   +
1250725   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1250726   +
1250727   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1250728   +
1250729   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1250730   +
1250731   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1250732   +
1250733   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1250734   +
1250735   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1250736   +
1250737   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1250738   +
1250739   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1250740   +
1250741   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1250742   +
1250743   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1250744   +
1250745   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1250746   +
1250747   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1250748   +
1250749   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1250750   +
1250751   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1250752   +
1250753   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1250754   +
1250755   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
1250756   +
1250757   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
1250758   +
1250759   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
1250760   +
1250761   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
1250762   +
1250763   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
1250764   +
1250765   +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
1250766   +
1250767   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
1250768   +
1250769   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
1250770   +
1250771   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
1250772   +
1250773   +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
1250774   +
1250775   +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
1250776   +
1250777   +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
1250778   +
1250779   +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
1250780   +
1250781   +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
1250782   +
1250783   +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
1250784   +
1250785   +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
1250786   +
1250787   +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
1250788   +
1250789   +      label H2x1_6 = 'Hidden: H2x1_=6' ;
MPRINT(EM_DIAGRAM):   label H2x1_6 = 'Hidden: H2x1_=6' ;
1250790   +
1250791   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1250792   +
1250793   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1250794   +
1250795   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1250796   +
1250797   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1250798   +
1250799   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1250800   +
1250801   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1250802   +
1250803   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1250804   +
1250805   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1250806   +
1250807   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1250808   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1250809   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1250810   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1250811   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1250812   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1250813   +end;
MPRINT(EM_DIAGRAM):   end;
1250814   +else do;
MPRINT(EM_DIAGRAM):   else do;
1250815   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1250816   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1250817   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1250818   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1250819   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1250820   +   end;
MPRINT(EM_DIAGRAM):   end;
1250821   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1250822   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1250823   +   end;
MPRINT(EM_DIAGRAM):   end;
1250824   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1250825   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1250826   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1250827   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1250828   +   end;
MPRINT(EM_DIAGRAM):   end;
1250829   +end;
MPRINT(EM_DIAGRAM):   end;
1250830   +
1250831   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1250832   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1250833   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1250834   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1250835   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1250836   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1250837   +end;
MPRINT(EM_DIAGRAM):   end;
1250838   +else do;
MPRINT(EM_DIAGRAM):   else do;
1250839   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1250840   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1250841   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1250842   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1250843   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1250844   +   end;
MPRINT(EM_DIAGRAM):   end;
1250845   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1250846   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1250847   +   end;
MPRINT(EM_DIAGRAM):   end;
1250848   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1250849   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1250850   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1250851   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1250852   +   end;
MPRINT(EM_DIAGRAM):   end;
1250853   +end;
MPRINT(EM_DIAGRAM):   end;
1250854   +
1250855   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1250856   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1250857   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1250858   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1250859   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1250860   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1250861   +end;
MPRINT(EM_DIAGRAM):   end;
1250862   +else do;
MPRINT(EM_DIAGRAM):   else do;
1250863   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1250864   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1250865   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1250866   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1250867   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1250868   +   end;
MPRINT(EM_DIAGRAM):   end;
1250869   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1250870   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1250871   +   end;
MPRINT(EM_DIAGRAM):   end;
1250872   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1250873   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1250874   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1250875   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1250876   +   end;
MPRINT(EM_DIAGRAM):   end;
1250877   +end;
MPRINT(EM_DIAGRAM):   end;
1250878   +
1250879   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1250880   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1250881   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1250882   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1250883   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1250884   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1250885   +end;
MPRINT(EM_DIAGRAM):   end;
1250886   +else do;
MPRINT(EM_DIAGRAM):   else do;
1250887   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1250888   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1250889   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1250890   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1250891   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1250892   +   end;
MPRINT(EM_DIAGRAM):   end;
1250893   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1250894   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1250895   +   end;
MPRINT(EM_DIAGRAM):   end;
1250896   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1250897   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1250898   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1250899   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1250900   +   end;
MPRINT(EM_DIAGRAM):   end;
1250901   +end;
MPRINT(EM_DIAGRAM):   end;
1250902   +
1250903   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1250904   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1250905   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1250906   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1250907   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1250908   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1250909   +end;
MPRINT(EM_DIAGRAM):   end;
1250910   +else do;
MPRINT(EM_DIAGRAM):   else do;
1250911   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1250912   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1250913   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1250914   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1250915   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1250916   +   end;
MPRINT(EM_DIAGRAM):   end;
1250917   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1250918   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1250919   +   end;
MPRINT(EM_DIAGRAM):   end;
1250920   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1250921   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1250922   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1250923   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1250924   +   end;
MPRINT(EM_DIAGRAM):   end;
1250925   +end;
MPRINT(EM_DIAGRAM):   end;
1250926   +
1250927   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1250928   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1250929   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1250930   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1250931   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1250932   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1250933   +end;
MPRINT(EM_DIAGRAM):   end;
1250934   +else do;
MPRINT(EM_DIAGRAM):   else do;
1250935   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1250936   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1250937   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1250938   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1250939   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1250940   +   end;
MPRINT(EM_DIAGRAM):   end;
1250941   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1250942   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1250943   +   end;
MPRINT(EM_DIAGRAM):   end;
1250944   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1250945   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1250946   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1250947   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1250948   +   end;
MPRINT(EM_DIAGRAM):   end;
1250949   +end;
MPRINT(EM_DIAGRAM):   end;
1250950   +
1250951   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1250952   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1250953   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1250954   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1250955   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1250956   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1250957   +end;
MPRINT(EM_DIAGRAM):   end;
1250958   +else do;
MPRINT(EM_DIAGRAM):   else do;
1250959   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1250960   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1250961   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1250962   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1250963   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1250964   +   end;
MPRINT(EM_DIAGRAM):   end;
1250965   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1250966   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1250967   +   end;
MPRINT(EM_DIAGRAM):   end;
1250968   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1250969   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1250970   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1250971   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1250972   +   end;
MPRINT(EM_DIAGRAM):   end;
1250973   +end;
MPRINT(EM_DIAGRAM):   end;
1250974   +
1250975   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1250976   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
1250977   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1250978   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1250979   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1250980   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1250981   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1250982   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1250983   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1250984   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1250985   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1250986   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1250987   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1250988   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1250989   +end;
MPRINT(EM_DIAGRAM):   end;
1250990   +else do;
MPRINT(EM_DIAGRAM):   else do;
1250991   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1250992   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1250993   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1250994   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1250995   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1250996   +   end;
MPRINT(EM_DIAGRAM):   end;
1250997   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1250998   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1250999   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1251000   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1251001   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1251002   +   end;
MPRINT(EM_DIAGRAM):   end;
1251003   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1251004   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1251005   +   end;
MPRINT(EM_DIAGRAM):   end;
1251006   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1251007   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1251008   +   end;
MPRINT(EM_DIAGRAM):   end;
1251009   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1251010   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1251011   +   end;
MPRINT(EM_DIAGRAM):   end;
1251012   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1251013   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1251014   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1251015   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1251016   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1251017   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1251018   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1251019   +   end;
MPRINT(EM_DIAGRAM):   end;
1251020   +end;
MPRINT(EM_DIAGRAM):   end;
1251021   +
1251022   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1251023   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1251024   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
1251025   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1251026   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1251027   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1251028   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1251029   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1251030   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1251031   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1251032   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1251033   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1251034   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1251035   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1251036   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1251037   +end;
MPRINT(EM_DIAGRAM):   end;
1251038   +else do;
MPRINT(EM_DIAGRAM):   else do;
1251039   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1251040   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1251041   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1251042   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1251043   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1251044   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1251045   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1251046   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1251047   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1251048   +         end;
MPRINT(EM_DIAGRAM):   end;
1251049   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1251050   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1251051   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1251052   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1251053   +            end;
MPRINT(EM_DIAGRAM):   end;
1251054   +         end;
MPRINT(EM_DIAGRAM):   end;
1251055   +      end;
MPRINT(EM_DIAGRAM):   end;
1251056   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1251057   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1251058   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1251059   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1251060   +         end;
MPRINT(EM_DIAGRAM):   end;
1251061   +      end;
MPRINT(EM_DIAGRAM):   end;
1251062   +   end;
MPRINT(EM_DIAGRAM):   end;
1251063   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1251064   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1251065   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1251066   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1251067   +      end;
MPRINT(EM_DIAGRAM):   end;
1251068   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1251069   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1251070   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1251071   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1251072   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1251073   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1251074   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1251075   +         end;
MPRINT(EM_DIAGRAM):   end;
1251076   +      end;
MPRINT(EM_DIAGRAM):   end;
1251077   +   end;
MPRINT(EM_DIAGRAM):   end;
1251078   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1251079   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1251080   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1251081   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1251082   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1251083   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1251084   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1251085   +   end;
MPRINT(EM_DIAGRAM):   end;
1251086   +end;
MPRINT(EM_DIAGRAM):   end;
1251087   +
1251088   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1251089   +*** Checking missing input Interval
1251090   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1251091   +
1251092   +IF NMISS(
1251093   +   AcceptedCmpTotal ,
1251094   +   Age ,
1251095   +   Frq ,
1251096   +   Income ,
1251097   +   Kidhome ,
1251098   +   Mnt ,
1251099   +   MntFishProducts ,
1251100   +   MntFruits ,
1251101   +   MntGoldProds ,
1251102   +   MntMeatProducts ,
1251103   +   MntSweetProducts ,
1251104   +   MntWines ,
1251105   +   MonthsAsCustomer ,
1251106   +   NumCatalogPurchases ,
1251107   +   NumDealsPurchases ,
1251108   +   NumDistPurchases ,
1251109   +   NumStorePurchases ,
1251110   +   NumWebPurchases ,
1251111   +   NumWebVisitsMonth ,
1251112   +   RFMstat ,
1251113   +   RMntFrq ,
1251114   +   Recency ,
1251115   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
1251116   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1251117   +
1251118   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1251119   +END;
MPRINT(EM_DIAGRAM):   END;
1251120   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1251121   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
1251122   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1251123   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1251124   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1251125   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1251126   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1251127   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1251128   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1251129   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1251130   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1251131   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1251132   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1251133   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1251134   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1251135   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1251136   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1251137   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1251138   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1251139   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1251140   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1251141   +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
1251142   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 *
MonthsAsCustomer ;
1251143   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1251144   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1251145   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1251146   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1251147   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1251148   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1251149   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1251150   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1251151   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1251152   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1251153   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1251154   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1251155   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1251156   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1251157   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1251158   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1251159   +END;
MPRINT(EM_DIAGRAM):   END;
1251160   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1251161   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1251162   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1251163   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1251164   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1251165   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1251166   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1251167   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1251168   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1251169   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1251170   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1251171   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1251172   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1251173   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1251174   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1251175   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1251176   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1251177   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1251178   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1251179   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1251180   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1251181   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1251182   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1251183   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1251184   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1251185   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1251186   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1251187   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1251188   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1251189   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1251190   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1251191   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1251192   +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
1251193   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 *
MonthsAsCustomer ;
1251194   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1251195   +   ELSE S_NumCatalogPurchases
1251196   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1251197   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1251198   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1251199   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1251200   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1251201   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1251202   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1251203   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1251204   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1251205   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1251206   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1251207   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1251208   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1251209   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1251210   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1251211   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1251212   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1251213   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1251214   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1251215   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1251216   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1251217   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1251218   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1251219   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1251220   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1251221   +END;
MPRINT(EM_DIAGRAM):   END;
1251222   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1251223   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
1251224   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1251225   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1251226   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
1251227   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1251228   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1251229   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
1251230   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1251231   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1251232   +   H1x1_1  =    -0.26269469382558 * S_AcceptedCmpTotal
1251233   +          +    -0.06270768091854 * S_Age  +    -0.71225988503068 * S_Frq
1251234   +          +    -0.19030550341755 * S_Income  +    -0.74001834753219 *
1251235   +        S_Kidhome  +    -0.80050230513362 * S_Mnt  +    -0.70546855957287 *
1251236   +        S_MntFishProducts  +    -0.57876563074872 * S_MntFruits
1251237   +          +    -0.00210300489306 * S_MntGoldProds  +     2.60078237485589 *
1251238   +        S_MntMeatProducts  +     -0.9886407516441 * S_MntSweetProducts
1251239   +          +    -2.97488547819955 * S_MntWines  +    -0.61277940059348 *
1251240   +        S_MonthsAsCustomer  +    -0.00096247683063 * S_NumCatalogPurchases
1251241   +          +     0.89422627895323 * S_NumDealsPurchases
1251242   +          +    -0.13304125929765 * S_NumDistPurchases
1251243   +          +    -1.04568442570811 * S_NumStorePurchases
1251244   +          +    -0.28677765126751 * S_NumWebPurchases
1251245   +          +      1.2327638737509 * S_NumWebVisitsMonth
1251246   +          +     0.67421347247009 * S_RFMstat  +     -0.6166808079836 *
1251247   +        S_RMntFrq  +    -0.86930969765816 * S_Recency
1251248   +          +     0.33815651609216 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.26269469382558 * S_AcceptedCmpTotal + -0.06270768091854 *
S_Age + -0.71225988503068 * S_Frq + -0.19030550341755 * S_Income + -0.74001834753219 *
S_Kidhome + -0.80050230513362 * S_Mnt + -0.70546855957287 * S_MntFishProducts +
-0.57876563074872 * S_MntFruits + -0.00210300489306 * S_MntGoldProds + 2.60078237485589 *
S_MntMeatProducts + -0.9886407516441 * S_MntSweetProducts + -2.97488547819955 * S_MntWines +
-0.61277940059348 * S_MonthsAsCustomer + -0.00096247683063 * S_NumCatalogPurchases +
0.89422627895323 * S_NumDealsPurchases + -0.13304125929765 * S_NumDistPurchases +
-1.04568442570811 * S_NumStorePurchases + -0.28677765126751 * S_NumWebPurchases +
1.2327638737509 * S_NumWebVisitsMonth + 0.67421347247009 * S_RFMstat + -0.6166808079836 *
S_RMntFrq + -0.86930969765816 * S_Recency + 0.33815651609216 * S_Teenhome ;
1251249   +   H1x1_2  =     0.55568777293496 * S_AcceptedCmpTotal
1251250   +          +     0.80213442721076 * S_Age  +     0.34635060456486 * S_Frq
1251251   +          +    -0.74174636901916 * S_Income  +    -0.01217809906509 *
1251252   +        S_Kidhome  +     0.26876993353057 * S_Mnt  +     0.04779395124841 *
1251253   +        S_MntFishProducts  +    -0.48668668697685 * S_MntFruits
1251254   +          +    -0.53984501210781 * S_MntGoldProds  +     2.66892669248667 *
1251255   +        S_MntMeatProducts  +     0.48696031818599 * S_MntSweetProducts
1251256   +          +    -1.59625933837852 * S_MntWines  +     0.06275925418664 *
1251257   +        S_MonthsAsCustomer  +     0.97240339275782 * S_NumCatalogPurchases
1251258   +          +     0.04224590196535 * S_NumDealsPurchases
1251259   +          +     0.76554742700113 * S_NumDistPurchases
1251260   +          +    -0.49155496870812 * S_NumStorePurchases
1251261   +          +     0.59606812744403 * S_NumWebPurchases
1251262   +          +     1.86809286276405 * S_NumWebVisitsMonth
1251263   +          +    -0.40257502974261 * S_RFMstat  +    -1.46120938073597 *
1251264   +        S_RMntFrq  +    -2.09222283465666 * S_Recency
1251265   +          +    -0.29369632363913 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.55568777293496 * S_AcceptedCmpTotal + 0.80213442721076 *
S_Age + 0.34635060456486 * S_Frq + -0.74174636901916 * S_Income + -0.01217809906509 *
S_Kidhome + 0.26876993353057 * S_Mnt + 0.04779395124841 * S_MntFishProducts +
-0.48668668697685 * S_MntFruits + -0.53984501210781 * S_MntGoldProds + 2.66892669248667 *
S_MntMeatProducts + 0.48696031818599 * S_MntSweetProducts + -1.59625933837852 * S_MntWines +
0.06275925418664 * S_MonthsAsCustomer + 0.97240339275782 * S_NumCatalogPurchases +
0.04224590196535 * S_NumDealsPurchases + 0.76554742700113 * S_NumDistPurchases +
-0.49155496870812 * S_NumStorePurchases + 0.59606812744403 * S_NumWebPurchases +
1.86809286276405 * S_NumWebVisitsMonth + -0.40257502974261 * S_RFMstat + -1.46120938073597 *
S_RMntFrq + -2.09222283465666 * S_Recency + -0.29369632363913 * S_Teenhome ;
1251266   +   H1x1_3  =    -1.40689454675752 * S_AcceptedCmpTotal
1251267   +          +     0.22713382517751 * S_Age  +     0.51688429566863 * S_Frq
1251268   +          +    -0.07045670111356 * S_Income  +     1.10344455539307 *
1251269   +        S_Kidhome  +     0.24846532877416 * S_Mnt  +       0.663861249099 *
1251270   +        S_MntFishProducts  +     0.91527393572467 * S_MntFruits
1251271   +          +    -0.30189545909263 * S_MntGoldProds  +    -0.72774030731928 *
1251272   +        S_MntMeatProducts  +     0.66425565932635 * S_MntSweetProducts
1251273   +          +     0.55381627079618 * S_MntWines  +      0.6475533846661 *
1251274   +        S_MonthsAsCustomer  +    -1.28926334887526 * S_NumCatalogPurchases
1251275   +          +    -0.04866536993486 * S_NumDealsPurchases
1251276   +          +    -0.53535979020214 * S_NumDistPurchases
1251277   +          +     2.20634071253676 * S_NumStorePurchases
1251278   +          +      0.6164564989007 * S_NumWebPurchases
1251279   +          +    -0.43396314395263 * S_NumWebVisitsMonth
1251280   +          +     0.05322242552204 * S_RFMstat  +     0.56410623855957 *
1251281   +        S_RMntFrq  +     2.37293441098349 * S_Recency
1251282   +          +     1.20608077690677 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -1.40689454675752 * S_AcceptedCmpTotal + 0.22713382517751 *
S_Age + 0.51688429566863 * S_Frq + -0.07045670111356 * S_Income + 1.10344455539307 * S_Kidhome
+ 0.24846532877416 * S_Mnt + 0.663861249099 * S_MntFishProducts + 0.91527393572467 *
S_MntFruits + -0.30189545909263 * S_MntGoldProds + -0.72774030731928 * S_MntMeatProducts +
0.66425565932635 * S_MntSweetProducts + 0.55381627079618 * S_MntWines + 0.6475533846661 *
S_MonthsAsCustomer + -1.28926334887526 * S_NumCatalogPurchases + -0.04866536993486 *
S_NumDealsPurchases + -0.53535979020214 * S_NumDistPurchases + 2.20634071253676 *
S_NumStorePurchases + 0.6164564989007 * S_NumWebPurchases + -0.43396314395263 *
S_NumWebVisitsMonth + 0.05322242552204 * S_RFMstat + 0.56410623855957 * S_RMntFrq +
2.37293441098349 * S_Recency + 1.20608077690677 * S_Teenhome ;
1251283   +   H1x1_4  =      0.8853369558336 * S_AcceptedCmpTotal
1251284   +          +    -0.02447538128281 * S_Age  +    -0.42850426895609 * S_Frq
1251285   +          +     2.31972189756282 * S_Income  +    -1.82782672643583 *
1251286   +        S_Kidhome  +     -0.0790436830894 * S_Mnt  +     0.24407556387791 *
1251287   +        S_MntFishProducts  +     0.21000125209328 * S_MntFruits
1251288   +          +     -0.0538417400508 * S_MntGoldProds  +     0.76422967678518 *
1251289   +        S_MntMeatProducts  +     0.14352092131967 * S_MntSweetProducts
1251290   +          +    -0.47732426074136 * S_MntWines  +      0.2881736828404 *
1251291   +        S_MonthsAsCustomer  +     1.08614742409725 * S_NumCatalogPurchases
1251292   +          +     1.37461255707863 * S_NumDealsPurchases
1251293   +          +    -0.17684775000818 * S_NumDistPurchases
1251294   +          +    -0.62755623855535 * S_NumStorePurchases
1251295   +          +    -1.46551649022657 * S_NumWebPurchases
1251296   +          +     3.35784247878638 * S_NumWebVisitsMonth
1251297   +          +      0.0205421093374 * S_RFMstat  +     0.02151146396087 *
1251298   +        S_RMntFrq  +    -2.61971612923471 * S_Recency
1251299   +          +    -1.74888814570254 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.8853369558336 * S_AcceptedCmpTotal + -0.02447538128281 *
S_Age + -0.42850426895609 * S_Frq + 2.31972189756282 * S_Income + -1.82782672643583 *
S_Kidhome + -0.0790436830894 * S_Mnt + 0.24407556387791 * S_MntFishProducts + 0.21000125209328
* S_MntFruits + -0.0538417400508 * S_MntGoldProds + 0.76422967678518 * S_MntMeatProducts +
0.14352092131967 * S_MntSweetProducts + -0.47732426074136 * S_MntWines + 0.2881736828404 *
S_MonthsAsCustomer + 1.08614742409725 * S_NumCatalogPurchases + 1.37461255707863 *
S_NumDealsPurchases + -0.17684775000818 * S_NumDistPurchases + -0.62755623855535 *
S_NumStorePurchases + -1.46551649022657 * S_NumWebPurchases + 3.35784247878638 *
S_NumWebVisitsMonth + 0.0205421093374 * S_RFMstat + 0.02151146396087 * S_RMntFrq +
-2.61971612923471 * S_Recency + -1.74888814570254 * S_Teenhome ;
1251300   +   H1x1_5  =    -1.18321492018094 * S_AcceptedCmpTotal
1251301   +          +    -0.08221927436186 * S_Age  +    -0.42965792034093 * S_Frq
1251302   +          +    -0.82515640369651 * S_Income  +     -0.7955159282868 *
1251303   +        S_Kidhome  +    -0.24623211609742 * S_Mnt  +     1.14929640730402 *
1251304   +        S_MntFishProducts  +     0.37195406994279 * S_MntFruits
1251305   +          +    -0.11860313293867 * S_MntGoldProds  +     -5.1642360901608 *
1251306   +        S_MntMeatProducts  +     0.30315380386519 * S_MntSweetProducts
1251307   +          +     2.66130913318508 * S_MntWines  +    -0.35226665860471 *
1251308   +        S_MonthsAsCustomer  +    -1.90883979010829 * S_NumCatalogPurchases
1251309   +          +    -0.76256677907121 * S_NumDealsPurchases
1251310   +          +    -0.31591571751692 * S_NumDistPurchases
1251311   +          +      0.0506832614089 * S_NumStorePurchases
1251312   +          +      1.4636796923764 * S_NumWebPurchases
1251313   +          +     0.37743519705036 * S_NumWebVisitsMonth
1251314   +          +    -0.69857477383618 * S_RFMstat  +    -0.87851464788137 *
1251315   +        S_RMntFrq  +     0.16854775832723 * S_Recency
1251316   +          +     0.71697705359003 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.18321492018094 * S_AcceptedCmpTotal + -0.08221927436186 *
S_Age + -0.42965792034093 * S_Frq + -0.82515640369651 * S_Income + -0.7955159282868 *
S_Kidhome + -0.24623211609742 * S_Mnt + 1.14929640730402 * S_MntFishProducts +
0.37195406994279 * S_MntFruits + -0.11860313293867 * S_MntGoldProds + -5.1642360901608 *
S_MntMeatProducts + 0.30315380386519 * S_MntSweetProducts + 2.66130913318508 * S_MntWines +
-0.35226665860471 * S_MonthsAsCustomer + -1.90883979010829 * S_NumCatalogPurchases +
-0.76256677907121 * S_NumDealsPurchases + -0.31591571751692 * S_NumDistPurchases +
0.0506832614089 * S_NumStorePurchases + 1.4636796923764 * S_NumWebPurchases + 0.37743519705036
* S_NumWebVisitsMonth + -0.69857477383618 * S_RFMstat + -0.87851464788137 * S_RMntFrq +
0.16854775832723 * S_Recency + 0.71697705359003 * S_Teenhome ;
1251317   +   H1x1_1  = H1x1_1  +    -0.36100598335798 * AcceptedCmp10
1251318   +          +    -0.80162089620833 * AcceptedCmp20  +    -0.32871385645151 *
1251319   +        AcceptedCmp30  +     0.06493645215559 * AcceptedCmp40
1251320   +          +    -0.79430619699627 * AcceptedCmp50  +    -0.55522128705257 *
1251321   +        Complain0  +    -0.30966226382805 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.36100598335798 * AcceptedCmp10 + -0.80162089620833
* AcceptedCmp20 + -0.32871385645151 * AcceptedCmp30 + 0.06493645215559 * AcceptedCmp40 +
-0.79430619699627 * AcceptedCmp50 + -0.55522128705257 * Complain0 + -0.30966226382805 *
HigherEducationBinary0 ;
1251322   +   H1x1_2  = H1x1_2  +    -0.55315398954303 * AcceptedCmp10
1251323   +          +    -0.74882192477453 * AcceptedCmp20  +    -1.00393247543385 *
1251324   +        AcceptedCmp30  +    -0.99157595784247 * AcceptedCmp40
1251325   +          +     -1.3196947648703 * AcceptedCmp50  +    -0.00342039619706 *
1251326   +        Complain0  +     2.02148667926607 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.55315398954303 * AcceptedCmp10 + -0.74882192477453
* AcceptedCmp20 + -1.00393247543385 * AcceptedCmp30 + -0.99157595784247 * AcceptedCmp40 +
-1.3196947648703 * AcceptedCmp50 + -0.00342039619706 * Complain0 + 2.02148667926607 *
HigherEducationBinary0 ;
1251327   +   H1x1_3  = H1x1_3  +    -1.34147425697576 * AcceptedCmp10
1251328   +          +     0.73907016980814 * AcceptedCmp20  +     0.73398008116032 *
1251329   +        AcceptedCmp30  +     0.96308137699431 * AcceptedCmp40
1251330   +          +     0.35561099349684 * AcceptedCmp50  +    -0.31219143781741 *
1251331   +        Complain0  +     0.90693629583865 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -1.34147425697576 * AcceptedCmp10 + 0.73907016980814 *
AcceptedCmp20 + 0.73398008116032 * AcceptedCmp30 + 0.96308137699431 * AcceptedCmp40 +
0.35561099349684 * AcceptedCmp50 + -0.31219143781741 * Complain0 + 0.90693629583865 *
HigherEducationBinary0 ;
1251332   +   H1x1_4  = H1x1_4  +    -0.50580436048114 * AcceptedCmp10
1251333   +          +    -1.02093523515462 * AcceptedCmp20  +    -0.61029325985231 *
1251334   +        AcceptedCmp30  +    -0.73402161144066 * AcceptedCmp40
1251335   +          +      0.1698155397807 * AcceptedCmp50  +    -0.01243044321253 *
1251336   +        Complain0  +    -0.47467816438005 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.50580436048114 * AcceptedCmp10 + -1.02093523515462
* AcceptedCmp20 + -0.61029325985231 * AcceptedCmp30 + -0.73402161144066 * AcceptedCmp40 +
0.1698155397807 * AcceptedCmp50 + -0.01243044321253 * Complain0 + -0.47467816438005 *
HigherEducationBinary0 ;
1251337   +   H1x1_5  = H1x1_5  +     1.58877963639512 * AcceptedCmp10
1251338   +          +     0.71974146614964 * AcceptedCmp20  +    -0.38703518473707 *
1251339   +        AcceptedCmp30  +     0.18491867078918 * AcceptedCmp40
1251340   +          +     0.72124299050214 * AcceptedCmp50  +    -0.27317285634323 *
1251341   +        Complain0  +      0.1433377302902 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 1.58877963639512 * AcceptedCmp10 + 0.71974146614964 *
AcceptedCmp20 + -0.38703518473707 * AcceptedCmp30 + 0.18491867078918 * AcceptedCmp40 +
0.72124299050214 * AcceptedCmp50 + -0.27317285634323 * Complain0 + 0.1433377302902 *
HigherEducationBinary0 ;
1251342   +   H1x1_1  = H1x1_1  +     0.29126191890253 * Education2n_Cycle
1251343   +          +    -0.73322213407659 * EducationBasic  +     0.33134572731882 *
1251344   +        EducationGraduation  +    -0.37141290775302 * EducationMaster
1251345   +          +     0.68641668264565 * Marital_StatusDivorced
1251346   +          +    -0.81586871439732 * Marital_StatusMarried
1251347   +          +     0.63758920518451 * Marital_StatusSingle
1251348   +          +    -1.07300023346175 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.29126191890253 * Education2n_Cycle +
-0.73322213407659 * EducationBasic + 0.33134572731882 * EducationGraduation +
-0.37141290775302 * EducationMaster + 0.68641668264565 * Marital_StatusDivorced +
-0.81586871439732 * Marital_StatusMarried + 0.63758920518451 * Marital_StatusSingle +
-1.07300023346175 * Marital_StatusTogether ;
1251349   +   H1x1_2  = H1x1_2  +     0.43078991783629 * Education2n_Cycle
1251350   +          +      0.6169213563952 * EducationBasic  +    -0.30246389091319 *
1251351   +        EducationGraduation  +     -0.4412391934844 * EducationMaster
1251352   +          +     0.05137560133238 * Marital_StatusDivorced
1251353   +          +    -2.24401993266209 * Marital_StatusMarried
1251354   +          +     1.57359386216115 * Marital_StatusSingle
1251355   +          +    -1.81897019215773 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.43078991783629 * Education2n_Cycle + 0.6169213563952
* EducationBasic + -0.30246389091319 * EducationGraduation + -0.4412391934844 *
EducationMaster + 0.05137560133238 * Marital_StatusDivorced + -2.24401993266209 *
Marital_StatusMarried + 1.57359386216115 * Marital_StatusSingle + -1.81897019215773 *
Marital_StatusTogether ;
1251356   +   H1x1_3  = H1x1_3  +     0.59284950139581 * Education2n_Cycle
1251357   +          +     0.47333255206751 * EducationBasic  +     0.43514421192824 *
1251358   +        EducationGraduation  +     0.61492669859334 * EducationMaster
1251359   +          +     -1.0649987815942 * Marital_StatusDivorced
1251360   +          +     0.76065111692388 * Marital_StatusMarried
1251361   +          +    -0.21694149754801 * Marital_StatusSingle
1251362   +          +     1.64182073896148 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.59284950139581 * Education2n_Cycle +
0.47333255206751 * EducationBasic + 0.43514421192824 * EducationGraduation + 0.61492669859334
* EducationMaster + -1.0649987815942 * Marital_StatusDivorced + 0.76065111692388 *
Marital_StatusMarried + -0.21694149754801 * Marital_StatusSingle + 1.64182073896148 *
Marital_StatusTogether ;
1251363   +   H1x1_4  = H1x1_4  +    -0.77613125849075 * Education2n_Cycle
1251364   +          +     0.26238013539868 * EducationBasic  +    -0.05526420132276 *
1251365   +        EducationGraduation  +     0.04208620358211 * EducationMaster
1251366   +          +     2.02155453548328 * Marital_StatusDivorced
1251367   +          +    -2.60190649735306 * Marital_StatusMarried
1251368   +          +     1.09149388354927 * Marital_StatusSingle
1251369   +          +    -1.15248770613963 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.77613125849075 * Education2n_Cycle +
0.26238013539868 * EducationBasic + -0.05526420132276 * EducationGraduation + 0.04208620358211
* EducationMaster + 2.02155453548328 * Marital_StatusDivorced + -2.60190649735306 *
Marital_StatusMarried + 1.09149388354927 * Marital_StatusSingle + -1.15248770613963 *
Marital_StatusTogether ;
1251370   +   H1x1_5  = H1x1_5  +    -0.03512618332303 * Education2n_Cycle
1251371   +          +    -0.14907811224838 * EducationBasic  +     0.24885029294709 *
1251372   +        EducationGraduation  +    -0.60853091001689 * EducationMaster
1251373   +          +     0.66315970650309 * Marital_StatusDivorced
1251374   +          +    -1.20476729758152 * Marital_StatusMarried
1251375   +          +     0.56175027826397 * Marital_StatusSingle
1251376   +          +    -1.12798745445913 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.03512618332303 * Education2n_Cycle +
-0.14907811224838 * EducationBasic + 0.24885029294709 * EducationGraduation +
-0.60853091001689 * EducationMaster + 0.66315970650309 * Marital_StatusDivorced +
-1.20476729758152 * Marital_StatusMarried + 0.56175027826397 * Marital_StatusSingle +
-1.12798745445913 * Marital_StatusTogether ;
1251377   +   H1x1_1  =      0.8264813299799 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.8264813299799 + H1x1_1 ;
1251378   +   H1x1_2  =     1.35924705880418 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.35924705880418 + H1x1_2 ;
1251379   +   H1x1_3  =    -0.31074016443189 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.31074016443189 + H1x1_3 ;
1251380   +   H1x1_4  =    -1.37395810355475 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -1.37395810355475 + H1x1_4 ;
1251381   +   H1x1_5  =    -0.62889533479826 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.62889533479826 + H1x1_5 ;
1251382   +   H1x1_6  = 0;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0;
1251383   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
1251384   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1251385   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
1251386   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
1251387   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
1251388   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
1251389   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
1251390   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
1251391   +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
1251392   +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
1251393   +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
1251394   +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
1251395   +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
1251396   +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
1251397   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
1251398   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
1251399   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
1251400   +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
1251401   +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
1251402   +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
1251403   +END;
MPRINT(EM_DIAGRAM):   END;
1251404   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1251405   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
1251406   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
1251407   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
1251408   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
1251409   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
1251410   +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
1251411   +END;
MPRINT(EM_DIAGRAM):   END;
1251412   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1251413   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
1251414   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1251415   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1251416   +   H1x2_1  =     0.56269814727649 * S_AcceptedCmpTotal
1251417   +          +    -0.56663088753275 * S_Age  +    -0.08799157593784 * S_Frq
1251418   +          +      0.8158986182256 * S_Income  +     0.25081960997161 *
1251419   +        S_Kidhome  +    -0.53258140179906 * S_Mnt  +     0.15843644803762 *
1251420   +        S_MntFishProducts  +    -0.87373368590299 * S_MntFruits
1251421   +          +     0.02807252984992 * S_MntGoldProds  +     1.41661611364623 *
1251422   +        S_MntMeatProducts  +     1.22431140889383 * S_MntSweetProducts
1251423   +          +    -0.25451913627032 * S_MntWines  +     0.13515407201266 *
1251424   +        S_MonthsAsCustomer  +     1.28583120667445 * S_NumCatalogPurchases
1251425   +          +     1.50005927423985 * S_NumDealsPurchases
1251426   +          +      0.5590536933569 * S_NumDistPurchases
1251427   +          +    -0.61757824339318 * S_NumStorePurchases
1251428   +          +     0.37259686538158 * S_NumWebPurchases
1251429   +          +     2.59725437895564 * S_NumWebVisitsMonth
1251430   +          +     1.61096386499852 * S_RFMstat  +      0.6096177019772 *
1251431   +        S_RMntFrq  +    -2.38795796980324 * S_Recency
1251432   +          +    -0.31987414022375 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.56269814727649 * S_AcceptedCmpTotal + -0.56663088753275 *
S_Age + -0.08799157593784 * S_Frq + 0.8158986182256 * S_Income + 0.25081960997161 * S_Kidhome
+ -0.53258140179906 * S_Mnt + 0.15843644803762 * S_MntFishProducts + -0.87373368590299 *
S_MntFruits + 0.02807252984992 * S_MntGoldProds + 1.41661611364623 * S_MntMeatProducts +
1.22431140889383 * S_MntSweetProducts + -0.25451913627032 * S_MntWines + 0.13515407201266 *
S_MonthsAsCustomer + 1.28583120667445 * S_NumCatalogPurchases + 1.50005927423985 *
S_NumDealsPurchases + 0.5590536933569 * S_NumDistPurchases + -0.61757824339318 *
S_NumStorePurchases + 0.37259686538158 * S_NumWebPurchases + 2.59725437895564 *
S_NumWebVisitsMonth + 1.61096386499852 * S_RFMstat + 0.6096177019772 * S_RMntFrq +
-2.38795796980324 * S_Recency + -0.31987414022375 * S_Teenhome ;
1251433   +   H1x2_2  =    -1.93801069736585 * S_AcceptedCmpTotal
1251434   +          +     1.10394781020217 * S_Age  +    -0.47335296021798 * S_Frq
1251435   +          +    -1.34212492602253 * S_Income  +    -1.34380793722996 *
1251436   +        S_Kidhome  +      0.9110881410704 * S_Mnt  +    -2.21001317666388 *
1251437   +        S_MntFishProducts  +     0.73821267564247 * S_MntFruits
1251438   +          +     0.16536006752146 * S_MntGoldProds  +     0.03402222784641 *
1251439   +        S_MntMeatProducts  +     0.96043668102736 * S_MntSweetProducts
1251440   +          +    -1.40670343451334 * S_MntWines  +     0.81378739821838 *
1251441   +        S_MonthsAsCustomer  +    -0.45596935664336 * S_NumCatalogPurchases
1251442   +          +    -0.09282222088797 * S_NumDealsPurchases
1251443   +          +     0.10726247938321 * S_NumDistPurchases
1251444   +          +     -1.1235971458527 * S_NumStorePurchases
1251445   +          +    -0.78304387839877 * S_NumWebPurchases
1251446   +          +    -0.44139243179956 * S_NumWebVisitsMonth
1251447   +          +    -0.00027499457791 * S_RFMstat  +    -0.71480759211982 *
1251448   +        S_RMntFrq  +     2.19072220135069 * S_Recency
1251449   +          +    -0.32246312005896 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -1.93801069736585 * S_AcceptedCmpTotal + 1.10394781020217 *
S_Age + -0.47335296021798 * S_Frq + -1.34212492602253 * S_Income + -1.34380793722996 *
S_Kidhome + 0.9110881410704 * S_Mnt + -2.21001317666388 * S_MntFishProducts + 0.73821267564247
* S_MntFruits + 0.16536006752146 * S_MntGoldProds + 0.03402222784641 * S_MntMeatProducts +
0.96043668102736 * S_MntSweetProducts + -1.40670343451334 * S_MntWines + 0.81378739821838 *
S_MonthsAsCustomer + -0.45596935664336 * S_NumCatalogPurchases + -0.09282222088797 *
S_NumDealsPurchases + 0.10726247938321 * S_NumDistPurchases + -1.1235971458527 *
S_NumStorePurchases + -0.78304387839877 * S_NumWebPurchases + -0.44139243179956 *
S_NumWebVisitsMonth + -0.00027499457791 * S_RFMstat + -0.71480759211982 * S_RMntFrq +
2.19072220135069 * S_Recency + -0.32246312005896 * S_Teenhome ;
1251450   +   H1x2_3  =    -0.33286965179681 * S_AcceptedCmpTotal
1251451   +          +     0.25643420238739 * S_Age  +     1.78251276306291 * S_Frq
1251452   +          +     0.42668628662657 * S_Income  +    -0.44555069154972 *
1251453   +        S_Kidhome  +     0.99430376599176 * S_Mnt  +     0.37152911215285 *
1251454   +        S_MntFishProducts  +    -1.00181313725345 * S_MntFruits
1251455   +          +    -1.88393479121141 * S_MntGoldProds  +    -1.71643056154209 *
1251456   +        S_MntMeatProducts  +    -0.69325136508245 * S_MntSweetProducts
1251457   +          +     0.36062578298416 * S_MntWines  +    -1.43361051175418 *
1251458   +        S_MonthsAsCustomer  +     0.92624996511804 * S_NumCatalogPurchases
1251459   +          +     0.35349185459988 * S_NumDealsPurchases
1251460   +          +     0.06853677714859 * S_NumDistPurchases
1251461   +          +    -1.47546012999338 * S_NumStorePurchases
1251462   +          +     0.20926435398916 * S_NumWebPurchases
1251463   +          +    -1.00535683639093 * S_NumWebVisitsMonth
1251464   +          +     0.39738023685345 * S_RFMstat  +     0.54359550262445 *
1251465   +        S_RMntFrq  +    -1.59138379954757 * S_Recency
1251466   +          +    -0.72224029606658 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.33286965179681 * S_AcceptedCmpTotal + 0.25643420238739 *
S_Age + 1.78251276306291 * S_Frq + 0.42668628662657 * S_Income + -0.44555069154972 * S_Kidhome
+ 0.99430376599176 * S_Mnt + 0.37152911215285 * S_MntFishProducts + -1.00181313725345 *
S_MntFruits + -1.88393479121141 * S_MntGoldProds + -1.71643056154209 * S_MntMeatProducts +
-0.69325136508245 * S_MntSweetProducts + 0.36062578298416 * S_MntWines + -1.43361051175418 *
S_MonthsAsCustomer + 0.92624996511804 * S_NumCatalogPurchases + 0.35349185459988 *
S_NumDealsPurchases + 0.06853677714859 * S_NumDistPurchases + -1.47546012999338 *
S_NumStorePurchases + 0.20926435398916 * S_NumWebPurchases + -1.00535683639093 *
S_NumWebVisitsMonth + 0.39738023685345 * S_RFMstat + 0.54359550262445 * S_RMntFrq +
-1.59138379954757 * S_Recency + -0.72224029606658 * S_Teenhome ;
1251467   +   H1x2_4  =     -0.0656876758781 * S_AcceptedCmpTotal
1251468   +          +    -0.38220805193452 * S_Age  +    -0.62740801625755 * S_Frq
1251469   +          +     0.62992117571672 * S_Income  +      1.6289723191423 *
1251470   +        S_Kidhome  +     0.37209535830613 * S_Mnt  +     0.55983487785376 *
1251471   +        S_MntFishProducts  +    -2.12992009015736 * S_MntFruits
1251472   +          +    -0.38291517806426 * S_MntGoldProds  +    -1.36584955015054 *
1251473   +        S_MntMeatProducts  +     0.60790195398286 * S_MntSweetProducts
1251474   +          +     2.43674403604903 * S_MntWines  +     -0.0680555682506 *
1251475   +        S_MonthsAsCustomer  +    -0.38141588539042 * S_NumCatalogPurchases
1251476   +          +      0.3873586120272 * S_NumDealsPurchases
1251477   +          +     0.25911651157596 * S_NumDistPurchases
1251478   +          +     1.58922489084287 * S_NumStorePurchases
1251479   +          +     0.49041797743368 * S_NumWebPurchases
1251480   +          +     -1.5425586871929 * S_NumWebVisitsMonth
1251481   +          +    -0.68794085469802 * S_RFMstat  +     1.43555366196783 *
1251482   +        S_RMntFrq  +     1.03099569333498 * S_Recency
1251483   +          +    -0.33160793159803 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.0656876758781 * S_AcceptedCmpTotal + -0.38220805193452 *
S_Age + -0.62740801625755 * S_Frq + 0.62992117571672 * S_Income + 1.6289723191423 * S_Kidhome
+ 0.37209535830613 * S_Mnt + 0.55983487785376 * S_MntFishProducts + -2.12992009015736 *
S_MntFruits + -0.38291517806426 * S_MntGoldProds + -1.36584955015054 * S_MntMeatProducts +
0.60790195398286 * S_MntSweetProducts + 2.43674403604903 * S_MntWines + -0.0680555682506 *
S_MonthsAsCustomer + -0.38141588539042 * S_NumCatalogPurchases + 0.3873586120272 *
S_NumDealsPurchases + 0.25911651157596 * S_NumDistPurchases + 1.58922489084287 *
S_NumStorePurchases + 0.49041797743368 * S_NumWebPurchases + -1.5425586871929 *
S_NumWebVisitsMonth + -0.68794085469802 * S_RFMstat + 1.43555366196783 * S_RMntFrq +
1.03099569333498 * S_Recency + -0.33160793159803 * S_Teenhome ;
1251484   +   H1x2_5  =      1.1619646008295 * S_AcceptedCmpTotal
1251485   +          +     -1.1099918698895 * S_Age  +     1.07090049938562 * S_Frq
1251486   +          +     0.68405730495336 * S_Income  +     0.10310173850527 *
1251487   +        S_Kidhome  +    -0.20536085581003 * S_Mnt  +    -0.13505440333321 *
1251488   +        S_MntFishProducts  +      0.7330354505267 * S_MntFruits
1251489   +          +    -0.09266368133722 * S_MntGoldProds  +     0.11251229112529 *
1251490   +        S_MntMeatProducts  +     0.93293215365852 * S_MntSweetProducts
1251491   +          +    -0.30739945619686 * S_MntWines  +     1.60111236559554 *
1251492   +        S_MonthsAsCustomer  +    -0.55541485540949 * S_NumCatalogPurchases
1251493   +          +    -0.60830880287865 * S_NumDealsPurchases
1251494   +          +      0.0745331267194 * S_NumDistPurchases
1251495   +          +    -1.39472448256952 * S_NumStorePurchases
1251496   +          +     1.95372179969087 * S_NumWebPurchases
1251497   +          +    -0.63307356390404 * S_NumWebVisitsMonth
1251498   +          +    -1.45142676869601 * S_RFMstat  +    -0.89091053567015 *
1251499   +        S_RMntFrq  +    -0.29197897313114 * S_Recency
1251500   +          +     0.02610681671236 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.1619646008295 * S_AcceptedCmpTotal + -1.1099918698895 * S_Age
+ 1.07090049938562 * S_Frq + 0.68405730495336 * S_Income + 0.10310173850527 * S_Kidhome +
-0.20536085581003 * S_Mnt + -0.13505440333321 * S_MntFishProducts + 0.7330354505267 *
S_MntFruits + -0.09266368133722 * S_MntGoldProds + 0.11251229112529 * S_MntMeatProducts +
0.93293215365852 * S_MntSweetProducts + -0.30739945619686 * S_MntWines + 1.60111236559554 *
S_MonthsAsCustomer + -0.55541485540949 * S_NumCatalogPurchases + -0.60830880287865 *
S_NumDealsPurchases + 0.0745331267194 * S_NumDistPurchases + -1.39472448256952 *
S_NumStorePurchases + 1.95372179969087 * S_NumWebPurchases + -0.63307356390404 *
S_NumWebVisitsMonth + -1.45142676869601 * S_RFMstat + -0.89091053567015 * S_RMntFrq +
-0.29197897313114 * S_Recency + 0.02610681671236 * S_Teenhome ;
1251501   +   H1x2_1  = H1x2_1  +    -0.60663534965526 * AcceptedCmp10
1251502   +          +     0.86940361180064 * AcceptedCmp20  +     1.96097801395475 *
1251503   +        AcceptedCmp30  +    -0.07604718607607 * AcceptedCmp40
1251504   +          +    -2.82012437662904 * AcceptedCmp50  +     2.92223307409835 *
1251505   +        Complain0  +      0.7388639458943 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.60663534965526 * AcceptedCmp10 + 0.86940361180064 *
AcceptedCmp20 + 1.96097801395475 * AcceptedCmp30 + -0.07604718607607 * AcceptedCmp40 +
-2.82012437662904 * AcceptedCmp50 + 2.92223307409835 * Complain0 + 0.7388639458943 *
HigherEducationBinary0 ;
1251506   +   H1x2_2  = H1x2_2  +    -0.44975979140124 * AcceptedCmp10
1251507   +          +    -0.14894854897951 * AcceptedCmp20  +     1.05214102326393 *
1251508   +        AcceptedCmp30  +    -0.24568060312448 * AcceptedCmp40
1251509   +          +    -0.32148548771167 * AcceptedCmp50  +    -0.06212131202705 *
1251510   +        Complain0  +    -1.15456299494407 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.44975979140124 * AcceptedCmp10 + -0.14894854897951
* AcceptedCmp20 + 1.05214102326393 * AcceptedCmp30 + -0.24568060312448 * AcceptedCmp40 +
-0.32148548771167 * AcceptedCmp50 + -0.06212131202705 * Complain0 + -1.15456299494407 *
HigherEducationBinary0 ;
1251511   +   H1x2_3  = H1x2_3  +     0.05559829595526 * AcceptedCmp10
1251512   +          +    -0.79357273390501 * AcceptedCmp20  +     1.19638475921939 *
1251513   +        AcceptedCmp30  +     -0.4185483500346 * AcceptedCmp40
1251514   +          +     1.62070541716774 * AcceptedCmp50  +     0.42618871432227 *
1251515   +        Complain0  +    -1.31545071935076 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.05559829595526 * AcceptedCmp10 + -0.79357273390501 *
AcceptedCmp20 + 1.19638475921939 * AcceptedCmp30 + -0.4185483500346 * AcceptedCmp40 +
1.62070541716774 * AcceptedCmp50 + 0.42618871432227 * Complain0 + -1.31545071935076 *
HigherEducationBinary0 ;
1251516   +   H1x2_4  = H1x2_4  +     0.79295384489774 * AcceptedCmp10
1251517   +          +    -1.12840237512106 * AcceptedCmp20  +     1.32129555401653 *
1251518   +        AcceptedCmp30  +    -0.25952521594596 * AcceptedCmp40
1251519   +          +     0.80872302488736 * AcceptedCmp50  +     1.00677398871609 *
1251520   +        Complain0  +    -0.40309387727555 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.79295384489774 * AcceptedCmp10 + -1.12840237512106 *
AcceptedCmp20 + 1.32129555401653 * AcceptedCmp30 + -0.25952521594596 * AcceptedCmp40 +
0.80872302488736 * AcceptedCmp50 + 1.00677398871609 * Complain0 + -0.40309387727555 *
HigherEducationBinary0 ;
1251521   +   H1x2_5  = H1x2_5  +     0.27407087260629 * AcceptedCmp10
1251522   +          +    -1.62993283587806 * AcceptedCmp20  +     -0.7976151702219 *
1251523   +        AcceptedCmp30  +    -1.43236001965205 * AcceptedCmp40
1251524   +          +     0.31785497417833 * AcceptedCmp50  +     -0.4935881696628 *
1251525   +        Complain0  +    -0.90101154412077 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.27407087260629 * AcceptedCmp10 + -1.62993283587806 *
AcceptedCmp20 + -0.7976151702219 * AcceptedCmp30 + -1.43236001965205 * AcceptedCmp40 +
0.31785497417833 * AcceptedCmp50 + -0.4935881696628 * Complain0 + -0.90101154412077 *
HigherEducationBinary0 ;
1251526   +   H1x2_1  = H1x2_1  +    -0.42532202605687 * Education2n_Cycle
1251527   +          +     0.05209663685716 * EducationBasic  +     1.32477268007154 *
1251528   +        EducationGraduation  +    -1.16900224373137 * EducationMaster
1251529   +          +    -1.33377871643323 * Marital_StatusDivorced
1251530   +          +    -0.87184228840898 * Marital_StatusMarried
1251531   +          +     1.41223186340257 * Marital_StatusSingle
1251532   +          +     0.26542930660962 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.42532202605687 * Education2n_Cycle +
0.05209663685716 * EducationBasic + 1.32477268007154 * EducationGraduation + -1.16900224373137
* EducationMaster + -1.33377871643323 * Marital_StatusDivorced + -0.87184228840898 *
Marital_StatusMarried + 1.41223186340257 * Marital_StatusSingle + 0.26542930660962 *
Marital_StatusTogether ;
1251533   +   H1x2_2  = H1x2_2  +     0.31980851177227 * Education2n_Cycle
1251534   +          +     1.82629979795037 * EducationBasic  +     0.59482979766527 *
1251535   +        EducationGraduation  +     0.38341272155343 * EducationMaster
1251536   +          +    -0.21479890935233 * Marital_StatusDivorced
1251537   +          +     -0.0025459519579 * Marital_StatusMarried
1251538   +          +     1.33900491702264 * Marital_StatusSingle
1251539   +          +     0.31338385402434 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.31980851177227 * Education2n_Cycle +
1.82629979795037 * EducationBasic + 0.59482979766527 * EducationGraduation + 0.38341272155343
* EducationMaster + -0.21479890935233 * Marital_StatusDivorced + -0.0025459519579 *
Marital_StatusMarried + 1.33900491702264 * Marital_StatusSingle + 0.31338385402434 *
Marital_StatusTogether ;
1251540   +   H1x2_3  = H1x2_3  +     -1.1277686958847 * Education2n_Cycle
1251541   +          +    -0.32701971979058 * EducationBasic  +      0.4361680205519 *
1251542   +        EducationGraduation  +     0.60739269725685 * EducationMaster
1251543   +          +    -0.38307267471999 * Marital_StatusDivorced
1251544   +          +     0.97088969451415 * Marital_StatusMarried
1251545   +          +    -0.28578224473381 * Marital_StatusSingle
1251546   +          +     0.16178086683874 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -1.1277686958847 * Education2n_Cycle +
-0.32701971979058 * EducationBasic + 0.4361680205519 * EducationGraduation + 0.60739269725685
* EducationMaster + -0.38307267471999 * Marital_StatusDivorced + 0.97088969451415 *
Marital_StatusMarried + -0.28578224473381 * Marital_StatusSingle + 0.16178086683874 *
Marital_StatusTogether ;
1251547   +   H1x2_4  = H1x2_4  +    -1.21481485652985 * Education2n_Cycle
1251548   +          +    -0.30231261977781 * EducationBasic  +     0.33993210461674 *
1251549   +        EducationGraduation  +     0.14160673378252 * EducationMaster
1251550   +          +    -1.42229401093569 * Marital_StatusDivorced
1251551   +          +      0.7234508382397 * Marital_StatusMarried
1251552   +          +    -0.29062202974628 * Marital_StatusSingle
1251553   +          +     1.00102560376832 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + -1.21481485652985 * Education2n_Cycle +
-0.30231261977781 * EducationBasic + 0.33993210461674 * EducationGraduation + 0.14160673378252
* EducationMaster + -1.42229401093569 * Marital_StatusDivorced + 0.7234508382397 *
Marital_StatusMarried + -0.29062202974628 * Marital_StatusSingle + 1.00102560376832 *
Marital_StatusTogether ;
1251554   +   H1x2_5  = H1x2_5  +     0.47313927233084 * Education2n_Cycle
1251555   +          +     0.53675687099431 * EducationBasic  +    -0.75029054398953 *
1251556   +        EducationGraduation  +     -0.7118631990538 * EducationMaster
1251557   +          +    -0.99067637207205 * Marital_StatusDivorced
1251558   +          +    -0.50245902142079 * Marital_StatusMarried
1251559   +          +     0.54214494533793 * Marital_StatusSingle
1251560   +          +    -1.90023876403873 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.47313927233084 * Education2n_Cycle +
0.53675687099431 * EducationBasic + -0.75029054398953 * EducationGraduation + -0.7118631990538
* EducationMaster + -0.99067637207205 * Marital_StatusDivorced + -0.50245902142079 *
Marital_StatusMarried + 0.54214494533793 * Marital_StatusSingle + -1.90023876403873 *
Marital_StatusTogether ;
1251561   +   H1x2_1  =    -0.76220110175787 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.76220110175787 + H1x2_1 ;
1251562   +   H1x2_2  =     0.33238308796509 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.33238308796509 + H1x2_2 ;
1251563   +   H1x2_3  =    -1.79229186263718 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -1.79229186263718 + H1x2_3 ;
1251564   +   H1x2_4  =     2.90076107393596 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 2.90076107393596 + H1x2_4 ;
1251565   +   H1x2_5  =    -1.75965576502183 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -1.75965576502183 + H1x2_5 ;
1251566   +   H1x2_6  = 0;
MPRINT(EM_DIAGRAM):   H1x2_6 = 0;
1251567   +   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 );
1251568   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1251569   +   H1x2_1  = EXP(H1x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(H1x2_1 - _MAX_);
1251570   +   _SUM_ = _SUM_ + H1x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_1 ;
1251571   +   H1x2_2  = EXP(H1x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(H1x2_2 - _MAX_);
1251572   +   _SUM_ = _SUM_ + H1x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_2 ;
1251573   +   H1x2_3  = EXP(H1x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(H1x2_3 - _MAX_);
1251574   +   _SUM_ = _SUM_ + H1x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_3 ;
1251575   +   H1x2_4  = EXP(H1x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(H1x2_4 - _MAX_);
1251576   +   _SUM_ = _SUM_ + H1x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_4 ;
1251577   +   H1x2_5  = EXP(H1x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(H1x2_5 - _MAX_);
1251578   +   _SUM_ = _SUM_ + H1x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_5 ;
1251579   +   H1x2_6  = EXP(H1x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(H1x2_6 - _MAX_);
1251580   +   _SUM_ = _SUM_ + H1x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_6 ;
1251581   +   H1x2_1  = H1x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 / _SUM_;
1251582   +   H1x2_2  = H1x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 / _SUM_;
1251583   +   H1x2_3  = H1x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 / _SUM_;
1251584   +   H1x2_4  = H1x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 / _SUM_;
1251585   +   H1x2_5  = H1x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 / _SUM_;
1251586   +   H1x2_6  = H1x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 / _SUM_;
1251587   +END;
MPRINT(EM_DIAGRAM):   END;
1251588   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1251589   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
1251590   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
1251591   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
1251592   +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
1251593   +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
1251594   +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
1251595   +END;
MPRINT(EM_DIAGRAM):   END;
1251596   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1251597   +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
1251598   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1251599   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1251600   +   H2x1_1  =       1.974359971482 * H1x1_1  +     2.56630185065386 * H1x1_2
1251601   +          +    -2.09978917716486 * H1x1_3  +      2.5733942680354 * H1x1_4
1251602   +          +    -3.36902992698085 * H1x1_5  +    -2.45757278280195 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.974359971482 * H1x1_1 + 2.56630185065386 * H1x1_2 +
-2.09978917716486 * H1x1_3 + 2.5733942680354 * H1x1_4 + -3.36902992698085 * H1x1_5 +
-2.45757278280195 * H1x1_6 ;
1251603   +   H2x1_2  =    -0.31797232371002 * H1x1_1  +     1.40395330167402 * H1x1_2
1251604   +          +     1.81616324109762 * H1x1_3  +     1.53849589982775 * H1x1_4
1251605   +          +    -0.63132385856109 * H1x1_5  +    -2.28426391810485 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -0.31797232371002 * H1x1_1 + 1.40395330167402 * H1x1_2 +
1.81616324109762 * H1x1_3 + 1.53849589982775 * H1x1_4 + -0.63132385856109 * H1x1_5 +
-2.28426391810485 * H1x1_6 ;
1251606   +   H2x1_3  =    -1.34821716876354 * H1x1_1  +    -1.59136815069547 * H1x1_2
1251607   +          +     1.51830421093731 * H1x1_3  +     0.25947292816575 * H1x1_4
1251608   +          +     0.68626537551183 * H1x1_5  +     0.08021226539433 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -1.34821716876354 * H1x1_1 + -1.59136815069547 * H1x1_2 +
1.51830421093731 * H1x1_3 + 0.25947292816575 * H1x1_4 + 0.68626537551183 * H1x1_5 +
0.08021226539433 * H1x1_6 ;
1251609   +   H2x1_4  =     1.81371453071507 * H1x1_1  +     2.86509325576366 * H1x1_2
1251610   +          +    -2.51923468751378 * H1x1_3  +     3.48823967488449 * H1x1_4
1251611   +          +    -1.98439811139438 * H1x1_5  +    -1.35359233519863 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.81371453071507 * H1x1_1 + 2.86509325576366 * H1x1_2 +
-2.51923468751378 * H1x1_3 + 3.48823967488449 * H1x1_4 + -1.98439811139438 * H1x1_5 +
-1.35359233519863 * H1x1_6 ;
1251612   +   H2x1_5  =     2.41779243188377 * H1x1_1  +     2.38684872287302 * H1x1_2
1251613   +          +    -2.38697428830295 * H1x1_3  +     3.64463866412774 * H1x1_4
1251614   +          +    -6.25925640356471 * H1x1_5  +    -2.41187367604766 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = 2.41779243188377 * H1x1_1 + 2.38684872287302 * H1x1_2 +
-2.38697428830295 * H1x1_3 + 3.64463866412774 * H1x1_4 + -6.25925640356471 * H1x1_5 +
-2.41187367604766 * H1x1_6 ;
1251615   +   H2x1_6  =    -0.72042650045348 * H1x1_1  +      0.1896194130913 * H1x1_2
1251616   +          +     0.90899894568677 * H1x1_3  +    -1.82868335056689 * H1x1_4
1251617   +          +     0.25430380699211 * H1x1_5  +     0.21617396847163 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = -0.72042650045348 * H1x1_1 + 0.1896194130913 * H1x1_2 +
0.90899894568677 * H1x1_3 + -1.82868335056689 * H1x1_4 + 0.25430380699211 * H1x1_5 +
0.21617396847163 * H1x1_6 ;
1251618   +   H2x1_1  = H2x1_1  +     1.25654059966646 * H1x2_1
1251619   +          +     1.54802434303135 * H1x2_2  +     -0.8831980397117 * H1x2_3
1251620   +          +    -0.06778839937099 * H1x2_4  +      0.5440972304381 * H1x2_5
1251621   +          +      0.2606136576082 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 1.25654059966646 * H1x2_1 + 1.54802434303135 * H1x2_2
+ -0.8831980397117 * H1x2_3 + -0.06778839937099 * H1x2_4 + 0.5440972304381 * H1x2_5 +
0.2606136576082 * H1x2_6 ;
1251622   +   H2x1_2  = H2x1_2  +      1.1804478706954 * H1x2_1
1251623   +          +    -1.54526687654235 * H1x2_2  +    -1.84586479319799 * H1x2_3
1251624   +          +     1.53060510120437 * H1x2_4  +     1.17038673632413 * H1x2_5
1251625   +          +    -0.33816948355449 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 1.1804478706954 * H1x2_1 + -1.54526687654235 * H1x2_2
+ -1.84586479319799 * H1x2_3 + 1.53060510120437 * H1x2_4 + 1.17038673632413 * H1x2_5 +
-0.33816948355449 * H1x2_6 ;
1251626   +   H2x1_3  = H2x1_3  +    -0.17829043463382 * H1x2_1
1251627   +          +    -0.25137506897353 * H1x2_2  +     0.16242586068799 * H1x2_3
1251628   +          +    -0.09404795949359 * H1x2_4  +    -0.46228597203598 * H1x2_5
1251629   +          +    -2.05648585275111 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -0.17829043463382 * H1x2_1 + -0.25137506897353 *
H1x2_2 + 0.16242586068799 * H1x2_3 + -0.09404795949359 * H1x2_4 + -0.46228597203598 * H1x2_5 +
-2.05648585275111 * H1x2_6 ;
1251630   +   H2x1_4  = H2x1_4  +     0.42433995729877 * H1x2_1
1251631   +          +    -0.48506090180667 * H1x2_2  +    -2.00023889633201 * H1x2_3
1251632   +          +    -2.18353148884875 * H1x2_4  +      1.8888560029491 * H1x2_5
1251633   +          +     0.10756694741742 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 0.42433995729877 * H1x2_1 + -0.48506090180667 * H1x2_2
+ -2.00023889633201 * H1x2_3 + -2.18353148884875 * H1x2_4 + 1.8888560029491 * H1x2_5 +
0.10756694741742 * H1x2_6 ;
1251634   +   H2x1_5  = H2x1_5  +     1.56363187716685 * H1x2_1
1251635   +          +    -1.60380055270086 * H1x2_2  +    -0.10253336309679 * H1x2_3
1251636   +          +    -0.70868484989608 * H1x2_4  +    -1.01428312449496 * H1x2_5
1251637   +          +    -0.52564497366659 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + 1.56363187716685 * H1x2_1 + -1.60380055270086 * H1x2_2
+ -0.10253336309679 * H1x2_3 + -0.70868484989608 * H1x2_4 + -1.01428312449496 * H1x2_5 +
-0.52564497366659 * H1x2_6 ;
1251638   +   H2x1_6  = H2x1_6  +    -2.54663319607132 * H1x2_1
1251639   +          +    -0.26971572820094 * H1x2_2  +      0.0632302804701 * H1x2_3
1251640   +          +     0.24322354570335 * H1x2_4  +     0.66904111988013 * H1x2_5
1251641   +          +     0.74493468449949 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + -2.54663319607132 * H1x2_1 + -0.26971572820094 *
H1x2_2 + 0.0632302804701 * H1x2_3 + 0.24322354570335 * H1x2_4 + 0.66904111988013 * H1x2_5 +
0.74493468449949 * H1x2_6 ;
1251642   +   H2x1_1  =    -0.48109096483079 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -0.48109096483079 + H2x1_1 ;
1251643   +   H2x1_2  =     1.80708027085243 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.80708027085243 + H2x1_2 ;
1251644   +   H2x1_3  =    -0.46023689639613 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -0.46023689639613 + H2x1_3 ;
1251645   +   H2x1_4  =     0.33871753804401 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 0.33871753804401 + H2x1_4 ;
1251646   +   H2x1_5  =    -0.31584249921712 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -0.31584249921712 + H2x1_5 ;
1251647   +   H2x1_6  =     0.30285416134468 + H2x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 0.30285416134468 + H2x1_6 ;
1251648   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
1251649   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
1251650   +   H2x1_1  = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
1251651   +   H2x1_2  = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
1251652   +   H2x1_3  = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
1251653   +   H2x1_4  = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
1251654   +   H2x1_5  = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_5 = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
1251655   +   H2x1_6  = 1.0 / (1.0 + EXP(MIN( - H2x1_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.0 / (1.0 + EXP(MIN( - H2x1_6 , _EXP_BAR)));
1251656   +END;
MPRINT(EM_DIAGRAM):   END;
1251657   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1251658   +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
1251659   +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
1251660   +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
1251661   +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
1251662   +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
1251663   +   H2x1_6  = .;
MPRINT(EM_DIAGRAM):   H2x1_6 = .;
1251664   +END;
MPRINT(EM_DIAGRAM):   END;
1251665   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1251666   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1251667   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1251668   +
1251669   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1251670   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1251671   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1251672   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1251673   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1251674   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1251675   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1251676   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1251677   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1251678   +end;
MPRINT(EM_DIAGRAM):   end;
1251679   +else do;
MPRINT(EM_DIAGRAM):   else do;
1251680   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1251681   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1251682   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1251683   +   end;
MPRINT(EM_DIAGRAM):   end;
1251684   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1251685   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1251686   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1251687   +   end;
MPRINT(EM_DIAGRAM):   end;
1251688   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1251689   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1251690   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1251691   +   end;
MPRINT(EM_DIAGRAM):   end;
1251692   +end;
MPRINT(EM_DIAGRAM):   end;
1251693   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1251694   +   P_DepVar1  =     7.89179702798476 * H2x1_1  +    -2.13955806072986 * H2x1_2
1251695   +          +    -3.88305304025889 * H2x1_3  +     4.07340753853874 * H2x1_4
1251696   +          +     7.74293596833296 * H2x1_5  +     -3.8939011811129 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 7.89179702798476 * H2x1_1 + -2.13955806072986 * H2x1_2 +
-3.88305304025889 * H2x1_3 + 4.07340753853874 * H2x1_4 + 7.74293596833296 * H2x1_5 +
-3.8939011811129 * H2x1_6 ;
1251697   +   P_DepVar1  =    -5.20107973804597 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -5.20107973804597 + P_DepVar1 ;
1251698   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1251699   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1251700   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1251701   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1251702   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1251703   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1251704   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1251705   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1251706   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1251707   +END;
MPRINT(EM_DIAGRAM):   END;
1251708   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1251709   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1251710   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1251711   +END;
MPRINT(EM_DIAGRAM):   END;
1251712   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1251713   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1251714   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1251715   +END;
MPRINT(EM_DIAGRAM):   END;
1251716   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1251717   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1251718   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1251719   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1251720   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1251721   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1251722   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1251723   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1251724   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1251725   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1251726   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1251727   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1251728   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1251729   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1251730   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1251731   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1251732   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1251733   +END;
MPRINT(EM_DIAGRAM):   END;
1251734   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1251735   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1251736   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1251737   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1251738   +* Renaming variables for AutoNeural11;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural11;
1251739   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1251740   +* Renaming Posterior variables for AutoNeural11;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural11;
1251741   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1251742   +drop AutoNeural11_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural11_P_DepVar1;
1251743   +AutoNeural11_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural11_P_DepVar1 = P_DepVar1;
1251744   +drop AutoNeural11_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural11_P_DepVar0;
1251745   +AutoNeural11_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural11_P_DepVar0 = P_DepVar0;
1251746   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1251747   +* Renaming _WARN_ variable for AutoNeural11;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural11;
1251748   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1251749   +length AutoNeural11_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural11_WARN_ $4;
1251750   +drop AutoNeural11_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural11_WARN_;
1251751   +AutoNeural11_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural11_WARN_ = _WARN_;
1251752   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1251753   +* Ensmbl46: Scoring Code of model 5 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl46: Scoring Code of model 5 of 5;
1251754   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1251755   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1251756   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
1251757   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1251758   +* NODE: AutoNeural9;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural9;
1251759   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1251760   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1251761   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1251762   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1251763   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1251764   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1251765   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1251766   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1251767   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1251768   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1251769   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1251770   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1251771   +LENGTH _WARN_ $4
1251772   +      F_DepVar  $ 12
1251773   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1251774   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1251775   +
1251776   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1251777   +
1251778   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1251779   +
1251780   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1251781   +
1251782   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1251783   +
1251784   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1251785   +
1251786   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1251787   +
1251788   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1251789   +
1251790   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1251791   +
1251792   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1251793   +
1251794   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1251795   +
1251796   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1251797   +
1251798   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1251799   +
1251800   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1251801   +
1251802   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1251803   +
1251804   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1251805   +
1251806   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1251807   +
1251808   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1251809   +
1251810   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1251811   +
1251812   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1251813   +
1251814   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1251815   +
1251816   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1251817   +
1251818   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1251819   +
1251820   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1251821   +
1251822   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1251823   +
1251824   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1251825   +
1251826   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1251827   +
1251828   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1251829   +
1251830   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1251831   +
1251832   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1251833   +
1251834   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1251835   +
1251836   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1251837   +
1251838   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1251839   +
1251840   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1251841   +
1251842   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1251843   +
1251844   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1251845   +
1251846   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1251847   +
1251848   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1251849   +
1251850   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
1251851   +
1251852   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
1251853   +
1251854   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
1251855   +
1251856   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
1251857   +
1251858   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1251859   +
1251860   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1251861   +
1251862   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1251863   +
1251864   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1251865   +
1251866   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1251867   +
1251868   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1251869   +
1251870   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1251871   +
1251872   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1251873   +
1251874   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1251875   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1251876   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1251877   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1251878   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1251879   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1251880   +end;
MPRINT(EM_DIAGRAM):   end;
1251881   +else do;
MPRINT(EM_DIAGRAM):   else do;
1251882   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1251883   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1251884   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1251885   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1251886   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1251887   +   end;
MPRINT(EM_DIAGRAM):   end;
1251888   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1251889   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1251890   +   end;
MPRINT(EM_DIAGRAM):   end;
1251891   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1251892   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1251893   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1251894   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1251895   +   end;
MPRINT(EM_DIAGRAM):   end;
1251896   +end;
MPRINT(EM_DIAGRAM):   end;
1251897   +
1251898   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1251899   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1251900   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1251901   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1251902   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1251903   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1251904   +end;
MPRINT(EM_DIAGRAM):   end;
1251905   +else do;
MPRINT(EM_DIAGRAM):   else do;
1251906   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1251907   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1251908   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1251909   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1251910   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1251911   +   end;
MPRINT(EM_DIAGRAM):   end;
1251912   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1251913   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1251914   +   end;
MPRINT(EM_DIAGRAM):   end;
1251915   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1251916   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1251917   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1251918   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1251919   +   end;
MPRINT(EM_DIAGRAM):   end;
1251920   +end;
MPRINT(EM_DIAGRAM):   end;
1251921   +
1251922   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1251923   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1251924   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1251925   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1251926   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1251927   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1251928   +end;
MPRINT(EM_DIAGRAM):   end;
1251929   +else do;
MPRINT(EM_DIAGRAM):   else do;
1251930   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1251931   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1251932   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1251933   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1251934   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1251935   +   end;
MPRINT(EM_DIAGRAM):   end;
1251936   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1251937   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1251938   +   end;
MPRINT(EM_DIAGRAM):   end;
1251939   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1251940   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1251941   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1251942   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1251943   +   end;
MPRINT(EM_DIAGRAM):   end;
1251944   +end;
MPRINT(EM_DIAGRAM):   end;
1251945   +
1251946   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1251947   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1251948   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1251949   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1251950   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1251951   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1251952   +end;
MPRINT(EM_DIAGRAM):   end;
1251953   +else do;
MPRINT(EM_DIAGRAM):   else do;
1251954   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1251955   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1251956   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1251957   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1251958   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1251959   +   end;
MPRINT(EM_DIAGRAM):   end;
1251960   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1251961   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1251962   +   end;
MPRINT(EM_DIAGRAM):   end;
1251963   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1251964   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1251965   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1251966   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1251967   +   end;
MPRINT(EM_DIAGRAM):   end;
1251968   +end;
MPRINT(EM_DIAGRAM):   end;
1251969   +
1251970   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1251971   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1251972   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1251973   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1251974   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1251975   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1251976   +end;
MPRINT(EM_DIAGRAM):   end;
1251977   +else do;
MPRINT(EM_DIAGRAM):   else do;
1251978   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1251979   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1251980   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1251981   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1251982   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1251983   +   end;
MPRINT(EM_DIAGRAM):   end;
1251984   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1251985   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1251986   +   end;
MPRINT(EM_DIAGRAM):   end;
1251987   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1251988   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1251989   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1251990   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1251991   +   end;
MPRINT(EM_DIAGRAM):   end;
1251992   +end;
MPRINT(EM_DIAGRAM):   end;
1251993   +
1251994   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1251995   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1251996   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1251997   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1251998   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1251999   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1252000   +end;
MPRINT(EM_DIAGRAM):   end;
1252001   +else do;
MPRINT(EM_DIAGRAM):   else do;
1252002   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1252003   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1252004   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1252005   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1252006   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1252007   +   end;
MPRINT(EM_DIAGRAM):   end;
1252008   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1252009   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1252010   +   end;
MPRINT(EM_DIAGRAM):   end;
1252011   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1252012   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1252013   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1252014   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1252015   +   end;
MPRINT(EM_DIAGRAM):   end;
1252016   +end;
MPRINT(EM_DIAGRAM):   end;
1252017   +
1252018   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1252019   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1252020   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1252021   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1252022   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1252023   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1252024   +end;
MPRINT(EM_DIAGRAM):   end;
1252025   +else do;
MPRINT(EM_DIAGRAM):   else do;
1252026   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1252027   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1252028   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1252029   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1252030   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1252031   +   end;
MPRINT(EM_DIAGRAM):   end;
1252032   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1252033   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1252034   +   end;
MPRINT(EM_DIAGRAM):   end;
1252035   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1252036   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1252037   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1252038   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1252039   +   end;
MPRINT(EM_DIAGRAM):   end;
1252040   +end;
MPRINT(EM_DIAGRAM):   end;
1252041   +
1252042   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1252043   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
1252044   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1252045   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1252046   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1252047   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1252048   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1252049   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1252050   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1252051   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1252052   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1252053   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1252054   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1252055   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1252056   +end;
MPRINT(EM_DIAGRAM):   end;
1252057   +else do;
MPRINT(EM_DIAGRAM):   else do;
1252058   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1252059   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1252060   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1252061   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1252062   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1252063   +   end;
MPRINT(EM_DIAGRAM):   end;
1252064   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1252065   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1252066   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1252067   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1252068   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1252069   +   end;
MPRINT(EM_DIAGRAM):   end;
1252070   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1252071   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1252072   +   end;
MPRINT(EM_DIAGRAM):   end;
1252073   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1252074   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1252075   +   end;
MPRINT(EM_DIAGRAM):   end;
1252076   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1252077   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1252078   +   end;
MPRINT(EM_DIAGRAM):   end;
1252079   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1252080   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1252081   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1252082   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1252083   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1252084   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1252085   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1252086   +   end;
MPRINT(EM_DIAGRAM):   end;
1252087   +end;
MPRINT(EM_DIAGRAM):   end;
1252088   +
1252089   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1252090   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1252091   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
1252092   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1252093   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1252094   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1252095   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1252096   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1252097   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1252098   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1252099   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1252100   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1252101   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1252102   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1252103   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1252104   +end;
MPRINT(EM_DIAGRAM):   end;
1252105   +else do;
MPRINT(EM_DIAGRAM):   else do;
1252106   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1252107   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1252108   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1252109   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1252110   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1252111   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1252112   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1252113   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1252114   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1252115   +         end;
MPRINT(EM_DIAGRAM):   end;
1252116   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1252117   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1252118   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1252119   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1252120   +            end;
MPRINT(EM_DIAGRAM):   end;
1252121   +         end;
MPRINT(EM_DIAGRAM):   end;
1252122   +      end;
MPRINT(EM_DIAGRAM):   end;
1252123   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1252124   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1252125   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1252126   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1252127   +         end;
MPRINT(EM_DIAGRAM):   end;
1252128   +      end;
MPRINT(EM_DIAGRAM):   end;
1252129   +   end;
MPRINT(EM_DIAGRAM):   end;
1252130   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1252131   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1252132   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1252133   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1252134   +      end;
MPRINT(EM_DIAGRAM):   end;
1252135   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1252136   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1252137   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1252138   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1252139   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1252140   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1252141   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1252142   +         end;
MPRINT(EM_DIAGRAM):   end;
1252143   +      end;
MPRINT(EM_DIAGRAM):   end;
1252144   +   end;
MPRINT(EM_DIAGRAM):   end;
1252145   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1252146   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1252147   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1252148   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1252149   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1252150   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1252151   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1252152   +   end;
MPRINT(EM_DIAGRAM):   end;
1252153   +end;
MPRINT(EM_DIAGRAM):   end;
1252154   +
1252155   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1252156   +*** Checking missing input Interval
1252157   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1252158   +
1252159   +IF NMISS(
1252160   +   AcceptedCmpTotal ,
1252161   +   Age ,
1252162   +   Frq ,
1252163   +   Income ,
1252164   +   Kidhome ,
1252165   +   Mnt ,
1252166   +   MntFishProducts ,
1252167   +   MntFruits ,
1252168   +   MntGoldProds ,
1252169   +   MntMeatProducts ,
1252170   +   MntSweetProducts ,
1252171   +   MntWines ,
1252172   +   MonthsAsCustomer ,
1252173   +   NumCatalogPurchases ,
1252174   +   NumDealsPurchases ,
1252175   +   NumDistPurchases ,
1252176   +   NumStorePurchases ,
1252177   +   NumWebPurchases ,
1252178   +   NumWebVisitsMonth ,
1252179   +   RFMstat ,
1252180   +   RMntFrq ,
1252181   +   Recency ,
1252182   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
1252183   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1252184   +
1252185   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1252186   +END;
MPRINT(EM_DIAGRAM):   END;
1252187   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1252188   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
1252189   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1252190   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1252191   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1252192   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1252193   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1252194   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1252195   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1252196   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1252197   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1252198   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1252199   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1252200   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1252201   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1252202   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1252203   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1252204   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1252205   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1252206   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1252207   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1252208   +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
1252209   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 *
MonthsAsCustomer ;
1252210   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1252211   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1252212   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1252213   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1252214   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1252215   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1252216   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1252217   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1252218   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1252219   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1252220   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1252221   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1252222   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1252223   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1252224   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1252225   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1252226   +END;
MPRINT(EM_DIAGRAM):   END;
1252227   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1252228   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1252229   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1252230   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1252231   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1252232   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1252233   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1252234   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1252235   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1252236   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1252237   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1252238   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1252239   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1252240   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1252241   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1252242   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1252243   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1252244   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1252245   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1252246   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1252247   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1252248   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1252249   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1252250   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1252251   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1252252   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1252253   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1252254   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1252255   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1252256   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1252257   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1252258   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1252259   +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
1252260   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 *
MonthsAsCustomer ;
1252261   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1252262   +   ELSE S_NumCatalogPurchases
1252263   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1252264   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1252265   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1252266   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1252267   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1252268   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1252269   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1252270   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1252271   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1252272   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1252273   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1252274   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1252275   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1252276   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1252277   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1252278   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1252279   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1252280   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1252281   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1252282   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1252283   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1252284   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1252285   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1252286   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1252287   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1252288   +END;
MPRINT(EM_DIAGRAM):   END;
1252289   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1252290   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
1252291   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1252292   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1252293   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
1252294   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1252295   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1252296   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
1252297   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1252298   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1252299   +   H1x1_1  =    -1.01373445510498 * S_AcceptedCmpTotal
1252300   +          +     0.33447979473871 * S_Age  +    -0.49864038088294 * S_Frq
1252301   +          +     0.31694253224638 * S_Income  +    -0.88502516255759 *
1252302   +        S_Kidhome  +    -0.95839165156922 * S_Mnt  +     1.08690890979971 *
1252303   +        S_MntFishProducts  +     0.21350737967446 * S_MntFruits
1252304   +          +     0.07347211887091 * S_MntGoldProds  +    -4.25839540508751 *
1252305   +        S_MntMeatProducts  +    -0.18409636621761 * S_MntSweetProducts
1252306   +          +     0.92254071667819 * S_MntWines  +     0.17286447654032 *
1252307   +        S_MonthsAsCustomer  +    -1.64446119745791 * S_NumCatalogPurchases
1252308   +          +    -1.14704878034134 * S_NumDealsPurchases
1252309   +          +    -0.17763404274659 * S_NumDistPurchases
1252310   +          +     0.08894400267969 * S_NumStorePurchases
1252311   +          +     0.59283747891957 * S_NumWebPurchases
1252312   +          +     0.85268274682505 * S_NumWebVisitsMonth
1252313   +          +    -0.43035426151546 * S_RFMstat  +     0.52915289749814 *
1252314   +        S_RMntFrq  +    -1.22871580072103 * S_Recency
1252315   +          +    -0.42049179704691 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.01373445510498 * S_AcceptedCmpTotal + 0.33447979473871 *
S_Age + -0.49864038088294 * S_Frq + 0.31694253224638 * S_Income + -0.88502516255759 *
S_Kidhome + -0.95839165156922 * S_Mnt + 1.08690890979971 * S_MntFishProducts +
0.21350737967446 * S_MntFruits + 0.07347211887091 * S_MntGoldProds + -4.25839540508751 *
S_MntMeatProducts + -0.18409636621761 * S_MntSweetProducts + 0.92254071667819 * S_MntWines +
0.17286447654032 * S_MonthsAsCustomer + -1.64446119745791 * S_NumCatalogPurchases +
-1.14704878034134 * S_NumDealsPurchases + -0.17763404274659 * S_NumDistPurchases +
0.08894400267969 * S_NumStorePurchases + 0.59283747891957 * S_NumWebPurchases +
0.85268274682505 * S_NumWebVisitsMonth + -0.43035426151546 * S_RFMstat + 0.52915289749814 *
S_RMntFrq + -1.22871580072103 * S_Recency + -0.42049179704691 * S_Teenhome ;
1252316   +   H1x1_2  =    -0.17196520392875 * S_AcceptedCmpTotal
1252317   +          +     0.09368836975829 * S_Age  +     -0.2079821803313 * S_Frq
1252318   +          +    -0.59508480939905 * S_Income  +     0.34485068405931 *
1252319   +        S_Kidhome  +     0.68503953220301 * S_Mnt  +    -0.41832366462675 *
1252320   +        S_MntFishProducts  +      0.3374808822635 * S_MntFruits
1252321   +          +     0.41521872138137 * S_MntGoldProds  +     1.55234986522641 *
1252322   +        S_MntMeatProducts  +     0.17336981388128 * S_MntSweetProducts
1252323   +          +    -0.03736062165339 * S_MntWines  +     0.20414742233604 *
1252324   +        S_MonthsAsCustomer  +    -1.29756795361717 * S_NumCatalogPurchases
1252325   +          +    -0.80841566068716 * S_NumDealsPurchases
1252326   +          +    -0.17995640033768 * S_NumDistPurchases
1252327   +          +     0.00713417460936 * S_NumStorePurchases
1252328   +          +     0.57881024323076 * S_NumWebPurchases
1252329   +          +    -1.35134224257365 * S_NumWebVisitsMonth
1252330   +          +     0.63440441349443 * S_RFMstat  +      0.7029589919795 *
1252331   +        S_RMntFrq  +     1.16978656262499 * S_Recency
1252332   +          +     0.22916564304766 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.17196520392875 * S_AcceptedCmpTotal + 0.09368836975829 *
S_Age + -0.2079821803313 * S_Frq + -0.59508480939905 * S_Income + 0.34485068405931 * S_Kidhome
+ 0.68503953220301 * S_Mnt + -0.41832366462675 * S_MntFishProducts + 0.3374808822635 *
S_MntFruits + 0.41521872138137 * S_MntGoldProds + 1.55234986522641 * S_MntMeatProducts +
0.17336981388128 * S_MntSweetProducts + -0.03736062165339 * S_MntWines + 0.20414742233604 *
S_MonthsAsCustomer + -1.29756795361717 * S_NumCatalogPurchases + -0.80841566068716 *
S_NumDealsPurchases + -0.17995640033768 * S_NumDistPurchases + 0.00713417460936 *
S_NumStorePurchases + 0.57881024323076 * S_NumWebPurchases + -1.35134224257365 *
S_NumWebVisitsMonth + 0.63440441349443 * S_RFMstat + 0.7029589919795 * S_RMntFrq +
1.16978656262499 * S_Recency + 0.22916564304766 * S_Teenhome ;
1252333   +   H1x1_3  =     1.25968793568007 * S_AcceptedCmpTotal
1252334   +          +     0.16058002256905 * S_Age  +    -1.00283978743671 * S_Frq
1252335   +          +     0.80202770811665 * S_Income  +     -0.7384690128283 *
1252336   +        S_Kidhome  +      0.6320116033322 * S_Mnt  +    -0.48862240567237 *
1252337   +        S_MntFishProducts  +     0.26477442063044 * S_MntFruits
1252338   +          +       0.434753861356 * S_MntGoldProds  +     3.54637875222405 *
1252339   +        S_MntMeatProducts  +    -0.09532877173293 * S_MntSweetProducts
1252340   +          +    -0.60614222423624 * S_MntWines  +     0.06807192728487 *
1252341   +        S_MonthsAsCustomer  +     0.45280110551612 * S_NumCatalogPurchases
1252342   +          +     0.57891364118717 * S_NumDealsPurchases
1252343   +          +    -0.31024556838688 * S_NumDistPurchases
1252344   +          +    -1.48708542986704 * S_NumStorePurchases
1252345   +          +    -0.93009875249206 * S_NumWebPurchases
1252346   +          +     2.01900039122935 * S_NumWebVisitsMonth
1252347   +          +     0.50006472616383 * S_RFMstat  +    -1.16854599018819 *
1252348   +        S_RMntFrq  +    -2.30414631760388 * S_Recency
1252349   +          +    -0.64226055895142 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.25968793568007 * S_AcceptedCmpTotal + 0.16058002256905 *
S_Age + -1.00283978743671 * S_Frq + 0.80202770811665 * S_Income + -0.7384690128283 * S_Kidhome
+ 0.6320116033322 * S_Mnt + -0.48862240567237 * S_MntFishProducts + 0.26477442063044 *
S_MntFruits + 0.434753861356 * S_MntGoldProds + 3.54637875222405 * S_MntMeatProducts +
-0.09532877173293 * S_MntSweetProducts + -0.60614222423624 * S_MntWines + 0.06807192728487 *
S_MonthsAsCustomer + 0.45280110551612 * S_NumCatalogPurchases + 0.57891364118717 *
S_NumDealsPurchases + -0.31024556838688 * S_NumDistPurchases + -1.48708542986704 *
S_NumStorePurchases + -0.93009875249206 * S_NumWebPurchases + 2.01900039122935 *
S_NumWebVisitsMonth + 0.50006472616383 * S_RFMstat + -1.16854599018819 * S_RMntFrq +
-2.30414631760388 * S_Recency + -0.64226055895142 * S_Teenhome ;
1252350   +   H1x1_1  = H1x1_1  +     0.90039925512906 * AcceptedCmp10
1252351   +          +    -0.47386683647261 * AcceptedCmp20  +    -0.71163968851557 *
1252352   +        AcceptedCmp30  +    -1.10005761198573 * AcceptedCmp40
1252353   +          +     0.81604940024858 * AcceptedCmp50  +    -0.03266697009221 *
1252354   +        Complain0  +     0.45877513475435 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.90039925512906 * AcceptedCmp10 + -0.47386683647261 *
AcceptedCmp20 + -0.71163968851557 * AcceptedCmp30 + -1.10005761198573 * AcceptedCmp40 +
0.81604940024858 * AcceptedCmp50 + -0.03266697009221 * Complain0 + 0.45877513475435 *
HigherEducationBinary0 ;
1252355   +   H1x1_2  = H1x1_2  +    -0.09498245462104 * AcceptedCmp10
1252356   +          +     -0.5878058848086 * AcceptedCmp20  +     1.08802173663414 *
1252357   +        AcceptedCmp30  +      0.4681907014168 * AcceptedCmp40
1252358   +          +    -1.71290692396514 * AcceptedCmp50  +    -0.47229847844337 *
1252359   +        Complain0  +     0.41790693564846 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.09498245462104 * AcceptedCmp10 + -0.5878058848086 *
AcceptedCmp20 + 1.08802173663414 * AcceptedCmp30 + 0.4681907014168 * AcceptedCmp40 +
-1.71290692396514 * AcceptedCmp50 + -0.47229847844337 * Complain0 + 0.41790693564846 *
HigherEducationBinary0 ;
1252360   +   H1x1_3  = H1x1_3  +    -0.14466250407205 * AcceptedCmp10
1252361   +          +    -0.05281153450358 * AcceptedCmp20  +     0.30771572513376 *
1252362   +        AcceptedCmp30  +    -0.25237634767535 * AcceptedCmp40
1252363   +          +    -2.36680490171638 * AcceptedCmp50  +    -0.12273085838026 *
1252364   +        Complain0  +     0.40951032893236 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.14466250407205 * AcceptedCmp10 + -0.05281153450358
* AcceptedCmp20 + 0.30771572513376 * AcceptedCmp30 + -0.25237634767535 * AcceptedCmp40 +
-2.36680490171638 * AcceptedCmp50 + -0.12273085838026 * Complain0 + 0.40951032893236 *
HigherEducationBinary0 ;
1252365   +   H1x1_1  = H1x1_1  +    -0.00834762223325 * Education2n_Cycle
1252366   +          +    -0.42766880626216 * EducationBasic  +    -0.47517247816239 *
1252367   +        EducationGraduation  +    -0.68730596079478 * EducationMaster
1252368   +          +     0.55883606830033 * Marital_StatusDivorced
1252369   +          +    -0.54530037567066 * Marital_StatusMarried
1252370   +          +    -0.52994736075753 * Marital_StatusSingle
1252371   +          +    -0.53882341831078 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.00834762223325 * Education2n_Cycle +
-0.42766880626216 * EducationBasic + -0.47517247816239 * EducationGraduation +
-0.68730596079478 * EducationMaster + 0.55883606830033 * Marital_StatusDivorced +
-0.54530037567066 * Marital_StatusMarried + -0.52994736075753 * Marital_StatusSingle +
-0.53882341831078 * Marital_StatusTogether ;
1252372   +   H1x1_2  = H1x1_2  +    -0.22709215793074 * Education2n_Cycle
1252373   +          +     0.07643166113928 * EducationBasic  +    -0.97269335071824 *
1252374   +        EducationGraduation  +     0.31201349236277 * EducationMaster
1252375   +          +    -1.07368484057033 * Marital_StatusDivorced
1252376   +          +     2.73313504711262 * Marital_StatusMarried
1252377   +          +    -2.18530462876058 * Marital_StatusSingle
1252378   +          +     2.38158278480467 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.22709215793074 * Education2n_Cycle +
0.07643166113928 * EducationBasic + -0.97269335071824 * EducationGraduation + 0.31201349236277
* EducationMaster + -1.07368484057033 * Marital_StatusDivorced + 2.73313504711262 *
Marital_StatusMarried + -2.18530462876058 * Marital_StatusSingle + 2.38158278480467 *
Marital_StatusTogether ;
1252379   +   H1x1_3  = H1x1_3  +     0.04453578767387 * Education2n_Cycle
1252380   +          +    -0.65383041132508 * EducationBasic  +    -0.17789960866108 *
1252381   +        EducationGraduation  +    -0.35544166792219 * EducationMaster
1252382   +          +     0.49993144243043 * Marital_StatusDivorced
1252383   +          +    -0.38953339116829 * Marital_StatusMarried
1252384   +          +    -0.10836287319942 * Marital_StatusSingle
1252385   +          +    -0.42049990939036 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.04453578767387 * Education2n_Cycle +
-0.65383041132508 * EducationBasic + -0.17789960866108 * EducationGraduation +
-0.35544166792219 * EducationMaster + 0.49993144243043 * Marital_StatusDivorced +
-0.38953339116829 * Marital_StatusMarried + -0.10836287319942 * Marital_StatusSingle +
-0.42049990939036 * Marital_StatusTogether ;
1252386   +   H1x1_1  =    -0.67322256806566 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.67322256806566 + H1x1_1 ;
1252387   +   H1x1_2  =     1.02621981675321 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.02621981675321 + H1x1_2 ;
1252388   +   H1x1_3  =     1.79721701815172 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.79721701815172 + H1x1_3 ;
1252389   +   H1x1_4  = 0;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0;
1252390   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
1252391   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1252392   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
1252393   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
1252394   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
1252395   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
1252396   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
1252397   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
1252398   +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
1252399   +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
1252400   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
1252401   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
1252402   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
1252403   +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
1252404   +END;
MPRINT(EM_DIAGRAM):   END;
1252405   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1252406   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
1252407   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
1252408   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
1252409   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
1252410   +END;
MPRINT(EM_DIAGRAM):   END;
1252411   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1252412   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1252413   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1252414   +
1252415   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1252416   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1252417   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1252418   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1252419   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1252420   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1252421   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1252422   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1252423   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1252424   +end;
MPRINT(EM_DIAGRAM):   end;
1252425   +else do;
MPRINT(EM_DIAGRAM):   else do;
1252426   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1252427   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1252428   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1252429   +   end;
MPRINT(EM_DIAGRAM):   end;
1252430   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1252431   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1252432   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1252433   +   end;
MPRINT(EM_DIAGRAM):   end;
1252434   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1252435   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1252436   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1252437   +   end;
MPRINT(EM_DIAGRAM):   end;
1252438   +end;
MPRINT(EM_DIAGRAM):   end;
1252439   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1252440   +   P_DepVar1  =    -3.84261611144245 * H1x1_1  +    -7.15065431642895 * H1x1_2
1252441   +          +       11.29639646928 * H1x1_3  +    -2.12563351481128 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.84261611144245 * H1x1_1 + -7.15065431642895 * H1x1_2 +
11.29639646928 * H1x1_3 + -2.12563351481128 * H1x1_4 ;
1252442   +   P_DepVar1  =    -3.54755955929493 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.54755955929493 + P_DepVar1 ;
1252443   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1252444   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1252445   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1252446   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1252447   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1252448   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1252449   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1252450   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1252451   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1252452   +END;
MPRINT(EM_DIAGRAM):   END;
1252453   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1252454   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1252455   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1252456   +END;
MPRINT(EM_DIAGRAM):   END;
1252457   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1252458   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1252459   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1252460   +END;
MPRINT(EM_DIAGRAM):   END;
1252461   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1252462   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1252463   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1252464   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1252465   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1252466   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1252467   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1252468   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1252469   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1252470   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1252471   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1252472   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1252473   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1252474   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1252475   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1252476   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1252477   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1252478   +END;
MPRINT(EM_DIAGRAM):   END;
1252479   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1252480   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1252481   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1252482   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1252483   +* Renaming variables for AutoNeural9;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural9;
1252484   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1252485   +* Renaming Posterior variables for AutoNeural9;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural9;
1252486   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1252487   +drop AutoNeural9_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_P_DepVar1;
1252488   +AutoNeural9_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural9_P_DepVar1 = P_DepVar1;
1252489   +drop AutoNeural9_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_P_DepVar0;
1252490   +AutoNeural9_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural9_P_DepVar0 = P_DepVar0;
1252491   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1252492   +* Renaming _WARN_ variable for AutoNeural9;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural9;
1252493   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1252494   +length AutoNeural9_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural9_WARN_ $4;
1252495   +drop AutoNeural9_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_WARN_;
1252496   +AutoNeural9_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural9_WARN_ = _WARN_;
1252497   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1252498   +* Ensmbl46: Maximum Posteriors of 5 models;
MPRINT(EM_DIAGRAM):   * Ensmbl46: Maximum Posteriors of 5 models;
1252499   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1252500   +_psum = 0;
MPRINT(EM_DIAGRAM):   _psum = 0;
1252501   +drop _psum _premainder;
MPRINT(EM_DIAGRAM):   drop _psum _premainder;
1252502   +P_DepVar1 = max(
1252503   +AutoNeural10_P_DepVar1 ,
1252504   +AutoNeural7_P_DepVar1 ,
1252505   +AutoNeural12_P_DepVar1 ,
1252506   +AutoNeural11_P_DepVar1 ,
1252507   +AutoNeural9_P_DepVar1
1252508   +);
MPRINT(EM_DIAGRAM):   P_DepVar1 = max( AutoNeural10_P_DepVar1 , AutoNeural7_P_DepVar1 ,
AutoNeural12_P_DepVar1 , AutoNeural11_P_DepVar1 , AutoNeural9_P_DepVar1 );
1252509   +_premainder =1 - _psum;
MPRINT(EM_DIAGRAM):   _premainder =1 - _psum;
1252510   +if P_DepVar1 > _premainder then do;
MPRINT(EM_DIAGRAM):   if P_DepVar1 > _premainder then do;
1252511   +P_DepVar1 = _premainder;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _premainder;
1252512   +end;
MPRINT(EM_DIAGRAM):   end;
1252513   +_psum + P_DepVar1;
MPRINT(EM_DIAGRAM):   _psum + P_DepVar1;
1252514   +P_DepVar0 = max(
1252515   +AutoNeural10_P_DepVar0 ,
1252516   +AutoNeural7_P_DepVar0 ,
1252517   +AutoNeural12_P_DepVar0 ,
1252518   +AutoNeural11_P_DepVar0 ,
1252519   +AutoNeural9_P_DepVar0
1252520   +);
MPRINT(EM_DIAGRAM):   P_DepVar0 = max( AutoNeural10_P_DepVar0 , AutoNeural7_P_DepVar0 ,
AutoNeural12_P_DepVar0 , AutoNeural11_P_DepVar0 , AutoNeural9_P_DepVar0 );
1252521   +_premainder =1 - _psum;
MPRINT(EM_DIAGRAM):   _premainder =1 - _psum;
1252522   +if P_DepVar0 > _premainder then do;
MPRINT(EM_DIAGRAM):   if P_DepVar0 > _premainder then do;
1252523   +P_DepVar0 = _premainder;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _premainder;
1252524   +end;
MPRINT(EM_DIAGRAM):   end;
1252525   +_psum + P_DepVar0;
MPRINT(EM_DIAGRAM):   _psum + P_DepVar0;
1252526   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1252527   +* Ensmbl46: Computing Classification Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl46: Computing Classification Vars;
1252528   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1252529   +length I_DepVar $32;
MPRINT(EM_DIAGRAM):   length I_DepVar $32;
WARNING: Length of character variable I_DepVar has already been set.
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the
         length of a character variable.
1252530   +label I_DepVar = 'Into: DepVar';
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar';
1252531   +length _format $200;
MPRINT(EM_DIAGRAM):   length _format $200;
1252532   +drop _format;
MPRINT(EM_DIAGRAM):   drop _format;
1252533   +_format= ' ';
MPRINT(EM_DIAGRAM):   _format= ' ';
1252534   +_p_= 0;
MPRINT(EM_DIAGRAM):   _p_= 0;
1252535   +drop _p_;
MPRINT(EM_DIAGRAM):   drop _p_;
1252536   +if P_DepVar1 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar1 > _p_ then do;
1252537   +_p_= P_DepVar1;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar1;
1252538   +_format= '1';
MPRINT(EM_DIAGRAM):   _format= '1';
1252539   +end;
MPRINT(EM_DIAGRAM):   end;
1252540   +if P_DepVar0 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar0 > _p_ then do;
1252541   +_p_= P_DepVar0;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar0;
1252542   +_format= '0';
MPRINT(EM_DIAGRAM):   _format= '0';
1252543   +end;
MPRINT(EM_DIAGRAM):   end;
1252544   +%DMNORMCP(_format,I_DepVar);
MPRINT(DMNORMCP):   I_DepVar=dmnorm(_format,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1252545   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1252546   +* Ensmbl46: Producing Unformatted variable;
MPRINT(EM_DIAGRAM):   * Ensmbl46: Producing Unformatted variable;
1252547   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1252548   +label U_DepVar = "Unnormalized Into: DepVar";
MPRINT(EM_DIAGRAM):   label U_DepVar = "Unnormalized Into: DepVar";
1252549   +if I_DepVar = '1' then U_DepVar = 1;
MPRINT(EM_DIAGRAM):   if I_DepVar = '1' then U_DepVar = 1;
1252550   +else
1252551   +if I_DepVar = '0' then U_DepVar = 0;
MPRINT(EM_DIAGRAM):   else if I_DepVar = '0' then U_DepVar = 0;
1252552   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1252553   +* Ensmbl46: Computing _WARN_ Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl46: Computing _WARN_ Variable;
1252554   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1252555   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
1252556   +label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
1252557   +_WARN_ = '';
MPRINT(EM_DIAGRAM):   _WARN_ = '';
1252558   +if index(AUTONEURAL10_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
1252558  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL10_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
1252559   +if index(AUTONEURAL10_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
1252559  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL10_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
1252560   +if index(AUTONEURAL10_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
1252560  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL10_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
1252561   +if index(AUTONEURAL10_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
1252561  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL10_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
1252562   +if index(AUTONEURAL7_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
1252562  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL7_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
1252563   +if index(AUTONEURAL7_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
1252563  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL7_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
1252564   +if index(AUTONEURAL7_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
1252564  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL7_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
1252565   +if index(AUTONEURAL7_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
1252565  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL7_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
1252566   +if index(AUTONEURAL12_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
1252566  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
1252567   +if index(AUTONEURAL12_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
1252567  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'U') and ^index(_WARN_, 'U') then
The SAS System
 
substr(_WARN_, 2, 1) ='U';
1252568   +if index(AUTONEURAL12_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
1252568  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
1252569   +if index(AUTONEURAL12_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
1252569  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
1252570   +if index(AUTONEURAL11_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
1252570  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
1252571   +if index(AUTONEURAL11_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
1252571  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
1252572   +if index(AUTONEURAL11_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
1252572  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
1252573   +if index(AUTONEURAL11_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
1252573  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
1252574   +if index(AUTONEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
1252574  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
1252575   +if index(AUTONEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
1252575  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
1252576   +if index(AUTONEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
1252576  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
1252577   +if index(AUTONEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
1252577  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
1252578   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1252579   +* Ensmbl46: Computing Residual Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl46: Computing Residual Vars;
1252580   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1252581   +if
1252582   +F_DepVar NE '1'
1252583   +AND F_DepVar NE '0'
1252584   +then do;
MPRINT(EM_DIAGRAM):   if F_DepVar NE '1' AND F_DepVar NE '0' then do;
1252585   +R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
1252586   +R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
1252587   +end;
MPRINT(EM_DIAGRAM):   end;
1252588   +else do;
MPRINT(EM_DIAGRAM):   else do;
1252589   +R_DepVar1 = -P_DepVar1;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1;
1252590   +R_DepVar0 = -P_DepVar0;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0;
1252591   +SELECT(F_DepVar);
MPRINT(EM_DIAGRAM):   SELECT(F_DepVar);
1252592   +WHEN('1') R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   WHEN('1') R_DepVar1 = R_DepVar1 +1;
1252593   +WHEN('0') R_DepVar0 = R_DepVar0 +1;
MPRINT(EM_DIAGRAM):   WHEN('0') R_DepVar0 = R_DepVar0 +1;
1252594   +OTHERWISE;
MPRINT(EM_DIAGRAM):   OTHERWISE;
1252595   +END;
MPRINT(EM_DIAGRAM):   END;
1252596   +END;
MPRINT(EM_DIAGRAM):   END;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1252597    run;
 
NOTE: DATA STEP view saved on file EMWS8.ENSMBL46_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.AUTONEURAL10_VALIDATE.VIEW used (Total process time):
      real time           0.18 seconds
      cpu time            0.15 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.18 seconds
      cpu time            0.15 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1252598    quit;
1252599    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
MPRINT(EM_DIAGRAM):
MPRINT(CALFITSTATSNOMINAL):   data _tmpTrainFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_
_RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS8.Ensmbl46_TRAIN end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_
_WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Train: Target Variable" _NOBS_= "Train: Sum of
Frequencies" _SSE_= "Train: Sum of Squared Errors" _MAX_= "Train: Maximum Absolute Error"
_DIV_ = "Train: Divisor for ASE" _WRONG_= "Train: Number of Wrong Classifications" _DISF_=
"Train: Frequency of Classified Cases" _MISC_= "Train: Misclassification Rate" _ASE_ = "Train:
Average Squared Error" _RASE_ = "Train: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_
_RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar ne "" then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl46_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set _tmpTrainFitTable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):
MPRINT(CALFITSTATSNOMINAL):   data _tmpValidFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_
_RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS8.Ensmbl46_VALIDATE end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_
_WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Valid: Target Variable" _NOBS_= "Valid: Sum of
Frequencies" _SSE_= "Valid: Sum of Squared Errors" _MAX_= "Valid: Maximum Absolute Error"
_DIV_ = "Valid: Divisor for ASE" _WRONG_= "Valid: Number of Wrong Classifications" _DISF_=
"Valid: Frequency of Classified Cases" _MISC_= "Valid: Misclassification Rate" _ASE_ = "Valid:
Average Squared Error" _RASE_ = "Valid: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_
_RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar ne "" then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _tmpdata_(DROP= TARGET);
MPRINT(EM_DIAGRAM):   set _tmpValidFitTable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _tmpdata_;
MPRINT(EM_DIAGRAM):   set _tmpdata_;
MPRINT(EM_DIAGRAM):   rename _ASE_=_VASE_;
MPRINT(EM_DIAGRAM):   rename _DIV_=_VDIV_;
MPRINT(EM_DIAGRAM):   rename _MAX_=_VMAX_;
MPRINT(EM_DIAGRAM):   rename _NOBS_=_VNOBS_;
MPRINT(EM_DIAGRAM):   rename _RASE_=_VRASE_;
MPRINT(EM_DIAGRAM):   rename _SSE_=_VSSE_;
MPRINT(EM_DIAGRAM):   rename _DISF_=_VDISF_;
MPRINT(EM_DIAGRAM):   rename _MISC_=_VMISC_;
MPRINT(EM_DIAGRAM):   rename _WRONG_=_VWRONG_;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl46_EMOUTFIT;
MPRINT(EM_DIAGRAM):   merge EMWS8.Ensmbl46_EMOUTFIT _tmpdata_;
MPRINT(EM_DIAGRAM):   run;
1252659    filename _pref
1252659  ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural10\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural10\EMPUBLISHSCORE.sas";
1252660    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1252661    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural10\EMPUBLISHSCORE.sas.
1252662   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1252663   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1252664   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1252665   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1252666   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1252667   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1252668   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1252669   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1252670   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1252671   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1252672   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1252673   +LENGTH _WARN_ $4
1252674   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
1252675   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1252676   +
1252677   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1252678   +
1252679   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1252680   +
1252681   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1252682   +
1252683   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1252684   +
1252685   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1252686   +
1252687   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1252688   +
1252689   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1252690   +
1252691   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1252692   +
1252693   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1252694   +
1252695   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1252696   +
1252697   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1252698   +
1252699   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1252700   +
1252701   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1252702   +
1252703   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1252704   +
1252705   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1252706   +
1252707   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1252708   +
1252709   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1252710   +
1252711   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1252712   +
1252713   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1252714   +
1252715   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1252716   +
1252717   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1252718   +
1252719   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1252720   +
1252721   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1252722   +
1252723   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1252724   +
1252725   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1252726   +
1252727   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1252728   +
1252729   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1252730   +
1252731   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1252732   +
1252733   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1252734   +
1252735   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1252736   +
1252737   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1252738   +
1252739   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1252740   +
1252741   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1252742   +
1252743   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1252744   +
1252745   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1252746   +
1252747   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1252748   +
1252749   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1252750   +
1252751   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
1252752   +
1252753   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
1252754   +
1252755   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
1252756   +
1252757   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
1252758   +
1252759   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
1252760   +
1252761   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
1252762   +
1252763   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
1252764   +
1252765   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
1252766   +
1252767   +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
1252768   +
1252769   +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
1252770   +
1252771   +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
1252772   +
1252773   +      label H1x3_2 = 'Hidden: H1x3_=2' ;
MPRINT(EM_DIAGRAM):   label H1x3_2 = 'Hidden: H1x3_=2' ;
1252774   +
1252775   +      label H1x3_3 = 'Hidden: H1x3_=3' ;
MPRINT(EM_DIAGRAM):   label H1x3_3 = 'Hidden: H1x3_=3' ;
1252776   +
1252777   +      label H1x3_4 = 'Hidden: H1x3_=4' ;
MPRINT(EM_DIAGRAM):   label H1x3_4 = 'Hidden: H1x3_=4' ;
1252778   +
1252779   +      label H1x3_5 = 'Hidden: H1x3_=5' ;
MPRINT(EM_DIAGRAM):   label H1x3_5 = 'Hidden: H1x3_=5' ;
1252780   +
1252781   +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
1252782   +
1252783   +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
1252784   +
1252785   +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
1252786   +
1252787   +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
1252788   +
1252789   +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
1252790   +
1252791   +      label H2x2_1 = 'Hidden: H2x2_=1' ;
MPRINT(EM_DIAGRAM):   label H2x2_1 = 'Hidden: H2x2_=1' ;
1252792   +
1252793   +      label H2x2_2 = 'Hidden: H2x2_=2' ;
MPRINT(EM_DIAGRAM):   label H2x2_2 = 'Hidden: H2x2_=2' ;
1252794   +
1252795   +      label H2x2_3 = 'Hidden: H2x2_=3' ;
MPRINT(EM_DIAGRAM):   label H2x2_3 = 'Hidden: H2x2_=3' ;
1252796   +
1252797   +      label H2x2_4 = 'Hidden: H2x2_=4' ;
MPRINT(EM_DIAGRAM):   label H2x2_4 = 'Hidden: H2x2_=4' ;
1252798   +
1252799   +      label H2x2_5 = 'Hidden: H2x2_=5' ;
MPRINT(EM_DIAGRAM):   label H2x2_5 = 'Hidden: H2x2_=5' ;
1252800   +
1252801   +      label H3x1_1 = 'Hidden: H3x1_=1' ;
MPRINT(EM_DIAGRAM):   label H3x1_1 = 'Hidden: H3x1_=1' ;
1252802   +
1252803   +      label H3x1_2 = 'Hidden: H3x1_=2' ;
MPRINT(EM_DIAGRAM):   label H3x1_2 = 'Hidden: H3x1_=2' ;
1252804   +
1252805   +      label H3x1_3 = 'Hidden: H3x1_=3' ;
MPRINT(EM_DIAGRAM):   label H3x1_3 = 'Hidden: H3x1_=3' ;
1252806   +
1252807   +      label H3x1_4 = 'Hidden: H3x1_=4' ;
MPRINT(EM_DIAGRAM):   label H3x1_4 = 'Hidden: H3x1_=4' ;
1252808   +
1252809   +      label H3x1_5 = 'Hidden: H3x1_=5' ;
MPRINT(EM_DIAGRAM):   label H3x1_5 = 'Hidden: H3x1_=5' ;
1252810   +
1252811   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1252812   +
1252813   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1252814   +
1252815   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1252816   +
1252817   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1252818   +
1252819   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1252820   +
1252821   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1252822   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1252823   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1252824   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1252825   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1252826   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1252827   +end;
MPRINT(EM_DIAGRAM):   end;
1252828   +else do;
MPRINT(EM_DIAGRAM):   else do;
1252829   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1252830   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1252831   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1252832   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1252833   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1252834   +   end;
MPRINT(EM_DIAGRAM):   end;
1252835   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1252836   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1252837   +   end;
MPRINT(EM_DIAGRAM):   end;
1252838   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1252839   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1252840   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1252841   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1252842   +   end;
MPRINT(EM_DIAGRAM):   end;
1252843   +end;
MPRINT(EM_DIAGRAM):   end;
1252844   +
1252845   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1252846   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1252847   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1252848   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1252849   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1252850   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1252851   +end;
MPRINT(EM_DIAGRAM):   end;
1252852   +else do;
MPRINT(EM_DIAGRAM):   else do;
1252853   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1252854   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1252855   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1252856   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1252857   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1252858   +   end;
MPRINT(EM_DIAGRAM):   end;
1252859   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1252860   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1252861   +   end;
MPRINT(EM_DIAGRAM):   end;
1252862   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1252863   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1252864   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1252865   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1252866   +   end;
MPRINT(EM_DIAGRAM):   end;
1252867   +end;
MPRINT(EM_DIAGRAM):   end;
1252868   +
1252869   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1252870   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1252871   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1252872   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1252873   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1252874   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1252875   +end;
MPRINT(EM_DIAGRAM):   end;
1252876   +else do;
MPRINT(EM_DIAGRAM):   else do;
1252877   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1252878   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1252879   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1252880   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1252881   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1252882   +   end;
MPRINT(EM_DIAGRAM):   end;
1252883   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1252884   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1252885   +   end;
MPRINT(EM_DIAGRAM):   end;
1252886   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1252887   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1252888   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1252889   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1252890   +   end;
MPRINT(EM_DIAGRAM):   end;
1252891   +end;
MPRINT(EM_DIAGRAM):   end;
1252892   +
1252893   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1252894   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1252895   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1252896   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1252897   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1252898   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1252899   +end;
MPRINT(EM_DIAGRAM):   end;
1252900   +else do;
MPRINT(EM_DIAGRAM):   else do;
1252901   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1252902   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1252903   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1252904   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1252905   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1252906   +   end;
MPRINT(EM_DIAGRAM):   end;
1252907   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1252908   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1252909   +   end;
MPRINT(EM_DIAGRAM):   end;
1252910   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1252911   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1252912   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1252913   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1252914   +   end;
MPRINT(EM_DIAGRAM):   end;
1252915   +end;
MPRINT(EM_DIAGRAM):   end;
1252916   +
1252917   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1252918   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1252919   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1252920   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1252921   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1252922   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1252923   +end;
MPRINT(EM_DIAGRAM):   end;
1252924   +else do;
MPRINT(EM_DIAGRAM):   else do;
1252925   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1252926   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1252927   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1252928   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1252929   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1252930   +   end;
MPRINT(EM_DIAGRAM):   end;
1252931   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1252932   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1252933   +   end;
MPRINT(EM_DIAGRAM):   end;
1252934   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1252935   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1252936   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1252937   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1252938   +   end;
MPRINT(EM_DIAGRAM):   end;
1252939   +end;
MPRINT(EM_DIAGRAM):   end;
1252940   +
1252941   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1252942   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1252943   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1252944   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1252945   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1252946   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1252947   +end;
MPRINT(EM_DIAGRAM):   end;
1252948   +else do;
MPRINT(EM_DIAGRAM):   else do;
1252949   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1252950   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1252951   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1252952   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1252953   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1252954   +   end;
MPRINT(EM_DIAGRAM):   end;
1252955   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1252956   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1252957   +   end;
MPRINT(EM_DIAGRAM):   end;
1252958   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1252959   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1252960   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1252961   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1252962   +   end;
MPRINT(EM_DIAGRAM):   end;
1252963   +end;
MPRINT(EM_DIAGRAM):   end;
1252964   +
1252965   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1252966   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1252967   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1252968   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1252969   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1252970   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1252971   +end;
MPRINT(EM_DIAGRAM):   end;
1252972   +else do;
MPRINT(EM_DIAGRAM):   else do;
1252973   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1252974   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1252975   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1252976   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1252977   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1252978   +   end;
MPRINT(EM_DIAGRAM):   end;
1252979   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1252980   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1252981   +   end;
MPRINT(EM_DIAGRAM):   end;
1252982   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1252983   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1252984   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1252985   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1252986   +   end;
MPRINT(EM_DIAGRAM):   end;
1252987   +end;
MPRINT(EM_DIAGRAM):   end;
1252988   +
1252989   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1252990   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
1252991   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1252992   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1252993   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1252994   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1252995   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1252996   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1252997   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1252998   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1252999   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1253000   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1253001   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1253002   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1253003   +end;
MPRINT(EM_DIAGRAM):   end;
1253004   +else do;
MPRINT(EM_DIAGRAM):   else do;
1253005   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1253006   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1253007   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1253008   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1253009   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1253010   +   end;
MPRINT(EM_DIAGRAM):   end;
1253011   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1253012   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1253013   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1253014   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1253015   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1253016   +   end;
MPRINT(EM_DIAGRAM):   end;
1253017   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1253018   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1253019   +   end;
MPRINT(EM_DIAGRAM):   end;
1253020   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1253021   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1253022   +   end;
MPRINT(EM_DIAGRAM):   end;
1253023   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1253024   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1253025   +   end;
MPRINT(EM_DIAGRAM):   end;
1253026   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1253027   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1253028   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1253029   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1253030   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1253031   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1253032   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1253033   +   end;
MPRINT(EM_DIAGRAM):   end;
1253034   +end;
MPRINT(EM_DIAGRAM):   end;
1253035   +
1253036   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1253037   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1253038   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
1253039   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1253040   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1253041   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1253042   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1253043   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1253044   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1253045   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1253046   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1253047   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1253048   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1253049   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1253050   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1253051   +end;
MPRINT(EM_DIAGRAM):   end;
1253052   +else do;
MPRINT(EM_DIAGRAM):   else do;
1253053   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1253054   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1253055   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1253056   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1253057   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1253058   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1253059   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1253060   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1253061   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1253062   +         end;
MPRINT(EM_DIAGRAM):   end;
1253063   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1253064   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1253065   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1253066   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1253067   +            end;
MPRINT(EM_DIAGRAM):   end;
1253068   +         end;
MPRINT(EM_DIAGRAM):   end;
1253069   +      end;
MPRINT(EM_DIAGRAM):   end;
1253070   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1253071   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1253072   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1253073   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1253074   +         end;
MPRINT(EM_DIAGRAM):   end;
1253075   +      end;
MPRINT(EM_DIAGRAM):   end;
1253076   +   end;
MPRINT(EM_DIAGRAM):   end;
1253077   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1253078   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1253079   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1253080   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1253081   +      end;
MPRINT(EM_DIAGRAM):   end;
1253082   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1253083   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1253084   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1253085   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1253086   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1253087   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1253088   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1253089   +         end;
MPRINT(EM_DIAGRAM):   end;
1253090   +      end;
MPRINT(EM_DIAGRAM):   end;
1253091   +   end;
MPRINT(EM_DIAGRAM):   end;
1253092   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1253093   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1253094   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1253095   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1253096   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1253097   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1253098   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1253099   +   end;
MPRINT(EM_DIAGRAM):   end;
1253100   +end;
MPRINT(EM_DIAGRAM):   end;
1253101   +
1253102   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1253103   +*** Checking missing input Interval
1253104   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1253105   +
1253106   +IF NMISS(
1253107   +   AcceptedCmpTotal ,
1253108   +   Age ,
1253109   +   Frq ,
1253110   +   Income ,
1253111   +   Kidhome ,
1253112   +   Mnt ,
1253113   +   MntFishProducts ,
1253114   +   MntFruits ,
1253115   +   MntGoldProds ,
1253116   +   MntMeatProducts ,
1253117   +   MntSweetProducts ,
1253118   +   MntWines ,
1253119   +   MonthsAsCustomer ,
1253120   +   NumCatalogPurchases ,
1253121   +   NumDealsPurchases ,
1253122   +   NumDistPurchases ,
1253123   +   NumStorePurchases ,
1253124   +   NumWebPurchases ,
1253125   +   NumWebVisitsMonth ,
1253126   +   RFMstat ,
1253127   +   RMntFrq ,
1253128   +   Recency ,
1253129   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
1253130   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1253131   +
1253132   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1253133   +END;
MPRINT(EM_DIAGRAM):   END;
1253134   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1253135   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
1253136   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1253137   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1253138   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1253139   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1253140   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1253141   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1253142   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1253143   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1253144   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1253145   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1253146   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1253147   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1253148   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1253149   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1253150   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1253151   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1253152   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1253153   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1253154   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1253155   +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
1253156   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 *
MonthsAsCustomer ;
1253157   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1253158   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1253159   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1253160   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1253161   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1253162   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1253163   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1253164   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1253165   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1253166   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1253167   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1253168   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1253169   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1253170   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1253171   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1253172   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1253173   +END;
MPRINT(EM_DIAGRAM):   END;
1253174   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1253175   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1253176   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1253177   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1253178   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1253179   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1253180   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1253181   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1253182   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1253183   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1253184   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1253185   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1253186   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1253187   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1253188   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1253189   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1253190   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1253191   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1253192   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1253193   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1253194   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1253195   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1253196   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1253197   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1253198   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1253199   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1253200   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1253201   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1253202   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1253203   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1253204   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1253205   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1253206   +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
1253207   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 *
MonthsAsCustomer ;
1253208   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1253209   +   ELSE S_NumCatalogPurchases
1253210   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1253211   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1253212   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1253213   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1253214   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1253215   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1253216   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1253217   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1253218   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1253219   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1253220   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1253221   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1253222   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1253223   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1253224   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1253225   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1253226   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1253227   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1253228   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1253229   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1253230   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1253231   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1253232   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1253233   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1253234   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1253235   +END;
MPRINT(EM_DIAGRAM):   END;
1253236   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1253237   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
1253238   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1253239   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1253240   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
1253241   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1253242   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1253243   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
1253244   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1253245   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1253246   +   H1x1_1  =     -1.6780441789215 * S_AcceptedCmpTotal
1253247   +          +     0.45385980917029 * S_Age  +    -0.71899650455913 * S_Frq
1253248   +          +    -1.93679506571805 * S_Income  +     1.56925991391051 *
1253249   +        S_Kidhome  +    -1.47175189232318 * S_Mnt  +    -2.23220260217222 *
1253250   +        S_MntFishProducts  +    -0.27017202076253 * S_MntFruits
1253251   +          +    -0.33562096740259 * S_MntGoldProds  +     3.61472960640287 *
1253252   +        S_MntMeatProducts  +    -2.85576251647297 * S_MntSweetProducts
1253253   +          +     -4.4467685903527 * S_MntWines  +     0.38963757858628 *
1253254   +        S_MonthsAsCustomer  +     1.66666181194027 * S_NumCatalogPurchases
1253255   +          +     3.45371614080196 * S_NumDealsPurchases
1253256   +          +     0.19118374544537 * S_NumDistPurchases
1253257   +          +    -2.45138001446793 * S_NumStorePurchases
1253258   +          +    -0.11424280244155 * S_NumWebPurchases
1253259   +          +    -2.31770357716565 * S_NumWebVisitsMonth
1253260   +          +     2.81643889601936 * S_RFMstat  +    -1.04896006701534 *
1253261   +        S_RMntFrq  +     0.26870809438679 * S_Recency
1253262   +          +    -0.26422448158811 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.6780441789215 * S_AcceptedCmpTotal + 0.45385980917029 *
S_Age + -0.71899650455913 * S_Frq + -1.93679506571805 * S_Income + 1.56925991391051 *
S_Kidhome + -1.47175189232318 * S_Mnt + -2.23220260217222 * S_MntFishProducts +
-0.27017202076253 * S_MntFruits + -0.33562096740259 * S_MntGoldProds + 3.61472960640287 *
S_MntMeatProducts + -2.85576251647297 * S_MntSweetProducts + -4.4467685903527 * S_MntWines +
0.38963757858628 * S_MonthsAsCustomer + 1.66666181194027 * S_NumCatalogPurchases +
3.45371614080196 * S_NumDealsPurchases + 0.19118374544537 * S_NumDistPurchases +
-2.45138001446793 * S_NumStorePurchases + -0.11424280244155 * S_NumWebPurchases +
-2.31770357716565 * S_NumWebVisitsMonth + 2.81643889601936 * S_RFMstat + -1.04896006701534 *
S_RMntFrq + 0.26870809438679 * S_Recency + -0.26422448158811 * S_Teenhome ;
1253263   +   H1x1_2  =    -0.85648293000641 * S_AcceptedCmpTotal
1253264   +          +    -1.65647402725291 * S_Age  +     1.01151947076788 * S_Frq
1253265   +          +    -2.30217634682957 * S_Income  +     3.64198249916211 *
1253266   +        S_Kidhome  +     0.20767518788666 * S_Mnt  +     0.16841756532554 *
1253267   +        S_MntFishProducts  +      -1.068506425921 * S_MntFruits
1253268   +          +     0.58318801939162 * S_MntGoldProds  +    -2.31777049056548 *
1253269   +        S_MntMeatProducts  +     0.23759430399811 * S_MntSweetProducts
1253270   +          +      1.6840332285232 * S_MntWines  +     1.02971381781013 *
1253271   +        S_MonthsAsCustomer  +    -0.67962580165124 * S_NumCatalogPurchases
1253272   +          +    -1.28390925647659 * S_NumDealsPurchases
1253273   +          +     0.82669177239926 * S_NumDistPurchases
1253274   +          +     1.71678585204511 * S_NumStorePurchases
1253275   +          +     1.49226295608046 * S_NumWebPurchases
1253276   +          +     -4.0105103018388 * S_NumWebVisitsMonth
1253277   +          +     0.59909792991084 * S_RFMstat  +     1.07820515361554 *
1253278   +        S_RMntFrq  +     4.74241121363086 * S_Recency
1253279   +          +     3.02084642655958 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.85648293000641 * S_AcceptedCmpTotal + -1.65647402725291 *
S_Age + 1.01151947076788 * S_Frq + -2.30217634682957 * S_Income + 3.64198249916211 * S_Kidhome
+ 0.20767518788666 * S_Mnt + 0.16841756532554 * S_MntFishProducts + -1.068506425921 *
S_MntFruits + 0.58318801939162 * S_MntGoldProds + -2.31777049056548 * S_MntMeatProducts +
0.23759430399811 * S_MntSweetProducts + 1.6840332285232 * S_MntWines + 1.02971381781013 *
S_MonthsAsCustomer + -0.67962580165124 * S_NumCatalogPurchases + -1.28390925647659 *
S_NumDealsPurchases + 0.82669177239926 * S_NumDistPurchases + 1.71678585204511 *
S_NumStorePurchases + 1.49226295608046 * S_NumWebPurchases + -4.0105103018388 *
S_NumWebVisitsMonth + 0.59909792991084 * S_RFMstat + 1.07820515361554 * S_RMntFrq +
4.74241121363086 * S_Recency + 3.02084642655958 * S_Teenhome ;
1253280   +   H1x1_3  =    -2.68802949086986 * S_AcceptedCmpTotal
1253281   +          +     0.32408799976195 * S_Age  +     0.22616656573012 * S_Frq
1253282   +          +     -0.4811040196236 * S_Income  +     0.01554228937278 *
1253283   +        S_Kidhome  +    -0.00131538598753 * S_Mnt  +     1.89942488016409 *
1253284   +        S_MntFishProducts  +     0.56303548397494 * S_MntFruits
1253285   +          +    -0.15594598286956 * S_MntGoldProds  +    -7.89542322794989 *
1253286   +        S_MntMeatProducts  +    -0.27122492647076 * S_MntSweetProducts
1253287   +          +     4.85572438492582 * S_MntWines  +     0.12362243863555 *
1253288   +        S_MonthsAsCustomer  +    -1.47960473675934 * S_NumCatalogPurchases
1253289   +          +     0.22958626391725 * S_NumDealsPurchases
1253290   +          +    -0.02046515813996 * S_NumDistPurchases
1253291   +          +      0.8618502050837 * S_NumStorePurchases
1253292   +          +     1.45175370326009 * S_NumWebPurchases
1253293   +          +    -0.86122442436156 * S_NumWebVisitsMonth
1253294   +          +    -0.99643351802143 * S_RFMstat  +    -1.65762265567389 *
1253295   +        S_RMntFrq  +    -0.08202178452839 * S_Recency
1253296   +          +    -0.62066116666102 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -2.68802949086986 * S_AcceptedCmpTotal + 0.32408799976195 *
S_Age + 0.22616656573012 * S_Frq + -0.4811040196236 * S_Income + 0.01554228937278 * S_Kidhome
+ -0.00131538598753 * S_Mnt + 1.89942488016409 * S_MntFishProducts + 0.56303548397494 *
S_MntFruits + -0.15594598286956 * S_MntGoldProds + -7.89542322794989 * S_MntMeatProducts +
-0.27122492647076 * S_MntSweetProducts + 4.85572438492582 * S_MntWines + 0.12362243863555 *
S_MonthsAsCustomer + -1.47960473675934 * S_NumCatalogPurchases + 0.22958626391725 *
S_NumDealsPurchases + -0.02046515813996 * S_NumDistPurchases + 0.8618502050837 *
S_NumStorePurchases + 1.45175370326009 * S_NumWebPurchases + -0.86122442436156 *
S_NumWebVisitsMonth + -0.99643351802143 * S_RFMstat + -1.65762265567389 * S_RMntFrq +
-0.08202178452839 * S_Recency + -0.62066116666102 * S_Teenhome ;
1253297   +   H1x1_4  =     0.45192233004895 * S_AcceptedCmpTotal
1253298   +          +    -0.94676544762121 * S_Age  +     0.73809341266988 * S_Frq
1253299   +          +     0.72277799278136 * S_Income  +    -0.12970804152173 *
1253300   +        S_Kidhome  +     0.01052564540044 * S_Mnt  +    -0.48321452967118 *
1253301   +        S_MntFishProducts  +    -0.41471448831942 * S_MntFruits
1253302   +          +     0.04381334765674 * S_MntGoldProds  +     0.92594151100538 *
1253303   +        S_MntMeatProducts  +     0.29845970530397 * S_MntSweetProducts
1253304   +          +    -0.71535779454556 * S_MntWines  +     0.00059837351168 *
1253305   +        S_MonthsAsCustomer  +     2.23353511013288 * S_NumCatalogPurchases
1253306   +          +     1.25310034610344 * S_NumDealsPurchases
1253307   +          +     0.92141098602176 * S_NumDistPurchases
1253308   +          +    -0.08806509391473 * S_NumStorePurchases
1253309   +          +     -1.0533787624668 * S_NumWebPurchases
1253310   +          +     3.07050739830585 * S_NumWebVisitsMonth
1253311   +          +    -0.05671059637078 * S_RFMstat  +     1.73621676609839 *
1253312   +        S_RMntFrq  +     -3.8741602707981 * S_Recency
1253313   +          +    -2.06796290973426 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.45192233004895 * S_AcceptedCmpTotal + -0.94676544762121 *
S_Age + 0.73809341266988 * S_Frq + 0.72277799278136 * S_Income + -0.12970804152173 * S_Kidhome
+ 0.01052564540044 * S_Mnt + -0.48321452967118 * S_MntFishProducts + -0.41471448831942 *
S_MntFruits + 0.04381334765674 * S_MntGoldProds + 0.92594151100538 * S_MntMeatProducts +
0.29845970530397 * S_MntSweetProducts + -0.71535779454556 * S_MntWines + 0.00059837351168 *
S_MonthsAsCustomer + 2.23353511013288 * S_NumCatalogPurchases + 1.25310034610344 *
S_NumDealsPurchases + 0.92141098602176 * S_NumDistPurchases + -0.08806509391473 *
S_NumStorePurchases + -1.0533787624668 * S_NumWebPurchases + 3.07050739830585 *
S_NumWebVisitsMonth + -0.05671059637078 * S_RFMstat + 1.73621676609839 * S_RMntFrq +
-3.8741602707981 * S_Recency + -2.06796290973426 * S_Teenhome ;
1253314   +   H1x1_5  =    -1.36121985595495 * S_AcceptedCmpTotal
1253315   +          +     0.05422070059006 * S_Age  +     0.27495083329116 * S_Frq
1253316   +          +     -0.9677209394449 * S_Income  +    -1.13619168708067 *
1253317   +        S_Kidhome  +     0.62918569209141 * S_Mnt  +     0.37160756976122 *
1253318   +        S_MntFishProducts  +     0.88680401337821 * S_MntFruits
1253319   +          +    -0.36100921959604 * S_MntGoldProds  +    -0.35574990334834 *
1253320   +        S_MntMeatProducts  +     0.82389188555236 * S_MntSweetProducts
1253321   +          +     1.43496434553922 * S_MntWines  +    -1.46335376005851 *
1253322   +        S_MonthsAsCustomer  +    -1.84942841156411 * S_NumCatalogPurchases
1253323   +          +    -1.68259553608287 * S_NumDealsPurchases
1253324   +          +    -0.53835572290445 * S_NumDistPurchases
1253325   +          +     1.25833922835446 * S_NumStorePurchases
1253326   +          +     0.48300830623998 * S_NumWebPurchases
1253327   +          +    -2.20119275236582 * S_NumWebVisitsMonth
1253328   +          +     -0.2397284702987 * S_RFMstat  +    -0.71924218175088 *
1253329   +        S_RMntFrq  +     0.35692712879409 * S_Recency
1253330   +          +     0.77122286526706 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.36121985595495 * S_AcceptedCmpTotal + 0.05422070059006 *
S_Age + 0.27495083329116 * S_Frq + -0.9677209394449 * S_Income + -1.13619168708067 * S_Kidhome
+ 0.62918569209141 * S_Mnt + 0.37160756976122 * S_MntFishProducts + 0.88680401337821 *
S_MntFruits + -0.36100921959604 * S_MntGoldProds + -0.35574990334834 * S_MntMeatProducts +
0.82389188555236 * S_MntSweetProducts + 1.43496434553922 * S_MntWines + -1.46335376005851 *
S_MonthsAsCustomer + -1.84942841156411 * S_NumCatalogPurchases + -1.68259553608287 *
S_NumDealsPurchases + -0.53835572290445 * S_NumDistPurchases + 1.25833922835446 *
S_NumStorePurchases + 0.48300830623998 * S_NumWebPurchases + -2.20119275236582 *
S_NumWebVisitsMonth + -0.2397284702987 * S_RFMstat + -0.71924218175088 * S_RMntFrq +
0.35692712879409 * S_Recency + 0.77122286526706 * S_Teenhome ;
1253331   +   H1x1_1  = H1x1_1  +     0.07301304241545 * AcceptedCmp10
1253332   +          +    -1.95730125129608 * AcceptedCmp20  +    -1.38342161079442 *
1253333   +        AcceptedCmp30  +    -1.49080889719345 * AcceptedCmp40
1253334   +          +    -1.07381857035964 * AcceptedCmp50  +    -1.39161532835475 *
1253335   +        Complain0  +    -0.48833832833721 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.07301304241545 * AcceptedCmp10 + -1.95730125129608 *
AcceptedCmp20 + -1.38342161079442 * AcceptedCmp30 + -1.49080889719345 * AcceptedCmp40 +
-1.07381857035964 * AcceptedCmp50 + -1.39161532835475 * Complain0 + -0.48833832833721 *
HigherEducationBinary0 ;
1253336   +   H1x1_2  = H1x1_2  +     0.38934062747222 * AcceptedCmp10
1253337   +          +    -0.32259780417284 * AcceptedCmp20  +     0.51602852076334 *
1253338   +        AcceptedCmp30  +    -0.70838948180655 * AcceptedCmp40
1253339   +          +     1.29066052659113 * AcceptedCmp50  +      0.1004848714971 *
1253340   +        Complain0  +    -0.73386392383925 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.38934062747222 * AcceptedCmp10 + -0.32259780417284 *
AcceptedCmp20 + 0.51602852076334 * AcceptedCmp30 + -0.70838948180655 * AcceptedCmp40 +
1.29066052659113 * AcceptedCmp50 + 0.1004848714971 * Complain0 + -0.73386392383925 *
HigherEducationBinary0 ;
1253341   +   H1x1_3  = H1x1_3  +     0.34219997086576 * AcceptedCmp10
1253342   +          +    -0.12311182470953 * AcceptedCmp20  +     -2.0600710888874 *
1253343   +        AcceptedCmp30  +      -1.904294485826 * AcceptedCmp40
1253344   +          +     3.36424449872952 * AcceptedCmp50  +    -0.25078238709812 *
1253345   +        Complain0  +    -0.08077684854733 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.34219997086576 * AcceptedCmp10 + -0.12311182470953 *
AcceptedCmp20 + -2.0600710888874 * AcceptedCmp30 + -1.904294485826 * AcceptedCmp40 +
3.36424449872952 * AcceptedCmp50 + -0.25078238709812 * Complain0 + -0.08077684854733 *
HigherEducationBinary0 ;
1253346   +   H1x1_4  = H1x1_4  +    -1.12501407155309 * AcceptedCmp10
1253347   +          +    -1.58866249671355 * AcceptedCmp20  +    -1.72881548820716 *
1253348   +        AcceptedCmp30  +      -2.214698125839 * AcceptedCmp40
1253349   +          +    -0.62635613939269 * AcceptedCmp50  +      0.0150779868394 *
1253350   +        Complain0  +     1.03338023365724 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -1.12501407155309 * AcceptedCmp10 + -1.58866249671355
* AcceptedCmp20 + -1.72881548820716 * AcceptedCmp30 + -2.214698125839 * AcceptedCmp40 +
-0.62635613939269 * AcceptedCmp50 + 0.0150779868394 * Complain0 + 1.03338023365724 *
HigherEducationBinary0 ;
1253351   +   H1x1_5  = H1x1_5  +    -0.26508589111781 * AcceptedCmp10
1253352   +          +    -0.40912292690255 * AcceptedCmp20  +     0.75389762391096 *
1253353   +        AcceptedCmp30  +     0.41336953757691 * AcceptedCmp40
1253354   +          +     0.15346623431804 * AcceptedCmp50  +    -0.57037201584293 *
1253355   +        Complain0  +     0.77009921064044 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.26508589111781 * AcceptedCmp10 + -0.40912292690255
* AcceptedCmp20 + 0.75389762391096 * AcceptedCmp30 + 0.41336953757691 * AcceptedCmp40 +
0.15346623431804 * AcceptedCmp50 + -0.57037201584293 * Complain0 + 0.77009921064044 *
HigherEducationBinary0 ;
1253356   +   H1x1_1  = H1x1_1  +      1.0009305049246 * Education2n_Cycle
1253357   +          +     -0.4613305087931 * EducationBasic  +      0.3758596828746 *
1253358   +        EducationGraduation  +     1.25189584055994 * EducationMaster
1253359   +          +     0.26230568150721 * Marital_StatusDivorced
1253360   +          +     0.27563523967756 * Marital_StatusMarried
1253361   +          +     0.54464481618478 * Marital_StatusSingle
1253362   +          +    -0.59728882722473 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 1.0009305049246 * Education2n_Cycle + -0.4613305087931
* EducationBasic + 0.3758596828746 * EducationGraduation + 1.25189584055994 * EducationMaster
+ 0.26230568150721 * Marital_StatusDivorced + 0.27563523967756 * Marital_StatusMarried +
0.54464481618478 * Marital_StatusSingle + -0.59728882722473 * Marital_StatusTogether ;
1253363   +   H1x1_2  = H1x1_2  +    -0.67268966683928 * Education2n_Cycle
1253364   +          +     1.13837889947773 * EducationBasic  +     1.04211010190617 *
1253365   +        EducationGraduation  +     0.29772013614284 * EducationMaster
1253366   +          +    -0.06750661313108 * Marital_StatusDivorced
1253367   +          +     1.48628445854207 * Marital_StatusMarried
1253368   +          +    -0.52197797291165 * Marital_StatusSingle
1253369   +          +     0.26825188905773 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.67268966683928 * Education2n_Cycle +
1.13837889947773 * EducationBasic + 1.04211010190617 * EducationGraduation + 0.29772013614284
* EducationMaster + -0.06750661313108 * Marital_StatusDivorced + 1.48628445854207 *
Marital_StatusMarried + -0.52197797291165 * Marital_StatusSingle + 0.26825188905773 *
Marital_StatusTogether ;
1253370   +   H1x1_3  = H1x1_3  +     0.15872794306716 * Education2n_Cycle
1253371   +          +     -0.2621450786439 * EducationBasic  +      -0.141563901063 *
1253372   +        EducationGraduation  +     0.45665087056809 * EducationMaster
1253373   +          +     0.03219453957597 * Marital_StatusDivorced
1253374   +          +    -0.73835008216677 * Marital_StatusMarried
1253375   +          +     0.11212575818086 * Marital_StatusSingle
1253376   +          +    -0.43478073380625 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.15872794306716 * Education2n_Cycle +
-0.2621450786439 * EducationBasic + -0.141563901063 * EducationGraduation + 0.45665087056809 *
EducationMaster + 0.03219453957597 * Marital_StatusDivorced + -0.73835008216677 *
Marital_StatusMarried + 0.11212575818086 * Marital_StatusSingle + -0.43478073380625 *
Marital_StatusTogether ;
1253377   +   H1x1_4  = H1x1_4  +    -0.76014837933596 * Education2n_Cycle
1253378   +          +     0.81014096036717 * EducationBasic  +     0.41200440507889 *
1253379   +        EducationGraduation  +    -1.00228990059701 * EducationMaster
1253380   +          +    -0.95055539413405 * Marital_StatusDivorced
1253381   +          +    -1.65922419336067 * Marital_StatusMarried
1253382   +          +     0.78727538125107 * Marital_StatusSingle
1253383   +          +    -2.04820355088009 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.76014837933596 * Education2n_Cycle +
0.81014096036717 * EducationBasic + 0.41200440507889 * EducationGraduation + -1.00228990059701
* EducationMaster + -0.95055539413405 * Marital_StatusDivorced + -1.65922419336067 *
Marital_StatusMarried + 0.78727538125107 * Marital_StatusSingle + -2.04820355088009 *
Marital_StatusTogether ;
1253384   +   H1x1_5  = H1x1_5  +    -0.28767104655135 * Education2n_Cycle
1253385   +          +     0.23294407135706 * EducationBasic  +    -1.19680108607997 *
1253386   +        EducationGraduation  +     0.46710355433642 * EducationMaster
1253387   +          +     -4.1747415035634 * Marital_StatusDivorced
1253388   +          +     3.61194282451968 * Marital_StatusMarried
1253389   +          +     -3.2800495365546 * Marital_StatusSingle
1253390   +          +     4.03496183640024 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.28767104655135 * Education2n_Cycle +
0.23294407135706 * EducationBasic + -1.19680108607997 * EducationGraduation + 0.46710355433642
* EducationMaster + -4.1747415035634 * Marital_StatusDivorced + 3.61194282451968 *
Marital_StatusMarried + -3.2800495365546 * Marital_StatusSingle + 4.03496183640024 *
Marital_StatusTogether ;
1253391   +   H1x1_1  =    -2.93438581065873 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -2.93438581065873 + H1x1_1 ;
1253392   +   H1x1_2  =     0.62443347607569 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.62443347607569 + H1x1_2 ;
1253393   +   H1x1_3  =    -1.18755793198513 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -1.18755793198513 + H1x1_3 ;
1253394   +   H1x1_4  =    -3.21278432238831 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -3.21278432238831 + H1x1_4 ;
1253395   +   H1x1_5  =    -1.81875492018044 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.81875492018044 + H1x1_5 ;
1253396   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
1253397   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
1253398   +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
1253399   +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
1253400   +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
1253401   +   H1x1_4  = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
1253402   +   H1x1_5  = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_5 = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
1253403   +END;
MPRINT(EM_DIAGRAM):   END;
1253404   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1253405   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
1253406   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
1253407   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
1253408   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
1253409   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
1253410   +END;
MPRINT(EM_DIAGRAM):   END;
1253411   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1253412   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
1253413   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1253414   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1253415   +   H1x2_1  =    -0.54874145972704 * S_AcceptedCmpTotal
1253416   +          +    -1.96729802286214 * S_Age  +     0.48476252791598 * S_Frq
1253417   +          +    -0.22341551246937 * S_Income  +      0.5578096957255 *
1253418   +        S_Kidhome  +     0.02626802496223 * S_Mnt  +     0.45412544568839 *
1253419   +        S_MntFishProducts  +     1.01144979259918 * S_MntFruits
1253420   +          +     0.10684155186482 * S_MntGoldProds  +    -0.28941930881694 *
1253421   +        S_MntMeatProducts  +    -1.28044699620063 * S_MntSweetProducts
1253422   +          +     0.01381215802108 * S_MntWines  +    -0.10048261914477 *
1253423   +        S_MonthsAsCustomer  +     2.77259931235269 * S_NumCatalogPurchases
1253424   +          +     1.29727972396867 * S_NumDealsPurchases
1253425   +          +     -0.4796144286007 * S_NumDistPurchases
1253426   +          +     0.88365985808591 * S_NumStorePurchases
1253427   +          +     0.68522096892804 * S_NumWebPurchases
1253428   +          +     0.54931043107798 * S_NumWebVisitsMonth
1253429   +          +     0.54113568533807 * S_RFMstat  +    -1.25421061779043 *
1253430   +        S_RMntFrq  +     2.35704770144328 * S_Recency
1253431   +          +     0.71039073076168 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.54874145972704 * S_AcceptedCmpTotal + -1.96729802286214 *
S_Age + 0.48476252791598 * S_Frq + -0.22341551246937 * S_Income + 0.5578096957255 * S_Kidhome
+ 0.02626802496223 * S_Mnt + 0.45412544568839 * S_MntFishProducts + 1.01144979259918 *
S_MntFruits + 0.10684155186482 * S_MntGoldProds + -0.28941930881694 * S_MntMeatProducts +
-1.28044699620063 * S_MntSweetProducts + 0.01381215802108 * S_MntWines + -0.10048261914477 *
S_MonthsAsCustomer + 2.77259931235269 * S_NumCatalogPurchases + 1.29727972396867 *
S_NumDealsPurchases + -0.4796144286007 * S_NumDistPurchases + 0.88365985808591 *
S_NumStorePurchases + 0.68522096892804 * S_NumWebPurchases + 0.54931043107798 *
S_NumWebVisitsMonth + 0.54113568533807 * S_RFMstat + -1.25421061779043 * S_RMntFrq +
2.35704770144328 * S_Recency + 0.71039073076168 * S_Teenhome ;
1253432   +   H1x2_2  =    -0.87761654715429 * S_AcceptedCmpTotal
1253433   +          +     0.35157201280883 * S_Age  +    -0.52499399345006 * S_Frq
1253434   +          +    -0.18535763866989 * S_Income  +    -2.37902660986953 *
1253435   +        S_Kidhome  +     0.91895423997679 * S_Mnt  +     0.25609945459048 *
1253436   +        S_MntFishProducts  +    -0.81235755934506 * S_MntFruits
1253437   +          +     0.52120923975997 * S_MntGoldProds  +    -0.44372337811583 *
1253438   +        S_MntMeatProducts  +     0.44948834045992 * S_MntSweetProducts
1253439   +          +     -1.0932771504262 * S_MntWines  +     0.50602262267579 *
1253440   +        S_MonthsAsCustomer  +     1.56553203254999 * S_NumCatalogPurchases
1253441   +          +     0.26997834581422 * S_NumDealsPurchases
1253442   +          +      1.4974894627406 * S_NumDistPurchases
1253443   +          +     0.20577850505638 * S_NumStorePurchases
1253444   +          +     0.67578530037026 * S_NumWebPurchases
1253445   +          +     1.48893165613941 * S_NumWebVisitsMonth
1253446   +          +     0.13287732996796 * S_RFMstat  +     0.56918286957798 *
1253447   +        S_RMntFrq  +    -1.40718347701522 * S_Recency
1253448   +          +    -1.45355422903931 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.87761654715429 * S_AcceptedCmpTotal + 0.35157201280883 *
S_Age + -0.52499399345006 * S_Frq + -0.18535763866989 * S_Income + -2.37902660986953 *
S_Kidhome + 0.91895423997679 * S_Mnt + 0.25609945459048 * S_MntFishProducts +
-0.81235755934506 * S_MntFruits + 0.52120923975997 * S_MntGoldProds + -0.44372337811583 *
S_MntMeatProducts + 0.44948834045992 * S_MntSweetProducts + -1.0932771504262 * S_MntWines +
0.50602262267579 * S_MonthsAsCustomer + 1.56553203254999 * S_NumCatalogPurchases +
0.26997834581422 * S_NumDealsPurchases + 1.4974894627406 * S_NumDistPurchases +
0.20577850505638 * S_NumStorePurchases + 0.67578530037026 * S_NumWebPurchases +
1.48893165613941 * S_NumWebVisitsMonth + 0.13287732996796 * S_RFMstat + 0.56918286957798 *
S_RMntFrq + -1.40718347701522 * S_Recency + -1.45355422903931 * S_Teenhome ;
1253449   +   H1x2_3  =    -0.04229252175967 * S_AcceptedCmpTotal
1253450   +          +    -0.15725101559927 * S_Age  +      2.0258984610186 * S_Frq
1253451   +          +     0.68410444381038 * S_Income  +     0.69019962444573 *
1253452   +        S_Kidhome  +    -0.34233922017925 * S_Mnt  +     1.55352897772997 *
1253453   +        S_MntFishProducts  +    -0.76176236164027 * S_MntFruits
1253454   +          +    -1.16754517357962 * S_MntGoldProds  +     1.24350326644835 *
1253455   +        S_MntMeatProducts  +    -0.81282451423383 * S_MntSweetProducts
1253456   +          +      0.7172672745995 * S_MntWines  +     1.13255065624057 *
1253457   +        S_MonthsAsCustomer  +    -0.07781573365472 * S_NumCatalogPurchases
1253458   +          +    -0.75474919633886 * S_NumDealsPurchases
1253459   +          +     2.21872386475638 * S_NumDistPurchases
1253460   +          +    -0.36191460108989 * S_NumStorePurchases
1253461   +          +     0.03160010932412 * S_NumWebPurchases
1253462   +          +     0.00984650739909 * S_NumWebVisitsMonth
1253463   +          +     0.89037882953417 * S_RFMstat  +    -1.05136047825247 *
1253464   +        S_RMntFrq  +     0.97890474913417 * S_Recency
1253465   +          +     1.27657797009328 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.04229252175967 * S_AcceptedCmpTotal + -0.15725101559927 *
S_Age + 2.0258984610186 * S_Frq + 0.68410444381038 * S_Income + 0.69019962444573 * S_Kidhome +
-0.34233922017925 * S_Mnt + 1.55352897772997 * S_MntFishProducts + -0.76176236164027 *
S_MntFruits + -1.16754517357962 * S_MntGoldProds + 1.24350326644835 * S_MntMeatProducts +
-0.81282451423383 * S_MntSweetProducts + 0.7172672745995 * S_MntWines + 1.13255065624057 *
S_MonthsAsCustomer + -0.07781573365472 * S_NumCatalogPurchases + -0.75474919633886 *
S_NumDealsPurchases + 2.21872386475638 * S_NumDistPurchases + -0.36191460108989 *
S_NumStorePurchases + 0.03160010932412 * S_NumWebPurchases + 0.00984650739909 *
S_NumWebVisitsMonth + 0.89037882953417 * S_RFMstat + -1.05136047825247 * S_RMntFrq +
0.97890474913417 * S_Recency + 1.27657797009328 * S_Teenhome ;
1253466   +   H1x2_4  =    -1.09473986244398 * S_AcceptedCmpTotal
1253467   +          +     0.02292759635423 * S_Age  +     -1.7109267909752 * S_Frq
1253468   +          +    -1.43383040360225 * S_Income  +    -1.57934610129188 *
1253469   +        S_Kidhome  +      0.1051214240099 * S_Mnt  +     0.97936539268931 *
1253470   +        S_MntFishProducts  +    -0.59583313648658 * S_MntFruits
1253471   +          +     1.51886505753921 * S_MntGoldProds  +    -0.32475169924002 *
1253472   +        S_MntMeatProducts  +     2.41110603237098 * S_MntSweetProducts
1253473   +          +    -0.31356867592074 * S_MntWines  +    -0.46746195334785 *
1253474   +        S_MonthsAsCustomer  +      1.2175994058873 * S_NumCatalogPurchases
1253475   +          +    -1.12057357865269 * S_NumDealsPurchases
1253476   +          +    -0.70841760614521 * S_NumDistPurchases
1253477   +          +    -1.39174816270404 * S_NumStorePurchases
1253478   +          +    -1.62343249380806 * S_NumWebPurchases
1253479   +          +    -0.73097954508465 * S_NumWebVisitsMonth
1253480   +          +    -3.00146168388145 * S_RFMstat  +     0.52793752800199 *
1253481   +        S_RMntFrq  +    -1.13585643618227 * S_Recency
1253482   +          +    -0.84809590269062 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -1.09473986244398 * S_AcceptedCmpTotal + 0.02292759635423 *
S_Age + -1.7109267909752 * S_Frq + -1.43383040360225 * S_Income + -1.57934610129188 *
S_Kidhome + 0.1051214240099 * S_Mnt + 0.97936539268931 * S_MntFishProducts + -0.59583313648658
* S_MntFruits + 1.51886505753921 * S_MntGoldProds + -0.32475169924002 * S_MntMeatProducts +
2.41110603237098 * S_MntSweetProducts + -0.31356867592074 * S_MntWines + -0.46746195334785 *
S_MonthsAsCustomer + 1.2175994058873 * S_NumCatalogPurchases + -1.12057357865269 *
S_NumDealsPurchases + -0.70841760614521 * S_NumDistPurchases + -1.39174816270404 *
S_NumStorePurchases + -1.62343249380806 * S_NumWebPurchases + -0.73097954508465 *
S_NumWebVisitsMonth + -3.00146168388145 * S_RFMstat + 0.52793752800199 * S_RMntFrq +
-1.13585643618227 * S_Recency + -0.84809590269062 * S_Teenhome ;
1253483   +   H1x2_5  =    -0.76941479017685 * S_AcceptedCmpTotal
1253484   +          +    -0.80197055800099 * S_Age  +    -0.33523741625948 * S_Frq
1253485   +          +     0.67386262421365 * S_Income  +     1.52003240833706 *
1253486   +        S_Kidhome  +     0.14459028288037 * S_Mnt  +     0.39874528164598 *
1253487   +        S_MntFishProducts  +    -1.59397070226712 * S_MntFruits
1253488   +          +     0.78518859165099 * S_MntGoldProds  +     0.48003679676647 *
1253489   +        S_MntMeatProducts  +    -0.17657709565986 * S_MntSweetProducts
1253490   +          +    -0.79155200251992 * S_MntWines  +     0.27335896970236 *
1253491   +        S_MonthsAsCustomer  +     1.70502645622852 * S_NumCatalogPurchases
1253492   +          +     0.66880481485557 * S_NumDealsPurchases
1253493   +          +     0.69540174544859 * S_NumDistPurchases
1253494   +          +     1.68246546921736 * S_NumStorePurchases
1253495   +          +     1.85958176898295 * S_NumWebPurchases
1253496   +          +    -0.23815810306565 * S_NumWebVisitsMonth
1253497   +          +    -1.93291997626659 * S_RFMstat  +     0.44532152898673 *
1253498   +        S_RMntFrq  +    -2.12360922264332 * S_Recency
1253499   +          +     0.99915338747458 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.76941479017685 * S_AcceptedCmpTotal + -0.80197055800099 *
S_Age + -0.33523741625948 * S_Frq + 0.67386262421365 * S_Income + 1.52003240833706 * S_Kidhome
+ 0.14459028288037 * S_Mnt + 0.39874528164598 * S_MntFishProducts + -1.59397070226712 *
S_MntFruits + 0.78518859165099 * S_MntGoldProds + 0.48003679676647 * S_MntMeatProducts +
-0.17657709565986 * S_MntSweetProducts + -0.79155200251992 * S_MntWines + 0.27335896970236 *
S_MonthsAsCustomer + 1.70502645622852 * S_NumCatalogPurchases + 0.66880481485557 *
S_NumDealsPurchases + 0.69540174544859 * S_NumDistPurchases + 1.68246546921736 *
S_NumStorePurchases + 1.85958176898295 * S_NumWebPurchases + -0.23815810306565 *
S_NumWebVisitsMonth + -1.93291997626659 * S_RFMstat + 0.44532152898673 * S_RMntFrq +
-2.12360922264332 * S_Recency + 0.99915338747458 * S_Teenhome ;
1253500   +   H1x2_1  = H1x2_1  +    -0.34162163066653 * AcceptedCmp10
1253501   +          +    -1.63962075993761 * AcceptedCmp20  +    -0.15621537766672 *
1253502   +        AcceptedCmp30  +      -0.732967936338 * AcceptedCmp40
1253503   +          +    -0.89574320220152 * AcceptedCmp50  +    -1.65404732277767 *
1253504   +        Complain0  +     0.39810242344925 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.34162163066653 * AcceptedCmp10 + -1.63962075993761
* AcceptedCmp20 + -0.15621537766672 * AcceptedCmp30 + -0.732967936338 * AcceptedCmp40 +
-0.89574320220152 * AcceptedCmp50 + -1.65404732277767 * Complain0 + 0.39810242344925 *
HigherEducationBinary0 ;
1253505   +   H1x2_2  = H1x2_2  +     1.20749893379181 * AcceptedCmp10
1253506   +          +     0.74035850461127 * AcceptedCmp20  +    -0.57598323268755 *
1253507   +        AcceptedCmp30  +      0.2507562576407 * AcceptedCmp40
1253508   +          +    -1.65954337863227 * AcceptedCmp50  +    -0.36715622527216 *
1253509   +        Complain0  +    -0.80760857638242 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 1.20749893379181 * AcceptedCmp10 + 0.74035850461127 *
AcceptedCmp20 + -0.57598323268755 * AcceptedCmp30 + 0.2507562576407 * AcceptedCmp40 +
-1.65954337863227 * AcceptedCmp50 + -0.36715622527216 * Complain0 + -0.80760857638242 *
HigherEducationBinary0 ;
1253510   +   H1x2_3  = H1x2_3  +      0.1125551214626 * AcceptedCmp10
1253511   +          +      0.9256532360503 * AcceptedCmp20  +    -0.66171851987996 *
1253512   +        AcceptedCmp30  +     1.38941609616943 * AcceptedCmp40
1253513   +          +    -0.12600029950267 * AcceptedCmp50  +     1.77872255302987 *
1253514   +        Complain0  +     0.92261637863861 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.1125551214626 * AcceptedCmp10 + 0.9256532360503 *
AcceptedCmp20 + -0.66171851987996 * AcceptedCmp30 + 1.38941609616943 * AcceptedCmp40 +
-0.12600029950267 * AcceptedCmp50 + 1.77872255302987 * Complain0 + 0.92261637863861 *
HigherEducationBinary0 ;
1253515   +   H1x2_4  = H1x2_4  +     1.15541901435911 * AcceptedCmp10
1253516   +          +     0.29649422640031 * AcceptedCmp20  +     0.39809722545141 *
1253517   +        AcceptedCmp30  +    -0.33350815656019 * AcceptedCmp40
1253518   +          +    -0.67932033799188 * AcceptedCmp50  +     0.37378775543802 *
1253519   +        Complain0  +    -0.42273281355142 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 1.15541901435911 * AcceptedCmp10 + 0.29649422640031 *
AcceptedCmp20 + 0.39809722545141 * AcceptedCmp30 + -0.33350815656019 * AcceptedCmp40 +
-0.67932033799188 * AcceptedCmp50 + 0.37378775543802 * Complain0 + -0.42273281355142 *
HigherEducationBinary0 ;
1253520   +   H1x2_5  = H1x2_5  +     0.42070748083274 * AcceptedCmp10
1253521   +          +     0.35338291913326 * AcceptedCmp20  +    -0.47257467834599 *
1253522   +        AcceptedCmp30  +     1.53611423156071 * AcceptedCmp40
1253523   +          +    -1.33360798584085 * AcceptedCmp50  +    -1.44352278404761 *
1253524   +        Complain0  +    -0.33674466205114 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.42070748083274 * AcceptedCmp10 + 0.35338291913326 *
AcceptedCmp20 + -0.47257467834599 * AcceptedCmp30 + 1.53611423156071 * AcceptedCmp40 +
-1.33360798584085 * AcceptedCmp50 + -1.44352278404761 * Complain0 + -0.33674466205114 *
HigherEducationBinary0 ;
1253525   +   H1x2_1  = H1x2_1  +     0.60843711339598 * Education2n_Cycle
1253526   +          +     -0.2612316425128 * EducationBasic  +     0.53215140077355 *
1253527   +        EducationGraduation  +     0.32623787352656 * EducationMaster
1253528   +          +      0.2766977476799 * Marital_StatusDivorced
1253529   +          +     0.99585126449473 * Marital_StatusMarried
1253530   +          +    -0.71244490682808 * Marital_StatusSingle
1253531   +          +     0.05234471555621 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 0.60843711339598 * Education2n_Cycle +
-0.2612316425128 * EducationBasic + 0.53215140077355 * EducationGraduation + 0.32623787352656
* EducationMaster + 0.2766977476799 * Marital_StatusDivorced + 0.99585126449473 *
Marital_StatusMarried + -0.71244490682808 * Marital_StatusSingle + 0.05234471555621 *
Marital_StatusTogether ;
1253532   +   H1x2_2  = H1x2_2  +    -1.37916273373311 * Education2n_Cycle
1253533   +          +     0.16982792088728 * EducationBasic  +     0.00814910507718 *
1253534   +        EducationGraduation  +     0.47239961039918 * EducationMaster
1253535   +          +     0.04724779113048 * Marital_StatusDivorced
1253536   +          +    -0.80186231440666 * Marital_StatusMarried
1253537   +          +    -0.02226793584171 * Marital_StatusSingle
1253538   +          +     1.15827064756189 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -1.37916273373311 * Education2n_Cycle +
0.16982792088728 * EducationBasic + 0.00814910507718 * EducationGraduation + 0.47239961039918
* EducationMaster + 0.04724779113048 * Marital_StatusDivorced + -0.80186231440666 *
Marital_StatusMarried + -0.02226793584171 * Marital_StatusSingle + 1.15827064756189 *
Marital_StatusTogether ;
1253539   +   H1x2_3  = H1x2_3  +    -0.24428291102209 * Education2n_Cycle
1253540   +          +    -0.11697967041189 * EducationBasic  +    -1.11774839931933 *
1253541   +        EducationGraduation  +     0.41284540548646 * EducationMaster
1253542   +          +     0.28206835683721 * Marital_StatusDivorced
1253543   +          +     0.46500886756532 * Marital_StatusMarried
1253544   +          +     0.35327545255503 * Marital_StatusSingle
1253545   +          +     0.58394650567036 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -0.24428291102209 * Education2n_Cycle +
-0.11697967041189 * EducationBasic + -1.11774839931933 * EducationGraduation +
0.41284540548646 * EducationMaster + 0.28206835683721 * Marital_StatusDivorced +
0.46500886756532 * Marital_StatusMarried + 0.35327545255503 * Marital_StatusSingle +
0.58394650567036 * Marital_StatusTogether ;
1253546   +   H1x2_4  = H1x2_4  +    -0.41547462236128 * Education2n_Cycle
1253547   +          +     1.13629818238321 * EducationBasic  +     0.25034344652006 *
1253548   +        EducationGraduation  +    -0.29812527209479 * EducationMaster
1253549   +          +     1.22291788006392 * Marital_StatusDivorced
1253550   +          +    -2.27040720272432 * Marital_StatusMarried
1253551   +          +     1.13606780043773 * Marital_StatusSingle
1253552   +          +    -1.07606142589696 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + -0.41547462236128 * Education2n_Cycle +
1.13629818238321 * EducationBasic + 0.25034344652006 * EducationGraduation + -0.29812527209479
* EducationMaster + 1.22291788006392 * Marital_StatusDivorced + -2.27040720272432 *
Marital_StatusMarried + 1.13606780043773 * Marital_StatusSingle + -1.07606142589696 *
Marital_StatusTogether ;
1253553   +   H1x2_5  = H1x2_5  +     1.12913918872999 * Education2n_Cycle
1253554   +          +     1.23833680718071 * EducationBasic  +     1.02294394812757 *
1253555   +        EducationGraduation  +      0.4909097120378 * EducationMaster
1253556   +          +     -0.3999800759199 * Marital_StatusDivorced
1253557   +          +    -0.40978271635345 * Marital_StatusMarried
1253558   +          +    -0.55524279444227 * Marital_StatusSingle
1253559   +          +    -0.84395633194091 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 1.12913918872999 * Education2n_Cycle +
1.23833680718071 * EducationBasic + 1.02294394812757 * EducationGraduation + 0.4909097120378 *
EducationMaster + -0.3999800759199 * Marital_StatusDivorced + -0.40978271635345 *
Marital_StatusMarried + -0.55524279444227 * Marital_StatusSingle + -0.84395633194091 *
Marital_StatusTogether ;
1253560   +   H1x2_1  =    -0.65400470626386 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.65400470626386 + H1x2_1 ;
1253561   +   H1x2_2  =    -0.07530883721979 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.07530883721979 + H1x2_2 ;
1253562   +   H1x2_3  =      -0.290996947172 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.290996947172 + H1x2_3 ;
1253563   +   H1x2_4  =    -0.89461283774487 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.89461283774487 + H1x2_4 ;
1253564   +   H1x2_5  =    -0.37171981998051 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.37171981998051 + H1x2_5 ;
1253565   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
1253566   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
1253567   +   H1x2_1  = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
1253568   +   H1x2_2  = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_2 = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
1253569   +   H1x2_3  = 1.0 / (1.0 + EXP(MIN( - H1x2_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_3 = 1.0 / (1.0 + EXP(MIN( - H1x2_3 , _EXP_BAR)));
1253570   +   H1x2_4  = 1.0 / (1.0 + EXP(MIN( - H1x2_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_4 = 1.0 / (1.0 + EXP(MIN( - H1x2_4 , _EXP_BAR)));
1253571   +   H1x2_5  = 1.0 / (1.0 + EXP(MIN( - H1x2_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.0 / (1.0 + EXP(MIN( - H1x2_5 , _EXP_BAR)));
1253572   +END;
MPRINT(EM_DIAGRAM):   END;
1253573   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1253574   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
1253575   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
1253576   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
1253577   +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
1253578   +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
1253579   +END;
MPRINT(EM_DIAGRAM):   END;
1253580   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1253581   +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
1253582   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1253583   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1253584   +   H1x3_1  =     0.02034446400728 * S_AcceptedCmpTotal
1253585   +          +    -0.93561297099295 * S_Age  +     0.49066734733476 * S_Frq
1253586   +          +    -1.34856771280634 * S_Income  +     1.35662384709137 *
1253587   +        S_Kidhome  +    -0.02206222240953 * S_Mnt  +     0.42162640035912 *
1253588   +        S_MntFishProducts  +      1.4724867503467 * S_MntFruits
1253589   +          +    -0.51460401528507 * S_MntGoldProds  +       0.958125893994 *
1253590   +        S_MntMeatProducts  +     0.57113865733502 * S_MntSweetProducts
1253591   +          +    -1.00744287646761 * S_MntWines  +     0.17043433169038 *
1253592   +        S_MonthsAsCustomer  +     1.69277828985001 * S_NumCatalogPurchases
1253593   +          +     0.15783958682465 * S_NumDealsPurchases
1253594   +          +     1.52124708558457 * S_NumDistPurchases
1253595   +          +     -1.3804418313581 * S_NumStorePurchases
1253596   +          +    -1.29570111649272 * S_NumWebPurchases
1253597   +          +    -0.64280706056547 * S_NumWebVisitsMonth
1253598   +          +    -1.20774016698707 * S_RFMstat  +    -0.44623204790714 *
1253599   +        S_RMntFrq  +    -0.06726660535826 * S_Recency
1253600   +          +    -0.73266660753354 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.02034446400728 * S_AcceptedCmpTotal + -0.93561297099295 *
S_Age + 0.49066734733476 * S_Frq + -1.34856771280634 * S_Income + 1.35662384709137 * S_Kidhome
+ -0.02206222240953 * S_Mnt + 0.42162640035912 * S_MntFishProducts + 1.4724867503467 *
S_MntFruits + -0.51460401528507 * S_MntGoldProds + 0.958125893994 * S_MntMeatProducts +
0.57113865733502 * S_MntSweetProducts + -1.00744287646761 * S_MntWines + 0.17043433169038 *
S_MonthsAsCustomer + 1.69277828985001 * S_NumCatalogPurchases + 0.15783958682465 *
S_NumDealsPurchases + 1.52124708558457 * S_NumDistPurchases + -1.3804418313581 *
S_NumStorePurchases + -1.29570111649272 * S_NumWebPurchases + -0.64280706056547 *
S_NumWebVisitsMonth + -1.20774016698707 * S_RFMstat + -0.44623204790714 * S_RMntFrq +
-0.06726660535826 * S_Recency + -0.73266660753354 * S_Teenhome ;
1253601   +   H1x3_2  =     0.05576327437156 * S_AcceptedCmpTotal
1253602   +          +    -0.09670418926268 * S_Age  +     0.70499031549942 * S_Frq
1253603   +          +     0.26184897891893 * S_Income  +    -1.14390972062773 *
1253604   +        S_Kidhome  +     -0.0692794596346 * S_Mnt  +     0.38520399298269 *
1253605   +        S_MntFishProducts  +     0.23416686193508 * S_MntFruits
1253606   +          +     0.54961704765881 * S_MntGoldProds  +     1.00350256670809 *
1253607   +        S_MntMeatProducts  +    -0.03432942277526 * S_MntSweetProducts
1253608   +          +    -0.79877133727616 * S_MntWines  +    -2.29194848128805 *
1253609   +        S_MonthsAsCustomer  +    -0.38950356087292 * S_NumCatalogPurchases
1253610   +          +     0.12337111358286 * S_NumDealsPurchases
1253611   +          +     -2.3848926094027 * S_NumDistPurchases
1253612   +          +    -1.20666646996433 * S_NumStorePurchases
1253613   +          +     0.89549302881365 * S_NumWebPurchases
1253614   +          +     0.95359042569947 * S_NumWebVisitsMonth
1253615   +          +    -0.41458051201542 * S_RFMstat  +    -2.05830783255089 *
1253616   +        S_RMntFrq  +     0.17682790616815 * S_Recency
1253617   +          +     0.20329199183726 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_2 = 0.05576327437156 * S_AcceptedCmpTotal + -0.09670418926268 *
S_Age + 0.70499031549942 * S_Frq + 0.26184897891893 * S_Income + -1.14390972062773 * S_Kidhome
+ -0.0692794596346 * S_Mnt + 0.38520399298269 * S_MntFishProducts + 0.23416686193508 *
S_MntFruits + 0.54961704765881 * S_MntGoldProds + 1.00350256670809 * S_MntMeatProducts +
-0.03432942277526 * S_MntSweetProducts + -0.79877133727616 * S_MntWines + -2.29194848128805 *
S_MonthsAsCustomer + -0.38950356087292 * S_NumCatalogPurchases + 0.12337111358286 *
S_NumDealsPurchases + -2.3848926094027 * S_NumDistPurchases + -1.20666646996433 *
S_NumStorePurchases + 0.89549302881365 * S_NumWebPurchases + 0.95359042569947 *
S_NumWebVisitsMonth + -0.41458051201542 * S_RFMstat + -2.05830783255089 * S_RMntFrq +
0.17682790616815 * S_Recency + 0.20329199183726 * S_Teenhome ;
1253618   +   H1x3_3  =     0.56145399373835 * S_AcceptedCmpTotal
1253619   +          +     -0.0607922137813 * S_Age  +    -0.72333515266618 * S_Frq
1253620   +          +     1.00319702869592 * S_Income  +    -0.98265416539823 *
1253621   +        S_Kidhome  +      0.0683081611036 * S_Mnt  +     0.53609800817402 *
1253622   +        S_MntFishProducts  +     2.04360526983241 * S_MntFruits
1253623   +          +    -0.71698041504305 * S_MntGoldProds  +     -0.0344399486348 *
1253624   +        S_MntMeatProducts  +     0.33812230317499 * S_MntSweetProducts
1253625   +          +     1.06616289880664 * S_MntWines  +     0.61567483782422 *
1253626   +        S_MonthsAsCustomer  +      0.1468959674594 * S_NumCatalogPurchases
1253627   +          +    -1.05383642674948 * S_NumDealsPurchases
1253628   +          +     1.71861984509369 * S_NumDistPurchases
1253629   +          +     1.47595181536047 * S_NumStorePurchases
1253630   +          +    -1.64165005491178 * S_NumWebPurchases
1253631   +          +    -2.35130004742828 * S_NumWebVisitsMonth
1253632   +          +      1.0733561716985 * S_RFMstat  +     1.11931629246452 *
1253633   +        S_RMntFrq  +    -1.27356615687944 * S_Recency
1253634   +          +     0.38980214209917 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_3 = 0.56145399373835 * S_AcceptedCmpTotal + -0.0607922137813 *
S_Age + -0.72333515266618 * S_Frq + 1.00319702869592 * S_Income + -0.98265416539823 *
S_Kidhome + 0.0683081611036 * S_Mnt + 0.53609800817402 * S_MntFishProducts + 2.04360526983241
* S_MntFruits + -0.71698041504305 * S_MntGoldProds + -0.0344399486348 * S_MntMeatProducts +
0.33812230317499 * S_MntSweetProducts + 1.06616289880664 * S_MntWines + 0.61567483782422 *
S_MonthsAsCustomer + 0.1468959674594 * S_NumCatalogPurchases + -1.05383642674948 *
S_NumDealsPurchases + 1.71861984509369 * S_NumDistPurchases + 1.47595181536047 *
S_NumStorePurchases + -1.64165005491178 * S_NumWebPurchases + -2.35130004742828 *
S_NumWebVisitsMonth + 1.0733561716985 * S_RFMstat + 1.11931629246452 * S_RMntFrq +
-1.27356615687944 * S_Recency + 0.38980214209917 * S_Teenhome ;
1253635   +   H1x3_4  =    -1.87202109167616 * S_AcceptedCmpTotal
1253636   +          +     0.55536174675106 * S_Age  +     1.30133566520787 * S_Frq
1253637   +          +     1.18618986686496 * S_Income  +      0.7889264950743 *
1253638   +        S_Kidhome  +     0.52573653297629 * S_Mnt  +    -0.46151505202831 *
1253639   +        S_MntFishProducts  +     0.87196199131075 * S_MntFruits
1253640   +          +    -1.42881514301194 * S_MntGoldProds  +     0.75395204572369 *
1253641   +        S_MntMeatProducts  +    -1.86940235435459 * S_MntSweetProducts
1253642   +          +    -0.16531589560603 * S_MntWines  +     0.80429494629006 *
1253643   +        S_MonthsAsCustomer  +     2.07324775707635 * S_NumCatalogPurchases
1253644   +          +     0.13347794794222 * S_NumDealsPurchases
1253645   +          +     0.30533639886561 * S_NumDistPurchases
1253646   +          +     1.63892955540526 * S_NumStorePurchases
1253647   +          +     0.43734586516446 * S_NumWebPurchases
1253648   +          +     1.79260779802864 * S_NumWebVisitsMonth
1253649   +          +     2.03019700767877 * S_RFMstat  +    -0.36302320348133 *
1253650   +        S_RMntFrq  +    -0.32271271703746 * S_Recency
1253651   +          +     1.03191552613762 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_4 = -1.87202109167616 * S_AcceptedCmpTotal + 0.55536174675106 *
S_Age + 1.30133566520787 * S_Frq + 1.18618986686496 * S_Income + 0.7889264950743 * S_Kidhome +
0.52573653297629 * S_Mnt + -0.46151505202831 * S_MntFishProducts + 0.87196199131075 *
S_MntFruits + -1.42881514301194 * S_MntGoldProds + 0.75395204572369 * S_MntMeatProducts +
-1.86940235435459 * S_MntSweetProducts + -0.16531589560603 * S_MntWines + 0.80429494629006 *
S_MonthsAsCustomer + 2.07324775707635 * S_NumCatalogPurchases + 0.13347794794222 *
S_NumDealsPurchases + 0.30533639886561 * S_NumDistPurchases + 1.63892955540526 *
S_NumStorePurchases + 0.43734586516446 * S_NumWebPurchases + 1.79260779802864 *
S_NumWebVisitsMonth + 2.03019700767877 * S_RFMstat + -0.36302320348133 * S_RMntFrq +
-0.32271271703746 * S_Recency + 1.03191552613762 * S_Teenhome ;
1253652   +   H1x3_5  =     0.20857223520727 * S_AcceptedCmpTotal
1253653   +          +    -0.20096771162452 * S_Age  +     0.34962532991985 * S_Frq
1253654   +          +     1.37548654455856 * S_Income  +     1.56421861140197 *
1253655   +        S_Kidhome  +    -1.14534324749928 * S_Mnt  +     1.19456381083083 *
1253656   +        S_MntFishProducts  +     0.66027175430916 * S_MntFruits
1253657   +          +    -0.93198171949009 * S_MntGoldProds  +    -0.72464830253528 *
1253658   +        S_MntMeatProducts  +     1.02487566206095 * S_MntSweetProducts
1253659   +          +     1.05601020947303 * S_MntWines  +     2.31580499448269 *
1253660   +        S_MonthsAsCustomer  +    -0.72019418879499 * S_NumCatalogPurchases
1253661   +          +     1.64209094349557 * S_NumDealsPurchases
1253662   +          +    -0.38876870460627 * S_NumDistPurchases
1253663   +          +    -0.48559309584971 * S_NumStorePurchases
1253664   +          +     0.21254626353218 * S_NumWebPurchases
1253665   +          +    -0.71484448532542 * S_NumWebVisitsMonth
1253666   +          +     0.02349535084994 * S_RFMstat  +    -0.16176132186427 *
1253667   +        S_RMntFrq  +     0.44893411588775 * S_Recency
1253668   +          +      0.2652212690846 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_5 = 0.20857223520727 * S_AcceptedCmpTotal + -0.20096771162452 *
S_Age + 0.34962532991985 * S_Frq + 1.37548654455856 * S_Income + 1.56421861140197 * S_Kidhome
+ -1.14534324749928 * S_Mnt + 1.19456381083083 * S_MntFishProducts + 0.66027175430916 *
S_MntFruits + -0.93198171949009 * S_MntGoldProds + -0.72464830253528 * S_MntMeatProducts +
1.02487566206095 * S_MntSweetProducts + 1.05601020947303 * S_MntWines + 2.31580499448269 *
S_MonthsAsCustomer + -0.72019418879499 * S_NumCatalogPurchases + 1.64209094349557 *
S_NumDealsPurchases + -0.38876870460627 * S_NumDistPurchases + -0.48559309584971 *
S_NumStorePurchases + 0.21254626353218 * S_NumWebPurchases + -0.71484448532542 *
S_NumWebVisitsMonth + 0.02349535084994 * S_RFMstat + -0.16176132186427 * S_RMntFrq +
0.44893411588775 * S_Recency + 0.2652212690846 * S_Teenhome ;
1253669   +   H1x3_1  = H1x3_1  +    -1.35842958516566 * AcceptedCmp10
1253670   +          +     0.34594436457216 * AcceptedCmp20  +      0.3640777110552 *
1253671   +        AcceptedCmp30  +    -2.65231594293215 * AcceptedCmp40
1253672   +          +    -0.32594395344101 * AcceptedCmp50  +    -0.20731631969028 *
1253673   +        Complain0  +    -0.37562812451995 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + -1.35842958516566 * AcceptedCmp10 + 0.34594436457216 *
AcceptedCmp20 + 0.3640777110552 * AcceptedCmp30 + -2.65231594293215 * AcceptedCmp40 +
-0.32594395344101 * AcceptedCmp50 + -0.20731631969028 * Complain0 + -0.37562812451995 *
HigherEducationBinary0 ;
1253674   +   H1x3_2  = H1x3_2  +    -0.29516697471591 * AcceptedCmp10
1253675   +          +     0.12160626453607 * AcceptedCmp20  +    -0.19673071668839 *
1253676   +        AcceptedCmp30  +      0.9679629348873 * AcceptedCmp40
1253677   +          +     0.27607865991675 * AcceptedCmp50  +     0.34210605810889 *
1253678   +        Complain0  +    -0.91955372970801 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + -0.29516697471591 * AcceptedCmp10 + 0.12160626453607 *
AcceptedCmp20 + -0.19673071668839 * AcceptedCmp30 + 0.9679629348873 * AcceptedCmp40 +
0.27607865991675 * AcceptedCmp50 + 0.34210605810889 * Complain0 + -0.91955372970801 *
HigherEducationBinary0 ;
1253679   +   H1x3_3  = H1x3_3  +    -0.64048354977116 * AcceptedCmp10
1253680   +          +     0.71632378156708 * AcceptedCmp20  +     1.49620826236085 *
1253681   +        AcceptedCmp30  +    -0.41927727863342 * AcceptedCmp40
1253682   +          +    -0.74518887123144 * AcceptedCmp50  +     -0.5653895859863 *
1253683   +        Complain0  +     0.49026807979832 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 + -0.64048354977116 * AcceptedCmp10 + 0.71632378156708 *
AcceptedCmp20 + 1.49620826236085 * AcceptedCmp30 + -0.41927727863342 * AcceptedCmp40 +
-0.74518887123144 * AcceptedCmp50 + -0.5653895859863 * Complain0 + 0.49026807979832 *
HigherEducationBinary0 ;
1253684   +   H1x3_4  = H1x3_4  +    -0.39456977652419 * AcceptedCmp10
1253685   +          +    -0.35607374401334 * AcceptedCmp20  +     0.25403314478809 *
1253686   +        AcceptedCmp30  +    -1.26365534513909 * AcceptedCmp40
1253687   +          +    -0.93574993035227 * AcceptedCmp50  +    -0.01475423275475 *
1253688   +        Complain0  +     0.99152563511102 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 + -0.39456977652419 * AcceptedCmp10 + -0.35607374401334
* AcceptedCmp20 + 0.25403314478809 * AcceptedCmp30 + -1.26365534513909 * AcceptedCmp40 +
-0.93574993035227 * AcceptedCmp50 + -0.01475423275475 * Complain0 + 0.99152563511102 *
HigherEducationBinary0 ;
1253689   +   H1x3_5  = H1x3_5  +    -1.26373480748972 * AcceptedCmp10
1253690   +          +     0.14485593883591 * AcceptedCmp20  +     -0.0764980824216 *
1253691   +        AcceptedCmp30  +    -1.03297576023738 * AcceptedCmp40
1253692   +          +    -1.10199278454673 * AcceptedCmp50  +     0.92040879426753 *
1253693   +        Complain0  +     0.19845951543481 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 + -1.26373480748972 * AcceptedCmp10 + 0.14485593883591 *
AcceptedCmp20 + -0.0764980824216 * AcceptedCmp30 + -1.03297576023738 * AcceptedCmp40 +
-1.10199278454673 * AcceptedCmp50 + 0.92040879426753 * Complain0 + 0.19845951543481 *
HigherEducationBinary0 ;
1253694   +   H1x3_1  = H1x3_1  +     0.21888802927361 * Education2n_Cycle
1253695   +          +    -1.88729117459232 * EducationBasic  +    -0.23163049582765 *
1253696   +        EducationGraduation  +     0.46887304015863 * EducationMaster
1253697   +          +     1.33953173091973 * Marital_StatusDivorced
1253698   +          +    -0.26253208073262 * Marital_StatusMarried
1253699   +          +    -0.00960552682431 * Marital_StatusSingle
1253700   +          +     1.02851334153667 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + 0.21888802927361 * Education2n_Cycle +
-1.88729117459232 * EducationBasic + -0.23163049582765 * EducationGraduation +
0.46887304015863 * EducationMaster + 1.33953173091973 * Marital_StatusDivorced +
-0.26253208073262 * Marital_StatusMarried + -0.00960552682431 * Marital_StatusSingle +
1.02851334153667 * Marital_StatusTogether ;
1253701   +   H1x3_2  = H1x3_2  +     2.36701652448958 * Education2n_Cycle
1253702   +          +     0.64894060487321 * EducationBasic  +     -1.2851019467738 *
1253703   +        EducationGraduation  +     1.05325310300372 * EducationMaster
1253704   +          +     1.43150850334311 * Marital_StatusDivorced
1253705   +          +    -0.69239127844934 * Marital_StatusMarried
1253706   +          +     2.08477562471559 * Marital_StatusSingle
1253707   +          +    -1.55945531486837 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + 2.36701652448958 * Education2n_Cycle +
0.64894060487321 * EducationBasic + -1.2851019467738 * EducationGraduation + 1.05325310300372
* EducationMaster + 1.43150850334311 * Marital_StatusDivorced + -0.69239127844934 *
Marital_StatusMarried + 2.08477562471559 * Marital_StatusSingle + -1.55945531486837 *
Marital_StatusTogether ;
1253708   +   H1x3_3  = H1x3_3  +    -0.07588279976612 * Education2n_Cycle
1253709   +          +    -1.60804492005984 * EducationBasic  +     0.15348594453976 *
1253710   +        EducationGraduation  +     1.80436924796338 * EducationMaster
1253711   +          +     1.08387556786168 * Marital_StatusDivorced
1253712   +          +      1.0283506000217 * Marital_StatusMarried
1253713   +          +    -0.87069431107983 * Marital_StatusSingle
1253714   +          +    -0.04455113729262 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 + -0.07588279976612 * Education2n_Cycle +
-1.60804492005984 * EducationBasic + 0.15348594453976 * EducationGraduation + 1.80436924796338
* EducationMaster + 1.08387556786168 * Marital_StatusDivorced + 1.0283506000217 *
Marital_StatusMarried + -0.87069431107983 * Marital_StatusSingle + -0.04455113729262 *
Marital_StatusTogether ;
1253715   +   H1x3_4  = H1x3_4  +    -0.24072826180906 * Education2n_Cycle
1253716   +          +     0.56372511932643 * EducationBasic  +    -1.72914870390939 *
1253717   +        EducationGraduation  +    -1.53859265107051 * EducationMaster
1253718   +          +      -1.347780188307 * Marital_StatusDivorced
1253719   +          +    -0.53911983240372 * Marital_StatusMarried
1253720   +          +     0.22083074159185 * Marital_StatusSingle
1253721   +          +     0.46023807391468 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 + -0.24072826180906 * Education2n_Cycle +
0.56372511932643 * EducationBasic + -1.72914870390939 * EducationGraduation +
-1.53859265107051 * EducationMaster + -1.347780188307 * Marital_StatusDivorced +
-0.53911983240372 * Marital_StatusMarried + 0.22083074159185 * Marital_StatusSingle +
0.46023807391468 * Marital_StatusTogether ;
1253722   +   H1x3_5  = H1x3_5  +    -0.72917301249658 * Education2n_Cycle
1253723   +          +     0.78780526232794 * EducationBasic  +     0.22244378874589 *
1253724   +        EducationGraduation  +      1.6087631135774 * EducationMaster
1253725   +          +     1.46582538311384 * Marital_StatusDivorced
1253726   +          +     0.05256161016002 * Marital_StatusMarried
1253727   +          +    -1.21402967626877 * Marital_StatusSingle
1253728   +          +     0.88645860928281 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 + -0.72917301249658 * Education2n_Cycle +
0.78780526232794 * EducationBasic + 0.22244378874589 * EducationGraduation + 1.6087631135774 *
EducationMaster + 1.46582538311384 * Marital_StatusDivorced + 0.05256161016002 *
Marital_StatusMarried + -1.21402967626877 * Marital_StatusSingle + 0.88645860928281 *
Marital_StatusTogether ;
1253729   +   H1x3_1  =     0.88456831875399 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.88456831875399 + H1x3_1 ;
1253730   +   H1x3_2  =    -0.97118571845853 + H1x3_2 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = -0.97118571845853 + H1x3_2 ;
1253731   +   H1x3_3  =    -0.79264210370105 + H1x3_3 ;
MPRINT(EM_DIAGRAM):   H1x3_3 = -0.79264210370105 + H1x3_3 ;
1253732   +   H1x3_4  =     0.02838267530757 + H1x3_4 ;
MPRINT(EM_DIAGRAM):   H1x3_4 = 0.02838267530757 + H1x3_4 ;
1253733   +   H1x3_5  =      0.6575544901332 + H1x3_5 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = 0.6575544901332 + H1x3_5 ;
1253734   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
1253735   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
1253736   +   H1x3_1  = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_1 = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
1253737   +   H1x3_2  = 1.0 / (1.0 + EXP(MIN( - H1x3_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_2 = 1.0 / (1.0 + EXP(MIN( - H1x3_2 , _EXP_BAR)));
1253738   +   H1x3_3  = 1.0 / (1.0 + EXP(MIN( - H1x3_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_3 = 1.0 / (1.0 + EXP(MIN( - H1x3_3 , _EXP_BAR)));
1253739   +   H1x3_4  = 1.0 / (1.0 + EXP(MIN( - H1x3_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_4 = 1.0 / (1.0 + EXP(MIN( - H1x3_4 , _EXP_BAR)));
1253740   +   H1x3_5  = 1.0 / (1.0 + EXP(MIN( - H1x3_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_5 = 1.0 / (1.0 + EXP(MIN( - H1x3_5 , _EXP_BAR)));
1253741   +END;
MPRINT(EM_DIAGRAM):   END;
1253742   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1253743   +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
1253744   +   H1x3_2  = .;
MPRINT(EM_DIAGRAM):   H1x3_2 = .;
1253745   +   H1x3_3  = .;
MPRINT(EM_DIAGRAM):   H1x3_3 = .;
1253746   +   H1x3_4  = .;
MPRINT(EM_DIAGRAM):   H1x3_4 = .;
1253747   +   H1x3_5  = .;
MPRINT(EM_DIAGRAM):   H1x3_5 = .;
1253748   +END;
MPRINT(EM_DIAGRAM):   END;
1253749   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1253750   +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
1253751   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1253752   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1253753   +   H2x1_1  =    -0.87888588976745 * H1x1_1  +     2.90335871970001 * H1x1_2
1253754   +          +     3.56892082037266 * H1x1_3  +    -2.73992780705083 * H1x1_4
1253755   +          +     1.85087845133324 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -0.87888588976745 * H1x1_1 + 2.90335871970001 * H1x1_2 +
3.56892082037266 * H1x1_3 + -2.73992780705083 * H1x1_4 + 1.85087845133324 * H1x1_5 ;
1253756   +   H2x1_2  =    -0.58574259841126 * H1x1_1  +    -0.21734849016798 * H1x1_2
1253757   +          +    -0.25911074181081 * H1x1_3  +    -0.42608313525243 * H1x1_4
1253758   +          +      0.0572264965726 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -0.58574259841126 * H1x1_1 + -0.21734849016798 * H1x1_2 +
-0.25911074181081 * H1x1_3 + -0.42608313525243 * H1x1_4 + 0.0572264965726 * H1x1_5 ;
1253759   +   H2x1_3  =     -3.4245103090892 * H1x1_1  +     2.39148442791109 * H1x1_2
1253760   +          +     2.40633993926864 * H1x1_3  +    -0.39116314741561 * H1x1_4
1253761   +          +     1.55940137045446 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -3.4245103090892 * H1x1_1 + 2.39148442791109 * H1x1_2 +
2.40633993926864 * H1x1_3 + -0.39116314741561 * H1x1_4 + 1.55940137045446 * H1x1_5 ;
1253762   +   H2x1_4  =     4.40552826823228 * H1x1_1  +    -2.22667369285426 * H1x1_2
1253763   +          +    -4.36956996992936 * H1x1_3  +     5.07833758885145 * H1x1_4
1253764   +          +    -3.71745000855391 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 4.40552826823228 * H1x1_1 + -2.22667369285426 * H1x1_2 +
-4.36956996992936 * H1x1_3 + 5.07833758885145 * H1x1_4 + -3.71745000855391 * H1x1_5 ;
1253765   +   H2x1_1  = H2x1_1  +     2.57417055243767 * H1x2_1
1253766   +          +     0.83648749576123 * H1x2_2  +     0.89390090173338 * H1x2_3
1253767   +          +     0.64981014833304 * H1x2_4  +    -0.52148329192172 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 2.57417055243767 * H1x2_1 + 0.83648749576123 * H1x2_2
+ 0.89390090173338 * H1x2_3 + 0.64981014833304 * H1x2_4 + -0.52148329192172 * H1x2_5 ;
1253768   +   H2x1_2  = H2x1_2  +      0.0180888989385 * H1x2_1
1253769   +          +    -0.80823823488019 * H1x2_2  +    -0.28763491232907 * H1x2_3
1253770   +          +     0.25846928082637 * H1x2_4  +    -0.90191452174928 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 0.0180888989385 * H1x2_1 + -0.80823823488019 * H1x2_2
+ -0.28763491232907 * H1x2_3 + 0.25846928082637 * H1x2_4 + -0.90191452174928 * H1x2_5 ;
1253771   +   H2x1_3  = H2x1_3  +     1.14009879940491 * H1x2_1
1253772   +          +    -0.40787680915084 * H1x2_2  +     0.07284828777988 * H1x2_3
1253773   +          +     0.36049016529857 * H1x2_4  +    -1.18138631855392 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + 1.14009879940491 * H1x2_1 + -0.40787680915084 * H1x2_2
+ 0.07284828777988 * H1x2_3 + 0.36049016529857 * H1x2_4 + -1.18138631855392 * H1x2_5 ;
1253774   +   H2x1_4  = H2x1_4  +     -0.1178430666715 * H1x2_1
1253775   +          +     2.09065650924536 * H1x2_2  +     1.04148055725421 * H1x2_3
1253776   +          +     0.02606984862898 * H1x2_4  +     0.31973150706209 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + -0.1178430666715 * H1x2_1 + 2.09065650924536 * H1x2_2
+ 1.04148055725421 * H1x2_3 + 0.02606984862898 * H1x2_4 + 0.31973150706209 * H1x2_5 ;
1253777   +   H2x1_1  = H2x1_1  +     0.37589541636702 * H1x3_1
1253778   +          +    -1.02452495514201 * H1x3_2  +     0.44765211805329 * H1x3_3
1253779   +          +    -1.35647342372032 * H1x3_4  +     -0.6490399229487 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 0.37589541636702 * H1x3_1 + -1.02452495514201 * H1x3_2
+ 0.44765211805329 * H1x3_3 + -1.35647342372032 * H1x3_4 + -0.6490399229487 * H1x3_5 ;
1253780   +   H2x1_2  = H2x1_2  +      -1.910747593267 * H1x3_1
1253781   +          +     1.91313714874593 * H1x3_2  +     0.89010950185557 * H1x3_3
1253782   +          +     1.16258612173237 * H1x3_4  +     0.67062728470341 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -1.910747593267 * H1x3_1 + 1.91313714874593 * H1x3_2 +
0.89010950185557 * H1x3_3 + 1.16258612173237 * H1x3_4 + 0.67062728470341 * H1x3_5 ;
1253783   +   H2x1_3  = H2x1_3  +    -0.61933600446437 * H1x3_1
1253784   +          +     1.71790550668732 * H1x3_2  +     0.54214423164791 * H1x3_3
1253785   +          +     1.23934237110052 * H1x3_4  +     -0.5426823885329 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -0.61933600446437 * H1x3_1 + 1.71790550668732 * H1x3_2
+ 0.54214423164791 * H1x3_3 + 1.23934237110052 * H1x3_4 + -0.5426823885329 * H1x3_5 ;
1253786   +   H2x1_4  = H2x1_4  +     0.63501991890118 * H1x3_1
1253787   +          +     0.52608732282548 * H1x3_2  +     1.05849455171994 * H1x3_3
1253788   +          +    -0.10988994454917 * H1x3_4  +     -0.4296682351699 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 0.63501991890118 * H1x3_1 + 0.52608732282548 * H1x3_2
+ 1.05849455171994 * H1x3_3 + -0.10988994454917 * H1x3_4 + -0.4296682351699 * H1x3_5 ;
1253789   +   H2x1_1  =     1.65760855975376 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.65760855975376 + H2x1_1 ;
1253790   +   H2x1_2  =    -1.48092067999918 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -1.48092067999918 + H2x1_2 ;
1253791   +   H2x1_3  =     0.34293203475136 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 0.34293203475136 + H2x1_3 ;
1253792   +   H2x1_4  =     2.26730807690838 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 2.26730807690838 + H2x1_4 ;
1253793   +   H2x1_5  = 0;
MPRINT(EM_DIAGRAM):   H2x1_5 = 0;
1253794   +   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 );
1253795   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1253796   +   H2x1_1  = EXP(H2x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_1 = EXP(H2x1_1 - _MAX_);
1253797   +   _SUM_ = _SUM_ + H2x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_1 ;
1253798   +   H2x1_2  = EXP(H2x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_2 = EXP(H2x1_2 - _MAX_);
1253799   +   _SUM_ = _SUM_ + H2x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_2 ;
1253800   +   H2x1_3  = EXP(H2x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_3 = EXP(H2x1_3 - _MAX_);
1253801   +   _SUM_ = _SUM_ + H2x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_3 ;
1253802   +   H2x1_4  = EXP(H2x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_4 = EXP(H2x1_4 - _MAX_);
1253803   +   _SUM_ = _SUM_ + H2x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_4 ;
1253804   +   H2x1_5  = EXP(H2x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_5 = EXP(H2x1_5 - _MAX_);
1253805   +   _SUM_ = _SUM_ + H2x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_5 ;
1253806   +   H2x1_1  = H2x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 / _SUM_;
1253807   +   H2x1_2  = H2x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 / _SUM_;
1253808   +   H2x1_3  = H2x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 / _SUM_;
1253809   +   H2x1_4  = H2x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 / _SUM_;
1253810   +   H2x1_5  = H2x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 / _SUM_;
1253811   +END;
MPRINT(EM_DIAGRAM):   END;
1253812   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1253813   +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
1253814   +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
1253815   +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
1253816   +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
1253817   +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
1253818   +END;
MPRINT(EM_DIAGRAM):   END;
1253819   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1253820   +*** Writing the Node H2x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x2_ ;
1253821   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1253822   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1253823   +   H2x2_1  =     0.35487648363729 * H1x1_1  +    -1.23352844324567 * H1x1_2
1253824   +          +      0.4867158313468 * H1x1_3  +    -1.47292809903753 * H1x1_4
1253825   +          +    -1.00833023262854 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = 0.35487648363729 * H1x1_1 + -1.23352844324567 * H1x1_2 +
0.4867158313468 * H1x1_3 + -1.47292809903753 * H1x1_4 + -1.00833023262854 * H1x1_5 ;
1253826   +   H2x2_2  =     1.32087363094324 * H1x1_1  +     0.82502983555141 * H1x1_2
1253827   +          +    -0.68621854188154 * H1x1_3  +     1.98219533394448 * H1x1_4
1253828   +          +     0.24099626891211 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = 1.32087363094324 * H1x1_1 + 0.82502983555141 * H1x1_2 +
-0.68621854188154 * H1x1_3 + 1.98219533394448 * H1x1_4 + 0.24099626891211 * H1x1_5 ;
1253829   +   H2x2_3  =     1.19516705715854 * H1x1_1  +    -0.20476587977538 * H1x1_2
1253830   +          +    -2.69435199012833 * H1x1_3  +      1.1085509496662 * H1x1_4
1253831   +          +    -0.95845782501191 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = 1.19516705715854 * H1x1_1 + -0.20476587977538 * H1x1_2 +
-2.69435199012833 * H1x1_3 + 1.1085509496662 * H1x1_4 + -0.95845782501191 * H1x1_5 ;
1253832   +   H2x2_4  =     0.80435775915951 * H1x1_1  +     1.81751702761299 * H1x1_2
1253833   +          +     0.07722876002556 * H1x1_3  +    -0.41957373993392 * H1x1_4
1253834   +          +    -1.39341356039439 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = 0.80435775915951 * H1x1_1 + 1.81751702761299 * H1x1_2 +
0.07722876002556 * H1x1_3 + -0.41957373993392 * H1x1_4 + -1.39341356039439 * H1x1_5 ;
1253835   +   H2x2_1  = H2x2_1  +     0.84230993439042 * H1x2_1
1253836   +          +      1.4931541058726 * H1x2_2  +     0.29113033361443 * H1x2_3
1253837   +          +     0.58117372781043 * H1x2_4  +     0.21183820652904 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + 0.84230993439042 * H1x2_1 + 1.4931541058726 * H1x2_2 +
0.29113033361443 * H1x2_3 + 0.58117372781043 * H1x2_4 + 0.21183820652904 * H1x2_5 ;
1253838   +   H2x2_2  = H2x2_2  +     0.27560928585641 * H1x2_1
1253839   +          +     1.00352880610395 * H1x2_2  +     1.86342723621296 * H1x2_3
1253840   +          +     0.68698974361713 * H1x2_4  +     1.62443344475228 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + 0.27560928585641 * H1x2_1 + 1.00352880610395 * H1x2_2
+ 1.86342723621296 * H1x2_3 + 0.68698974361713 * H1x2_4 + 1.62443344475228 * H1x2_5 ;
1253841   +   H2x2_3  = H2x2_3  +     0.59362453125998 * H1x2_1
1253842   +          +     2.21434215943762 * H1x2_2  +     0.00697391860503 * H1x2_3
1253843   +          +     0.52298455671378 * H1x2_4  +    -1.36319907473823 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 + 0.59362453125998 * H1x2_1 + 2.21434215943762 * H1x2_2
+ 0.00697391860503 * H1x2_3 + 0.52298455671378 * H1x2_4 + -1.36319907473823 * H1x2_5 ;
1253844   +   H2x2_4  = H2x2_4  +     0.87949581153547 * H1x2_1
1253845   +          +     0.52867495476492 * H1x2_2  +    -0.30823702050003 * H1x2_3
1253846   +          +     1.30732992472712 * H1x2_4  +    -0.93335113891701 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 + 0.87949581153547 * H1x2_1 + 0.52867495476492 * H1x2_2
+ -0.30823702050003 * H1x2_3 + 1.30732992472712 * H1x2_4 + -0.93335113891701 * H1x2_5 ;
1253847   +   H2x2_1  = H2x2_1  +    -0.18546949662618 * H1x3_1
1253848   +          +     0.12449215628678 * H1x3_2  +    -0.06904718348363 * H1x3_3
1253849   +          +     1.64236464165721 * H1x3_4  +      0.6073731959408 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + -0.18546949662618 * H1x3_1 + 0.12449215628678 * H1x3_2
+ -0.06904718348363 * H1x3_3 + 1.64236464165721 * H1x3_4 + 0.6073731959408 * H1x3_5 ;
1253850   +   H2x2_2  = H2x2_2  +    -0.65604349417832 * H1x3_1
1253851   +          +    -0.36719791640957 * H1x3_2  +     0.13320126120657 * H1x3_3
1253852   +          +     0.18159276955134 * H1x3_4  +     2.58327741985853 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + -0.65604349417832 * H1x3_1 + -0.36719791640957 *
H1x3_2 + 0.13320126120657 * H1x3_3 + 0.18159276955134 * H1x3_4 + 2.58327741985853 * H1x3_5 ;
1253853   +   H2x2_3  = H2x2_3  +     0.91638163706166 * H1x3_1
1253854   +          +    -0.47067218080648 * H1x3_2  +    -1.48968450897101 * H1x3_3
1253855   +          +     1.31187282169231 * H1x3_4  +     -0.2874693423684 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 + 0.91638163706166 * H1x3_1 + -0.47067218080648 * H1x3_2
+ -1.48968450897101 * H1x3_3 + 1.31187282169231 * H1x3_4 + -0.2874693423684 * H1x3_5 ;
1253856   +   H2x2_4  = H2x2_4  +     0.53560065193109 * H1x3_1
1253857   +          +    -1.15405943087628 * H1x3_2  +     0.12331054856276 * H1x3_3
1253858   +          +     -1.4665768024733 * H1x3_4  +    -0.08015819920106 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 + 0.53560065193109 * H1x3_1 + -1.15405943087628 * H1x3_2
+ 0.12331054856276 * H1x3_3 + -1.4665768024733 * H1x3_4 + -0.08015819920106 * H1x3_5 ;
1253859   +   H2x2_1  =     1.14294113680807 + H2x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = 1.14294113680807 + H2x2_1 ;
1253860   +   H2x2_2  =     0.23029998902452 + H2x2_2 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = 0.23029998902452 + H2x2_2 ;
1253861   +   H2x2_3  =     0.09214575938404 + H2x2_3 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = 0.09214575938404 + H2x2_3 ;
1253862   +   H2x2_4  =    -1.18247593420886 + H2x2_4 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = -1.18247593420886 + H2x2_4 ;
1253863   +   H2x2_5  = 0;
MPRINT(EM_DIAGRAM):   H2x2_5 = 0;
1253864   +   _MAX_ = MAX (H2x2_1 , H2x2_2 , H2x2_3 , H2x2_4 , H2x2_5 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x2_1 , H2x2_2 , H2x2_3 , H2x2_4 , H2x2_5 );
1253865   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1253866   +   H2x2_1  = EXP(H2x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_1 = EXP(H2x2_1 - _MAX_);
1253867   +   _SUM_ = _SUM_ + H2x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_1 ;
1253868   +   H2x2_2  = EXP(H2x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_2 = EXP(H2x2_2 - _MAX_);
1253869   +   _SUM_ = _SUM_ + H2x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_2 ;
1253870   +   H2x2_3  = EXP(H2x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_3 = EXP(H2x2_3 - _MAX_);
1253871   +   _SUM_ = _SUM_ + H2x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_3 ;
1253872   +   H2x2_4  = EXP(H2x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_4 = EXP(H2x2_4 - _MAX_);
1253873   +   _SUM_ = _SUM_ + H2x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_4 ;
1253874   +   H2x2_5  = EXP(H2x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_5 = EXP(H2x2_5 - _MAX_);
1253875   +   _SUM_ = _SUM_ + H2x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_5 ;
1253876   +   H2x2_1  = H2x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 / _SUM_;
1253877   +   H2x2_2  = H2x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 / _SUM_;
1253878   +   H2x2_3  = H2x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 / _SUM_;
1253879   +   H2x2_4  = H2x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 / _SUM_;
1253880   +   H2x2_5  = H2x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 / _SUM_;
1253881   +END;
MPRINT(EM_DIAGRAM):   END;
1253882   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1253883   +   H2x2_1  = .;
MPRINT(EM_DIAGRAM):   H2x2_1 = .;
1253884   +   H2x2_2  = .;
MPRINT(EM_DIAGRAM):   H2x2_2 = .;
1253885   +   H2x2_3  = .;
MPRINT(EM_DIAGRAM):   H2x2_3 = .;
1253886   +   H2x2_4  = .;
MPRINT(EM_DIAGRAM):   H2x2_4 = .;
1253887   +   H2x2_5  = .;
MPRINT(EM_DIAGRAM):   H2x2_5 = .;
1253888   +END;
MPRINT(EM_DIAGRAM):   END;
1253889   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1253890   +*** Writing the Node H3x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H3x1_ ;
1253891   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1253892   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1253893   +   H3x1_1  =     0.38781845364667 * H2x1_1  +    -1.29333236344932 * H2x1_2
1253894   +          +    -0.39452648844304 * H2x1_3  +    -1.74269898056816 * H2x1_4
1253895   +          +     0.80663208970159 * H2x1_5 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = 0.38781845364667 * H2x1_1 + -1.29333236344932 * H2x1_2 +
-0.39452648844304 * H2x1_3 + -1.74269898056816 * H2x1_4 + 0.80663208970159 * H2x1_5 ;
1253896   +   H3x1_2  =     3.42138045838852 * H2x1_1  +    -2.53755815247586 * H2x1_2
1253897   +          +     1.21718290783021 * H2x1_3  +    -5.59742312960418 * H2x1_4
1253898   +          +     0.93331767575635 * H2x1_5 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = 3.42138045838852 * H2x1_1 + -2.53755815247586 * H2x1_2 +
1.21718290783021 * H2x1_3 + -5.59742312960418 * H2x1_4 + 0.93331767575635 * H2x1_5 ;
1253899   +   H3x1_3  =      0.3066875685513 * H2x1_1  +     0.06212172151661 * H2x1_2
1253900   +          +     0.54975837436313 * H2x1_3  +    -2.01758242649336 * H2x1_4
1253901   +          +     -1.5405169528484 * H2x1_5 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = 0.3066875685513 * H2x1_1 + 0.06212172151661 * H2x1_2 +
0.54975837436313 * H2x1_3 + -2.01758242649336 * H2x1_4 + -1.5405169528484 * H2x1_5 ;
1253902   +   H3x1_4  =     0.75238654454663 * H2x1_1  +      0.8605688517794 * H2x1_2
1253903   +          +    -1.18675726977521 * H2x1_3  +    -0.23106123144614 * H2x1_4
1253904   +          +    -0.26022301590207 * H2x1_5 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = 0.75238654454663 * H2x1_1 + 0.8605688517794 * H2x1_2 +
-1.18675726977521 * H2x1_3 + -0.23106123144614 * H2x1_4 + -0.26022301590207 * H2x1_5 ;
1253905   +   H3x1_1  = H3x1_1  +     -1.9857802180333 * H2x2_1
1253906   +          +    -1.83746541265988 * H2x2_2  +    -0.19991218509663 * H2x2_3
1253907   +          +    -1.16358880876987 * H2x2_4  +     0.72072728861384 * H2x2_5 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 + -1.9857802180333 * H2x2_1 + -1.83746541265988 * H2x2_2
+ -0.19991218509663 * H2x2_3 + -1.16358880876987 * H2x2_4 + 0.72072728861384 * H2x2_5 ;
1253908   +   H3x1_2  = H3x1_2  +     0.96937540396367 * H2x2_1
1253909   +          +    -0.36649624165623 * H2x2_2  +     0.89618563330616 * H2x2_3
1253910   +          +    -0.84224721075989 * H2x2_4  +     0.43309698013395 * H2x2_5 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = H3x1_2 + 0.96937540396367 * H2x2_1 + -0.36649624165623 * H2x2_2
+ 0.89618563330616 * H2x2_3 + -0.84224721075989 * H2x2_4 + 0.43309698013395 * H2x2_5 ;
1253911   +   H3x1_3  = H3x1_3  +    -0.90225214765586 * H2x2_1
1253912   +          +     0.02136319386846 * H2x2_2  +    -0.46868394918483 * H2x2_3
1253913   +          +     0.56005845701528 * H2x2_4  +     -1.2510120440755 * H2x2_5 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = H3x1_3 + -0.90225214765586 * H2x2_1 + 0.02136319386846 * H2x2_2
+ -0.46868394918483 * H2x2_3 + 0.56005845701528 * H2x2_4 + -1.2510120440755 * H2x2_5 ;
1253914   +   H3x1_4  = H3x1_4  +    -0.50993520854009 * H2x2_1
1253915   +          +    -2.07093806498525 * H2x2_2  +      0.4129198676448 * H2x2_3
1253916   +          +     0.26049404756746 * H2x2_4  +     2.51376895456424 * H2x2_5 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = H3x1_4 + -0.50993520854009 * H2x2_1 + -2.07093806498525 *
H2x2_2 + 0.4129198676448 * H2x2_3 + 0.26049404756746 * H2x2_4 + 2.51376895456424 * H2x2_5 ;
1253917   +   H3x1_1  =    -0.83299285935592 + H3x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = -0.83299285935592 + H3x1_1 ;
1253918   +   H3x1_2  =     1.30330978853872 + H3x1_2 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = 1.30330978853872 + H3x1_2 ;
1253919   +   H3x1_3  =    -2.12788819064089 + H3x1_3 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = -2.12788819064089 + H3x1_3 ;
1253920   +   H3x1_4  =    -2.20240058017016 + H3x1_4 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = -2.20240058017016 + H3x1_4 ;
1253921   +   H3x1_5  = 0;
MPRINT(EM_DIAGRAM):   H3x1_5 = 0;
1253922   +   _MAX_ = MAX (H3x1_1 , H3x1_2 , H3x1_3 , H3x1_4 , H3x1_5 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H3x1_1 , H3x1_2 , H3x1_3 , H3x1_4 , H3x1_5 );
1253923   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1253924   +   H3x1_1  = EXP(H3x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_1 = EXP(H3x1_1 - _MAX_);
1253925   +   _SUM_ = _SUM_ + H3x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_1 ;
1253926   +   H3x1_2  = EXP(H3x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_2 = EXP(H3x1_2 - _MAX_);
1253927   +   _SUM_ = _SUM_ + H3x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_2 ;
1253928   +   H3x1_3  = EXP(H3x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_3 = EXP(H3x1_3 - _MAX_);
1253929   +   _SUM_ = _SUM_ + H3x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_3 ;
1253930   +   H3x1_4  = EXP(H3x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_4 = EXP(H3x1_4 - _MAX_);
1253931   +   _SUM_ = _SUM_ + H3x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_4 ;
1253932   +   H3x1_5  = EXP(H3x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_5 = EXP(H3x1_5 - _MAX_);
1253933   +   _SUM_ = _SUM_ + H3x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_5 ;
1253934   +   H3x1_1  = H3x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 / _SUM_;
1253935   +   H3x1_2  = H3x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_2 = H3x1_2 / _SUM_;
1253936   +   H3x1_3  = H3x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_3 = H3x1_3 / _SUM_;
1253937   +   H3x1_4  = H3x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_4 = H3x1_4 / _SUM_;
1253938   +   H3x1_5  = H3x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_5 = H3x1_5 / _SUM_;
1253939   +END;
MPRINT(EM_DIAGRAM):   END;
1253940   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1253941   +   H3x1_1  = .;
MPRINT(EM_DIAGRAM):   H3x1_1 = .;
1253942   +   H3x1_2  = .;
MPRINT(EM_DIAGRAM):   H3x1_2 = .;
1253943   +   H3x1_3  = .;
MPRINT(EM_DIAGRAM):   H3x1_3 = .;
1253944   +   H3x1_4  = .;
MPRINT(EM_DIAGRAM):   H3x1_4 = .;
1253945   +   H3x1_5  = .;
MPRINT(EM_DIAGRAM):   H3x1_5 = .;
1253946   +END;
MPRINT(EM_DIAGRAM):   END;
1253947   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1253948   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1253949   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1253950   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1253951   +   P_DepVar1  =     0.02793808059597 * H3x1_1  +    -8.41365271594755 * H3x1_2
1253952   +          +    -0.18933524733979 * H3x1_3  +     1.61020422729446 * H3x1_4
1253953   +          +     7.51494112828021 * H3x1_5 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.02793808059597 * H3x1_1 + -8.41365271594755 * H3x1_2 +
-0.18933524733979 * H3x1_3 + 1.61020422729446 * H3x1_4 + 7.51494112828021 * H3x1_5 ;
1253954   +   P_DepVar1  =     0.83962115399384 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.83962115399384 + P_DepVar1 ;
1253955   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1253956   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1253957   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1253958   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1253959   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1253960   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1253961   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1253962   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1253963   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1253964   +END;
MPRINT(EM_DIAGRAM):   END;
1253965   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1253966   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1253967   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1253968   +END;
MPRINT(EM_DIAGRAM):   END;
1253969   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1253970   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1253971   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1253972   +END;
MPRINT(EM_DIAGRAM):   END;
1253973   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1253974   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1253975   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1253976   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1253977   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1253978   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1253979   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1253980   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1253981   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1253982   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1253983   +END;
MPRINT(EM_DIAGRAM):   END;
1253984   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1253985   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1253986   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1253987   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1253988    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1253989    quit;
1253990    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1253991    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1253992    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1253993    retain ID 2 Node "AutoNeural10";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural10";
1253994    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1253995    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 9109 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 9109 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1253996    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1253997    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1253998    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 9109 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 9109 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1253999    proc sort data=EMWS8.AutoNeural10_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural10_variableset out=_temp2(keep=NAME
CREATOR);
1254000    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1254001    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL10_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1254002    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1254003    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1254004    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1254005    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1254006    proc contents data=EMWS8.AutoNeural10_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural10_train out=_meta(keep=NAME) noprint;
1254007    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 83 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
1254008    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1254009    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1254010    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 83 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 83 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1254011    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1254012    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1254013    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1254014    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 83 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 83 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1254015    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1254016    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1254016  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4449 rows and 5 columns.
 
1254017    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1254018    proc append base=EMWS8.Ensmbl46_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl46_FCMP data=_tempx;
1254019    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL46_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 4449 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL46_FCMP has 4449 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1254020    filename _pref
1254020  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1254021    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1254022    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1254023   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1254024   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1254025   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1254026   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1254027   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1254028   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1254029    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1254030    quit;
1254031    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1254032    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1254033    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1254034    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1254035    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1254036    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1254037    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1254038    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1254039    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1254040    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1254041    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1254042    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1254043    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1254044    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1254045    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1254046    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1254047    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1254048    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
1254049    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1254050    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1254051    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1254052    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1254053    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1254054    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1254055    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1254056    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1254057    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1254057  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
1254058    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1254059    proc append base=EMWS8.Ensmbl46_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl46_FCMP data=_tempx;
1254060    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL46_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL46_FCMP has 4453 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1254061    filename _pref
1254061  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1254062    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1254063    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1254064   +
1254065   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1254066   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1254066  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1254067   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1254068   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1254069   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1254070   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1254071   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1254072    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1254073    quit;
1254074    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1254075    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1254076    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1254077    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1254078    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1254079    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1254080    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1254081    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1254082    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1254083    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1254084    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1254085    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1254086    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1254087    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1254088    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1254089    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1254090    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1254091    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1254092    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1254093    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1254094    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1254095    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1254096    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1254097    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1254098    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
1254099    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1254100    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1254100  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
1254101    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1254102    proc append base=EMWS8.Ensmbl46_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl46_FCMP data=_tempx;
1254103    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL46_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL46_FCMP has 4492 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1254104    filename _pref
1254104  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1254105    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1254106    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1254107   +
1254108   +
1254109   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1254110   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1254111   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1254112   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1254113   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1254114   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1254115   +
1254116   +
1254117   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1254118   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1254119   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1254120   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1254121   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1254122   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1254123   +
1254124   +
1254125   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1254126   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1254127   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1254128   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1254129   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1254130   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1254131   +
1254132   +
1254133   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1254134   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1254135   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1254136   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1254137   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1254138   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1254139   +
1254140   +
1254141   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1254142   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1254143   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1254144   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1254145   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1254146   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1254147   +
1254148   +
1254149   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1254150   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1254151   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1254152   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1254153   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1254154   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1254155   +
1254156   +
1254157   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1254158   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1254159   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1254160   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1254161   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1254162   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1254163   +
1254164   +
1254165   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1254166   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1254167   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1254168   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1254169   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1254170   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1254171   +if
1254172   +_FILTERNORM1 not in ( '.')
1254173   + and
1254174   +_FILTERNORM2 not in ( '.')
1254175   + and
1254176   +_FILTERNORM3 not in ( '.')
1254177   + and
1254178   +_FILTERNORM4 not in ( '.')
1254179   + and
1254180   +_FILTERNORM5 not in ( '.')
1254181   + and
1254182   +_FILTERNORM6 not in ( '.')
1254183   + and
1254184   +_FILTERNORM7 not in ( ' ')
1254185   + and
1254186   +_FILTERNORM8 not in ( ' ')
1254187   +and
1254188   +( Dt_Customer ne .)
1254189   +and ( Income ne . and (Income<=107000))
1254190   +and ( Kidhome ne .)
1254191   +and ( MntFishProducts ne .)
1254192   +and ( MntFruits ne .)
1254193   +and ( MntGoldProds ne .)
1254194   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1254195   +and ( MntSweetProducts ne .)
1254196   +and ( MntWines ne .)
1254197   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1254198   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1254199   +and ( NumStorePurchases ne .)
1254200   +and ( NumWebPurchases ne .)
1254201   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1254202   +and ( Recency ne .)
1254203   +and ( Teenhome ne .)
1254204   +and ( Year_Birth ne .)
1254205   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
1254206   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1254207   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1254208   +end;
MPRINT(EM_DIAGRAM):   end;
1254209   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1254210   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1254211    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1254212    quit;
1254213    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1254214    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1254215    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1254216    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1254217    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1254218    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1254219    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1254220    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1254221    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1254222    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1254223    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1254224    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1254225    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1254226    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1254227    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1254228    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1254229    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1254230    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
1254231    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1254232    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1254233    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1254234    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1254235    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1254236    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1254237    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1254238    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1254239    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1254239  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
1254240    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1254241    proc append base=EMWS8.Ensmbl46_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl46_FCMP data=_tempx;
1254242    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL46_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL46_FCMP has 4558 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1254243    %macro varDept(fcmpdata=,id=);
1254244    %global nobs&id scoreFlag&id;
1254245    %let scoreFlag&id = 0;
1254246    %if &id=1 or ^&fcmpStart %then %do;
1254247    proc sort data=&fcmpdata out=_temp&id nodupkey;
1254248    by NAME;
1254249    where id=&id and LHS in( %let j=1;
1254250    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1254251    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1254252    "&var" %let j = %eval(&j+1);
1254253    %end;
1254254    );
1254255    run;
1254256    %let dsid = %sysfunc(open(_temp&id));
1254257    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1254258    %let dsid = %sysfunc(close(&dsid));
1254259    %if &&nobs&id %then %do;
1254260    %let scoreFlag&id = 1;
1254261    %let fcmpStart = 1;
1254262    %end;
1254263    %else %let fcmpStart = 0;
1254264    %end;
1254265    %else %do;
1254266    proc sort data=&fcmpdata out=_tempid;
1254267    where id=&id;
1254268    by LHS;
1254269    run;
1254270    %let dsid = %sysfunc(open(_tempid));
1254271    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1254272    %let dsid = %sysfunc(close(&dsid));
1254273    %if ^&&nobs&id %then %do;
1254274    proc datasets lib=work nolist;
1254275    delete _tempid;
1254276    run;
1254277    quit;
1254278    %end;
1254279    %else %do;
1254280    data _tempAll;
1254281    set %let j=%eval(&id-1);
1254282    %do x=1 %to &j;
1254283    %if &&nobs&x %then %do;
1254284    _temp&x %end;
1254285    %end;
1254286    ;
1254287    run;
1254288    proc sql;
1254289    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1254289  ! work._tempid p2 where p.name=p2.lhs;
1254290    quit;
1254291    data _temp&id;
1254292    set _temp&id;
1254293    where LHS ne '' and NAME ne '' and Node ne '';
1254294    run;
1254295    proc datasets lib=work nolist;
1254296    delete _tempAll;
1254297    run;
1254298    %let dsid = %sysfunc(open(_temp&id));
1254299    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1254300    %let dsid = %sysfunc(close(&dsid));
1254301    %if ^&&nobs&id %then %do;
1254302    proc datasets lib=work nolist;
1254303    delete _temp&id;
1254304    run;
1254305    quit;
1254306    %end;
1254307    %else %do;
1254308    %let scoreFlag&id = 1;
1254309    data _temp&id;
1254310    set _temp&id;
1254311    where LHS ne NAME and node ne '';
1254312    run;
1254313    %let dsid = %sysfunc(open(_temp&id));
1254314    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1254315    %let dsid = %sysfunc(close(&dsid));
1254316    %if ^&&nobs&id %then %do;
1254317    proc datasets lib=work nolist;
1254318    delete _temp&id;
1254319    run;
1254320    quit;
1254321    %end;
1254322    %else %do;
1254323    proc sort data=_temp&id nodupkey;
1254324    by LHS NAME;
1254325    run;
1254326    %end;
1254327    %end;
1254328    %end;
1254329    %end;
1254330    %mend varDept;
1254331    %macro optCode(outdata=fcmpdata);
1254332    %global fcmpStart;
1254333    %let fcmpStart = 0;
1254334    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1254335    %let NumNodes=9;
1254336    %do k=1 %to &NumNodes;
1254337    %vardept(fcmpdata=&outdata, id=&k);
1254338    %end;
1254339    %mend optCode;
1254340    %optcode(outData=EMWS8.Ensmbl46_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl46_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL46_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl46_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 224 observations read from the data set EMWS8.ENSMBL46_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 160 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 64 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl46_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL46_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl46_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL46_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl46_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL46_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 64 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 64 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl46_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL46_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 64 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 68 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl46_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL46_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 64 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 107 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl46_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL46_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl46_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL46_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
1254341    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1254342    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1254343    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1254344    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1254345    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1254346    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1254347    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1254348    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1254349    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1254350    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
1254350  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.
 
1254351    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1254352    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
1254353    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
1254354    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1254355    filename _pref
1254355  ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural7\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural7\EMPUBLISHSCORE.sas";
1254356    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1254357    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural7\EMPUBLISHSCORE.sas.
1254358   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1254359   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1254360   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1254361   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1254362   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1254363   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1254364   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1254365   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1254366   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1254367   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1254368   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1254369   +LENGTH _WARN_ $4
1254370   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
1254371   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1254372   +
1254373   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1254374   +
1254375   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1254376   +
1254377   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1254378   +
1254379   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1254380   +
1254381   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1254382   +
1254383   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1254384   +
1254385   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1254386   +
1254387   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1254388   +
1254389   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1254390   +
1254391   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1254392   +
1254393   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1254394   +
1254395   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1254396   +
1254397   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1254398   +
1254399   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1254400   +
1254401   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1254402   +
1254403   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1254404   +
1254405   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1254406   +
1254407   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1254408   +
1254409   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1254410   +
1254411   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1254412   +
1254413   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1254414   +
1254415   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1254416   +
1254417   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1254418   +
1254419   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1254420   +
1254421   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1254422   +
1254423   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1254424   +
1254425   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1254426   +
1254427   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1254428   +
1254429   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1254430   +
1254431   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1254432   +
1254433   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1254434   +
1254435   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1254436   +
1254437   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1254438   +
1254439   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1254440   +
1254441   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1254442   +
1254443   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1254444   +
1254445   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1254446   +
1254447   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
1254448   +
1254449   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
1254450   +
1254451   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1254452   +
1254453   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1254454   +
1254455   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1254456   +
1254457   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1254458   +
1254459   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1254460   +
1254461   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1254462   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1254463   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1254464   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1254465   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1254466   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1254467   +end;
MPRINT(EM_DIAGRAM):   end;
1254468   +else do;
MPRINT(EM_DIAGRAM):   else do;
1254469   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1254470   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1254471   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1254472   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1254473   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1254474   +   end;
MPRINT(EM_DIAGRAM):   end;
1254475   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1254476   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1254477   +   end;
MPRINT(EM_DIAGRAM):   end;
1254478   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1254479   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1254480   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1254481   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1254482   +   end;
MPRINT(EM_DIAGRAM):   end;
1254483   +end;
MPRINT(EM_DIAGRAM):   end;
1254484   +
1254485   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1254486   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1254487   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1254488   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1254489   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1254490   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1254491   +end;
MPRINT(EM_DIAGRAM):   end;
1254492   +else do;
MPRINT(EM_DIAGRAM):   else do;
1254493   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1254494   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1254495   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1254496   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1254497   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1254498   +   end;
MPRINT(EM_DIAGRAM):   end;
1254499   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1254500   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1254501   +   end;
MPRINT(EM_DIAGRAM):   end;
1254502   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1254503   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1254504   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1254505   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1254506   +   end;
MPRINT(EM_DIAGRAM):   end;
1254507   +end;
MPRINT(EM_DIAGRAM):   end;
1254508   +
1254509   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1254510   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1254511   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1254512   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1254513   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1254514   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1254515   +end;
MPRINT(EM_DIAGRAM):   end;
1254516   +else do;
MPRINT(EM_DIAGRAM):   else do;
1254517   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1254518   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1254519   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1254520   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1254521   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1254522   +   end;
MPRINT(EM_DIAGRAM):   end;
1254523   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1254524   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1254525   +   end;
MPRINT(EM_DIAGRAM):   end;
1254526   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1254527   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1254528   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1254529   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1254530   +   end;
MPRINT(EM_DIAGRAM):   end;
1254531   +end;
MPRINT(EM_DIAGRAM):   end;
1254532   +
1254533   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1254534   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1254535   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1254536   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1254537   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1254538   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1254539   +end;
MPRINT(EM_DIAGRAM):   end;
1254540   +else do;
MPRINT(EM_DIAGRAM):   else do;
1254541   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1254542   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1254543   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1254544   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1254545   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1254546   +   end;
MPRINT(EM_DIAGRAM):   end;
1254547   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1254548   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1254549   +   end;
MPRINT(EM_DIAGRAM):   end;
1254550   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1254551   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1254552   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1254553   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1254554   +   end;
MPRINT(EM_DIAGRAM):   end;
1254555   +end;
MPRINT(EM_DIAGRAM):   end;
1254556   +
1254557   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1254558   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1254559   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1254560   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1254561   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1254562   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1254563   +end;
MPRINT(EM_DIAGRAM):   end;
1254564   +else do;
MPRINT(EM_DIAGRAM):   else do;
1254565   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1254566   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1254567   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1254568   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1254569   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1254570   +   end;
MPRINT(EM_DIAGRAM):   end;
1254571   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1254572   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1254573   +   end;
MPRINT(EM_DIAGRAM):   end;
1254574   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1254575   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1254576   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1254577   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1254578   +   end;
MPRINT(EM_DIAGRAM):   end;
1254579   +end;
MPRINT(EM_DIAGRAM):   end;
1254580   +
1254581   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1254582   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1254583   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1254584   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1254585   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1254586   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1254587   +end;
MPRINT(EM_DIAGRAM):   end;
1254588   +else do;
MPRINT(EM_DIAGRAM):   else do;
1254589   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1254590   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1254591   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1254592   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1254593   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1254594   +   end;
MPRINT(EM_DIAGRAM):   end;
1254595   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1254596   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1254597   +   end;
MPRINT(EM_DIAGRAM):   end;
1254598   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1254599   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1254600   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1254601   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1254602   +   end;
MPRINT(EM_DIAGRAM):   end;
1254603   +end;
MPRINT(EM_DIAGRAM):   end;
1254604   +
1254605   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1254606   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1254607   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1254608   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1254609   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1254610   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1254611   +end;
MPRINT(EM_DIAGRAM):   end;
1254612   +else do;
MPRINT(EM_DIAGRAM):   else do;
1254613   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1254614   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1254615   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1254616   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1254617   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1254618   +   end;
MPRINT(EM_DIAGRAM):   end;
1254619   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1254620   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1254621   +   end;
MPRINT(EM_DIAGRAM):   end;
1254622   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1254623   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1254624   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1254625   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1254626   +   end;
MPRINT(EM_DIAGRAM):   end;
1254627   +end;
MPRINT(EM_DIAGRAM):   end;
1254628   +
1254629   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1254630   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
1254631   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1254632   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1254633   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1254634   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1254635   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1254636   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1254637   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1254638   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1254639   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1254640   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1254641   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1254642   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1254643   +end;
MPRINT(EM_DIAGRAM):   end;
1254644   +else do;
MPRINT(EM_DIAGRAM):   else do;
1254645   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1254646   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1254647   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1254648   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1254649   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1254650   +   end;
MPRINT(EM_DIAGRAM):   end;
1254651   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1254652   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1254653   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1254654   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1254655   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1254656   +   end;
MPRINT(EM_DIAGRAM):   end;
1254657   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1254658   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1254659   +   end;
MPRINT(EM_DIAGRAM):   end;
1254660   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1254661   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1254662   +   end;
MPRINT(EM_DIAGRAM):   end;
1254663   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1254664   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1254665   +   end;
MPRINT(EM_DIAGRAM):   end;
1254666   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1254667   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1254668   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1254669   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1254670   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1254671   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1254672   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1254673   +   end;
MPRINT(EM_DIAGRAM):   end;
1254674   +end;
MPRINT(EM_DIAGRAM):   end;
1254675   +
1254676   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1254677   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1254678   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
1254679   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1254680   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1254681   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1254682   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1254683   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1254684   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1254685   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1254686   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1254687   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1254688   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1254689   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1254690   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1254691   +end;
MPRINT(EM_DIAGRAM):   end;
1254692   +else do;
MPRINT(EM_DIAGRAM):   else do;
1254693   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1254694   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1254695   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1254696   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1254697   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1254698   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1254699   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1254700   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1254701   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1254702   +         end;
MPRINT(EM_DIAGRAM):   end;
1254703   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1254704   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1254705   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1254706   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1254707   +            end;
MPRINT(EM_DIAGRAM):   end;
1254708   +         end;
MPRINT(EM_DIAGRAM):   end;
1254709   +      end;
MPRINT(EM_DIAGRAM):   end;
1254710   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1254711   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1254712   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1254713   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1254714   +         end;
MPRINT(EM_DIAGRAM):   end;
1254715   +      end;
MPRINT(EM_DIAGRAM):   end;
1254716   +   end;
MPRINT(EM_DIAGRAM):   end;
1254717   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1254718   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1254719   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1254720   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1254721   +      end;
MPRINT(EM_DIAGRAM):   end;
1254722   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1254723   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1254724   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1254725   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1254726   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1254727   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1254728   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1254729   +         end;
MPRINT(EM_DIAGRAM):   end;
1254730   +      end;
MPRINT(EM_DIAGRAM):   end;
1254731   +   end;
MPRINT(EM_DIAGRAM):   end;
1254732   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1254733   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1254734   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1254735   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1254736   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1254737   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1254738   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1254739   +   end;
MPRINT(EM_DIAGRAM):   end;
1254740   +end;
MPRINT(EM_DIAGRAM):   end;
1254741   +
1254742   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1254743   +*** Checking missing input Interval
1254744   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1254745   +
1254746   +IF NMISS(
1254747   +   AcceptedCmpTotal ,
1254748   +   Age ,
1254749   +   Frq ,
1254750   +   Income ,
1254751   +   Kidhome ,
1254752   +   Mnt ,
1254753   +   MntFishProducts ,
1254754   +   MntFruits ,
1254755   +   MntGoldProds ,
1254756   +   MntMeatProducts ,
1254757   +   MntSweetProducts ,
1254758   +   MntWines ,
1254759   +   MonthsAsCustomer ,
1254760   +   NumCatalogPurchases ,
1254761   +   NumDealsPurchases ,
1254762   +   NumDistPurchases ,
1254763   +   NumStorePurchases ,
1254764   +   NumWebPurchases ,
1254765   +   NumWebVisitsMonth ,
1254766   +   RFMstat ,
1254767   +   RMntFrq ,
1254768   +   Recency ,
1254769   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
1254770   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1254771   +
1254772   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1254773   +END;
MPRINT(EM_DIAGRAM):   END;
1254774   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1254775   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
1254776   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1254777   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1254778   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1254779   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1254780   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1254781   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1254782   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1254783   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1254784   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1254785   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1254786   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1254787   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1254788   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1254789   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1254790   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1254791   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1254792   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1254793   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1254794   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1254795   +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
1254796   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 *
MonthsAsCustomer ;
1254797   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1254798   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1254799   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1254800   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1254801   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1254802   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1254803   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1254804   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1254805   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1254806   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1254807   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1254808   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1254809   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1254810   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1254811   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1254812   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1254813   +END;
MPRINT(EM_DIAGRAM):   END;
1254814   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1254815   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1254816   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1254817   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1254818   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1254819   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1254820   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1254821   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1254822   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1254823   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1254824   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1254825   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1254826   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1254827   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1254828   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1254829   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1254830   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1254831   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1254832   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1254833   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1254834   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1254835   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1254836   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1254837   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1254838   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1254839   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1254840   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1254841   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1254842   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1254843   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1254844   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1254845   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1254846   +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
1254847   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 *
MonthsAsCustomer ;
1254848   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1254849   +   ELSE S_NumCatalogPurchases
1254850   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1254851   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1254852   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1254853   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1254854   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1254855   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1254856   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1254857   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1254858   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1254859   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1254860   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1254861   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1254862   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1254863   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1254864   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1254865   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1254866   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1254867   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1254868   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1254869   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1254870   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1254871   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1254872   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1254873   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1254874   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1254875   +END;
MPRINT(EM_DIAGRAM):   END;
1254876   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1254877   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
1254878   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1254879   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1254880   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
1254881   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1254882   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1254883   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
1254884   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1254885   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1254886   +   H1x1_1  =     0.26227897937716 * S_AcceptedCmpTotal
1254887   +          +     -0.0155758157867 * S_Age  +    -0.20268934440257 * S_Frq
1254888   +          +    -0.18529976542103 * S_Income  +     0.18038928903961 *
1254889   +        S_Kidhome  +    -0.28961354349068 * S_Mnt  +    -0.05151010840858 *
1254890   +        S_MntFishProducts  +    -0.03759341636928 * S_MntFruits
1254891   +          +     0.01305575717465 * S_MntGoldProds  +     0.24307680778257 *
1254892   +        S_MntMeatProducts  +    -0.02893363709307 * S_MntSweetProducts
1254893   +          +    -0.35324697751403 * S_MntWines  +    -0.00781254837323 *
1254894   +        S_MonthsAsCustomer  +     0.15222992290422 * S_NumCatalogPurchases
1254895   +          +     0.09708841024031 * S_NumDealsPurchases
1254896   +          +    -0.29075561032014 * S_NumDistPurchases
1254897   +          +    -0.14495394259873 * S_NumStorePurchases
1254898   +          +     0.11890705145732 * S_NumWebPurchases
1254899   +          +    -0.16954189911344 * S_NumWebVisitsMonth
1254900   +          +     0.12377939462638 * S_RFMstat  +    -0.05870604523801 *
1254901   +        S_RMntFrq  +     0.17150719398884 * S_Recency
1254902   +          +     0.13642607109645 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.26227897937716 * S_AcceptedCmpTotal + -0.0155758157867 *
S_Age + -0.20268934440257 * S_Frq + -0.18529976542103 * S_Income + 0.18038928903961 *
S_Kidhome + -0.28961354349068 * S_Mnt + -0.05151010840858 * S_MntFishProducts +
-0.03759341636928 * S_MntFruits + 0.01305575717465 * S_MntGoldProds + 0.24307680778257 *
S_MntMeatProducts + -0.02893363709307 * S_MntSweetProducts + -0.35324697751403 * S_MntWines +
-0.00781254837323 * S_MonthsAsCustomer + 0.15222992290422 * S_NumCatalogPurchases +
0.09708841024031 * S_NumDealsPurchases + -0.29075561032014 * S_NumDistPurchases +
-0.14495394259873 * S_NumStorePurchases + 0.11890705145732 * S_NumWebPurchases +
-0.16954189911344 * S_NumWebVisitsMonth + 0.12377939462638 * S_RFMstat + -0.05870604523801 *
S_RMntFrq + 0.17150719398884 * S_Recency + 0.13642607109645 * S_Teenhome ;
1254903   +   H1x1_2  =     0.26173967942961 * S_AcceptedCmpTotal
1254904   +          +    -0.00424968908882 * S_Age  +    -0.07102902276221 * S_Frq
1254905   +          +     0.17373040625452 * S_Income  +    -0.12612693849717 *
1254906   +        S_Kidhome  +    -0.40114393645566 * S_Mnt  +    -0.06800009910731 *
1254907   +        S_MntFishProducts  +    -0.06681994193124 * S_MntFruits
1254908   +          +     0.00602505287702 * S_MntGoldProds  +     0.29533767747106 *
1254909   +        S_MntMeatProducts  +    -0.06832235425976 * S_MntSweetProducts
1254910   +          +    -0.44970327281811 * S_MntWines  +    -0.01061648191158 *
1254911   +        S_MonthsAsCustomer  +      0.3402332775449 * S_NumCatalogPurchases
1254912   +          +     0.16274478997892 * S_NumDealsPurchases
1254913   +          +     0.03966958784582 * S_NumDistPurchases
1254914   +          +    -0.04714110726598 * S_NumStorePurchases
1254915   +          +    -0.02124229528082 * S_NumWebPurchases
1254916   +          +     0.29753299776832 * S_NumWebVisitsMonth
1254917   +          +     0.08114418100212 * S_RFMstat  +     0.39051989081881 *
1254918   +        S_RMntFrq  +     -0.3340129986623 * S_Recency
1254919   +          +    -0.11108871458308 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.26173967942961 * S_AcceptedCmpTotal + -0.00424968908882 *
S_Age + -0.07102902276221 * S_Frq + 0.17373040625452 * S_Income + -0.12612693849717 *
S_Kidhome + -0.40114393645566 * S_Mnt + -0.06800009910731 * S_MntFishProducts +
-0.06681994193124 * S_MntFruits + 0.00602505287702 * S_MntGoldProds + 0.29533767747106 *
S_MntMeatProducts + -0.06832235425976 * S_MntSweetProducts + -0.44970327281811 * S_MntWines +
-0.01061648191158 * S_MonthsAsCustomer + 0.3402332775449 * S_NumCatalogPurchases +
0.16274478997892 * S_NumDealsPurchases + 0.03966958784582 * S_NumDistPurchases +
-0.04714110726598 * S_NumStorePurchases + -0.02124229528082 * S_NumWebPurchases +
0.29753299776832 * S_NumWebVisitsMonth + 0.08114418100212 * S_RFMstat + 0.39051989081881 *
S_RMntFrq + -0.3340129986623 * S_Recency + -0.11108871458308 * S_Teenhome ;
1254920   +   H1x1_1  = H1x1_1  +      0.1756873442571 * AcceptedCmp10
1254921   +          +     0.31180024044306 * AcceptedCmp20  +     0.29619883713337 *
1254922   +        AcceptedCmp30  +     0.30154500722412 * AcceptedCmp40
1254923   +          +     0.19297823461379 * AcceptedCmp50  +     -0.2612666063344 *
1254924   +        Complain0  +    -0.07979877068908 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.1756873442571 * AcceptedCmp10 + 0.31180024044306 *
AcceptedCmp20 + 0.29619883713337 * AcceptedCmp30 + 0.30154500722412 * AcceptedCmp40 +
0.19297823461379 * AcceptedCmp50 + -0.2612666063344 * Complain0 + -0.07979877068908 *
HigherEducationBinary0 ;
1254925   +   H1x1_2  = H1x1_2  +      0.0093987850789 * AcceptedCmp10
1254926   +          +     0.01121417299451 * AcceptedCmp20  +     0.02978720081114 *
1254927   +        AcceptedCmp30  +     0.03675035164823 * AcceptedCmp40
1254928   +          +      0.0326403700043 * AcceptedCmp50  +     0.12620299225555 *
1254929   +        Complain0  +    -0.08132205666396 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.0093987850789 * AcceptedCmp10 + 0.01121417299451 *
AcceptedCmp20 + 0.02978720081114 * AcceptedCmp30 + 0.03675035164823 * AcceptedCmp40 +
0.0326403700043 * AcceptedCmp50 + 0.12620299225555 * Complain0 + -0.08132205666396 *
HigherEducationBinary0 ;
1254930   +   H1x1_1  = H1x1_1  +    -0.03360721558666 * Education2n_Cycle
1254931   +          +     0.15032252273168 * EducationBasic  +    -0.00292639237041 *
1254932   +        EducationGraduation  +     0.00619669837452 * EducationMaster
1254933   +          +    -0.05037639679806 * Marital_StatusDivorced
1254934   +          +     0.28781968727878 * Marital_StatusMarried
1254935   +          +    -0.20382417074384 * Marital_StatusSingle
1254936   +          +     0.20088888064707 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.03360721558666 * Education2n_Cycle +
0.15032252273168 * EducationBasic + -0.00292639237041 * EducationGraduation + 0.00619669837452
* EducationMaster + -0.05037639679806 * Marital_StatusDivorced + 0.28781968727878 *
Marital_StatusMarried + -0.20382417074384 * Marital_StatusSingle + 0.20088888064707 *
Marital_StatusTogether ;
1254937   +   H1x1_2  = H1x1_2  +     0.12543856607452 * Education2n_Cycle
1254938   +          +      0.0095562801112 * EducationBasic  +    -0.04438983662274 *
1254939   +        EducationGraduation  +    -0.06952670554019 * EducationMaster
1254940   +          +     0.06970969219123 * Marital_StatusDivorced
1254941   +          +    -0.15787475744986 * Marital_StatusMarried
1254942   +          +     0.14345344072192 * Marital_StatusSingle
1254943   +          +    -0.12758942067533 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.12543856607452 * Education2n_Cycle + 0.0095562801112
* EducationBasic + -0.04438983662274 * EducationGraduation + -0.06952670554019 *
EducationMaster + 0.06970969219123 * Marital_StatusDivorced + -0.15787475744986 *
Marital_StatusMarried + 0.14345344072192 * Marital_StatusSingle + -0.12758942067533 *
Marital_StatusTogether ;
1254944   +   H1x1_1  =     0.90517220350758 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.90517220350758 + H1x1_1 ;
1254945   +   H1x1_2  =    -0.60383186342134 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.60383186342134 + H1x1_2 ;
1254946   +   H1x1_1  = SIN(H1x1_1 );
MPRINT(EM_DIAGRAM):   H1x1_1 = SIN(H1x1_1 );
1254947   +   H1x1_2  = SIN(H1x1_2 );
MPRINT(EM_DIAGRAM):   H1x1_2 = SIN(H1x1_2 );
1254948   +END;
MPRINT(EM_DIAGRAM):   END;
1254949   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1254950   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
1254951   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
1254952   +END;
MPRINT(EM_DIAGRAM):   END;
1254953   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1254954   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1254955   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1254956   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1254957   +   P_DepVar1  =     -11.151440981908 * H1x1_1  +     16.6040498320868 * H1x1_2
1254958   +         ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -11.151440981908 * H1x1_1 + 16.6040498320868 * H1x1_2 ;
1254959   +   P_DepVar1  =     2.38025141404985 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.38025141404985 + P_DepVar1 ;
1254960   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1254961   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1254962   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1254963   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1254964   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1254965   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1254966   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1254967   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1254968   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1254969   +END;
MPRINT(EM_DIAGRAM):   END;
1254970   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1254971   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1254972   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1254973   +END;
MPRINT(EM_DIAGRAM):   END;
1254974   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1254975   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1254976   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1254977   +END;
MPRINT(EM_DIAGRAM):   END;
1254978   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1254979   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1254980   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1254981   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1254982   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1254983   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1254984   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1254985   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1254986   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1254987   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1254988   +END;
MPRINT(EM_DIAGRAM):   END;
1254989   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1254990   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1254991   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1254992   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1254993    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1254994    quit;
1254995    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1254996    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1254997    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1254998    retain ID 2 Node "AutoNeural7";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural7";
1254999    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1255000    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2180 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2180 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1255001    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1255002    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1255003    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2180 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2180 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1255004    proc sort data=EMWS8.AutoNeural7_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural7_variableset out=_temp2(keep=NAME
CREATOR);
1255005    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1255006    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL7_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1255007    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1255008    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1255009    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1255010    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1255011    proc contents data=EMWS8.AutoNeural7_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural7_train out=_meta(keep=NAME) noprint;
1255012    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 55 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
1255013    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1255014    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1255015    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 55 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 55 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1255016    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1255017    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1255018    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1255019    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 55 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 55 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1255020    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1255021    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1255021  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1359 rows and 5 columns.
 
1255022    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1255023    proc append base=EMWS8.Ensmbl46_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl46_FCMP data=_tempx;
1255024    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL46_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1359 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL46_FCMP has 1359 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1255025    filename _pref
1255025  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1255026    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1255027    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1255028   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1255029   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1255030   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1255031   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1255032   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1255033   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1255034    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1255035    quit;
1255036    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1255037    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1255038    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1255039    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1255040    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1255041    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1255042    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1255043    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1255044    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1255045    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1255046    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1255047    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1255048    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1255049    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1255050    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1255051    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1255052    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1255053    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
1255054    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1255055    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1255056    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1255057    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1255058    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1255059    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1255060    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1255061    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1255062    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1255062  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
1255063    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1255064    proc append base=EMWS8.Ensmbl46_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl46_FCMP data=_tempx;
1255065    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL46_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL46_FCMP has 1363 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1255066    filename _pref
1255066  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1255067    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1255068    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1255069   +
1255070   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1255071   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1255071  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1255072   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1255073   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1255074   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1255075   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1255076   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1255077    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1255078    quit;
1255079    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1255080    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1255081    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1255082    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1255083    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1255084    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1255085    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1255086    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1255087    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1255088    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1255089    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1255090    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1255091    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1255092    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1255093    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1255094    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1255095    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1255096    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1255097    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1255098    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1255099    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1255100    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1255101    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1255102    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1255103    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
1255104    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1255105    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1255105  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
1255106    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1255107    proc append base=EMWS8.Ensmbl46_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl46_FCMP data=_tempx;
1255108    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL46_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL46_FCMP has 1402 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1255109    filename _pref
1255109  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1255110    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1255111    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1255112   +
1255113   +
1255114   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1255115   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1255116   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1255117   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1255118   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1255119   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1255120   +
1255121   +
1255122   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1255123   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1255124   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1255125   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1255126   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1255127   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1255128   +
1255129   +
1255130   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1255131   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1255132   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1255133   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1255134   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1255135   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1255136   +
1255137   +
1255138   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1255139   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1255140   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1255141   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1255142   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1255143   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1255144   +
1255145   +
1255146   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1255147   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1255148   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1255149   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1255150   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1255151   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1255152   +
1255153   +
1255154   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1255155   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1255156   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1255157   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1255158   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1255159   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1255160   +
1255161   +
1255162   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1255163   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1255164   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1255165   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1255166   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1255167   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1255168   +
1255169   +
1255170   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1255171   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1255172   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1255173   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1255174   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1255175   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1255176   +if
1255177   +_FILTERNORM1 not in ( '.')
1255178   + and
1255179   +_FILTERNORM2 not in ( '.')
1255180   + and
1255181   +_FILTERNORM3 not in ( '.')
1255182   + and
1255183   +_FILTERNORM4 not in ( '.')
1255184   + and
1255185   +_FILTERNORM5 not in ( '.')
1255186   + and
1255187   +_FILTERNORM6 not in ( '.')
1255188   + and
1255189   +_FILTERNORM7 not in ( ' ')
1255190   + and
1255191   +_FILTERNORM8 not in ( ' ')
1255192   +and
1255193   +( Dt_Customer ne .)
1255194   +and ( Income ne . and (Income<=107000))
1255195   +and ( Kidhome ne .)
1255196   +and ( MntFishProducts ne .)
1255197   +and ( MntFruits ne .)
1255198   +and ( MntGoldProds ne .)
1255199   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1255200   +and ( MntSweetProducts ne .)
1255201   +and ( MntWines ne .)
1255202   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1255203   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1255204   +and ( NumStorePurchases ne .)
1255205   +and ( NumWebPurchases ne .)
1255206   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1255207   +and ( Recency ne .)
1255208   +and ( Teenhome ne .)
1255209   +and ( Year_Birth ne .)
1255210   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
1255211   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1255212   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1255213   +end;
MPRINT(EM_DIAGRAM):   end;
1255214   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1255215   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1255216    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1255217    quit;
1255218    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1255219    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1255220    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1255221    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1255222    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1255223    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1255224    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1255225    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1255226    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1255227    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1255228    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1255229    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1255230    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1255231    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1255232    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1255233    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1255234    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1255235    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
1255236    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1255237    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1255238    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1255239    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1255240    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1255241    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1255242    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1255243    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1255244    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1255244  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
1255245    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1255246    proc append base=EMWS8.Ensmbl46_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl46_FCMP data=_tempx;
1255247    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL46_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL46_FCMP has 1468 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1255248    %macro varDept(fcmpdata=,id=);
1255249    %global nobs&id scoreFlag&id;
1255250    %let scoreFlag&id = 0;
1255251    %if &id=1 or ^&fcmpStart %then %do;
1255252    proc sort data=&fcmpdata out=_temp&id nodupkey;
1255253    by NAME;
1255254    where id=&id and LHS in( %let j=1;
1255255    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1255256    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1255257    "&var" %let j = %eval(&j+1);
1255258    %end;
1255259    );
1255260    run;
1255261    %let dsid = %sysfunc(open(_temp&id));
1255262    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1255263    %let dsid = %sysfunc(close(&dsid));
1255264    %if &&nobs&id %then %do;
1255265    %let scoreFlag&id = 1;
1255266    %let fcmpStart = 1;
1255267    %end;
1255268    %else %let fcmpStart = 0;
1255269    %end;
1255270    %else %do;
1255271    proc sort data=&fcmpdata out=_tempid;
1255272    where id=&id;
1255273    by LHS;
1255274    run;
1255275    %let dsid = %sysfunc(open(_tempid));
1255276    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1255277    %let dsid = %sysfunc(close(&dsid));
1255278    %if ^&&nobs&id %then %do;
1255279    proc datasets lib=work nolist;
1255280    delete _tempid;
1255281    run;
1255282    quit;
1255283    %end;
1255284    %else %do;
1255285    data _tempAll;
1255286    set %let j=%eval(&id-1);
1255287    %do x=1 %to &j;
1255288    %if &&nobs&x %then %do;
1255289    _temp&x %end;
1255290    %end;
1255291    ;
1255292    run;
1255293    proc sql;
1255294    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1255294  ! work._tempid p2 where p.name=p2.lhs;
1255295    quit;
1255296    data _temp&id;
1255297    set _temp&id;
1255298    where LHS ne '' and NAME ne '' and Node ne '';
1255299    run;
1255300    proc datasets lib=work nolist;
1255301    delete _tempAll;
1255302    run;
1255303    %let dsid = %sysfunc(open(_temp&id));
1255304    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1255305    %let dsid = %sysfunc(close(&dsid));
1255306    %if ^&&nobs&id %then %do;
1255307    proc datasets lib=work nolist;
1255308    delete _temp&id;
1255309    run;
1255310    quit;
1255311    %end;
1255312    %else %do;
1255313    %let scoreFlag&id = 1;
1255314    data _temp&id;
1255315    set _temp&id;
1255316    where LHS ne NAME and node ne '';
1255317    run;
1255318    %let dsid = %sysfunc(open(_temp&id));
1255319    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1255320    %let dsid = %sysfunc(close(&dsid));
1255321    %if ^&&nobs&id %then %do;
1255322    proc datasets lib=work nolist;
1255323    delete _temp&id;
1255324    run;
1255325    quit;
1255326    %end;
1255327    %else %do;
1255328    proc sort data=_temp&id nodupkey;
1255329    by LHS NAME;
1255330    run;
1255331    %end;
1255332    %end;
1255333    %end;
1255334    %end;
1255335    %mend varDept;
1255336    %macro optCode(outdata=fcmpdata);
1255337    %global fcmpStart;
1255338    %let fcmpStart = 0;
1255339    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1255340    %let NumNodes=9;
1255341    %do k=1 %to &NumNodes;
1255342    %vardept(fcmpdata=&outdata, id=&k);
1255343    %end;
1255344    %mend optCode;
1255345    %optcode(outData=EMWS8.Ensmbl46_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl46_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL46_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl46_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 140 observations read from the data set EMWS8.ENSMBL46_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 104 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 36 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl46_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL46_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl46_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL46_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl46_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL46_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 36 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 36 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl46_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL46_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 36 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 40 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl46_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL46_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 36 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 79 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl46_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL46_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl46_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL46_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
1255346    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1255347    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1255348    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1255349    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1255350    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1255351    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1255352    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1255353    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1255354    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1255355    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
1255355  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.
 
1255356    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1255357    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
1255358    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
1255359    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1255360    filename _pref
1255360  ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural12\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural12\EMPUBLISHSCORE.sas";
1255361    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1255362    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural12\EMPUBLISHSCORE.sas.
1255363   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1255364   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1255365   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1255366   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1255367   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1255368   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1255369   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1255370   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1255371   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1255372   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1255373   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1255374   +LENGTH _WARN_ $4
1255375   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
1255376   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1255377   +
1255378   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1255379   +
1255380   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1255381   +
1255382   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1255383   +
1255384   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1255385   +
1255386   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1255387   +
1255388   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1255389   +
1255390   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1255391   +
1255392   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1255393   +
1255394   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1255395   +
1255396   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1255397   +
1255398   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1255399   +
1255400   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1255401   +
1255402   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1255403   +
1255404   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1255405   +
1255406   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1255407   +
1255408   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1255409   +
1255410   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1255411   +
1255412   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1255413   +
1255414   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1255415   +
1255416   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1255417   +
1255418   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1255419   +
1255420   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1255421   +
1255422   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1255423   +
1255424   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1255425   +
1255426   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1255427   +
1255428   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1255429   +
1255430   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1255431   +
1255432   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1255433   +
1255434   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1255435   +
1255436   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1255437   +
1255438   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1255439   +
1255440   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1255441   +
1255442   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1255443   +
1255444   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1255445   +
1255446   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1255447   +
1255448   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1255449   +
1255450   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1255451   +
1255452   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
1255453   +
1255454   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
1255455   +
1255456   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
1255457   +
1255458   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
1255459   +
1255460   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
1255461   +
1255462   +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
1255463   +
1255464   +      label H1x1_7 = 'Hidden: H1x1_=7' ;
MPRINT(EM_DIAGRAM):   label H1x1_7 = 'Hidden: H1x1_=7' ;
1255465   +
1255466   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
1255467   +
1255468   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
1255469   +
1255470   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
1255471   +
1255472   +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
1255473   +
1255474   +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
1255475   +
1255476   +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
1255477   +
1255478   +      label H1x2_7 = 'Hidden: H1x2_=7' ;
MPRINT(EM_DIAGRAM):   label H1x2_7 = 'Hidden: H1x2_=7' ;
1255479   +
1255480   +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
1255481   +
1255482   +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
1255483   +
1255484   +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
1255485   +
1255486   +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
1255487   +
1255488   +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
1255489   +
1255490   +      label H2x1_6 = 'Hidden: H2x1_=6' ;
MPRINT(EM_DIAGRAM):   label H2x1_6 = 'Hidden: H2x1_=6' ;
1255491   +
1255492   +      label H2x1_7 = 'Hidden: H2x1_=7' ;
MPRINT(EM_DIAGRAM):   label H2x1_7 = 'Hidden: H2x1_=7' ;
1255493   +
1255494   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1255495   +
1255496   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1255497   +
1255498   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1255499   +
1255500   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1255501   +
1255502   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1255503   +
1255504   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1255505   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1255506   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1255507   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1255508   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1255509   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1255510   +end;
MPRINT(EM_DIAGRAM):   end;
1255511   +else do;
MPRINT(EM_DIAGRAM):   else do;
1255512   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1255513   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1255514   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1255515   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1255516   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1255517   +   end;
MPRINT(EM_DIAGRAM):   end;
1255518   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1255519   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1255520   +   end;
MPRINT(EM_DIAGRAM):   end;
1255521   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1255522   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1255523   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1255524   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1255525   +   end;
MPRINT(EM_DIAGRAM):   end;
1255526   +end;
MPRINT(EM_DIAGRAM):   end;
1255527   +
1255528   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1255529   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1255530   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1255531   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1255532   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1255533   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1255534   +end;
MPRINT(EM_DIAGRAM):   end;
1255535   +else do;
MPRINT(EM_DIAGRAM):   else do;
1255536   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1255537   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1255538   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1255539   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1255540   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1255541   +   end;
MPRINT(EM_DIAGRAM):   end;
1255542   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1255543   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1255544   +   end;
MPRINT(EM_DIAGRAM):   end;
1255545   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1255546   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1255547   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1255548   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1255549   +   end;
MPRINT(EM_DIAGRAM):   end;
1255550   +end;
MPRINT(EM_DIAGRAM):   end;
1255551   +
1255552   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1255553   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1255554   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1255555   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1255556   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1255557   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1255558   +end;
MPRINT(EM_DIAGRAM):   end;
1255559   +else do;
MPRINT(EM_DIAGRAM):   else do;
1255560   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1255561   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1255562   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1255563   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1255564   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1255565   +   end;
MPRINT(EM_DIAGRAM):   end;
1255566   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1255567   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1255568   +   end;
MPRINT(EM_DIAGRAM):   end;
1255569   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1255570   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1255571   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1255572   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1255573   +   end;
MPRINT(EM_DIAGRAM):   end;
1255574   +end;
MPRINT(EM_DIAGRAM):   end;
1255575   +
1255576   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1255577   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1255578   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1255579   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1255580   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1255581   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1255582   +end;
MPRINT(EM_DIAGRAM):   end;
1255583   +else do;
MPRINT(EM_DIAGRAM):   else do;
1255584   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1255585   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1255586   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1255587   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1255588   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1255589   +   end;
MPRINT(EM_DIAGRAM):   end;
1255590   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1255591   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1255592   +   end;
MPRINT(EM_DIAGRAM):   end;
1255593   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1255594   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1255595   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1255596   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1255597   +   end;
MPRINT(EM_DIAGRAM):   end;
1255598   +end;
MPRINT(EM_DIAGRAM):   end;
1255599   +
1255600   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1255601   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1255602   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1255603   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1255604   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1255605   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1255606   +end;
MPRINT(EM_DIAGRAM):   end;
1255607   +else do;
MPRINT(EM_DIAGRAM):   else do;
1255608   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1255609   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1255610   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1255611   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1255612   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1255613   +   end;
MPRINT(EM_DIAGRAM):   end;
1255614   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1255615   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1255616   +   end;
MPRINT(EM_DIAGRAM):   end;
1255617   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1255618   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1255619   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1255620   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1255621   +   end;
MPRINT(EM_DIAGRAM):   end;
1255622   +end;
MPRINT(EM_DIAGRAM):   end;
1255623   +
1255624   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1255625   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1255626   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1255627   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1255628   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1255629   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1255630   +end;
MPRINT(EM_DIAGRAM):   end;
1255631   +else do;
MPRINT(EM_DIAGRAM):   else do;
1255632   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1255633   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1255634   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1255635   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1255636   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1255637   +   end;
MPRINT(EM_DIAGRAM):   end;
1255638   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1255639   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1255640   +   end;
MPRINT(EM_DIAGRAM):   end;
1255641   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1255642   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1255643   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1255644   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1255645   +   end;
MPRINT(EM_DIAGRAM):   end;
1255646   +end;
MPRINT(EM_DIAGRAM):   end;
1255647   +
1255648   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1255649   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1255650   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1255651   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1255652   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1255653   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1255654   +end;
MPRINT(EM_DIAGRAM):   end;
1255655   +else do;
MPRINT(EM_DIAGRAM):   else do;
1255656   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1255657   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1255658   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1255659   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1255660   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1255661   +   end;
MPRINT(EM_DIAGRAM):   end;
1255662   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1255663   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1255664   +   end;
MPRINT(EM_DIAGRAM):   end;
1255665   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1255666   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1255667   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1255668   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1255669   +   end;
MPRINT(EM_DIAGRAM):   end;
1255670   +end;
MPRINT(EM_DIAGRAM):   end;
1255671   +
1255672   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1255673   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
1255674   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1255675   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1255676   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1255677   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1255678   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1255679   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1255680   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1255681   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1255682   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1255683   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1255684   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1255685   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1255686   +end;
MPRINT(EM_DIAGRAM):   end;
1255687   +else do;
MPRINT(EM_DIAGRAM):   else do;
1255688   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1255689   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1255690   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1255691   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1255692   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1255693   +   end;
MPRINT(EM_DIAGRAM):   end;
1255694   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1255695   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1255696   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1255697   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1255698   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1255699   +   end;
MPRINT(EM_DIAGRAM):   end;
1255700   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1255701   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1255702   +   end;
MPRINT(EM_DIAGRAM):   end;
1255703   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1255704   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1255705   +   end;
MPRINT(EM_DIAGRAM):   end;
1255706   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1255707   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1255708   +   end;
MPRINT(EM_DIAGRAM):   end;
1255709   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1255710   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1255711   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1255712   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1255713   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1255714   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1255715   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1255716   +   end;
MPRINT(EM_DIAGRAM):   end;
1255717   +end;
MPRINT(EM_DIAGRAM):   end;
1255718   +
1255719   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1255720   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1255721   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
1255722   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1255723   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1255724   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1255725   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1255726   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1255727   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1255728   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1255729   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1255730   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1255731   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1255732   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1255733   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1255734   +end;
MPRINT(EM_DIAGRAM):   end;
1255735   +else do;
MPRINT(EM_DIAGRAM):   else do;
1255736   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1255737   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1255738   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1255739   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1255740   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1255741   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1255742   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1255743   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1255744   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1255745   +         end;
MPRINT(EM_DIAGRAM):   end;
1255746   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1255747   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1255748   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1255749   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1255750   +            end;
MPRINT(EM_DIAGRAM):   end;
1255751   +         end;
MPRINT(EM_DIAGRAM):   end;
1255752   +      end;
MPRINT(EM_DIAGRAM):   end;
1255753   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1255754   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1255755   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1255756   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1255757   +         end;
MPRINT(EM_DIAGRAM):   end;
1255758   +      end;
MPRINT(EM_DIAGRAM):   end;
1255759   +   end;
MPRINT(EM_DIAGRAM):   end;
1255760   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1255761   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1255762   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1255763   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1255764   +      end;
MPRINT(EM_DIAGRAM):   end;
1255765   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1255766   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1255767   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1255768   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1255769   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1255770   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1255771   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1255772   +         end;
MPRINT(EM_DIAGRAM):   end;
1255773   +      end;
MPRINT(EM_DIAGRAM):   end;
1255774   +   end;
MPRINT(EM_DIAGRAM):   end;
1255775   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1255776   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1255777   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1255778   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1255779   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1255780   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1255781   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1255782   +   end;
MPRINT(EM_DIAGRAM):   end;
1255783   +end;
MPRINT(EM_DIAGRAM):   end;
1255784   +
1255785   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1255786   +*** Checking missing input Interval
1255787   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1255788   +
1255789   +IF NMISS(
1255790   +   AcceptedCmpTotal ,
1255791   +   Age ,
1255792   +   Frq ,
1255793   +   Income ,
1255794   +   Kidhome ,
1255795   +   Mnt ,
1255796   +   MntFishProducts ,
1255797   +   MntFruits ,
1255798   +   MntGoldProds ,
1255799   +   MntMeatProducts ,
1255800   +   MntSweetProducts ,
1255801   +   MntWines ,
1255802   +   MonthsAsCustomer ,
1255803   +   NumCatalogPurchases ,
1255804   +   NumDealsPurchases ,
1255805   +   NumDistPurchases ,
1255806   +   NumStorePurchases ,
1255807   +   NumWebPurchases ,
1255808   +   NumWebVisitsMonth ,
1255809   +   RFMstat ,
1255810   +   RMntFrq ,
1255811   +   Recency ,
1255812   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
1255813   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1255814   +
1255815   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1255816   +END;
MPRINT(EM_DIAGRAM):   END;
1255817   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1255818   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
1255819   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1255820   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1255821   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1255822   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1255823   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1255824   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1255825   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1255826   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1255827   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1255828   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1255829   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1255830   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1255831   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1255832   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1255833   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1255834   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1255835   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1255836   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1255837   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1255838   +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
1255839   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 *
MonthsAsCustomer ;
1255840   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1255841   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1255842   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1255843   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1255844   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1255845   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1255846   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1255847   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1255848   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1255849   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1255850   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1255851   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1255852   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1255853   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1255854   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1255855   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1255856   +END;
MPRINT(EM_DIAGRAM):   END;
1255857   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1255858   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1255859   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1255860   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1255861   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1255862   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1255863   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1255864   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1255865   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1255866   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1255867   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1255868   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1255869   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1255870   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1255871   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1255872   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1255873   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1255874   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1255875   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1255876   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1255877   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1255878   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1255879   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1255880   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1255881   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1255882   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1255883   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1255884   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1255885   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1255886   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1255887   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1255888   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1255889   +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
1255890   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 *
MonthsAsCustomer ;
1255891   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1255892   +   ELSE S_NumCatalogPurchases
1255893   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1255894   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1255895   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1255896   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1255897   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1255898   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1255899   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1255900   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1255901   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1255902   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1255903   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1255904   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1255905   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1255906   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1255907   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1255908   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1255909   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1255910   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1255911   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1255912   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1255913   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1255914   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1255915   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1255916   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1255917   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1255918   +END;
MPRINT(EM_DIAGRAM):   END;
1255919   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1255920   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
1255921   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1255922   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1255923   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
1255924   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1255925   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1255926   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
1255927   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1255928   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1255929   +   H1x1_1  =     0.63316204656896 * S_AcceptedCmpTotal
1255930   +          +    -0.24884200883415 * S_Age  +      -0.236584005151 * S_Frq
1255931   +          +     0.25406117591995 * S_Income  +    -0.56304122955704 *
1255932   +        S_Kidhome  +    -0.23687782938793 * S_Mnt  +    -0.09770906650074 *
1255933   +        S_MntFishProducts  +    -0.73487360819716 * S_MntFruits
1255934   +          +     0.14293909908147 * S_MntGoldProds  +     2.25015000307426 *
1255935   +        S_MntMeatProducts  +    -0.42178958150661 * S_MntSweetProducts
1255936   +          +    -2.35340366839307 * S_MntWines  +    -0.02380265380154 *
1255937   +        S_MonthsAsCustomer  +     1.16509321438746 * S_NumCatalogPurchases
1255938   +          +     1.17276395296242 * S_NumDealsPurchases
1255939   +          +     0.26632768295477 * S_NumDistPurchases
1255940   +          +    -1.26575615903579 * S_NumStorePurchases
1255941   +          +    -0.95316107557927 * S_NumWebPurchases
1255942   +          +     1.01828574356487 * S_NumWebVisitsMonth
1255943   +          +       0.795866263515 * S_RFMstat  +    -0.20490378142832 *
1255944   +        S_RMntFrq  +    -0.82943281422857 * S_Recency
1255945   +          +     0.16132418388418 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.63316204656896 * S_AcceptedCmpTotal + -0.24884200883415 *
S_Age + -0.236584005151 * S_Frq + 0.25406117591995 * S_Income + -0.56304122955704 * S_Kidhome
+ -0.23687782938793 * S_Mnt + -0.09770906650074 * S_MntFishProducts + -0.73487360819716 *
S_MntFruits + 0.14293909908147 * S_MntGoldProds + 2.25015000307426 * S_MntMeatProducts +
-0.42178958150661 * S_MntSweetProducts + -2.35340366839307 * S_MntWines + -0.02380265380154 *
S_MonthsAsCustomer + 1.16509321438746 * S_NumCatalogPurchases + 1.17276395296242 *
S_NumDealsPurchases + 0.26632768295477 * S_NumDistPurchases + -1.26575615903579 *
S_NumStorePurchases + -0.95316107557927 * S_NumWebPurchases + 1.01828574356487 *
S_NumWebVisitsMonth + 0.795866263515 * S_RFMstat + -0.20490378142832 * S_RMntFrq +
-0.82943281422857 * S_Recency + 0.16132418388418 * S_Teenhome ;
1255946   +   H1x1_2  =    -0.43482920479481 * S_AcceptedCmpTotal
1255947   +          +     0.53350211221915 * S_Age  +    -0.06797700766223 * S_Frq
1255948   +          +     0.13771322007949 * S_Income  +     0.87012019559698 *
1255949   +        S_Kidhome  +     0.06026853274247 * S_Mnt  +    -0.43150595882972 *
1255950   +        S_MntFishProducts  +    -0.13728591661063 * S_MntFruits
1255951   +          +     0.35443873962923 * S_MntGoldProds  +     0.28102965401547 *
1255952   +        S_MntMeatProducts  +     0.52367949052365 * S_MntSweetProducts
1255953   +          +     0.35553595364078 * S_MntWines  +     0.37892120128383 *
1255954   +        S_MonthsAsCustomer  +     0.59057645965187 * S_NumCatalogPurchases
1255955   +          +     1.14485571201233 * S_NumDealsPurchases
1255956   +          +     0.21414266588987 * S_NumDistPurchases
1255957   +          +    -0.10530090074297 * S_NumStorePurchases
1255958   +          +    -0.41712321238458 * S_NumWebPurchases
1255959   +          +    -0.99760766791108 * S_NumWebVisitsMonth
1255960   +          +    -0.90203265666387 * S_RFMstat  +    -0.60947922673601 *
1255961   +        S_RMntFrq  +     1.10040128548883 * S_Recency
1255962   +          +     0.16728431679949 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.43482920479481 * S_AcceptedCmpTotal + 0.53350211221915 *
S_Age + -0.06797700766223 * S_Frq + 0.13771322007949 * S_Income + 0.87012019559698 * S_Kidhome
+ 0.06026853274247 * S_Mnt + -0.43150595882972 * S_MntFishProducts + -0.13728591661063 *
S_MntFruits + 0.35443873962923 * S_MntGoldProds + 0.28102965401547 * S_MntMeatProducts +
0.52367949052365 * S_MntSweetProducts + 0.35553595364078 * S_MntWines + 0.37892120128383 *
S_MonthsAsCustomer + 0.59057645965187 * S_NumCatalogPurchases + 1.14485571201233 *
S_NumDealsPurchases + 0.21414266588987 * S_NumDistPurchases + -0.10530090074297 *
S_NumStorePurchases + -0.41712321238458 * S_NumWebPurchases + -0.99760766791108 *
S_NumWebVisitsMonth + -0.90203265666387 * S_RFMstat + -0.60947922673601 * S_RMntFrq +
1.10040128548883 * S_Recency + 0.16728431679949 * S_Teenhome ;
1255963   +   H1x1_3  =     0.26373486938499 * S_AcceptedCmpTotal
1255964   +          +    -0.22246756314756 * S_Age  +     0.49537720979115 * S_Frq
1255965   +          +     1.38815981786544 * S_Income  +    -0.93015968695331 *
1255966   +        S_Kidhome  +     0.11586216615481 * S_Mnt  +    -0.02105973515345 *
1255967   +        S_MntFishProducts  +    -0.28078442249811 * S_MntFruits
1255968   +          +    -0.01763878655129 * S_MntGoldProds  +     0.83934619541231 *
1255969   +        S_MntMeatProducts  +    -0.23417310915433 * S_MntSweetProducts
1255970   +          +    -0.29135819585991 * S_MntWines  +    -0.20792872642036 *
1255971   +        S_MonthsAsCustomer  +     1.05218745810839 * S_NumCatalogPurchases
1255972   +          +      0.7196418967437 * S_NumDealsPurchases
1255973   +          +     0.69035286374177 * S_NumDistPurchases
1255974   +          +     0.38027656631135 * S_NumStorePurchases
1255975   +          +    -0.18878358997924 * S_NumWebPurchases
1255976   +          +     1.61962062004798 * S_NumWebVisitsMonth
1255977   +          +    -0.04575386719745 * S_RFMstat  +     1.16358450490635 *
1255978   +        S_RMntFrq  +    -2.13821542142822 * S_Recency
1255979   +          +    -1.28960355207697 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.26373486938499 * S_AcceptedCmpTotal + -0.22246756314756 *
S_Age + 0.49537720979115 * S_Frq + 1.38815981786544 * S_Income + -0.93015968695331 * S_Kidhome
+ 0.11586216615481 * S_Mnt + -0.02105973515345 * S_MntFishProducts + -0.28078442249811 *
S_MntFruits + -0.01763878655129 * S_MntGoldProds + 0.83934619541231 * S_MntMeatProducts +
-0.23417310915433 * S_MntSweetProducts + -0.29135819585991 * S_MntWines + -0.20792872642036 *
S_MonthsAsCustomer + 1.05218745810839 * S_NumCatalogPurchases + 0.7196418967437 *
S_NumDealsPurchases + 0.69035286374177 * S_NumDistPurchases + 0.38027656631135 *
S_NumStorePurchases + -0.18878358997924 * S_NumWebPurchases + 1.61962062004798 *
S_NumWebVisitsMonth + -0.04575386719745 * S_RFMstat + 1.16358450490635 * S_RMntFrq +
-2.13821542142822 * S_Recency + -1.28960355207697 * S_Teenhome ;
1255980   +   H1x1_4  =    -0.34331113295243 * S_AcceptedCmpTotal
1255981   +          +    -0.39878146063012 * S_Age  +     0.10068367322473 * S_Frq
1255982   +          +    -0.20171643525685 * S_Income  +    -0.76934260520569 *
1255983   +        S_Kidhome  +    -0.66782690219397 * S_Mnt  +     0.80905970181803 *
1255984   +        S_MntFishProducts  +    -0.03688782193215 * S_MntFruits
1255985   +          +     0.06641568264972 * S_MntGoldProds  +    -3.32390323965822 *
1255986   +        S_MntMeatProducts  +    -0.05413014598032 * S_MntSweetProducts
1255987   +          +     1.07708707113306 * S_MntWines  +     0.13185264889978 *
1255988   +        S_MonthsAsCustomer  +    -0.39476201074171 * S_NumCatalogPurchases
1255989   +          +    -0.00642902007204 * S_NumDealsPurchases
1255990   +          +     0.29785069480367 * S_NumDistPurchases
1255991   +          +    -0.42243322063147 * S_NumStorePurchases
1255992   +          +     0.54880896338383 * S_NumWebPurchases
1255993   +          +    -0.12525846016886 * S_NumWebVisitsMonth
1255994   +          +    -0.31397100953189 * S_RFMstat  +     -0.5192863720509 *
1255995   +        S_RMntFrq  +     0.10252211581449 * S_Recency
1255996   +          +     0.44223031313104 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.34331113295243 * S_AcceptedCmpTotal + -0.39878146063012 *
S_Age + 0.10068367322473 * S_Frq + -0.20171643525685 * S_Income + -0.76934260520569 *
S_Kidhome + -0.66782690219397 * S_Mnt + 0.80905970181803 * S_MntFishProducts +
-0.03688782193215 * S_MntFruits + 0.06641568264972 * S_MntGoldProds + -3.32390323965822 *
S_MntMeatProducts + -0.05413014598032 * S_MntSweetProducts + 1.07708707113306 * S_MntWines +
0.13185264889978 * S_MonthsAsCustomer + -0.39476201074171 * S_NumCatalogPurchases +
-0.00642902007204 * S_NumDealsPurchases + 0.29785069480367 * S_NumDistPurchases +
-0.42243322063147 * S_NumStorePurchases + 0.54880896338383 * S_NumWebPurchases +
-0.12525846016886 * S_NumWebVisitsMonth + -0.31397100953189 * S_RFMstat + -0.5192863720509 *
S_RMntFrq + 0.10252211581449 * S_Recency + 0.44223031313104 * S_Teenhome ;
1255997   +   H1x1_5  =    -0.89949577087728 * S_AcceptedCmpTotal
1255998   +          +     -0.5133669560115 * S_Age  +     0.55814120515869 * S_Frq
1255999   +          +    -0.72790553700689 * S_Income  +     1.13470491167406 *
1256000   +        S_Kidhome  +     0.42465795563071 * S_Mnt  +     0.22642900369653 *
1256001   +        S_MntFishProducts  +    -0.10149694753146 * S_MntFruits
1256002   +          +    -0.05203167914723 * S_MntGoldProds  +    -0.42300460593042 *
1256003   +        S_MntMeatProducts  +    -0.11178206624825 * S_MntSweetProducts
1256004   +          +     1.57257994445012 * S_MntWines  +     0.02297554927807 *
1256005   +        S_MonthsAsCustomer  +    -0.60721423552141 * S_NumCatalogPurchases
1256006   +          +    -0.48404738328225 * S_NumDealsPurchases
1256007   +          +    -0.02464180457879 * S_NumDistPurchases
1256008   +          +     1.17201831082067 * S_NumStorePurchases
1256009   +          +     0.57453655167516 * S_NumWebPurchases
1256010   +          +    -1.94417019790248 * S_NumWebVisitsMonth
1256011   +          +     0.00073301476364 * S_RFMstat  +     0.12295343326875 *
1256012   +        S_RMntFrq  +      1.6169916658132 * S_Recency
1256013   +          +     0.09488579305439 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.89949577087728 * S_AcceptedCmpTotal + -0.5133669560115 *
S_Age + 0.55814120515869 * S_Frq + -0.72790553700689 * S_Income + 1.13470491167406 * S_Kidhome
+ 0.42465795563071 * S_Mnt + 0.22642900369653 * S_MntFishProducts + -0.10149694753146 *
S_MntFruits + -0.05203167914723 * S_MntGoldProds + -0.42300460593042 * S_MntMeatProducts +
-0.11178206624825 * S_MntSweetProducts + 1.57257994445012 * S_MntWines + 0.02297554927807 *
S_MonthsAsCustomer + -0.60721423552141 * S_NumCatalogPurchases + -0.48404738328225 *
S_NumDealsPurchases + -0.02464180457879 * S_NumDistPurchases + 1.17201831082067 *
S_NumStorePurchases + 0.57453655167516 * S_NumWebPurchases + -1.94417019790248 *
S_NumWebVisitsMonth + 0.00073301476364 * S_RFMstat + 0.12295343326875 * S_RMntFrq +
1.6169916658132 * S_Recency + 0.09488579305439 * S_Teenhome ;
1256014   +   H1x1_6  =     0.01224996381937 * S_AcceptedCmpTotal
1256015   +          +     0.56818460209578 * S_Age  +    -0.50544994791872 * S_Frq
1256016   +          +    -0.39086889823619 * S_Income  +      0.2278709145292 *
1256017   +        S_Kidhome  +       0.221310975162 * S_Mnt  +     -0.2208719427117 *
1256018   +        S_MntFishProducts  +     0.33199116637803 * S_MntFruits
1256019   +          +    -0.20919304257884 * S_MntGoldProds  +     0.85155045239396 *
1256020   +        S_MntMeatProducts  +     0.32150401526792 * S_MntSweetProducts
1256021   +          +     0.24789026157513 * S_MntWines  +    -0.16427340869887 *
1256022   +        S_MonthsAsCustomer  +    -1.31657293247686 * S_NumCatalogPurchases
1256023   +          +    -1.49850531967483 * S_NumDealsPurchases
1256024   +          +    -0.82105466264223 * S_NumDistPurchases
1256025   +          +     0.29984603642824 * S_NumStorePurchases
1256026   +          +     0.06557123721611 * S_NumWebPurchases
1256027   +          +     1.04754749365002 * S_NumWebVisitsMonth
1256028   +          +     0.18881248406892 * S_RFMstat  +     0.26455728766984 *
1256029   +        S_RMntFrq  +     0.12396789666359 * S_Recency
1256030   +          +     0.04001049603668 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0.01224996381937 * S_AcceptedCmpTotal + 0.56818460209578 *
S_Age + -0.50544994791872 * S_Frq + -0.39086889823619 * S_Income + 0.2278709145292 * S_Kidhome
+ 0.221310975162 * S_Mnt + -0.2208719427117 * S_MntFishProducts + 0.33199116637803 *
S_MntFruits + -0.20919304257884 * S_MntGoldProds + 0.85155045239396 * S_MntMeatProducts +
0.32150401526792 * S_MntSweetProducts + 0.24789026157513 * S_MntWines + -0.16427340869887 *
S_MonthsAsCustomer + -1.31657293247686 * S_NumCatalogPurchases + -1.49850531967483 *
S_NumDealsPurchases + -0.82105466264223 * S_NumDistPurchases + 0.29984603642824 *
S_NumStorePurchases + 0.06557123721611 * S_NumWebPurchases + 1.04754749365002 *
S_NumWebVisitsMonth + 0.18881248406892 * S_RFMstat + 0.26455728766984 * S_RMntFrq +
0.12396789666359 * S_Recency + 0.04001049603668 * S_Teenhome ;
1256031   +   H1x1_1  = H1x1_1  +     -0.4293641198863 * AcceptedCmp10
1256032   +          +    -0.02562823362815 * AcceptedCmp20  +     0.16277388616218 *
1256033   +        AcceptedCmp30  +    -0.38952498475664 * AcceptedCmp40
1256034   +          +    -0.13756852377245 * AcceptedCmp50  +    -0.11393239206883 *
1256035   +        Complain0  +    -0.18422159910382 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.4293641198863 * AcceptedCmp10 + -0.02562823362815 *
AcceptedCmp20 + 0.16277388616218 * AcceptedCmp30 + -0.38952498475664 * AcceptedCmp40 +
-0.13756852377245 * AcceptedCmp50 + -0.11393239206883 * Complain0 + -0.18422159910382 *
HigherEducationBinary0 ;
1256036   +   H1x1_2  = H1x1_2  +     -0.6690011671322 * AcceptedCmp10
1256037   +          +     0.30944418540454 * AcceptedCmp20  +     0.58989055832198 *
1256038   +        AcceptedCmp30  +    -0.11349554378017 * AcceptedCmp40
1256039   +          +     0.17747537507545 * AcceptedCmp50  +     0.31141201787728 *
1256040   +        Complain0  +    -0.14665102087088 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.6690011671322 * AcceptedCmp10 + 0.30944418540454 *
AcceptedCmp20 + 0.58989055832198 * AcceptedCmp30 + -0.11349554378017 * AcceptedCmp40 +
0.17747537507545 * AcceptedCmp50 + 0.31141201787728 * Complain0 + -0.14665102087088 *
HigherEducationBinary0 ;
1256041   +   H1x1_3  = H1x1_3  +    -0.37718551551154 * AcceptedCmp10
1256042   +          +    -0.95419836616858 * AcceptedCmp20  +    -1.07782642598822 *
1256043   +        AcceptedCmp30  +    -0.36181507758379 * AcceptedCmp40
1256044   +          +    -0.20579221441057 * AcceptedCmp50  +     -0.2862570173476 *
1256045   +        Complain0  +     0.42095042003574 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.37718551551154 * AcceptedCmp10 + -0.95419836616858
* AcceptedCmp20 + -1.07782642598822 * AcceptedCmp30 + -0.36181507758379 * AcceptedCmp40 +
-0.20579221441057 * AcceptedCmp50 + -0.2862570173476 * Complain0 + 0.42095042003574 *
HigherEducationBinary0 ;
1256046   +   H1x1_4  = H1x1_4  +     0.76282838117383 * AcceptedCmp10
1256047   +          +     0.17657215690894 * AcceptedCmp20  +     0.06936093547655 *
1256048   +        AcceptedCmp30  +    -0.31222684620157 * AcceptedCmp40
1256049   +          +     0.35916828202502 * AcceptedCmp50  +     0.15464859425769 *
1256050   +        Complain0  +    -0.12780871374988 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.76282838117383 * AcceptedCmp10 + 0.17657215690894 *
AcceptedCmp20 + 0.06936093547655 * AcceptedCmp30 + -0.31222684620157 * AcceptedCmp40 +
0.35916828202502 * AcceptedCmp50 + 0.15464859425769 * Complain0 + -0.12780871374988 *
HigherEducationBinary0 ;
1256051   +   H1x1_5  = H1x1_5  +      0.0863832283968 * AcceptedCmp10
1256052   +          +    -0.01478152334234 * AcceptedCmp20  +    -0.25793605794945 *
1256053   +        AcceptedCmp30  +     0.75328991260718 * AcceptedCmp40
1256054   +          +     0.43869592545355 * AcceptedCmp50  +    -0.18444801256895 *
1256055   +        Complain0  +    -0.18540568245616 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 0.0863832283968 * AcceptedCmp10 + -0.01478152334234 *
AcceptedCmp20 + -0.25793605794945 * AcceptedCmp30 + 0.75328991260718 * AcceptedCmp40 +
0.43869592545355 * AcceptedCmp50 + -0.18444801256895 * Complain0 + -0.18540568245616 *
HigherEducationBinary0 ;
1256056   +   H1x1_6  = H1x1_6  +    -0.05476883960444 * AcceptedCmp10
1256057   +          +    -0.30796660956747 * AcceptedCmp20  +    -0.15332998700386 *
1256058   +        AcceptedCmp30  +     0.07190305484507 * AcceptedCmp40
1256059   +          +    -0.19344551087023 * AcceptedCmp50  +    -0.01671794402922 *
1256060   +        Complain0  +      0.4224003744836 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + -0.05476883960444 * AcceptedCmp10 + -0.30796660956747
* AcceptedCmp20 + -0.15332998700386 * AcceptedCmp30 + 0.07190305484507 * AcceptedCmp40 +
-0.19344551087023 * AcceptedCmp50 + -0.01671794402922 * Complain0 + 0.4224003744836 *
HigherEducationBinary0 ;
1256061   +   H1x1_1  = H1x1_1  +     0.06740641383122 * Education2n_Cycle
1256062   +          +      0.0427985447056 * EducationBasic  +     0.38043688251433 *
1256063   +        EducationGraduation  +     0.07595631354847 * EducationMaster
1256064   +          +     0.24583509957712 * Marital_StatusDivorced
1256065   +          +    -0.22681931588361 * Marital_StatusMarried
1256066   +          +    -0.12924106229536 * Marital_StatusSingle
1256067   +          +     -0.2262058185403 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.06740641383122 * Education2n_Cycle + 0.0427985447056
* EducationBasic + 0.38043688251433 * EducationGraduation + 0.07595631354847 * EducationMaster
+ 0.24583509957712 * Marital_StatusDivorced + -0.22681931588361 * Marital_StatusMarried +
-0.12924106229536 * Marital_StatusSingle + -0.2262058185403 * Marital_StatusTogether ;
1256068   +   H1x1_2  = H1x1_2  +    -0.13120690973481 * Education2n_Cycle
1256069   +          +     0.37925506295244 * EducationBasic  +     0.31784700588218 *
1256070   +        EducationGraduation  +     0.23015089246655 * EducationMaster
1256071   +          +    -0.12585334311068 * Marital_StatusDivorced
1256072   +          +    -0.20835502467207 * Marital_StatusMarried
1256073   +          +    -0.13839534449368 * Marital_StatusSingle
1256074   +          +     0.64317572477668 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.13120690973481 * Education2n_Cycle +
0.37925506295244 * EducationBasic + 0.31784700588218 * EducationGraduation + 0.23015089246655
* EducationMaster + -0.12585334311068 * Marital_StatusDivorced + -0.20835502467207 *
Marital_StatusMarried + -0.13839534449368 * Marital_StatusSingle + 0.64317572477668 *
Marital_StatusTogether ;
1256075   +   H1x1_3  = H1x1_3  +     0.32305785926236 * Education2n_Cycle
1256076   +          +     0.23464353160373 * EducationBasic  +    -0.73832644067678 *
1256077   +        EducationGraduation  +    -0.03608560158257 * EducationMaster
1256078   +          +     0.35106363238113 * Marital_StatusDivorced
1256079   +          +     -1.3414808583918 * Marital_StatusMarried
1256080   +          +     1.40835320798486 * Marital_StatusSingle
1256081   +          +    -1.26805917396788 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.32305785926236 * Education2n_Cycle +
0.23464353160373 * EducationBasic + -0.73832644067678 * EducationGraduation +
-0.03608560158257 * EducationMaster + 0.35106363238113 * Marital_StatusDivorced +
-1.3414808583918 * Marital_StatusMarried + 1.40835320798486 * Marital_StatusSingle +
-1.26805917396788 * Marital_StatusTogether ;
1256082   +   H1x1_4  = H1x1_4  +    -0.14516593990466 * Education2n_Cycle
1256083   +          +     0.21457892528906 * EducationBasic  +      0.3693312496431 *
1256084   +        EducationGraduation  +      0.1746658332011 * EducationMaster
1256085   +          +     0.48174546958393 * Marital_StatusDivorced
1256086   +          +    -0.41416978858191 * Marital_StatusMarried
1256087   +          +    -0.23376801546265 * Marital_StatusSingle
1256088   +          +    -0.40569257078897 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.14516593990466 * Education2n_Cycle +
0.21457892528906 * EducationBasic + 0.3693312496431 * EducationGraduation + 0.1746658332011 *
EducationMaster + 0.48174546958393 * Marital_StatusDivorced + -0.41416978858191 *
Marital_StatusMarried + -0.23376801546265 * Marital_StatusSingle + -0.40569257078897 *
Marital_StatusTogether ;
1256089   +   H1x1_5  = H1x1_5  +    -0.00489214718621 * Education2n_Cycle
1256090   +          +     0.04788059649714 * EducationBasic  +      -0.479003778409 *
1256091   +        EducationGraduation  +     0.68875064631577 * EducationMaster
1256092   +          +    -0.67557643774246 * Marital_StatusDivorced
1256093   +          +     1.63844045917367 * Marital_StatusMarried
1256094   +          +    -0.70320960247699 * Marital_StatusSingle
1256095   +          +     1.26350112628909 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.00489214718621 * Education2n_Cycle +
0.04788059649714 * EducationBasic + -0.479003778409 * EducationGraduation + 0.68875064631577 *
EducationMaster + -0.67557643774246 * Marital_StatusDivorced + 1.63844045917367 *
Marital_StatusMarried + -0.70320960247699 * Marital_StatusSingle + 1.26350112628909 *
Marital_StatusTogether ;
1256096   +   H1x1_6  = H1x1_6  +     0.38566123849432 * Education2n_Cycle
1256097   +          +    -0.48006357411447 * EducationBasic  +     0.06594567975069 *
1256098   +        EducationGraduation  +    -0.68011360002443 * EducationMaster
1256099   +          +    -0.11371453086883 * Marital_StatusDivorced
1256100   +          +    -0.34226997176291 * Marital_StatusMarried
1256101   +          +    -1.01568676685754 * Marital_StatusSingle
1256102   +          +    -0.07673228755579 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + 0.38566123849432 * Education2n_Cycle +
-0.48006357411447 * EducationBasic + 0.06594567975069 * EducationGraduation +
-0.68011360002443 * EducationMaster + -0.11371453086883 * Marital_StatusDivorced +
-0.34226997176291 * Marital_StatusMarried + -1.01568676685754 * Marital_StatusSingle +
-0.07673228755579 * Marital_StatusTogether ;
1256103   +   H1x1_1  =    -0.13665586104906 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.13665586104906 + H1x1_1 ;
1256104   +   H1x1_2  =    -1.74128345271319 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -1.74128345271319 + H1x1_2 ;
1256105   +   H1x1_3  =    -0.38226400326342 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.38226400326342 + H1x1_3 ;
1256106   +   H1x1_4  =    -0.64652756521333 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.64652756521333 + H1x1_4 ;
1256107   +   H1x1_5  =     0.89555568414722 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0.89555568414722 + H1x1_5 ;
1256108   +   H1x1_6  =    -0.28536788363505 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -0.28536788363505 + H1x1_6 ;
1256109   +   H1x1_7  = 0;
MPRINT(EM_DIAGRAM):   H1x1_7 = 0;
1256110   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 , H1x1_7
1256111   +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 ,
H1x1_7 );
1256112   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1256113   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
1256114   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
1256115   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
1256116   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
1256117   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
1256118   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
1256119   +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
1256120   +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
1256121   +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
1256122   +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
1256123   +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
1256124   +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
1256125   +   H1x1_7  = EXP(H1x1_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_7 = EXP(H1x1_7 - _MAX_);
1256126   +   _SUM_ = _SUM_ + H1x1_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_7 ;
1256127   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
1256128   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
1256129   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
1256130   +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
1256131   +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
1256132   +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
1256133   +   H1x1_7  = H1x1_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_7 = H1x1_7 / _SUM_;
1256134   +END;
MPRINT(EM_DIAGRAM):   END;
1256135   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1256136   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
1256137   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
1256138   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
1256139   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
1256140   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
1256141   +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
1256142   +   H1x1_7  = .;
MPRINT(EM_DIAGRAM):   H1x1_7 = .;
1256143   +END;
MPRINT(EM_DIAGRAM):   END;
1256144   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1256145   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
1256146   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1256147   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1256148   +   H1x2_1  =    -0.46863593010465 * S_AcceptedCmpTotal
1256149   +          +     0.76938995153422 * S_Age  +    -0.10870665325086 * S_Frq
1256150   +          +    -0.01767709917897 * S_Income  +    -0.06564852978687 *
1256151   +        S_Kidhome  +     1.53975855599943 * S_Mnt  +     0.14885556549813 *
1256152   +        S_MntFishProducts  +     -0.3427211596875 * S_MntFruits
1256153   +          +     1.82311511422571 * S_MntGoldProds  +     1.16814585484266 *
1256154   +        S_MntMeatProducts  +    -0.03210183211362 * S_MntSweetProducts
1256155   +          +     0.21048598967441 * S_MntWines  +    -1.43075224286158 *
1256156   +        S_MonthsAsCustomer  +     0.17264791017938 * S_NumCatalogPurchases
1256157   +          +    -0.87259051567474 * S_NumDealsPurchases
1256158   +          +    -0.36454149529139 * S_NumDistPurchases
1256159   +          +     0.12447759925061 * S_NumStorePurchases
1256160   +          +    -1.08133487947367 * S_NumWebPurchases
1256161   +          +    -0.49882157745454 * S_NumWebVisitsMonth
1256162   +          +    -1.37163643041927 * S_RFMstat  +    -2.02270778627266 *
1256163   +        S_RMntFrq  +    -0.01174101172444 * S_Recency
1256164   +          +     1.37307999964517 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.46863593010465 * S_AcceptedCmpTotal + 0.76938995153422 *
S_Age + -0.10870665325086 * S_Frq + -0.01767709917897 * S_Income + -0.06564852978687 *
S_Kidhome + 1.53975855599943 * S_Mnt + 0.14885556549813 * S_MntFishProducts + -0.3427211596875
* S_MntFruits + 1.82311511422571 * S_MntGoldProds + 1.16814585484266 * S_MntMeatProducts +
-0.03210183211362 * S_MntSweetProducts + 0.21048598967441 * S_MntWines + -1.43075224286158 *
S_MonthsAsCustomer + 0.17264791017938 * S_NumCatalogPurchases + -0.87259051567474 *
S_NumDealsPurchases + -0.36454149529139 * S_NumDistPurchases + 0.12447759925061 *
S_NumStorePurchases + -1.08133487947367 * S_NumWebPurchases + -0.49882157745454 *
S_NumWebVisitsMonth + -1.37163643041927 * S_RFMstat + -2.02270778627266 * S_RMntFrq +
-0.01174101172444 * S_Recency + 1.37307999964517 * S_Teenhome ;
1256165   +   H1x2_2  =     0.31979674377303 * S_AcceptedCmpTotal
1256166   +          +    -1.13516841608912 * S_Age  +     1.57640145941914 * S_Frq
1256167   +          +    -0.58468039509557 * S_Income  +    -1.78015996883174 *
1256168   +        S_Kidhome  +     0.51311311640127 * S_Mnt  +     0.07011815519915 *
1256169   +        S_MntFishProducts  +     0.73204832291164 * S_MntFruits
1256170   +          +     1.50837189353633 * S_MntGoldProds  +     1.39487443576743 *
1256171   +        S_MntMeatProducts  +      0.6943398196475 * S_MntSweetProducts
1256172   +          +    -0.36693028595681 * S_MntWines  +     0.86802033237442 *
1256173   +        S_MonthsAsCustomer  +     0.02384797538091 * S_NumCatalogPurchases
1256174   +          +     2.23121497416403 * S_NumDealsPurchases
1256175   +          +    -0.48674842191071 * S_NumDistPurchases
1256176   +          +     1.77510728607544 * S_NumStorePurchases
1256177   +          +     0.14647433155436 * S_NumWebPurchases
1256178   +          +    -0.95892686924419 * S_NumWebVisitsMonth
1256179   +          +    -0.26496935918704 * S_RFMstat  +     2.48765485222223 *
1256180   +        S_RMntFrq  +     2.46497777428475 * S_Recency
1256181   +          +    -0.62872033383484 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.31979674377303 * S_AcceptedCmpTotal + -1.13516841608912 *
S_Age + 1.57640145941914 * S_Frq + -0.58468039509557 * S_Income + -1.78015996883174 *
S_Kidhome + 0.51311311640127 * S_Mnt + 0.07011815519915 * S_MntFishProducts + 0.73204832291164
* S_MntFruits + 1.50837189353633 * S_MntGoldProds + 1.39487443576743 * S_MntMeatProducts +
0.6943398196475 * S_MntSweetProducts + -0.36693028595681 * S_MntWines + 0.86802033237442 *
S_MonthsAsCustomer + 0.02384797538091 * S_NumCatalogPurchases + 2.23121497416403 *
S_NumDealsPurchases + -0.48674842191071 * S_NumDistPurchases + 1.77510728607544 *
S_NumStorePurchases + 0.14647433155436 * S_NumWebPurchases + -0.95892686924419 *
S_NumWebVisitsMonth + -0.26496935918704 * S_RFMstat + 2.48765485222223 * S_RMntFrq +
2.46497777428475 * S_Recency + -0.62872033383484 * S_Teenhome ;
1256182   +   H1x2_3  =    -0.31142826583944 * S_AcceptedCmpTotal
1256183   +          +    -1.14828049895929 * S_Age  +    -0.54227584627485 * S_Frq
1256184   +          +     0.26826674711688 * S_Income  +     0.17643820666347 *
1256185   +        S_Kidhome  +    -0.12427430981043 * S_Mnt  +     0.18056887427376 *
1256186   +        S_MntFishProducts  +    -0.63010248821544 * S_MntFruits
1256187   +          +    -0.81391687529252 * S_MntGoldProds  +    -1.12306166734361 *
1256188   +        S_MntMeatProducts  +     0.92339010601965 * S_MntSweetProducts
1256189   +          +    -2.05510990050543 * S_MntWines  +    -2.02060586903244 *
1256190   +        S_MonthsAsCustomer  +     0.98841836752178 * S_NumCatalogPurchases
1256191   +          +     0.14338855349611 * S_NumDealsPurchases
1256192   +          +    -2.21071010829235 * S_NumDistPurchases
1256193   +          +    -0.21795889348002 * S_NumStorePurchases
1256194   +          +     1.98825087883535 * S_NumWebPurchases
1256195   +          +     1.02482442531149 * S_NumWebVisitsMonth
1256196   +          +    -0.47662143614905 * S_RFMstat  +    -0.17167385440535 *
1256197   +        S_RMntFrq  +     -1.0288777281766 * S_Recency
1256198   +          +    -0.10646747275734 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.31142826583944 * S_AcceptedCmpTotal + -1.14828049895929 *
S_Age + -0.54227584627485 * S_Frq + 0.26826674711688 * S_Income + 0.17643820666347 * S_Kidhome
+ -0.12427430981043 * S_Mnt + 0.18056887427376 * S_MntFishProducts + -0.63010248821544 *
S_MntFruits + -0.81391687529252 * S_MntGoldProds + -1.12306166734361 * S_MntMeatProducts +
0.92339010601965 * S_MntSweetProducts + -2.05510990050543 * S_MntWines + -2.02060586903244 *
S_MonthsAsCustomer + 0.98841836752178 * S_NumCatalogPurchases + 0.14338855349611 *
S_NumDealsPurchases + -2.21071010829235 * S_NumDistPurchases + -0.21795889348002 *
S_NumStorePurchases + 1.98825087883535 * S_NumWebPurchases + 1.02482442531149 *
S_NumWebVisitsMonth + -0.47662143614905 * S_RFMstat + -0.17167385440535 * S_RMntFrq +
-1.0288777281766 * S_Recency + -0.10646747275734 * S_Teenhome ;
1256199   +   H1x2_4  =    -0.40813758620671 * S_AcceptedCmpTotal
1256200   +          +     0.16751361466296 * S_Age  +     0.61297021391662 * S_Frq
1256201   +          +     0.17708553296763 * S_Income  +    -0.23498000755537 *
1256202   +        S_Kidhome  +      0.6863853027948 * S_Mnt  +    -0.43649468589643 *
1256203   +        S_MntFishProducts  +    -1.03807059787368 * S_MntFruits
1256204   +          +     0.68988160282803 * S_MntGoldProds  +     1.76714128625705 *
1256205   +        S_MntMeatProducts  +     1.15458185366826 * S_MntSweetProducts
1256206   +          +     0.31267521045306 * S_MntWines  +    -3.18562841805634 *
1256207   +        S_MonthsAsCustomer  +     0.15316473812138 * S_NumCatalogPurchases
1256208   +          +     0.30041205661012 * S_NumDealsPurchases
1256209   +          +    -0.63499849986918 * S_NumDistPurchases
1256210   +          +    -0.34155713433714 * S_NumStorePurchases
1256211   +          +    -1.14183354933936 * S_NumWebPurchases
1256212   +          +    -0.42681980262973 * S_NumWebVisitsMonth
1256213   +          +    -0.18777676484111 * S_RFMstat  +      0.2522570278894 *
1256214   +        S_RMntFrq  +     1.25852246467612 * S_Recency
1256215   +          +     0.63333476238969 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.40813758620671 * S_AcceptedCmpTotal + 0.16751361466296 *
S_Age + 0.61297021391662 * S_Frq + 0.17708553296763 * S_Income + -0.23498000755537 * S_Kidhome
+ 0.6863853027948 * S_Mnt + -0.43649468589643 * S_MntFishProducts + -1.03807059787368 *
S_MntFruits + 0.68988160282803 * S_MntGoldProds + 1.76714128625705 * S_MntMeatProducts +
1.15458185366826 * S_MntSweetProducts + 0.31267521045306 * S_MntWines + -3.18562841805634 *
S_MonthsAsCustomer + 0.15316473812138 * S_NumCatalogPurchases + 0.30041205661012 *
S_NumDealsPurchases + -0.63499849986918 * S_NumDistPurchases + -0.34155713433714 *
S_NumStorePurchases + -1.14183354933936 * S_NumWebPurchases + -0.42681980262973 *
S_NumWebVisitsMonth + -0.18777676484111 * S_RFMstat + 0.2522570278894 * S_RMntFrq +
1.25852246467612 * S_Recency + 0.63333476238969 * S_Teenhome ;
1256216   +   H1x2_5  =     1.73048436159558 * S_AcceptedCmpTotal
1256217   +          +     1.91388487556197 * S_Age  +     0.14880026885923 * S_Frq
1256218   +          +      0.5905347897806 * S_Income  +     1.67048168226736 *
1256219   +        S_Kidhome  +     0.03869174467752 * S_Mnt  +    -0.71187911364266 *
1256220   +        S_MntFishProducts  +     0.93023590693473 * S_MntFruits
1256221   +          +     0.22907372790948 * S_MntGoldProds  +    -1.05941282177437 *
1256222   +        S_MntMeatProducts  +    -0.73905281508342 * S_MntSweetProducts
1256223   +          +     0.04429898588386 * S_MntWines  +    -0.47487263648723 *
1256224   +        S_MonthsAsCustomer  +     0.00382111008361 * S_NumCatalogPurchases
1256225   +          +    -0.21237915559831 * S_NumDealsPurchases
1256226   +          +     0.48256923764182 * S_NumDistPurchases
1256227   +          +    -0.45553093140641 * S_NumStorePurchases
1256228   +          +      0.5593655963659 * S_NumWebPurchases
1256229   +          +     0.27943768691188 * S_NumWebVisitsMonth
1256230   +          +     1.94452735574997 * S_RFMstat  +    -0.89811355261154 *
1256231   +        S_RMntFrq  +    -1.62796011550484 * S_Recency
1256232   +          +     0.60487421956906 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.73048436159558 * S_AcceptedCmpTotal + 1.91388487556197 *
S_Age + 0.14880026885923 * S_Frq + 0.5905347897806 * S_Income + 1.67048168226736 * S_Kidhome +
0.03869174467752 * S_Mnt + -0.71187911364266 * S_MntFishProducts + 0.93023590693473 *
S_MntFruits + 0.22907372790948 * S_MntGoldProds + -1.05941282177437 * S_MntMeatProducts +
-0.73905281508342 * S_MntSweetProducts + 0.04429898588386 * S_MntWines + -0.47487263648723 *
S_MonthsAsCustomer + 0.00382111008361 * S_NumCatalogPurchases + -0.21237915559831 *
S_NumDealsPurchases + 0.48256923764182 * S_NumDistPurchases + -0.45553093140641 *
S_NumStorePurchases + 0.5593655963659 * S_NumWebPurchases + 0.27943768691188 *
S_NumWebVisitsMonth + 1.94452735574997 * S_RFMstat + -0.89811355261154 * S_RMntFrq +
-1.62796011550484 * S_Recency + 0.60487421956906 * S_Teenhome ;
1256233   +   H1x2_6  =    -0.32010880515459 * S_AcceptedCmpTotal
1256234   +          +     0.95304983421791 * S_Age  +      -0.316044010281 * S_Frq
1256235   +          +     1.10925678578158 * S_Income  +     1.28019020117471 *
1256236   +        S_Kidhome  +     1.02498438668688 * S_Mnt  +     -1.8898236827792 *
1256237   +        S_MntFishProducts  +     0.96543971612672 * S_MntFruits
1256238   +          +    -0.21422669977227 * S_MntGoldProds  +     -0.0840639948559 *
1256239   +        S_MntMeatProducts  +     1.27902687109389 * S_MntSweetProducts
1256240   +          +    -1.38957846154598 * S_MntWines  +     0.80004372871482 *
1256241   +        S_MonthsAsCustomer  +    -0.19381123279552 * S_NumCatalogPurchases
1256242   +          +     2.38967021388062 * S_NumDealsPurchases
1256243   +          +    -0.97722398866481 * S_NumDistPurchases
1256244   +          +     1.57612333191312 * S_NumStorePurchases
1256245   +          +    -0.75968679115983 * S_NumWebPurchases
1256246   +          +    -0.64207187757251 * S_NumWebVisitsMonth
1256247   +          +     1.06529999122381 * S_RFMstat  +     0.67095385521555 *
1256248   +        S_RMntFrq  +     1.71313869798331 * S_Recency
1256249   +          +     1.39045686636707 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_6 = -0.32010880515459 * S_AcceptedCmpTotal + 0.95304983421791 *
S_Age + -0.316044010281 * S_Frq + 1.10925678578158 * S_Income + 1.28019020117471 * S_Kidhome +
1.02498438668688 * S_Mnt + -1.8898236827792 * S_MntFishProducts + 0.96543971612672 *
S_MntFruits + -0.21422669977227 * S_MntGoldProds + -0.0840639948559 * S_MntMeatProducts +
1.27902687109389 * S_MntSweetProducts + -1.38957846154598 * S_MntWines + 0.80004372871482 *
S_MonthsAsCustomer + -0.19381123279552 * S_NumCatalogPurchases + 2.38967021388062 *
S_NumDealsPurchases + -0.97722398866481 * S_NumDistPurchases + 1.57612333191312 *
S_NumStorePurchases + -0.75968679115983 * S_NumWebPurchases + -0.64207187757251 *
S_NumWebVisitsMonth + 1.06529999122381 * S_RFMstat + 0.67095385521555 * S_RMntFrq +
1.71313869798331 * S_Recency + 1.39045686636707 * S_Teenhome ;
1256250   +   H1x2_1  = H1x2_1  +    -1.32125124093028 * AcceptedCmp10
1256251   +          +    -0.61219063588492 * AcceptedCmp20  +     1.20821214973577 *
1256252   +        AcceptedCmp30  +    -1.13548727550981 * AcceptedCmp40
1256253   +          +     0.04405769197194 * AcceptedCmp50  +      0.7940658605271 *
1256254   +        Complain0  +     1.05933486404834 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -1.32125124093028 * AcceptedCmp10 + -0.61219063588492
* AcceptedCmp20 + 1.20821214973577 * AcceptedCmp30 + -1.13548727550981 * AcceptedCmp40 +
0.04405769197194 * AcceptedCmp50 + 0.7940658605271 * Complain0 + 1.05933486404834 *
HigherEducationBinary0 ;
1256255   +   H1x2_2  = H1x2_2  +     1.56313777120806 * AcceptedCmp10
1256256   +          +    -1.12997680537456 * AcceptedCmp20  +     1.19262470365504 *
1256257   +        AcceptedCmp30  +    -0.98995493161689 * AcceptedCmp40
1256258   +          +      -1.827141957557 * AcceptedCmp50  +    -0.43809188233899 *
1256259   +        Complain0  +      -0.627000653672 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 1.56313777120806 * AcceptedCmp10 + -1.12997680537456 *
AcceptedCmp20 + 1.19262470365504 * AcceptedCmp30 + -0.98995493161689 * AcceptedCmp40 +
-1.827141957557 * AcceptedCmp50 + -0.43809188233899 * Complain0 + -0.627000653672 *
HigherEducationBinary0 ;
1256260   +   H1x2_3  = H1x2_3  +     1.32174755827017 * AcceptedCmp10
1256261   +          +     1.00086479754098 * AcceptedCmp20  +      0.4636133487385 *
1256262   +        AcceptedCmp30  +     1.34878553883758 * AcceptedCmp40
1256263   +          +    -2.36241584924476 * AcceptedCmp50  +       1.082421071431 *
1256264   +        Complain0  +    -0.32514144517436 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 1.32174755827017 * AcceptedCmp10 + 1.00086479754098 *
AcceptedCmp20 + 0.4636133487385 * AcceptedCmp30 + 1.34878553883758 * AcceptedCmp40 +
-2.36241584924476 * AcceptedCmp50 + 1.082421071431 * Complain0 + -0.32514144517436 *
HigherEducationBinary0 ;
1256265   +   H1x2_4  = H1x2_4  +     0.39556775796131 * AcceptedCmp10
1256266   +          +     0.06457727211285 * AcceptedCmp20  +    -1.44632749800655 *
1256267   +        AcceptedCmp30  +     1.20294678514383 * AcceptedCmp40
1256268   +          +    -0.01594330886358 * AcceptedCmp50  +    -2.06895895180485 *
1256269   +        Complain0  +    -0.01374012569775 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.39556775796131 * AcceptedCmp10 + 0.06457727211285 *
AcceptedCmp20 + -1.44632749800655 * AcceptedCmp30 + 1.20294678514383 * AcceptedCmp40 +
-0.01594330886358 * AcceptedCmp50 + -2.06895895180485 * Complain0 + -0.01374012569775 *
HigherEducationBinary0 ;
1256270   +   H1x2_5  = H1x2_5  +     1.11945933535638 * AcceptedCmp10
1256271   +          +     0.26383973979566 * AcceptedCmp20  +    -0.40426240061746 *
1256272   +        AcceptedCmp30  +     1.46916781894719 * AcceptedCmp40
1256273   +          +     0.26827715088644 * AcceptedCmp50  +     1.50074465469998 *
1256274   +        Complain0  +     -1.0626185000486 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 1.11945933535638 * AcceptedCmp10 + 0.26383973979566 *
AcceptedCmp20 + -0.40426240061746 * AcceptedCmp30 + 1.46916781894719 * AcceptedCmp40 +
0.26827715088644 * AcceptedCmp50 + 1.50074465469998 * Complain0 + -1.0626185000486 *
HigherEducationBinary0 ;
1256275   +   H1x2_6  = H1x2_6  +    -0.87625232174239 * AcceptedCmp10
1256276   +          +     0.72228047975642 * AcceptedCmp20  +     1.34904015028355 *
1256277   +        AcceptedCmp30  +     1.55639496207852 * AcceptedCmp40
1256278   +          +    -0.98741935337746 * AcceptedCmp50  +     0.99421811137074 *
1256279   +        Complain0  +    -1.69180618270074 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + -0.87625232174239 * AcceptedCmp10 + 0.72228047975642 *
AcceptedCmp20 + 1.34904015028355 * AcceptedCmp30 + 1.55639496207852 * AcceptedCmp40 +
-0.98741935337746 * AcceptedCmp50 + 0.99421811137074 * Complain0 + -1.69180618270074 *
HigherEducationBinary0 ;
1256280   +   H1x2_1  = H1x2_1  +    -0.17034446979478 * Education2n_Cycle
1256281   +          +    -0.75872196172063 * EducationBasic  +     0.44107677662894 *
1256282   +        EducationGraduation  +      0.1073450284316 * EducationMaster
1256283   +          +     0.96470902298142 * Marital_StatusDivorced
1256284   +          +     0.94805959268314 * Marital_StatusMarried
1256285   +          +     -0.6523948769616 * Marital_StatusSingle
1256286   +          +     0.07557344719737 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.17034446979478 * Education2n_Cycle +
-0.75872196172063 * EducationBasic + 0.44107677662894 * EducationGraduation + 0.1073450284316
* EducationMaster + 0.96470902298142 * Marital_StatusDivorced + 0.94805959268314 *
Marital_StatusMarried + -0.6523948769616 * Marital_StatusSingle + 0.07557344719737 *
Marital_StatusTogether ;
1256287   +   H1x2_2  = H1x2_2  +    -0.42515060901662 * Education2n_Cycle
1256288   +          +    -1.05213629639837 * EducationBasic  +     0.72603871617959 *
1256289   +        EducationGraduation  +    -1.34927753306064 * EducationMaster
1256290   +          +      0.3918249505531 * Marital_StatusDivorced
1256291   +          +    -0.00968091979586 * Marital_StatusMarried
1256292   +          +     0.84615379885071 * Marital_StatusSingle
1256293   +          +     0.34817324570682 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.42515060901662 * Education2n_Cycle +
-1.05213629639837 * EducationBasic + 0.72603871617959 * EducationGraduation +
-1.34927753306064 * EducationMaster + 0.3918249505531 * Marital_StatusDivorced +
-0.00968091979586 * Marital_StatusMarried + 0.84615379885071 * Marital_StatusSingle +
0.34817324570682 * Marital_StatusTogether ;
1256294   +   H1x2_3  = H1x2_3  +    -0.31002362860852 * Education2n_Cycle
1256295   +          +     1.40744525716089 * EducationBasic  +     2.06403096539358 *
1256296   +        EducationGraduation  +     -0.8672743321499 * EducationMaster
1256297   +          +     1.14335160313191 * Marital_StatusDivorced
1256298   +          +     0.50580517192175 * Marital_StatusMarried
1256299   +          +     0.17264295020921 * Marital_StatusSingle
1256300   +          +    -0.58193119255736 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -0.31002362860852 * Education2n_Cycle +
1.40744525716089 * EducationBasic + 2.06403096539358 * EducationGraduation + -0.8672743321499
* EducationMaster + 1.14335160313191 * Marital_StatusDivorced + 0.50580517192175 *
Marital_StatusMarried + 0.17264295020921 * Marital_StatusSingle + -0.58193119255736 *
Marital_StatusTogether ;
1256301   +   H1x2_4  = H1x2_4  +     0.55057637605468 * Education2n_Cycle
1256302   +          +    -0.73070803276142 * EducationBasic  +     0.40424625808481 *
1256303   +        EducationGraduation  +     1.95818378342783 * EducationMaster
1256304   +          +    -0.11238504444225 * Marital_StatusDivorced
1256305   +          +    -0.81348274043749 * Marital_StatusMarried
1256306   +          +     0.46075415610001 * Marital_StatusSingle
1256307   +          +    -0.17552649817722 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.55057637605468 * Education2n_Cycle +
-0.73070803276142 * EducationBasic + 0.40424625808481 * EducationGraduation + 1.95818378342783
* EducationMaster + -0.11238504444225 * Marital_StatusDivorced + -0.81348274043749 *
Marital_StatusMarried + 0.46075415610001 * Marital_StatusSingle + -0.17552649817722 *
Marital_StatusTogether ;
1256308   +   H1x2_5  = H1x2_5  +     0.43341125564688 * Education2n_Cycle
1256309   +          +     2.81958018976644 * EducationBasic  +     0.28773362443315 *
1256310   +        EducationGraduation  +     0.08396135672504 * EducationMaster
1256311   +          +    -0.46342068701431 * Marital_StatusDivorced
1256312   +          +    -0.41667845270204 * Marital_StatusMarried
1256313   +          +    -0.47166707496281 * Marital_StatusSingle
1256314   +          +     0.54110155717306 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.43341125564688 * Education2n_Cycle +
2.81958018976644 * EducationBasic + 0.28773362443315 * EducationGraduation + 0.08396135672504
* EducationMaster + -0.46342068701431 * Marital_StatusDivorced + -0.41667845270204 *
Marital_StatusMarried + -0.47166707496281 * Marital_StatusSingle + 0.54110155717306 *
Marital_StatusTogether ;
1256315   +   H1x2_6  = H1x2_6  +    -0.27163102711307 * Education2n_Cycle
1256316   +          +    -0.04052143781957 * EducationBasic  +     0.97902549344774 *
1256317   +        EducationGraduation  +     0.36656103863186 * EducationMaster
1256318   +          +    -0.45376613787812 * Marital_StatusDivorced
1256319   +          +     0.01337046049801 * Marital_StatusMarried
1256320   +          +    -0.92811489484121 * Marital_StatusSingle
1256321   +          +     1.52402650450634 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + -0.27163102711307 * Education2n_Cycle +
-0.04052143781957 * EducationBasic + 0.97902549344774 * EducationGraduation + 0.36656103863186
* EducationMaster + -0.45376613787812 * Marital_StatusDivorced + 0.01337046049801 *
Marital_StatusMarried + -0.92811489484121 * Marital_StatusSingle + 1.52402650450634 *
Marital_StatusTogether ;
1256322   +   H1x2_1  =     0.27200642200874 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.27200642200874 + H1x2_1 ;
1256323   +   H1x2_2  =     0.52117161047058 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.52117161047058 + H1x2_2 ;
1256324   +   H1x2_3  =    -1.04763461279984 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -1.04763461279984 + H1x2_3 ;
1256325   +   H1x2_4  =     0.10516307959318 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.10516307959318 + H1x2_4 ;
1256326   +   H1x2_5  =     1.24237093160919 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.24237093160919 + H1x2_5 ;
1256327   +   H1x2_6  =    -0.57977518763852 + H1x2_6 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = -0.57977518763852 + H1x2_6 ;
1256328   +   H1x2_7  = 0;
MPRINT(EM_DIAGRAM):   H1x2_7 = 0;
1256329   +   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 , H1x2_7
1256330   +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 ,
H1x2_7 );
1256331   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1256332   +   H1x2_1  = EXP(H1x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(H1x2_1 - _MAX_);
1256333   +   _SUM_ = _SUM_ + H1x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_1 ;
1256334   +   H1x2_2  = EXP(H1x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(H1x2_2 - _MAX_);
1256335   +   _SUM_ = _SUM_ + H1x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_2 ;
1256336   +   H1x2_3  = EXP(H1x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(H1x2_3 - _MAX_);
1256337   +   _SUM_ = _SUM_ + H1x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_3 ;
1256338   +   H1x2_4  = EXP(H1x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(H1x2_4 - _MAX_);
1256339   +   _SUM_ = _SUM_ + H1x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_4 ;
1256340   +   H1x2_5  = EXP(H1x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(H1x2_5 - _MAX_);
1256341   +   _SUM_ = _SUM_ + H1x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_5 ;
1256342   +   H1x2_6  = EXP(H1x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(H1x2_6 - _MAX_);
1256343   +   _SUM_ = _SUM_ + H1x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_6 ;
1256344   +   H1x2_7  = EXP(H1x2_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_7 = EXP(H1x2_7 - _MAX_);
1256345   +   _SUM_ = _SUM_ + H1x2_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_7 ;
1256346   +   H1x2_1  = H1x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 / _SUM_;
1256347   +   H1x2_2  = H1x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 / _SUM_;
1256348   +   H1x2_3  = H1x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 / _SUM_;
1256349   +   H1x2_4  = H1x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 / _SUM_;
1256350   +   H1x2_5  = H1x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 / _SUM_;
1256351   +   H1x2_6  = H1x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 / _SUM_;
1256352   +   H1x2_7  = H1x2_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_7 = H1x2_7 / _SUM_;
1256353   +END;
MPRINT(EM_DIAGRAM):   END;
1256354   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1256355   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
1256356   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
1256357   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
1256358   +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
1256359   +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
1256360   +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
1256361   +   H1x2_7  = .;
MPRINT(EM_DIAGRAM):   H1x2_7 = .;
1256362   +END;
MPRINT(EM_DIAGRAM):   END;
1256363   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1256364   +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
1256365   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1256366   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1256367   +   H2x1_1  =     3.19986933046591 * H1x1_1  +    -0.53665634063887 * H1x1_2
1256368   +          +     1.71172628690017 * H1x1_3  +    -1.33944402954134 * H1x1_4
1256369   +          +    -1.93533827156845 * H1x1_5  +    -0.85772802964317 * H1x1_6
1256370   +          +     0.60984669129006 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 3.19986933046591 * H1x1_1 + -0.53665634063887 * H1x1_2 +
1.71172628690017 * H1x1_3 + -1.33944402954134 * H1x1_4 + -1.93533827156845 * H1x1_5 +
-0.85772802964317 * H1x1_6 + 0.60984669129006 * H1x1_7 ;
1256371   +   H2x1_2  =     -2.1883484075031 * H1x1_1  +     0.17578635446135 * H1x1_2
1256372   +          +    -1.79384950890077 * H1x1_3  +     0.88942614754722 * H1x1_4
1256373   +          +     0.41077752133457 * H1x1_5  +       0.509832853125 * H1x1_6
1256374   +          +    -0.28121910805072 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -2.1883484075031 * H1x1_1 + 0.17578635446135 * H1x1_2 +
-1.79384950890077 * H1x1_3 + 0.88942614754722 * H1x1_4 + 0.41077752133457 * H1x1_5 +
0.509832853125 * H1x1_6 + -0.28121910805072 * H1x1_7 ;
1256375   +   H2x1_3  =     0.86281981700921 * H1x1_1  +    -1.15482345233328 * H1x1_2
1256376   +          +     0.64743938802141 * H1x1_3  +     1.08117298211616 * H1x1_4
1256377   +          +      -0.363297480437 * H1x1_5  +    -1.58703254226713 * H1x1_6
1256378   +          +     0.54468402771449 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 0.86281981700921 * H1x1_1 + -1.15482345233328 * H1x1_2 +
0.64743938802141 * H1x1_3 + 1.08117298211616 * H1x1_4 + -0.363297480437 * H1x1_5 +
-1.58703254226713 * H1x1_6 + 0.54468402771449 * H1x1_7 ;
1256379   +   H2x1_4  =    -0.43420906601647 * H1x1_1  +     0.36485369627974 * H1x1_2
1256380   +          +    -2.42315183886716 * H1x1_3  +     0.22337896770247 * H1x1_4
1256381   +          +    -0.65684369622605 * H1x1_5  +     0.25211011207532 * H1x1_6
1256382   +          +     0.16704425645668 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -0.43420906601647 * H1x1_1 + 0.36485369627974 * H1x1_2 +
-2.42315183886716 * H1x1_3 + 0.22337896770247 * H1x1_4 + -0.65684369622605 * H1x1_5 +
0.25211011207532 * H1x1_6 + 0.16704425645668 * H1x1_7 ;
1256383   +   H2x1_5  =     0.61083333511105 * H1x1_1  +     1.11038871398931 * H1x1_2
1256384   +          +      0.4617674661653 * H1x1_3  +    -0.42039958365963 * H1x1_4
1256385   +          +    -1.37408000010678 * H1x1_5  +     0.03897439094411 * H1x1_6
1256386   +          +    -0.82592861674077 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = 0.61083333511105 * H1x1_1 + 1.11038871398931 * H1x1_2 +
0.4617674661653 * H1x1_3 + -0.42039958365963 * H1x1_4 + -1.37408000010678 * H1x1_5 +
0.03897439094411 * H1x1_6 + -0.82592861674077 * H1x1_7 ;
1256387   +   H2x1_6  =     1.30877201101082 * H1x1_1  +     1.55143256487324 * H1x1_2
1256388   +          +    -1.20237741381937 * H1x1_3  +       2.394122059946 * H1x1_4
1256389   +          +     1.83804290225468 * H1x1_5  +     0.83132818010396 * H1x1_6
1256390   +          +     1.18399340483001 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.30877201101082 * H1x1_1 + 1.55143256487324 * H1x1_2 +
-1.20237741381937 * H1x1_3 + 2.394122059946 * H1x1_4 + 1.83804290225468 * H1x1_5 +
0.83132818010396 * H1x1_6 + 1.18399340483001 * H1x1_7 ;
1256391   +   H2x1_1  = H2x1_1  +    -2.41276052972753 * H1x2_1
1256392   +          +     0.38601054263899 * H1x2_2  +     0.54498789581044 * H1x2_3
1256393   +          +    -0.55304188445569 * H1x2_4  +     0.29484780749868 * H1x2_5
1256394   +          +     0.44012580105051 * H1x2_6  +     0.43086375065556 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -2.41276052972753 * H1x2_1 + 0.38601054263899 * H1x2_2
+ 0.54498789581044 * H1x2_3 + -0.55304188445569 * H1x2_4 + 0.29484780749868 * H1x2_5 +
0.44012580105051 * H1x2_6 + 0.43086375065556 * H1x2_7 ;
1256395   +   H2x1_2  = H2x1_2  +    -1.03173201511154 * H1x2_1
1256396   +          +     0.62119574580435 * H1x2_2  +     1.71782745718335 * H1x2_3
1256397   +          +     0.05391903933014 * H1x2_4  +     1.52443015967438 * H1x2_5
1256398   +          +     0.22301831343286 * H1x2_6  +     0.66204940430171 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -1.03173201511154 * H1x2_1 + 0.62119574580435 * H1x2_2
+ 1.71782745718335 * H1x2_3 + 0.05391903933014 * H1x2_4 + 1.52443015967438 * H1x2_5 +
0.22301831343286 * H1x2_6 + 0.66204940430171 * H1x2_7 ;
1256399   +   H2x1_3  = H2x1_3  +     1.37871502475142 * H1x2_1
1256400   +          +     0.02099445181492 * H1x2_2  +     0.44720218317742 * H1x2_3
1256401   +          +    -1.29625929820096 * H1x2_4  +    -1.29169956389384 * H1x2_5
1256402   +          +    -0.21403739905139 * H1x2_6  +    -0.03075946378871 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + 1.37871502475142 * H1x2_1 + 0.02099445181492 * H1x2_2
+ 0.44720218317742 * H1x2_3 + -1.29625929820096 * H1x2_4 + -1.29169956389384 * H1x2_5 +
-0.21403739905139 * H1x2_6 + -0.03075946378871 * H1x2_7 ;
1256403   +   H2x1_4  = H2x1_4  +     1.94121727472617 * H1x2_1
1256404   +          +     0.23207290279299 * H1x2_2  +      0.3162872281134 * H1x2_3
1256405   +          +    -0.40199017937523 * H1x2_4  +     0.69294460110289 * H1x2_5
1256406   +          +    -1.00758272664059 * H1x2_6  +    -1.41698057960021 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 1.94121727472617 * H1x2_1 + 0.23207290279299 * H1x2_2
+ 0.3162872281134 * H1x2_3 + -0.40199017937523 * H1x2_4 + 0.69294460110289 * H1x2_5 +
-1.00758272664059 * H1x2_6 + -1.41698057960021 * H1x2_7 ;
1256407   +   H2x1_5  = H2x1_5  +     1.19546023857185 * H1x2_1
1256408   +          +    -1.00266987736442 * H1x2_2  +     0.71838447032796 * H1x2_3
1256409   +          +     1.70968347732204 * H1x2_4  +    -0.26894423802892 * H1x2_5
1256410   +          +    -0.61655519090213 * H1x2_6  +     2.21931491555405 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + 1.19546023857185 * H1x2_1 + -1.00266987736442 * H1x2_2
+ 0.71838447032796 * H1x2_3 + 1.70968347732204 * H1x2_4 + -0.26894423802892 * H1x2_5 +
-0.61655519090213 * H1x2_6 + 2.21931491555405 * H1x2_7 ;
1256411   +   H2x1_6  = H2x1_6  +    -0.48559886762231 * H1x2_1
1256412   +          +     0.93218274010134 * H1x2_2  +     0.23140948782865 * H1x2_3
1256413   +          +     0.72139310562219 * H1x2_4  +    -0.11143939877368 * H1x2_5
1256414   +          +     0.74022211257293 * H1x2_6  +      1.0449314568566 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + -0.48559886762231 * H1x2_1 + 0.93218274010134 * H1x2_2
+ 0.23140948782865 * H1x2_3 + 0.72139310562219 * H1x2_4 + -0.11143939877368 * H1x2_5 +
0.74022211257293 * H1x2_6 + 1.0449314568566 * H1x2_7 ;
1256415   +   H2x1_1  =     0.42952855003777 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 0.42952855003777 + H2x1_1 ;
1256416   +   H2x1_2  =     1.61752083096638 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.61752083096638 + H2x1_2 ;
1256417   +   H2x1_3  =    -0.71617788867723 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -0.71617788867723 + H2x1_3 ;
1256418   +   H2x1_4  =     0.39147546708847 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 0.39147546708847 + H2x1_4 ;
1256419   +   H2x1_5  =    -0.56259054185247 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -0.56259054185247 + H2x1_5 ;
1256420   +   H2x1_6  =     0.31857109159246 + H2x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 0.31857109159246 + H2x1_6 ;
1256421   +   H2x1_7  = 0;
MPRINT(EM_DIAGRAM):   H2x1_7 = 0;
1256422   +   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 , H2x1_6 , H2x1_7
1256423   +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 , H2x1_6 ,
H2x1_7 );
1256424   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1256425   +   H2x1_1  = EXP(H2x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_1 = EXP(H2x1_1 - _MAX_);
1256426   +   _SUM_ = _SUM_ + H2x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_1 ;
1256427   +   H2x1_2  = EXP(H2x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_2 = EXP(H2x1_2 - _MAX_);
1256428   +   _SUM_ = _SUM_ + H2x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_2 ;
1256429   +   H2x1_3  = EXP(H2x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_3 = EXP(H2x1_3 - _MAX_);
1256430   +   _SUM_ = _SUM_ + H2x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_3 ;
1256431   +   H2x1_4  = EXP(H2x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_4 = EXP(H2x1_4 - _MAX_);
1256432   +   _SUM_ = _SUM_ + H2x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_4 ;
1256433   +   H2x1_5  = EXP(H2x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_5 = EXP(H2x1_5 - _MAX_);
1256434   +   _SUM_ = _SUM_ + H2x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_5 ;
1256435   +   H2x1_6  = EXP(H2x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_6 = EXP(H2x1_6 - _MAX_);
1256436   +   _SUM_ = _SUM_ + H2x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_6 ;
1256437   +   H2x1_7  = EXP(H2x1_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_7 = EXP(H2x1_7 - _MAX_);
1256438   +   _SUM_ = _SUM_ + H2x1_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_7 ;
1256439   +   H2x1_1  = H2x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 / _SUM_;
1256440   +   H2x1_2  = H2x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 / _SUM_;
1256441   +   H2x1_3  = H2x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 / _SUM_;
1256442   +   H2x1_4  = H2x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 / _SUM_;
1256443   +   H2x1_5  = H2x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 / _SUM_;
1256444   +   H2x1_6  = H2x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 / _SUM_;
1256445   +   H2x1_7  = H2x1_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_7 = H2x1_7 / _SUM_;
1256446   +END;
MPRINT(EM_DIAGRAM):   END;
1256447   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1256448   +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
1256449   +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
1256450   +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
1256451   +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
1256452   +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
1256453   +   H2x1_6  = .;
MPRINT(EM_DIAGRAM):   H2x1_6 = .;
1256454   +   H2x1_7  = .;
MPRINT(EM_DIAGRAM):   H2x1_7 = .;
1256455   +END;
MPRINT(EM_DIAGRAM):   END;
1256456   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1256457   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1256458   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1256459   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1256460   +   P_DepVar1  =     25.2027326018714 * H2x1_1  +    -8.05331379419082 * H2x1_2
1256461   +          +     2.64798805383536 * H2x1_3  +    -4.52736775271107 * H2x1_4
1256462   +          +     6.71812741736202 * H2x1_5  +    -12.2785047473885 * H2x1_6
1256463   +          +    -4.41291972336422 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 25.2027326018714 * H2x1_1 + -8.05331379419082 * H2x1_2 +
2.64798805383536 * H2x1_3 + -4.52736775271107 * H2x1_4 + 6.71812741736202 * H2x1_5 +
-12.2785047473885 * H2x1_6 + -4.41291972336422 * H2x1_7 ;
1256464   +   P_DepVar1  =     1.22134962002326 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.22134962002326 + P_DepVar1 ;
1256465   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1256466   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1256467   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1256468   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1256469   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1256470   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1256471   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1256472   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1256473   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1256474   +END;
MPRINT(EM_DIAGRAM):   END;
1256475   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1256476   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1256477   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1256478   +END;
MPRINT(EM_DIAGRAM):   END;
1256479   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1256480   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1256481   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1256482   +END;
MPRINT(EM_DIAGRAM):   END;
1256483   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1256484   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1256485   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1256486   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1256487   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1256488   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1256489   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1256490   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1256491   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1256492   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1256493   +END;
MPRINT(EM_DIAGRAM):   END;
1256494   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1256495   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1256496   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1256497   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1256498    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1256499    quit;
1256500    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1256501    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1256502    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1256503    retain ID 2 Node "AutoNeural12";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural12";
1256504    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1256505    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 7460 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 7460 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1256506    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1256507    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1256508    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 7460 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 7460 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1256509    proc sort data=EMWS8.AutoNeural12_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural12_variableset out=_temp2(keep=NAME
CREATOR);
1256510    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1256511    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL12_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1256512    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1256513    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1256514    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1256515    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1256516    proc contents data=EMWS8.AutoNeural12_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural12_train out=_meta(keep=NAME) noprint;
1256517    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 74 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1256518    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1256519    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1256520    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 74 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 74 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1256521    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1256522    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1256523    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1256524    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 74 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 74 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1256525    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1256526    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1256526  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 3727 rows and 5 columns.
 
1256527    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1256528    proc append base=EMWS8.Ensmbl46_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl46_FCMP data=_tempx;
1256529    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL46_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 3727 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL46_FCMP has 3727 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1256530    filename _pref
1256530  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1256531    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1256532    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1256533   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1256534   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1256535   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1256536   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1256537   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1256538   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1256539    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1256540    quit;
1256541    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1256542    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1256543    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1256544    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1256545    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1256546    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1256547    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1256548    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1256549    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1256550    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1256551    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1256552    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1256553    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1256554    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1256555    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1256556    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
1256557    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1256558    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1256559    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1256560    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1256561    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1256562    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1256563    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1256564    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1256565    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1256566    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1256567    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1256567  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
1256568    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1256569    proc append base=EMWS8.Ensmbl46_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl46_FCMP data=_tempx;
1256570    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL46_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL46_FCMP has 3731 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1256571    filename _pref
1256571  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1256572    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1256573    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1256574   +
1256575   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1256576   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1256576  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1256577   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1256578   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1256579   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1256580   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1256581   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1256582    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1256583    quit;
1256584    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1256585    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1256586    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1256587    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1256588    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1256589    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1256590    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1256591    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1256592    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1256593    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1256594    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1256595    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1256596    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1256597    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1256598    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1256599    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1256600    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1256601    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1256602    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1256603    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1256604    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1256605    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1256606    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1256607    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1256608    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1256609    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1256610    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1256610  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
1256611    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1256612    proc append base=EMWS8.Ensmbl46_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl46_FCMP data=_tempx;
1256613    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL46_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL46_FCMP has 3770 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1256614    filename _pref
1256614  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1256615    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1256616    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1256617   +
1256618   +
1256619   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1256620   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1256621   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1256622   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1256623   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1256624   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1256625   +
1256626   +
1256627   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1256628   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1256629   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1256630   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1256631   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1256632   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1256633   +
1256634   +
1256635   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1256636   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1256637   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1256638   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1256639   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1256640   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1256641   +
1256642   +
1256643   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1256644   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1256645   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1256646   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1256647   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1256648   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1256649   +
1256650   +
1256651   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1256652   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1256653   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1256654   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1256655   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1256656   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1256657   +
1256658   +
1256659   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1256660   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1256661   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1256662   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1256663   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1256664   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1256665   +
1256666   +
1256667   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1256668   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1256669   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1256670   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1256671   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1256672   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1256673   +
1256674   +
1256675   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1256676   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1256677   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1256678   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1256679   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1256680   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1256681   +if
1256682   +_FILTERNORM1 not in ( '.')
1256683   + and
1256684   +_FILTERNORM2 not in ( '.')
1256685   + and
1256686   +_FILTERNORM3 not in ( '.')
1256687   + and
1256688   +_FILTERNORM4 not in ( '.')
1256689   + and
1256690   +_FILTERNORM5 not in ( '.')
1256691   + and
1256692   +_FILTERNORM6 not in ( '.')
1256693   + and
1256694   +_FILTERNORM7 not in ( ' ')
1256695   + and
1256696   +_FILTERNORM8 not in ( ' ')
1256697   +and
1256698   +( Dt_Customer ne .)
1256699   +and ( Income ne . and (Income<=107000))
1256700   +and ( Kidhome ne .)
1256701   +and ( MntFishProducts ne .)
1256702   +and ( MntFruits ne .)
1256703   +and ( MntGoldProds ne .)
1256704   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1256705   +and ( MntSweetProducts ne .)
1256706   +and ( MntWines ne .)
1256707   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1256708   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1256709   +and ( NumStorePurchases ne .)
1256710   +and ( NumWebPurchases ne .)
1256711   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1256712   +and ( Recency ne .)
1256713   +and ( Teenhome ne .)
1256714   +and ( Year_Birth ne .)
1256715   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
1256716   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1256717   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1256718   +end;
MPRINT(EM_DIAGRAM):   end;
1256719   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1256720   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1256721    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1256722    quit;
1256723    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1256724    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1256725    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1256726    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1256727    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1256728    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1256729    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1256730    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1256731    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1256732    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1256733    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1256734    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1256735    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1256736    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1256737    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1256738    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1256739    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1256740    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1256741    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1256742    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1256743    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1256744    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1256745    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1256746    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1256747    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1256748    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1256749    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1256749  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
1256750    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1256751    proc append base=EMWS8.Ensmbl46_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl46_FCMP data=_tempx;
1256752    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL46_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL46_FCMP has 3836 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1256753    %macro varDept(fcmpdata=,id=);
1256754    %global nobs&id scoreFlag&id;
1256755    %let scoreFlag&id = 0;
1256756    %if &id=1 or ^&fcmpStart %then %do;
1256757    proc sort data=&fcmpdata out=_temp&id nodupkey;
1256758    by NAME;
1256759    where id=&id and LHS in( %let j=1;
1256760    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1256761    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1256762    "&var" %let j = %eval(&j+1);
1256763    %end;
1256764    );
1256765    run;
1256766    %let dsid = %sysfunc(open(_temp&id));
1256767    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1256768    %let dsid = %sysfunc(close(&dsid));
1256769    %if &&nobs&id %then %do;
1256770    %let scoreFlag&id = 1;
1256771    %let fcmpStart = 1;
1256772    %end;
1256773    %else %let fcmpStart = 0;
1256774    %end;
1256775    %else %do;
1256776    proc sort data=&fcmpdata out=_tempid;
1256777    where id=&id;
1256778    by LHS;
1256779    run;
1256780    %let dsid = %sysfunc(open(_tempid));
1256781    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1256782    %let dsid = %sysfunc(close(&dsid));
1256783    %if ^&&nobs&id %then %do;
1256784    proc datasets lib=work nolist;
1256785    delete _tempid;
1256786    run;
1256787    quit;
1256788    %end;
1256789    %else %do;
1256790    data _tempAll;
1256791    set %let j=%eval(&id-1);
1256792    %do x=1 %to &j;
1256793    %if &&nobs&x %then %do;
1256794    _temp&x %end;
1256795    %end;
1256796    ;
1256797    run;
1256798    proc sql;
1256799    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1256799  ! work._tempid p2 where p.name=p2.lhs;
1256800    quit;
1256801    data _temp&id;
1256802    set _temp&id;
1256803    where LHS ne '' and NAME ne '' and Node ne '';
1256804    run;
1256805    proc datasets lib=work nolist;
1256806    delete _tempAll;
1256807    run;
1256808    %let dsid = %sysfunc(open(_temp&id));
1256809    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1256810    %let dsid = %sysfunc(close(&dsid));
1256811    %if ^&&nobs&id %then %do;
1256812    proc datasets lib=work nolist;
1256813    delete _temp&id;
1256814    run;
1256815    quit;
1256816    %end;
1256817    %else %do;
1256818    %let scoreFlag&id = 1;
1256819    data _temp&id;
1256820    set _temp&id;
1256821    where LHS ne NAME and node ne '';
1256822    run;
1256823    %let dsid = %sysfunc(open(_temp&id));
1256824    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1256825    %let dsid = %sysfunc(close(&dsid));
1256826    %if ^&&nobs&id %then %do;
1256827    proc datasets lib=work nolist;
1256828    delete _temp&id;
1256829    run;
1256830    quit;
1256831    %end;
1256832    %else %do;
1256833    proc sort data=_temp&id nodupkey;
1256834    by LHS NAME;
1256835    run;
1256836    %end;
1256837    %end;
1256838    %end;
1256839    %end;
1256840    %mend varDept;
1256841    %macro optCode(outdata=fcmpdata);
1256842    %global fcmpStart;
1256843    %let fcmpStart = 0;
1256844    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1256845    %let NumNodes=9;
1256846    %do k=1 %to &NumNodes;
1256847    %vardept(fcmpdata=&outdata, id=&k);
1256848    %end;
1256849    %mend optCode;
1256850    %optcode(outData=EMWS8.Ensmbl46_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl46_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL46_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl46_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 197 observations read from the data set EMWS8.ENSMBL46_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 142 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 55 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl46_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL46_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl46_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL46_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl46_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL46_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 55 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 55 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl46_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL46_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 55 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 59 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl46_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL46_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 55 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 98 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl46_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL46_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl46_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL46_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
The SAS System
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
1256851    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1256852    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1256853    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1256854    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1256855    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1256856    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1256857    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1256858    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1256859    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1256860    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
1256860  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.
 
1256861    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1256862    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
1256863    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
1256864    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1256865    filename _pref
1256865  ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural11\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural11\EMPUBLISHSCORE.sas";
1256866    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1256867    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural11\EMPUBLISHSCORE.sas.
1256868   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1256869   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1256870   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1256871   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1256872   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1256873   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1256874   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1256875   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1256876   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1256877   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1256878   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1256879   +LENGTH _WARN_ $4
1256880   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
1256881   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1256882   +
1256883   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1256884   +
1256885   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1256886   +
1256887   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1256888   +
1256889   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1256890   +
1256891   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1256892   +
1256893   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1256894   +
1256895   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1256896   +
1256897   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1256898   +
1256899   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1256900   +
1256901   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1256902   +
1256903   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1256904   +
1256905   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1256906   +
1256907   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1256908   +
1256909   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1256910   +
1256911   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1256912   +
1256913   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1256914   +
1256915   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1256916   +
1256917   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1256918   +
1256919   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1256920   +
1256921   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1256922   +
1256923   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1256924   +
1256925   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1256926   +
1256927   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1256928   +
1256929   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1256930   +
1256931   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1256932   +
1256933   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1256934   +
1256935   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1256936   +
1256937   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1256938   +
1256939   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1256940   +
1256941   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1256942   +
1256943   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1256944   +
1256945   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1256946   +
1256947   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1256948   +
1256949   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1256950   +
1256951   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1256952   +
1256953   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1256954   +
1256955   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1256956   +
1256957   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
1256958   +
1256959   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
1256960   +
1256961   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
1256962   +
1256963   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
1256964   +
1256965   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
1256966   +
1256967   +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
1256968   +
1256969   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
1256970   +
1256971   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
1256972   +
1256973   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
1256974   +
1256975   +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
1256976   +
1256977   +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
1256978   +
1256979   +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
1256980   +
1256981   +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
1256982   +
1256983   +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
1256984   +
1256985   +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
1256986   +
1256987   +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
1256988   +
1256989   +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
1256990   +
1256991   +      label H2x1_6 = 'Hidden: H2x1_=6' ;
MPRINT(EM_DIAGRAM):   label H2x1_6 = 'Hidden: H2x1_=6' ;
1256992   +
1256993   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1256994   +
1256995   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1256996   +
1256997   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1256998   +
1256999   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1257000   +
1257001   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1257002   +
1257003   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1257004   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1257005   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1257006   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1257007   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1257008   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1257009   +end;
MPRINT(EM_DIAGRAM):   end;
1257010   +else do;
MPRINT(EM_DIAGRAM):   else do;
1257011   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1257012   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1257013   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1257014   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1257015   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1257016   +   end;
MPRINT(EM_DIAGRAM):   end;
1257017   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1257018   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1257019   +   end;
MPRINT(EM_DIAGRAM):   end;
1257020   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1257021   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1257022   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1257023   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1257024   +   end;
MPRINT(EM_DIAGRAM):   end;
1257025   +end;
MPRINT(EM_DIAGRAM):   end;
1257026   +
1257027   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1257028   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1257029   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1257030   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1257031   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1257032   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1257033   +end;
MPRINT(EM_DIAGRAM):   end;
1257034   +else do;
MPRINT(EM_DIAGRAM):   else do;
1257035   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1257036   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1257037   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1257038   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1257039   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1257040   +   end;
MPRINT(EM_DIAGRAM):   end;
1257041   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1257042   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1257043   +   end;
MPRINT(EM_DIAGRAM):   end;
1257044   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1257045   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1257046   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1257047   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1257048   +   end;
MPRINT(EM_DIAGRAM):   end;
1257049   +end;
MPRINT(EM_DIAGRAM):   end;
1257050   +
1257051   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1257052   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1257053   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1257054   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1257055   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1257056   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1257057   +end;
MPRINT(EM_DIAGRAM):   end;
1257058   +else do;
MPRINT(EM_DIAGRAM):   else do;
1257059   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1257060   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1257061   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1257062   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1257063   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1257064   +   end;
MPRINT(EM_DIAGRAM):   end;
1257065   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1257066   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1257067   +   end;
MPRINT(EM_DIAGRAM):   end;
1257068   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1257069   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1257070   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1257071   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1257072   +   end;
MPRINT(EM_DIAGRAM):   end;
1257073   +end;
MPRINT(EM_DIAGRAM):   end;
1257074   +
1257075   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1257076   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1257077   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1257078   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1257079   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1257080   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1257081   +end;
MPRINT(EM_DIAGRAM):   end;
1257082   +else do;
MPRINT(EM_DIAGRAM):   else do;
1257083   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1257084   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1257085   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1257086   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1257087   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1257088   +   end;
MPRINT(EM_DIAGRAM):   end;
1257089   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1257090   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1257091   +   end;
MPRINT(EM_DIAGRAM):   end;
1257092   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1257093   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1257094   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1257095   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1257096   +   end;
MPRINT(EM_DIAGRAM):   end;
1257097   +end;
MPRINT(EM_DIAGRAM):   end;
1257098   +
1257099   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1257100   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1257101   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1257102   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1257103   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1257104   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1257105   +end;
MPRINT(EM_DIAGRAM):   end;
1257106   +else do;
MPRINT(EM_DIAGRAM):   else do;
1257107   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1257108   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1257109   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1257110   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1257111   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1257112   +   end;
MPRINT(EM_DIAGRAM):   end;
1257113   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1257114   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1257115   +   end;
MPRINT(EM_DIAGRAM):   end;
1257116   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1257117   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1257118   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1257119   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1257120   +   end;
MPRINT(EM_DIAGRAM):   end;
1257121   +end;
MPRINT(EM_DIAGRAM):   end;
1257122   +
1257123   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1257124   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1257125   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1257126   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1257127   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1257128   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1257129   +end;
MPRINT(EM_DIAGRAM):   end;
1257130   +else do;
MPRINT(EM_DIAGRAM):   else do;
1257131   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1257132   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1257133   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1257134   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1257135   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1257136   +   end;
MPRINT(EM_DIAGRAM):   end;
1257137   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1257138   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1257139   +   end;
MPRINT(EM_DIAGRAM):   end;
1257140   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1257141   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1257142   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1257143   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1257144   +   end;
MPRINT(EM_DIAGRAM):   end;
1257145   +end;
MPRINT(EM_DIAGRAM):   end;
1257146   +
1257147   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1257148   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1257149   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1257150   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1257151   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1257152   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1257153   +end;
MPRINT(EM_DIAGRAM):   end;
1257154   +else do;
MPRINT(EM_DIAGRAM):   else do;
1257155   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1257156   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1257157   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1257158   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1257159   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1257160   +   end;
MPRINT(EM_DIAGRAM):   end;
1257161   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1257162   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1257163   +   end;
MPRINT(EM_DIAGRAM):   end;
1257164   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1257165   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1257166   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1257167   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1257168   +   end;
MPRINT(EM_DIAGRAM):   end;
1257169   +end;
MPRINT(EM_DIAGRAM):   end;
1257170   +
1257171   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1257172   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
1257173   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1257174   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1257175   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1257176   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1257177   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1257178   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1257179   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1257180   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1257181   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1257182   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1257183   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1257184   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1257185   +end;
MPRINT(EM_DIAGRAM):   end;
1257186   +else do;
MPRINT(EM_DIAGRAM):   else do;
1257187   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1257188   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1257189   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1257190   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1257191   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1257192   +   end;
MPRINT(EM_DIAGRAM):   end;
1257193   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1257194   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1257195   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1257196   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1257197   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1257198   +   end;
MPRINT(EM_DIAGRAM):   end;
1257199   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1257200   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1257201   +   end;
MPRINT(EM_DIAGRAM):   end;
1257202   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1257203   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1257204   +   end;
MPRINT(EM_DIAGRAM):   end;
1257205   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1257206   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1257207   +   end;
MPRINT(EM_DIAGRAM):   end;
1257208   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1257209   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1257210   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1257211   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1257212   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1257213   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1257214   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1257215   +   end;
MPRINT(EM_DIAGRAM):   end;
1257216   +end;
MPRINT(EM_DIAGRAM):   end;
1257217   +
1257218   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1257219   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1257220   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
1257221   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1257222   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1257223   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1257224   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1257225   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1257226   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1257227   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1257228   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1257229   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1257230   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1257231   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1257232   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1257233   +end;
MPRINT(EM_DIAGRAM):   end;
1257234   +else do;
MPRINT(EM_DIAGRAM):   else do;
1257235   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1257236   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1257237   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1257238   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1257239   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1257240   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1257241   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1257242   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1257243   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1257244   +         end;
MPRINT(EM_DIAGRAM):   end;
1257245   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1257246   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1257247   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1257248   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1257249   +            end;
MPRINT(EM_DIAGRAM):   end;
1257250   +         end;
MPRINT(EM_DIAGRAM):   end;
1257251   +      end;
MPRINT(EM_DIAGRAM):   end;
1257252   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1257253   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1257254   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1257255   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1257256   +         end;
MPRINT(EM_DIAGRAM):   end;
1257257   +      end;
MPRINT(EM_DIAGRAM):   end;
1257258   +   end;
MPRINT(EM_DIAGRAM):   end;
1257259   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1257260   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1257261   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1257262   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1257263   +      end;
MPRINT(EM_DIAGRAM):   end;
1257264   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1257265   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1257266   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1257267   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1257268   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1257269   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1257270   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1257271   +         end;
MPRINT(EM_DIAGRAM):   end;
1257272   +      end;
MPRINT(EM_DIAGRAM):   end;
1257273   +   end;
MPRINT(EM_DIAGRAM):   end;
1257274   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1257275   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1257276   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1257277   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1257278   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1257279   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1257280   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1257281   +   end;
MPRINT(EM_DIAGRAM):   end;
1257282   +end;
MPRINT(EM_DIAGRAM):   end;
1257283   +
1257284   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1257285   +*** Checking missing input Interval
1257286   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1257287   +
1257288   +IF NMISS(
1257289   +   AcceptedCmpTotal ,
1257290   +   Age ,
1257291   +   Frq ,
1257292   +   Income ,
1257293   +   Kidhome ,
1257294   +   Mnt ,
1257295   +   MntFishProducts ,
1257296   +   MntFruits ,
1257297   +   MntGoldProds ,
1257298   +   MntMeatProducts ,
1257299   +   MntSweetProducts ,
1257300   +   MntWines ,
1257301   +   MonthsAsCustomer ,
1257302   +   NumCatalogPurchases ,
1257303   +   NumDealsPurchases ,
1257304   +   NumDistPurchases ,
1257305   +   NumStorePurchases ,
1257306   +   NumWebPurchases ,
1257307   +   NumWebVisitsMonth ,
1257308   +   RFMstat ,
1257309   +   RMntFrq ,
1257310   +   Recency ,
1257311   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
1257312   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1257313   +
1257314   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1257315   +END;
MPRINT(EM_DIAGRAM):   END;
1257316   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1257317   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
1257318   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1257319   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1257320   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1257321   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1257322   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1257323   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1257324   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1257325   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1257326   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1257327   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1257328   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1257329   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1257330   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1257331   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1257332   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1257333   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1257334   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1257335   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1257336   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1257337   +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
1257338   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 *
MonthsAsCustomer ;
1257339   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1257340   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1257341   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1257342   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1257343   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1257344   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1257345   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1257346   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1257347   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1257348   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1257349   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1257350   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1257351   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1257352   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1257353   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1257354   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1257355   +END;
MPRINT(EM_DIAGRAM):   END;
1257356   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1257357   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1257358   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1257359   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1257360   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1257361   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1257362   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1257363   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1257364   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1257365   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1257366   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1257367   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1257368   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1257369   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1257370   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1257371   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1257372   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1257373   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1257374   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1257375   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1257376   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1257377   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1257378   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1257379   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1257380   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1257381   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1257382   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1257383   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1257384   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1257385   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1257386   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1257387   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1257388   +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
1257389   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 *
MonthsAsCustomer ;
1257390   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1257391   +   ELSE S_NumCatalogPurchases
1257392   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1257393   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1257394   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1257395   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1257396   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1257397   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1257398   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1257399   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1257400   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1257401   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1257402   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1257403   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1257404   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1257405   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1257406   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1257407   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1257408   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1257409   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1257410   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1257411   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1257412   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1257413   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1257414   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1257415   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1257416   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1257417   +END;
MPRINT(EM_DIAGRAM):   END;
1257418   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1257419   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
1257420   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1257421   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1257422   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
1257423   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1257424   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1257425   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
1257426   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1257427   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1257428   +   H1x1_1  =    -0.26269469382558 * S_AcceptedCmpTotal
1257429   +          +    -0.06270768091854 * S_Age  +    -0.71225988503068 * S_Frq
1257430   +          +    -0.19030550341755 * S_Income  +    -0.74001834753219 *
1257431   +        S_Kidhome  +    -0.80050230513362 * S_Mnt  +    -0.70546855957287 *
1257432   +        S_MntFishProducts  +    -0.57876563074872 * S_MntFruits
1257433   +          +    -0.00210300489306 * S_MntGoldProds  +     2.60078237485589 *
1257434   +        S_MntMeatProducts  +     -0.9886407516441 * S_MntSweetProducts
1257435   +          +    -2.97488547819955 * S_MntWines  +    -0.61277940059348 *
1257436   +        S_MonthsAsCustomer  +    -0.00096247683063 * S_NumCatalogPurchases
1257437   +          +     0.89422627895323 * S_NumDealsPurchases
1257438   +          +    -0.13304125929765 * S_NumDistPurchases
1257439   +          +    -1.04568442570811 * S_NumStorePurchases
1257440   +          +    -0.28677765126751 * S_NumWebPurchases
1257441   +          +      1.2327638737509 * S_NumWebVisitsMonth
1257442   +          +     0.67421347247009 * S_RFMstat  +     -0.6166808079836 *
1257443   +        S_RMntFrq  +    -0.86930969765816 * S_Recency
1257444   +          +     0.33815651609216 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.26269469382558 * S_AcceptedCmpTotal + -0.06270768091854 *
S_Age + -0.71225988503068 * S_Frq + -0.19030550341755 * S_Income + -0.74001834753219 *
S_Kidhome + -0.80050230513362 * S_Mnt + -0.70546855957287 * S_MntFishProducts +
-0.57876563074872 * S_MntFruits + -0.00210300489306 * S_MntGoldProds + 2.60078237485589 *
S_MntMeatProducts + -0.9886407516441 * S_MntSweetProducts + -2.97488547819955 * S_MntWines +
-0.61277940059348 * S_MonthsAsCustomer + -0.00096247683063 * S_NumCatalogPurchases +
0.89422627895323 * S_NumDealsPurchases + -0.13304125929765 * S_NumDistPurchases +
-1.04568442570811 * S_NumStorePurchases + -0.28677765126751 * S_NumWebPurchases +
1.2327638737509 * S_NumWebVisitsMonth + 0.67421347247009 * S_RFMstat + -0.6166808079836 *
S_RMntFrq + -0.86930969765816 * S_Recency + 0.33815651609216 * S_Teenhome ;
1257445   +   H1x1_2  =     0.55568777293496 * S_AcceptedCmpTotal
1257446   +          +     0.80213442721076 * S_Age  +     0.34635060456486 * S_Frq
1257447   +          +    -0.74174636901916 * S_Income  +    -0.01217809906509 *
1257448   +        S_Kidhome  +     0.26876993353057 * S_Mnt  +     0.04779395124841 *
1257449   +        S_MntFishProducts  +    -0.48668668697685 * S_MntFruits
1257450   +          +    -0.53984501210781 * S_MntGoldProds  +     2.66892669248667 *
1257451   +        S_MntMeatProducts  +     0.48696031818599 * S_MntSweetProducts
1257452   +          +    -1.59625933837852 * S_MntWines  +     0.06275925418664 *
1257453   +        S_MonthsAsCustomer  +     0.97240339275782 * S_NumCatalogPurchases
1257454   +          +     0.04224590196535 * S_NumDealsPurchases
1257455   +          +     0.76554742700113 * S_NumDistPurchases
1257456   +          +    -0.49155496870812 * S_NumStorePurchases
1257457   +          +     0.59606812744403 * S_NumWebPurchases
1257458   +          +     1.86809286276405 * S_NumWebVisitsMonth
1257459   +          +    -0.40257502974261 * S_RFMstat  +    -1.46120938073597 *
1257460   +        S_RMntFrq  +    -2.09222283465666 * S_Recency
1257461   +          +    -0.29369632363913 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.55568777293496 * S_AcceptedCmpTotal + 0.80213442721076 *
S_Age + 0.34635060456486 * S_Frq + -0.74174636901916 * S_Income + -0.01217809906509 *
S_Kidhome + 0.26876993353057 * S_Mnt + 0.04779395124841 * S_MntFishProducts +
-0.48668668697685 * S_MntFruits + -0.53984501210781 * S_MntGoldProds + 2.66892669248667 *
S_MntMeatProducts + 0.48696031818599 * S_MntSweetProducts + -1.59625933837852 * S_MntWines +
0.06275925418664 * S_MonthsAsCustomer + 0.97240339275782 * S_NumCatalogPurchases +
0.04224590196535 * S_NumDealsPurchases + 0.76554742700113 * S_NumDistPurchases +
-0.49155496870812 * S_NumStorePurchases + 0.59606812744403 * S_NumWebPurchases +
1.86809286276405 * S_NumWebVisitsMonth + -0.40257502974261 * S_RFMstat + -1.46120938073597 *
S_RMntFrq + -2.09222283465666 * S_Recency + -0.29369632363913 * S_Teenhome ;
1257462   +   H1x1_3  =    -1.40689454675752 * S_AcceptedCmpTotal
1257463   +          +     0.22713382517751 * S_Age  +     0.51688429566863 * S_Frq
1257464   +          +    -0.07045670111356 * S_Income  +     1.10344455539307 *
1257465   +        S_Kidhome  +     0.24846532877416 * S_Mnt  +       0.663861249099 *
1257466   +        S_MntFishProducts  +     0.91527393572467 * S_MntFruits
1257467   +          +    -0.30189545909263 * S_MntGoldProds  +    -0.72774030731928 *
1257468   +        S_MntMeatProducts  +     0.66425565932635 * S_MntSweetProducts
1257469   +          +     0.55381627079618 * S_MntWines  +      0.6475533846661 *
1257470   +        S_MonthsAsCustomer  +    -1.28926334887526 * S_NumCatalogPurchases
1257471   +          +    -0.04866536993486 * S_NumDealsPurchases
1257472   +          +    -0.53535979020214 * S_NumDistPurchases
1257473   +          +     2.20634071253676 * S_NumStorePurchases
1257474   +          +      0.6164564989007 * S_NumWebPurchases
1257475   +          +    -0.43396314395263 * S_NumWebVisitsMonth
1257476   +          +     0.05322242552204 * S_RFMstat  +     0.56410623855957 *
1257477   +        S_RMntFrq  +     2.37293441098349 * S_Recency
1257478   +          +     1.20608077690677 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -1.40689454675752 * S_AcceptedCmpTotal + 0.22713382517751 *
S_Age + 0.51688429566863 * S_Frq + -0.07045670111356 * S_Income + 1.10344455539307 * S_Kidhome
+ 0.24846532877416 * S_Mnt + 0.663861249099 * S_MntFishProducts + 0.91527393572467 *
S_MntFruits + -0.30189545909263 * S_MntGoldProds + -0.72774030731928 * S_MntMeatProducts +
0.66425565932635 * S_MntSweetProducts + 0.55381627079618 * S_MntWines + 0.6475533846661 *
S_MonthsAsCustomer + -1.28926334887526 * S_NumCatalogPurchases + -0.04866536993486 *
S_NumDealsPurchases + -0.53535979020214 * S_NumDistPurchases + 2.20634071253676 *
S_NumStorePurchases + 0.6164564989007 * S_NumWebPurchases + -0.43396314395263 *
S_NumWebVisitsMonth + 0.05322242552204 * S_RFMstat + 0.56410623855957 * S_RMntFrq +
2.37293441098349 * S_Recency + 1.20608077690677 * S_Teenhome ;
1257479   +   H1x1_4  =      0.8853369558336 * S_AcceptedCmpTotal
1257480   +          +    -0.02447538128281 * S_Age  +    -0.42850426895609 * S_Frq
1257481   +          +     2.31972189756282 * S_Income  +    -1.82782672643583 *
1257482   +        S_Kidhome  +     -0.0790436830894 * S_Mnt  +     0.24407556387791 *
1257483   +        S_MntFishProducts  +     0.21000125209328 * S_MntFruits
1257484   +          +     -0.0538417400508 * S_MntGoldProds  +     0.76422967678518 *
1257485   +        S_MntMeatProducts  +     0.14352092131967 * S_MntSweetProducts
1257486   +          +    -0.47732426074136 * S_MntWines  +      0.2881736828404 *
1257487   +        S_MonthsAsCustomer  +     1.08614742409725 * S_NumCatalogPurchases
1257488   +          +     1.37461255707863 * S_NumDealsPurchases
1257489   +          +    -0.17684775000818 * S_NumDistPurchases
1257490   +          +    -0.62755623855535 * S_NumStorePurchases
1257491   +          +    -1.46551649022657 * S_NumWebPurchases
1257492   +          +     3.35784247878638 * S_NumWebVisitsMonth
1257493   +          +      0.0205421093374 * S_RFMstat  +     0.02151146396087 *
1257494   +        S_RMntFrq  +    -2.61971612923471 * S_Recency
1257495   +          +    -1.74888814570254 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.8853369558336 * S_AcceptedCmpTotal + -0.02447538128281 *
S_Age + -0.42850426895609 * S_Frq + 2.31972189756282 * S_Income + -1.82782672643583 *
S_Kidhome + -0.0790436830894 * S_Mnt + 0.24407556387791 * S_MntFishProducts + 0.21000125209328
* S_MntFruits + -0.0538417400508 * S_MntGoldProds + 0.76422967678518 * S_MntMeatProducts +
0.14352092131967 * S_MntSweetProducts + -0.47732426074136 * S_MntWines + 0.2881736828404 *
S_MonthsAsCustomer + 1.08614742409725 * S_NumCatalogPurchases + 1.37461255707863 *
S_NumDealsPurchases + -0.17684775000818 * S_NumDistPurchases + -0.62755623855535 *
S_NumStorePurchases + -1.46551649022657 * S_NumWebPurchases + 3.35784247878638 *
S_NumWebVisitsMonth + 0.0205421093374 * S_RFMstat + 0.02151146396087 * S_RMntFrq +
-2.61971612923471 * S_Recency + -1.74888814570254 * S_Teenhome ;
1257496   +   H1x1_5  =    -1.18321492018094 * S_AcceptedCmpTotal
1257497   +          +    -0.08221927436186 * S_Age  +    -0.42965792034093 * S_Frq
1257498   +          +    -0.82515640369651 * S_Income  +     -0.7955159282868 *
1257499   +        S_Kidhome  +    -0.24623211609742 * S_Mnt  +     1.14929640730402 *
1257500   +        S_MntFishProducts  +     0.37195406994279 * S_MntFruits
1257501   +          +    -0.11860313293867 * S_MntGoldProds  +     -5.1642360901608 *
1257502   +        S_MntMeatProducts  +     0.30315380386519 * S_MntSweetProducts
1257503   +          +     2.66130913318508 * S_MntWines  +    -0.35226665860471 *
1257504   +        S_MonthsAsCustomer  +    -1.90883979010829 * S_NumCatalogPurchases
1257505   +          +    -0.76256677907121 * S_NumDealsPurchases
1257506   +          +    -0.31591571751692 * S_NumDistPurchases
1257507   +          +      0.0506832614089 * S_NumStorePurchases
1257508   +          +      1.4636796923764 * S_NumWebPurchases
1257509   +          +     0.37743519705036 * S_NumWebVisitsMonth
1257510   +          +    -0.69857477383618 * S_RFMstat  +    -0.87851464788137 *
1257511   +        S_RMntFrq  +     0.16854775832723 * S_Recency
1257512   +          +     0.71697705359003 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.18321492018094 * S_AcceptedCmpTotal + -0.08221927436186 *
S_Age + -0.42965792034093 * S_Frq + -0.82515640369651 * S_Income + -0.7955159282868 *
S_Kidhome + -0.24623211609742 * S_Mnt + 1.14929640730402 * S_MntFishProducts +
0.37195406994279 * S_MntFruits + -0.11860313293867 * S_MntGoldProds + -5.1642360901608 *
S_MntMeatProducts + 0.30315380386519 * S_MntSweetProducts + 2.66130913318508 * S_MntWines +
-0.35226665860471 * S_MonthsAsCustomer + -1.90883979010829 * S_NumCatalogPurchases +
-0.76256677907121 * S_NumDealsPurchases + -0.31591571751692 * S_NumDistPurchases +
0.0506832614089 * S_NumStorePurchases + 1.4636796923764 * S_NumWebPurchases + 0.37743519705036
* S_NumWebVisitsMonth + -0.69857477383618 * S_RFMstat + -0.87851464788137 * S_RMntFrq +
0.16854775832723 * S_Recency + 0.71697705359003 * S_Teenhome ;
1257513   +   H1x1_1  = H1x1_1  +    -0.36100598335798 * AcceptedCmp10
1257514   +          +    -0.80162089620833 * AcceptedCmp20  +    -0.32871385645151 *
1257515   +        AcceptedCmp30  +     0.06493645215559 * AcceptedCmp40
1257516   +          +    -0.79430619699627 * AcceptedCmp50  +    -0.55522128705257 *
1257517   +        Complain0  +    -0.30966226382805 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.36100598335798 * AcceptedCmp10 + -0.80162089620833
* AcceptedCmp20 + -0.32871385645151 * AcceptedCmp30 + 0.06493645215559 * AcceptedCmp40 +
-0.79430619699627 * AcceptedCmp50 + -0.55522128705257 * Complain0 + -0.30966226382805 *
HigherEducationBinary0 ;
1257518   +   H1x1_2  = H1x1_2  +    -0.55315398954303 * AcceptedCmp10
1257519   +          +    -0.74882192477453 * AcceptedCmp20  +    -1.00393247543385 *
1257520   +        AcceptedCmp30  +    -0.99157595784247 * AcceptedCmp40
1257521   +          +     -1.3196947648703 * AcceptedCmp50  +    -0.00342039619706 *
1257522   +        Complain0  +     2.02148667926607 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.55315398954303 * AcceptedCmp10 + -0.74882192477453
* AcceptedCmp20 + -1.00393247543385 * AcceptedCmp30 + -0.99157595784247 * AcceptedCmp40 +
-1.3196947648703 * AcceptedCmp50 + -0.00342039619706 * Complain0 + 2.02148667926607 *
HigherEducationBinary0 ;
1257523   +   H1x1_3  = H1x1_3  +    -1.34147425697576 * AcceptedCmp10
1257524   +          +     0.73907016980814 * AcceptedCmp20  +     0.73398008116032 *
1257525   +        AcceptedCmp30  +     0.96308137699431 * AcceptedCmp40
1257526   +          +     0.35561099349684 * AcceptedCmp50  +    -0.31219143781741 *
1257527   +        Complain0  +     0.90693629583865 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -1.34147425697576 * AcceptedCmp10 + 0.73907016980814 *
AcceptedCmp20 + 0.73398008116032 * AcceptedCmp30 + 0.96308137699431 * AcceptedCmp40 +
0.35561099349684 * AcceptedCmp50 + -0.31219143781741 * Complain0 + 0.90693629583865 *
HigherEducationBinary0 ;
1257528   +   H1x1_4  = H1x1_4  +    -0.50580436048114 * AcceptedCmp10
1257529   +          +    -1.02093523515462 * AcceptedCmp20  +    -0.61029325985231 *
1257530   +        AcceptedCmp30  +    -0.73402161144066 * AcceptedCmp40
1257531   +          +      0.1698155397807 * AcceptedCmp50  +    -0.01243044321253 *
1257532   +        Complain0  +    -0.47467816438005 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.50580436048114 * AcceptedCmp10 + -1.02093523515462
* AcceptedCmp20 + -0.61029325985231 * AcceptedCmp30 + -0.73402161144066 * AcceptedCmp40 +
0.1698155397807 * AcceptedCmp50 + -0.01243044321253 * Complain0 + -0.47467816438005 *
HigherEducationBinary0 ;
1257533   +   H1x1_5  = H1x1_5  +     1.58877963639512 * AcceptedCmp10
1257534   +          +     0.71974146614964 * AcceptedCmp20  +    -0.38703518473707 *
1257535   +        AcceptedCmp30  +     0.18491867078918 * AcceptedCmp40
1257536   +          +     0.72124299050214 * AcceptedCmp50  +    -0.27317285634323 *
1257537   +        Complain0  +      0.1433377302902 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 1.58877963639512 * AcceptedCmp10 + 0.71974146614964 *
AcceptedCmp20 + -0.38703518473707 * AcceptedCmp30 + 0.18491867078918 * AcceptedCmp40 +
0.72124299050214 * AcceptedCmp50 + -0.27317285634323 * Complain0 + 0.1433377302902 *
HigherEducationBinary0 ;
1257538   +   H1x1_1  = H1x1_1  +     0.29126191890253 * Education2n_Cycle
1257539   +          +    -0.73322213407659 * EducationBasic  +     0.33134572731882 *
1257540   +        EducationGraduation  +    -0.37141290775302 * EducationMaster
1257541   +          +     0.68641668264565 * Marital_StatusDivorced
1257542   +          +    -0.81586871439732 * Marital_StatusMarried
1257543   +          +     0.63758920518451 * Marital_StatusSingle
1257544   +          +    -1.07300023346175 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.29126191890253 * Education2n_Cycle +
-0.73322213407659 * EducationBasic + 0.33134572731882 * EducationGraduation +
-0.37141290775302 * EducationMaster + 0.68641668264565 * Marital_StatusDivorced +
-0.81586871439732 * Marital_StatusMarried + 0.63758920518451 * Marital_StatusSingle +
-1.07300023346175 * Marital_StatusTogether ;
1257545   +   H1x1_2  = H1x1_2  +     0.43078991783629 * Education2n_Cycle
1257546   +          +      0.6169213563952 * EducationBasic  +    -0.30246389091319 *
1257547   +        EducationGraduation  +     -0.4412391934844 * EducationMaster
1257548   +          +     0.05137560133238 * Marital_StatusDivorced
1257549   +          +    -2.24401993266209 * Marital_StatusMarried
1257550   +          +     1.57359386216115 * Marital_StatusSingle
1257551   +          +    -1.81897019215773 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.43078991783629 * Education2n_Cycle + 0.6169213563952
* EducationBasic + -0.30246389091319 * EducationGraduation + -0.4412391934844 *
EducationMaster + 0.05137560133238 * Marital_StatusDivorced + -2.24401993266209 *
Marital_StatusMarried + 1.57359386216115 * Marital_StatusSingle + -1.81897019215773 *
Marital_StatusTogether ;
1257552   +   H1x1_3  = H1x1_3  +     0.59284950139581 * Education2n_Cycle
1257553   +          +     0.47333255206751 * EducationBasic  +     0.43514421192824 *
1257554   +        EducationGraduation  +     0.61492669859334 * EducationMaster
1257555   +          +     -1.0649987815942 * Marital_StatusDivorced
1257556   +          +     0.76065111692388 * Marital_StatusMarried
1257557   +          +    -0.21694149754801 * Marital_StatusSingle
1257558   +          +     1.64182073896148 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.59284950139581 * Education2n_Cycle +
0.47333255206751 * EducationBasic + 0.43514421192824 * EducationGraduation + 0.61492669859334
* EducationMaster + -1.0649987815942 * Marital_StatusDivorced + 0.76065111692388 *
Marital_StatusMarried + -0.21694149754801 * Marital_StatusSingle + 1.64182073896148 *
Marital_StatusTogether ;
1257559   +   H1x1_4  = H1x1_4  +    -0.77613125849075 * Education2n_Cycle
1257560   +          +     0.26238013539868 * EducationBasic  +    -0.05526420132276 *
1257561   +        EducationGraduation  +     0.04208620358211 * EducationMaster
1257562   +          +     2.02155453548328 * Marital_StatusDivorced
1257563   +          +    -2.60190649735306 * Marital_StatusMarried
1257564   +          +     1.09149388354927 * Marital_StatusSingle
1257565   +          +    -1.15248770613963 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.77613125849075 * Education2n_Cycle +
0.26238013539868 * EducationBasic + -0.05526420132276 * EducationGraduation + 0.04208620358211
* EducationMaster + 2.02155453548328 * Marital_StatusDivorced + -2.60190649735306 *
Marital_StatusMarried + 1.09149388354927 * Marital_StatusSingle + -1.15248770613963 *
Marital_StatusTogether ;
1257566   +   H1x1_5  = H1x1_5  +    -0.03512618332303 * Education2n_Cycle
1257567   +          +    -0.14907811224838 * EducationBasic  +     0.24885029294709 *
1257568   +        EducationGraduation  +    -0.60853091001689 * EducationMaster
1257569   +          +     0.66315970650309 * Marital_StatusDivorced
1257570   +          +    -1.20476729758152 * Marital_StatusMarried
1257571   +          +     0.56175027826397 * Marital_StatusSingle
1257572   +          +    -1.12798745445913 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.03512618332303 * Education2n_Cycle +
-0.14907811224838 * EducationBasic + 0.24885029294709 * EducationGraduation +
-0.60853091001689 * EducationMaster + 0.66315970650309 * Marital_StatusDivorced +
-1.20476729758152 * Marital_StatusMarried + 0.56175027826397 * Marital_StatusSingle +
-1.12798745445913 * Marital_StatusTogether ;
1257573   +   H1x1_1  =      0.8264813299799 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.8264813299799 + H1x1_1 ;
1257574   +   H1x1_2  =     1.35924705880418 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.35924705880418 + H1x1_2 ;
1257575   +   H1x1_3  =    -0.31074016443189 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.31074016443189 + H1x1_3 ;
1257576   +   H1x1_4  =    -1.37395810355475 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -1.37395810355475 + H1x1_4 ;
1257577   +   H1x1_5  =    -0.62889533479826 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.62889533479826 + H1x1_5 ;
1257578   +   H1x1_6  = 0;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0;
1257579   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
1257580   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1257581   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
1257582   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
1257583   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
1257584   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
1257585   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
1257586   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
1257587   +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
1257588   +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
1257589   +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
1257590   +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
1257591   +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
1257592   +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
1257593   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
1257594   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
1257595   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
1257596   +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
1257597   +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
1257598   +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
1257599   +END;
MPRINT(EM_DIAGRAM):   END;
1257600   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1257601   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
1257602   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
1257603   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
1257604   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
1257605   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
1257606   +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
1257607   +END;
MPRINT(EM_DIAGRAM):   END;
1257608   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1257609   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
1257610   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1257611   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1257612   +   H1x2_1  =     0.56269814727649 * S_AcceptedCmpTotal
1257613   +          +    -0.56663088753275 * S_Age  +    -0.08799157593784 * S_Frq
1257614   +          +      0.8158986182256 * S_Income  +     0.25081960997161 *
1257615   +        S_Kidhome  +    -0.53258140179906 * S_Mnt  +     0.15843644803762 *
1257616   +        S_MntFishProducts  +    -0.87373368590299 * S_MntFruits
1257617   +          +     0.02807252984992 * S_MntGoldProds  +     1.41661611364623 *
1257618   +        S_MntMeatProducts  +     1.22431140889383 * S_MntSweetProducts
1257619   +          +    -0.25451913627032 * S_MntWines  +     0.13515407201266 *
1257620   +        S_MonthsAsCustomer  +     1.28583120667445 * S_NumCatalogPurchases
1257621   +          +     1.50005927423985 * S_NumDealsPurchases
1257622   +          +      0.5590536933569 * S_NumDistPurchases
1257623   +          +    -0.61757824339318 * S_NumStorePurchases
1257624   +          +     0.37259686538158 * S_NumWebPurchases
1257625   +          +     2.59725437895564 * S_NumWebVisitsMonth
1257626   +          +     1.61096386499852 * S_RFMstat  +      0.6096177019772 *
1257627   +        S_RMntFrq  +    -2.38795796980324 * S_Recency
1257628   +          +    -0.31987414022375 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.56269814727649 * S_AcceptedCmpTotal + -0.56663088753275 *
S_Age + -0.08799157593784 * S_Frq + 0.8158986182256 * S_Income + 0.25081960997161 * S_Kidhome
+ -0.53258140179906 * S_Mnt + 0.15843644803762 * S_MntFishProducts + -0.87373368590299 *
S_MntFruits + 0.02807252984992 * S_MntGoldProds + 1.41661611364623 * S_MntMeatProducts +
1.22431140889383 * S_MntSweetProducts + -0.25451913627032 * S_MntWines + 0.13515407201266 *
S_MonthsAsCustomer + 1.28583120667445 * S_NumCatalogPurchases + 1.50005927423985 *
S_NumDealsPurchases + 0.5590536933569 * S_NumDistPurchases + -0.61757824339318 *
S_NumStorePurchases + 0.37259686538158 * S_NumWebPurchases + 2.59725437895564 *
S_NumWebVisitsMonth + 1.61096386499852 * S_RFMstat + 0.6096177019772 * S_RMntFrq +
-2.38795796980324 * S_Recency + -0.31987414022375 * S_Teenhome ;
1257629   +   H1x2_2  =    -1.93801069736585 * S_AcceptedCmpTotal
1257630   +          +     1.10394781020217 * S_Age  +    -0.47335296021798 * S_Frq
1257631   +          +    -1.34212492602253 * S_Income  +    -1.34380793722996 *
1257632   +        S_Kidhome  +      0.9110881410704 * S_Mnt  +    -2.21001317666388 *
1257633   +        S_MntFishProducts  +     0.73821267564247 * S_MntFruits
1257634   +          +     0.16536006752146 * S_MntGoldProds  +     0.03402222784641 *
1257635   +        S_MntMeatProducts  +     0.96043668102736 * S_MntSweetProducts
1257636   +          +    -1.40670343451334 * S_MntWines  +     0.81378739821838 *
1257637   +        S_MonthsAsCustomer  +    -0.45596935664336 * S_NumCatalogPurchases
1257638   +          +    -0.09282222088797 * S_NumDealsPurchases
1257639   +          +     0.10726247938321 * S_NumDistPurchases
1257640   +          +     -1.1235971458527 * S_NumStorePurchases
1257641   +          +    -0.78304387839877 * S_NumWebPurchases
1257642   +          +    -0.44139243179956 * S_NumWebVisitsMonth
1257643   +          +    -0.00027499457791 * S_RFMstat  +    -0.71480759211982 *
1257644   +        S_RMntFrq  +     2.19072220135069 * S_Recency
1257645   +          +    -0.32246312005896 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -1.93801069736585 * S_AcceptedCmpTotal + 1.10394781020217 *
S_Age + -0.47335296021798 * S_Frq + -1.34212492602253 * S_Income + -1.34380793722996 *
S_Kidhome + 0.9110881410704 * S_Mnt + -2.21001317666388 * S_MntFishProducts + 0.73821267564247
* S_MntFruits + 0.16536006752146 * S_MntGoldProds + 0.03402222784641 * S_MntMeatProducts +
0.96043668102736 * S_MntSweetProducts + -1.40670343451334 * S_MntWines + 0.81378739821838 *
S_MonthsAsCustomer + -0.45596935664336 * S_NumCatalogPurchases + -0.09282222088797 *
S_NumDealsPurchases + 0.10726247938321 * S_NumDistPurchases + -1.1235971458527 *
S_NumStorePurchases + -0.78304387839877 * S_NumWebPurchases + -0.44139243179956 *
S_NumWebVisitsMonth + -0.00027499457791 * S_RFMstat + -0.71480759211982 * S_RMntFrq +
2.19072220135069 * S_Recency + -0.32246312005896 * S_Teenhome ;
1257646   +   H1x2_3  =    -0.33286965179681 * S_AcceptedCmpTotal
1257647   +          +     0.25643420238739 * S_Age  +     1.78251276306291 * S_Frq
1257648   +          +     0.42668628662657 * S_Income  +    -0.44555069154972 *
1257649   +        S_Kidhome  +     0.99430376599176 * S_Mnt  +     0.37152911215285 *
1257650   +        S_MntFishProducts  +    -1.00181313725345 * S_MntFruits
1257651   +          +    -1.88393479121141 * S_MntGoldProds  +    -1.71643056154209 *
1257652   +        S_MntMeatProducts  +    -0.69325136508245 * S_MntSweetProducts
1257653   +          +     0.36062578298416 * S_MntWines  +    -1.43361051175418 *
1257654   +        S_MonthsAsCustomer  +     0.92624996511804 * S_NumCatalogPurchases
1257655   +          +     0.35349185459988 * S_NumDealsPurchases
1257656   +          +     0.06853677714859 * S_NumDistPurchases
1257657   +          +    -1.47546012999338 * S_NumStorePurchases
1257658   +          +     0.20926435398916 * S_NumWebPurchases
1257659   +          +    -1.00535683639093 * S_NumWebVisitsMonth
1257660   +          +     0.39738023685345 * S_RFMstat  +     0.54359550262445 *
1257661   +        S_RMntFrq  +    -1.59138379954757 * S_Recency
1257662   +          +    -0.72224029606658 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.33286965179681 * S_AcceptedCmpTotal + 0.25643420238739 *
S_Age + 1.78251276306291 * S_Frq + 0.42668628662657 * S_Income + -0.44555069154972 * S_Kidhome
+ 0.99430376599176 * S_Mnt + 0.37152911215285 * S_MntFishProducts + -1.00181313725345 *
S_MntFruits + -1.88393479121141 * S_MntGoldProds + -1.71643056154209 * S_MntMeatProducts +
-0.69325136508245 * S_MntSweetProducts + 0.36062578298416 * S_MntWines + -1.43361051175418 *
S_MonthsAsCustomer + 0.92624996511804 * S_NumCatalogPurchases + 0.35349185459988 *
S_NumDealsPurchases + 0.06853677714859 * S_NumDistPurchases + -1.47546012999338 *
S_NumStorePurchases + 0.20926435398916 * S_NumWebPurchases + -1.00535683639093 *
S_NumWebVisitsMonth + 0.39738023685345 * S_RFMstat + 0.54359550262445 * S_RMntFrq +
-1.59138379954757 * S_Recency + -0.72224029606658 * S_Teenhome ;
1257663   +   H1x2_4  =     -0.0656876758781 * S_AcceptedCmpTotal
1257664   +          +    -0.38220805193452 * S_Age  +    -0.62740801625755 * S_Frq
1257665   +          +     0.62992117571672 * S_Income  +      1.6289723191423 *
1257666   +        S_Kidhome  +     0.37209535830613 * S_Mnt  +     0.55983487785376 *
1257667   +        S_MntFishProducts  +    -2.12992009015736 * S_MntFruits
1257668   +          +    -0.38291517806426 * S_MntGoldProds  +    -1.36584955015054 *
1257669   +        S_MntMeatProducts  +     0.60790195398286 * S_MntSweetProducts
1257670   +          +     2.43674403604903 * S_MntWines  +     -0.0680555682506 *
1257671   +        S_MonthsAsCustomer  +    -0.38141588539042 * S_NumCatalogPurchases
1257672   +          +      0.3873586120272 * S_NumDealsPurchases
1257673   +          +     0.25911651157596 * S_NumDistPurchases
1257674   +          +     1.58922489084287 * S_NumStorePurchases
1257675   +          +     0.49041797743368 * S_NumWebPurchases
1257676   +          +     -1.5425586871929 * S_NumWebVisitsMonth
1257677   +          +    -0.68794085469802 * S_RFMstat  +     1.43555366196783 *
1257678   +        S_RMntFrq  +     1.03099569333498 * S_Recency
1257679   +          +    -0.33160793159803 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.0656876758781 * S_AcceptedCmpTotal + -0.38220805193452 *
S_Age + -0.62740801625755 * S_Frq + 0.62992117571672 * S_Income + 1.6289723191423 * S_Kidhome
+ 0.37209535830613 * S_Mnt + 0.55983487785376 * S_MntFishProducts + -2.12992009015736 *
S_MntFruits + -0.38291517806426 * S_MntGoldProds + -1.36584955015054 * S_MntMeatProducts +
0.60790195398286 * S_MntSweetProducts + 2.43674403604903 * S_MntWines + -0.0680555682506 *
S_MonthsAsCustomer + -0.38141588539042 * S_NumCatalogPurchases + 0.3873586120272 *
S_NumDealsPurchases + 0.25911651157596 * S_NumDistPurchases + 1.58922489084287 *
S_NumStorePurchases + 0.49041797743368 * S_NumWebPurchases + -1.5425586871929 *
S_NumWebVisitsMonth + -0.68794085469802 * S_RFMstat + 1.43555366196783 * S_RMntFrq +
1.03099569333498 * S_Recency + -0.33160793159803 * S_Teenhome ;
1257680   +   H1x2_5  =      1.1619646008295 * S_AcceptedCmpTotal
1257681   +          +     -1.1099918698895 * S_Age  +     1.07090049938562 * S_Frq
1257682   +          +     0.68405730495336 * S_Income  +     0.10310173850527 *
1257683   +        S_Kidhome  +    -0.20536085581003 * S_Mnt  +    -0.13505440333321 *
1257684   +        S_MntFishProducts  +      0.7330354505267 * S_MntFruits
1257685   +          +    -0.09266368133722 * S_MntGoldProds  +     0.11251229112529 *
1257686   +        S_MntMeatProducts  +     0.93293215365852 * S_MntSweetProducts
1257687   +          +    -0.30739945619686 * S_MntWines  +     1.60111236559554 *
1257688   +        S_MonthsAsCustomer  +    -0.55541485540949 * S_NumCatalogPurchases
1257689   +          +    -0.60830880287865 * S_NumDealsPurchases
1257690   +          +      0.0745331267194 * S_NumDistPurchases
1257691   +          +    -1.39472448256952 * S_NumStorePurchases
1257692   +          +     1.95372179969087 * S_NumWebPurchases
1257693   +          +    -0.63307356390404 * S_NumWebVisitsMonth
1257694   +          +    -1.45142676869601 * S_RFMstat  +    -0.89091053567015 *
1257695   +        S_RMntFrq  +    -0.29197897313114 * S_Recency
1257696   +          +     0.02610681671236 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.1619646008295 * S_AcceptedCmpTotal + -1.1099918698895 * S_Age
+ 1.07090049938562 * S_Frq + 0.68405730495336 * S_Income + 0.10310173850527 * S_Kidhome +
-0.20536085581003 * S_Mnt + -0.13505440333321 * S_MntFishProducts + 0.7330354505267 *
S_MntFruits + -0.09266368133722 * S_MntGoldProds + 0.11251229112529 * S_MntMeatProducts +
0.93293215365852 * S_MntSweetProducts + -0.30739945619686 * S_MntWines + 1.60111236559554 *
S_MonthsAsCustomer + -0.55541485540949 * S_NumCatalogPurchases + -0.60830880287865 *
S_NumDealsPurchases + 0.0745331267194 * S_NumDistPurchases + -1.39472448256952 *
S_NumStorePurchases + 1.95372179969087 * S_NumWebPurchases + -0.63307356390404 *
S_NumWebVisitsMonth + -1.45142676869601 * S_RFMstat + -0.89091053567015 * S_RMntFrq +
-0.29197897313114 * S_Recency + 0.02610681671236 * S_Teenhome ;
1257697   +   H1x2_1  = H1x2_1  +    -0.60663534965526 * AcceptedCmp10
1257698   +          +     0.86940361180064 * AcceptedCmp20  +     1.96097801395475 *
1257699   +        AcceptedCmp30  +    -0.07604718607607 * AcceptedCmp40
1257700   +          +    -2.82012437662904 * AcceptedCmp50  +     2.92223307409835 *
1257701   +        Complain0  +      0.7388639458943 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.60663534965526 * AcceptedCmp10 + 0.86940361180064 *
AcceptedCmp20 + 1.96097801395475 * AcceptedCmp30 + -0.07604718607607 * AcceptedCmp40 +
-2.82012437662904 * AcceptedCmp50 + 2.92223307409835 * Complain0 + 0.7388639458943 *
HigherEducationBinary0 ;
1257702   +   H1x2_2  = H1x2_2  +    -0.44975979140124 * AcceptedCmp10
1257703   +          +    -0.14894854897951 * AcceptedCmp20  +     1.05214102326393 *
1257704   +        AcceptedCmp30  +    -0.24568060312448 * AcceptedCmp40
1257705   +          +    -0.32148548771167 * AcceptedCmp50  +    -0.06212131202705 *
1257706   +        Complain0  +    -1.15456299494407 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.44975979140124 * AcceptedCmp10 + -0.14894854897951
* AcceptedCmp20 + 1.05214102326393 * AcceptedCmp30 + -0.24568060312448 * AcceptedCmp40 +
-0.32148548771167 * AcceptedCmp50 + -0.06212131202705 * Complain0 + -1.15456299494407 *
HigherEducationBinary0 ;
1257707   +   H1x2_3  = H1x2_3  +     0.05559829595526 * AcceptedCmp10
1257708   +          +    -0.79357273390501 * AcceptedCmp20  +     1.19638475921939 *
1257709   +        AcceptedCmp30  +     -0.4185483500346 * AcceptedCmp40
1257710   +          +     1.62070541716774 * AcceptedCmp50  +     0.42618871432227 *
1257711   +        Complain0  +    -1.31545071935076 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.05559829595526 * AcceptedCmp10 + -0.79357273390501 *
AcceptedCmp20 + 1.19638475921939 * AcceptedCmp30 + -0.4185483500346 * AcceptedCmp40 +
1.62070541716774 * AcceptedCmp50 + 0.42618871432227 * Complain0 + -1.31545071935076 *
HigherEducationBinary0 ;
1257712   +   H1x2_4  = H1x2_4  +     0.79295384489774 * AcceptedCmp10
1257713   +          +    -1.12840237512106 * AcceptedCmp20  +     1.32129555401653 *
1257714   +        AcceptedCmp30  +    -0.25952521594596 * AcceptedCmp40
1257715   +          +     0.80872302488736 * AcceptedCmp50  +     1.00677398871609 *
1257716   +        Complain0  +    -0.40309387727555 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.79295384489774 * AcceptedCmp10 + -1.12840237512106 *
AcceptedCmp20 + 1.32129555401653 * AcceptedCmp30 + -0.25952521594596 * AcceptedCmp40 +
0.80872302488736 * AcceptedCmp50 + 1.00677398871609 * Complain0 + -0.40309387727555 *
HigherEducationBinary0 ;
1257717   +   H1x2_5  = H1x2_5  +     0.27407087260629 * AcceptedCmp10
1257718   +          +    -1.62993283587806 * AcceptedCmp20  +     -0.7976151702219 *
1257719   +        AcceptedCmp30  +    -1.43236001965205 * AcceptedCmp40
1257720   +          +     0.31785497417833 * AcceptedCmp50  +     -0.4935881696628 *
1257721   +        Complain0  +    -0.90101154412077 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.27407087260629 * AcceptedCmp10 + -1.62993283587806 *
AcceptedCmp20 + -0.7976151702219 * AcceptedCmp30 + -1.43236001965205 * AcceptedCmp40 +
0.31785497417833 * AcceptedCmp50 + -0.4935881696628 * Complain0 + -0.90101154412077 *
HigherEducationBinary0 ;
1257722   +   H1x2_1  = H1x2_1  +    -0.42532202605687 * Education2n_Cycle
1257723   +          +     0.05209663685716 * EducationBasic  +     1.32477268007154 *
1257724   +        EducationGraduation  +    -1.16900224373137 * EducationMaster
1257725   +          +    -1.33377871643323 * Marital_StatusDivorced
1257726   +          +    -0.87184228840898 * Marital_StatusMarried
1257727   +          +     1.41223186340257 * Marital_StatusSingle
1257728   +          +     0.26542930660962 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.42532202605687 * Education2n_Cycle +
0.05209663685716 * EducationBasic + 1.32477268007154 * EducationGraduation + -1.16900224373137
* EducationMaster + -1.33377871643323 * Marital_StatusDivorced + -0.87184228840898 *
Marital_StatusMarried + 1.41223186340257 * Marital_StatusSingle + 0.26542930660962 *
Marital_StatusTogether ;
1257729   +   H1x2_2  = H1x2_2  +     0.31980851177227 * Education2n_Cycle
1257730   +          +     1.82629979795037 * EducationBasic  +     0.59482979766527 *
1257731   +        EducationGraduation  +     0.38341272155343 * EducationMaster
1257732   +          +    -0.21479890935233 * Marital_StatusDivorced
1257733   +          +     -0.0025459519579 * Marital_StatusMarried
1257734   +          +     1.33900491702264 * Marital_StatusSingle
1257735   +          +     0.31338385402434 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.31980851177227 * Education2n_Cycle +
1.82629979795037 * EducationBasic + 0.59482979766527 * EducationGraduation + 0.38341272155343
* EducationMaster + -0.21479890935233 * Marital_StatusDivorced + -0.0025459519579 *
Marital_StatusMarried + 1.33900491702264 * Marital_StatusSingle + 0.31338385402434 *
Marital_StatusTogether ;
1257736   +   H1x2_3  = H1x2_3  +     -1.1277686958847 * Education2n_Cycle
1257737   +          +    -0.32701971979058 * EducationBasic  +      0.4361680205519 *
1257738   +        EducationGraduation  +     0.60739269725685 * EducationMaster
1257739   +          +    -0.38307267471999 * Marital_StatusDivorced
1257740   +          +     0.97088969451415 * Marital_StatusMarried
1257741   +          +    -0.28578224473381 * Marital_StatusSingle
1257742   +          +     0.16178086683874 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -1.1277686958847 * Education2n_Cycle +
-0.32701971979058 * EducationBasic + 0.4361680205519 * EducationGraduation + 0.60739269725685
* EducationMaster + -0.38307267471999 * Marital_StatusDivorced + 0.97088969451415 *
Marital_StatusMarried + -0.28578224473381 * Marital_StatusSingle + 0.16178086683874 *
Marital_StatusTogether ;
1257743   +   H1x2_4  = H1x2_4  +    -1.21481485652985 * Education2n_Cycle
1257744   +          +    -0.30231261977781 * EducationBasic  +     0.33993210461674 *
1257745   +        EducationGraduation  +     0.14160673378252 * EducationMaster
1257746   +          +    -1.42229401093569 * Marital_StatusDivorced
1257747   +          +      0.7234508382397 * Marital_StatusMarried
1257748   +          +    -0.29062202974628 * Marital_StatusSingle
1257749   +          +     1.00102560376832 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + -1.21481485652985 * Education2n_Cycle +
-0.30231261977781 * EducationBasic + 0.33993210461674 * EducationGraduation + 0.14160673378252
* EducationMaster + -1.42229401093569 * Marital_StatusDivorced + 0.7234508382397 *
Marital_StatusMarried + -0.29062202974628 * Marital_StatusSingle + 1.00102560376832 *
Marital_StatusTogether ;
1257750   +   H1x2_5  = H1x2_5  +     0.47313927233084 * Education2n_Cycle
1257751   +          +     0.53675687099431 * EducationBasic  +    -0.75029054398953 *
1257752   +        EducationGraduation  +     -0.7118631990538 * EducationMaster
1257753   +          +    -0.99067637207205 * Marital_StatusDivorced
1257754   +          +    -0.50245902142079 * Marital_StatusMarried
1257755   +          +     0.54214494533793 * Marital_StatusSingle
1257756   +          +    -1.90023876403873 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.47313927233084 * Education2n_Cycle +
0.53675687099431 * EducationBasic + -0.75029054398953 * EducationGraduation + -0.7118631990538
* EducationMaster + -0.99067637207205 * Marital_StatusDivorced + -0.50245902142079 *
Marital_StatusMarried + 0.54214494533793 * Marital_StatusSingle + -1.90023876403873 *
Marital_StatusTogether ;
1257757   +   H1x2_1  =    -0.76220110175787 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.76220110175787 + H1x2_1 ;
1257758   +   H1x2_2  =     0.33238308796509 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.33238308796509 + H1x2_2 ;
1257759   +   H1x2_3  =    -1.79229186263718 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -1.79229186263718 + H1x2_3 ;
1257760   +   H1x2_4  =     2.90076107393596 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 2.90076107393596 + H1x2_4 ;
1257761   +   H1x2_5  =    -1.75965576502183 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -1.75965576502183 + H1x2_5 ;
1257762   +   H1x2_6  = 0;
MPRINT(EM_DIAGRAM):   H1x2_6 = 0;
1257763   +   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 );
1257764   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1257765   +   H1x2_1  = EXP(H1x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(H1x2_1 - _MAX_);
1257766   +   _SUM_ = _SUM_ + H1x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_1 ;
1257767   +   H1x2_2  = EXP(H1x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(H1x2_2 - _MAX_);
1257768   +   _SUM_ = _SUM_ + H1x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_2 ;
1257769   +   H1x2_3  = EXP(H1x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(H1x2_3 - _MAX_);
1257770   +   _SUM_ = _SUM_ + H1x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_3 ;
1257771   +   H1x2_4  = EXP(H1x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(H1x2_4 - _MAX_);
1257772   +   _SUM_ = _SUM_ + H1x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_4 ;
1257773   +   H1x2_5  = EXP(H1x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(H1x2_5 - _MAX_);
1257774   +   _SUM_ = _SUM_ + H1x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_5 ;
1257775   +   H1x2_6  = EXP(H1x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(H1x2_6 - _MAX_);
1257776   +   _SUM_ = _SUM_ + H1x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_6 ;
1257777   +   H1x2_1  = H1x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 / _SUM_;
1257778   +   H1x2_2  = H1x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 / _SUM_;
1257779   +   H1x2_3  = H1x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 / _SUM_;
1257780   +   H1x2_4  = H1x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 / _SUM_;
1257781   +   H1x2_5  = H1x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 / _SUM_;
1257782   +   H1x2_6  = H1x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 / _SUM_;
1257783   +END;
MPRINT(EM_DIAGRAM):   END;
1257784   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1257785   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
1257786   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
1257787   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
1257788   +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
1257789   +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
1257790   +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
1257791   +END;
MPRINT(EM_DIAGRAM):   END;
1257792   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1257793   +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
1257794   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1257795   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1257796   +   H2x1_1  =       1.974359971482 * H1x1_1  +     2.56630185065386 * H1x1_2
1257797   +          +    -2.09978917716486 * H1x1_3  +      2.5733942680354 * H1x1_4
1257798   +          +    -3.36902992698085 * H1x1_5  +    -2.45757278280195 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.974359971482 * H1x1_1 + 2.56630185065386 * H1x1_2 +
-2.09978917716486 * H1x1_3 + 2.5733942680354 * H1x1_4 + -3.36902992698085 * H1x1_5 +
-2.45757278280195 * H1x1_6 ;
1257799   +   H2x1_2  =    -0.31797232371002 * H1x1_1  +     1.40395330167402 * H1x1_2
1257800   +          +     1.81616324109762 * H1x1_3  +     1.53849589982775 * H1x1_4
1257801   +          +    -0.63132385856109 * H1x1_5  +    -2.28426391810485 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -0.31797232371002 * H1x1_1 + 1.40395330167402 * H1x1_2 +
1.81616324109762 * H1x1_3 + 1.53849589982775 * H1x1_4 + -0.63132385856109 * H1x1_5 +
-2.28426391810485 * H1x1_6 ;
1257802   +   H2x1_3  =    -1.34821716876354 * H1x1_1  +    -1.59136815069547 * H1x1_2
1257803   +          +     1.51830421093731 * H1x1_3  +     0.25947292816575 * H1x1_4
1257804   +          +     0.68626537551183 * H1x1_5  +     0.08021226539433 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -1.34821716876354 * H1x1_1 + -1.59136815069547 * H1x1_2 +
1.51830421093731 * H1x1_3 + 0.25947292816575 * H1x1_4 + 0.68626537551183 * H1x1_5 +
0.08021226539433 * H1x1_6 ;
1257805   +   H2x1_4  =     1.81371453071507 * H1x1_1  +     2.86509325576366 * H1x1_2
1257806   +          +    -2.51923468751378 * H1x1_3  +     3.48823967488449 * H1x1_4
1257807   +          +    -1.98439811139438 * H1x1_5  +    -1.35359233519863 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.81371453071507 * H1x1_1 + 2.86509325576366 * H1x1_2 +
-2.51923468751378 * H1x1_3 + 3.48823967488449 * H1x1_4 + -1.98439811139438 * H1x1_5 +
-1.35359233519863 * H1x1_6 ;
1257808   +   H2x1_5  =     2.41779243188377 * H1x1_1  +     2.38684872287302 * H1x1_2
1257809   +          +    -2.38697428830295 * H1x1_3  +     3.64463866412774 * H1x1_4
1257810   +          +    -6.25925640356471 * H1x1_5  +    -2.41187367604766 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = 2.41779243188377 * H1x1_1 + 2.38684872287302 * H1x1_2 +
-2.38697428830295 * H1x1_3 + 3.64463866412774 * H1x1_4 + -6.25925640356471 * H1x1_5 +
-2.41187367604766 * H1x1_6 ;
1257811   +   H2x1_6  =    -0.72042650045348 * H1x1_1  +      0.1896194130913 * H1x1_2
1257812   +          +     0.90899894568677 * H1x1_3  +    -1.82868335056689 * H1x1_4
1257813   +          +     0.25430380699211 * H1x1_5  +     0.21617396847163 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = -0.72042650045348 * H1x1_1 + 0.1896194130913 * H1x1_2 +
0.90899894568677 * H1x1_3 + -1.82868335056689 * H1x1_4 + 0.25430380699211 * H1x1_5 +
0.21617396847163 * H1x1_6 ;
1257814   +   H2x1_1  = H2x1_1  +     1.25654059966646 * H1x2_1
1257815   +          +     1.54802434303135 * H1x2_2  +     -0.8831980397117 * H1x2_3
1257816   +          +    -0.06778839937099 * H1x2_4  +      0.5440972304381 * H1x2_5
1257817   +          +      0.2606136576082 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 1.25654059966646 * H1x2_1 + 1.54802434303135 * H1x2_2
+ -0.8831980397117 * H1x2_3 + -0.06778839937099 * H1x2_4 + 0.5440972304381 * H1x2_5 +
0.2606136576082 * H1x2_6 ;
1257818   +   H2x1_2  = H2x1_2  +      1.1804478706954 * H1x2_1
1257819   +          +    -1.54526687654235 * H1x2_2  +    -1.84586479319799 * H1x2_3
1257820   +          +     1.53060510120437 * H1x2_4  +     1.17038673632413 * H1x2_5
1257821   +          +    -0.33816948355449 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 1.1804478706954 * H1x2_1 + -1.54526687654235 * H1x2_2
+ -1.84586479319799 * H1x2_3 + 1.53060510120437 * H1x2_4 + 1.17038673632413 * H1x2_5 +
-0.33816948355449 * H1x2_6 ;
1257822   +   H2x1_3  = H2x1_3  +    -0.17829043463382 * H1x2_1
1257823   +          +    -0.25137506897353 * H1x2_2  +     0.16242586068799 * H1x2_3
1257824   +          +    -0.09404795949359 * H1x2_4  +    -0.46228597203598 * H1x2_5
1257825   +          +    -2.05648585275111 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -0.17829043463382 * H1x2_1 + -0.25137506897353 *
H1x2_2 + 0.16242586068799 * H1x2_3 + -0.09404795949359 * H1x2_4 + -0.46228597203598 * H1x2_5 +
-2.05648585275111 * H1x2_6 ;
1257826   +   H2x1_4  = H2x1_4  +     0.42433995729877 * H1x2_1
1257827   +          +    -0.48506090180667 * H1x2_2  +    -2.00023889633201 * H1x2_3
1257828   +          +    -2.18353148884875 * H1x2_4  +      1.8888560029491 * H1x2_5
1257829   +          +     0.10756694741742 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 0.42433995729877 * H1x2_1 + -0.48506090180667 * H1x2_2
+ -2.00023889633201 * H1x2_3 + -2.18353148884875 * H1x2_4 + 1.8888560029491 * H1x2_5 +
0.10756694741742 * H1x2_6 ;
1257830   +   H2x1_5  = H2x1_5  +     1.56363187716685 * H1x2_1
1257831   +          +    -1.60380055270086 * H1x2_2  +    -0.10253336309679 * H1x2_3
1257832   +          +    -0.70868484989608 * H1x2_4  +    -1.01428312449496 * H1x2_5
1257833   +          +    -0.52564497366659 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + 1.56363187716685 * H1x2_1 + -1.60380055270086 * H1x2_2
+ -0.10253336309679 * H1x2_3 + -0.70868484989608 * H1x2_4 + -1.01428312449496 * H1x2_5 +
-0.52564497366659 * H1x2_6 ;
1257834   +   H2x1_6  = H2x1_6  +    -2.54663319607132 * H1x2_1
1257835   +          +    -0.26971572820094 * H1x2_2  +      0.0632302804701 * H1x2_3
1257836   +          +     0.24322354570335 * H1x2_4  +     0.66904111988013 * H1x2_5
1257837   +          +     0.74493468449949 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + -2.54663319607132 * H1x2_1 + -0.26971572820094 *
H1x2_2 + 0.0632302804701 * H1x2_3 + 0.24322354570335 * H1x2_4 + 0.66904111988013 * H1x2_5 +
0.74493468449949 * H1x2_6 ;
1257838   +   H2x1_1  =    -0.48109096483079 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -0.48109096483079 + H2x1_1 ;
1257839   +   H2x1_2  =     1.80708027085243 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.80708027085243 + H2x1_2 ;
1257840   +   H2x1_3  =    -0.46023689639613 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -0.46023689639613 + H2x1_3 ;
1257841   +   H2x1_4  =     0.33871753804401 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 0.33871753804401 + H2x1_4 ;
1257842   +   H2x1_5  =    -0.31584249921712 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -0.31584249921712 + H2x1_5 ;
1257843   +   H2x1_6  =     0.30285416134468 + H2x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 0.30285416134468 + H2x1_6 ;
1257844   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
1257845   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
1257846   +   H2x1_1  = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
1257847   +   H2x1_2  = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
1257848   +   H2x1_3  = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
1257849   +   H2x1_4  = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
1257850   +   H2x1_5  = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_5 = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
1257851   +   H2x1_6  = 1.0 / (1.0 + EXP(MIN( - H2x1_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.0 / (1.0 + EXP(MIN( - H2x1_6 , _EXP_BAR)));
1257852   +END;
MPRINT(EM_DIAGRAM):   END;
1257853   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1257854   +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
1257855   +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
1257856   +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
1257857   +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
1257858   +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
1257859   +   H2x1_6  = .;
MPRINT(EM_DIAGRAM):   H2x1_6 = .;
1257860   +END;
MPRINT(EM_DIAGRAM):   END;
1257861   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1257862   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1257863   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1257864   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1257865   +   P_DepVar1  =     7.89179702798476 * H2x1_1  +    -2.13955806072986 * H2x1_2
1257866   +          +    -3.88305304025889 * H2x1_3  +     4.07340753853874 * H2x1_4
1257867   +          +     7.74293596833296 * H2x1_5  +     -3.8939011811129 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 7.89179702798476 * H2x1_1 + -2.13955806072986 * H2x1_2 +
-3.88305304025889 * H2x1_3 + 4.07340753853874 * H2x1_4 + 7.74293596833296 * H2x1_5 +
-3.8939011811129 * H2x1_6 ;
1257868   +   P_DepVar1  =    -5.20107973804597 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -5.20107973804597 + P_DepVar1 ;
1257869   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1257870   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1257871   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1257872   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1257873   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1257874   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1257875   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1257876   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1257877   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1257878   +END;
MPRINT(EM_DIAGRAM):   END;
1257879   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1257880   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1257881   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1257882   +END;
MPRINT(EM_DIAGRAM):   END;
1257883   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1257884   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1257885   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1257886   +END;
MPRINT(EM_DIAGRAM):   END;
1257887   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1257888   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1257889   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1257890   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1257891   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1257892   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1257893   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1257894   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1257895   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1257896   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1257897   +END;
MPRINT(EM_DIAGRAM):   END;
1257898   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1257899   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1257900   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1257901   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1257902    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1257903    quit;
1257904    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1257905    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1257906    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1257907    retain ID 2 Node "AutoNeural11";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural11";
1257908    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1257909    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 6523 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 6523 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1257910    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1257911    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1257912    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 6523 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 6523 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1257913    proc sort data=EMWS8.AutoNeural11_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural11_variableset out=_temp2(keep=NAME
CREATOR);
1257914    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1257915    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL11_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1257916    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1257917    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1257918    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1257919    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1257920    proc contents data=EMWS8.AutoNeural11_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural11_train out=_meta(keep=NAME) noprint;
1257921    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 71 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
1257922    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1257923    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1257924    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 71 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 71 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1257925    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1257926    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1257927    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1257928    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 71 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 71 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1257929    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1257930    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1257930  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 3291 rows and 5 columns.
 
1257931    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1257932    proc append base=EMWS8.Ensmbl46_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl46_FCMP data=_tempx;
1257933    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL46_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 3291 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL46_FCMP has 3291 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1257934    filename _pref
1257934  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1257935    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1257936    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1257937   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1257938   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1257939   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1257940   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1257941   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1257942   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1257943    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1257944    quit;
1257945    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1257946    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1257947    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1257948    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1257949    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1257950    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1257951    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1257952    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1257953    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1257954    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1257955    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1257956    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1257957    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1257958    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1257959    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1257960    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1257961    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1257962    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1257963    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1257964    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1257965    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1257966    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1257967    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1257968    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1257969    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1257970    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1257971    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1257971  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
1257972    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1257973    proc append base=EMWS8.Ensmbl46_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl46_FCMP data=_tempx;
1257974    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL46_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL46_FCMP has 3295 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1257975    filename _pref
1257975  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1257976    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1257977    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1257978   +
1257979   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1257980   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1257980  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1257981   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1257982   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1257983   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1257984   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1257985   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1257986    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1257987    quit;
1257988    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1257989    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1257990    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1257991    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1257992    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1257993    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1257994    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1257995    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1257996    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1257997    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1257998    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1257999    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1258000    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1258001    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1258002    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1258003    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1258004    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1258005    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1258006    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1258007    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1258008    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1258009    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1258010    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1258011    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1258012    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1258013    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1258014    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1258014  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
1258015    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1258016    proc append base=EMWS8.Ensmbl46_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl46_FCMP data=_tempx;
1258017    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL46_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL46_FCMP has 3334 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1258018    filename _pref
1258018  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1258019    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1258020    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1258021   +
1258022   +
1258023   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1258024   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1258025   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1258026   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1258027   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1258028   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1258029   +
1258030   +
1258031   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1258032   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1258033   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1258034   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1258035   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1258036   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1258037   +
1258038   +
1258039   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1258040   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1258041   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1258042   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1258043   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1258044   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1258045   +
1258046   +
1258047   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1258048   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1258049   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1258050   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1258051   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1258052   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1258053   +
1258054   +
1258055   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1258056   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1258057   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1258058   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1258059   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1258060   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1258061   +
1258062   +
1258063   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1258064   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1258065   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1258066   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1258067   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1258068   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1258069   +
1258070   +
1258071   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1258072   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1258073   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1258074   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1258075   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1258076   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1258077   +
1258078   +
1258079   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1258080   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1258081   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1258082   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1258083   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1258084   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1258085   +if
1258086   +_FILTERNORM1 not in ( '.')
1258087   + and
1258088   +_FILTERNORM2 not in ( '.')
1258089   + and
1258090   +_FILTERNORM3 not in ( '.')
1258091   + and
1258092   +_FILTERNORM4 not in ( '.')
1258093   + and
1258094   +_FILTERNORM5 not in ( '.')
1258095   + and
1258096   +_FILTERNORM6 not in ( '.')
1258097   + and
1258098   +_FILTERNORM7 not in ( ' ')
1258099   + and
1258100   +_FILTERNORM8 not in ( ' ')
1258101   +and
1258102   +( Dt_Customer ne .)
1258103   +and ( Income ne . and (Income<=107000))
1258104   +and ( Kidhome ne .)
1258105   +and ( MntFishProducts ne .)
1258106   +and ( MntFruits ne .)
1258107   +and ( MntGoldProds ne .)
1258108   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1258109   +and ( MntSweetProducts ne .)
1258110   +and ( MntWines ne .)
1258111   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1258112   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1258113   +and ( NumStorePurchases ne .)
1258114   +and ( NumWebPurchases ne .)
1258115   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1258116   +and ( Recency ne .)
1258117   +and ( Teenhome ne .)
1258118   +and ( Year_Birth ne .)
1258119   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
1258120   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1258121   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1258122   +end;
MPRINT(EM_DIAGRAM):   end;
1258123   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1258124   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1258125    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1258126    quit;
1258127    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1258128    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1258129    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1258130    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1258131    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1258132    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1258133    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1258134    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1258135    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.03 seconds
 
 
1258136    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1258137    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1258138    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1258139    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1258140    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1258141    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1258142    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1258143    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1258144    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
1258145    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1258146    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1258147    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1258148    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1258149    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1258150    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1258151    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1258152    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1258153    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1258153  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
1258154    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1258155    proc append base=EMWS8.Ensmbl46_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl46_FCMP data=_tempx;
1258156    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL46_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL46_FCMP has 3400 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1258157    %macro varDept(fcmpdata=,id=);
1258158    %global nobs&id scoreFlag&id;
1258159    %let scoreFlag&id = 0;
1258160    %if &id=1 or ^&fcmpStart %then %do;
1258161    proc sort data=&fcmpdata out=_temp&id nodupkey;
1258162    by NAME;
1258163    where id=&id and LHS in( %let j=1;
1258164    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1258165    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1258166    "&var" %let j = %eval(&j+1);
1258167    %end;
1258168    );
1258169    run;
1258170    %let dsid = %sysfunc(open(_temp&id));
1258171    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1258172    %let dsid = %sysfunc(close(&dsid));
1258173    %if &&nobs&id %then %do;
1258174    %let scoreFlag&id = 1;
1258175    %let fcmpStart = 1;
1258176    %end;
1258177    %else %let fcmpStart = 0;
1258178    %end;
1258179    %else %do;
1258180    proc sort data=&fcmpdata out=_tempid;
1258181    where id=&id;
1258182    by LHS;
1258183    run;
1258184    %let dsid = %sysfunc(open(_tempid));
1258185    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1258186    %let dsid = %sysfunc(close(&dsid));
1258187    %if ^&&nobs&id %then %do;
1258188    proc datasets lib=work nolist;
1258189    delete _tempid;
1258190    run;
1258191    quit;
1258192    %end;
1258193    %else %do;
1258194    data _tempAll;
1258195    set %let j=%eval(&id-1);
1258196    %do x=1 %to &j;
1258197    %if &&nobs&x %then %do;
1258198    _temp&x %end;
1258199    %end;
1258200    ;
1258201    run;
1258202    proc sql;
1258203    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1258203  ! work._tempid p2 where p.name=p2.lhs;
1258204    quit;
1258205    data _temp&id;
1258206    set _temp&id;
1258207    where LHS ne '' and NAME ne '' and Node ne '';
1258208    run;
1258209    proc datasets lib=work nolist;
1258210    delete _tempAll;
1258211    run;
1258212    %let dsid = %sysfunc(open(_temp&id));
1258213    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1258214    %let dsid = %sysfunc(close(&dsid));
1258215    %if ^&&nobs&id %then %do;
1258216    proc datasets lib=work nolist;
1258217    delete _temp&id;
1258218    run;
1258219    quit;
1258220    %end;
1258221    %else %do;
1258222    %let scoreFlag&id = 1;
1258223    data _temp&id;
1258224    set _temp&id;
1258225    where LHS ne NAME and node ne '';
1258226    run;
1258227    %let dsid = %sysfunc(open(_temp&id));
1258228    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1258229    %let dsid = %sysfunc(close(&dsid));
1258230    %if ^&&nobs&id %then %do;
1258231    proc datasets lib=work nolist;
1258232    delete _temp&id;
1258233    run;
1258234    quit;
1258235    %end;
1258236    %else %do;
1258237    proc sort data=_temp&id nodupkey;
1258238    by LHS NAME;
1258239    run;
1258240    %end;
1258241    %end;
1258242    %end;
1258243    %end;
1258244    %mend varDept;
1258245    %macro optCode(outdata=fcmpdata);
1258246    %global fcmpStart;
1258247    %let fcmpStart = 0;
1258248    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1258249    %let NumNodes=9;
1258250    %do k=1 %to &NumNodes;
1258251    %vardept(fcmpdata=&outdata, id=&k);
1258252    %end;
1258253    %mend optCode;
1258254    %optcode(outData=EMWS8.Ensmbl46_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl46_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL46_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl46_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 188 observations read from the data set EMWS8.ENSMBL46_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 136 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 52 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl46_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL46_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl46_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL46_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl46_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL46_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 52 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 52 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl46_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL46_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 52 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 56 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl46_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL46_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 52 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 95 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.26 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl46_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL46_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl46_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL46_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
1258255    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1258256    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1258257    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1258258    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1258259    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1258260    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1258261    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1258262    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1258263    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1258264    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
1258264  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.
 
1258265    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1258266    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
1258267    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
1258268    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1258269    filename _pref
1258269  ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural9\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural9\EMPUBLISHSCORE.sas";
1258270    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1258271    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural9\EMPUBLISHSCORE.sas.
1258272   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1258273   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1258274   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1258275   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1258276   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1258277   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1258278   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1258279   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1258280   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1258281   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1258282   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1258283   +LENGTH _WARN_ $4
1258284   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
1258285   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1258286   +
1258287   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1258288   +
1258289   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1258290   +
1258291   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1258292   +
1258293   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1258294   +
1258295   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1258296   +
1258297   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1258298   +
1258299   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1258300   +
1258301   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1258302   +
1258303   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1258304   +
1258305   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1258306   +
1258307   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1258308   +
1258309   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1258310   +
1258311   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1258312   +
1258313   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1258314   +
1258315   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1258316   +
1258317   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1258318   +
1258319   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1258320   +
1258321   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1258322   +
1258323   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1258324   +
1258325   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1258326   +
1258327   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1258328   +
1258329   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1258330   +
1258331   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1258332   +
1258333   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1258334   +
1258335   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1258336   +
1258337   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1258338   +
1258339   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1258340   +
1258341   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1258342   +
1258343   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1258344   +
1258345   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1258346   +
1258347   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1258348   +
1258349   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1258350   +
1258351   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1258352   +
1258353   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1258354   +
1258355   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1258356   +
1258357   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1258358   +
1258359   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1258360   +
1258361   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
1258362   +
1258363   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
1258364   +
1258365   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
1258366   +
1258367   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
1258368   +
1258369   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1258370   +
1258371   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1258372   +
1258373   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1258374   +
1258375   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1258376   +
1258377   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1258378   +
1258379   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1258380   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1258381   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1258382   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1258383   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1258384   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1258385   +end;
MPRINT(EM_DIAGRAM):   end;
1258386   +else do;
MPRINT(EM_DIAGRAM):   else do;
1258387   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1258388   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1258389   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1258390   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1258391   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1258392   +   end;
MPRINT(EM_DIAGRAM):   end;
1258393   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1258394   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1258395   +   end;
MPRINT(EM_DIAGRAM):   end;
1258396   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1258397   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1258398   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1258399   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1258400   +   end;
MPRINT(EM_DIAGRAM):   end;
1258401   +end;
MPRINT(EM_DIAGRAM):   end;
1258402   +
1258403   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1258404   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1258405   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1258406   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1258407   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1258408   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1258409   +end;
MPRINT(EM_DIAGRAM):   end;
1258410   +else do;
MPRINT(EM_DIAGRAM):   else do;
1258411   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1258412   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1258413   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1258414   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1258415   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1258416   +   end;
MPRINT(EM_DIAGRAM):   end;
1258417   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1258418   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1258419   +   end;
MPRINT(EM_DIAGRAM):   end;
1258420   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1258421   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1258422   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1258423   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1258424   +   end;
MPRINT(EM_DIAGRAM):   end;
1258425   +end;
MPRINT(EM_DIAGRAM):   end;
1258426   +
1258427   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1258428   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1258429   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1258430   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1258431   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1258432   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1258433   +end;
MPRINT(EM_DIAGRAM):   end;
1258434   +else do;
MPRINT(EM_DIAGRAM):   else do;
1258435   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1258436   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1258437   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1258438   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1258439   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1258440   +   end;
MPRINT(EM_DIAGRAM):   end;
1258441   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1258442   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1258443   +   end;
MPRINT(EM_DIAGRAM):   end;
1258444   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1258445   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1258446   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1258447   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1258448   +   end;
MPRINT(EM_DIAGRAM):   end;
1258449   +end;
MPRINT(EM_DIAGRAM):   end;
1258450   +
1258451   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1258452   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1258453   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1258454   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1258455   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1258456   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1258457   +end;
MPRINT(EM_DIAGRAM):   end;
1258458   +else do;
MPRINT(EM_DIAGRAM):   else do;
1258459   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1258460   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1258461   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1258462   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1258463   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1258464   +   end;
MPRINT(EM_DIAGRAM):   end;
1258465   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1258466   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1258467   +   end;
MPRINT(EM_DIAGRAM):   end;
1258468   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1258469   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1258470   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1258471   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1258472   +   end;
MPRINT(EM_DIAGRAM):   end;
1258473   +end;
MPRINT(EM_DIAGRAM):   end;
1258474   +
1258475   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1258476   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1258477   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1258478   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1258479   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1258480   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1258481   +end;
MPRINT(EM_DIAGRAM):   end;
1258482   +else do;
MPRINT(EM_DIAGRAM):   else do;
1258483   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1258484   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1258485   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1258486   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1258487   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1258488   +   end;
MPRINT(EM_DIAGRAM):   end;
1258489   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1258490   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1258491   +   end;
MPRINT(EM_DIAGRAM):   end;
1258492   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1258493   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1258494   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1258495   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1258496   +   end;
MPRINT(EM_DIAGRAM):   end;
1258497   +end;
MPRINT(EM_DIAGRAM):   end;
1258498   +
1258499   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1258500   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1258501   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1258502   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1258503   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1258504   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1258505   +end;
MPRINT(EM_DIAGRAM):   end;
1258506   +else do;
MPRINT(EM_DIAGRAM):   else do;
1258507   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1258508   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1258509   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1258510   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1258511   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1258512   +   end;
MPRINT(EM_DIAGRAM):   end;
1258513   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1258514   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1258515   +   end;
MPRINT(EM_DIAGRAM):   end;
1258516   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1258517   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1258518   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1258519   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1258520   +   end;
MPRINT(EM_DIAGRAM):   end;
1258521   +end;
MPRINT(EM_DIAGRAM):   end;
1258522   +
1258523   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1258524   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1258525   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1258526   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1258527   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1258528   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1258529   +end;
MPRINT(EM_DIAGRAM):   end;
1258530   +else do;
MPRINT(EM_DIAGRAM):   else do;
1258531   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1258532   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1258533   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1258534   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1258535   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1258536   +   end;
MPRINT(EM_DIAGRAM):   end;
1258537   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1258538   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1258539   +   end;
MPRINT(EM_DIAGRAM):   end;
1258540   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1258541   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1258542   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1258543   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1258544   +   end;
MPRINT(EM_DIAGRAM):   end;
1258545   +end;
MPRINT(EM_DIAGRAM):   end;
1258546   +
1258547   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1258548   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
1258549   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1258550   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1258551   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1258552   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1258553   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1258554   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1258555   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1258556   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1258557   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1258558   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1258559   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1258560   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1258561   +end;
MPRINT(EM_DIAGRAM):   end;
1258562   +else do;
MPRINT(EM_DIAGRAM):   else do;
1258563   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1258564   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1258565   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1258566   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1258567   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1258568   +   end;
MPRINT(EM_DIAGRAM):   end;
1258569   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1258570   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1258571   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1258572   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1258573   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1258574   +   end;
MPRINT(EM_DIAGRAM):   end;
1258575   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1258576   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1258577   +   end;
MPRINT(EM_DIAGRAM):   end;
1258578   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1258579   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1258580   +   end;
MPRINT(EM_DIAGRAM):   end;
1258581   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1258582   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1258583   +   end;
MPRINT(EM_DIAGRAM):   end;
1258584   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1258585   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1258586   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1258587   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1258588   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1258589   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1258590   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1258591   +   end;
MPRINT(EM_DIAGRAM):   end;
1258592   +end;
MPRINT(EM_DIAGRAM):   end;
1258593   +
1258594   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1258595   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1258596   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
1258597   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1258598   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1258599   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1258600   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1258601   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1258602   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1258603   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1258604   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1258605   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1258606   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1258607   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1258608   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1258609   +end;
MPRINT(EM_DIAGRAM):   end;
1258610   +else do;
MPRINT(EM_DIAGRAM):   else do;
1258611   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1258612   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1258613   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1258614   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1258615   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1258616   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1258617   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1258618   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1258619   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1258620   +         end;
MPRINT(EM_DIAGRAM):   end;
1258621   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1258622   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1258623   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1258624   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1258625   +            end;
MPRINT(EM_DIAGRAM):   end;
1258626   +         end;
MPRINT(EM_DIAGRAM):   end;
1258627   +      end;
MPRINT(EM_DIAGRAM):   end;
1258628   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1258629   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1258630   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1258631   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1258632   +         end;
MPRINT(EM_DIAGRAM):   end;
1258633   +      end;
MPRINT(EM_DIAGRAM):   end;
1258634   +   end;
MPRINT(EM_DIAGRAM):   end;
1258635   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1258636   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1258637   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1258638   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1258639   +      end;
MPRINT(EM_DIAGRAM):   end;
1258640   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1258641   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1258642   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1258643   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1258644   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1258645   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1258646   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1258647   +         end;
MPRINT(EM_DIAGRAM):   end;
1258648   +      end;
MPRINT(EM_DIAGRAM):   end;
1258649   +   end;
MPRINT(EM_DIAGRAM):   end;
1258650   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1258651   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1258652   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1258653   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1258654   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1258655   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1258656   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1258657   +   end;
MPRINT(EM_DIAGRAM):   end;
1258658   +end;
MPRINT(EM_DIAGRAM):   end;
1258659   +
1258660   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1258661   +*** Checking missing input Interval
1258662   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1258663   +
1258664   +IF NMISS(
1258665   +   AcceptedCmpTotal ,
1258666   +   Age ,
1258667   +   Frq ,
1258668   +   Income ,
1258669   +   Kidhome ,
1258670   +   Mnt ,
1258671   +   MntFishProducts ,
1258672   +   MntFruits ,
1258673   +   MntGoldProds ,
1258674   +   MntMeatProducts ,
1258675   +   MntSweetProducts ,
1258676   +   MntWines ,
1258677   +   MonthsAsCustomer ,
1258678   +   NumCatalogPurchases ,
1258679   +   NumDealsPurchases ,
1258680   +   NumDistPurchases ,
1258681   +   NumStorePurchases ,
1258682   +   NumWebPurchases ,
1258683   +   NumWebVisitsMonth ,
1258684   +   RFMstat ,
1258685   +   RMntFrq ,
1258686   +   Recency ,
1258687   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
1258688   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1258689   +
1258690   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1258691   +END;
MPRINT(EM_DIAGRAM):   END;
1258692   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1258693   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
1258694   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1258695   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1258696   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1258697   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1258698   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1258699   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1258700   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1258701   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1258702   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1258703   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1258704   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1258705   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1258706   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1258707   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1258708   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1258709   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1258710   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1258711   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1258712   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1258713   +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
1258714   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 *
MonthsAsCustomer ;
1258715   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1258716   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1258717   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1258718   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1258719   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1258720   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1258721   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1258722   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1258723   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1258724   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1258725   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1258726   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1258727   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1258728   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1258729   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1258730   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1258731   +END;
MPRINT(EM_DIAGRAM):   END;
1258732   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1258733   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1258734   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1258735   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1258736   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1258737   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1258738   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1258739   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1258740   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1258741   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1258742   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1258743   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1258744   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1258745   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1258746   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1258747   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1258748   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1258749   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1258750   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1258751   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1258752   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1258753   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1258754   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1258755   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1258756   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1258757   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1258758   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1258759   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1258760   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1258761   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1258762   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1258763   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1258764   +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
1258765   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 *
MonthsAsCustomer ;
1258766   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1258767   +   ELSE S_NumCatalogPurchases
1258768   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1258769   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1258770   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1258771   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1258772   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1258773   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1258774   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1258775   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1258776   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1258777   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1258778   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1258779   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1258780   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1258781   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1258782   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1258783   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1258784   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1258785   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1258786   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1258787   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1258788   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1258789   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1258790   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1258791   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1258792   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1258793   +END;
MPRINT(EM_DIAGRAM):   END;
1258794   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1258795   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
1258796   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1258797   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1258798   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
1258799   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1258800   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1258801   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
1258802   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1258803   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1258804   +   H1x1_1  =    -1.01373445510498 * S_AcceptedCmpTotal
1258805   +          +     0.33447979473871 * S_Age  +    -0.49864038088294 * S_Frq
1258806   +          +     0.31694253224638 * S_Income  +    -0.88502516255759 *
1258807   +        S_Kidhome  +    -0.95839165156922 * S_Mnt  +     1.08690890979971 *
1258808   +        S_MntFishProducts  +     0.21350737967446 * S_MntFruits
1258809   +          +     0.07347211887091 * S_MntGoldProds  +    -4.25839540508751 *
1258810   +        S_MntMeatProducts  +    -0.18409636621761 * S_MntSweetProducts
1258811   +          +     0.92254071667819 * S_MntWines  +     0.17286447654032 *
1258812   +        S_MonthsAsCustomer  +    -1.64446119745791 * S_NumCatalogPurchases
1258813   +          +    -1.14704878034134 * S_NumDealsPurchases
1258814   +          +    -0.17763404274659 * S_NumDistPurchases
1258815   +          +     0.08894400267969 * S_NumStorePurchases
1258816   +          +     0.59283747891957 * S_NumWebPurchases
1258817   +          +     0.85268274682505 * S_NumWebVisitsMonth
1258818   +          +    -0.43035426151546 * S_RFMstat  +     0.52915289749814 *
1258819   +        S_RMntFrq  +    -1.22871580072103 * S_Recency
1258820   +          +    -0.42049179704691 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.01373445510498 * S_AcceptedCmpTotal + 0.33447979473871 *
S_Age + -0.49864038088294 * S_Frq + 0.31694253224638 * S_Income + -0.88502516255759 *
S_Kidhome + -0.95839165156922 * S_Mnt + 1.08690890979971 * S_MntFishProducts +
0.21350737967446 * S_MntFruits + 0.07347211887091 * S_MntGoldProds + -4.25839540508751 *
S_MntMeatProducts + -0.18409636621761 * S_MntSweetProducts + 0.92254071667819 * S_MntWines +
0.17286447654032 * S_MonthsAsCustomer + -1.64446119745791 * S_NumCatalogPurchases +
-1.14704878034134 * S_NumDealsPurchases + -0.17763404274659 * S_NumDistPurchases +
0.08894400267969 * S_NumStorePurchases + 0.59283747891957 * S_NumWebPurchases +
0.85268274682505 * S_NumWebVisitsMonth + -0.43035426151546 * S_RFMstat + 0.52915289749814 *
S_RMntFrq + -1.22871580072103 * S_Recency + -0.42049179704691 * S_Teenhome ;
1258821   +   H1x1_2  =    -0.17196520392875 * S_AcceptedCmpTotal
1258822   +          +     0.09368836975829 * S_Age  +     -0.2079821803313 * S_Frq
1258823   +          +    -0.59508480939905 * S_Income  +     0.34485068405931 *
1258824   +        S_Kidhome  +     0.68503953220301 * S_Mnt  +    -0.41832366462675 *
1258825   +        S_MntFishProducts  +      0.3374808822635 * S_MntFruits
1258826   +          +     0.41521872138137 * S_MntGoldProds  +     1.55234986522641 *
1258827   +        S_MntMeatProducts  +     0.17336981388128 * S_MntSweetProducts
1258828   +          +    -0.03736062165339 * S_MntWines  +     0.20414742233604 *
1258829   +        S_MonthsAsCustomer  +    -1.29756795361717 * S_NumCatalogPurchases
1258830   +          +    -0.80841566068716 * S_NumDealsPurchases
1258831   +          +    -0.17995640033768 * S_NumDistPurchases
1258832   +          +     0.00713417460936 * S_NumStorePurchases
1258833   +          +     0.57881024323076 * S_NumWebPurchases
1258834   +          +    -1.35134224257365 * S_NumWebVisitsMonth
1258835   +          +     0.63440441349443 * S_RFMstat  +      0.7029589919795 *
1258836   +        S_RMntFrq  +     1.16978656262499 * S_Recency
1258837   +          +     0.22916564304766 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.17196520392875 * S_AcceptedCmpTotal + 0.09368836975829 *
S_Age + -0.2079821803313 * S_Frq + -0.59508480939905 * S_Income + 0.34485068405931 * S_Kidhome
+ 0.68503953220301 * S_Mnt + -0.41832366462675 * S_MntFishProducts + 0.3374808822635 *
S_MntFruits + 0.41521872138137 * S_MntGoldProds + 1.55234986522641 * S_MntMeatProducts +
0.17336981388128 * S_MntSweetProducts + -0.03736062165339 * S_MntWines + 0.20414742233604 *
S_MonthsAsCustomer + -1.29756795361717 * S_NumCatalogPurchases + -0.80841566068716 *
S_NumDealsPurchases + -0.17995640033768 * S_NumDistPurchases + 0.00713417460936 *
S_NumStorePurchases + 0.57881024323076 * S_NumWebPurchases + -1.35134224257365 *
S_NumWebVisitsMonth + 0.63440441349443 * S_RFMstat + 0.7029589919795 * S_RMntFrq +
1.16978656262499 * S_Recency + 0.22916564304766 * S_Teenhome ;
1258838   +   H1x1_3  =     1.25968793568007 * S_AcceptedCmpTotal
1258839   +          +     0.16058002256905 * S_Age  +    -1.00283978743671 * S_Frq
1258840   +          +     0.80202770811665 * S_Income  +     -0.7384690128283 *
1258841   +        S_Kidhome  +      0.6320116033322 * S_Mnt  +    -0.48862240567237 *
1258842   +        S_MntFishProducts  +     0.26477442063044 * S_MntFruits
1258843   +          +       0.434753861356 * S_MntGoldProds  +     3.54637875222405 *
1258844   +        S_MntMeatProducts  +    -0.09532877173293 * S_MntSweetProducts
1258845   +          +    -0.60614222423624 * S_MntWines  +     0.06807192728487 *
1258846   +        S_MonthsAsCustomer  +     0.45280110551612 * S_NumCatalogPurchases
1258847   +          +     0.57891364118717 * S_NumDealsPurchases
1258848   +          +    -0.31024556838688 * S_NumDistPurchases
1258849   +          +    -1.48708542986704 * S_NumStorePurchases
1258850   +          +    -0.93009875249206 * S_NumWebPurchases
1258851   +          +     2.01900039122935 * S_NumWebVisitsMonth
1258852   +          +     0.50006472616383 * S_RFMstat  +    -1.16854599018819 *
1258853   +        S_RMntFrq  +    -2.30414631760388 * S_Recency
1258854   +          +    -0.64226055895142 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.25968793568007 * S_AcceptedCmpTotal + 0.16058002256905 *
S_Age + -1.00283978743671 * S_Frq + 0.80202770811665 * S_Income + -0.7384690128283 * S_Kidhome
+ 0.6320116033322 * S_Mnt + -0.48862240567237 * S_MntFishProducts + 0.26477442063044 *
S_MntFruits + 0.434753861356 * S_MntGoldProds + 3.54637875222405 * S_MntMeatProducts +
-0.09532877173293 * S_MntSweetProducts + -0.60614222423624 * S_MntWines + 0.06807192728487 *
S_MonthsAsCustomer + 0.45280110551612 * S_NumCatalogPurchases + 0.57891364118717 *
S_NumDealsPurchases + -0.31024556838688 * S_NumDistPurchases + -1.48708542986704 *
S_NumStorePurchases + -0.93009875249206 * S_NumWebPurchases + 2.01900039122935 *
S_NumWebVisitsMonth + 0.50006472616383 * S_RFMstat + -1.16854599018819 * S_RMntFrq +
-2.30414631760388 * S_Recency + -0.64226055895142 * S_Teenhome ;
1258855   +   H1x1_1  = H1x1_1  +     0.90039925512906 * AcceptedCmp10
1258856   +          +    -0.47386683647261 * AcceptedCmp20  +    -0.71163968851557 *
1258857   +        AcceptedCmp30  +    -1.10005761198573 * AcceptedCmp40
1258858   +          +     0.81604940024858 * AcceptedCmp50  +    -0.03266697009221 *
1258859   +        Complain0  +     0.45877513475435 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.90039925512906 * AcceptedCmp10 + -0.47386683647261 *
AcceptedCmp20 + -0.71163968851557 * AcceptedCmp30 + -1.10005761198573 * AcceptedCmp40 +
0.81604940024858 * AcceptedCmp50 + -0.03266697009221 * Complain0 + 0.45877513475435 *
HigherEducationBinary0 ;
1258860   +   H1x1_2  = H1x1_2  +    -0.09498245462104 * AcceptedCmp10
1258861   +          +     -0.5878058848086 * AcceptedCmp20  +     1.08802173663414 *
1258862   +        AcceptedCmp30  +      0.4681907014168 * AcceptedCmp40
1258863   +          +    -1.71290692396514 * AcceptedCmp50  +    -0.47229847844337 *
1258864   +        Complain0  +     0.41790693564846 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.09498245462104 * AcceptedCmp10 + -0.5878058848086 *
AcceptedCmp20 + 1.08802173663414 * AcceptedCmp30 + 0.4681907014168 * AcceptedCmp40 +
-1.71290692396514 * AcceptedCmp50 + -0.47229847844337 * Complain0 + 0.41790693564846 *
HigherEducationBinary0 ;
1258865   +   H1x1_3  = H1x1_3  +    -0.14466250407205 * AcceptedCmp10
1258866   +          +    -0.05281153450358 * AcceptedCmp20  +     0.30771572513376 *
1258867   +        AcceptedCmp30  +    -0.25237634767535 * AcceptedCmp40
1258868   +          +    -2.36680490171638 * AcceptedCmp50  +    -0.12273085838026 *
1258869   +        Complain0  +     0.40951032893236 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.14466250407205 * AcceptedCmp10 + -0.05281153450358
* AcceptedCmp20 + 0.30771572513376 * AcceptedCmp30 + -0.25237634767535 * AcceptedCmp40 +
-2.36680490171638 * AcceptedCmp50 + -0.12273085838026 * Complain0 + 0.40951032893236 *
HigherEducationBinary0 ;
1258870   +   H1x1_1  = H1x1_1  +    -0.00834762223325 * Education2n_Cycle
1258871   +          +    -0.42766880626216 * EducationBasic  +    -0.47517247816239 *
1258872   +        EducationGraduation  +    -0.68730596079478 * EducationMaster
1258873   +          +     0.55883606830033 * Marital_StatusDivorced
1258874   +          +    -0.54530037567066 * Marital_StatusMarried
1258875   +          +    -0.52994736075753 * Marital_StatusSingle
1258876   +          +    -0.53882341831078 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.00834762223325 * Education2n_Cycle +
-0.42766880626216 * EducationBasic + -0.47517247816239 * EducationGraduation +
-0.68730596079478 * EducationMaster + 0.55883606830033 * Marital_StatusDivorced +
-0.54530037567066 * Marital_StatusMarried + -0.52994736075753 * Marital_StatusSingle +
-0.53882341831078 * Marital_StatusTogether ;
1258877   +   H1x1_2  = H1x1_2  +    -0.22709215793074 * Education2n_Cycle
1258878   +          +     0.07643166113928 * EducationBasic  +    -0.97269335071824 *
1258879   +        EducationGraduation  +     0.31201349236277 * EducationMaster
1258880   +          +    -1.07368484057033 * Marital_StatusDivorced
1258881   +          +     2.73313504711262 * Marital_StatusMarried
1258882   +          +    -2.18530462876058 * Marital_StatusSingle
1258883   +          +     2.38158278480467 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.22709215793074 * Education2n_Cycle +
0.07643166113928 * EducationBasic + -0.97269335071824 * EducationGraduation + 0.31201349236277
* EducationMaster + -1.07368484057033 * Marital_StatusDivorced + 2.73313504711262 *
Marital_StatusMarried + -2.18530462876058 * Marital_StatusSingle + 2.38158278480467 *
Marital_StatusTogether ;
1258884   +   H1x1_3  = H1x1_3  +     0.04453578767387 * Education2n_Cycle
1258885   +          +    -0.65383041132508 * EducationBasic  +    -0.17789960866108 *
1258886   +        EducationGraduation  +    -0.35544166792219 * EducationMaster
1258887   +          +     0.49993144243043 * Marital_StatusDivorced
1258888   +          +    -0.38953339116829 * Marital_StatusMarried
1258889   +          +    -0.10836287319942 * Marital_StatusSingle
1258890   +          +    -0.42049990939036 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.04453578767387 * Education2n_Cycle +
-0.65383041132508 * EducationBasic + -0.17789960866108 * EducationGraduation +
-0.35544166792219 * EducationMaster + 0.49993144243043 * Marital_StatusDivorced +
-0.38953339116829 * Marital_StatusMarried + -0.10836287319942 * Marital_StatusSingle +
-0.42049990939036 * Marital_StatusTogether ;
1258891   +   H1x1_1  =    -0.67322256806566 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.67322256806566 + H1x1_1 ;
1258892   +   H1x1_2  =     1.02621981675321 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.02621981675321 + H1x1_2 ;
1258893   +   H1x1_3  =     1.79721701815172 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.79721701815172 + H1x1_3 ;
1258894   +   H1x1_4  = 0;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0;
1258895   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
1258896   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1258897   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
1258898   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
1258899   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
1258900   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
1258901   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
1258902   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
1258903   +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
1258904   +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
1258905   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
1258906   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
1258907   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
1258908   +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
1258909   +END;
MPRINT(EM_DIAGRAM):   END;
1258910   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1258911   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
1258912   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
1258913   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
1258914   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
1258915   +END;
MPRINT(EM_DIAGRAM):   END;
1258916   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1258917   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1258918   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1258919   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1258920   +   P_DepVar1  =    -3.84261611144245 * H1x1_1  +    -7.15065431642895 * H1x1_2
1258921   +          +       11.29639646928 * H1x1_3  +    -2.12563351481128 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.84261611144245 * H1x1_1 + -7.15065431642895 * H1x1_2 +
11.29639646928 * H1x1_3 + -2.12563351481128 * H1x1_4 ;
1258922   +   P_DepVar1  =    -3.54755955929493 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.54755955929493 + P_DepVar1 ;
1258923   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1258924   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1258925   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1258926   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1258927   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1258928   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1258929   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1258930   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1258931   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1258932   +END;
MPRINT(EM_DIAGRAM):   END;
1258933   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1258934   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1258935   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1258936   +END;
MPRINT(EM_DIAGRAM):   END;
1258937   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1258938   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1258939   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1258940   +END;
MPRINT(EM_DIAGRAM):   END;
1258941   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1258942   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1258943   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1258944   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1258945   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1258946   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1258947   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1258948   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1258949   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1258950   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1258951   +END;
MPRINT(EM_DIAGRAM):   END;
1258952   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1258953   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1258954   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1258955   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1258956    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1258957    quit;
1258958    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1258959    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1258960    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1258961    retain ID 2 Node "AutoNeural9";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural9";
1258962    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1258963    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2632 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2632 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1258964    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1258965    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1258966    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2632 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2632 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1258967    proc sort data=EMWS8.AutoNeural9_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural9_variableset out=_temp2(keep=NAME
CREATOR);
1258968    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1258969    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL9_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1258970    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1258971    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1258972    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1258973    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1258974    proc contents data=EMWS8.AutoNeural9_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural9_train out=_meta(keep=NAME) noprint;
1258975    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 57 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1258976    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1258977    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1258978    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 57 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 57 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1258979    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1258980    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1258981    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1258982    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 57 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 57 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1258983    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1258984    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1258984  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1551 rows and 5 columns.
 
1258985    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1258986    proc append base=EMWS8.Ensmbl46_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl46_FCMP data=_tempx;
1258987    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL46_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1551 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL46_FCMP has 1551 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1258988    filename _pref
1258988  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1258989    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1258990    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1258991   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1258992   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1258993   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1258994   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1258995   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1258996   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1258997    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1258998    quit;
1258999    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1259000    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1259001    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1259002    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1259003    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1259004    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1259005    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1259006    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1259007    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1259008    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1259009    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1259010    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1259011    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1259012    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1259013    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1259014    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1259015    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1259016    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
1259017    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1259018    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1259019    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1259020    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1259021    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1259022    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1259023    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1259024    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1259025    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1259025  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
1259026    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1259027    proc append base=EMWS8.Ensmbl46_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl46_FCMP data=_tempx;
1259028    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL46_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL46_FCMP has 1555 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1259029    filename _pref
1259029  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1259030    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1259031    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1259032   +
1259033   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1259034   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1259034  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1259035   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1259036   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1259037   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1259038   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1259039   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1259040    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1259041    quit;
1259042    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1259043    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1259044    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1259045    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1259046    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1259047    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1259048    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1259049    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1259050    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1259051    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1259052    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1259053    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1259054    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1259055    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1259056    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1259057    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1259058    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1259059    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1259060    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1259061    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1259062    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
1259063    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1259064    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1259065    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1259066    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1259067    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1259068    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1259068  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
1259069    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1259070    proc append base=EMWS8.Ensmbl46_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl46_FCMP data=_tempx;
1259071    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL46_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL46_FCMP has 1594 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1259072    filename _pref
1259072  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1259073    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1259074    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1259075   +
1259076   +
1259077   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1259078   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1259079   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1259080   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1259081   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1259082   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1259083   +
1259084   +
1259085   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1259086   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1259087   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1259088   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1259089   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1259090   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1259091   +
1259092   +
1259093   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1259094   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1259095   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1259096   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1259097   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1259098   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1259099   +
1259100   +
1259101   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1259102   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1259103   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1259104   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1259105   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1259106   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1259107   +
1259108   +
1259109   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1259110   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1259111   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1259112   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1259113   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1259114   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1259115   +
1259116   +
1259117   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1259118   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1259119   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1259120   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1259121   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1259122   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1259123   +
1259124   +
1259125   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1259126   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1259127   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1259128   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1259129   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1259130   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1259131   +
1259132   +
1259133   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1259134   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1259135   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1259136   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1259137   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1259138   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1259139   +if
1259140   +_FILTERNORM1 not in ( '.')
1259141   + and
1259142   +_FILTERNORM2 not in ( '.')
1259143   + and
1259144   +_FILTERNORM3 not in ( '.')
1259145   + and
1259146   +_FILTERNORM4 not in ( '.')
1259147   + and
1259148   +_FILTERNORM5 not in ( '.')
1259149   + and
1259150   +_FILTERNORM6 not in ( '.')
1259151   + and
1259152   +_FILTERNORM7 not in ( ' ')
1259153   + and
1259154   +_FILTERNORM8 not in ( ' ')
1259155   +and
1259156   +( Dt_Customer ne .)
1259157   +and ( Income ne . and (Income<=107000))
1259158   +and ( Kidhome ne .)
1259159   +and ( MntFishProducts ne .)
1259160   +and ( MntFruits ne .)
1259161   +and ( MntGoldProds ne .)
1259162   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1259163   +and ( MntSweetProducts ne .)
1259164   +and ( MntWines ne .)
1259165   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1259166   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1259167   +and ( NumStorePurchases ne .)
1259168   +and ( NumWebPurchases ne .)
1259169   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1259170   +and ( Recency ne .)
1259171   +and ( Teenhome ne .)
1259172   +and ( Year_Birth ne .)
1259173   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
1259174   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1259175   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1259176   +end;
MPRINT(EM_DIAGRAM):   end;
1259177   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1259178   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1259179    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1259180    quit;
1259181    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1259182    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1259183    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1259184    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1259185    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1259186    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1259187    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1259188    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1259189    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1259190    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1259191    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1259192    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1259193    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1259194    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1259195    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1259196    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1259197    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1259198    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1259199    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1259200    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1259201    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1259202    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1259203    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1259204    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1259205    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1259206    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1259207    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1259207  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
1259208    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1259209    proc append base=EMWS8.Ensmbl46_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl46_FCMP data=_tempx;
1259210    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL46_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL46_FCMP has 1660 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1259211    %macro varDept(fcmpdata=,id=);
1259212    %global nobs&id scoreFlag&id;
1259213    %let scoreFlag&id = 0;
1259214    %if &id=1 or ^&fcmpStart %then %do;
1259215    proc sort data=&fcmpdata out=_temp&id nodupkey;
1259216    by NAME;
1259217    where id=&id and LHS in( %let j=1;
1259218    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1259219    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1259220    "&var" %let j = %eval(&j+1);
1259221    %end;
1259222    );
1259223    run;
1259224    %let dsid = %sysfunc(open(_temp&id));
1259225    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1259226    %let dsid = %sysfunc(close(&dsid));
1259227    %if &&nobs&id %then %do;
1259228    %let scoreFlag&id = 1;
1259229    %let fcmpStart = 1;
1259230    %end;
1259231    %else %let fcmpStart = 0;
1259232    %end;
1259233    %else %do;
1259234    proc sort data=&fcmpdata out=_tempid;
1259235    where id=&id;
1259236    by LHS;
1259237    run;
1259238    %let dsid = %sysfunc(open(_tempid));
1259239    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1259240    %let dsid = %sysfunc(close(&dsid));
1259241    %if ^&&nobs&id %then %do;
1259242    proc datasets lib=work nolist;
1259243    delete _tempid;
1259244    run;
1259245    quit;
1259246    %end;
1259247    %else %do;
1259248    data _tempAll;
1259249    set %let j=%eval(&id-1);
1259250    %do x=1 %to &j;
1259251    %if &&nobs&x %then %do;
1259252    _temp&x %end;
1259253    %end;
1259254    ;
1259255    run;
1259256    proc sql;
1259257    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1259257  ! work._tempid p2 where p.name=p2.lhs;
1259258    quit;
1259259    data _temp&id;
1259260    set _temp&id;
1259261    where LHS ne '' and NAME ne '' and Node ne '';
1259262    run;
1259263    proc datasets lib=work nolist;
1259264    delete _tempAll;
1259265    run;
1259266    %let dsid = %sysfunc(open(_temp&id));
1259267    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1259268    %let dsid = %sysfunc(close(&dsid));
1259269    %if ^&&nobs&id %then %do;
1259270    proc datasets lib=work nolist;
1259271    delete _temp&id;
1259272    run;
1259273    quit;
1259274    %end;
1259275    %else %do;
1259276    %let scoreFlag&id = 1;
1259277    data _temp&id;
1259278    set _temp&id;
1259279    where LHS ne NAME and node ne '';
1259280    run;
1259281    %let dsid = %sysfunc(open(_temp&id));
1259282    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1259283    %let dsid = %sysfunc(close(&dsid));
1259284    %if ^&&nobs&id %then %do;
1259285    proc datasets lib=work nolist;
1259286    delete _temp&id;
1259287    run;
1259288    quit;
1259289    %end;
1259290    %else %do;
1259291    proc sort data=_temp&id nodupkey;
1259292    by LHS NAME;
1259293    run;
1259294    %end;
1259295    %end;
1259296    %end;
1259297    %end;
1259298    %mend varDept;
1259299    %macro optCode(outdata=fcmpdata);
1259300    %global fcmpStart;
1259301    %let fcmpStart = 0;
1259302    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1259303    %let NumNodes=9;
1259304    %do k=1 %to &NumNodes;
1259305    %vardept(fcmpdata=&outdata, id=&k);
1259306    %end;
1259307    %mend optCode;
1259308    %optcode(outData=EMWS8.Ensmbl46_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl46_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL46_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl46_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 146 observations read from the data set EMWS8.ENSMBL46_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 108 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 38 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl46_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL46_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl46_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL46_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl46_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL46_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 38 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 38 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl46_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL46_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 38 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 42 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl46_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL46_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 38 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 81 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl46_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL46_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl46_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL46_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
1259309    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1259310    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1259311    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1259312    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1259313    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1259314    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1259315    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1259316    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1259317    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1259318    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
1259318  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.
 
1259319    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1259320    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
1259321    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
1259322    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1259323    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
1259324    * Ensmbl46: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Ensmbl46: Computing metadata for TRAIN data;
1259325    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
NOTE: View EMWS8.ENSMBL46_TRAIN.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl46\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.Ensmbl46_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.Ensmbl46_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.Ensmbl46_TRAIN out=WORK.M1FJS094 noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1FJS094;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M1FJS094(keep=name type length label format formatl
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl,
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd,
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat =
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl,
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1FJS094;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M1FJS094;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M2DJ8_WV NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2DJ8_WV;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M2DJ8_WV;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1PJAY1W(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M2DJ8_WV;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2DJ8_WV;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M2DJ8_WV;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN"
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO"
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON"
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD"
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" ))
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype =
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" ))
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT"
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB"
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType =
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA',
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W',
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL',
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT',
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2DJ8_WV;
MPRINT(EMADVISECOLUMNS):   set WORK.M2DJ8_WV;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL=
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY=
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT=
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL=
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural10_TRAIN noprint
out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural10_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl46_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Ensmbl46";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "Ensmbl46";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "Ensmbl46";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "Ensmbl46";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "Ensmbl46";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "Ensmbl46";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "Ensmbl46";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "Ensmbl46";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "Ensmbl46";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "Ensmbl46";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl46: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   if NAME in( "I_DepVar" "F_DepVar" "U_DepVar" "_WARN_" "P_DepVar1"
"P_DepVar0" "R_DepVar1" "R_DepVar0" ) then CREATOR="Ensmbl46";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
1259645    data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
1259646    set EMWS8.Ensmbl46_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl46_EMINFO;
1259647    where DATA='Ensmbl46' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='Ensmbl46' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE',
'MODEL');
1259648    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL46_EMINFO.
      WHERE (DATA='Ensmbl46') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1259649    data EMWS8.Ensmbl46_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl46_EMINFO;
1259650    length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
1259651    input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
1259652    cards;
MPRINT(EM_DIAGRAM):   cards;
 
NOTE: The data set EMWS8.ENSMBL46_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   run;
1259656    run;
1259657    data EMWS8.Ensmbl46_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl46_EMINFO;
1259658    set EMWS8.Ensmbl46_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl46_EMINFO WORK.MODELTEMP_INFO;
1259659    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS8.ENSMBL46_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.ENSMBL46_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1259660    proc sort data = EMWS8.Ensmbl46_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Ensmbl46_EMINFO NOTHREADS;
1259661    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1259662    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS8.ENSMBL46_EMINFO.
NOTE: The data set EMWS8.ENSMBL46_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1259663    proc sort data = EMWS8.AutoNeural10_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.AutoNeural10_EMINFO OUT=WORK.SORTEDEMINFO
NOTHREADS;
1259664    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1259665    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.AUTONEURAL10_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1259666    proc sort data = EMWS8.Ensmbl46_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.Ensmbl46_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
1259667    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1259668    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.ENSMBL46_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1259669    data EMWS8.Ensmbl46_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl46_EMINFO;
1259670    merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
1259671    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1259672    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.ENSMBL46_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1259673    proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
1259674    delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
1259675    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
1259676    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
 
 
NOTE: View EMWS8.ENSMBL46_TRAIN.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
NOTE: View EMWS8.ENSMBL46_VALIDATE.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "12.23 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Report Log
Date:                28. April 2016
Time:                12.23 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O0PDC0KN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl46\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O0PDC0KN new;
MPRINT(EM_DIAGRAM):   run;
1259700    data EMWS8.Ensmbl46_EMOUTFIT;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl46_EMOUTFIT;
1259701    set EMWS8.Ensmbl46_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl46_EMOUTFIT;
1259702    length TargetLabel $200;
MPRINT(EM_DIAGRAM):   length TargetLabel $200;
1259703    label targetLabel = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel,
1259703  ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   label targetLabel = "Target Label";
1259704    if upcase(TARGET) eq "DEPVAR" then TargetLabel = 'DepVar';
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TargetLabel = 'DepVar';
1259705    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.ENSMBL46_EMOUTFIT.
NOTE: The data set EMWS8.ENSMBL46_EMOUTFIT has 1 observations and 20 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1259706    proc sort data=EMWS8.Ensmbl46_EMREPORTFIT nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.Ensmbl46_EMREPORTFIT nothreads;
1259707    by TARGET;
MPRINT(EM_DIAGRAM):   by TARGET;
1259708    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 9 observations read from the data set EMWS8.ENSMBL46_EMREPORTFIT.
NOTE: The data set EMWS8.ENSMBL46_EMREPORTFIT has 9 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1259709    %let _EMwarndup = 0;
1259710    %let _EMtargetdup =;
1259711    %let _EMASEtargetdup =;
1259712    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
1259713    set EMWS8.Ensmbl46_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl46_EMOUTFIT;
1259714    if .<_ASE_<0.000001 then do;
MPRINT(EM_DIAGRAM):   if .<_ASE_<0.000001 then do;
1259715    call symput('_EMwarndup', '1');
MPRINT(EM_DIAGRAM):   call symput('_EMwarndup', '1');
1259716    call symput('_EMtargetdup', target);
MPRINT(EM_DIAGRAM):   call symput('_EMtargetdup', target);
1259717    call symput('_EMASEtargetdup', put(_ASE_, best.));
MPRINT(EM_DIAGRAM):   call symput('_EMASEtargetdup', put(_ASE_, best.));
1259718    end;
MPRINT(EM_DIAGRAM):   end;
1259719    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.ENSMBL46_EMOUTFIT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1259720    proc sort data=EMWS8.AutoNeural9_CMeta_TRAIN out=WORK.SUBSETINMETA;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.AutoNeural9_CMeta_TRAIN out=WORK.SUBSETINMETA;
1259721    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1259722    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 48 observations read from the data set EMWS8.AUTONEURAL9_CMETA_TRAIN.
NOTE: The data set WORK.SUBSETINMETA has 48 observations and 21 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1259723    proc sort data=EMWS8.Ensmbl46_VariableSet out=WORK.SUBSETVARSET(keep=NAME REPORT);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Ensmbl46_VariableSet
out=WORK.SUBSETVARSET(keep=NAME REPORT);
1259724    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1259725    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 38 observations read from the data set EMWS8.ENSMBL46_VARIABLESET.
NOTE: The data set WORK.SUBSETVARSET has 38 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1259726    data WORK.ASSESS_META;
MPRINT(EM_DIAGRAM):   data WORK.ASSESS_META;
1259727    merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
MPRINT(EM_DIAGRAM):   merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
1259728    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1259729    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 48 observations read from the data set WORK.SUBSETINMETA.
NOTE: There were 38 observations read from the data set WORK.SUBSETVARSET.
NOTE: The data set WORK.ASSESS_META has 48 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1259730    data EM_temp_assessMeta;
MPRINT(EM_DIAGRAM):    data EM_temp_assessMeta;
1259731    set EMWS8.Ensmbl46_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl46_CMeta_TRAIN;
1259732    where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST')
1259732  ! ;
MPRINT(EM_DIAGRAM):   where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION',
'ASSESS', 'COST');
1259733    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS8.ENSMBL46_CMETA_TRAIN.
      WHERE role in ('ASSESS', 'CLASSIFICATION', 'COST', 'DECISION', 'PREDICT', 'RESIDUAL');
NOTE: The data set WORK.EM_TEMP_ASSESSMETA has 8 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1259734    data EM_temp_assessdata;
MPRINT(EM_DIAGRAM):    data EM_temp_assessdata;
1259735    set EMWS8.Ensmbl46_TRAIN(keep=
1259736    F_DepVar
1259737    I_DepVar
1259738    P_DepVar0
1259739    P_DepVar1
1259740    R_DepVar0
1259741    R_DepVar1
1259742    U_DepVar
1259743    _WARN_
1259744    DepVar
1259745    );
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl46_TRAIN(keep= F_DepVar I_DepVar P_DepVar0 P_DepVar1
R_DepVar0 R_DepVar1 U_DepVar _WARN_ DepVar );
1259746    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2374 observations read from the data set EMWS8.PART_TRAIN.
NOTE: There were 2374 observations read from the data set EMWS8.META_TRAIN.
NOTE: View EMWS8.ENSMBL46_TRAIN.VIEW used (Total process time):
      real time           0.18 seconds
      cpu time            0.18 seconds
 
NOTE: There were 2374 observations read from the data set EMWS8.AUTONEURAL10_TRAIN.
NOTE: There were 2374 observations read from the data set EMWS8.ENSMBL46_TRAIN.
NOTE: The data set WORK.EM_TEMP_ASSESSDATA has 2374 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.20 seconds
      cpu time            0.20 seconds
 
 
MPRINT(EM_DIAGRAM):    proc freq data=EM_temp_assessdata noprint;
MPRINT(EM_DIAGRAM):   table I_DepVar*F_DepVar / out = WORK.Ensmbl46_1XOD754 nocol norow outpct;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.Ensmbl46_1XOD754;
MPRINT(EM_DIAGRAM):   length _TYPE_ $10 DATAROLE TARGET $32 TARGETLABEL $200 FROM INTO $32
CORRECTTEXT $40 ;
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Outcome Type";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role";
MPRINT(EM_DIAGRAM):   label TARGET = "Target Variable";
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
MPRINT(EM_DIAGRAM):   label CORRECTTEXT = "Correct Text";
MPRINT(EM_DIAGRAM):   label CORRECT = "Correct";
MPRINT(EM_DIAGRAM):   set WORK.Ensmbl46_1XOD754(rename=(F_DepVar=FROM I_DepVar=INTO));
MPRINT(EM_DIAGRAM):   retain _TYPE_ 'PREDICTION' DATAROLE "TRAIN" TARGET "DepVar";
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   if FROM eq INTO then do;
MPRINT(EM_DIAGRAM):   CORRECT = 0;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Correct";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   CORRECT = 1;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Incorrect";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl46_EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):   set WORK.Ensmbl46_1XOD754;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   set WORK.Ensmbl46_1XOD754;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT(drop=INTO FROM _TYPE_);
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   length MISC $12;
MPRINT(EM_DIAGRAM):   if FROM='1' and INTO='1' then MISC='TRUEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM='1' and INTO ne '1' then MISC='FALSENEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne '1' and INTO='1' then MISC='FALSEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne'1' and INTO ne '1' then MISC='TRUENEVENT';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.MISCREPORT nothreads;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc summary data=WORK.MISCREPORT NWAY;
MPRINT(EM_DIAGRAM):   output out=WORK.MISCCOUNT(drop=_FREQ_ _TYPE_) SUM=COUNT;
MPRINT(EM_DIAGRAM):   CLASS MISC;
MPRINT(EM_DIAGRAM):   VAR COUNT;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK.MISCCOUNT out=WORK.MISCREPORT(drop=_NAME_
_LABEL_);
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   ID MISC;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl46_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data ASSESS_REPORTMETA;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl46_VariableSet;
MPRINT(EM_DIAGRAM):   where REPORT='Y';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emassmt.em_assess.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural9_DepVar_DM;
MPRINT(EM_DIAGRAM):   where _TYPE_="TARGET";
MPRINT(EM_DIAGRAM):   call symput('ASSMT_EVENT', strip(event));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):
MPRINT(EM_ASSESS):   data _ea_tmpdata;
MPRINT(EM_ASSESS):   set EM_temp_assessdata;
MPRINT(EM_ASSESS):   _tmpfreqvar_=1;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_CHECKEMSETINIT):   DATA _NULL_;
MPRINT(EM_CHECKEMSETINIT):   EM_SETINIT = 'N';
MPRINT(EM_CHECKEMSETINIT):   IF SYSPROD('PRODNUM50') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM448') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM102') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM103') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   CALL SYMPUT('EM_SETINIT', EM_SETINIT);
MPRINT(EM_CHECKEMSETINIT):   RUN;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Reading in reporting data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET ASSESS_REPORTMETA END = EOF;
MPRINT(EM_ASSESS):   IF TYPE = "C" OR UPCASE (LEVEL) IN ("NOMINAL", "BINARY" , "ORDINAL") THEN
DO;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMCTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTC" || LEFT (PUT (NUMCTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "C");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF UPCASE(NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMNTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTN" || LEFT (PUT (NUMNTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMNTOREPORT", NUMNTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMCTOREPORT", NUMCTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMTOREPORT", SUM (NUMNTOREPORT, NUMCTOREPORT));
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   PROC DMDB DATA = _ea_tmpdata VAROUT = VAROUT DMDBCAT = _D CLASSOUT =
_ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   CLASS F_DepVar ;
 
MPRINT(EM_ASSESS):   VAR P_DepVar1 _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_;
MPRINT(EM_ASSESS):   RUN ;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   PROC SORT DATA = _ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _auxeventname (keep = __event__) ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ...FLAG0_1 = ..... TARGET IS 0, 1 & EVENT = 1;
 
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   length __event__ $ 32;
MPRINT(EM_ASSESS):   RETAIN FLAG0_1 1 NUM1 . NUM0 . __event__ "_missing_" ;
 
MPRINT(EM_ASSESS):   SET _ASSMT_CLASSOUT END = EOF;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ....... LEVEL = BINARY OR NOMINAL OR ORDINAL;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   IF UPCASE(NAME) = UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   CUMFREQ + FREQUENCY;
MPRINT(EM_ASSESS):   IF LEVEL NE "." THEN DO;
MPRINT(EM_ASSESS):   N1 + 1;
MPRINT(EM_ASSESS):   IF (NRAW NE 0 AND NRAW NE 1) OR TYPE NE "N" OR "" > " " THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ......................... IF EVENT NE BLANK;
MPRINT(EM_ASSESS):   * ....................LEVEL IS CHAR VAR ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   IF UPCASE("1") = UPCASE(LEVEL) THEN DO;
MPRINT(EM_ASSESS):   NUM1 = FREQUENCY;
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", CRAW );
MPRINT(EM_ASSESS):   __event__ = craw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   ELSE do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", NRAW );
MPRINT(EM_ASSESS):   __event__ = nraw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF LAST.NAME THEN DO;
 
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * .............. IN NOMINAL CASE, NEED TO GROUP ALL '0' ;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   NUM0 = SUM (CUMFREQ, - NUM1);
MPRINT(EM_ASSESS):   IF NUM0 < 0 THEN NUM0 = 0;
MPRINT(EM_ASSESS):   IF NUM1 = . THEN NUM1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM0", NUM0 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM1", NUM1);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM1", NUM1 / CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM0", (CUMFREQ - NUM1) / CUMFREQ);
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN DO;
MPRINT(EM_ASSESS):   FLAG0_1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "C" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF "" = " " THEN DO;
MPRINT(EM_ASSESS):   IF "1" NE "1" THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "N" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ................... IF TYPE = N;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("FLAG0_1", FLAG0_1 );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................IF LAST.NAME ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ...............IF LEVEL NE '.' ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * .............. IF NAME = TARGET;
MPRINT(EM_ASSESS):   ELSE IF "" > " " AND UPCASE(NAME) = UPCASE("") THEN DO;
MPRINT(EM_ASSESS):   NUMDECISIONS + 1;
MPRINT(EM_ASSESS):   LEVEL = TRANSLATE (LEVEL, "_", "'", "_", '"');
MPRINT(EM_ASSESS):   CALL SYMPUTX ("D_LABEL" || LEFT (PUT (NUMDECISIONS, 3.)), LEVEL );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................... ELSE IF UPCASE;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   output _auxeventname;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMOBS", CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMDECISIONS", NUMDECISIONS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET VAROUT END = EOF;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) = UPCASE ("P_DepVar1") THEN DO;
MPRINT(EM_ASSESS):   IF N = 0 THEN DO;
MPRINT(EM_ASSESS):   PUT //// "          Warning: All posterior probabilities are missing
values ";
MPRINT(EM_ASSESS):   PUT ///;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("ALLMISS", 1);
MPRINT(EM_ASSESS):   STOP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("ALLMISS", 0);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB", MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB", MAX);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("DIFF", MAX - MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NMISSPROB", NMISS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF UPCASE (NAME) = UPCASE ("_tmpfreqvar_") THEN DO;
MPRINT(EM_ASSESS):   AUXMIN = MIN - INT (MIN);
MPRINT(EM_ASSESS):   AUXMAX = MAX - INT (MAX);
MPRINT(EM_ASSESS):   IF AUXMIN > 0 OR AUXMAX > 0 THEN CALL SYMPUTX ("USEWEIGHT", "Y");
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("USEWEIGHT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _ANY0;
MPRINT(EM_ASSESS):   SET _ea_tmpdata (KEEP = F_DepVar P_DepVar1 _tmpfreqvar_ );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................... No Formats;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF LEFT ( F_DepVar ) = "1" THEN NTARGET = 1;
MPRINT(EM_ASSESS):   ELSE NTARGET = 0;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Before proc summary of binary case;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC SUMMARY DATA = _ANY0 (KEEP = P_DepVar1 NTARGET _tmpfreqvar_ WHERE =
(NTARGET > . )) NWAY MISSING;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   CLASS P_DepVar1 ;
MPRINT(EM_ASSESS):   VAR NTARGET ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   OUTPUT OUT = ANYSUM (DROP = _TYPE_) MEAN = _MEANTARGET _MEANFREQVAR ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... Main Data Set Processing, Binary case;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK (KEEP = BASECAPC BASECAP __EVENT__ BASEEVENTS
BASEGAIN BASELIFT BASERESP BASERESPC BESTCAP BESTCAPC BESTGAIN BESTLIFT BESTLIFTC
BESTNUMEVENTS BESTRESP BESTRESPC BIN CBASELIFT C_LIFT C_P_CAPT_RESP C_P_RESP GAIN LIFT MAXPROB
MINPROB MNPROB NUMNONRESP NUMOBS NUMRESP PERCENTILE P_CAPT_RESP P_RESP ) WORK._TEMPSCOREDIST
(KEEP = BIN LOWERPROB UPPERPROB EVENTVALUE SCR_NUMEVENTS MODELSCORE SCR_NUMNONEVENTS RANGE
NUMOBSINGROUP PERCOBSINGROUP C_PERCOBSINGROUP SCR_P_EVENTS SCR_CP_EVENTS SCR_P_NONEVENTS
SCR_CP_NONEVENTS SCR_MNPROB SCR_MINPROB SCR_MAXPROB ) ;
 
MPRINT(EM_ASSESS):   SET ANYSUM END = EOF;
 
MPRINT(EM_ASSESS):   IF _N_ = 1 THEN SET _AUXEVENTNAME;
 
MPRINT(EM_ASSESS):   RETAIN MINPROB1 - MINPROB20 1 MAXPROB1 - MAXPROB20 0 MNPROB1 - MNPROB20 0
NUMOBS1 - NUMOBS20 0 NUMRESP1 - NUMRESP20 0 TRUEPOS1 - TRUEPOS100 0 TRUENEG1 - TRUENEG100 0
FALSEPOS1 - FALSEPOS100 0 FALSENEG1 - FALSENEG100 0 EVENTS1 - EVENTS100 NONEVENTS1 -
NONEVENTS100 0 FIRSTIN1 - FIRSTIN100 . LASTIN1 - LASTIN100 . RESPRATE 0.151221567 _NEVENTS 359
_NNONEVENTS 2015 TARGET "NTARGET" ;
MPRINT(EM_ASSESS):   ARRAY MINPROBS (20) MINPROB1 - MINPROB20;
MPRINT(EM_ASSESS):   ARRAY MAXPROBS (20) MAXPROB1 - MAXPROB20;
MPRINT(EM_ASSESS):   ARRAY MNPROBS (20) MNPROB1 - MNPROB20;
MPRINT(EM_ASSESS):   ARRAY NUMOBSS (20) NUMOBS1 - NUMOBS20;
MPRINT(EM_ASSESS):   ARRAY NUMRESPS (20) NUMRESP1 - NUMRESP20;
MPRINT(EM_ASSESS):   ARRAY TRUEPOSX (100) TRUEPOS1 - TRUEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSEPOSX (100) FALSEPOS1 - FALSEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSENEGX (100) FALSENEG1 - FALSENEG100;
MPRINT(EM_ASSESS):   ARRAY TRUENEGX (100) TRUENEG1 - TRUENEG100;
MPRINT(EM_ASSESS):   ARRAY _EVENTS (100) EVENTS1 - EVENTS100;
MPRINT(EM_ASSESS):   ARRAY NONEVENTS (100) NONEVENTS1 - NONEVENTS100;
MPRINT(EM_ASSESS):   ARRAY FIRSTIN (100) FIRSTIN1 - FIRSTIN100;
MPRINT(EM_ASSESS):   ARRAY LASTIN (100) LASTIN1 - LASTIN100;
MPRINT(EM_ASSESS):   RETAIN SCR_MNPROB1 - SCR_MNPROB100 0 SCR_MINPROB1 - SCR_MINPROB100 1
SCR_MAXPROB1 - SCR_MAXPROB100 0;
MPRINT(EM_ASSESS):   ARRAY SCR_MNPROBS (100) SCR_MNPROB1 - SCR_MNPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MINPROBS (100) SCR_MINPROB1 - SCR_MINPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MAXPROBS (100) SCR_MAXPROB1 - SCR_MAXPROB100;
MPRINT(EM_ASSESS):   DROP SCR_MINPROB1 - SCR_MINPROB100 SCR_MAXPROB1 - SCR_MAXPROB100
SCR_MNPROB1 - SCR_MNPROB100 ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...... Area For 8 Financials ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF _MEANTARGET = . THEN _MEANTARGET = RESPRATE;
MPRINT(EM_ASSESS):   DROP N1 _K SUMWEIGHTS ;
MPRINT(EM_ASSESS):   SUMWEIGHTS = 1;
 
MPRINT(EM_ASSESS):   DO _K = 1 TO CEIL (_FREQ_);
MPRINT(EM_ASSESS):   IF _K = CEIL (_FREQ_) THEN DO;
MPRINT(EM_ASSESS):   IF _FREQ_ < CEIL (_FREQ_) THEN _WEIGHT = _FREQ_ - FLOOR (_FREQ_);
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   N1 + _WEIGHT;
MPRINT(EM_ASSESS):   NTARGET = _MEANTARGET ;
MPRINT(EM_ASSESS):   DECILE = MIN (20, CEIL (N1 * 20 / 2374));
MPRINT(EM_ASSESS):   MINPROBS ( DECILE) = MIN (MINPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MAXPROBS ( DECILE) = MAX (MAXPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MNPROBS ( DECILE) = SUM (MNPROBS ( DECILE), P_DepVar1 * _WEIGHT);
MPRINT(EM_ASSESS):   NUMOBSS ( DECILE) = NUMOBSS ( DECILE) + _WEIGHT;
MPRINT(EM_ASSESS):   NUMRESPS ( DECILE) = NUMRESPS ( DECILE) + _MEANTARGET * _WEIGHT;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ outside of do loop, Area for final ROC;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   RANKDELTA = (ROUND ( _FREQ_ ) + 1) / 2;
MPRINT(EM_ASSESS):   RANK = UNTIEDRANK + RANKDELTA;
MPRINT(EM_ASSESS):   DROP RANK ;
MPRINT(EM_ASSESS):   SUMRANK1 + RANK * ROUND (_MEANTARGET * _FREQ_, .0000001);
MPRINT(EM_ASSESS):   UNTIEDRANK + ROUND (_FREQ_, .00000001);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Area For ROC Curve;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DO _K = 1 TO 100;
MPRINT(EM_ASSESS):   IF P_DepVar1 * 100 >= _K THEN DO;
MPRINT(EM_ASSESS):   TRUEPOSX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   FALSEPOSX ( _K ) + _FREQ_ * (1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   TRUENEGX ( _K ) + _FREQ_ * ( 1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   FALSENEGX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   SLOT = MIN (MAX (CEIL (P_DepVar1 * 100), 1), 100) ;
MPRINT(EM_ASSESS):   DROP SLOT;
MPRINT(EM_ASSESS):   FIRSTIN ( SLOT ) = MIN ( FIRSTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   LASTIN ( SLOT ) = MAX ( LASTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   _EVENTS ( SLOT) = _EVENTS ( SLOT) + _FREQ_ * _MEANTARGET;
MPRINT(EM_ASSESS):   NONEVENTS ( SLOT) = NONEVENTS ( SLOT) + _FREQ_ * (1 - _MEANTARGET);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ START OF OUTDIST IN BINARY CASE MAIN DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   SCR_MNPROBS ( SLOT ) = SUM (SCR_MNPROBS (SLOT), P_DepVar1 * _FREQ_ );
MPRINT(EM_ASSESS):   SCR_MINPROBS ( SLOT ) = MIN (SCR_MINPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   SCR_MAXPROBS ( SLOT ) = MAX (SCR_MAXPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ End of Outdist in Binary case main DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   PUT //;
MPRINT(EM_ASSESS):   DO K = 1 TO 20;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LENGTH EVENTVALUE $ 32;
MPRINT(EM_ASSESS):   RETAIN EVENTVALUE "1" ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ......... Start of EOF area of BINARY processing of main data set ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SUMRANK1", SUMRANK1);
MPRINT(EM_ASSESS):   LENGTH DATAROLE $ 10;
MPRINT(EM_ASSESS):   RETAIN DATAROLE "TRAIN" ;
MPRINT(EM_ASSESS):   RETAIN OVLMIN 0.0005715664 OVLMAX 0.9999999998 ;
MPRINT(EM_ASSESS):   DROP OVLMIN OVLMAX ;
MPRINT(EM_ASSESS):   C_NUMOBS = 0;
MPRINT(EM_ASSESS):   C_NUM_RESP = 0;
MPRINT(EM_ASSESS):   C_NUM_NONRESP = 0;
MPRINT(EM_ASSESS):   C_P_RESP = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   PREVIOUSPROFIT = 0;
MPRINT(EM_ASSESS):   MAXPROFIT = 0;
MPRINT(EM_ASSESS):   _KS_BIN_ = 0;
MPRINT(EM_ASSESS):   DROP _KS_BIN_;
MPRINT(EM_ASSESS):   AVGNUMRESP = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASERESP = 100 * RESPRATE;
MPRINT(EM_ASSESS):   BASERESPC = BASERESP;
MPRINT(EM_ASSESS):   BASECAP = 100 / 20;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................Start OF Gainschart = Outranks Area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = 0;
MPRINT(EM_ASSESS):   DO GROUP = 20 TO 1 BY -1;
 
MPRINT(EM_ASSESS):   BASECAPC + BASECAP;
MPRINT(EM_ASSESS):   PERCENTILE = GROUP * (100 / 20);
MPRINT(EM_ASSESS):   MINPROB = MINPROBS ( GROUP);
MPRINT(EM_ASSESS):   MAXPROB = MAXPROBS ( GROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB" || LEFT ( PUT (GROUP, 3.)), MINPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB" || LEFT ( PUT (GROUP, 3.)), MAXPROB);
MPRINT(EM_ASSESS):   NUMOBS = NUMOBSS ( GROUP);
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN MNPROB = MNPROBS ( GROUP) / NUMOBS;
MPRINT(EM_ASSESS):   ELSE MNPROB = .;
MPRINT(EM_ASSESS):   C_NUMOBS = SUM (NUMOBS, C_NUMOBS);
MPRINT(EM_ASSESS):   NUMRESP = NUMRESPS ( GROUP);
MPRINT(EM_ASSESS):   NUMNONRESP = NUMOBS - NUMRESP;
MPRINT(EM_ASSESS):   C_AVGNUM_RESP + AVGNUMRESP;
MPRINT(EM_ASSESS):   IF C_NUMOBS <= _NEVENTS THEN DO;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   BESTCAPC = C_NUMOBS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BASEEVENTS = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASENONEVENTS = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   FLAG + 1;
MPRINT(EM_ASSESS):   DROP FLAG;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = _NEVENTS - C_NUMOBS + NUMOBS;
MPRINT(EM_ASSESS):   IF FLAG > 1 THEN BESTNUMEVENTS = 0;
MPRINT(EM_ASSESS):   BESTCAPC = 100;
MPRINT(EM_ASSESS):   IF C_NUMOBS - _NEVENTS <= NUMOBS THEN DO;
MPRINT(EM_ASSESS):   BASEEVENTS = C_NUMOBS - _NEVENTS;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS - C_NUMOBS + _NEVENTS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BASEEVENTS = 0;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   BESTCAP = BESTNUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BESTLIFT = BESTNUMEVENTS / AVGNUMRESP;
MPRINT(EM_ASSESS):   C_BESTNUMEVENTS + BESTNUMEVENTS;
MPRINT(EM_ASSESS):   DROP C_BESTNUMEVENTS;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN BESTLIFTC = C_BESTNUMEVENTS / (_NEVENTS / 2374 *
C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE BESTLIFTC = .;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESP = BESTNUMEVENTS * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_RESP = NUMRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_NONRESP = NUMNONRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESP = .;
MPRINT(EM_ASSESS):   P_RESP = .;
MPRINT(EM_ASSESS):   P_NONRESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESPC = C_BESTNUMEVENTS * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   BESTGAIN = MAX (0, ((C_BESTNUMEVENTS / C_NUMOBS ) / ( AVGNUMRESP /
NUMOBS) - 1) * 100);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESPC = .;
MPRINT(EM_ASSESS):   BESTGAIN = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMNONRESP > 0 THEN ODDS = NUMRESP / NUMNONRESP;
MPRINT(EM_ASSESS):   ELSE ODDS = .;
MPRINT(EM_ASSESS):   C_NUM_RESP = SUM (C_NUM_RESP , NUMRESP );
MPRINT(EM_ASSESS):   C_NUM_NONRESP = SUM (C_NUM_NONRESP, NUMNONRESP );
MPRINT(EM_ASSESS):   IF C_NUM_NONRESP > 0 THEN C_ODDS = C_NUM_RESP / C_NUM_NONRESP;
MPRINT(EM_ASSESS):   ELSE C_ODDS = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   C_P_RESP = C_NUM_RESP * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   GAIN = ABS(100 * (((C_NUM_RESP / C_NUMOBS ) / (_NEVENTS / 2374)) - 1));
MPRINT(EM_ASSESS):   BASEGAIN = 100 * (( (C_AVGNUM_RESP / C_NUMOBS) / ( AVGNUMRESP / NUMOBS))
- 1);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   GAIN = .;
MPRINT(EM_ASSESS):   BASEGAIN = .;
MPRINT(EM_ASSESS):   C_P_RESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF BASEGAIN <= 0 THEN BASEGAIN = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = NUMRESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   P_CAPT_NONRESP = NUMNONRESP * 100 / ( 2374 - _NEVENTS);
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = C_NUM_RESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   C_P_CAPT_NONRESP = C_NUM_NONRESP * 100 / ( 2374 - _NEVENTS);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Area For Binned KS in Outranks area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _DIFFERENCE = C_P_CAPT_RESP - C_P_CAPT_NONRESP ;
MPRINT(EM_ASSESS):   IF _KS_BIN_ < _DIFFERENCE THEN DO;
MPRINT(EM_ASSESS):   _KS_BIN_ = _DIFFERENCE;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = MINPROB + (MAXPROB - MINPROB) / 2 ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LIFT = P_RESP * .01 / RESPRATE ;
MPRINT(EM_ASSESS):   C_LIFT = C_P_RESP * .01 / RESPRATE;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BASELIFT = AVGNUMRESP / ( RESPRATE * NUMOBS );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE BASELIFT = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN CBASELIFT = C_AVGNUM_RESP / (RESPRATE * C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE CBASELIFT = .;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ WITHIN DO LOOP FOR OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 + 1 - GROUP;
MPRINT(EM_ASSESS):   PERCENTILE = BIN * (100 / 20);
MPRINT(EM_ASSESS):   B_C_P_RESP = PERCENTILE;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPRANK ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................ END OF GAINSCHART = OUTRANKS AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFITGROUP" , MAXPROFITGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFIT" , MAXPROFIT );
MPRINT(EM_ASSESS):   KS_ABSDIFF = 0 ;
MPRINT(EM_ASSESS):   MINPRECTPR = 9999;
MPRINT(EM_ASSESS):   Y0 = 1 - RESPRATE;
MPRINT(EM_ASSESS):   Y1 = RESPRATE;
MPRINT(EM_ASSESS):   MAXMUTUAL = 0;
MPRINT(EM_ASSESS):   DROP MAXMUTUAL KSPROB Y0 Y1 KS_ABSDIFF MINPRECTPR;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .....................About to start Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................... Finished Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Outdist ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS96 - EVENTS100 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS96 - NONEVENTS100);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB96 -
SCR_MNPROB100) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB96 - SCR_MINPROB100) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB96 - SCR_MAXPROB100) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 20;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 19 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS91 - EVENTS95 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS91 - NONEVENTS95);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB91 -
SCR_MNPROB95) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB91 - SCR_MINPROB95) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB91 - SCR_MAXPROB95) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 19;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 18 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS86 - EVENTS90 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS86 - NONEVENTS90);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB86 -
SCR_MNPROB90) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB86 - SCR_MINPROB90) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB86 - SCR_MAXPROB90) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 18;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 17 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS81 - EVENTS85 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS81 - NONEVENTS85);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB81 -
SCR_MNPROB85) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB81 - SCR_MINPROB85) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB81 - SCR_MAXPROB85) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 17;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 16 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS76 - EVENTS80 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS76 - NONEVENTS80);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB76 -
SCR_MNPROB80) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB76 - SCR_MINPROB80) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB76 - SCR_MAXPROB80) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 16;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 15 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS71 - EVENTS75 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS71 - NONEVENTS75);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB71 -
SCR_MNPROB75) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB71 - SCR_MINPROB75) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB71 - SCR_MAXPROB75) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 15;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 14 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS66 - EVENTS70 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS66 - NONEVENTS70);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB66 -
SCR_MNPROB70) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB66 - SCR_MINPROB70) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB66 - SCR_MAXPROB70) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 14;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 13 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS61 - EVENTS65 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS61 - NONEVENTS65);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB61 -
SCR_MNPROB65) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB61 - SCR_MINPROB65) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB61 - SCR_MAXPROB65) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 13;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 12 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS56 - EVENTS60 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS56 - NONEVENTS60);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB56 -
SCR_MNPROB60) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB56 - SCR_MINPROB60) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB56 - SCR_MAXPROB60) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 12;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 11 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS51 - EVENTS55 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS51 - NONEVENTS55);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB51 -
SCR_MNPROB55) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB51 - SCR_MINPROB55) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB51 - SCR_MAXPROB55) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 11;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 10 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS46 - EVENTS50 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS46 - NONEVENTS50);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB46 -
SCR_MNPROB50) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB46 - SCR_MINPROB50) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB46 - SCR_MAXPROB50) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 10;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 9 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS41 - EVENTS45 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS41 - NONEVENTS45);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB41 -
SCR_MNPROB45) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB41 - SCR_MINPROB45) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB41 - SCR_MAXPROB45) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 9;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 8 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS36 - EVENTS40 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS36 - NONEVENTS40);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB36 -
SCR_MNPROB40) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB36 - SCR_MINPROB40) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB36 - SCR_MAXPROB40) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 8;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 7 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS31 - EVENTS35 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS31 - NONEVENTS35);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB31 -
SCR_MNPROB35) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB31 - SCR_MINPROB35) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB31 - SCR_MAXPROB35) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 7;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 6 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS26 - EVENTS30 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS26 - NONEVENTS30);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB26 -
SCR_MNPROB30) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB26 - SCR_MINPROB30) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB26 - SCR_MAXPROB30) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 6;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 5 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS21 - EVENTS25 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS21 - NONEVENTS25);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB21 -
SCR_MNPROB25) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB21 - SCR_MINPROB25) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB21 - SCR_MAXPROB25) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 5;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 4 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS16 - EVENTS20 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS16 - NONEVENTS20);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB16 -
SCR_MNPROB20) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB16 - SCR_MINPROB20) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB16 - SCR_MAXPROB20) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 4;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 3 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS11 - EVENTS15 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS11 - NONEVENTS15);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB11 -
SCR_MNPROB15) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB11 - SCR_MINPROB15) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB11 - SCR_MAXPROB15) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 3;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 2 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS6 - EVENTS10 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS6 - NONEVENTS10);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB6 -
SCR_MNPROB10) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB6 - SCR_MINPROB10) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB6 - SCR_MAXPROB10) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 2;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 1 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS1 - EVENTS5 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS1 - NONEVENTS5);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB1 - SCR_MNPROB5)
/ NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB1 - SCR_MINPROB5) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB1 - SCR_MAXPROB5) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 1;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSPROB" , PUT (KSPROB, 5.3 ) );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_PROB" , _KS_BIN_PROB );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_" , _KS_BIN_ / 100 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSDIFF" , KS_ABSDIFF );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PRECTPR" , PRECTPR );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXMUTUALPROB" , MAXMUTUALPROB);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LABEL __EVENT__ = "Event" DECILE = "Depth" BIN = "Bin" NUMOBS = "Number
of Observations" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * RUN for large data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST;
MPRINT(EM_ASSESS):   DELETE _AUXEVENTNAME;
MPRINT(EM_ASSESS):   QUIT;
 
MPRINT(EM_ASSESS):   OPTION NOCENTER LS = 95;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Report Vars Area.;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start OF Outdist Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPSCOREDIST;
MPRINT(EM_ASSESS):   RENAME MODELSCORE = SCORE UPPERPROB = UPPOSTERIOR SCR_CP_EVENTS =
CUMULATIVEPERCENTAGEOFEVENTS SCR_CP_NONEVENTS = CUMULATIVEPERCENTAGEOFNONEVENTS EVENTVALUE =
EVENT LOWERPROB = LOWPOSTERIOR NUMOBSINGROUP = N PERCOBSINGROUP = PERCENTAGE SCR_MINPROB =
_MINP_ SCR_MAXPROB = _MAXP_ SCR_MNPROB = _MEANP_ RANGE = P_LABEL C_PERCOBSINGROUP =
CUMULATIVEPERCENTAGE SCR_NUMEVENTS = NUMBEROFEVENTS SCR_NUMNONEVENTS = NUMBEROFNONEVENTS
SCR_P_EVENTS = PERCENTAGEOFEVENTS SCR_P_NONEVENTS = PERCENTAGEOFNONEVENTS ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... OUTDIST MODIFICATION LABEL AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL BIN = "Bin" N = "Number of Observations" P_LABEL = "Posterior
Probability Range" EVENT = "Event" LOWPOSTERIOR = "Lower Bound Posterior Probability"
PERCENTAGEOFEVENTS = "Percentage of Events" CUMULATIVEPERCENTAGEOFNONEVENTS = "Cumulative
Percentage of Nonevents" CUMULATIVEPERCENTAGE = "Cumulative Percentage" PERCENTAGEOFEVENTS =
"Percentage of Events" PERCENTAGEOFNONEVENTS = "Percentage of Nonevents"
CUMULATIVEPERCENTAGEOFEVENTS = "Cumulative Percentage of Events" UPPOSTERIOR = "Upper Bound
Posterior Probability" NUMBEROFEVENTS = "Number of Events" PERCENTAGE = "Percentage"
NUMBEROFNONEVENTS = "Number of Nonevents" _MEANP_ = "Mean Posterior Probability" _MINP_ = "Min
Posterior Probability" _MAXP_ = "Max Posterior Probability" SCORE = "Model Score" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   SET WORK._TEMPSCOREDIST (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........... END OF OUTDIST MODIFICATION;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start of OUTRANKS Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPRANK;
MPRINT(EM_ASSESS):   RENAME __EVENT__ = EVENT P_RESP = RESP C_P_CAPT_RESP = CAPC P_CAPT_RESP =
CAP NUMNONRESP = NUMNEVENT NUMRESP = NUMEVENT BASEEVENTS = BASENUMBEROFEVENTS BESTNUMEVENTS =
BESTNUMBEROFEVENTS MAXPROB = _MAXP_ MINPROB = _MINP_ CBASELIFT = BASELIFTC C_LIFT = LIFTC
MNPROB = _MEANP_ PERCENTILE = DECILE NUMOBS = N NUMEVENT = NUMBEROFEVENTS C_P_RESP = RESPC ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................. OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL _MAXP_ = "Max Posterior Probability" _MINP_ = "Min Posterior
Probability" _MEANP_ = "Mean Posterior Probability" BASECAP = "Baseline % Captured Response"
BASECAPC = "Baseline Cumulative % Captured Response" BASENUMBEROFEVENTS = "Baseline Number of
Events" BASEGAIN = "Baseline Gain" BASELIFT = "Baseline Lift" BASELIFTC = "Baseline Cumulative
Lift" BASERESP = "Baseline % Response" BASERESPC = "Baseline Cumulative % Response" BASELIFTC
= "Baseline Cumulative Lift" BESTCAP = "Best % Captured Response" BESTCAPC = "Best Cumulative
% Captured Response" BESTGAIN = "Best Gain" BESTRESP = "Best % Response" BESTRESPC = "Best
Cumulative % Response" BESTLIFT = "Best Lift" BESTLIFTC = "Best Cumulative Lift"
BESTNUMBEROFEVENTS = "Best Number of Events" CAP = "% Captured Response" CAPC = "Cumulative %
Captured Response" DECILE = "Depth" GAIN = "Gain" LIFT = "Lift" LIFTC = "Cumulative Lift"
NUMNEVENT = "Number of Nonevents" N = "Number of Observations" EVENT = "Event" RESPC =
"Cumulative % Response" NUMBEROFEVENTS = "Number of Events" RESP = "% Response" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK;
MPRINT(EM_ASSESS):   SET WORK._TEMPRANK (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   proc datasets lib=work nolist;
MPRINT(EM_ASSESS):   delete _ea_tmpdata;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_ASSESS):   quit;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   OPTION ERRORS = 20;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):    data WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "TRAIN";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl46_EMRANK;
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "TRAIN";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl46_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   run;
1264012    data EM_temp_assessMeta;
MPRINT(EM_DIAGRAM):    data EM_temp_assessMeta;
1264013    set EMWS8.Ensmbl46_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl46_CMeta_TRAIN;
1264014    where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST')
1264014  ! ;
MPRINT(EM_DIAGRAM):   where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION',
'ASSESS', 'COST');
1264015    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS8.ENSMBL46_CMETA_TRAIN.
      WHERE role in ('ASSESS', 'CLASSIFICATION', 'COST', 'DECISION', 'PREDICT', 'RESIDUAL');
NOTE: The data set WORK.EM_TEMP_ASSESSMETA has 8 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1264016    data EM_temp_assessdata;
MPRINT(EM_DIAGRAM):    data EM_temp_assessdata;
1264017    set EMWS8.Ensmbl46_VALIDATE(keep=
1264018    F_DepVar
1264019    I_DepVar
1264020    P_DepVar0
1264021    P_DepVar1
1264022    R_DepVar0
1264023    R_DepVar1
1264024    U_DepVar
1264025    _WARN_
1264026    DepVar
1264027    );
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl46_VALIDATE(keep= F_DepVar I_DepVar P_DepVar0 P_DepVar1
R_DepVar0 R_DepVar1 U_DepVar _WARN_ DepVar );
1264028    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: There were 1018 observations read from the data set EMWS8.META_VALIDATE.
NOTE: View EMWS8.ENSMBL46_VALIDATE.VIEW used (Total process time):
      real time           0.13 seconds
      cpu time            0.13 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.AUTONEURAL10_VALIDATE.
NOTE: There were 1018 observations read from the data set EMWS8.ENSMBL46_VALIDATE.
NOTE: The data set WORK.EM_TEMP_ASSESSDATA has 1018 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.13 seconds
      cpu time            0.13 seconds
 
 
MPRINT(EM_DIAGRAM):    proc freq data=EM_temp_assessdata noprint;
MPRINT(EM_DIAGRAM):   table I_DepVar*F_DepVar / out = WORK.Ensmbl46_3N4ZWN7 nocol norow outpct;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.Ensmbl46_3N4ZWN7;
MPRINT(EM_DIAGRAM):   length _TYPE_ $10 DATAROLE TARGET $32 TARGETLABEL $200 FROM INTO $32
CORRECTTEXT $40 ;
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Outcome Type";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role";
MPRINT(EM_DIAGRAM):   label TARGET = "Target Variable";
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
MPRINT(EM_DIAGRAM):   label CORRECTTEXT = "Correct Text";
MPRINT(EM_DIAGRAM):   label CORRECT = "Correct";
MPRINT(EM_DIAGRAM):   set WORK.Ensmbl46_3N4ZWN7(rename=(F_DepVar=FROM I_DepVar=INTO));
MPRINT(EM_DIAGRAM):   retain _TYPE_ 'PREDICTION' DATAROLE "VALIDATE" TARGET "DepVar";
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   if FROM eq INTO then do;
MPRINT(EM_DIAGRAM):   CORRECT = 0;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Correct";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   CORRECT = 1;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Incorrect";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl46_EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl46_EMCLASSIFICATION WORK.Ensmbl46_3N4ZWN7;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   set WORK.Ensmbl46_3N4ZWN7;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT(drop=INTO FROM _TYPE_);
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   length MISC $12;
MPRINT(EM_DIAGRAM):   if FROM='1' and INTO='1' then MISC='TRUEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM='1' and INTO ne '1' then MISC='FALSENEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne '1' and INTO='1' then MISC='FALSEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne'1' and INTO ne '1' then MISC='TRUENEVENT';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.MISCREPORT nothreads;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc summary data=WORK.MISCREPORT NWAY;
MPRINT(EM_DIAGRAM):   output out=WORK.MISCCOUNT(drop=_FREQ_ _TYPE_) SUM=COUNT;
MPRINT(EM_DIAGRAM):   CLASS MISC;
MPRINT(EM_DIAGRAM):   VAR COUNT;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK.MISCCOUNT out=WORK.MISCREPORT(drop=_NAME_
_LABEL_);
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   ID MISC;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl46_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl46_EMEVENTREPORT WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data ASSESS_REPORTMETA;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl46_VariableSet;
MPRINT(EM_DIAGRAM):   where REPORT='Y';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emassmt.em_assess.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural9_DepVar_DM;
MPRINT(EM_DIAGRAM):   where _TYPE_="TARGET";
MPRINT(EM_DIAGRAM):   call symput('ASSMT_EVENT', strip(event));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):
MPRINT(EM_ASSESS):   data _ea_tmpdata;
MPRINT(EM_ASSESS):   set EM_temp_assessdata;
MPRINT(EM_ASSESS):   _tmpfreqvar_=1;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_CHECKEMSETINIT):   DATA _NULL_;
MPRINT(EM_CHECKEMSETINIT):   EM_SETINIT = 'N';
MPRINT(EM_CHECKEMSETINIT):   IF SYSPROD('PRODNUM50') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM448') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM102') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM103') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   CALL SYMPUT('EM_SETINIT', EM_SETINIT);
MPRINT(EM_CHECKEMSETINIT):   RUN;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Reading in reporting data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET ASSESS_REPORTMETA END = EOF;
MPRINT(EM_ASSESS):   IF TYPE = "C" OR UPCASE (LEVEL) IN ("NOMINAL", "BINARY" , "ORDINAL") THEN
DO;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMCTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTC" || LEFT (PUT (NUMCTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "C");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF UPCASE(NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMNTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTN" || LEFT (PUT (NUMNTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMNTOREPORT", NUMNTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMCTOREPORT", NUMCTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMTOREPORT", SUM (NUMNTOREPORT, NUMCTOREPORT));
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   PROC DMDB DATA = _ea_tmpdata VAROUT = VAROUT DMDBCAT = _D CLASSOUT =
_ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   CLASS F_DepVar ;
 
MPRINT(EM_ASSESS):   VAR P_DepVar1 _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_;
MPRINT(EM_ASSESS):   RUN ;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   PROC SORT DATA = _ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _auxeventname (keep = __event__) ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ...FLAG0_1 = ..... TARGET IS 0, 1 & EVENT = 1;
 
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   length __event__ $ 32;
MPRINT(EM_ASSESS):   RETAIN FLAG0_1 1 NUM1 . NUM0 . __event__ "_missing_" ;
 
MPRINT(EM_ASSESS):   SET _ASSMT_CLASSOUT END = EOF;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ....... LEVEL = BINARY OR NOMINAL OR ORDINAL;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   IF UPCASE(NAME) = UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   CUMFREQ + FREQUENCY;
MPRINT(EM_ASSESS):   IF LEVEL NE "." THEN DO;
MPRINT(EM_ASSESS):   N1 + 1;
MPRINT(EM_ASSESS):   IF (NRAW NE 0 AND NRAW NE 1) OR TYPE NE "N" OR "" > " " THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ......................... IF EVENT NE BLANK;
MPRINT(EM_ASSESS):   * ....................LEVEL IS CHAR VAR ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   IF UPCASE("1") = UPCASE(LEVEL) THEN DO;
MPRINT(EM_ASSESS):   NUM1 = FREQUENCY;
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", CRAW );
MPRINT(EM_ASSESS):   __event__ = craw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   ELSE do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", NRAW );
MPRINT(EM_ASSESS):   __event__ = nraw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF LAST.NAME THEN DO;
 
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * .............. IN NOMINAL CASE, NEED TO GROUP ALL '0' ;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   NUM0 = SUM (CUMFREQ, - NUM1);
MPRINT(EM_ASSESS):   IF NUM0 < 0 THEN NUM0 = 0;
MPRINT(EM_ASSESS):   IF NUM1 = . THEN NUM1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM0", NUM0 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM1", NUM1);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM1", NUM1 / CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM0", (CUMFREQ - NUM1) / CUMFREQ);
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN DO;
MPRINT(EM_ASSESS):   FLAG0_1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "C" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF "" = " " THEN DO;
MPRINT(EM_ASSESS):   IF "1" NE "1" THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "N" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ................... IF TYPE = N;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("FLAG0_1", FLAG0_1 );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................IF LAST.NAME ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ...............IF LEVEL NE '.' ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * .............. IF NAME = TARGET;
MPRINT(EM_ASSESS):   ELSE IF "" > " " AND UPCASE(NAME) = UPCASE("") THEN DO;
MPRINT(EM_ASSESS):   NUMDECISIONS + 1;
MPRINT(EM_ASSESS):   LEVEL = TRANSLATE (LEVEL, "_", "'", "_", '"');
MPRINT(EM_ASSESS):   CALL SYMPUTX ("D_LABEL" || LEFT (PUT (NUMDECISIONS, 3.)), LEVEL );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................... ELSE IF UPCASE;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   output _auxeventname;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMOBS", CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMDECISIONS", NUMDECISIONS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET VAROUT END = EOF;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) = UPCASE ("P_DepVar1") THEN DO;
MPRINT(EM_ASSESS):   IF N = 0 THEN DO;
MPRINT(EM_ASSESS):   PUT //// "          Warning: All posterior probabilities are missing
values ";
MPRINT(EM_ASSESS):   PUT ///;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("ALLMISS", 1);
MPRINT(EM_ASSESS):   STOP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("ALLMISS", 0);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB", MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB", MAX);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("DIFF", MAX - MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NMISSPROB", NMISS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF UPCASE (NAME) = UPCASE ("_tmpfreqvar_") THEN DO;
MPRINT(EM_ASSESS):   AUXMIN = MIN - INT (MIN);
MPRINT(EM_ASSESS):   AUXMAX = MAX - INT (MAX);
MPRINT(EM_ASSESS):   IF AUXMIN > 0 OR AUXMAX > 0 THEN CALL SYMPUTX ("USEWEIGHT", "Y");
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("USEWEIGHT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _ANY0;
MPRINT(EM_ASSESS):   SET _ea_tmpdata (KEEP = F_DepVar P_DepVar1 _tmpfreqvar_ );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................... No Formats;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF LEFT ( F_DepVar ) = "1" THEN NTARGET = 1;
MPRINT(EM_ASSESS):   ELSE NTARGET = 0;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Before proc summary of binary case;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC SUMMARY DATA = _ANY0 (KEEP = P_DepVar1 NTARGET _tmpfreqvar_ WHERE =
(NTARGET > . )) NWAY MISSING;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   CLASS P_DepVar1 ;
MPRINT(EM_ASSESS):   VAR NTARGET ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   OUTPUT OUT = ANYSUM (DROP = _TYPE_) MEAN = _MEANTARGET _MEANFREQVAR ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... Main Data Set Processing, Binary case;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK (KEEP = BASECAPC BASECAP __EVENT__ BASEEVENTS
BASEGAIN BASELIFT BASERESP BASERESPC BESTCAP BESTCAPC BESTGAIN BESTLIFT BESTLIFTC
BESTNUMEVENTS BESTRESP BESTRESPC BIN CBASELIFT C_LIFT C_P_CAPT_RESP C_P_RESP GAIN LIFT MAXPROB
MINPROB MNPROB NUMNONRESP NUMOBS NUMRESP PERCENTILE P_CAPT_RESP P_RESP ) WORK._TEMPSCOREDIST
(KEEP = BIN LOWERPROB UPPERPROB EVENTVALUE SCR_NUMEVENTS MODELSCORE SCR_NUMNONEVENTS RANGE
NUMOBSINGROUP PERCOBSINGROUP C_PERCOBSINGROUP SCR_P_EVENTS SCR_CP_EVENTS SCR_P_NONEVENTS
SCR_CP_NONEVENTS SCR_MNPROB SCR_MINPROB SCR_MAXPROB ) ;
 
MPRINT(EM_ASSESS):   SET ANYSUM END = EOF;
 
MPRINT(EM_ASSESS):   IF _N_ = 1 THEN SET _AUXEVENTNAME;
 
MPRINT(EM_ASSESS):   RETAIN MINPROB1 - MINPROB20 1 MAXPROB1 - MAXPROB20 0 MNPROB1 - MNPROB20 0
NUMOBS1 - NUMOBS20 0 NUMRESP1 - NUMRESP20 0 TRUEPOS1 - TRUEPOS100 0 TRUENEG1 - TRUENEG100 0
FALSEPOS1 - FALSEPOS100 0 FALSENEG1 - FALSENEG100 0 EVENTS1 - EVENTS100 NONEVENTS1 -
NONEVENTS100 0 FIRSTIN1 - FIRSTIN100 . LASTIN1 - LASTIN100 . RESPRATE 0.152259332 _NEVENTS 155
_NNONEVENTS 863 TARGET "NTARGET" ;
MPRINT(EM_ASSESS):   ARRAY MINPROBS (20) MINPROB1 - MINPROB20;
MPRINT(EM_ASSESS):   ARRAY MAXPROBS (20) MAXPROB1 - MAXPROB20;
MPRINT(EM_ASSESS):   ARRAY MNPROBS (20) MNPROB1 - MNPROB20;
MPRINT(EM_ASSESS):   ARRAY NUMOBSS (20) NUMOBS1 - NUMOBS20;
MPRINT(EM_ASSESS):   ARRAY NUMRESPS (20) NUMRESP1 - NUMRESP20;
MPRINT(EM_ASSESS):   ARRAY TRUEPOSX (100) TRUEPOS1 - TRUEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSEPOSX (100) FALSEPOS1 - FALSEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSENEGX (100) FALSENEG1 - FALSENEG100;
MPRINT(EM_ASSESS):   ARRAY TRUENEGX (100) TRUENEG1 - TRUENEG100;
MPRINT(EM_ASSESS):   ARRAY _EVENTS (100) EVENTS1 - EVENTS100;
MPRINT(EM_ASSESS):   ARRAY NONEVENTS (100) NONEVENTS1 - NONEVENTS100;
MPRINT(EM_ASSESS):   ARRAY FIRSTIN (100) FIRSTIN1 - FIRSTIN100;
MPRINT(EM_ASSESS):   ARRAY LASTIN (100) LASTIN1 - LASTIN100;
MPRINT(EM_ASSESS):   RETAIN SCR_MNPROB1 - SCR_MNPROB100 0 SCR_MINPROB1 - SCR_MINPROB100 1
SCR_MAXPROB1 - SCR_MAXPROB100 0;
MPRINT(EM_ASSESS):   ARRAY SCR_MNPROBS (100) SCR_MNPROB1 - SCR_MNPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MINPROBS (100) SCR_MINPROB1 - SCR_MINPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MAXPROBS (100) SCR_MAXPROB1 - SCR_MAXPROB100;
MPRINT(EM_ASSESS):   DROP SCR_MINPROB1 - SCR_MINPROB100 SCR_MAXPROB1 - SCR_MAXPROB100
SCR_MNPROB1 - SCR_MNPROB100 ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...... Area For 8 Financials ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF _MEANTARGET = . THEN _MEANTARGET = RESPRATE;
MPRINT(EM_ASSESS):   DROP N1 _K SUMWEIGHTS ;
MPRINT(EM_ASSESS):   SUMWEIGHTS = 1;
 
MPRINT(EM_ASSESS):   DO _K = 1 TO CEIL (_FREQ_);
MPRINT(EM_ASSESS):   IF _K = CEIL (_FREQ_) THEN DO;
MPRINT(EM_ASSESS):   IF _FREQ_ < CEIL (_FREQ_) THEN _WEIGHT = _FREQ_ - FLOOR (_FREQ_);
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   N1 + _WEIGHT;
MPRINT(EM_ASSESS):   NTARGET = _MEANTARGET ;
MPRINT(EM_ASSESS):   DECILE = MIN (20, CEIL (N1 * 20 / 1018));
MPRINT(EM_ASSESS):   MINPROBS ( DECILE) = MIN (MINPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MAXPROBS ( DECILE) = MAX (MAXPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MNPROBS ( DECILE) = SUM (MNPROBS ( DECILE), P_DepVar1 * _WEIGHT);
MPRINT(EM_ASSESS):   NUMOBSS ( DECILE) = NUMOBSS ( DECILE) + _WEIGHT;
MPRINT(EM_ASSESS):   NUMRESPS ( DECILE) = NUMRESPS ( DECILE) + _MEANTARGET * _WEIGHT;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ outside of do loop, Area for final ROC;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   RANKDELTA = (ROUND ( _FREQ_ ) + 1) / 2;
MPRINT(EM_ASSESS):   RANK = UNTIEDRANK + RANKDELTA;
MPRINT(EM_ASSESS):   DROP RANK ;
MPRINT(EM_ASSESS):   SUMRANK1 + RANK * ROUND (_MEANTARGET * _FREQ_, .0000001);
MPRINT(EM_ASSESS):   UNTIEDRANK + ROUND (_FREQ_, .00000001);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Area For ROC Curve;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DO _K = 1 TO 100;
MPRINT(EM_ASSESS):   IF P_DepVar1 * 100 >= _K THEN DO;
MPRINT(EM_ASSESS):   TRUEPOSX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   FALSEPOSX ( _K ) + _FREQ_ * (1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   TRUENEGX ( _K ) + _FREQ_ * ( 1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   FALSENEGX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   SLOT = MIN (MAX (CEIL (P_DepVar1 * 100), 1), 100) ;
MPRINT(EM_ASSESS):   DROP SLOT;
MPRINT(EM_ASSESS):   FIRSTIN ( SLOT ) = MIN ( FIRSTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   LASTIN ( SLOT ) = MAX ( LASTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   _EVENTS ( SLOT) = _EVENTS ( SLOT) + _FREQ_ * _MEANTARGET;
MPRINT(EM_ASSESS):   NONEVENTS ( SLOT) = NONEVENTS ( SLOT) + _FREQ_ * (1 - _MEANTARGET);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ START OF OUTDIST IN BINARY CASE MAIN DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   SCR_MNPROBS ( SLOT ) = SUM (SCR_MNPROBS (SLOT), P_DepVar1 * _FREQ_ );
MPRINT(EM_ASSESS):   SCR_MINPROBS ( SLOT ) = MIN (SCR_MINPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   SCR_MAXPROBS ( SLOT ) = MAX (SCR_MAXPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ End of Outdist in Binary case main DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   PUT //;
MPRINT(EM_ASSESS):   DO K = 1 TO 20;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LENGTH EVENTVALUE $ 32;
MPRINT(EM_ASSESS):   RETAIN EVENTVALUE "1" ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ......... Start of EOF area of BINARY processing of main data set ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SUMRANK1", SUMRANK1);
MPRINT(EM_ASSESS):   LENGTH DATAROLE $ 10;
MPRINT(EM_ASSESS):   RETAIN DATAROLE "VALIDATE" ;
MPRINT(EM_ASSESS):   RETAIN OVLMIN 0.0005739948 OVLMAX 0.9999999995 ;
MPRINT(EM_ASSESS):   DROP OVLMIN OVLMAX ;
MPRINT(EM_ASSESS):   C_NUMOBS = 0;
MPRINT(EM_ASSESS):   C_NUM_RESP = 0;
MPRINT(EM_ASSESS):   C_NUM_NONRESP = 0;
MPRINT(EM_ASSESS):   C_P_RESP = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   PREVIOUSPROFIT = 0;
MPRINT(EM_ASSESS):   MAXPROFIT = 0;
MPRINT(EM_ASSESS):   _KS_BIN_ = 0;
MPRINT(EM_ASSESS):   DROP _KS_BIN_;
MPRINT(EM_ASSESS):   AVGNUMRESP = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASERESP = 100 * RESPRATE;
MPRINT(EM_ASSESS):   BASERESPC = BASERESP;
MPRINT(EM_ASSESS):   BASECAP = 100 / 20;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................Start OF Gainschart = Outranks Area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = 0;
MPRINT(EM_ASSESS):   DO GROUP = 20 TO 1 BY -1;
 
MPRINT(EM_ASSESS):   BASECAPC + BASECAP;
MPRINT(EM_ASSESS):   PERCENTILE = GROUP * (100 / 20);
MPRINT(EM_ASSESS):   MINPROB = MINPROBS ( GROUP);
MPRINT(EM_ASSESS):   MAXPROB = MAXPROBS ( GROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB" || LEFT ( PUT (GROUP, 3.)), MINPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB" || LEFT ( PUT (GROUP, 3.)), MAXPROB);
MPRINT(EM_ASSESS):   NUMOBS = NUMOBSS ( GROUP);
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN MNPROB = MNPROBS ( GROUP) / NUMOBS;
MPRINT(EM_ASSESS):   ELSE MNPROB = .;
MPRINT(EM_ASSESS):   C_NUMOBS = SUM (NUMOBS, C_NUMOBS);
MPRINT(EM_ASSESS):   NUMRESP = NUMRESPS ( GROUP);
MPRINT(EM_ASSESS):   NUMNONRESP = NUMOBS - NUMRESP;
MPRINT(EM_ASSESS):   C_AVGNUM_RESP + AVGNUMRESP;
MPRINT(EM_ASSESS):   IF C_NUMOBS <= _NEVENTS THEN DO;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   BESTCAPC = C_NUMOBS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BASEEVENTS = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASENONEVENTS = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   FLAG + 1;
MPRINT(EM_ASSESS):   DROP FLAG;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = _NEVENTS - C_NUMOBS + NUMOBS;
MPRINT(EM_ASSESS):   IF FLAG > 1 THEN BESTNUMEVENTS = 0;
MPRINT(EM_ASSESS):   BESTCAPC = 100;
MPRINT(EM_ASSESS):   IF C_NUMOBS - _NEVENTS <= NUMOBS THEN DO;
MPRINT(EM_ASSESS):   BASEEVENTS = C_NUMOBS - _NEVENTS;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS - C_NUMOBS + _NEVENTS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BASEEVENTS = 0;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   BESTCAP = BESTNUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BESTLIFT = BESTNUMEVENTS / AVGNUMRESP;
MPRINT(EM_ASSESS):   C_BESTNUMEVENTS + BESTNUMEVENTS;
MPRINT(EM_ASSESS):   DROP C_BESTNUMEVENTS;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN BESTLIFTC = C_BESTNUMEVENTS / (_NEVENTS / 1018 *
C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE BESTLIFTC = .;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESP = BESTNUMEVENTS * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_RESP = NUMRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_NONRESP = NUMNONRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESP = .;
MPRINT(EM_ASSESS):   P_RESP = .;
MPRINT(EM_ASSESS):   P_NONRESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESPC = C_BESTNUMEVENTS * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   BESTGAIN = MAX (0, ((C_BESTNUMEVENTS / C_NUMOBS ) / ( AVGNUMRESP /
NUMOBS) - 1) * 100);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESPC = .;
MPRINT(EM_ASSESS):   BESTGAIN = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMNONRESP > 0 THEN ODDS = NUMRESP / NUMNONRESP;
MPRINT(EM_ASSESS):   ELSE ODDS = .;
MPRINT(EM_ASSESS):   C_NUM_RESP = SUM (C_NUM_RESP , NUMRESP );
MPRINT(EM_ASSESS):   C_NUM_NONRESP = SUM (C_NUM_NONRESP, NUMNONRESP );
MPRINT(EM_ASSESS):   IF C_NUM_NONRESP > 0 THEN C_ODDS = C_NUM_RESP / C_NUM_NONRESP;
MPRINT(EM_ASSESS):   ELSE C_ODDS = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   C_P_RESP = C_NUM_RESP * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   GAIN = ABS(100 * (((C_NUM_RESP / C_NUMOBS ) / (_NEVENTS / 1018)) - 1));
MPRINT(EM_ASSESS):   BASEGAIN = 100 * (( (C_AVGNUM_RESP / C_NUMOBS) / ( AVGNUMRESP / NUMOBS))
- 1);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   GAIN = .;
MPRINT(EM_ASSESS):   BASEGAIN = .;
MPRINT(EM_ASSESS):   C_P_RESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF BASEGAIN <= 0 THEN BASEGAIN = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = NUMRESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   P_CAPT_NONRESP = NUMNONRESP * 100 / ( 1018 - _NEVENTS);
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = C_NUM_RESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   C_P_CAPT_NONRESP = C_NUM_NONRESP * 100 / ( 1018 - _NEVENTS);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Area For Binned KS in Outranks area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _DIFFERENCE = C_P_CAPT_RESP - C_P_CAPT_NONRESP ;
MPRINT(EM_ASSESS):   IF _KS_BIN_ < _DIFFERENCE THEN DO;
MPRINT(EM_ASSESS):   _KS_BIN_ = _DIFFERENCE;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = MINPROB + (MAXPROB - MINPROB) / 2 ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LIFT = P_RESP * .01 / RESPRATE ;
MPRINT(EM_ASSESS):   C_LIFT = C_P_RESP * .01 / RESPRATE;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BASELIFT = AVGNUMRESP / ( RESPRATE * NUMOBS );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE BASELIFT = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN CBASELIFT = C_AVGNUM_RESP / (RESPRATE * C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE CBASELIFT = .;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ WITHIN DO LOOP FOR OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 + 1 - GROUP;
MPRINT(EM_ASSESS):   PERCENTILE = BIN * (100 / 20);
MPRINT(EM_ASSESS):   B_C_P_RESP = PERCENTILE;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPRANK ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................ END OF GAINSCHART = OUTRANKS AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFITGROUP" , MAXPROFITGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFIT" , MAXPROFIT );
MPRINT(EM_ASSESS):   KS_ABSDIFF = 0 ;
MPRINT(EM_ASSESS):   MINPRECTPR = 9999;
MPRINT(EM_ASSESS):   Y0 = 1 - RESPRATE;
MPRINT(EM_ASSESS):   Y1 = RESPRATE;
MPRINT(EM_ASSESS):   MAXMUTUAL = 0;
MPRINT(EM_ASSESS):   DROP MAXMUTUAL KSPROB Y0 Y1 KS_ABSDIFF MINPRECTPR;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .....................About to start Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................... Finished Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Outdist ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS96 - EVENTS100 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS96 - NONEVENTS100);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB96 -
SCR_MNPROB100) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB96 - SCR_MINPROB100) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB96 - SCR_MAXPROB100) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 20;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 19 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS91 - EVENTS95 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS91 - NONEVENTS95);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB91 -
SCR_MNPROB95) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB91 - SCR_MINPROB95) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB91 - SCR_MAXPROB95) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 19;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 18 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS86 - EVENTS90 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS86 - NONEVENTS90);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB86 -
SCR_MNPROB90) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB86 - SCR_MINPROB90) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB86 - SCR_MAXPROB90) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 18;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 17 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS81 - EVENTS85 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS81 - NONEVENTS85);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB81 -
SCR_MNPROB85) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB81 - SCR_MINPROB85) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB81 - SCR_MAXPROB85) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 17;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 16 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS76 - EVENTS80 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS76 - NONEVENTS80);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB76 -
SCR_MNPROB80) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB76 - SCR_MINPROB80) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB76 - SCR_MAXPROB80) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 16;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 15 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS71 - EVENTS75 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS71 - NONEVENTS75);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB71 -
SCR_MNPROB75) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB71 - SCR_MINPROB75) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB71 - SCR_MAXPROB75) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 15;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 14 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS66 - EVENTS70 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS66 - NONEVENTS70);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB66 -
SCR_MNPROB70) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB66 - SCR_MINPROB70) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB66 - SCR_MAXPROB70) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 14;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 13 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS61 - EVENTS65 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS61 - NONEVENTS65);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB61 -
SCR_MNPROB65) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB61 - SCR_MINPROB65) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB61 - SCR_MAXPROB65) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 13;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 12 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS56 - EVENTS60 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS56 - NONEVENTS60);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB56 -
SCR_MNPROB60) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB56 - SCR_MINPROB60) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB56 - SCR_MAXPROB60) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 12;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 11 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS51 - EVENTS55 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS51 - NONEVENTS55);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB51 -
SCR_MNPROB55) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB51 - SCR_MINPROB55) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB51 - SCR_MAXPROB55) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 11;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 10 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS46 - EVENTS50 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS46 - NONEVENTS50);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB46 -
SCR_MNPROB50) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB46 - SCR_MINPROB50) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB46 - SCR_MAXPROB50) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 10;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 9 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS41 - EVENTS45 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS41 - NONEVENTS45);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB41 -
SCR_MNPROB45) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB41 - SCR_MINPROB45) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB41 - SCR_MAXPROB45) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 9;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 8 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS36 - EVENTS40 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS36 - NONEVENTS40);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB36 -
SCR_MNPROB40) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB36 - SCR_MINPROB40) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB36 - SCR_MAXPROB40) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 8;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 7 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS31 - EVENTS35 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS31 - NONEVENTS35);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB31 -
SCR_MNPROB35) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB31 - SCR_MINPROB35) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB31 - SCR_MAXPROB35) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 7;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 6 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS26 - EVENTS30 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS26 - NONEVENTS30);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB26 -
SCR_MNPROB30) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB26 - SCR_MINPROB30) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB26 - SCR_MAXPROB30) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 6;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 5 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS21 - EVENTS25 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS21 - NONEVENTS25);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB21 -
SCR_MNPROB25) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB21 - SCR_MINPROB25) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB21 - SCR_MAXPROB25) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 5;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 4 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS16 - EVENTS20 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS16 - NONEVENTS20);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB16 -
SCR_MNPROB20) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB16 - SCR_MINPROB20) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB16 - SCR_MAXPROB20) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 4;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 3 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS11 - EVENTS15 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS11 - NONEVENTS15);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB11 -
SCR_MNPROB15) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB11 - SCR_MINPROB15) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB11 - SCR_MAXPROB15) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 3;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 2 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS6 - EVENTS10 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS6 - NONEVENTS10);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB6 -
SCR_MNPROB10) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB6 - SCR_MINPROB10) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB6 - SCR_MAXPROB10) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 2;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 1 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS1 - EVENTS5 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS1 - NONEVENTS5);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB1 - SCR_MNPROB5)
/ NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB1 - SCR_MINPROB5) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB1 - SCR_MAXPROB5) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 1;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSPROB" , PUT (KSPROB, 5.3 ) );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_PROB" , _KS_BIN_PROB );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_" , _KS_BIN_ / 100 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSDIFF" , KS_ABSDIFF );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PRECTPR" , PRECTPR );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXMUTUALPROB" , MAXMUTUALPROB);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LABEL __EVENT__ = "Event" DECILE = "Depth" BIN = "Bin" NUMOBS = "Number
of Observations" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * RUN for large data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST;
MPRINT(EM_ASSESS):   DELETE _AUXEVENTNAME;
MPRINT(EM_ASSESS):   QUIT;
 
MPRINT(EM_ASSESS):   OPTION NOCENTER LS = 95;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Report Vars Area.;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start OF Outdist Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPSCOREDIST;
MPRINT(EM_ASSESS):   RENAME MODELSCORE = SCORE UPPERPROB = UPPOSTERIOR SCR_CP_EVENTS =
CUMULATIVEPERCENTAGEOFEVENTS SCR_CP_NONEVENTS = CUMULATIVEPERCENTAGEOFNONEVENTS EVENTVALUE =
EVENT LOWERPROB = LOWPOSTERIOR NUMOBSINGROUP = N PERCOBSINGROUP = PERCENTAGE SCR_MINPROB =
_MINP_ SCR_MAXPROB = _MAXP_ SCR_MNPROB = _MEANP_ RANGE = P_LABEL C_PERCOBSINGROUP =
CUMULATIVEPERCENTAGE SCR_NUMEVENTS = NUMBEROFEVENTS SCR_NUMNONEVENTS = NUMBEROFNONEVENTS
SCR_P_EVENTS = PERCENTAGEOFEVENTS SCR_P_NONEVENTS = PERCENTAGEOFNONEVENTS ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... OUTDIST MODIFICATION LABEL AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL BIN = "Bin" N = "Number of Observations" P_LABEL = "Posterior
Probability Range" EVENT = "Event" LOWPOSTERIOR = "Lower Bound Posterior Probability"
PERCENTAGEOFEVENTS = "Percentage of Events" CUMULATIVEPERCENTAGEOFNONEVENTS = "Cumulative
Percentage of Nonevents" CUMULATIVEPERCENTAGE = "Cumulative Percentage" PERCENTAGEOFEVENTS =
"Percentage of Events" PERCENTAGEOFNONEVENTS = "Percentage of Nonevents"
CUMULATIVEPERCENTAGEOFEVENTS = "Cumulative Percentage of Events" UPPOSTERIOR = "Upper Bound
Posterior Probability" NUMBEROFEVENTS = "Number of Events" PERCENTAGE = "Percentage"
NUMBEROFNONEVENTS = "Number of Nonevents" _MEANP_ = "Mean Posterior Probability" _MINP_ = "Min
Posterior Probability" _MAXP_ = "Max Posterior Probability" SCORE = "Model Score" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   SET WORK._TEMPSCOREDIST (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........... END OF OUTDIST MODIFICATION;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start of OUTRANKS Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPRANK;
MPRINT(EM_ASSESS):   RENAME __EVENT__ = EVENT P_RESP = RESP C_P_CAPT_RESP = CAPC P_CAPT_RESP =
CAP NUMNONRESP = NUMNEVENT NUMRESP = NUMEVENT BASEEVENTS = BASENUMBEROFEVENTS BESTNUMEVENTS =
BESTNUMBEROFEVENTS MAXPROB = _MAXP_ MINPROB = _MINP_ CBASELIFT = BASELIFTC C_LIFT = LIFTC
MNPROB = _MEANP_ PERCENTILE = DECILE NUMOBS = N NUMEVENT = NUMBEROFEVENTS C_P_RESP = RESPC ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................. OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL _MAXP_ = "Max Posterior Probability" _MINP_ = "Min Posterior
Probability" _MEANP_ = "Mean Posterior Probability" BASECAP = "Baseline % Captured Response"
BASECAPC = "Baseline Cumulative % Captured Response" BASENUMBEROFEVENTS = "Baseline Number of
Events" BASEGAIN = "Baseline Gain" BASELIFT = "Baseline Lift" BASELIFTC = "Baseline Cumulative
Lift" BASERESP = "Baseline % Response" BASERESPC = "Baseline Cumulative % Response" BASELIFTC
= "Baseline Cumulative Lift" BESTCAP = "Best % Captured Response" BESTCAPC = "Best Cumulative
% Captured Response" BESTGAIN = "Best Gain" BESTRESP = "Best % Response" BESTRESPC = "Best
Cumulative % Response" BESTLIFT = "Best Lift" BESTLIFTC = "Best Cumulative Lift"
BESTNUMBEROFEVENTS = "Best Number of Events" CAP = "% Captured Response" CAPC = "Cumulative %
Captured Response" DECILE = "Depth" GAIN = "Gain" LIFT = "Lift" LIFTC = "Cumulative Lift"
NUMNEVENT = "Number of Nonevents" N = "Number of Observations" EVENT = "Event" RESPC =
"Cumulative % Response" NUMBEROFEVENTS = "Number of Events" RESP = "% Response" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK;
MPRINT(EM_ASSESS):   SET WORK._TEMPRANK (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   proc datasets lib=work nolist;
MPRINT(EM_ASSESS):   delete _ea_tmpdata;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_ASSESS):   quit;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   OPTION ERRORS = 20;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):    data WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "VALIDATE";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl46_EMRANK;
MPRINT(EM_DIAGRAM):   length target $32;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   length dataRole $20;
MPRINT(EM_DIAGRAM):   length EVENT $32;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl46_EMRANK WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "VALIDATE";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl46_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   length dataRole $20;
MPRINT(EM_DIAGRAM):   length EVENT $32;
MPRINT(EM_DIAGRAM):   length P_LABEL $9;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl46_EMSCOREDIST WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   run;
1268303    %let _cn = %sysfunc(getoption(CENTER));
1268304    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
1268305    proc print data=EMWS8.Ensmbl46_EMREPORTFIT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Ensmbl46_EMREPORTFIT noobs label;
1268306    var STAT LABEL TRAIN
1268307    VALIDATE
1268308    ;
MPRINT(EM_DIAGRAM):   var STAT LABEL TRAIN VALIDATE ;
1268309    by TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by TARGET TARGETLABEL;
1268310    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1268311    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_fitstat_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Fit Statistics";
MPRINT(EM_DIAGRAM):   run;
1268312    run;
 
NOTE: There were 9 observations read from the data set EMWS8.ENSMBL46_EMREPORTFIT.
NOTE: The PROCEDURE PRINT printed page 112.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1268313    title10;
MPRINT(EM_DIAGRAM):   title10;
1268314    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
1268315    proc sort data=EMWS8.Ensmbl46_EMCLASSIFICATION nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.Ensmbl46_EMCLASSIFICATION nothreads;
1268316    by DATAROLE TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET TARGETLABEL;
1268317    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 7 observations read from the data set EMWS8.ENSMBL46_EMCLASSIFICATION.
NOTE: The data set EMWS8.ENSMBL46_EMCLASSIFICATION has 7 observations and 12 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1268318    %let _cn = %sysfunc(getoption(CENTER));
1268319    options nocenter;
MPRINT(EM_DIAGRAM):   options nocenter;
1268320    proc print data=EMWS8.Ensmbl46_EMCLASSIFICATION noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Ensmbl46_EMCLASSIFICATION noobs label;
1268321    var from into pct_row pct_col count percent
1268322    ;
MPRINT(EM_DIAGRAM):   var from into pct_row pct_col count percent ;
1268323    by DATAROLE TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET TARGETLABEL;
1268324    label FROM = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,     NOQUOTE))";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
1268325    label INTO = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcome_vlabel ,    NOQUOTE))";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
1268326    label PCT_ROW = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetpct_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
1268327    label PCT_COL = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcomepct_vlabel , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
1268328    label COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel ,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
1268329    label PERCENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_totalpct_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
1268330    where _TYPE_='PREDICTION';
MPRINT(EM_DIAGRAM):   where _TYPE_='PREDICTION';
1268331    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1268332    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_classification_title    , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Classification Table";
MPRINT(EM_DIAGRAM):   run;
1268333    run;
 
NOTE: There were 7 observations read from the data set EMWS8.ENSMBL46_EMCLASSIFICATION.
      WHERE _TYPE_='PREDICTION';
NOTE: The PROCEDURE PRINT printed page 113.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1268334    title9;
MPRINT(EM_DIAGRAM):   title9;
1268335    title10;
MPRINT(EM_DIAGRAM):   title10;
1268336    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
1268337    %let _cn = %sysfunc(getoption(CENTER));
1268338    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
1268339    data EMWS8.Ensmbl46_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl46_EMEVENTREPORT;
1268340    length DATAROLE TARGET $32 TARGETLABEL $200 FALSENEVENT TRUENEVENT FALSEEVENT
1268340  ! TRUEEVENT 8;
MPRINT(EM_DIAGRAM):   length DATAROLE TARGET $32 TARGETLABEL $200 FALSENEVENT TRUENEVENT
FALSEEVENT TRUEEVENT 8;
1268341    label DATAROLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
1268341  !  TARGET = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,      NOQUOTE))"
1268341  ! TARGETLABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel, NOQUOTE))"
1268341  ! FALSEEVENT
1268342    = "%sysfunc(sasmsg(sashelp.dmine, rpt_falseevent_vlabel ,  NOQUOTE))" FALSENEVENT =
1268342  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_falsenevent_vlabel , NOQUOTE))" TRUEEVENT =
1268342  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_trueevent_vlabel ,   NOQUOTE))" TRUENEVENT =
1268343       "%sysfunc(sasmsg(sashelp.dmine, rpt_truenevent_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role" TARGET = "Target" TARGETLABEL = "Target
Label" FALSEEVENT = "False Positive" FALSENEVENT = "False Negative" TRUEEVENT = "True
Positive" TRUENEVENT = "True Negative";
1268344    FALSEEVENT=0;
MPRINT(EM_DIAGRAM):   FALSEEVENT=0;
1268345    FALSENEVENT=0;
MPRINT(EM_DIAGRAM):   FALSENEVENT=0;
1268346    TRUEEVENT=0;
MPRINT(EM_DIAGRAM):   TRUEEVENT=0;
1268347    TRUENEVENT=0;
MPRINT(EM_DIAGRAM):   TRUENEVENT=0;
1268348    set EMWS8.Ensmbl46_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl46_EMEVENTREPORT;
1268349    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set EMWS8.ENSMBL46_EMEVENTREPORT.
NOTE: The data set EMWS8.ENSMBL46_EMEVENTREPORT has 2 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1268350    proc print data=EMWS8.Ensmbl46_EMEVENTREPORT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Ensmbl46_EMEVENTREPORT noobs label;
1268351    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1268352    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_eventtable_title    , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Event Classification Table";
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL;
MPRINT(EM_DIAGRAM):   run;
1268353    by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL;
1268354    run;
 
NOTE: There were 2 observations read from the data set EMWS8.ENSMBL46_EMEVENTREPORT.
NOTE: The PROCEDURE PRINT printed page 114.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1268355    title10;
MPRINT(EM_DIAGRAM):   title10;
1268356    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
1268357    proc datasets library=EMWS8 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS8 nolist;
1268358    modify Ensmbl46_EMRANK;
MPRINT(EM_DIAGRAM):   modify Ensmbl46_EMRANK;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
1268359    label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
1268360    label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
1268360  ! ;
MPRINT(EM_DIAGRAM):   run;
1268361    run;
 
NOTE: MODIFY was successful for EMWS8.ENSMBL46_EMRANK.DATA.
1268362    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.14 seconds
      cpu time            0.14 seconds
 
 
1268363    %let _cn = %sysfunc(getoption(CENTER));
1268364    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
1268365    proc print data=EMWS8.Ensmbl46_EMRANK label noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Ensmbl46_EMRANK label noobs;
1268366    var
1268367    decile gain lift liftc resp respc N _meanP_;
MPRINT(EM_DIAGRAM):   var decile gain lift liftc resp respc N _meanP_;
1268368    by
1268369    notsorted DATAROLE
1268370    notsorted TARGET
1268371    notsorted TARGETLABEL
1268372    ;
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL ;
1268373    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1268374    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_scoreranking_title , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Assessment Score Rankings";
MPRINT(EM_DIAGRAM):   run;
1268375    run;
 
NOTE: There were 40 observations read from the data set EMWS8.ENSMBL46_EMRANK.
NOTE: The PROCEDURE PRINT printed page 115.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1268376    title10;
MPRINT(EM_DIAGRAM):   title10;
1268377    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
1268378    proc datasets library=EMWS8 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS8 nolist;
1268379    modify Ensmbl46_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   modify Ensmbl46_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
1268380    label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,
1268380  ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
1268381    label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
1268381  ! ;
MPRINT(EM_DIAGRAM):   run;
1268382    run;
 
NOTE: MODIFY was successful for EMWS8.ENSMBL46_EMSCOREDIST.DATA.
1268383    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.15 seconds
      cpu time            0.15 seconds
 
 
MPRINT(EM_DIAGRAM):    options nocenter;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Ensmbl46_EMSCOREDIST label noobs;
MPRINT(EM_DIAGRAM):   var p_label numberOfEvents numberOfNonEvents _meanp_ percentage;
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL ;
MPRINT(EM_DIAGRAM):   where TARGET in( "DepVar" );
MPRINT(EM_DIAGRAM):   title9 ' ';
MPRINT(EM_DIAGRAM):   title10 "Assessment Score Distribution";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   title10;
MPRINT(EM_DIAGRAM):   options NOCENTER;
MPRINT(EM_DIAGRAM):   proc printto;
MPRINT(EM_DIAGRAM):   run;
