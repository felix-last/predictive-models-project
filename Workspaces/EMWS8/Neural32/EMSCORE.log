MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "19.32 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                28. April 2016
Time:                19.32 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O3TWW1JB 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural32\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O3TWW1JB new;
MPRINT(EM_DIAGRAM):   run;
378487     data work.outkey;
MPRINT(EM_DIAGRAM):    data work.outkey;
378488     set EMWS8.Neural32_OUTKEY;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural32_OUTKEY;
378489     if upcase(ROLE) = 'HIDDEN';
MPRINT(EM_DIAGRAM):   if upcase(ROLE) = 'HIDDEN';
378490     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 32 observations read from the data set EMWS8.NEURAL32_OUTKEY.
NOTE: The data set WORK.OUTKEY has 3 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

378491     filename emflow
378491   ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural32\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural32\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural32: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
378492     *------------------------------------------------------------*;
378493     * Neural32: Scoring DATA data;
378494     *------------------------------------------------------------*;
378495     data EMWS8.Neural32_TRAIN
378496     / view=EMWS8.Neural32_TRAIN
378497     ;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural32_TRAIN / view=EMWS8.Neural32_TRAIN ;
378498     set EMWS8.Meta2_TRAIN
378499     ;
MPRINT(EM_DIAGRAM):   set EMWS8.Meta2_TRAIN ;
378500     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural32\EMFLOWSCORE.sas.
378501    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
378502    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
378503    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
378504    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
378505    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
378506    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
378507    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
378508    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
378509    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
378510    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
378511    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
378512    +LENGTH _WARN_ $4
378513    +      F_DepVar  $ 12
378514    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
378515    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
378516    +
378517    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
378518    +
378519    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
378520    +
378521    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
378522    +
378523    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
378524    +
378525    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
378526    +
378527    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
378528    +
378529    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
378530    +
378531    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
378532    +
378533    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
378534    +
378535    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
378536    +
378537    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
378538    +
378539    +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
378540    +
378541    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
378542    +
378543    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
378544    +
378545    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
378546    +
378547    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
378548    +
378549    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
378550    +
378551    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
378552    +
378553    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
378554    +
378555    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
378556    +
378557    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
378558    +
378559    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
378560    +
378561    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
378562    +
378563    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
378564    +
378565    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
378566    +
378567    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
378568    +
378569    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
378570    +
378571    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
378572    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
378573    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
378574    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
378575    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
378576    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
378577    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
378578    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
378579    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
378580    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
378581    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
378582    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
378583    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
378584    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
378585    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
378586    +end;
MPRINT(EM_DIAGRAM):   end;
378587    +else do;
MPRINT(EM_DIAGRAM):   else do;
378588    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
378589    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
378590    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
378591    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
378592    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
378593    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
378594    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
378595    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
378596    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
378597    +         end;
MPRINT(EM_DIAGRAM):   end;
378598    +         else do;
MPRINT(EM_DIAGRAM):   else do;
378599    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
378600    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
378601    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
378602    +            end;
MPRINT(EM_DIAGRAM):   end;
378603    +         end;
MPRINT(EM_DIAGRAM):   end;
378604    +      end;
MPRINT(EM_DIAGRAM):   end;
378605    +      else do;
MPRINT(EM_DIAGRAM):   else do;
378606    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
378607    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
378608    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
378609    +         end;
MPRINT(EM_DIAGRAM):   end;
378610    +      end;
MPRINT(EM_DIAGRAM):   end;
378611    +   end;
MPRINT(EM_DIAGRAM):   end;
378612    +   else do;
MPRINT(EM_DIAGRAM):   else do;
378613    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
378614    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
378615    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
378616    +      end;
MPRINT(EM_DIAGRAM):   end;
378617    +      else do;
MPRINT(EM_DIAGRAM):   else do;
378618    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
378619    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
378620    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
378621    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
378622    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
378623    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
378624    +         end;
MPRINT(EM_DIAGRAM):   end;
378625    +      end;
MPRINT(EM_DIAGRAM):   end;
378626    +   end;
MPRINT(EM_DIAGRAM):   end;
378627    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
378628    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
378629    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
378630    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
378631    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
378632    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
378633    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
378634    +   end;
MPRINT(EM_DIAGRAM):   end;
378635    +end;
MPRINT(EM_DIAGRAM):   end;
378636    +
378637    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
378638    +*** Checking missing input Interval
378639    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
378640    +
378641    +IF NMISS(
378642    +   AcceptedCmpTotal ,
378643    +   Frq ,
378644    +   Income ,
378645    +   Mnt ,
378646    +   MntGoldProds ,
378647    +   MntMeatProducts ,
378648    +   NumCatalogPurchases ,
378649    +   NumDealsPurchases ,
378650    +   NumWebVisitsMonth ,
378651    +   RFMstat ,
378652    +   Recency ,
378653    +   Teenhome ,
378654    +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntGoldProds , 
MntMeatProducts , NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , RFMstat , 
Recency , Teenhome , Year_Birth ) THEN DO;
378655    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
378656    +
378657    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
378658    +END;
MPRINT(EM_DIAGRAM):   END;
378659    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
378660    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
378661    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
378662    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
378663    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
378664    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
378665    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
378666    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
378667    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
378668    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
378669    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
378670    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
378671    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
378672    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
378673    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
378674    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
378675    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
378676    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
378677    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
378678    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
378679    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
378680    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
378681    +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
378682    +END;
MPRINT(EM_DIAGRAM):   END;
378683    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
378684    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
378685    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
378686    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
378687    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
378688    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
378689    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
378690    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
378691    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
378692    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
378693    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
378694    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
378695    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
378696    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
378697    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
378698    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
378699    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
378700    +   ELSE S_NumCatalogPurchases
378701    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
378702    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
378703    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
378704    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
378705    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
378706    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
378707    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
378708    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
378709    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
378710    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
378711    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
378712    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
378713    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
378714    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
378715    +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
378716    +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
378717    +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
378718    +END;
MPRINT(EM_DIAGRAM):   END;
378719    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
378720    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
378721    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
378722    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
378723    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
378724    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
378725    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
378726    +   H11  =    -0.30415776472034 * S_AcceptedCmpTotal  +     0.46152569945218 *
378727    +        S_Frq  +     0.03296970868265 * S_Income  +     0.42532580971352 *
378728    +        S_Mnt  +    -0.00688195431028 * S_MntGoldProds
378729    +          +     -0.3976744330559 * S_MntMeatProducts
378730    +          +    -0.40385749129031 * S_NumCatalogPurchases
378731    +          +    -0.08065665282057 * S_NumDealsPurchases
378732    +          +    -0.43158082943744 * S_NumWebVisitsMonth
378733    +          +     0.03481898099777 * S_RFMstat  +     0.48489132471841 *
378734    +        S_Recency  +     0.00732548515494 * S_Teenhome
378735    +          +     0.03827634964412 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H11 = -0.30415776472034 * S_AcceptedCmpTotal + 0.46152569945218 * S_Frq 
+ 0.03296970868265 * S_Income + 0.42532580971352 * S_Mnt + -0.00688195431028 * S_MntGoldProds 
+ -0.3976744330559 * S_MntMeatProducts + -0.40385749129031 * S_NumCatalogPurchases + 
-0.08065665282057 * S_NumDealsPurchases + -0.43158082943744 * S_NumWebVisitsMonth + 
0.03481898099777 * S_RFMstat + 0.48489132471841 * S_Recency + 0.00732548515494 * S_Teenhome + 
0.03827634964412 * S_Year_Birth ;
378736    +   H12  =     0.46804764182881 * S_AcceptedCmpTotal  +    -0.31023691313977 *
378737    +        S_Frq  +     0.94178514511874 * S_Income  +    -0.43906037454904 *
378738    +        S_Mnt  +     0.11089612058797 * S_MntGoldProds
378739    +          +     0.52930942107554 * S_MntMeatProducts
378740    +          +     0.59092872498893 * S_NumCatalogPurchases
378741    +          +    -0.18755247507318 * S_NumDealsPurchases
378742    +          +     0.58446216485097 * S_NumWebVisitsMonth
378743    +          +     0.04542414268543 * S_RFMstat  +    -0.89869182047941 *
378744    +        S_Recency  +    -0.49630055632774 * S_Teenhome
378745    +          +     0.01871758376674 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H12 = 0.46804764182881 * S_AcceptedCmpTotal + -0.31023691313977 * S_Frq 
+ 0.94178514511874 * S_Income + -0.43906037454904 * S_Mnt + 0.11089612058797 * S_MntGoldProds 
+ 0.52930942107554 * S_MntMeatProducts + 0.59092872498893 * S_NumCatalogPurchases + 
-0.18755247507318 * S_NumDealsPurchases + 0.58446216485097 * S_NumWebVisitsMonth + 
0.04542414268543 * S_RFMstat + -0.89869182047941 * S_Recency + -0.49630055632774 * S_Teenhome 
+ 0.01871758376674 * S_Year_Birth ;
378746    +   H13  =     0.04019115816134 * S_AcceptedCmpTotal  +    -1.41858475163118 *
378747    +        S_Frq  +     0.11670142813334 * S_Income  +     0.23528062781673 *
378748    +        S_Mnt  +     -0.0448102623714 * S_MntGoldProds
378749    +          +     2.84231917841962 * S_MntMeatProducts
378750    +          +     0.66872426393755 * S_NumCatalogPurchases
378751    +          +     0.41055603281177 * S_NumDealsPurchases
378752    +          +     -0.1234564388902 * S_NumWebVisitsMonth
378753    +          +     0.32815495214867 * S_RFMstat  +      0.0864080180104 *
378754    +        S_Recency  +    -0.01141915913789 * S_Teenhome
378755    +          +     0.08527392796395 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H13 = 0.04019115816134 * S_AcceptedCmpTotal + -1.41858475163118 * S_Frq 
+ 0.11670142813334 * S_Income + 0.23528062781673 * S_Mnt + -0.0448102623714 * S_MntGoldProds + 
2.84231917841962 * S_MntMeatProducts + 0.66872426393755 * S_NumCatalogPurchases + 
0.41055603281177 * S_NumDealsPurchases + -0.1234564388902 * S_NumWebVisitsMonth + 
0.32815495214867 * S_RFMstat + 0.0864080180104 * S_Recency + -0.01141915913789 * S_Teenhome + 
0.08527392796395 * S_Year_Birth ;
378756    +   H11  = H11  +    -0.16653938520355 * Marital_StatusDivorced
378757    +          +     0.04605713554827 * Marital_StatusMarried
378758    +          +     -0.0220669214948 * Marital_StatusSingle
378759    +          +     0.07041266016319 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.16653938520355 * Marital_StatusDivorced + 
0.04605713554827 * Marital_StatusMarried + -0.0220669214948 * Marital_StatusSingle + 
0.07041266016319 * Marital_StatusTogether ;
378760    +   H12  = H12  +      0.2421636661774 * Marital_StatusDivorced
378761    +          +    -1.10896050137112 * Marital_StatusMarried
378762    +          +     0.89740866006992 * Marital_StatusSingle
378763    +          +    -0.74861585298205 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.2421636661774 * Marital_StatusDivorced + -1.10896050137112 
* Marital_StatusMarried + 0.89740866006992 * Marital_StatusSingle + -0.74861585298205 * 
Marital_StatusTogether ;
378764    +   H13  = H13  +    -0.23077179376536 * Marital_StatusDivorced
378765    +          +     0.10217682210174 * Marital_StatusMarried
378766    +          +    -0.01108056104559 * Marital_StatusSingle
378767    +          +     0.04482682346899 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.23077179376536 * Marital_StatusDivorced + 
0.10217682210174 * Marital_StatusMarried + -0.01108056104559 * Marital_StatusSingle + 
0.04482682346899 * Marital_StatusTogether ;
378768    +   H11  =      0.7755689215671 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.7755689215671 + H11 ;
378769    +   H12  =    -3.40748475407629 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -3.40748475407629 + H12 ;
378770    +   H13  =      2.0363106899803 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 2.0363106899803 + H13 ;
378771    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
378772    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
378773    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
378774    +END;
MPRINT(EM_DIAGRAM):   END;
378775    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
378776    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
378777    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
378778    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
378779    +END;
MPRINT(EM_DIAGRAM):   END;
378780    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
378781    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
378782    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
378783    +
378784    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
378785    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
378786    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
378787    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
378788    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
378789    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
378790    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
378791    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
378792    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
378793    +end;
MPRINT(EM_DIAGRAM):   end;
378794    +else do;
MPRINT(EM_DIAGRAM):   else do;
378795    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
378796    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
378797    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
378798    +   end;
MPRINT(EM_DIAGRAM):   end;
378799    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
378800    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
378801    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
378802    +   end;
MPRINT(EM_DIAGRAM):   end;
378803    +   else do;
MPRINT(EM_DIAGRAM):   else do;
378804    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
378805    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
378806    +   end;
MPRINT(EM_DIAGRAM):   end;
378807    +end;
MPRINT(EM_DIAGRAM):   end;
378808    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
378809    +   P_DepVar1  =    -11.1218579796529 * H11  +     11.9045927306379 * H12
378810    +          +     12.5723516527277 * H13 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -11.1218579796529 * H11 + 11.9045927306379 * H12 + 
12.5723516527277 * H13 ;
378811    +   P_DepVar1  =     2.29207172914353 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.29207172914353 + P_DepVar1 ;
378812    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
378813    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
378814    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
378815    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
378816    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
378817    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
378818    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
378819    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
378820    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
378821    +END;
MPRINT(EM_DIAGRAM):   END;
378822    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
378823    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
378824    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
378825    +END;
MPRINT(EM_DIAGRAM):   END;
378826    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
378827    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
378828    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
378829    +END;
MPRINT(EM_DIAGRAM):   END;
378830    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
378831    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
378832    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
378833    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
378834    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
378835    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
378836    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
378837    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
378838    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
378839    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
378840    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
378841    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
378842    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
378843    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
378844    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
378845    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
378846    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
378847    +END;
MPRINT(EM_DIAGRAM):   END;
378848    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
378849    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
378850    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
378851    +drop
378852    +H11
378853    +H12
378854    +H13
378855    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 ;
378856    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
378857     run;

NOTE: DATA STEP view saved on file EMWS8.NEURAL32_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.META2_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
378858     quit;
378859     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
378860     filename emflow
378860   ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural32\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural32\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural32: Scoring VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
378861     *------------------------------------------------------------*;
378862     * Neural32: Scoring VALIDATE data;
378863     *------------------------------------------------------------*;
378864     data EMWS8.Neural32_VALIDATE
378865     / view=EMWS8.Neural32_VALIDATE
378866     ;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural32_VALIDATE / view=EMWS8.Neural32_VALIDATE ;
378867     set EMWS8.Meta2_VALIDATE
378868     ;
MPRINT(EM_DIAGRAM):   set EMWS8.Meta2_VALIDATE ;
378869     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural32\EMFLOWSCORE.sas.
378870    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
378871    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
378872    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
378873    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
378874    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
378875    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
378876    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
378877    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
378878    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
378879    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
378880    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
378881    +LENGTH _WARN_ $4
378882    +      F_DepVar  $ 12
378883    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
378884    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
378885    +
378886    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
378887    +
378888    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
378889    +
378890    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
378891    +
378892    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
378893    +
378894    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
378895    +
378896    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
378897    +
378898    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
378899    +
378900    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
378901    +
378902    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
378903    +
378904    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
378905    +
378906    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
378907    +
378908    +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
378909    +
378910    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
378911    +
378912    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
378913    +
378914    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
378915    +
378916    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
378917    +
378918    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
378919    +
378920    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
378921    +
378922    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
378923    +
378924    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
378925    +
378926    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
378927    +
378928    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
378929    +
378930    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
378931    +
378932    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
378933    +
378934    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
378935    +
378936    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
378937    +
378938    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
378939    +
378940    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
378941    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
378942    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
378943    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
378944    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
378945    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
378946    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
378947    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
378948    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
378949    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
378950    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
378951    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
378952    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
378953    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
378954    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
378955    +end;
MPRINT(EM_DIAGRAM):   end;
378956    +else do;
MPRINT(EM_DIAGRAM):   else do;
378957    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
378958    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
378959    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
378960    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
378961    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
378962    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
378963    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
378964    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
378965    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
378966    +         end;
MPRINT(EM_DIAGRAM):   end;
378967    +         else do;
MPRINT(EM_DIAGRAM):   else do;
378968    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
378969    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
378970    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
378971    +            end;
MPRINT(EM_DIAGRAM):   end;
378972    +         end;
MPRINT(EM_DIAGRAM):   end;
378973    +      end;
MPRINT(EM_DIAGRAM):   end;
378974    +      else do;
MPRINT(EM_DIAGRAM):   else do;
378975    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
378976    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
378977    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
378978    +         end;
MPRINT(EM_DIAGRAM):   end;
378979    +      end;
MPRINT(EM_DIAGRAM):   end;
378980    +   end;
MPRINT(EM_DIAGRAM):   end;
378981    +   else do;
MPRINT(EM_DIAGRAM):   else do;
378982    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
378983    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
378984    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
378985    +      end;
MPRINT(EM_DIAGRAM):   end;
378986    +      else do;
MPRINT(EM_DIAGRAM):   else do;
378987    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
378988    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
378989    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
378990    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
378991    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
378992    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
378993    +         end;
MPRINT(EM_DIAGRAM):   end;
378994    +      end;
MPRINT(EM_DIAGRAM):   end;
378995    +   end;
MPRINT(EM_DIAGRAM):   end;
378996    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
378997    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
378998    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
378999    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
379000    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
379001    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
379002    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
379003    +   end;
MPRINT(EM_DIAGRAM):   end;
379004    +end;
MPRINT(EM_DIAGRAM):   end;
379005    +
379006    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
379007    +*** Checking missing input Interval
379008    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
379009    +
379010    +IF NMISS(
379011    +   AcceptedCmpTotal ,
379012    +   Frq ,
379013    +   Income ,
379014    +   Mnt ,
379015    +   MntGoldProds ,
379016    +   MntMeatProducts ,
379017    +   NumCatalogPurchases ,
379018    +   NumDealsPurchases ,
379019    +   NumWebVisitsMonth ,
379020    +   RFMstat ,
379021    +   Recency ,
379022    +   Teenhome ,
379023    +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntGoldProds , 
MntMeatProducts , NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , RFMstat , 
Recency , Teenhome , Year_Birth ) THEN DO;
379024    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
379025    +
379026    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
379027    +END;
MPRINT(EM_DIAGRAM):   END;
379028    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
379029    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
379030    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
379031    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
379032    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
379033    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
379034    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
379035    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
379036    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
379037    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
379038    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
379039    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
379040    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
379041    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
379042    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
379043    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
379044    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
379045    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
379046    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
379047    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
379048    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
379049    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
379050    +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
379051    +END;
MPRINT(EM_DIAGRAM):   END;
379052    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
379053    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
379054    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
379055    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
379056    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
379057    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
379058    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
379059    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
379060    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
379061    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
379062    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
379063    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
379064    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
379065    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
379066    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
379067    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
379068    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
379069    +   ELSE S_NumCatalogPurchases
379070    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
379071    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
379072    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
379073    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
379074    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
379075    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
379076    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
379077    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
379078    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
379079    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
379080    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
379081    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
379082    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
379083    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
379084    +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
379085    +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
379086    +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
379087    +END;
MPRINT(EM_DIAGRAM):   END;
379088    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
379089    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
379090    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
379091    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
379092    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
379093    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
379094    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
379095    +   H11  =    -0.30415776472034 * S_AcceptedCmpTotal  +     0.46152569945218 *
379096    +        S_Frq  +     0.03296970868265 * S_Income  +     0.42532580971352 *
379097    +        S_Mnt  +    -0.00688195431028 * S_MntGoldProds
379098    +          +     -0.3976744330559 * S_MntMeatProducts
379099    +          +    -0.40385749129031 * S_NumCatalogPurchases
379100    +          +    -0.08065665282057 * S_NumDealsPurchases
379101    +          +    -0.43158082943744 * S_NumWebVisitsMonth
379102    +          +     0.03481898099777 * S_RFMstat  +     0.48489132471841 *
379103    +        S_Recency  +     0.00732548515494 * S_Teenhome
379104    +          +     0.03827634964412 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H11 = -0.30415776472034 * S_AcceptedCmpTotal + 0.46152569945218 * S_Frq 
+ 0.03296970868265 * S_Income + 0.42532580971352 * S_Mnt + -0.00688195431028 * S_MntGoldProds 
+ -0.3976744330559 * S_MntMeatProducts + -0.40385749129031 * S_NumCatalogPurchases + 
-0.08065665282057 * S_NumDealsPurchases + -0.43158082943744 * S_NumWebVisitsMonth + 
0.03481898099777 * S_RFMstat + 0.48489132471841 * S_Recency + 0.00732548515494 * S_Teenhome + 
0.03827634964412 * S_Year_Birth ;
379105    +   H12  =     0.46804764182881 * S_AcceptedCmpTotal  +    -0.31023691313977 *
379106    +        S_Frq  +     0.94178514511874 * S_Income  +    -0.43906037454904 *
379107    +        S_Mnt  +     0.11089612058797 * S_MntGoldProds
379108    +          +     0.52930942107554 * S_MntMeatProducts
379109    +          +     0.59092872498893 * S_NumCatalogPurchases
379110    +          +    -0.18755247507318 * S_NumDealsPurchases
379111    +          +     0.58446216485097 * S_NumWebVisitsMonth
379112    +          +     0.04542414268543 * S_RFMstat  +    -0.89869182047941 *
379113    +        S_Recency  +    -0.49630055632774 * S_Teenhome
379114    +          +     0.01871758376674 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H12 = 0.46804764182881 * S_AcceptedCmpTotal + -0.31023691313977 * S_Frq 
+ 0.94178514511874 * S_Income + -0.43906037454904 * S_Mnt + 0.11089612058797 * S_MntGoldProds 
+ 0.52930942107554 * S_MntMeatProducts + 0.59092872498893 * S_NumCatalogPurchases + 
-0.18755247507318 * S_NumDealsPurchases + 0.58446216485097 * S_NumWebVisitsMonth + 
0.04542414268543 * S_RFMstat + -0.89869182047941 * S_Recency + -0.49630055632774 * S_Teenhome 
+ 0.01871758376674 * S_Year_Birth ;
379115    +   H13  =     0.04019115816134 * S_AcceptedCmpTotal  +    -1.41858475163118 *
379116    +        S_Frq  +     0.11670142813334 * S_Income  +     0.23528062781673 *
379117    +        S_Mnt  +     -0.0448102623714 * S_MntGoldProds
379118    +          +     2.84231917841962 * S_MntMeatProducts
379119    +          +     0.66872426393755 * S_NumCatalogPurchases
379120    +          +     0.41055603281177 * S_NumDealsPurchases
379121    +          +     -0.1234564388902 * S_NumWebVisitsMonth
379122    +          +     0.32815495214867 * S_RFMstat  +      0.0864080180104 *
379123    +        S_Recency  +    -0.01141915913789 * S_Teenhome
379124    +          +     0.08527392796395 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H13 = 0.04019115816134 * S_AcceptedCmpTotal + -1.41858475163118 * S_Frq 
+ 0.11670142813334 * S_Income + 0.23528062781673 * S_Mnt + -0.0448102623714 * S_MntGoldProds + 
2.84231917841962 * S_MntMeatProducts + 0.66872426393755 * S_NumCatalogPurchases + 
0.41055603281177 * S_NumDealsPurchases + -0.1234564388902 * S_NumWebVisitsMonth + 
0.32815495214867 * S_RFMstat + 0.0864080180104 * S_Recency + -0.01141915913789 * S_Teenhome + 
0.08527392796395 * S_Year_Birth ;
379125    +   H11  = H11  +    -0.16653938520355 * Marital_StatusDivorced
379126    +          +     0.04605713554827 * Marital_StatusMarried
379127    +          +     -0.0220669214948 * Marital_StatusSingle
379128    +          +     0.07041266016319 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.16653938520355 * Marital_StatusDivorced + 
0.04605713554827 * Marital_StatusMarried + -0.0220669214948 * Marital_StatusSingle + 
0.07041266016319 * Marital_StatusTogether ;
379129    +   H12  = H12  +      0.2421636661774 * Marital_StatusDivorced
379130    +          +    -1.10896050137112 * Marital_StatusMarried
379131    +          +     0.89740866006992 * Marital_StatusSingle
379132    +          +    -0.74861585298205 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.2421636661774 * Marital_StatusDivorced + -1.10896050137112 
* Marital_StatusMarried + 0.89740866006992 * Marital_StatusSingle + -0.74861585298205 * 
Marital_StatusTogether ;
379133    +   H13  = H13  +    -0.23077179376536 * Marital_StatusDivorced
379134    +          +     0.10217682210174 * Marital_StatusMarried
379135    +          +    -0.01108056104559 * Marital_StatusSingle
379136    +          +     0.04482682346899 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.23077179376536 * Marital_StatusDivorced + 
0.10217682210174 * Marital_StatusMarried + -0.01108056104559 * Marital_StatusSingle + 
0.04482682346899 * Marital_StatusTogether ;
379137    +   H11  =      0.7755689215671 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.7755689215671 + H11 ;
379138    +   H12  =    -3.40748475407629 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -3.40748475407629 + H12 ;
379139    +   H13  =      2.0363106899803 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 2.0363106899803 + H13 ;
379140    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
379141    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
379142    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
379143    +END;
MPRINT(EM_DIAGRAM):   END;
379144    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
379145    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
379146    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
379147    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
379148    +END;
MPRINT(EM_DIAGRAM):   END;
379149    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
379150    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
379151    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
379152    +
379153    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
379154    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
379155    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
379156    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
379157    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
379158    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
379159    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
379160    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
379161    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
379162    +end;
MPRINT(EM_DIAGRAM):   end;
379163    +else do;
MPRINT(EM_DIAGRAM):   else do;
379164    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
379165    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
379166    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
379167    +   end;
MPRINT(EM_DIAGRAM):   end;
379168    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
379169    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
379170    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
379171    +   end;
MPRINT(EM_DIAGRAM):   end;
379172    +   else do;
MPRINT(EM_DIAGRAM):   else do;
379173    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
379174    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
379175    +   end;
MPRINT(EM_DIAGRAM):   end;
379176    +end;
MPRINT(EM_DIAGRAM):   end;
379177    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
379178    +   P_DepVar1  =    -11.1218579796529 * H11  +     11.9045927306379 * H12
379179    +          +     12.5723516527277 * H13 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -11.1218579796529 * H11 + 11.9045927306379 * H12 + 
12.5723516527277 * H13 ;
379180    +   P_DepVar1  =     2.29207172914353 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.29207172914353 + P_DepVar1 ;
379181    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
379182    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
379183    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
379184    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
379185    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
379186    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
379187    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
379188    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
379189    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
379190    +END;
MPRINT(EM_DIAGRAM):   END;
379191    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
379192    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
379193    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
379194    +END;
MPRINT(EM_DIAGRAM):   END;
379195    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
379196    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
379197    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
379198    +END;
MPRINT(EM_DIAGRAM):   END;
379199    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
379200    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
379201    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
379202    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
379203    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
379204    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
379205    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
379206    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
379207    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
379208    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
379209    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
379210    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
379211    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
379212    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
379213    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
379214    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
379215    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
379216    +END;
MPRINT(EM_DIAGRAM):   END;
379217    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
379218    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
379219    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
379220    +drop
379221    +H11
379222    +H12
379223    +H13
379224    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 ;
379225    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
379226     run;

NOTE: DATA STEP view saved on file EMWS8.NEURAL32_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.META2_VALIDATE.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
379227     quit;
379228     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
379229     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
379230     * Neural32: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Neural32: Computing metadata for TRAIN data;
379231     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS8.NEURAL32_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural32\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.Neural32_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.Neural32_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.Neural32_TRAIN out=WORK.M074KAO_ noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M074KAO_;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M074KAO_(keep=name type length label format formatl 
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = 
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M074KAO_;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M074KAO_;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M34S09DF NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M34S09DF;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M34S09DF;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3PAWFS8(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M34S09DF;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M34S09DF;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M34S09DF;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = 
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) 
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" 
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then 
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ 
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M34S09DF;
MPRINT(EMADVISECOLUMNS):   set WORK.M34S09DF;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Meta2_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Meta2_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural32_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT 
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Neural32";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "Neural32";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "Neural32";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "Neural32";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "Neural32";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "Neural32";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "Neural32";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "Neural32";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "Neural32";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "Neural32";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural32: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
379543     data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
379544     set EMWS8.Neural32_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural32_EMINFO;
379545     where DATA='Neural32' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='Neural32' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 
'MODEL');
379546     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.NEURAL32_EMINFO.
      WHERE (DATA='Neural32') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

379547     data EMWS8.Neural32_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.Neural32_EMINFO;
379548     length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
379549     input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
379550     cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS8.NEURAL32_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   run;
379554     run;
379555     data EMWS8.Neural32_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural32_EMINFO;
379556     set EMWS8.Neural32_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural32_EMINFO WORK.MODELTEMP_INFO;
379557     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.NEURAL32_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.NEURAL32_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

379558     proc sort data = EMWS8.Neural32_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Neural32_EMINFO NOTHREADS;
379559     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
379560     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.NEURAL32_EMINFO.
NOTE: The data set EMWS8.NEURAL32_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

379561     proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
379562     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
379563     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS8.FIMPORT_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

379564     proc sort data = EMWS8.Neural32_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.Neural32_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
379565     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
379566     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.NEURAL32_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

379567     data EMWS8.Neural32_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural32_EMINFO;
379568     merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
379569     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
379570     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.NEURAL32_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

379571     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
379572     delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
379573     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
379574     quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

NOTE: View EMWS8.NEURAL32_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: View EMWS8.NEURAL32_VALIDATE.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
