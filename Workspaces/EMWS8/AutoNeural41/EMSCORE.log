MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "10.53 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                28. April 2016
Time:                10.53 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O3A7HD_2 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural41\EMSCORE.out" encoding="UTF-8" 
NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O3A7HD_2 new;
MPRINT(EM_DIAGRAM):   run;
2802811    filename emflow
2802811  ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural41\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural41\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * AutoNeural41: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2802812    *------------------------------------------------------------*;
2802813    * AutoNeural41: Scoring DATA data;
2802814    *------------------------------------------------------------*;
2802815    data EMWS8.AutoNeural41_TRAIN
2802816    / view=EMWS8.AutoNeural41_TRAIN
2802817    ;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural41_TRAIN / view=EMWS8.AutoNeural41_TRAIN ;
2802818    set EMWS8.Meta2_TRAIN
2802819    ;
MPRINT(EM_DIAGRAM):   set EMWS8.Meta2_TRAIN ;
2802820    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural41\EMFLOWSCORE.sas.
2802821   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2802822   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2802823   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2802824   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2802825   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2802826   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2802827   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2802828   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2802829   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2802830   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2802831   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2802832   +LENGTH _WARN_ $4
2802833   +      F_DepVar  $ 12
2802834   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2802835   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2802836   +
2802837   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2802838   +
2802839   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2802840   +
2802841   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2802842   +
2802843   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2802844   +
2802845   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2802846   +
2802847   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2802848   +
2802849   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2802850   +
2802851   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2802852   +
2802853   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2802854   +
2802855   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2802856   +
2802857   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2802858   +
2802859   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2802860   +
2802861   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2802862   +
2802863   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2802864   +
2802865   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2802866   +
2802867   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2802868   +
2802869   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2802870   +
2802871   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2802872   +
2802873   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2802874   +
2802875   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2802876   +
2802877   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2802878   +
2802879   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2802880   +
2802881   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2802882   +
2802883   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2802884   +
2802885   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2802886   +
2802887   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2802888   +
2802889   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2802890   +
2802891   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2802892   +
2802893   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2802894   +
2802895   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2802896   +
2802897   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2802898   +
2802899   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2802900   +
2802901   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
2802902   +
2802903   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2802904   +
2802905   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2802906   +
2802907   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2802908   +
2802909   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2802910   +
2802911   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2802912   +
2802913   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2802914   +
2802915   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2802916   +
2802917   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2802918   +
2802919   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2802920   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2802921   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2802922   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2802923   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2802924   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2802925   +end;
MPRINT(EM_DIAGRAM):   end;
2802926   +else do;
MPRINT(EM_DIAGRAM):   else do;
2802927   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2802928   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2802929   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2802930   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2802931   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2802932   +   end;
MPRINT(EM_DIAGRAM):   end;
2802933   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2802934   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2802935   +   end;
MPRINT(EM_DIAGRAM):   end;
2802936   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2802937   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2802938   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2802939   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2802940   +   end;
MPRINT(EM_DIAGRAM):   end;
2802941   +end;
MPRINT(EM_DIAGRAM):   end;
2802942   +
2802943   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2802944   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2802945   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2802946   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2802947   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2802948   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2802949   +end;
MPRINT(EM_DIAGRAM):   end;
2802950   +else do;
MPRINT(EM_DIAGRAM):   else do;
2802951   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2802952   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2802953   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2802954   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2802955   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2802956   +   end;
MPRINT(EM_DIAGRAM):   end;
2802957   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2802958   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2802959   +   end;
MPRINT(EM_DIAGRAM):   end;
2802960   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2802961   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2802962   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2802963   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2802964   +   end;
MPRINT(EM_DIAGRAM):   end;
2802965   +end;
MPRINT(EM_DIAGRAM):   end;
2802966   +
2802967   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2802968   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2802969   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2802970   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2802971   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2802972   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2802973   +end;
MPRINT(EM_DIAGRAM):   end;
2802974   +else do;
MPRINT(EM_DIAGRAM):   else do;
2802975   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2802976   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2802977   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2802978   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2802979   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2802980   +   end;
MPRINT(EM_DIAGRAM):   end;
2802981   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2802982   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2802983   +   end;
MPRINT(EM_DIAGRAM):   end;
2802984   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2802985   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2802986   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2802987   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2802988   +   end;
MPRINT(EM_DIAGRAM):   end;
2802989   +end;
MPRINT(EM_DIAGRAM):   end;
2802990   +
2802991   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2802992   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2802993   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2802994   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2802995   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2802996   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2802997   +end;
MPRINT(EM_DIAGRAM):   end;
2802998   +else do;
MPRINT(EM_DIAGRAM):   else do;
2802999   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2803000   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2803001   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2803002   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2803003   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2803004   +   end;
MPRINT(EM_DIAGRAM):   end;
2803005   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2803006   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2803007   +   end;
MPRINT(EM_DIAGRAM):   end;
2803008   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2803009   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2803010   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2803011   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2803012   +   end;
MPRINT(EM_DIAGRAM):   end;
2803013   +end;
MPRINT(EM_DIAGRAM):   end;
2803014   +
2803015   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2803016   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2803017   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2803018   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2803019   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2803020   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2803021   +end;
MPRINT(EM_DIAGRAM):   end;
2803022   +else do;
MPRINT(EM_DIAGRAM):   else do;
2803023   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2803024   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2803025   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2803026   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2803027   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2803028   +   end;
MPRINT(EM_DIAGRAM):   end;
2803029   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2803030   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2803031   +   end;
MPRINT(EM_DIAGRAM):   end;
2803032   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2803033   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2803034   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2803035   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2803036   +   end;
MPRINT(EM_DIAGRAM):   end;
2803037   +end;
MPRINT(EM_DIAGRAM):   end;
2803038   +
2803039   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2803040   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2803041   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2803042   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2803043   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2803044   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2803045   +end;
MPRINT(EM_DIAGRAM):   end;
2803046   +else do;
MPRINT(EM_DIAGRAM):   else do;
2803047   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2803048   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2803049   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2803050   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2803051   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2803052   +   end;
MPRINT(EM_DIAGRAM):   end;
2803053   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2803054   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2803055   +   end;
MPRINT(EM_DIAGRAM):   end;
2803056   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2803057   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2803058   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2803059   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2803060   +   end;
MPRINT(EM_DIAGRAM):   end;
2803061   +end;
MPRINT(EM_DIAGRAM):   end;
2803062   +
2803063   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2803064   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
2803065   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2803066   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2803067   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2803068   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2803069   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2803070   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2803071   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2803072   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2803073   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2803074   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2803075   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2803076   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2803077   +end;
MPRINT(EM_DIAGRAM):   end;
2803078   +else do;
MPRINT(EM_DIAGRAM):   else do;
2803079   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2803080   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2803081   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2803082   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2803083   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2803084   +   end;
MPRINT(EM_DIAGRAM):   end;
2803085   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2803086   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2803087   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2803088   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2803089   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2803090   +   end;
MPRINT(EM_DIAGRAM):   end;
2803091   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2803092   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2803093   +   end;
MPRINT(EM_DIAGRAM):   end;
2803094   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2803095   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2803096   +   end;
MPRINT(EM_DIAGRAM):   end;
2803097   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2803098   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2803099   +   end;
MPRINT(EM_DIAGRAM):   end;
2803100   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2803101   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2803102   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2803103   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2803104   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2803105   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2803106   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2803107   +   end;
MPRINT(EM_DIAGRAM):   end;
2803108   +end;
MPRINT(EM_DIAGRAM):   end;
2803109   +
2803110   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2803111   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2803112   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
2803113   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2803114   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2803115   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2803116   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2803117   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2803118   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2803119   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2803120   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2803121   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2803122   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2803123   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2803124   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2803125   +end;
MPRINT(EM_DIAGRAM):   end;
2803126   +else do;
MPRINT(EM_DIAGRAM):   else do;
2803127   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2803128   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2803129   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2803130   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2803131   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2803132   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2803133   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2803134   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2803135   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2803136   +         end;
MPRINT(EM_DIAGRAM):   end;
2803137   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2803138   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2803139   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2803140   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2803141   +            end;
MPRINT(EM_DIAGRAM):   end;
2803142   +         end;
MPRINT(EM_DIAGRAM):   end;
2803143   +      end;
MPRINT(EM_DIAGRAM):   end;
2803144   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2803145   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2803146   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2803147   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2803148   +         end;
MPRINT(EM_DIAGRAM):   end;
2803149   +      end;
MPRINT(EM_DIAGRAM):   end;
2803150   +   end;
MPRINT(EM_DIAGRAM):   end;
2803151   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2803152   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2803153   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2803154   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2803155   +      end;
MPRINT(EM_DIAGRAM):   end;
2803156   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2803157   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2803158   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2803159   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2803160   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2803161   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2803162   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2803163   +         end;
MPRINT(EM_DIAGRAM):   end;
2803164   +      end;
MPRINT(EM_DIAGRAM):   end;
2803165   +   end;
MPRINT(EM_DIAGRAM):   end;
2803166   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2803167   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2803168   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2803169   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2803170   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2803171   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2803172   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2803173   +   end;
MPRINT(EM_DIAGRAM):   end;
2803174   +end;
MPRINT(EM_DIAGRAM):   end;
2803175   +
2803176   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2803177   +*** Checking missing input Interval
2803178   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2803179   +
2803180   +IF NMISS(
2803181   +   Income ,
2803182   +   Kidhome ,
2803183   +   MntFishProducts ,
2803184   +   MntFruits ,
2803185   +   MntGoldProds ,
2803186   +   MntMeatProducts ,
2803187   +   MntSweetProducts ,
2803188   +   MntWines ,
2803189   +   NumCatalogPurchases ,
2803190   +   NumDealsPurchases ,
2803191   +   NumStorePurchases ,
2803192   +   NumWebPurchases ,
2803193   +   NumWebVisitsMonth ,
2803194   +   Recency ,
2803195   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds 
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
2803196   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2803197   +
2803198   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2803199   +END;
MPRINT(EM_DIAGRAM):   END;
2803200   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2803201   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2803202   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2803203   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2803204   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2803205   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2803206   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2803207   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2803208   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2803209   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2803210   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2803211   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2803212   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2803213   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2803214   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2803215   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2803216   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2803217   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2803218   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2803219   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2803220   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2803221   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2803222   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2803223   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2803224   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2803225   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2803226   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2803227   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2803228   +END;
MPRINT(EM_DIAGRAM):   END;
2803229   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2803230   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2803231   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2803232   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2803233   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2803234   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2803235   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2803236   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2803237   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2803238   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2803239   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2803240   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2803241   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2803242   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
2803243   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2803244   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2803245   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2803246   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2803247   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2803248   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2803249   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2803250   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2803251   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2803252   +   ELSE S_NumCatalogPurchases
2803253   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2803254   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2803255   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2803256   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2803257   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2803258   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2803259   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2803260   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2803261   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2803262   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2803263   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2803264   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2803265   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2803266   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2803267   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2803268   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2803269   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2803270   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2803271   +END;
MPRINT(EM_DIAGRAM):   END;
2803272   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2803273   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2803274   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2803275   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2803276   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2803277   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2803278   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2803279   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2803280   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2803281   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2803282   +   H1x1_1  =     0.00788029676844 * S_Income  +    -0.91535527861933 *
2803283   +        S_Kidhome  +    -0.25225116407302 * S_MntFishProducts
2803284   +          +    -0.18797076337897 * S_MntFruits  +    -0.44902183906131 *
2803285   +        S_MntGoldProds  +      2.2767772850691 * S_MntMeatProducts
2803286   +          +     -0.2030617183738 * S_MntSweetProducts
2803287   +          +    -3.00492674390268 * S_MntWines  +     0.79341578039366 *
2803288   +        S_NumCatalogPurchases  +     0.87204448909716 * S_NumDealsPurchases
2803289   +          +    -2.67074303965293 * S_NumStorePurchases
2803290   +          +    -0.84694619593676 * S_NumWebPurchases
2803291   +          +     1.78464945757548 * S_NumWebVisitsMonth
2803292   +          +    -1.79669645209961 * S_Recency  +     0.12484193160086 *
2803293   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.00788029676844 * S_Income + -0.91535527861933 * S_Kidhome + 
-0.25225116407302 * S_MntFishProducts + -0.18797076337897 * S_MntFruits + -0.44902183906131 * 
S_MntGoldProds + 2.2767772850691 * S_MntMeatProducts + -0.2030617183738 * S_MntSweetProducts + 
-3.00492674390268 * S_MntWines + 0.79341578039366 * S_NumCatalogPurchases + 0.87204448909716 * 
S_NumDealsPurchases + -2.67074303965293 * S_NumStorePurchases + -0.84694619593676 * 
S_NumWebPurchases + 1.78464945757548 * S_NumWebVisitsMonth + -1.79669645209961 * S_Recency + 
0.12484193160086 * S_Teenhome ;
2803294   +   H1x1_2  =     0.89056482755935 * S_Income  +    -1.26858223800375 *
2803295   +        S_Kidhome  +    -0.21524958568885 * S_MntFishProducts
2803296   +          +     0.09518715448323 * S_MntFruits  +    -0.19863573935492 *
2803297   +        S_MntGoldProds  +     1.18841616001527 * S_MntMeatProducts
2803298   +          +    -0.48853587268985 * S_MntSweetProducts
2803299   +          +      -0.414993830248 * S_MntWines  +     1.47883555237605 *
2803300   +        S_NumCatalogPurchases  +     0.83644109170588 * S_NumDealsPurchases
2803301   +          +    -1.10593499185395 * S_NumStorePurchases
2803302   +          +     -1.3003228821842 * S_NumWebPurchases
2803303   +          +     2.87047131261901 * S_NumWebVisitsMonth
2803304   +          +    -3.10727941128136 * S_Recency  +     -1.2351049603093 *
2803305   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.89056482755935 * S_Income + -1.26858223800375 * S_Kidhome + 
-0.21524958568885 * S_MntFishProducts + 0.09518715448323 * S_MntFruits + -0.19863573935492 * 
S_MntGoldProds + 1.18841616001527 * S_MntMeatProducts + -0.48853587268985 * S_MntSweetProducts 
+ -0.414993830248 * S_MntWines + 1.47883555237605 * S_NumCatalogPurchases + 0.83644109170588 * 
S_NumDealsPurchases + -1.10593499185395 * S_NumStorePurchases + -1.3003228821842 * 
S_NumWebPurchases + 2.87047131261901 * S_NumWebVisitsMonth + -3.10727941128136 * S_Recency + 
-1.2351049603093 * S_Teenhome ;
2803306   +   H1x1_3  =    -0.59621293188677 * S_Income  +    -0.98204600423622 *
2803307   +        S_Kidhome  +     0.82413780234399 * S_MntFishProducts
2803308   +          +     0.39739163071946 * S_MntFruits  +    -0.49042553659196 *
2803309   +        S_MntGoldProds  +    -4.39932579909415 * S_MntMeatProducts
2803310   +          +    -0.27795094909244 * S_MntSweetProducts
2803311   +          +     0.24963500961568 * S_MntWines  +     -0.5239489331422 *
2803312   +        S_NumCatalogPurchases  +    -0.90657315438752 * S_NumDealsPurchases
2803313   +          +    -0.41332499072246 * S_NumStorePurchases
2803314   +          +     0.76626053410817 * S_NumWebPurchases
2803315   +          +     0.81795211037296 * S_NumWebVisitsMonth
2803316   +          +    -0.50876365872417 * S_Recency  +     0.41668164622243 *
2803317   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.59621293188677 * S_Income + -0.98204600423622 * S_Kidhome + 
0.82413780234399 * S_MntFishProducts + 0.39739163071946 * S_MntFruits + -0.49042553659196 * 
S_MntGoldProds + -4.39932579909415 * S_MntMeatProducts + -0.27795094909244 * 
S_MntSweetProducts + 0.24963500961568 * S_MntWines + -0.5239489331422 * S_NumCatalogPurchases 
+ -0.90657315438752 * S_NumDealsPurchases + -0.41332499072246 * S_NumStorePurchases + 
0.76626053410817 * S_NumWebPurchases + 0.81795211037296 * S_NumWebVisitsMonth + 
-0.50876365872417 * S_Recency + 0.41668164622243 * S_Teenhome ;
2803318   +   H1x1_4  =     0.96283488963096 * S_Income  +    -0.87986849758504 *
2803319   +        S_Kidhome  +     -0.1136919534185 * S_MntFishProducts
2803320   +          +    -0.29232436238858 * S_MntFruits  +      0.1837511707412 *
2803321   +        S_MntGoldProds  +     0.70727712145719 * S_MntMeatProducts
2803322   +          +    -0.08285620819867 * S_MntSweetProducts
2803323   +          +    -2.34391341405204 * S_MntWines  +     1.28790868462455 *
2803324   +        S_NumCatalogPurchases  +    -0.66448120419076 * S_NumDealsPurchases
2803325   +          +    -0.17691098721908 * S_NumStorePurchases
2803326   +          +     0.46246892093576 * S_NumWebPurchases
2803327   +          +     2.06272832836908 * S_NumWebVisitsMonth
2803328   +          +    -2.20357897947054 * S_Recency  +    -0.21370157733704 *
2803329   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.96283488963096 * S_Income + -0.87986849758504 * S_Kidhome + 
-0.1136919534185 * S_MntFishProducts + -0.29232436238858 * S_MntFruits + 0.1837511707412 * 
S_MntGoldProds + 0.70727712145719 * S_MntMeatProducts + -0.08285620819867 * S_MntSweetProducts 
+ -2.34391341405204 * S_MntWines + 1.28790868462455 * S_NumCatalogPurchases + 
-0.66448120419076 * S_NumDealsPurchases + -0.17691098721908 * S_NumStorePurchases + 
0.46246892093576 * S_NumWebPurchases + 2.06272832836908 * S_NumWebVisitsMonth + 
-2.20357897947054 * S_Recency + -0.21370157733704 * S_Teenhome ;
2803330   +   H1x1_1  = H1x1_1  +    -1.11882466050741 * AcceptedCmp10
2803331   +          +    -0.02672648348788 * AcceptedCmp20  +     -0.9935054015775 *
2803332   +        AcceptedCmp30  +    -0.40619950578221 * AcceptedCmp40
2803333   +          +     0.75861408836828 * AcceptedCmp50  +    -0.08119659353213 *
2803334   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -1.11882466050741 * AcceptedCmp10 + -0.02672648348788 
* AcceptedCmp20 + -0.9935054015775 * AcceptedCmp30 + -0.40619950578221 * AcceptedCmp40 + 
0.75861408836828 * AcceptedCmp50 + -0.08119659353213 * Complain0 ;
2803335   +   H1x1_2  = H1x1_2  +    -1.19874175712489 * AcceptedCmp10
2803336   +          +    -1.39569753392124 * AcceptedCmp20  +    -1.40792768449965 *
2803337   +        AcceptedCmp30  +    -1.33621370186337 * AcceptedCmp40
2803338   +          +    -1.28850585600497 * AcceptedCmp50  +     1.54913459648682 *
2803339   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -1.19874175712489 * AcceptedCmp10 + -1.39569753392124 
* AcceptedCmp20 + -1.40792768449965 * AcceptedCmp30 + -1.33621370186337 * AcceptedCmp40 + 
-1.28850585600497 * AcceptedCmp50 + 1.54913459648682 * Complain0 ;
2803340   +   H1x1_3  = H1x1_3  +      0.8900995500275 * AcceptedCmp10
2803341   +          +     0.63129973315749 * AcceptedCmp20  +    -0.31513199468014 *
2803342   +        AcceptedCmp30  +     0.36000457467611 * AcceptedCmp40
2803343   +          +     0.62901278737039 * AcceptedCmp50  +     0.13436691399472 *
2803344   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.8900995500275 * AcceptedCmp10 + 0.63129973315749 * 
AcceptedCmp20 + -0.31513199468014 * AcceptedCmp30 + 0.36000457467611 * AcceptedCmp40 + 
0.62901278737039 * AcceptedCmp50 + 0.13436691399472 * Complain0 ;
2803345   +   H1x1_4  = H1x1_4  +     -0.4761315940218 * AcceptedCmp10
2803346   +          +     0.04116528443754 * AcceptedCmp20  +    -1.31248665137501 *
2803347   +        AcceptedCmp30  +    -1.13922224536841 * AcceptedCmp40
2803348   +          +    -1.71240975292363 * AcceptedCmp50  +     0.98794736218555 *
2803349   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.4761315940218 * AcceptedCmp10 + 0.04116528443754 * 
AcceptedCmp20 + -1.31248665137501 * AcceptedCmp30 + -1.13922224536841 * AcceptedCmp40 + 
-1.71240975292363 * AcceptedCmp50 + 0.98794736218555 * Complain0 ;
2803350   +   H1x1_1  = H1x1_1  +    -0.19427690904448 * Education2n_Cycle
2803351   +          +    -0.78361431701943 * EducationBasic  +     0.70012279609726 *
2803352   +        EducationGraduation  +    -0.51132563359945 * EducationMaster
2803353   +          +     1.59526812226707 * Marital_StatusDivorced
2803354   +          +    -0.74331656724296 * Marital_StatusMarried
2803355   +          +     0.74316614019998 * Marital_StatusSingle
2803356   +          +    -1.36761487171479 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.19427690904448 * Education2n_Cycle + 
-0.78361431701943 * EducationBasic + 0.70012279609726 * EducationGraduation + 
-0.51132563359945 * EducationMaster + 1.59526812226707 * Marital_StatusDivorced + 
-0.74331656724296 * Marital_StatusMarried + 0.74316614019998 * Marital_StatusSingle + 
-1.36761487171479 * Marital_StatusTogether ;
2803357   +   H1x1_2  = H1x1_2  +    -0.76077191404637 * Education2n_Cycle
2803358   +          +    -0.22680587409979 * EducationBasic  +     0.19812025591093 *
2803359   +        EducationGraduation  +     0.07596142730184 * EducationMaster
2803360   +          +     0.94291322065497 * Marital_StatusDivorced
2803361   +          +    -1.64331597630127 * Marital_StatusMarried
2803362   +          +     2.21526196736604 * Marital_StatusSingle
2803363   +          +    -1.52687548646297 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.76077191404637 * Education2n_Cycle + 
-0.22680587409979 * EducationBasic + 0.19812025591093 * EducationGraduation + 0.07596142730184 
* EducationMaster + 0.94291322065497 * Marital_StatusDivorced + -1.64331597630127 * 
Marital_StatusMarried + 2.21526196736604 * Marital_StatusSingle + -1.52687548646297 * 
Marital_StatusTogether ;
2803364   +   H1x1_3  = H1x1_3  +    -0.22328003539059 * Education2n_Cycle
2803365   +          +    -0.56253476355283 * EducationBasic  +     0.43074608752346 *
2803366   +        EducationGraduation  +    -0.59791003195469 * EducationMaster
2803367   +          +     1.63906979191221 * Marital_StatusDivorced
2803368   +          +    -1.00497354965718 * Marital_StatusMarried
2803369   +          +     0.70485207953497 * Marital_StatusSingle
2803370   +          +    -1.55917756143873 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.22328003539059 * Education2n_Cycle + 
-0.56253476355283 * EducationBasic + 0.43074608752346 * EducationGraduation + 
-0.59791003195469 * EducationMaster + 1.63906979191221 * Marital_StatusDivorced + 
-1.00497354965718 * Marital_StatusMarried + 0.70485207953497 * Marital_StatusSingle + 
-1.55917756143873 * Marital_StatusTogether ;
2803371   +   H1x1_4  = H1x1_4  +     0.85325476712793 * Education2n_Cycle
2803372   +          +    -0.10167049440435 * EducationBasic  +     0.11808465181014 *
2803373   +        EducationGraduation  +     -0.1847363034021 * EducationMaster
2803374   +          +     0.75038128420756 * Marital_StatusDivorced
2803375   +          +    -1.93055855198469 * Marital_StatusMarried
2803376   +          +     0.73816798380254 * Marital_StatusSingle
2803377   +          +    -1.77103687011169 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.85325476712793 * Education2n_Cycle + 
-0.10167049440435 * EducationBasic + 0.11808465181014 * EducationGraduation + -0.1847363034021 
* EducationMaster + 0.75038128420756 * Marital_StatusDivorced + -1.93055855198469 * 
Marital_StatusMarried + 0.73816798380254 * Marital_StatusSingle + -1.77103687011169 * 
Marital_StatusTogether ;
2803378   +   H1x1_1  =    -0.97292943558748 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.97292943558748 + H1x1_1 ;
2803379   +   H1x1_2  =      -0.767474595653 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.767474595653 + H1x1_2 ;
2803380   +   H1x1_3  =    -1.54289542125346 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -1.54289542125346 + H1x1_3 ;
2803381   +   H1x1_4  =     0.11531219453063 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.11531219453063 + H1x1_4 ;
2803382   +   H1x1_5  = 0;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0;
2803383   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 );
2803384   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2803385   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
2803386   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
2803387   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
2803388   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
2803389   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
2803390   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
2803391   +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
2803392   +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
2803393   +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
2803394   +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
2803395   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
2803396   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
2803397   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
2803398   +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
2803399   +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
2803400   +END;
MPRINT(EM_DIAGRAM):   END;
2803401   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2803402   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2803403   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2803404   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2803405   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2803406   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
2803407   +END;
MPRINT(EM_DIAGRAM):   END;
2803408   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2803409   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2803410   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2803411   +
2803412   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2803413   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2803414   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2803415   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2803416   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2803417   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2803418   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2803419   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2803420   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2803421   +end;
MPRINT(EM_DIAGRAM):   end;
2803422   +else do;
MPRINT(EM_DIAGRAM):   else do;
2803423   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2803424   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2803425   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2803426   +   end;
MPRINT(EM_DIAGRAM):   end;
2803427   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2803428   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2803429   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2803430   +   end;
MPRINT(EM_DIAGRAM):   end;
2803431   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2803432   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2803433   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2803434   +   end;
MPRINT(EM_DIAGRAM):   end;
2803435   +end;
MPRINT(EM_DIAGRAM):   end;
2803436   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2803437   +   P_DepVar1  =     4.87259918787296 * H1x1_1  +     21.0865386977957 * H1x1_2
2803438   +          +    -8.49666483029666 * H1x1_3  +     4.50140461489884 * H1x1_4
2803439   +          +    -19.2888668755466 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 4.87259918787296 * H1x1_1 + 21.0865386977957 * H1x1_2 + 
-8.49666483029666 * H1x1_3 + 4.50140461489884 * H1x1_4 + -19.2888668755466 * H1x1_5 ;
2803440   +   P_DepVar1  =     0.94995870883169 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.94995870883169 + P_DepVar1 ;
2803441   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2803442   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2803443   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2803444   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2803445   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2803446   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2803447   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2803448   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2803449   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2803450   +END;
MPRINT(EM_DIAGRAM):   END;
2803451   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2803452   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2803453   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2803454   +END;
MPRINT(EM_DIAGRAM):   END;
2803455   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2803456   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2803457   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2803458   +END;
MPRINT(EM_DIAGRAM):   END;
2803459   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2803460   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2803461   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2803462   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2803463   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2803464   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2803465   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2803466   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2803467   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2803468   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2803469   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2803470   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2803471   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2803472   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2803473   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2803474   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2803475   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2803476   +END;
MPRINT(EM_DIAGRAM):   END;
2803477   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2803478   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2803479   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2803480   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2803481    run;

NOTE: DATA STEP view saved on file EMWS8.AUTONEURAL41_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.META2_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2803482    quit;
2803483    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
2803484    filename emflow
2803484  ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural41\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural41\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * AutoNeural41: Scoring VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2803485    *------------------------------------------------------------*;
2803486    * AutoNeural41: Scoring VALIDATE data;
2803487    *------------------------------------------------------------*;
2803488    data EMWS8.AutoNeural41_VALIDATE
2803489    / view=EMWS8.AutoNeural41_VALIDATE
2803490    ;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural41_VALIDATE / view=EMWS8.AutoNeural41_VALIDATE ;
2803491    set EMWS8.Meta2_VALIDATE
2803492    ;
MPRINT(EM_DIAGRAM):   set EMWS8.Meta2_VALIDATE ;
2803493    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural41\EMFLOWSCORE.sas.
2803494   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2803495   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2803496   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2803497   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2803498   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2803499   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2803500   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2803501   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2803502   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2803503   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2803504   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2803505   +LENGTH _WARN_ $4
2803506   +      F_DepVar  $ 12
2803507   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2803508   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2803509   +
2803510   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2803511   +
2803512   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2803513   +
2803514   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2803515   +
2803516   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2803517   +
2803518   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2803519   +
2803520   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2803521   +
2803522   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2803523   +
2803524   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2803525   +
2803526   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2803527   +
2803528   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2803529   +
2803530   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2803531   +
2803532   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2803533   +
2803534   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2803535   +
2803536   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2803537   +
2803538   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2803539   +
2803540   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2803541   +
2803542   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2803543   +
2803544   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2803545   +
2803546   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2803547   +
2803548   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2803549   +
2803550   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2803551   +
2803552   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2803553   +
2803554   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2803555   +
2803556   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2803557   +
2803558   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2803559   +
2803560   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2803561   +
2803562   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2803563   +
2803564   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2803565   +
2803566   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2803567   +
2803568   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2803569   +
2803570   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2803571   +
2803572   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2803573   +
2803574   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
2803575   +
2803576   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2803577   +
2803578   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2803579   +
2803580   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2803581   +
2803582   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2803583   +
2803584   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2803585   +
2803586   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2803587   +
2803588   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2803589   +
2803590   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2803591   +
2803592   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2803593   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2803594   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2803595   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2803596   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2803597   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2803598   +end;
MPRINT(EM_DIAGRAM):   end;
2803599   +else do;
MPRINT(EM_DIAGRAM):   else do;
2803600   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2803601   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2803602   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2803603   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2803604   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2803605   +   end;
MPRINT(EM_DIAGRAM):   end;
2803606   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2803607   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2803608   +   end;
MPRINT(EM_DIAGRAM):   end;
2803609   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2803610   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2803611   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2803612   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2803613   +   end;
MPRINT(EM_DIAGRAM):   end;
2803614   +end;
MPRINT(EM_DIAGRAM):   end;
2803615   +
2803616   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2803617   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2803618   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2803619   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2803620   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2803621   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2803622   +end;
MPRINT(EM_DIAGRAM):   end;
2803623   +else do;
MPRINT(EM_DIAGRAM):   else do;
2803624   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2803625   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2803626   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2803627   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2803628   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2803629   +   end;
MPRINT(EM_DIAGRAM):   end;
2803630   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2803631   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2803632   +   end;
MPRINT(EM_DIAGRAM):   end;
2803633   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2803634   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2803635   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2803636   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2803637   +   end;
MPRINT(EM_DIAGRAM):   end;
2803638   +end;
MPRINT(EM_DIAGRAM):   end;
2803639   +
2803640   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2803641   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2803642   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2803643   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2803644   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2803645   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2803646   +end;
MPRINT(EM_DIAGRAM):   end;
2803647   +else do;
MPRINT(EM_DIAGRAM):   else do;
2803648   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2803649   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2803650   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2803651   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2803652   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2803653   +   end;
MPRINT(EM_DIAGRAM):   end;
2803654   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2803655   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2803656   +   end;
MPRINT(EM_DIAGRAM):   end;
2803657   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2803658   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2803659   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2803660   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2803661   +   end;
MPRINT(EM_DIAGRAM):   end;
2803662   +end;
MPRINT(EM_DIAGRAM):   end;
2803663   +
2803664   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2803665   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2803666   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2803667   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2803668   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2803669   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2803670   +end;
MPRINT(EM_DIAGRAM):   end;
2803671   +else do;
MPRINT(EM_DIAGRAM):   else do;
2803672   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2803673   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2803674   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2803675   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2803676   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2803677   +   end;
MPRINT(EM_DIAGRAM):   end;
2803678   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2803679   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2803680   +   end;
MPRINT(EM_DIAGRAM):   end;
2803681   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2803682   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2803683   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2803684   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2803685   +   end;
MPRINT(EM_DIAGRAM):   end;
2803686   +end;
MPRINT(EM_DIAGRAM):   end;
2803687   +
2803688   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2803689   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2803690   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2803691   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2803692   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2803693   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2803694   +end;
MPRINT(EM_DIAGRAM):   end;
2803695   +else do;
MPRINT(EM_DIAGRAM):   else do;
2803696   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2803697   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2803698   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2803699   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2803700   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2803701   +   end;
MPRINT(EM_DIAGRAM):   end;
2803702   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2803703   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2803704   +   end;
MPRINT(EM_DIAGRAM):   end;
2803705   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2803706   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2803707   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2803708   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2803709   +   end;
MPRINT(EM_DIAGRAM):   end;
2803710   +end;
MPRINT(EM_DIAGRAM):   end;
2803711   +
2803712   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2803713   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2803714   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2803715   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2803716   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2803717   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2803718   +end;
MPRINT(EM_DIAGRAM):   end;
2803719   +else do;
MPRINT(EM_DIAGRAM):   else do;
2803720   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2803721   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2803722   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2803723   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2803724   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2803725   +   end;
MPRINT(EM_DIAGRAM):   end;
2803726   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2803727   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2803728   +   end;
MPRINT(EM_DIAGRAM):   end;
2803729   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2803730   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2803731   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2803732   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2803733   +   end;
MPRINT(EM_DIAGRAM):   end;
2803734   +end;
MPRINT(EM_DIAGRAM):   end;
2803735   +
2803736   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2803737   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
2803738   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2803739   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2803740   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2803741   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2803742   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2803743   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2803744   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2803745   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2803746   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2803747   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2803748   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2803749   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2803750   +end;
MPRINT(EM_DIAGRAM):   end;
2803751   +else do;
MPRINT(EM_DIAGRAM):   else do;
2803752   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2803753   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2803754   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2803755   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2803756   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2803757   +   end;
MPRINT(EM_DIAGRAM):   end;
2803758   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2803759   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2803760   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2803761   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2803762   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2803763   +   end;
MPRINT(EM_DIAGRAM):   end;
2803764   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2803765   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2803766   +   end;
MPRINT(EM_DIAGRAM):   end;
2803767   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2803768   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2803769   +   end;
MPRINT(EM_DIAGRAM):   end;
2803770   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2803771   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2803772   +   end;
MPRINT(EM_DIAGRAM):   end;
2803773   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2803774   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2803775   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2803776   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2803777   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2803778   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2803779   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2803780   +   end;
MPRINT(EM_DIAGRAM):   end;
2803781   +end;
MPRINT(EM_DIAGRAM):   end;
2803782   +
2803783   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2803784   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2803785   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
2803786   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2803787   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2803788   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2803789   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2803790   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2803791   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2803792   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2803793   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2803794   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2803795   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2803796   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2803797   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2803798   +end;
MPRINT(EM_DIAGRAM):   end;
2803799   +else do;
MPRINT(EM_DIAGRAM):   else do;
2803800   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2803801   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2803802   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2803803   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2803804   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2803805   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2803806   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2803807   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2803808   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2803809   +         end;
MPRINT(EM_DIAGRAM):   end;
2803810   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2803811   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2803812   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2803813   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2803814   +            end;
MPRINT(EM_DIAGRAM):   end;
2803815   +         end;
MPRINT(EM_DIAGRAM):   end;
2803816   +      end;
MPRINT(EM_DIAGRAM):   end;
2803817   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2803818   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2803819   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2803820   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2803821   +         end;
MPRINT(EM_DIAGRAM):   end;
2803822   +      end;
MPRINT(EM_DIAGRAM):   end;
2803823   +   end;
MPRINT(EM_DIAGRAM):   end;
2803824   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2803825   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2803826   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2803827   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2803828   +      end;
MPRINT(EM_DIAGRAM):   end;
2803829   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2803830   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2803831   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2803832   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2803833   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2803834   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2803835   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2803836   +         end;
MPRINT(EM_DIAGRAM):   end;
2803837   +      end;
MPRINT(EM_DIAGRAM):   end;
2803838   +   end;
MPRINT(EM_DIAGRAM):   end;
2803839   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2803840   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2803841   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2803842   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2803843   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2803844   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2803845   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2803846   +   end;
MPRINT(EM_DIAGRAM):   end;
2803847   +end;
MPRINT(EM_DIAGRAM):   end;
2803848   +
2803849   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2803850   +*** Checking missing input Interval
2803851   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2803852   +
2803853   +IF NMISS(
2803854   +   Income ,
2803855   +   Kidhome ,
2803856   +   MntFishProducts ,
2803857   +   MntFruits ,
2803858   +   MntGoldProds ,
2803859   +   MntMeatProducts ,
2803860   +   MntSweetProducts ,
2803861   +   MntWines ,
2803862   +   NumCatalogPurchases ,
2803863   +   NumDealsPurchases ,
2803864   +   NumStorePurchases ,
2803865   +   NumWebPurchases ,
2803866   +   NumWebVisitsMonth ,
2803867   +   Recency ,
2803868   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds 
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
2803869   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2803870   +
2803871   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2803872   +END;
MPRINT(EM_DIAGRAM):   END;
2803873   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2803874   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2803875   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2803876   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2803877   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2803878   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2803879   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2803880   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2803881   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2803882   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2803883   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2803884   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2803885   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2803886   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2803887   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2803888   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2803889   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2803890   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2803891   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2803892   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2803893   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2803894   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2803895   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2803896   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2803897   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2803898   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2803899   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2803900   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2803901   +END;
MPRINT(EM_DIAGRAM):   END;
2803902   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2803903   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2803904   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2803905   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2803906   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2803907   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2803908   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2803909   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2803910   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2803911   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2803912   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2803913   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2803914   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2803915   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
2803916   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2803917   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2803918   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2803919   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2803920   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2803921   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2803922   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2803923   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2803924   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2803925   +   ELSE S_NumCatalogPurchases
2803926   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2803927   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2803928   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2803929   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2803930   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2803931   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2803932   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2803933   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2803934   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2803935   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2803936   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2803937   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2803938   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2803939   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2803940   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2803941   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2803942   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2803943   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2803944   +END;
MPRINT(EM_DIAGRAM):   END;
2803945   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2803946   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2803947   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2803948   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2803949   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2803950   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2803951   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2803952   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2803953   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2803954   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2803955   +   H1x1_1  =     0.00788029676844 * S_Income  +    -0.91535527861933 *
2803956   +        S_Kidhome  +    -0.25225116407302 * S_MntFishProducts
2803957   +          +    -0.18797076337897 * S_MntFruits  +    -0.44902183906131 *
2803958   +        S_MntGoldProds  +      2.2767772850691 * S_MntMeatProducts
2803959   +          +     -0.2030617183738 * S_MntSweetProducts
2803960   +          +    -3.00492674390268 * S_MntWines  +     0.79341578039366 *
2803961   +        S_NumCatalogPurchases  +     0.87204448909716 * S_NumDealsPurchases
2803962   +          +    -2.67074303965293 * S_NumStorePurchases
2803963   +          +    -0.84694619593676 * S_NumWebPurchases
2803964   +          +     1.78464945757548 * S_NumWebVisitsMonth
2803965   +          +    -1.79669645209961 * S_Recency  +     0.12484193160086 *
2803966   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.00788029676844 * S_Income + -0.91535527861933 * S_Kidhome + 
-0.25225116407302 * S_MntFishProducts + -0.18797076337897 * S_MntFruits + -0.44902183906131 * 
S_MntGoldProds + 2.2767772850691 * S_MntMeatProducts + -0.2030617183738 * S_MntSweetProducts + 
-3.00492674390268 * S_MntWines + 0.79341578039366 * S_NumCatalogPurchases + 0.87204448909716 * 
S_NumDealsPurchases + -2.67074303965293 * S_NumStorePurchases + -0.84694619593676 * 
S_NumWebPurchases + 1.78464945757548 * S_NumWebVisitsMonth + -1.79669645209961 * S_Recency + 
0.12484193160086 * S_Teenhome ;
2803967   +   H1x1_2  =     0.89056482755935 * S_Income  +    -1.26858223800375 *
2803968   +        S_Kidhome  +    -0.21524958568885 * S_MntFishProducts
2803969   +          +     0.09518715448323 * S_MntFruits  +    -0.19863573935492 *
2803970   +        S_MntGoldProds  +     1.18841616001527 * S_MntMeatProducts
2803971   +          +    -0.48853587268985 * S_MntSweetProducts
2803972   +          +      -0.414993830248 * S_MntWines  +     1.47883555237605 *
2803973   +        S_NumCatalogPurchases  +     0.83644109170588 * S_NumDealsPurchases
2803974   +          +    -1.10593499185395 * S_NumStorePurchases
2803975   +          +     -1.3003228821842 * S_NumWebPurchases
2803976   +          +     2.87047131261901 * S_NumWebVisitsMonth
2803977   +          +    -3.10727941128136 * S_Recency  +     -1.2351049603093 *
2803978   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.89056482755935 * S_Income + -1.26858223800375 * S_Kidhome + 
-0.21524958568885 * S_MntFishProducts + 0.09518715448323 * S_MntFruits + -0.19863573935492 * 
S_MntGoldProds + 1.18841616001527 * S_MntMeatProducts + -0.48853587268985 * S_MntSweetProducts 
+ -0.414993830248 * S_MntWines + 1.47883555237605 * S_NumCatalogPurchases + 0.83644109170588 * 
S_NumDealsPurchases + -1.10593499185395 * S_NumStorePurchases + -1.3003228821842 * 
S_NumWebPurchases + 2.87047131261901 * S_NumWebVisitsMonth + -3.10727941128136 * S_Recency + 
-1.2351049603093 * S_Teenhome ;
2803979   +   H1x1_3  =    -0.59621293188677 * S_Income  +    -0.98204600423622 *
2803980   +        S_Kidhome  +     0.82413780234399 * S_MntFishProducts
2803981   +          +     0.39739163071946 * S_MntFruits  +    -0.49042553659196 *
2803982   +        S_MntGoldProds  +    -4.39932579909415 * S_MntMeatProducts
2803983   +          +    -0.27795094909244 * S_MntSweetProducts
2803984   +          +     0.24963500961568 * S_MntWines  +     -0.5239489331422 *
2803985   +        S_NumCatalogPurchases  +    -0.90657315438752 * S_NumDealsPurchases
2803986   +          +    -0.41332499072246 * S_NumStorePurchases
2803987   +          +     0.76626053410817 * S_NumWebPurchases
2803988   +          +     0.81795211037296 * S_NumWebVisitsMonth
2803989   +          +    -0.50876365872417 * S_Recency  +     0.41668164622243 *
2803990   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.59621293188677 * S_Income + -0.98204600423622 * S_Kidhome + 
0.82413780234399 * S_MntFishProducts + 0.39739163071946 * S_MntFruits + -0.49042553659196 * 
S_MntGoldProds + -4.39932579909415 * S_MntMeatProducts + -0.27795094909244 * 
S_MntSweetProducts + 0.24963500961568 * S_MntWines + -0.5239489331422 * S_NumCatalogPurchases 
+ -0.90657315438752 * S_NumDealsPurchases + -0.41332499072246 * S_NumStorePurchases + 
0.76626053410817 * S_NumWebPurchases + 0.81795211037296 * S_NumWebVisitsMonth + 
-0.50876365872417 * S_Recency + 0.41668164622243 * S_Teenhome ;
2803991   +   H1x1_4  =     0.96283488963096 * S_Income  +    -0.87986849758504 *
2803992   +        S_Kidhome  +     -0.1136919534185 * S_MntFishProducts
2803993   +          +    -0.29232436238858 * S_MntFruits  +      0.1837511707412 *
2803994   +        S_MntGoldProds  +     0.70727712145719 * S_MntMeatProducts
2803995   +          +    -0.08285620819867 * S_MntSweetProducts
2803996   +          +    -2.34391341405204 * S_MntWines  +     1.28790868462455 *
2803997   +        S_NumCatalogPurchases  +    -0.66448120419076 * S_NumDealsPurchases
2803998   +          +    -0.17691098721908 * S_NumStorePurchases
2803999   +          +     0.46246892093576 * S_NumWebPurchases
2804000   +          +     2.06272832836908 * S_NumWebVisitsMonth
2804001   +          +    -2.20357897947054 * S_Recency  +    -0.21370157733704 *
2804002   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.96283488963096 * S_Income + -0.87986849758504 * S_Kidhome + 
-0.1136919534185 * S_MntFishProducts + -0.29232436238858 * S_MntFruits + 0.1837511707412 * 
S_MntGoldProds + 0.70727712145719 * S_MntMeatProducts + -0.08285620819867 * S_MntSweetProducts 
+ -2.34391341405204 * S_MntWines + 1.28790868462455 * S_NumCatalogPurchases + 
-0.66448120419076 * S_NumDealsPurchases + -0.17691098721908 * S_NumStorePurchases + 
0.46246892093576 * S_NumWebPurchases + 2.06272832836908 * S_NumWebVisitsMonth + 
-2.20357897947054 * S_Recency + -0.21370157733704 * S_Teenhome ;
2804003   +   H1x1_1  = H1x1_1  +    -1.11882466050741 * AcceptedCmp10
2804004   +          +    -0.02672648348788 * AcceptedCmp20  +     -0.9935054015775 *
2804005   +        AcceptedCmp30  +    -0.40619950578221 * AcceptedCmp40
2804006   +          +     0.75861408836828 * AcceptedCmp50  +    -0.08119659353213 *
2804007   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -1.11882466050741 * AcceptedCmp10 + -0.02672648348788 
* AcceptedCmp20 + -0.9935054015775 * AcceptedCmp30 + -0.40619950578221 * AcceptedCmp40 + 
0.75861408836828 * AcceptedCmp50 + -0.08119659353213 * Complain0 ;
2804008   +   H1x1_2  = H1x1_2  +    -1.19874175712489 * AcceptedCmp10
2804009   +          +    -1.39569753392124 * AcceptedCmp20  +    -1.40792768449965 *
2804010   +        AcceptedCmp30  +    -1.33621370186337 * AcceptedCmp40
2804011   +          +    -1.28850585600497 * AcceptedCmp50  +     1.54913459648682 *
2804012   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -1.19874175712489 * AcceptedCmp10 + -1.39569753392124 
* AcceptedCmp20 + -1.40792768449965 * AcceptedCmp30 + -1.33621370186337 * AcceptedCmp40 + 
-1.28850585600497 * AcceptedCmp50 + 1.54913459648682 * Complain0 ;
2804013   +   H1x1_3  = H1x1_3  +      0.8900995500275 * AcceptedCmp10
2804014   +          +     0.63129973315749 * AcceptedCmp20  +    -0.31513199468014 *
2804015   +        AcceptedCmp30  +     0.36000457467611 * AcceptedCmp40
2804016   +          +     0.62901278737039 * AcceptedCmp50  +     0.13436691399472 *
2804017   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.8900995500275 * AcceptedCmp10 + 0.63129973315749 * 
AcceptedCmp20 + -0.31513199468014 * AcceptedCmp30 + 0.36000457467611 * AcceptedCmp40 + 
0.62901278737039 * AcceptedCmp50 + 0.13436691399472 * Complain0 ;
2804018   +   H1x1_4  = H1x1_4  +     -0.4761315940218 * AcceptedCmp10
2804019   +          +     0.04116528443754 * AcceptedCmp20  +    -1.31248665137501 *
2804020   +        AcceptedCmp30  +    -1.13922224536841 * AcceptedCmp40
2804021   +          +    -1.71240975292363 * AcceptedCmp50  +     0.98794736218555 *
2804022   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.4761315940218 * AcceptedCmp10 + 0.04116528443754 * 
AcceptedCmp20 + -1.31248665137501 * AcceptedCmp30 + -1.13922224536841 * AcceptedCmp40 + 
-1.71240975292363 * AcceptedCmp50 + 0.98794736218555 * Complain0 ;
2804023   +   H1x1_1  = H1x1_1  +    -0.19427690904448 * Education2n_Cycle
2804024   +          +    -0.78361431701943 * EducationBasic  +     0.70012279609726 *
2804025   +        EducationGraduation  +    -0.51132563359945 * EducationMaster
2804026   +          +     1.59526812226707 * Marital_StatusDivorced
2804027   +          +    -0.74331656724296 * Marital_StatusMarried
2804028   +          +     0.74316614019998 * Marital_StatusSingle
2804029   +          +    -1.36761487171479 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.19427690904448 * Education2n_Cycle + 
-0.78361431701943 * EducationBasic + 0.70012279609726 * EducationGraduation + 
-0.51132563359945 * EducationMaster + 1.59526812226707 * Marital_StatusDivorced + 
-0.74331656724296 * Marital_StatusMarried + 0.74316614019998 * Marital_StatusSingle + 
-1.36761487171479 * Marital_StatusTogether ;
2804030   +   H1x1_2  = H1x1_2  +    -0.76077191404637 * Education2n_Cycle
2804031   +          +    -0.22680587409979 * EducationBasic  +     0.19812025591093 *
2804032   +        EducationGraduation  +     0.07596142730184 * EducationMaster
2804033   +          +     0.94291322065497 * Marital_StatusDivorced
2804034   +          +    -1.64331597630127 * Marital_StatusMarried
2804035   +          +     2.21526196736604 * Marital_StatusSingle
2804036   +          +    -1.52687548646297 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.76077191404637 * Education2n_Cycle + 
-0.22680587409979 * EducationBasic + 0.19812025591093 * EducationGraduation + 0.07596142730184 
* EducationMaster + 0.94291322065497 * Marital_StatusDivorced + -1.64331597630127 * 
Marital_StatusMarried + 2.21526196736604 * Marital_StatusSingle + -1.52687548646297 * 
Marital_StatusTogether ;
2804037   +   H1x1_3  = H1x1_3  +    -0.22328003539059 * Education2n_Cycle
2804038   +          +    -0.56253476355283 * EducationBasic  +     0.43074608752346 *
2804039   +        EducationGraduation  +    -0.59791003195469 * EducationMaster
2804040   +          +     1.63906979191221 * Marital_StatusDivorced
2804041   +          +    -1.00497354965718 * Marital_StatusMarried
2804042   +          +     0.70485207953497 * Marital_StatusSingle
2804043   +          +    -1.55917756143873 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.22328003539059 * Education2n_Cycle + 
-0.56253476355283 * EducationBasic + 0.43074608752346 * EducationGraduation + 
-0.59791003195469 * EducationMaster + 1.63906979191221 * Marital_StatusDivorced + 
-1.00497354965718 * Marital_StatusMarried + 0.70485207953497 * Marital_StatusSingle + 
-1.55917756143873 * Marital_StatusTogether ;
2804044   +   H1x1_4  = H1x1_4  +     0.85325476712793 * Education2n_Cycle
2804045   +          +    -0.10167049440435 * EducationBasic  +     0.11808465181014 *
2804046   +        EducationGraduation  +     -0.1847363034021 * EducationMaster
2804047   +          +     0.75038128420756 * Marital_StatusDivorced
2804048   +          +    -1.93055855198469 * Marital_StatusMarried
2804049   +          +     0.73816798380254 * Marital_StatusSingle
2804050   +          +    -1.77103687011169 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.85325476712793 * Education2n_Cycle + 
-0.10167049440435 * EducationBasic + 0.11808465181014 * EducationGraduation + -0.1847363034021 
* EducationMaster + 0.75038128420756 * Marital_StatusDivorced + -1.93055855198469 * 
Marital_StatusMarried + 0.73816798380254 * Marital_StatusSingle + -1.77103687011169 * 
Marital_StatusTogether ;
2804051   +   H1x1_1  =    -0.97292943558748 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.97292943558748 + H1x1_1 ;
2804052   +   H1x1_2  =      -0.767474595653 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.767474595653 + H1x1_2 ;
2804053   +   H1x1_3  =    -1.54289542125346 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -1.54289542125346 + H1x1_3 ;
2804054   +   H1x1_4  =     0.11531219453063 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.11531219453063 + H1x1_4 ;
2804055   +   H1x1_5  = 0;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0;
2804056   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 );
2804057   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2804058   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
2804059   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
2804060   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
2804061   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
2804062   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
2804063   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
2804064   +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
2804065   +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
2804066   +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
2804067   +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
2804068   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
2804069   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
2804070   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
2804071   +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
2804072   +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
2804073   +END;
MPRINT(EM_DIAGRAM):   END;
2804074   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2804075   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2804076   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2804077   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2804078   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2804079   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
2804080   +END;
MPRINT(EM_DIAGRAM):   END;
2804081   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2804082   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2804083   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2804084   +
2804085   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2804086   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2804087   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2804088   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2804089   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2804090   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2804091   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2804092   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2804093   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2804094   +end;
MPRINT(EM_DIAGRAM):   end;
2804095   +else do;
MPRINT(EM_DIAGRAM):   else do;
2804096   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2804097   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2804098   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2804099   +   end;
MPRINT(EM_DIAGRAM):   end;
2804100   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2804101   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2804102   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2804103   +   end;
MPRINT(EM_DIAGRAM):   end;
2804104   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2804105   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2804106   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2804107   +   end;
MPRINT(EM_DIAGRAM):   end;
2804108   +end;
MPRINT(EM_DIAGRAM):   end;
2804109   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2804110   +   P_DepVar1  =     4.87259918787296 * H1x1_1  +     21.0865386977957 * H1x1_2
2804111   +          +    -8.49666483029666 * H1x1_3  +     4.50140461489884 * H1x1_4
2804112   +          +    -19.2888668755466 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 4.87259918787296 * H1x1_1 + 21.0865386977957 * H1x1_2 + 
-8.49666483029666 * H1x1_3 + 4.50140461489884 * H1x1_4 + -19.2888668755466 * H1x1_5 ;
2804113   +   P_DepVar1  =     0.94995870883169 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.94995870883169 + P_DepVar1 ;
2804114   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2804115   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2804116   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2804117   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2804118   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2804119   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2804120   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2804121   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2804122   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2804123   +END;
MPRINT(EM_DIAGRAM):   END;
2804124   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2804125   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2804126   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2804127   +END;
MPRINT(EM_DIAGRAM):   END;
2804128   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2804129   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2804130   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2804131   +END;
MPRINT(EM_DIAGRAM):   END;
2804132   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2804133   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2804134   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2804135   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2804136   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2804137   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2804138   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2804139   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2804140   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2804141   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2804142   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2804143   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2804144   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2804145   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2804146   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2804147   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2804148   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2804149   +END;
MPRINT(EM_DIAGRAM):   END;
2804150   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2804151   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2804152   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2804153   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2804154    run;

NOTE: DATA STEP view saved on file EMWS8.AUTONEURAL41_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.META2_VALIDATE.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2804155    quit;
2804156    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
2804157    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
2804158    * AutoNeural41: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * AutoNeural41: Computing metadata for TRAIN data;
2804159    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS8.AUTONEURAL41_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural41\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.AutoNeural41_TRAIN out=_tempAdvisor 
noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.AutoNeural41_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.AutoNeural41_TRAIN out=WORK.M2MZK8WA 
noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2MZK8WA;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M2MZK8WA(keep=name type length label format formatl 
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = 
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2MZK8WA;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M2MZK8WA;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M1E1H58L NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1E1H58L;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M1E1H58L;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M32R1DRN(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M1E1H58L;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1E1H58L;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M1E1H58L;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = 
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) 
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" 
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then 
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ 
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1E1H58L;
MPRINT(EMADVISECOLUMNS):   set WORK.M1E1H58L;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Meta2_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Meta2_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural41_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT 
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "AutoNeural41";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "AutoNeural41";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "AutoNeural41";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "AutoNeural41";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "AutoNeural41";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "AutoNeural41";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "AutoNeural41";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "AutoNeural41";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "AutoNeural41";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "AutoNeural41";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * AutoNeural41: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
2804471    data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
2804472    set EMWS8.AutoNeural41_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural41_EMINFO;
2804473    where DATA='AutoNeural41' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='AutoNeural41' and KEY ^in('DECDATA', 'DECMETA', 
'IMPORTANCE', 'MODEL');
2804474    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.AUTONEURAL41_EMINFO.
      WHERE (DATA='AutoNeural41') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2804475    data EMWS8.AutoNeural41_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural41_EMINFO;
2804476    length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
2804477    input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
2804478    cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS8.AUTONEURAL41_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   run;
2804482    run;
2804483    data EMWS8.AutoNeural41_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural41_EMINFO;
2804484    set EMWS8.AutoNeural41_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural41_EMINFO WORK.MODELTEMP_INFO;
2804485    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.AUTONEURAL41_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.AUTONEURAL41_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2804486    proc sort data = EMWS8.AutoNeural41_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.AutoNeural41_EMINFO NOTHREADS;
2804487    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
2804488    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.AUTONEURAL41_EMINFO.
NOTE: The data set EMWS8.AUTONEURAL41_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2804489    proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
2804490    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
2804491    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS8.FIMPORT_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2804492    proc sort data = EMWS8.AutoNeural41_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.AutoNeural41_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
2804493    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
2804494    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.AUTONEURAL41_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2804495    data EMWS8.AutoNeural41_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural41_EMINFO;
2804496    merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
2804497    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
2804498    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.AUTONEURAL41_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2804499    proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
2804500    delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
2804501    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
2804502    quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
      

NOTE: View EMWS8.AUTONEURAL41_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: View EMWS8.AUTONEURAL41_VALIDATE.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
