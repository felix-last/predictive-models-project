MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "19.37 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                28. April 2016
Time:                19.37 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O3FXLPKW 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural41\EMSCORE.out" encoding="UTF-8" 
NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O3FXLPKW new;
MPRINT(EM_DIAGRAM):   run;
462454     filename emflow
462454   ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural41\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural41\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * AutoNeural41: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
462455     *------------------------------------------------------------*;
462456     * AutoNeural41: Scoring DATA data;
462457     *------------------------------------------------------------*;
462458     data EMWS8.AutoNeural41_TRAIN
462459     / view=EMWS8.AutoNeural41_TRAIN
462460     ;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural41_TRAIN / view=EMWS8.AutoNeural41_TRAIN ;
462461     set EMWS8.Meta2_TRAIN
462462     ;
MPRINT(EM_DIAGRAM):   set EMWS8.Meta2_TRAIN ;
462463     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural41\EMFLOWSCORE.sas.
462464    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
462465    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
462466    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
462467    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
462468    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
462469    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
462470    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
462471    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
462472    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
462473    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
462474    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
462475    +LENGTH _WARN_ $4
462476    +      F_DepVar  $ 12
462477    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
462478    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
462479    +
462480    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
462481    +
462482    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
462483    +
462484    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
462485    +
462486    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
462487    +
462488    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
462489    +
462490    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
462491    +
462492    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
462493    +
462494    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
462495    +
462496    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
462497    +
462498    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
462499    +
462500    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
462501    +
462502    +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
462503    +
462504    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
462505    +
462506    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
462507    +
462508    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
462509    +
462510    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
462511    +
462512    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
462513    +
462514    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
462515    +
462516    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
462517    +
462518    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
462519    +
462520    +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
462521    +
462522    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
462523    +
462524    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
462525    +
462526    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
462527    +
462528    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
462529    +
462530    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
462531    +
462532    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
462533    +
462534    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
462535    +
462536    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
462537    +
462538    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
462539    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
462540    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
462541    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
462542    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
462543    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
462544    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
462545    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
462546    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
462547    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
462548    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
462549    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
462550    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
462551    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
462552    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
462553    +end;
MPRINT(EM_DIAGRAM):   end;
462554    +else do;
MPRINT(EM_DIAGRAM):   else do;
462555    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
462556    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
462557    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
462558    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
462559    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
462560    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
462561    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
462562    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
462563    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
462564    +         end;
MPRINT(EM_DIAGRAM):   end;
462565    +         else do;
MPRINT(EM_DIAGRAM):   else do;
462566    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
462567    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
462568    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
462569    +            end;
MPRINT(EM_DIAGRAM):   end;
462570    +         end;
MPRINT(EM_DIAGRAM):   end;
462571    +      end;
MPRINT(EM_DIAGRAM):   end;
462572    +      else do;
MPRINT(EM_DIAGRAM):   else do;
462573    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
462574    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
462575    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
462576    +         end;
MPRINT(EM_DIAGRAM):   end;
462577    +      end;
MPRINT(EM_DIAGRAM):   end;
462578    +   end;
MPRINT(EM_DIAGRAM):   end;
462579    +   else do;
MPRINT(EM_DIAGRAM):   else do;
462580    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
462581    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
462582    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
462583    +      end;
MPRINT(EM_DIAGRAM):   end;
462584    +      else do;
MPRINT(EM_DIAGRAM):   else do;
462585    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
462586    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
462587    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
462588    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
462589    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
462590    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
462591    +         end;
MPRINT(EM_DIAGRAM):   end;
462592    +      end;
MPRINT(EM_DIAGRAM):   end;
462593    +   end;
MPRINT(EM_DIAGRAM):   end;
462594    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
462595    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
462596    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
462597    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
462598    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
462599    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
462600    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
462601    +   end;
MPRINT(EM_DIAGRAM):   end;
462602    +end;
MPRINT(EM_DIAGRAM):   end;
462603    +
462604    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
462605    +*** Checking missing input Interval
462606    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
462607    +
462608    +IF NMISS(
462609    +   AcceptedCmpTotal ,
462610    +   Frq ,
462611    +   Income ,
462612    +   Mnt ,
462613    +   MntGoldProds ,
462614    +   MntMeatProducts ,
462615    +   NumCatalogPurchases ,
462616    +   NumDealsPurchases ,
462617    +   NumWebVisitsMonth ,
462618    +   RFMstat ,
462619    +   Recency ,
462620    +   Teenhome ,
462621    +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntGoldProds , 
MntMeatProducts , NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , RFMstat , 
Recency , Teenhome , Year_Birth ) THEN DO;
462622    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
462623    +
462624    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
462625    +END;
MPRINT(EM_DIAGRAM):   END;
462626    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
462627    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
462628    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
462629    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
462630    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
462631    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
462632    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
462633    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
462634    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
462635    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
462636    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
462637    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
462638    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
462639    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
462640    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
462641    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
462642    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
462643    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
462644    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
462645    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
462646    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
462647    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
462648    +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
462649    +END;
MPRINT(EM_DIAGRAM):   END;
462650    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
462651    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
462652    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
462653    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
462654    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
462655    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
462656    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
462657    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
462658    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
462659    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
462660    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
462661    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
462662    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
462663    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
462664    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
462665    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
462666    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
462667    +   ELSE S_NumCatalogPurchases
462668    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
462669    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
462670    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
462671    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
462672    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
462673    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
462674    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
462675    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
462676    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
462677    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
462678    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
462679    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
462680    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
462681    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
462682    +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
462683    +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
462684    +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
462685    +END;
MPRINT(EM_DIAGRAM):   END;
462686    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
462687    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
462688    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
462689    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
462690    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
462691    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
462692    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
462693    +   H1x1_1  =     0.27619305633764 * S_AcceptedCmpTotal
462694    +          +    -0.11236902682497 * S_Frq  +     0.02547336321659 * S_Income
462695    +          +     1.22594163788316 * S_Mnt  +    -0.13304067437519 *
462696    +        S_MntGoldProds  +    -0.25318386797622 * S_MntMeatProducts
462697    +          +     0.18813452089487 * S_NumCatalogPurchases
462698    +          +     0.07572009513796 * S_NumDealsPurchases
462699    +          +     0.26290613719398 * S_NumWebVisitsMonth
462700    +          +    -0.07407700105008 * S_RFMstat  +    -0.42371914006256 *
462701    +        S_Recency  +    -0.08184869022013 * S_Teenhome
462702    +          +     0.01152140021328 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.27619305633764 * S_AcceptedCmpTotal + -0.11236902682497 * 
S_Frq + 0.02547336321659 * S_Income + 1.22594163788316 * S_Mnt + -0.13304067437519 * 
S_MntGoldProds + -0.25318386797622 * S_MntMeatProducts + 0.18813452089487 * 
S_NumCatalogPurchases + 0.07572009513796 * S_NumDealsPurchases + 0.26290613719398 * 
S_NumWebVisitsMonth + -0.07407700105008 * S_RFMstat + -0.42371914006256 * S_Recency + 
-0.08184869022013 * S_Teenhome + 0.01152140021328 * S_Year_Birth ;
462703    +   H1x1_2  =     0.10663705781144 * S_AcceptedCmpTotal
462704    +          +     -1.0540282734074 * S_Frq  +    -0.11987114679821 * S_Income
462705    +          +     0.64876951297444 * S_Mnt  +     0.19900484060335 *
462706    +        S_MntGoldProds  +     0.97085619241432 * S_MntMeatProducts
462707    +          +      0.3860900431806 * S_NumCatalogPurchases
462708    +          +    -0.05602869666287 * S_NumDealsPurchases
462709    +          +     0.25751125196672 * S_NumWebVisitsMonth
462710    +          +     0.02624606311455 * S_RFMstat  +    -0.13483172331925 *
462711    +        S_Recency  +     0.00740928227007 * S_Teenhome
462712    +          +     0.00743631640493 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.10663705781144 * S_AcceptedCmpTotal + -1.0540282734074 * 
S_Frq + -0.11987114679821 * S_Income + 0.64876951297444 * S_Mnt + 0.19900484060335 * 
S_MntGoldProds + 0.97085619241432 * S_MntMeatProducts + 0.3860900431806 * 
S_NumCatalogPurchases + -0.05602869666287 * S_NumDealsPurchases + 0.25751125196672 * 
S_NumWebVisitsMonth + 0.02624606311455 * S_RFMstat + -0.13483172331925 * S_Recency + 
0.00740928227007 * S_Teenhome + 0.00743631640493 * S_Year_Birth ;
462713    +   H1x1_3  =     0.25721067351974 * S_AcceptedCmpTotal
462714    +          +    -0.86907357751772 * S_Frq  +    -0.08157123692791 * S_Income
462715    +          +     0.01248777269658 * S_Mnt  +     0.05157436079695 *
462716    +        S_MntGoldProds  +     0.77615263309304 * S_MntMeatProducts
462717    +          +     0.20017136343834 * S_NumCatalogPurchases
462718    +          +      0.4177949842415 * S_NumDealsPurchases
462719    +          +     0.12267139708832 * S_NumWebVisitsMonth
462720    +          +    -0.04813980569775 * S_RFMstat  +    -0.35935125476541 *
462721    +        S_Recency  +    -0.04165775695782 * S_Teenhome
462722    +          +    -0.02142572027654 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.25721067351974 * S_AcceptedCmpTotal + -0.86907357751772 * 
S_Frq + -0.08157123692791 * S_Income + 0.01248777269658 * S_Mnt + 0.05157436079695 * 
S_MntGoldProds + 0.77615263309304 * S_MntMeatProducts + 0.20017136343834 * 
S_NumCatalogPurchases + 0.4177949842415 * S_NumDealsPurchases + 0.12267139708832 * 
S_NumWebVisitsMonth + -0.04813980569775 * S_RFMstat + -0.35935125476541 * S_Recency + 
-0.04165775695782 * S_Teenhome + -0.02142572027654 * S_Year_Birth ;
462723    +   H1x1_4  =    -0.14554708768829 * S_AcceptedCmpTotal
462724    +          +     -0.0597172306674 * S_Frq  +    -0.28285875178634 * S_Income
462725    +          +     1.04591505007314 * S_Mnt  +     0.00461806901547 *
462726    +        S_MntGoldProds  +    -0.61862352433469 * S_MntMeatProducts
462727    +          +    -0.41475045310519 * S_NumCatalogPurchases
462728    +          +     0.05270183882345 * S_NumDealsPurchases
462729    +          +     -0.3411138782759 * S_NumWebVisitsMonth
462730    +          +    -0.06158026374803 * S_RFMstat  +     0.33899005947536 *
462731    +        S_Recency  +     0.09131411279492 * S_Teenhome
462732    +          +    -0.00935201223775 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.14554708768829 * S_AcceptedCmpTotal + -0.0597172306674 * 
S_Frq + -0.28285875178634 * S_Income + 1.04591505007314 * S_Mnt + 0.00461806901547 * 
S_MntGoldProds + -0.61862352433469 * S_MntMeatProducts + -0.41475045310519 * 
S_NumCatalogPurchases + 0.05270183882345 * S_NumDealsPurchases + -0.3411138782759 * 
S_NumWebVisitsMonth + -0.06158026374803 * S_RFMstat + 0.33899005947536 * S_Recency + 
0.09131411279492 * S_Teenhome + -0.00935201223775 * S_Year_Birth ;
462733    +   H1x1_5  =     0.19976617457438 * S_AcceptedCmpTotal
462734    +          +    -0.47746743016353 * S_Frq  +     0.16855808605754 * S_Income
462735    +          +    -0.87114248882356 * S_Mnt  +     0.16259754490995 *
462736    +        S_MntGoldProds  +     0.11590070773645 * S_MntMeatProducts
462737    +          +     0.28201604995327 * S_NumCatalogPurchases
462738    +          +     -0.0106712941301 * S_NumDealsPurchases
462739    +          +     0.44937825968958 * S_NumWebVisitsMonth
462740    +          +     0.00709750447129 * S_RFMstat  +    -0.47138460185175 *
462741    +        S_Recency  +    -0.07776231003236 * S_Teenhome
462742    +          +    -0.02330056365233 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0.19976617457438 * S_AcceptedCmpTotal + -0.47746743016353 * 
S_Frq + 0.16855808605754 * S_Income + -0.87114248882356 * S_Mnt + 0.16259754490995 * 
S_MntGoldProds + 0.11590070773645 * S_MntMeatProducts + 0.28201604995327 * 
S_NumCatalogPurchases + -0.0106712941301 * S_NumDealsPurchases + 0.44937825968958 * 
S_NumWebVisitsMonth + 0.00709750447129 * S_RFMstat + -0.47138460185175 * S_Recency + 
-0.07776231003236 * S_Teenhome + -0.02330056365233 * S_Year_Birth ;
462743    +   H1x1_1  = H1x1_1  +    -0.29133741090287 * Marital_StatusDivorced
462744    +          +     -0.2248578245828 * Marital_StatusMarried
462745    +          +     0.07509958702397 * Marital_StatusSingle
462746    +          +    -0.12991422082545 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.29133741090287 * Marital_StatusDivorced + 
-0.2248578245828 * Marital_StatusMarried + 0.07509958702397 * Marital_StatusSingle + 
-0.12991422082545 * Marital_StatusTogether ;
462747    +   H1x1_2  = H1x1_2  +     -1.1074732716993 * Marital_StatusDivorced
462748    +          +     0.45662921783631 * Marital_StatusMarried
462749    +          +     -0.7587900494362 * Marital_StatusSingle
462750    +          +     0.91918379082777 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -1.1074732716993 * Marital_StatusDivorced + 
0.45662921783631 * Marital_StatusMarried + -0.7587900494362 * Marital_StatusSingle + 
0.91918379082777 * Marital_StatusTogether ;
462751    +   H1x1_3  = H1x1_3  +    -0.00289956415432 * Marital_StatusDivorced
462752    +          +     0.48232640763102 * Marital_StatusMarried
462753    +          +    -0.26767355443511 * Marital_StatusSingle
462754    +          +     0.26207298280723 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.00289956415432 * Marital_StatusDivorced + 
0.48232640763102 * Marital_StatusMarried + -0.26767355443511 * Marital_StatusSingle + 
0.26207298280723 * Marital_StatusTogether ;
462755    +   H1x1_4  = H1x1_4  +    -0.33422568214247 * Marital_StatusDivorced
462756    +          +       0.692510056964 * Marital_StatusMarried
462757    +          +    -0.62467969689335 * Marital_StatusSingle
462758    +          +     0.57377256791387 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.33422568214247 * Marital_StatusDivorced + 
0.692510056964 * Marital_StatusMarried + -0.62467969689335 * Marital_StatusSingle + 
0.57377256791387 * Marital_StatusTogether ;
462759    +   H1x1_5  = H1x1_5  +     0.08963617061236 * Marital_StatusDivorced
462760    +          +    -0.12414433690654 * Marital_StatusMarried
462761    +          +     0.01287765001755 * Marital_StatusSingle
462762    +          +    -0.08087882377532 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 0.08963617061236 * Marital_StatusDivorced + 
-0.12414433690654 * Marital_StatusMarried + 0.01287765001755 * Marital_StatusSingle + 
-0.08087882377532 * Marital_StatusTogether ;
462763    +   H1x1_1  =    -1.91971008925725 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.91971008925725 + H1x1_1 ;
462764    +   H1x1_2  =     0.32368735038167 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.32368735038167 + H1x1_2 ;
462765    +   H1x1_3  =    -1.01494899635831 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -1.01494899635831 + H1x1_3 ;
462766    +   H1x1_4  =     0.37995275511318 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.37995275511318 + H1x1_4 ;
462767    +   H1x1_5  =     0.85001953980369 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0.85001953980369 + H1x1_5 ;
462768    +   H1x1_1  = SIN(H1x1_1 );
MPRINT(EM_DIAGRAM):   H1x1_1 = SIN(H1x1_1 );
462769    +   H1x1_2  = SIN(H1x1_2 );
MPRINT(EM_DIAGRAM):   H1x1_2 = SIN(H1x1_2 );
462770    +   H1x1_3  = SIN(H1x1_3 );
MPRINT(EM_DIAGRAM):   H1x1_3 = SIN(H1x1_3 );
462771    +   H1x1_4  = SIN(H1x1_4 );
MPRINT(EM_DIAGRAM):   H1x1_4 = SIN(H1x1_4 );
462772    +   H1x1_5  = SIN(H1x1_5 );
MPRINT(EM_DIAGRAM):   H1x1_5 = SIN(H1x1_5 );
462773    +END;
MPRINT(EM_DIAGRAM):   END;
462774    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
462775    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
462776    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
462777    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
462778    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
462779    +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
462780    +END;
MPRINT(EM_DIAGRAM):   END;
462781    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
462782    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
462783    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
462784    +
462785    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
462786    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
462787    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
462788    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
462789    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
462790    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
462791    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
462792    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
462793    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
462794    +end;
MPRINT(EM_DIAGRAM):   end;
462795    +else do;
MPRINT(EM_DIAGRAM):   else do;
462796    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
462797    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
462798    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
462799    +   end;
MPRINT(EM_DIAGRAM):   end;
462800    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
462801    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
462802    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
462803    +   end;
MPRINT(EM_DIAGRAM):   end;
462804    +   else do;
MPRINT(EM_DIAGRAM):   else do;
462805    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
462806    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
462807    +   end;
MPRINT(EM_DIAGRAM):   end;
462808    +end;
MPRINT(EM_DIAGRAM):   end;
462809    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
462810    +   P_DepVar1  =     70.1947351743048 * H1x1_1  +     37.5347968698288 * H1x1_2
462811    +          +     63.5093925909107 * H1x1_3  +    -88.4297436279603 * H1x1_4
462812    +          +     56.9032773964405 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 70.1947351743048 * H1x1_1 + 37.5347968698288 * H1x1_2 + 
63.5093925909107 * H1x1_3 + -88.4297436279603 * H1x1_4 + 56.9032773964405 * H1x1_5 ;
462813    +   P_DepVar1  =     22.2427233048176 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 22.2427233048176 + P_DepVar1 ;
462814    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
462815    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
462816    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
462817    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
462818    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
462819    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
462820    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
462821    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
462822    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
462823    +END;
MPRINT(EM_DIAGRAM):   END;
462824    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
462825    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
462826    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
462827    +END;
MPRINT(EM_DIAGRAM):   END;
462828    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
462829    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
462830    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
462831    +END;
MPRINT(EM_DIAGRAM):   END;
462832    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
462833    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
462834    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
462835    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
462836    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
462837    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
462838    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
462839    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
462840    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
462841    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
462842    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
462843    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
462844    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
462845    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
462846    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
462847    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
462848    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
462849    +END;
MPRINT(EM_DIAGRAM):   END;
462850    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
462851    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
462852    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
462853    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
462854     run;

NOTE: DATA STEP view saved on file EMWS8.AUTONEURAL41_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.META2_TRAIN.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
462855     quit;
462856     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
462857     filename emflow
462857   ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural41\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural41\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * AutoNeural41: Scoring VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
462858     *------------------------------------------------------------*;
462859     * AutoNeural41: Scoring VALIDATE data;
462860     *------------------------------------------------------------*;
462861     data EMWS8.AutoNeural41_VALIDATE
462862     / view=EMWS8.AutoNeural41_VALIDATE
462863     ;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural41_VALIDATE / view=EMWS8.AutoNeural41_VALIDATE ;
462864     set EMWS8.Meta2_VALIDATE
462865     ;
MPRINT(EM_DIAGRAM):   set EMWS8.Meta2_VALIDATE ;
462866     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural41\EMFLOWSCORE.sas.
462867    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
462868    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
462869    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
462870    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
462871    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
462872    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
462873    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
462874    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
462875    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
462876    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
462877    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
462878    +LENGTH _WARN_ $4
462879    +      F_DepVar  $ 12
462880    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
462881    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
462882    +
462883    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
462884    +
462885    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
462886    +
462887    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
462888    +
462889    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
462890    +
462891    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
462892    +
462893    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
462894    +
462895    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
462896    +
462897    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
462898    +
462899    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
462900    +
462901    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
462902    +
462903    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
462904    +
462905    +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
462906    +
462907    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
462908    +
462909    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
462910    +
462911    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
462912    +
462913    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
462914    +
462915    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
462916    +
462917    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
462918    +
462919    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
462920    +
462921    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
462922    +
462923    +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
462924    +
462925    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
462926    +
462927    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
462928    +
462929    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
462930    +
462931    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
462932    +
462933    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
462934    +
462935    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
462936    +
462937    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
462938    +
462939    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
462940    +
462941    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
462942    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
462943    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
462944    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
462945    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
462946    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
462947    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
462948    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
462949    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
462950    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
462951    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
462952    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
462953    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
462954    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
462955    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
462956    +end;
MPRINT(EM_DIAGRAM):   end;
462957    +else do;
MPRINT(EM_DIAGRAM):   else do;
462958    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
462959    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
462960    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
462961    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
462962    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
462963    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
462964    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
462965    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
462966    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
462967    +         end;
MPRINT(EM_DIAGRAM):   end;
462968    +         else do;
MPRINT(EM_DIAGRAM):   else do;
462969    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
462970    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
462971    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
462972    +            end;
MPRINT(EM_DIAGRAM):   end;
462973    +         end;
MPRINT(EM_DIAGRAM):   end;
462974    +      end;
MPRINT(EM_DIAGRAM):   end;
462975    +      else do;
MPRINT(EM_DIAGRAM):   else do;
462976    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
462977    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
462978    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
462979    +         end;
MPRINT(EM_DIAGRAM):   end;
462980    +      end;
MPRINT(EM_DIAGRAM):   end;
462981    +   end;
MPRINT(EM_DIAGRAM):   end;
462982    +   else do;
MPRINT(EM_DIAGRAM):   else do;
462983    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
462984    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
462985    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
462986    +      end;
MPRINT(EM_DIAGRAM):   end;
462987    +      else do;
MPRINT(EM_DIAGRAM):   else do;
462988    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
462989    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
462990    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
462991    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
462992    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
462993    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
462994    +         end;
MPRINT(EM_DIAGRAM):   end;
462995    +      end;
MPRINT(EM_DIAGRAM):   end;
462996    +   end;
MPRINT(EM_DIAGRAM):   end;
462997    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
462998    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
462999    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
463000    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
463001    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
463002    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
463003    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
463004    +   end;
MPRINT(EM_DIAGRAM):   end;
463005    +end;
MPRINT(EM_DIAGRAM):   end;
463006    +
463007    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
463008    +*** Checking missing input Interval
463009    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
463010    +
463011    +IF NMISS(
463012    +   AcceptedCmpTotal ,
463013    +   Frq ,
463014    +   Income ,
463015    +   Mnt ,
463016    +   MntGoldProds ,
463017    +   MntMeatProducts ,
463018    +   NumCatalogPurchases ,
463019    +   NumDealsPurchases ,
463020    +   NumWebVisitsMonth ,
463021    +   RFMstat ,
463022    +   Recency ,
463023    +   Teenhome ,
463024    +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntGoldProds , 
MntMeatProducts , NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , RFMstat , 
Recency , Teenhome , Year_Birth ) THEN DO;
463025    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
463026    +
463027    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
463028    +END;
MPRINT(EM_DIAGRAM):   END;
463029    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
463030    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
463031    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
463032    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
463033    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
463034    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
463035    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
463036    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
463037    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
463038    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
463039    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
463040    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
463041    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
463042    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
463043    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
463044    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
463045    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
463046    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
463047    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
463048    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
463049    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
463050    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
463051    +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
463052    +END;
MPRINT(EM_DIAGRAM):   END;
463053    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
463054    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
463055    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
463056    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
463057    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
463058    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
463059    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
463060    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
463061    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
463062    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
463063    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
463064    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
463065    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
463066    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
463067    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
463068    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
463069    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
463070    +   ELSE S_NumCatalogPurchases
463071    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
463072    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
463073    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
463074    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
463075    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
463076    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
463077    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
463078    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
463079    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
463080    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
463081    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
463082    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
463083    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
463084    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
463085    +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
463086    +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
463087    +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
463088    +END;
MPRINT(EM_DIAGRAM):   END;
463089    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
463090    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
463091    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
463092    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
463093    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
463094    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
463095    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
463096    +   H1x1_1  =     0.27619305633764 * S_AcceptedCmpTotal
463097    +          +    -0.11236902682497 * S_Frq  +     0.02547336321659 * S_Income
463098    +          +     1.22594163788316 * S_Mnt  +    -0.13304067437519 *
463099    +        S_MntGoldProds  +    -0.25318386797622 * S_MntMeatProducts
463100    +          +     0.18813452089487 * S_NumCatalogPurchases
463101    +          +     0.07572009513796 * S_NumDealsPurchases
463102    +          +     0.26290613719398 * S_NumWebVisitsMonth
463103    +          +    -0.07407700105008 * S_RFMstat  +    -0.42371914006256 *
463104    +        S_Recency  +    -0.08184869022013 * S_Teenhome
463105    +          +     0.01152140021328 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.27619305633764 * S_AcceptedCmpTotal + -0.11236902682497 * 
S_Frq + 0.02547336321659 * S_Income + 1.22594163788316 * S_Mnt + -0.13304067437519 * 
S_MntGoldProds + -0.25318386797622 * S_MntMeatProducts + 0.18813452089487 * 
S_NumCatalogPurchases + 0.07572009513796 * S_NumDealsPurchases + 0.26290613719398 * 
S_NumWebVisitsMonth + -0.07407700105008 * S_RFMstat + -0.42371914006256 * S_Recency + 
-0.08184869022013 * S_Teenhome + 0.01152140021328 * S_Year_Birth ;
463106    +   H1x1_2  =     0.10663705781144 * S_AcceptedCmpTotal
463107    +          +     -1.0540282734074 * S_Frq  +    -0.11987114679821 * S_Income
463108    +          +     0.64876951297444 * S_Mnt  +     0.19900484060335 *
463109    +        S_MntGoldProds  +     0.97085619241432 * S_MntMeatProducts
463110    +          +      0.3860900431806 * S_NumCatalogPurchases
463111    +          +    -0.05602869666287 * S_NumDealsPurchases
463112    +          +     0.25751125196672 * S_NumWebVisitsMonth
463113    +          +     0.02624606311455 * S_RFMstat  +    -0.13483172331925 *
463114    +        S_Recency  +     0.00740928227007 * S_Teenhome
463115    +          +     0.00743631640493 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.10663705781144 * S_AcceptedCmpTotal + -1.0540282734074 * 
S_Frq + -0.11987114679821 * S_Income + 0.64876951297444 * S_Mnt + 0.19900484060335 * 
S_MntGoldProds + 0.97085619241432 * S_MntMeatProducts + 0.3860900431806 * 
S_NumCatalogPurchases + -0.05602869666287 * S_NumDealsPurchases + 0.25751125196672 * 
S_NumWebVisitsMonth + 0.02624606311455 * S_RFMstat + -0.13483172331925 * S_Recency + 
0.00740928227007 * S_Teenhome + 0.00743631640493 * S_Year_Birth ;
463116    +   H1x1_3  =     0.25721067351974 * S_AcceptedCmpTotal
463117    +          +    -0.86907357751772 * S_Frq  +    -0.08157123692791 * S_Income
463118    +          +     0.01248777269658 * S_Mnt  +     0.05157436079695 *
463119    +        S_MntGoldProds  +     0.77615263309304 * S_MntMeatProducts
463120    +          +     0.20017136343834 * S_NumCatalogPurchases
463121    +          +      0.4177949842415 * S_NumDealsPurchases
463122    +          +     0.12267139708832 * S_NumWebVisitsMonth
463123    +          +    -0.04813980569775 * S_RFMstat  +    -0.35935125476541 *
463124    +        S_Recency  +    -0.04165775695782 * S_Teenhome
463125    +          +    -0.02142572027654 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.25721067351974 * S_AcceptedCmpTotal + -0.86907357751772 * 
S_Frq + -0.08157123692791 * S_Income + 0.01248777269658 * S_Mnt + 0.05157436079695 * 
S_MntGoldProds + 0.77615263309304 * S_MntMeatProducts + 0.20017136343834 * 
S_NumCatalogPurchases + 0.4177949842415 * S_NumDealsPurchases + 0.12267139708832 * 
S_NumWebVisitsMonth + -0.04813980569775 * S_RFMstat + -0.35935125476541 * S_Recency + 
-0.04165775695782 * S_Teenhome + -0.02142572027654 * S_Year_Birth ;
463126    +   H1x1_4  =    -0.14554708768829 * S_AcceptedCmpTotal
463127    +          +     -0.0597172306674 * S_Frq  +    -0.28285875178634 * S_Income
463128    +          +     1.04591505007314 * S_Mnt  +     0.00461806901547 *
463129    +        S_MntGoldProds  +    -0.61862352433469 * S_MntMeatProducts
463130    +          +    -0.41475045310519 * S_NumCatalogPurchases
463131    +          +     0.05270183882345 * S_NumDealsPurchases
463132    +          +     -0.3411138782759 * S_NumWebVisitsMonth
463133    +          +    -0.06158026374803 * S_RFMstat  +     0.33899005947536 *
463134    +        S_Recency  +     0.09131411279492 * S_Teenhome
463135    +          +    -0.00935201223775 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.14554708768829 * S_AcceptedCmpTotal + -0.0597172306674 * 
S_Frq + -0.28285875178634 * S_Income + 1.04591505007314 * S_Mnt + 0.00461806901547 * 
S_MntGoldProds + -0.61862352433469 * S_MntMeatProducts + -0.41475045310519 * 
S_NumCatalogPurchases + 0.05270183882345 * S_NumDealsPurchases + -0.3411138782759 * 
S_NumWebVisitsMonth + -0.06158026374803 * S_RFMstat + 0.33899005947536 * S_Recency + 
0.09131411279492 * S_Teenhome + -0.00935201223775 * S_Year_Birth ;
463136    +   H1x1_5  =     0.19976617457438 * S_AcceptedCmpTotal
463137    +          +    -0.47746743016353 * S_Frq  +     0.16855808605754 * S_Income
463138    +          +    -0.87114248882356 * S_Mnt  +     0.16259754490995 *
463139    +        S_MntGoldProds  +     0.11590070773645 * S_MntMeatProducts
463140    +          +     0.28201604995327 * S_NumCatalogPurchases
463141    +          +     -0.0106712941301 * S_NumDealsPurchases
463142    +          +     0.44937825968958 * S_NumWebVisitsMonth
463143    +          +     0.00709750447129 * S_RFMstat  +    -0.47138460185175 *
463144    +        S_Recency  +    -0.07776231003236 * S_Teenhome
463145    +          +    -0.02330056365233 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0.19976617457438 * S_AcceptedCmpTotal + -0.47746743016353 * 
S_Frq + 0.16855808605754 * S_Income + -0.87114248882356 * S_Mnt + 0.16259754490995 * 
S_MntGoldProds + 0.11590070773645 * S_MntMeatProducts + 0.28201604995327 * 
S_NumCatalogPurchases + -0.0106712941301 * S_NumDealsPurchases + 0.44937825968958 * 
S_NumWebVisitsMonth + 0.00709750447129 * S_RFMstat + -0.47138460185175 * S_Recency + 
-0.07776231003236 * S_Teenhome + -0.02330056365233 * S_Year_Birth ;
463146    +   H1x1_1  = H1x1_1  +    -0.29133741090287 * Marital_StatusDivorced
463147    +          +     -0.2248578245828 * Marital_StatusMarried
463148    +          +     0.07509958702397 * Marital_StatusSingle
463149    +          +    -0.12991422082545 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.29133741090287 * Marital_StatusDivorced + 
-0.2248578245828 * Marital_StatusMarried + 0.07509958702397 * Marital_StatusSingle + 
-0.12991422082545 * Marital_StatusTogether ;
463150    +   H1x1_2  = H1x1_2  +     -1.1074732716993 * Marital_StatusDivorced
463151    +          +     0.45662921783631 * Marital_StatusMarried
463152    +          +     -0.7587900494362 * Marital_StatusSingle
463153    +          +     0.91918379082777 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -1.1074732716993 * Marital_StatusDivorced + 
0.45662921783631 * Marital_StatusMarried + -0.7587900494362 * Marital_StatusSingle + 
0.91918379082777 * Marital_StatusTogether ;
463154    +   H1x1_3  = H1x1_3  +    -0.00289956415432 * Marital_StatusDivorced
463155    +          +     0.48232640763102 * Marital_StatusMarried
463156    +          +    -0.26767355443511 * Marital_StatusSingle
463157    +          +     0.26207298280723 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.00289956415432 * Marital_StatusDivorced + 
0.48232640763102 * Marital_StatusMarried + -0.26767355443511 * Marital_StatusSingle + 
0.26207298280723 * Marital_StatusTogether ;
463158    +   H1x1_4  = H1x1_4  +    -0.33422568214247 * Marital_StatusDivorced
463159    +          +       0.692510056964 * Marital_StatusMarried
463160    +          +    -0.62467969689335 * Marital_StatusSingle
463161    +          +     0.57377256791387 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.33422568214247 * Marital_StatusDivorced + 
0.692510056964 * Marital_StatusMarried + -0.62467969689335 * Marital_StatusSingle + 
0.57377256791387 * Marital_StatusTogether ;
463162    +   H1x1_5  = H1x1_5  +     0.08963617061236 * Marital_StatusDivorced
463163    +          +    -0.12414433690654 * Marital_StatusMarried
463164    +          +     0.01287765001755 * Marital_StatusSingle
463165    +          +    -0.08087882377532 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 0.08963617061236 * Marital_StatusDivorced + 
-0.12414433690654 * Marital_StatusMarried + 0.01287765001755 * Marital_StatusSingle + 
-0.08087882377532 * Marital_StatusTogether ;
463166    +   H1x1_1  =    -1.91971008925725 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.91971008925725 + H1x1_1 ;
463167    +   H1x1_2  =     0.32368735038167 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.32368735038167 + H1x1_2 ;
463168    +   H1x1_3  =    -1.01494899635831 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -1.01494899635831 + H1x1_3 ;
463169    +   H1x1_4  =     0.37995275511318 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.37995275511318 + H1x1_4 ;
463170    +   H1x1_5  =     0.85001953980369 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0.85001953980369 + H1x1_5 ;
463171    +   H1x1_1  = SIN(H1x1_1 );
MPRINT(EM_DIAGRAM):   H1x1_1 = SIN(H1x1_1 );
463172    +   H1x1_2  = SIN(H1x1_2 );
MPRINT(EM_DIAGRAM):   H1x1_2 = SIN(H1x1_2 );
463173    +   H1x1_3  = SIN(H1x1_3 );
MPRINT(EM_DIAGRAM):   H1x1_3 = SIN(H1x1_3 );
463174    +   H1x1_4  = SIN(H1x1_4 );
MPRINT(EM_DIAGRAM):   H1x1_4 = SIN(H1x1_4 );
463175    +   H1x1_5  = SIN(H1x1_5 );
MPRINT(EM_DIAGRAM):   H1x1_5 = SIN(H1x1_5 );
463176    +END;
MPRINT(EM_DIAGRAM):   END;
463177    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
463178    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
463179    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
463180    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
463181    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
463182    +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
463183    +END;
MPRINT(EM_DIAGRAM):   END;
463184    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
463185    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
463186    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
463187    +
463188    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
463189    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
463190    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
463191    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
463192    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
463193    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
463194    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
463195    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
463196    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
463197    +end;
MPRINT(EM_DIAGRAM):   end;
463198    +else do;
MPRINT(EM_DIAGRAM):   else do;
463199    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
463200    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
463201    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
463202    +   end;
MPRINT(EM_DIAGRAM):   end;
463203    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
463204    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
463205    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
463206    +   end;
MPRINT(EM_DIAGRAM):   end;
463207    +   else do;
MPRINT(EM_DIAGRAM):   else do;
463208    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
463209    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
463210    +   end;
MPRINT(EM_DIAGRAM):   end;
463211    +end;
MPRINT(EM_DIAGRAM):   end;
463212    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
463213    +   P_DepVar1  =     70.1947351743048 * H1x1_1  +     37.5347968698288 * H1x1_2
463214    +          +     63.5093925909107 * H1x1_3  +    -88.4297436279603 * H1x1_4
463215    +          +     56.9032773964405 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 70.1947351743048 * H1x1_1 + 37.5347968698288 * H1x1_2 + 
63.5093925909107 * H1x1_3 + -88.4297436279603 * H1x1_4 + 56.9032773964405 * H1x1_5 ;
463216    +   P_DepVar1  =     22.2427233048176 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 22.2427233048176 + P_DepVar1 ;
463217    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
463218    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
463219    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
463220    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
463221    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
463222    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
463223    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
463224    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
463225    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
463226    +END;
MPRINT(EM_DIAGRAM):   END;
463227    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
463228    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
463229    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
463230    +END;
MPRINT(EM_DIAGRAM):   END;
463231    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
463232    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
463233    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
463234    +END;
MPRINT(EM_DIAGRAM):   END;
463235    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
463236    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
463237    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
463238    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
463239    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
463240    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
463241    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
463242    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
463243    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
463244    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
463245    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
463246    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
463247    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
463248    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
463249    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
463250    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
463251    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
463252    +END;
MPRINT(EM_DIAGRAM):   END;
463253    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
463254    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
463255    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
463256    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
463257     run;

NOTE: DATA STEP view saved on file EMWS8.AUTONEURAL41_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.META2_VALIDATE.VIEW used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
463258     quit;
463259     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
463260     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
463261     * AutoNeural41: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * AutoNeural41: Computing metadata for TRAIN data;
463262     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS8.AUTONEURAL41_TRAIN.VIEW used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural41\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.AutoNeural41_TRAIN out=_tempAdvisor 
noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.AutoNeural41_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.AutoNeural41_TRAIN out=WORK.M2WW98PO 
noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2WW98PO;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M2WW98PO(keep=name type length label format formatl 
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = 
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2WW98PO;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M2WW98PO;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M1L6877D NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1L6877D;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M1L6877D;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M38DN2NG(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M1L6877D;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1L6877D;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M1L6877D;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = 
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) 
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" 
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then 
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ 
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1L6877D;
MPRINT(EMADVISECOLUMNS):   set WORK.M1L6877D;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Meta2_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Meta2_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural41_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT 
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "AutoNeural41";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "AutoNeural41";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "AutoNeural41";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "AutoNeural41";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "AutoNeural41";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "AutoNeural41";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "AutoNeural41";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "AutoNeural41";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "AutoNeural41";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "AutoNeural41";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * AutoNeural41: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
463574     data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
463575     set EMWS8.AutoNeural41_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural41_EMINFO;
463576     where DATA='AutoNeural41' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='AutoNeural41' and KEY ^in('DECDATA', 'DECMETA', 
'IMPORTANCE', 'MODEL');
463577     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.AUTONEURAL41_EMINFO.
      WHERE (DATA='AutoNeural41') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

463578     data EMWS8.AutoNeural41_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural41_EMINFO;
463579     length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
463580     input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
463581     cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS8.AUTONEURAL41_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   run;
463585     run;
463586     data EMWS8.AutoNeural41_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural41_EMINFO;
463587     set EMWS8.AutoNeural41_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural41_EMINFO WORK.MODELTEMP_INFO;
463588     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.AUTONEURAL41_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.AUTONEURAL41_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

463589     proc sort data = EMWS8.AutoNeural41_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.AutoNeural41_EMINFO NOTHREADS;
463590     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
463591     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.AUTONEURAL41_EMINFO.
NOTE: The data set EMWS8.AUTONEURAL41_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

463592     proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
463593     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
463594     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS8.FIMPORT_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

463595     proc sort data = EMWS8.AutoNeural41_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.AutoNeural41_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
463596     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
463597     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.AUTONEURAL41_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

463598     data EMWS8.AutoNeural41_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural41_EMINFO;
463599     merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
463600     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
463601     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.AUTONEURAL41_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

463602     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
463603     delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
463604     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
463605     quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

NOTE: View EMWS8.AUTONEURAL41_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: View EMWS8.AUTONEURAL41_VALIDATE.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
